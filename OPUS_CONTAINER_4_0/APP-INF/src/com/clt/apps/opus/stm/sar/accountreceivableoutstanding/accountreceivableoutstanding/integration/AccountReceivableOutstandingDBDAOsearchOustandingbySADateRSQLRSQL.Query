<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccountReceivableOutstandingDBDAOsearchOustandingbySADateRSQLRSQL">
			<desc><![CDATA[outstanding inquiry]]></desc>
			<sql><![CDATA[
SELECT *
FROM (

SELECT ORG_T.*
 ,ROWNUM AS RNUM 
 ,COUNT(*) OVER() AS TOTAL_CNT
#if ( ${startpart} == '1')
 --,COUNT(*) OVER() AS TOTAL_CNT
 ,SUM(TOT_USD)  OVER() AS TOTAL_USD_AMT
 ,SUM(TOT_LCL)  OVER()  AS TOTAL_LCL_AMT
#else
 --,0 AS TOTAL_CNT
 ,0 AS TOTAL_USD_AMT
 ,0 AS TOTAL_LCL_AMT
#end

FROM (

#if ( ${summary_yn} == 'S')
	SELECT  RHQ_CD,  
	        OTS_OFC_CD, 
		#if ( ${kind_3} == 'CUSTOMER')
	       	CUST_CD,
	       	CUST_NM,
	       	CREDIT_CURR_CD,           
	       	CREDIT_LIMIT,
	       	OB_TERM,  
	       	IB_TERM,
	       	CREDIT_FLG,
		#elseif ( ${kind_3} == 'VVD')
			VVD ,	
	    #elseif ( ${kind_3} == 'SALESREP')
			SALE_REP_CD,
	    #elseif ( ${kind_3} == 'SA_DATE')
			SAIL_ARR_DT,
		#elseif ( ${kind_3} == 'HJSREF')
			REF_NO,
		#elseif ( ${kind_3} == 'BLNO' || ${kind_3} == 'INVNO')
		   	BL_NO,
	       	BKG_NO,
	       	INV_NO,  
	       	CUST_CD,
	       	CUST_NM,
	       	--PDL - ref#38078 Invoice Currency 추가
	       	INV_CURR_CD,
			--PDL - ref#38078 Invoice ROE vs Local, Invoice ROE vs USD 추가
       		INV_LOCL_XCH_RT,       
       		INV_USD_XCH_RT,
	       	CREDIT_CURR_CD, 
	       	CREDIT_LIMIT,
	       	OB_TERM,  
	        IB_TERM,
	        CREDIT_FLG, 
	        VVD , 
	        LANE_CD, 
	        BND, 
	        SAIL_ARR_DT, 
	        POR_CD, 
	        POL_CD, 
	        POD_CD, 
	        DEL_CD, 
	        INV_DT, 
	        SVC_SCP_CD, 
	        SALE_REP_CD,
	        REF_NO, 
	        DUE_DT, 
	        OVER_DUE,
	        OTS_GRP_TP_CD, 
	        OTS_TP_CD, 
	        SC_NO, 
	        RMK, 
	        KIND2,
	        AP_AR_OFFST_NO,
		#elseif ( ${kind_3} == 'APAR_OFFSET')
			AP_AR_OFFST_NO,
		#end
		    MAX(EX_RATE)						EX_RATE,
	    	MAX(USD_EQV_LCL)					USD_EQV_LCL,
	    	SUM(INV_TOT_LCL)					INV_TOT_LCL,
	    	SUM(INV_TOT_USD)					INV_TOT_USD,
	    	SUM(RCT_TOT_LCL)					RCT_TOT_LCL,
	    	SUM(RCT_TOT_USD)					RCT_TOT_USD,
	    	SUM(ADJ_TOT_LCL)					ADJ_TOT_LCL,
	    	SUM(ADJ_TOT_USD)					ADJ_TOT_USD,
	    	SUM(TOT_LCL)						TOT_LCL,
	    	SUM(TOT_USD)						TOT_USD,
			SUM(INV_AMT)						INV_AMT,
			SUM(RCT_AMT)						RCT_AMT,
			SUM(ADJ_AMT)						ADJ_AMT,
			SUM(BAL_AMT)						BAL_AMT,
			NVL(OTS_PAY_CD, 'N') 				OTS_PAY_CD,
			ORG_INV_NO
	FROM (
	     SELECT RHQ_CD,  
	    		OTS_OFC_CD, 
			#if ( ${kind_3} == 'CUSTOMER')
	       		CUST_CD,
	       		CUST_NM,
	       		CREDIT_CURR_CD,           
	       		CREDIT_LIMIT,
	       		OB_TERM,  
	       		IB_TERM,
	       		CREDIT_FLG,
			#elseif ( ${kind_3} == 'VVD')
				VVD ,	
	    	#elseif ( ${kind_3} == 'SALESREP')
				SALE_REP_CD,
	    	#elseif ( ${kind_3} == 'SA_DATE')
				SAIL_ARR_DT,
			#elseif ( ${kind_3} == 'HJSREF')
				REF_NO,
			#elseif ( ${kind_3} == 'BLNO' || ${kind_3} == 'INVNO')
		   		BL_NO,
	       		BKG_NO,
	       		INV_NO,  
	       		CUST_CD,
	       		CUST_NM,
	       		--PDL - ref#38078 Invoice Currency 추가
	       		INV_CURR_CD,
				--PDL - ref#38078 Invoice ROE vs Local, Invoice ROE vs USD 추가
       			INV_LOCL_XCH_RT,       
       			INV_USD_XCH_RT,
	       		CREDIT_CURR_CD, 
	       		CREDIT_LIMIT,
	       		OB_TERM,  
	        	IB_TERM,
	        	CREDIT_FLG, 
	        	VVD , 
	        	LANE_CD, 
	        	BND, 
	        	SAIL_ARR_DT, 
	        	POR_CD, 
	        	POL_CD, 
	        	POD_CD, 
	        	DEL_CD, 
	        	INV_DT, 
	        	SVC_SCP_CD, 
	        	SALE_REP_CD,
	        	REF_NO, 
	        	DUE_DT, 
	        	OVER_DUE,
	        	OTS_GRP_TP_CD, 
	        	OTS_TP_CD, 
	        	SC_NO, 
	        	RMK, 
	        	KIND2,
	        	AP_AR_OFFST_NO,
			#elseif ( ${kind_3} == 'APAR_OFFSET')
				AP_AR_OFFST_NO,
			#end
	       		EX_RATE, 
	       		USD_EQV_LCL,      
	       		INV_TOT_LCL,
	       		INV_TOT_USD,
	       		RCT_TOT_LCL,
	       		RCT_TOT_USD,
	       		ADJ_TOT_LCL,
	       		ADJ_TOT_USD,
	       		TOT_LCL,
	       		TOT_USD,
		   		INV_AMT,
		   		RCT_AMT,
		   		ADJ_AMT,
		   		BAL_AMT,
				OTS_PAY_CD,
				ORG_INV_NO	
		 FROM (	    
		       SELECT 	'1' 					SORT_SEQ,
						SOH.RHQ_CD       		RHQ_CD,  
		       			SOH.OTS_OFC_CD   		OTS_OFC_CD, 
					#if ( ${kind_3} == 'CUSTOMER')
		       			SOH.BIL_TO_CUST_CNT_CD||LPAD(SOH.BIL_TO_CUST_SEQ,6, '0') CUST_CD,
		       			MC.CUST_LGL_ENG_NM   	CUST_NM,
		       			MCC.CR_CURR_CD       	CREDIT_CURR_CD,           
		       			MCC.CR_AMT   	        CREDIT_LIMIT,
		       			MCC.OB_CR_TERM_DYS   	OB_TERM,  
		       			MCC.IB_CR_TERM_DYS   	IB_TERM,
		       			MCC.CR_FLG   	        CREDIT_FLG, 
					#elseif ( ${kind_3} == 'VVD')
						SOH.VSL_CD||SOH.SKD_VOY_NO ||SOH.DIR_CD 		VVD ,	
		    		#elseif ( ${kind_3} == 'SALESREP')
						SOH.CUST_SREP_CD								SALE_REP_CD,
		    		#elseif ( ${kind_3} == 'SA_DATE')
						TO_CHAR(TO_DATE(SOH.SAIL_ARR_DT,'YYYY-MM-DD'),'YYYY-MM-DD')      SAIL_ARR_DT,
					#elseif ( ${kind_3} == 'HJSREF')
						SOH.BKG_REF_NO       							REF_NO,
					#elseif ( ${kind_3} == 'BLNO' || ${kind_3} == 'INVNO')
			   			SOH.BL_NO        										BL_NO,
		       			SOH.BKG_NO      	 									BKG_NO,
		       			SOH.INV_NO       										INV_NO,  
		       			SOH.BIL_TO_CUST_CNT_CD||LPAD(SOH.BIL_TO_CUST_SEQ,6, '0') CUST_CD,
		       			MC.CUST_LGL_ENG_NM   									CUST_NM,
						--PDL - ref#38078 Invoice Currency 추가
       					SOH.INV_CURR_CD  										INV_CURR_CD,
						--PDL - ref#38078 Invoice ROE vs Local, Invoice ROE vs USD 추가
		       			ROUND(SOH.INV_LOCL_XCH_RT, 6)							INV_LOCL_XCH_RT,
       					ROUND(SOH.INV_USD_XCH_RT, 6)							INV_USD_XCH_RT,
		       			MCC.CR_CURR_CD       									CREDIT_CURR_CD, 
		       			TO_CHAR(ROUND(NVL(MCC.CR_AMT,0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = NVL(MCC.CR_CURR_CD, SOH.OFC_CURR_CD)),0))) CREDIT_LIMIT,
		       			MCC.OB_CR_TERM_DYS   									OB_TERM,  
		       			MCC.IB_CR_TERM_DYS   									IB_TERM,
		       			MCC.CR_FLG           									CREDIT_FLG, 
		       			SOH.VSL_CD||SOH.SKD_VOY_NO ||SOH.DIR_CD 				VVD , 
		       			SOH.LANE_CD          									LANE_CD, 
		       			SOH.BKG_IO_BND_CD    									BND, 
		       			TO_CHAR(TO_DATE(SOH.SAIL_ARR_DT,'YYYY-MM-DD'),'YYYY-MM-DD')      SAIL_ARR_DT, 
		       			SOH.POR_CD           									POR_CD, 
		       			SOH.POL_CD           									POL_CD, 
		       			SOH.POD_CD           									POD_CD, 
		       			SOH.DEL_CD           									DEL_CD, 
		       			TO_CHAR(TO_DATE(SOH.INV_DT,'YYYY-MM-DD'),'YYYY-MM-DD')  INV_DT, 
		       			SOH.SVC_SCP_CD       									SVC_SCP_CD, 
		       			SOH.CUST_SREP_CD     									SALE_REP_CD,
		      			SOH.BKG_REF_NO       									REF_NO, 
		       			TO_CHAR(TO_DATE(SOH.DUE_DT,'YYYY-MM-DD'),'YYYY-MM-DD')  DUE_DT, 
		       			TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'),'YYYYMMDD') - TO_DATE(SOH.DUE_DT,'YYYYMMDD') AS OVER_DUE,
		       			(SELECT ATTR_CTNT1 FROM SCO_LU_DTL WHERE LU_TP_CD = 'OTS GROUP' AND LU_CD = SOH.OTS_GRP_TP_CD)  AS OTS_GRP_TP_CD, 
		       			SOH.OTS_TP_CD        									OTS_TP_CD, 
		       			SOH.SC_NO            									SC_NO, 
		       			SOH.OTS_RMK          									RMK, 
		       			SOH.OTS_SRC_CD       									KIND2,
		       			SOH.AP_AR_OFFST_NO   									AP_AR_OFFST_NO,         								 
					#elseif ( ${kind_3} == 'APAR_OFFSET')
						SOH.AP_AR_OFFST_NO   									AP_AR_OFFST_NO, 
					#end
		       			NULL                                          			EX_RATE, 
		       			NULL                                           			USD_EQV_LCL,     
                        ROUND(NVL(SOD.LOCL_XCH_RT * SOD.INV_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = SOH.OFC_CURR_CD),0)) INV_TOT_LCL,
                    	ROUND(NVL(SOD.USD_XCH_RT * SOD.INV_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = 'USD'),0)) INV_TOT_USD,
                    	ROUND(NVL(SOD.LOCL_XCH_RT * SOD.RCT_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = SOH.OFC_CURR_CD),0)) RCT_TOT_LCL,
                    	ROUND(NVL(SOD.USD_XCH_RT * SOD.RCT_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = 'USD'),0)) RCT_TOT_USD,
                    	ROUND(NVL(SOD.LOCL_XCH_RT * SOD.ADJ_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = SOH.OFC_CURR_CD),0)) ADJ_TOT_LCL,
                    	ROUND(NVL(SOD.USD_XCH_RT * SOD.ADJ_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = 'USD'),0)) ADJ_TOT_USD,
                    	ROUND(NVL(SOD.LOCL_XCH_RT * SOD.BAL_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = SOH.OFC_CURR_CD),0)) TOT_LCL,
                    	ROUND(NVL(SOD.USD_XCH_RT * SOD.BAL_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = 'USD'),0)) TOT_USD,
			   			0 AS INV_AMT,
			   			0 AS RCT_AMT,
			   			0 AS ADJ_AMT,
			   			0 AS BAL_AMT,
						NVL(SOH.OTS_PAY_CD,'N') AS OTS_PAY_CD,
						SOH.ORG_INV_NO			
				
#else
	SELECT  SORT_SEQ,
			RHQ_CD,  
       		OTS_OFC_CD, 
       		BL_NO,
       		BKG_NO,
       		INV_NO,  
       		CHG_TP_CD,  
       		CUST_CD,
       		CUST_NM,
       		--PDL - ref#38078 Invoice Currency 추가
			INV_CURR_CD,
			--PDL - ref#38078 Invoice ROE vs Local, Invoice ROE vs USD 추가
       		INV_LOCL_XCH_RT,       
       		INV_USD_XCH_RT,
       		CREDIT_CURR_CD,           
       		CREDIT_LIMIT,
       		OB_TERM,  
       		IB_TERM,
       		CREDIT_FLG, 
       		VVD , 
       		LANE_CD, 
       		BND, 
       		SAIL_ARR_DT, 
       		POR_CD, 
       		POL_CD, 
      	 	POD_CD, 
      	 	DEL_CD, 
      	 	INV_DT, 
       		SVC_SCP_CD, 
      	 	SALE_REP_CD,
      	 	REF_NO, 
    	   	DUE_DT, 
       		OVER_DUE,
	       	OTS_GRP_TP_CD, 
    	   	OTS_TP_CD, 
       		SC_NO, 
	       	RMK, 
    	   	KIND2,
       		AP_AR_OFFST_NO, 
	       	USD,
    	   	EX_RATE, 
       		USD_EQV_LCL,
	       	INV_TOT_LCL,
    	   	INV_TOT_USD,
       		RCT_TOT_LCL,
		    RCT_TOT_USD,
	       	ADJ_TOT_LCL,
    	   	ADJ_TOT_USD,
       		TOT_LCL,
	       	TOT_USD,
		   	INV_AMT,
		   	RCT_AMT,	
	   		ADJ_AMT,
		   	BAL_AMT,
			OTS_PAY_CD,
			ORG_INV_NO
	FROM  (
			SELECT  '1' 													SORT_SEQ,
					SOH.RHQ_CD       										RHQ_CD,  
		       		SOH.OTS_OFC_CD   										OTS_OFC_CD, 
		       		SOH.BL_NO        										BL_NO,
		       		SOH.BKG_NO      	 									BKG_NO,
		       		SOH.INV_NO       										INV_NO,  
		       		SOD.CHG_TP_CD       									CHG_TP_CD,  
		       		SOH.BIL_TO_CUST_CNT_CD||LPAD(SOH.BIL_TO_CUST_SEQ,6, '0') CUST_CD,
		       		MC.CUST_LGL_ENG_NM   									CUST_NM,
			       	--PDL - ref#38078 Invoice Currency 추가
					SOH.INV_CURR_CD  										INV_CURR_CD,
					--PDL - ref#38078 Invoice ROE vs Local, Invoice ROE vs USD 추가
	       			ROUND(SOH.INV_LOCL_XCH_RT, 6)							INV_LOCL_XCH_RT,
       				ROUND(SOH.INV_USD_XCH_RT, 6)							INV_USD_XCH_RT,
			       	MCC.CR_CURR_CD       									CREDIT_CURR_CD,           
                    TO_CHAR(ROUND(NVL(MCC.CR_AMT,0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = NVL(MCC.CR_CURR_CD, SOH.OFC_CURR_CD)),0))) CREDIT_LIMIT,
			       	MCC.OB_CR_TERM_DYS   									OB_TERM,  
		    	   	MCC.IB_CR_TERM_DYS   									IB_TERM,
		       		MCC.CR_FLG           									CREDIT_FLG, 
			       	SOH.VSL_CD||SOH.SKD_VOY_NO ||SOH.DIR_CD 				VVD , 
			       	SOH.LANE_CD          									LANE_CD, 
			       	SOH.BKG_IO_BND_CD    									BND, 
		    	   	TO_CHAR(TO_DATE(SOH.SAIL_ARR_DT,'YYYY-MM-DD'),'YYYY-MM-DD')      SAIL_ARR_DT, 
		       		SOH.POR_CD           									POR_CD, 
			       	SOH.POL_CD           									POL_CD, 
			       	SOH.POD_CD           									POD_CD, 
			       	SOH.DEL_CD           									DEL_CD, 
		    	   	TO_CHAR(TO_DATE(SOH.INV_DT,'YYYY-MM-DD'),'YYYY-MM-DD')  INV_DT, 
		       		SOH.SVC_SCP_CD       									SVC_SCP_CD, 
			       	SOH.CUST_SREP_CD     									SALE_REP_CD,
			       	SOH.BKG_REF_NO       									REF_NO, 
			       	TO_CHAR(TO_DATE(SOH.DUE_DT,'YYYY-MM-DD'),'YYYY-MM-DD')  DUE_DT, 
		    	   	TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'),'YYYYMMDD') - TO_DATE(SOH.DUE_DT,'YYYYMMDD') AS OVER_DUE,
		       		(SELECT ATTR_CTNT1 FROM SCO_LU_DTL WHERE LU_TP_CD = 'OTS GROUP' AND LU_CD = SOH.OTS_GRP_TP_CD)  AS OTS_GRP_TP_CD, 
			       	SOH.OTS_TP_CD        									OTS_TP_CD, 
			       	SOH.SC_NO            									SC_NO, 
			       	SOH.OTS_RMK          									RMK, 
		    	   	SOH.OTS_SRC_CD       									KIND2,
		       		SOH.AP_AR_OFFST_NO   									AP_AR_OFFST_NO, 
			       	SOD.BL_CURR_CD                                          USD,
			       	SOD.LOCL_XCH_RT                                         EX_RATE, 
			       	SOD.USD_XCH_RT                                          USD_EQV_LCL,
                    ROUND(NVL(SOD.LOCL_XCH_RT * SOD.INV_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = SOH.OFC_CURR_CD),0)) INV_TOT_LCL,
                    ROUND(NVL(SOD.USD_XCH_RT * SOD.INV_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = 'USD'),0)) INV_TOT_USD,
                    ROUND(NVL(SOD.LOCL_XCH_RT * SOD.RCT_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = SOH.OFC_CURR_CD),0)) RCT_TOT_LCL,
                    ROUND(NVL(SOD.USD_XCH_RT * SOD.RCT_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = 'USD'),0)) RCT_TOT_USD,
                    ROUND(NVL(SOD.LOCL_XCH_RT * SOD.ADJ_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = SOH.OFC_CURR_CD),0)) ADJ_TOT_LCL,
                    ROUND(NVL(SOD.USD_XCH_RT * SOD.ADJ_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = 'USD'),0)) ADJ_TOT_USD,
                    ROUND(NVL(SOD.LOCL_XCH_RT * SOD.BAL_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = SOH.OFC_CURR_CD),0)) TOT_LCL,
                    ROUND(NVL(SOD.USD_XCH_RT * SOD.BAL_AMT, 0), NVL((SELECT MC.DP_PRCS_KNT FROM MDM_CURRENCY MC WHERE MC.CURR_CD = 'USD'),0)) TOT_USD,
				   	SOD.INV_AMT AS INV_AMT,
				   	SOD.RCT_AMT AS RCT_AMT,	
				   	SOD.ADJ_AMT AS ADJ_AMT,
				   	SOD.BAL_AMT AS BAL_AMT,
					NVL(SOH.OTS_PAY_CD,'N') AS OTS_PAY_CD,
					SOH.ORG_INV_NO
#end
			FROM  SAR_OTS_HDR SOH, 
     			  SAR_OTS_DTL SOD, 
			      MDM_CUSTOMER MC, 
			      MDM_CR_CUST MCC
			WHERE SOH.RHQ_CD            = SOD.RHQ_CD  
			AND SOH.OTS_OFC_CD          = SOD.OTS_OFC_CD
			AND SOH.BL_NO               = SOD.BL_NO 
			AND SOH.INV_NO              = SOD.INV_NO  
			AND SOH.BIL_TO_CUST_CNT_CD  = MC.CUST_CNT_CD
			AND SOH.BIL_TO_CUST_SEQ     = MC.CUST_SEQ  
			AND MC.CUST_CNT_CD          = MCC.CUST_CNT_CD  (+)
			AND MC.CUST_SEQ             = MCC.CUST_SEQ  (+)
			AND SOH.STL_FLG  = 'N'
		#if (${date_tp_cd} == 'I')
			AND SOH.INV_DT        <= replace(@[sail_arr_dt],'-','')
		#elseif (${date_tp_cd} == 'A')
			AND SOH.SAIL_ARR_DT        <= replace(@[sail_arr_dt],'-','')
		#end

		#if (${rhq} != '')
			AND SOH.RHQ_CD          in (${rhq})
		#else
			AND SOH.RHQ_CD          in ('')
		#end

		#if (${ofc_cd} != '')
			AND SOH.CLT_OFC_CD      in (${ofc_cd})
		#else
			AND SOH.CLT_OFC_CD      in ('')
		#end

		#if (${kind2_radio} == 'INVAR')
		    and soh.ots_src_cd ='INVAR' 
		    AND SUBSTR(soh.rev_tp_src_cd, 1, 1) IN ('B','C')
		#end

		#if (${kind2_radio}  == 'OTHER' )
  			AND soh.ots_src_cd ='INVAR' AND SUBSTR(soh.rev_tp_src_cd, 1, 1) = 'M' AND soh.rev_tp_src_cd <> 'MRD'
		#end

		#if (${kind2_radio}  == 'TPB' )
  			and soh.ots_src_cd ='INVAR' 
  			AND soh.rev_tp_src_cd = 'MRD'
		#end

		#if  (${kind2_radio}  == 'FMS' ) 
		    and soh.ots_src_cd ='FMS' 
  			AND soh.rev_tp_src_cd = 'CDM'
		#end 

		#if (${kind2_radio}  == 'JOO' )  
  			and soh.ots_src_cd ='JOO' 
		#end 

		#if (${kind2_radio} == 'STM A%' )
  			and soh.ots_src_cd LIKE 'STM A%' 
		#end
		#if (${kind2_radio} == 'UNAPP')
			AND 1 = 2
		#end

		#if ( ${bnd} != 'ALL')
   			AND SOH.BKG_IO_BND_CD = @[bnd]
		#else
   			AND SOH.BKG_IO_BND_CD IN ('I','O')
		#end 

		#if ( ${overdue_from} != '')
			AND    TO_DATE(TO_CHAR(sysdate, 'YYYYMMDD'),'YYYYMMDD') - TO_DATE(SOH.DUE_DT,'YYYYMMDD')  >= @[overdue_from]
		#end 

		#if ( ${overdue_to} != '')
			AND    TO_DATE(TO_CHAR(sysdate, 'YYYYMMDD'),'YYYYMMDD') - TO_DATE(SOH.DUE_DT,'YYYYMMDD')  <= @[overdue_to]
		#end 

		#if ( ${svc_scp_cd} != '')
   			AND SOH.SVC_SCP_CD LIKE @[svc_scp_cd]||'%'
		#end 

		#if ( ${port} != '')
    		#if ( ${bnd} == 'I')
        		AND SOH.POD_CD LIKE @[port]||'%'
    		#elseif ( ${bnd} == 'O')
        		AND SOH.POL_CD LIKE @[port]||'%'
    		#else
        		AND ( SOH.POD_CD LIKE @[port]||'%' OR SOH.POL_CD LIKE @[port]||'%' )
    		#end 
		#end

		#if ( ${credit_flg} != 'ALL')
   			AND NVL(MCC.CR_FLG,'N') = @[credit_flg]
		#end

		#if ( ${rate_yn} != 'ALL')
   			AND NVL(SOH.OTS_RT_FLG,'Y') = @[rate_yn]
		#end

		#if ( ${bl_inv} == 'B')
   			AND SOH.INV_NO	= '**********'
		#end

		#if ( ${bl_inv} == 'I')
   			AND SOH.INV_NO	<> '**********'
		#end

		#if (  ${ots_grp_tp_cd} != '' and ${ots_grp_tp_cd} != 'ALL' )
   			AND SOH.OTS_GRP_TP_CD = @[ots_grp_tp_cd]
		#end

		#if (  ${ots_tp_cd} != '' and ${ots_tp_cd} != 'ALL')
   			AND SOH.OTS_TP_CD = @[ots_tp_cd]
		#end

		#if ( ${f_cust_cnt_cd} != '')
			AND SOH.BIL_TO_CUST_CNT_CD = @[f_cust_cnt_cd]
		#end

		#if ( ${f_cust_seq} != '')
			AND SOH.BIL_TO_CUST_SEQ = @[f_cust_seq]
		#end

		#if ( ${kind_3} == 'VVD')
   			#if ( ${kind3_code2} != '')
   				AND SOH.VSL_CD||SOH.SKD_VOY_NO ||SOH.DIR_CD = @[kind3_code2]
   			#end
		#end

		#if ( ${kind_3} == 'SALESREP')
   			#if ( ${kind3_code} != '')
   				AND SOH.CUST_SREP_CD = @[kind3_code]
   			#end
		#end

		#if ( ${kind_3} == 'HJSREF')
   			#if ( ${kind3_code} != '')
   				AND SOH.BKG_REF_NO = @[kind3_code]
		   #end
		#end

		#if ( ${kind_3} == 'APAR_OFFSET')
   			#if ( ${kind3_code} != '')
   				AND SOH.AP_AR_OFFST_NO = @[kind3_code]
   			#end
		#end

		#if ( ${kind_3} == 'SA_DATE')
   			#if ( ${sail_arr_dt_fm} != '')
   				AND SOH.SAIL_ARR_DT        >= REPLACE(@[sail_arr_dt_fm],'-','')
   			#end
   			#if ( ${sail_arr_dt_to} != '')
   				AND SOH.SAIL_ARR_DT        <= REPLACE(@[sail_arr_dt_to],'-','')
   			#end
		#end

		#if ( ${kind_3} == 'SCNO')
   			#if ( ${kind3_code} != '')
   				AND SOH.SC_NO LIKE  @[kind3_code]||'%'
   			#else
				AND SOH.SC_NO IS NOT NULL
   			#end
		#end

		#if ( ${kind_3} == 'BLNO')
   			#if ( ${kind3_code2} != '')
   				AND SOH.BL_NO = @[kind3_code2]
   			#end
		#end

		#if ( ${kind_3} == 'INVNO')
   			#if ( ${kind3_code2} != '')
   				AND SOH.INV_NO = @[kind3_code2]
   			#end
		#end
        AND EXISTS(	SELECT 'X'
             		FROM  SAR_OTS_DTL SOD2
            		WHERE  SOD2.RHQ_CD = SOD.RHQ_CD
              		AND  SOD2.OTS_OFC_CD = SOD.OTS_OFC_CD
              		AND  SOD2.BL_NO = SOD.BL_NO
              		AND  SOD2.INV_NO = SOD.INV_NO
		#if ( ${ots_opy} == 'OTS')
   			HAVING SUM(SOD2.BAL_AMT) > 0  )
		#elseif ( ${ots_opy} == 'OPY')
		   	HAVING SUM(SOD2.BAL_AMT) < 0  )
		#else
			HAVING SUM(SOD2.BAL_AMT) <> 0 )
		#end

#if ( ${ots_opy} != 'OTS')
			UNION ALL

	#if ( ${summary_yn} == 'S')
		SELECT '2' SORT_SEQ,
				MO.AR_HD_QTR_OFC_CD RHQ_CD,
	       		SR.RCT_OFC_CD       OTS_OFC_CD,
		#if ( ${kind_3} == 'CUSTOMER')
		   		SR.RCT_CUST_CNT_CD|| LPAD(SR.RCT_CUST_SEQ, 6, '0') CUST_CD,
			   	MC.CUST_LGL_ENG_NM  CUST_NM,
			   	MCC.CR_CURR_CD		CREDIT_CURR_CD,
			   	TO_NUMBER(SAR_GET_CUR_AMT_FNC(NVL(MCC.CR_CURR_CD, MO.AR_CURR_CD),MCC.CR_AMT))	CREDIT_LIMIT,
	  	     	MCC.OB_CR_TERM_DYS	OB_TERM,
	   	    	MCC.IB_CR_TERM_DYS	IB_TERM,
	   	    	MCC.CR_FLG         	CREDIT_FLG,
		#elseif ( ${kind_3} == 'VVD')
				NULL                VVD,
  	  	#elseif ( ${kind_3} == 'SALESREP')
				NULL                SALE_REP_CD,
  	  	#elseif ( ${kind_3} == 'SA_DATE')
				NULL                SAIL_ARR_DT,
		#elseif ( ${kind_3} == 'HJSREF')
				NULL                REF_NO,
		#elseif ( ${kind_3} == 'BLNO' || ${kind_3} == 'INVNO')	   	
	       		SR.RCT_NO           BL_NO,
	       		NULL                BKG_NO,
		       	DECODE(OFC.OTS_SMRY_CD, 'INV', SR.RCT_NO, '')  INV_NO,
		       	SR.RCT_CUST_CNT_CD|| LPAD(SR.RCT_CUST_SEQ, 6, '0') CUST_CD,
	    	   	MC.CUST_LGL_ENG_NM  CUST_NM,
		       	--PDL - ref#38078 Invoice Currency 추가
		       	SR.RCT_CURR_CD      INV_CURR_CD,
				--PDL - ref#38078 Invoice ROE vs Local, Invoice ROE vs USD 추가
				ROUND(SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, MO.AR_CURR_CD), 6)	INV_LOCL_XCH_RT,
				ROUND(SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, 'USD'), 6)	INV_USD_XCH_RT,
			   	MCC.CR_CURR_CD		CREDIT_CURR_CD,
			   	SAR_GET_CUR_AMT_FNC(NVL(MCC.CR_CURR_CD, MO.AR_CURR_CD), MCC.CR_AMT)	CREDIT_LIMIT,
	    	   	MCC.OB_CR_TERM_DYS	OB_TERM,
	       		MCC.IB_CR_TERM_DYS	IB_TERM,
		       	MCC.CR_FLG         	CREDIT_FLG,
		       	NULL                VVD,
	    	   	NULL                LANE_CD,
		       	NULL                BND,
		       	TO_CHAR(TO_DATE(SR.RCT_DT,'YYYY-MM-DD'), 'YYYY-MM-DD')	SAIL_ARR_DT,
	    	   	NULL                POR_CD,
	       		NULL                POL_CD,
		       	NULL                POD_CD,
		       	NULL                DEL_CD,
	    	   	DECODE(OFC.OTS_SMRY_CD, 'INV', TO_CHAR(TO_DATE(SR.RCT_DT,'YYYY-MM-DD'), 'YYYY-MM-DD'), '')  INV_DT,
	       		NULL                SVC_SCP_CD,
		       	NULL                SALE_REP_CD,
		       	NULL                REF_NO,
		       	TO_CHAR(TO_DATE(SR.RCT_DT,'YYYY-MM-DD'), 'YYYY-MM-DD')	DUE_DT,
	    	   	TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'),'YYYYMMDD') - TO_DATE(SR.RCT_DT, 'YYYYMMDD') AS OVER_DUE,
		       	NULL                OTS_GRP_TP_CD,
		       	NULL                OTS_TP_CD,
	    	   	NULL                SC_NO,
	       		NULL                RMK,
		       	'CASH'              KIND2,
				NULL                AP_AR_OFFST_NO,
		#elseif ( ${kind_3} == 'APAR_OFFSET')
				NULL                AP_AR_OFFST_NO,
		#end
		       	NULL                EX_RATE,
		       	NULL                USD_EQV_LCL,
	    	   	0           		INV_TOT_LCL,
	       		0           		INV_TOT_USD,
				SUM(SAR_GET_CUR_AMT_FNC(MO.AR_CURR_CD, (SR.BAL_RCT_AMT * -1) * SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, MO.AR_CURR_CD))) RCT_TOT_LCL,
				SUM(SAR_GET_CUR_AMT_FNC('USD', (SR.BAL_RCT_AMT * -1) * SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, 'USD'))) RCT_TOT_USD,
	    	   	0           		ADJ_TOT_LCL,
	       		0           		ADJ_TOT_USD,
				SUM(SAR_GET_CUR_AMT_FNC(MO.AR_CURR_CD, (SR.BAL_RCT_AMT * -1) * SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, MO.AR_CURR_CD))) TOT_LCL,
				SUM(SAR_GET_CUR_AMT_FNC('USD', (SR.BAL_RCT_AMT * -1) * SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, 'USD'))) TOT_USD,
	    	   	0           		INV_AMT,
				SUM(SAR_GET_CUR_AMT_FNC(SR.RCT_CURR_CD, (SR.BAL_RCT_AMT * -1)))	RCT_AMT,
		       	0           		ADJ_AMT,
				SUM(SAR_GET_CUR_AMT_FNC(SR.RCT_CURR_CD, (SR.BAL_RCT_AMT * -1)))	BAL_AMT,
				NULL				OTS_PAY_CD,
				NULL				ORG_INV_NO
	#else	
		SELECT '2' SORT_SEQ,
				MO.AR_HD_QTR_OFC_CD RHQ_CD,
		       	SR.RCT_OFC_CD       OTS_OFC_CD,
		       	SR.RCT_NO           BL_NO,
	    	   	NULL                BKG_NO,
	       		DECODE(OFC.OTS_SMRY_CD, 'INV', SR.RCT_NO, '')  INV_NO,
		       	NULL                CHG_TP_CD,
		       	SR.RCT_CUST_CNT_CD|| LPAD(SR.RCT_CUST_SEQ, 6, '0') CUST_CD,
	    	   	MC.CUST_LGL_ENG_NM  CUST_NM,
		       	--PDL - ref#38078 Invoice Currency 추가
		       	SR.RCT_CURR_CD      INV_CURR_CD,
				--PDL - ref#38078 Invoice ROE vs Local, Invoice ROE vs USD 추가
				ROUND(SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, MO.AR_CURR_CD), 6)	INV_LOCL_XCH_RT,
				ROUND(SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, 'USD'), 6)	INV_USD_XCH_RT,
		       	MCC.CR_CURR_CD		CREDIT_CURR_CD,
    	        SAR_GET_CUR_AMT_FNC(NVL(MCC.CR_CURR_CD, MO.AR_CURR_CD),MCC.CR_AMT) CREDIT_LIMIT,
		       	MCC.OB_CR_TERM_DYS	OB_TERM,
		       	MCC.IB_CR_TERM_DYS	IB_TERM,
	    	   	MCC.CR_FLG         	CREDIT_FLG,
	       		NULL                VVD,
		       	NULL                LANE_CD,
		       	NULL                BND,
	    	   	TO_CHAR(TO_DATE(SR.RCT_DT,'YYYY-MM-DD'), 'YYYY-MM-DD')	SAIL_ARR_DT,
	       		NULL                POR_CD,
		       	NULL                POL_CD,
		       	NULL                POD_CD,
	    	   	NULL                DEL_CD,
	       		DECODE(OFC.OTS_SMRY_CD, 'INV', TO_CHAR(TO_DATE(SR.RCT_DT,'YYYY-MM-DD'), 'YYYY-MM-DD'), '')  INV_DT,
		       	NULL                SVC_SCP_CD,
			    NULL                SALE_REP_CD,
	    	   	NULL                REF_NO,
	       		TO_CHAR(TO_DATE(SR.RCT_DT,'YYYY-MM-DD'), 'YYYY-MM-DD')	DUE_DT,
		       	TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'),'YYYYMMDD') - TO_DATE(SR.RCT_DT, 'YYYYMMDD') AS OVER_DUE,
		       	NULL                OTS_GRP_TP_CD,
	    	   	NULL                OTS_TP_CD,
	       		NULL                SC_NO,
		       	NULL                RMK,
		       	'CASH'              KIND2,
	    	   	NULL                AP_AR_OFFST_NO,
	       		SR.RCT_CURR_CD      USD,
		       	ROUND(SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, MO.AR_CURR_CD), 6)	EX_RATE,
		       	ROUND(SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, 'USD'), 6)	USD_EQV_LCL,
	    	   	0           		INV_TOT_LCL,
	       		0           		INV_TOT_USD,
				SUM(SAR_GET_CUR_AMT_FNC(MO.AR_CURR_CD, (SR.BAL_RCT_AMT * -1) * SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, MO.AR_CURR_CD))) RCT_TOT_LCL,
				SUM(SAR_GET_CUR_AMT_FNC('USD', (SR.BAL_RCT_AMT * -1) * SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, 'USD'))) RCT_TOT_USD,
	    	   	0           		ADJ_TOT_LCL,
	       		0           		ADJ_TOT_USD,
				SUM(SAR_GET_CUR_AMT_FNC(MO.AR_CURR_CD, (SR.BAL_RCT_AMT * -1) * SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, MO.AR_CURR_CD))) TOT_LCL,
				SUM(SAR_GET_CUR_AMT_FNC('USD', (SR.BAL_RCT_AMT * -1) * SAR_GET_GL_XCH_RT_FNC('1', SR.RCT_DT, SR.RCT_CURR_CD, 'USD'))) TOT_USD,
	    	   	0           		INV_AMT,
	       		SUM(SAR_GET_CUR_AMT_FNC(SR.RCT_CURR_CD,(SR.BAL_RCT_AMT * -1)))	RCT_AMT,
			    0           		ADJ_AMT,
		       	SUM(SAR_GET_CUR_AMT_FNC(SR.RCT_CURR_CD,(SR.BAL_RCT_AMT * -1)))	BAL_AMT,
				NULL 				OTS_PAY_CD,
				NULL 				ORG_INV_NO
	#end
		FROM 	SAR_RECEIPT SR,
       			MDM_ORGANIZATION MO,
 			    MDM_CUSTOMER MC,
       			MDM_CR_CUST  MCC,
	   			--20141124-2 wskim 아래 From 절 신규 추가                 
       			(SELECT IAS.AR_OFC_CD OFC_CD,
               		    DECODE(IAS.OTS_SMRY_CD, 'BL', 'BL', 'INV', 'INV', NVL(SOI.OTS_CATE_CD, 'BL'))  OTS_SMRY_CD
        		 FROM   INV_AR_STUP_OFC IAS,
               			SCO_OFC_INFO    SOI
        		 WHERE  IAS.AR_OFC_CD = SOI.OFC_CD(+) ) OFC
		WHERE  SR.RCT_OFC_CD = MO.OFC_CD   
		AND    SR.RCT_CUST_CNT_CD = MC.CUST_CNT_CD
		AND    SR.RCT_CUST_SEQ = MC.CUST_SEQ	
		AND    MC.CUST_CNT_CD = MCC.CUST_CNT_CD(+)
		AND    MC.CUST_SEQ = MCC.CUST_SEQ(+)
		--20141124-2 wskim 아래 Where 절 신규 추가          
		AND    MO.OFC_CD = OFC.OFC_CD
		AND    SR.RCT_CUST_CNT_CD IS NOT NULL
		AND    SR.RCT_CUST_SEQ IS NOT NULL
	#if (${date_tp_cd} == 'A')
		AND    SR.RCT_DT <= replace(@[sail_arr_dt],'-','')
	#end

	#if (${rhq} != '')
		AND    MO.AR_HD_QTR_OFC_CD IN (${rhq})
	#else
		AND    MO.AR_HD_QTR_OFC_CD IN ('')
	#end

	#if (${ofc_cd} != '')
		AND    SR.RCT_OFC_CD IN (${ofc_cd})
	#else
		AND    SR.RCT_OFC_CD IN ('')
	#end

	#if (${kind2_radio} == 'ALL')
		AND    SR.RCT_STS_CD = 'UNAPP'
	#else
		AND    SR.RCT_STS_CD = @[kind2_radio]
	#end

	AND    SR.RCT_CXL_DT IS NULL

	#if (${f_cust_cnt_cd} != '')
		AND    SR.RCT_CUST_CNT_CD = @[f_cust_cnt_cd]
		AND    SR.RCT_CUST_SEQ = @[f_cust_seq]
	#end

	#if ( ${kind_3} == 'VVD' && ${kind3_code2} != '')
		AND    1=2
	#elseif ( ${kind_3} == 'SALESREP' && ${kind3_code} != '')
		AND    1=2
	#elseif ( ${kind_3} == 'SA_DATE')
		#if ( ${sail_arr_dt_fm} != '' && ${sail_arr_dt_to} != '')
			AND    SR.RCT_DT >= REPLACE(@[sail_arr_dt_fm], '-', '')
			AND    SR.RCT_DT <= REPLACE(@[sail_arr_dt_to], '-', '')
		#end
	#elseif ( ${kind_3} == 'HJSREF' && ${kind3_code} != '')
		AND    1=2
	#elseif ( ${kind_3} == 'APAR_OFFSET' && ${kind3_code} != '')
		AND    1=2
	#elseif ( ${kind_3} == 'SCNO' && ${kind3_code} != '')
		AND    1=2
	#elseif ( ${kind_3} == 'BLNO' && ${kind3_code2} != '')
		AND    SR.RCT_NO = @[kind3_code2]
	#elseif ( ${kind_3} == 'INVNO' && ${kind3_code2} != '')
		AND    SR.RCT_NO = @[kind3_code2]
	#end

	#if ( ${bnd} == 'I' or ${bnd} == 'O')
		AND		1=2
	#end

	#if ( ${overdue_from} != '')
		AND    TO_DATE(TO_CHAR(sysdate, 'YYYYMMDD'),'YYYYMMDD') - TO_DATE(SR.RCT_DT,'YYYYMMDD')  >= @[overdue_from]
	#end

	#if ( ${overdue_to} != '')
		AND    TO_DATE(TO_CHAR(sysdate, 'YYYYMMDD'),'YYYYMMDD') - TO_DATE(SR.RCT_DT,'YYYYMMDD')  <= @[overdue_to]
	#end

	#if ( ${svc_scp_cd} != '')
		AND 	1=2
	#end 

	#if ( ${port} != '')
    	AND 	1=2
	#end

	#if ( ${credit_flg} != 'ALL')
		AND		NVL(MCC.CR_FLG,'N') = @[credit_flg]
	#end

	#if ( ${ots_opy} == 'OPY')
		AND 	SR.BAL_RCT_AMT > 0
	#elseif ( ${ots_opy} == 'OTS')
		AND 	SR.BAL_RCT_AMT < 0
	#else
		AND 	SR.BAL_RCT_AMT <> 0
	#end

	#if ( ${ots_grp_tp_cd} != '' && ${ots_grp_tp_cd} != 'ALL')
		AND		1=2
	#end

	#if ( ${ots_tp_cd} != '' && ${ots_tp_cd} != 'ALL')
		AND		1=2
	#end

	GROUP BY	MO.AR_HD_QTR_OFC_CD ,
       			SR.RCT_OFC_CD       ,
		       	SR.RCT_NO           ,
       			SR.RCT_CUST_CNT_CD|| LPAD(SR.RCT_CUST_SEQ, 6, '0') ,
		       	MC.CUST_LGL_ENG_NM  ,
		      	--PDL - ref#38078 Invoice Currency 추가
		       	SR.RCT_CURR_CD,
				MO.AR_CURR_CD,
		       	SR.RCT_DT,
	   			DECODE(OFC.OTS_SMRY_CD, 'INV', SR.RCT_NO, ''),
			   	DECODE(OFC.OTS_SMRY_CD, 'INV', TO_CHAR(TO_DATE(SR.RCT_DT,'YYYY-MM-DD'), 'YYYY-MM-DD'), ''),
				MCC.CR_CURR_CD,
        		MCC.CR_AMT,
		        MCC.OB_CR_TERM_DYS,
        		MCC.IB_CR_TERM_DYS,
		        MCC.CR_FLG
#end
	)

#if ( ${summary_yn} == 'S')
	)
	GROUP BY  	RHQ_CD,  
	    	  	OTS_OFC_CD, 
			#if ( ${kind_3} == 'CUSTOMER')
	       		CUST_CD,
	       		CUST_NM,
	       		CREDIT_CURR_CD,           
	       		CREDIT_LIMIT,
	       		OB_TERM,  
	       		IB_TERM,
	       		CREDIT_FLG,
			#elseif ( ${kind_3} == 'VVD')
				VVD,
		    #elseif ( ${kind_3} == 'SALESREP')
				SALE_REP_CD,
	    	#elseif ( ${kind_3} == 'SA_DATE')
				SAIL_ARR_DT,
			#elseif ( ${kind_3} == 'HJSREF')
				REF_NO,
			#elseif ( ${kind_3} == 'BLNO' || ${kind_3} == 'INVNO')
		   		BL_NO,
		       	BKG_NO,
		       	INV_NO,  
	    	   	CUST_CD,
	       		CUST_NM,
		       	--PDL - ref#38078 Invoice Currency 추가
		       	INV_CURR_CD,
				--PDL - ref#38078 Invoice ROE vs Local, Invoice ROE vs USD 추가
       			INV_LOCL_XCH_RT,       
	       		INV_USD_XCH_RT,
		       	CREDIT_CURR_CD, 
		       	CREDIT_LIMIT,
	    	   	OB_TERM,  
	        	IB_TERM,
		        CREDIT_FLG, 
		        VVD , 
	    	    LANE_CD, 
	        	BND, 
		        SAIL_ARR_DT, 
		        POR_CD, 
	    	    POL_CD, 
	        	POD_CD, 
		        DEL_CD, 
		        INV_DT, 
	    	    SVC_SCP_CD, 
	        	SALE_REP_CD,
		        REF_NO, 
		        DUE_DT, 
	    	    OVER_DUE,
	        	OTS_GRP_TP_CD, 
		        OTS_TP_CD, 
		        SC_NO, 
	    	    RMK, 
	        	KIND2,
		        AP_AR_OFFST_NO,
			#elseif ( ${kind_3} == 'APAR_OFFSET')
				AP_AR_OFFST_NO,
  	      	#elseif ( ${kind_3} == 'SCNO')
    	       'x'	,
        	#end
				OTS_PAY_CD,
				ORG_INV_NO
#end

#if ( ${summary_yn} == 'S')
		ORDER BY RHQ_CD, OTS_OFC_CD,

		#if ( ${kind_3} == 'CUSTOMER')
			CUST_CD
		#elseif ( ${kind_3} == 'VVD')
        	VVD
		#elseif ( ${kind_3} == 'SALESREP')
			SALE_REP_CD
		#elseif ( ${kind_3} == 'SA_DATE')
    		SAIL_ARR_DT
	    #elseif ( ${kind_3} == 'HJSREF')
			REF_NO
		#elseif ( ${kind_3} == 'BLNO')
    	    BL_NO        	
		#elseif ( ${kind_3} == 'INVNO')
    	    INV_NO, INV_DT, INV_CURR_CD
	    #elseif ( ${kind_3} == 'APAR_OFFSET')
			AP_AR_OFFST_NO
		#elseif ( ${kind_3} == 'SCNO')
    	    'x'
	    #end
#else
		ORDER BY SORT_SEQ, RHQ_CD, OTS_OFC_CD, CUST_CD, BL_NO, INV_NO, INV_DT, INV_CURR_CD
#end

	) ORG_T
)
WHERE RNUM BETWEEN @[startpart] AND @[endpart]			]]></sql>
			<params>
				<param name="sail_arr_dt" type="12" value="" out="N"/>
				<param name="bnd" type="12" value="" out="N"/>
				<param name="overdue_from" type="12" value="" out="N"/>
				<param name="overdue_to" type="12" value="" out="N"/>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
				<param name="port" type="12" value="" out="N"/>
				<param name="credit_flg" type="12" value="" out="N"/>
				<param name="rate_yn" type="12" value="" out="N"/>
				<param name="ots_grp_tp_cd" type="12" value="" out="N"/>
				<param name="ots_tp_cd" type="12" value="" out="N"/>
				<param name="f_cust_cnt_cd" type="12" value="" out="N"/>
				<param name="f_cust_seq" type="12" value="" out="N"/>
				<param name="kind3_code2" type="12" value="" out="N"/>
				<param name="kind3_code" type="12" value="" out="N"/>
				<param name="sail_arr_dt_fm" type="12" value="" out="N"/>
				<param name="sail_arr_dt_to" type="12" value="" out="N"/>
				<param name="kind2_radio" type="12" value="" out="N"/>
				<param name="startpart" type="12" value="" out="N"/>
				<param name="endpart" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
