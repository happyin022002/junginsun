<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccountReceivableOutstandingDBDAOsearchINVForOutstandingHistRSQL">
			<desc><![CDATA[Outstanding History를 생성하기 위한 Invoice 정보를 select]]></desc>
			<sql><![CDATA[
SELECT A.AR_IF_NO||B.AR_IF_SER_NO IF_NO
       , C.AR_HD_QTR_OFC_CD RHQ_CD
       , DECODE(NVL(E.OTS_CD, 'ARO'), 'COU', E.REP_OTS_OFC_CD, A.AR_OFC_CD) OTS_OFC_CD
       , A.BL_SRC_NO BL_NO
       , DECODE(D.OTS_SMRY_CD, 'INV', NVL(A.INV_NO, '**********'), '**********') INV_NO
       , B.CURR_CD
       , 'OTS' OTS_HIS_TP_CD
       , 'INVAR' OTS_SRC_CD
       , A.GL_EFF_DT GL_DT
       , NVL(SUM(B.CHG_AMT), 0) OTS_AMT
       , A.AR_IF_NO REF_NO
       , A.AR_OFC_CD INV_OFC_CD
       , A.INV_RMK OTS_RMK
       , A.INV_CUST_CNT_CD SHP_TO_CUST_CNT_CD
	   , A.INV_CUST_SEQ SHP_TO_CUST_SEQ
       , A.ACT_CUST_CNT_CD BIL_TO_CUST_CNT_CD
       , A.ACT_CUST_SEQ BIL_TO_CUST_SEQ
       , A.VSL_CD
       , A.SKD_VOY_NO
       , A.SKD_DIR_CD DIR_CD
       , A.SVC_SCP_CD
       , DECODE(B.CURR_CD, A.LOCL_CURR_CD, A.XCH_RT_USD_TP_CD, 'USD', A.XCH_RT_USD_TP_CD, A.XCH_RT_N3RD_TP_CD) XCH_RT_TP_CD
       , B.INV_XCH_RT LOCL_XCH_RT
	   , B.USD_XCH_RT
       , A.IO_BND_CD BKG_IO_BND_CD
       , A.XCH_RT_DT
       , A.POL_CD
       , A.POD_CD
	   , A.UPD_USR_ID CRE_USR_ID
	   , A.UPD_USR_ID
	   , A.REV_TP_CD||A.REV_SRC_CD REV_TP_SRC_CD
	   , A.REV_VSL_CD||A.REV_SKD_VOY_NO||A.REV_SKD_DIR_CD||A.REV_DIR_CD REV_VVD_CD
	   , A.SAIL_DT
	   , DECODE(D.OTS_SMRY_CD, 'INV', A.INV_CURR_CD, '') INV_CURR_CD
	   , DECODE(DECODE(D.OTS_SMRY_CD, 'INV', A.INV_CURR_CD, ''), '', '', DECODE(DECODE(D.OTS_SMRY_CD, 'INV', A.INV_CURR_CD, ''), A.LOCL_CURR_CD, 1, A.INV_LOCL_XCH_RT)) INV_LOCL_XCH_RT
  	   , DECODE(DECODE(D.OTS_SMRY_CD, 'INV', A.INV_CURR_CD, ''), '', '', DECODE(DECODE(D.OTS_SMRY_CD, 'INV', A.INV_CURR_CD, ''), 'USD', 1, A.INV_USD_XCH_RT)) INV_USD_XCH_RT
FROM INV_AR_MN A,
     INV_AR_CHG B,
     MDM_ORGANIZATION C,
	 INV_AR_STUP_OFC D,
	 SCO_OFC_INFO E
WHERE A.AR_IF_NO = B.AR_IF_NO
AND A.AR_OFC_CD = C.OFC_CD
AND A.AR_OFC_CD = D.AR_OFC_CD(+)
AND A.AR_OFC_CD = E.OFC_CD(+)
AND D.DELT_FLG(+) = 'N'
AND A.AR_IF_NO = @[if_no]
GROUP BY A.AR_IF_NO
	   , B.AR_IF_SER_NO
       , C.AR_HD_QTR_OFC_CD
	   , E.OTS_CD
       , E.REP_OTS_OFC_CD
       , A.AR_OFC_CD
       , A.BL_SRC_NO
	   , D.OTS_SMRY_CD
       , A.INV_NO
       , B.CURR_CD
       , A.GL_EFF_DT
       , A.INV_RMK
       , A.INV_CUST_CNT_CD
	   , A.INV_CUST_SEQ
       , A.ACT_CUST_CNT_CD
       , A.ACT_CUST_SEQ
       , A.VSL_CD
       , A.SKD_VOY_NO
       , A.SKD_DIR_CD
       , A.SVC_SCP_CD
       , A.LOCL_CURR_CD
       , A.XCH_RT_USD_TP_CD
       , A.XCH_RT_N3RD_TP_CD
       , B.INV_XCH_RT
	   , B.USD_XCH_RT
       , A.IO_BND_CD
       , A.XCH_RT_DT
       , A.POL_CD
       , A.POD_CD
	   , A.UPD_USR_ID
	   , A.REV_TP_CD
	   , A.REV_SRC_CD
	   , A.REV_VSL_CD
	   , A.REV_SKD_VOY_NO
	   , A.REV_SKD_DIR_CD
	   , A.REV_DIR_CD
	   , A.SAIL_DT
	   , A.INV_CURR_CD
	   , A.INV_LOCL_XCH_RT
	   , A.INV_USD_XCH_RT
ORDER BY B.AR_IF_SER_NO			]]></sql>
			<params>
				<param name="if_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
