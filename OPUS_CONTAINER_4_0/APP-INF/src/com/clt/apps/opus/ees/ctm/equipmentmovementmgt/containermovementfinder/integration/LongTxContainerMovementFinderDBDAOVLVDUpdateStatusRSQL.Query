<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="LongTxContainerMovementFinderDBDAOVLVDUpdateStatusRSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
WITH RSLT AS (
    SELECT B.VVD,
      B.LANE,
      B.ETD,
      B.PORT,
      B.CGO_TP,
      NVL (A.BKG_CNT, 0) AS BKG_CNT, 
      NVL (B.EDI, 0) AS EDI,
      NVL (B.MAN, 0) AS MAN,
      NVL (B.EDI + B.MAN, 0) AS TOTAL,
      NVL (B.EDI + B.MAN - A.BKG_CNT, 0) AS RESULT
    FROM (
        SELECT VVD,
          LANE,
          ETD,
          PORT,
          CGO_TP,
          COUNT(CNTR_NO) BKG_CNT
        FROM (
            SELECT DISTINCT V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD AS VVD,
              VP.VSL_SLAN_CD AS LANE,
#if (${p_status} == 'VL')
              TO_CHAR(VP.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') ETD,
#else
              TO_CHAR(VP.VPS_ETA_DT, 'YYYY-MM-DD HH24:MI') ETD,
#end
#if (${p_status} == 'VL')
             V.POL_YD_CD PORT,
#else
             V.POD_YD_CD PORT,
#end
              --VP.VPS_PORT_CD AS PORT,
              DECODE(B.BKG_CGO_TP_CD, 'P', 'E', 'F') CGO_TP,
              C.CNTR_NO
            FROM BKG_VVD V,
              BKG_CONTAINER C,
              BKG_BOOKING B,
              (
                SELECT
                  VSL_CD,
                  SKD_VOY_NO,
                  SKD_DIR_CD,
#if (${p_status} == 'VL')
                  V.VPS_ETD_DT,
#else
                  V.VPS_ETA_DT,
#end
                  V.YD_CD,
                  L.VSL_SLAN_CD
                FROM MDM_VSL_SVC_LANE L,
                  VSK_VSL_PORT_SKD V
#if (${p_status} == 'VL')
                WHERE V.VPS_ETD_DT BETWEEN TO_DATE (@[p_date1], 'YYYY-MM-DD') AND TO_DATE (@[p_date2], 'YYYY-MM-DD') + 0.99999
#else
                WHERE V.VPS_ETA_DT BETWEEN TO_DATE (@[p_date1], 'YYYY-MM-DD') AND TO_DATE (@[p_date2], 'YYYY-MM-DD') + 0.99999
#end

                  AND V.SLAN_CD = L.VSL_SLAN_CD
                  AND DECODE(L.VSL_SVC_TP_CD, 'O', 'F', 'T') = @[p_vsl_svc_tp_cd]
                  AND V.VPS_PORT_CD LIKE @[p_yard1] || @[p_yard2] || '%'
--                  AND V.CLPT_IND_SEQ = '1'
                  ) VP
            WHERE V.VSL_CD = VP.VSL_CD
              AND V.SKD_VOY_NO = VP.SKD_VOY_NO
              AND V.SKD_DIR_CD = VP.SKD_DIR_CD

#if (${p_status} == 'VL')
              AND V.POL_CD = SUBSTR (VP.YD_CD, 1, 5)
#else
              AND V.POD_CD = SUBSTR (VP.YD_CD, 1, 5)
#end
#if (${p_vvd} != '')
              AND V.VSL_CD  = SUBSTR(@[p_vvd], 0, 4)
              AND V.SKD_VOY_NO  = SUBSTR(@[p_vvd], 5, 4)
              AND V.SKD_DIR_CD  = SUBSTR(@[p_vvd], 9, 1)
#end
              AND V.BKG_NO = C.BKG_NO
              AND C.BKG_NO = B.BKG_NO
              AND B.BKG_STS_CD NOT IN ('X', 'S')
              )
        GROUP BY VVD, LANE, ETD, PORT, CGO_TP ) A,
      (
        SELECT VVD,
          LANE,
          ETD,
          PORT,
          CGO_TP,
          MAX(DECODE (TY, 'EDI', BKG_CNT, 0)) AS EDI,
          MAX (DECODE (TY, 'MAN', BKG_CNT, 0)) AS MAN
        FROM (
            SELECT VP.VSL_CD||VP.SKD_VOY_NO||VP.SKD_DIR_CD AS VVD,
              VP.VSL_SLAN_CD AS LANE,
              TO_CHAR(ETD, 'YYYY-MM-DD HH24:MI') ETD,
              C.ORG_YD_CD AS PORT,
              DECODE(MVMT_INP_TP_CD, 'EDI', 'EDI', 'MAN') TY,
              DECODE(C.BKG_CGO_TP_CD, 'P', 'E', 'F') CGO_TP,
              COUNT(C.CNTR_NO) BKG_CNT
            FROM CTM_MOVEMENT C,
              (
                SELECT
                  VSL_CD,
                  SKD_VOY_NO,
                  SKD_DIR_CD,
                  SLAN_CD,
#if (${p_status} == 'VL')
                  VPS_ETD_DT ETD,
#else
                  VPS_ETA_DT ETD,
#end
                  YD_CD,
                  L.VSL_SLAN_CD
                FROM MDM_VSL_SVC_LANE L,
                  VSK_VSL_PORT_SKD V
#if (${p_status} == 'VL')
                WHERE V.VPS_ETD_DT BETWEEN TO_DATE (@[p_date1], 'YYYY-MM-DD') AND TO_DATE (@[p_date2], 'YYYY-MM-DD') + 0.99999
#else
                WHERE V.VPS_ETA_DT BETWEEN TO_DATE (@[p_date1], 'YYYY-MM-DD') AND TO_DATE (@[p_date2], 'YYYY-MM-DD') + 0.99999
#end
                  AND DECODE(L.VSL_SVC_TP_CD, 'O', 'F', 'T') = @[p_vsl_svc_tp_cd]
                  AND L.VSL_SLAN_CD = V.SLAN_CD
                  AND V.VPS_PORT_CD LIKE @[p_yard1] || @[p_yard2] || '%'
--                  AND V.CLPT_IND_SEQ = '1'
                  ) VP
            WHERE C.CRNT_VSL_CD = VP.VSL_CD
              AND C.CRNT_SKD_VOY_NO = VP.SKD_VOY_NO
              AND C.CRNT_SKD_DIR_CD = VP.SKD_DIR_CD
              AND SUBSTR (C.ORG_YD_CD, 1, 5) = SUBSTR (VP.YD_CD, 1, 5)
#if (${p_vvd} != '')
              AND VP.VSL_CD  = SUBSTR(@[p_vvd], 0, 4)
              AND VP.SKD_VOY_NO  = SUBSTR(@[p_vvd], 5, 4)
              AND VP.SKD_DIR_CD  = SUBSTR(@[p_vvd], 9, 1)
#end
              AND C.MVMT_STS_CD = @[p_status]
            GROUP BY VP.VSL_CD||VP.SKD_VOY_NO||VP.SKD_DIR_CD, VP.VSL_SLAN_CD, ETD, C.ORG_YD_CD, DECODE(MVMT_INP_TP_CD, 'EDI', 'EDI', 'MAN'), DECODE(C.BKG_CGO_TP_CD, 'P', 'E', 'F') )
        GROUP BY VVD, LANE, ETD, PORT, CGO_TP) B
    WHERE A.VVD(+) = B.VVD
      AND A.ETD(+) = B.ETD
      AND A.PORT(+) = B.PORT
      AND A.CGO_TP(+) = B.CGO_TP ) --END WITH STATEMENT
SELECT VVD,
  LANE,
  ETD,
  PORT,
  --FULL
  SUM(BKG1) BKG1,
  SUM(EDI1) EDI1,
  SUM(MAN1) MAN1,
  SUM(TOTAL1) TOTAL1,
  SUM(RESULT1) RESULT1,
  --EMPTY
  SUM(BKG2) BKG2,
  SUM(EDI2) EDI2,
  SUM(MAN2) MAN2,
  SUM(TOTAL2) TOTAL2,
  SUM(RESULT2) RESULT2
FROM (
    SELECT R.VVD,
      R.LANE,
      R.ETD,
      R.PORT,
      R.BKG_CNT AS BKG1,
      R.EDI AS EDI1,
      R.MAN AS MAN1,
      R.EDI + R.MAN AS TOTAL1,
      R.EDI + R.MAN - R.BKG_CNT AS RESULT1,
      0 AS BKG2,
      0 AS EDI2,
      0 AS MAN2,
      0 AS TOTAL2,
      0 AS RESULT2
    FROM RSLT R
    WHERE R.CGO_TP = 'F' --FULL CARGO
    UNION ALL
    SELECT R.VVD,
      R.LANE,
      R.ETD,
      R.PORT,
      0 AS BKG1,
      0 AS EDI1,
      0 AS MAN1,
      0 AS TOTAL1,
      0 AS RESULT1,
      R.BKG_CNT AS BKG2,
      R.EDI AS EDI2,
      R.MAN AS MAN2,
      R.EDI + R.MAN AS TOTAL2,
      R.EDI + R.MAN - R.BKG_CNT AS RESULT2
    FROM RSLT R
    WHERE R.CGO_TP = 'E' --EMPTY CARGO
      )
GROUP BY VVD, LANE, ETD, PORT
ORDER BY VVD, ETD, PORT			]]></sql>
			<params>
				<param name="p_date1" type="12" value="" out="N"/>
				<param name="p_date2" type="12" value="" out="N"/>
				<param name="p_vsl_svc_tp_cd" type="12" value="" out="N"/>
				<param name="p_yard1" type="12" value="" out="N"/>
				<param name="p_yard2" type="12" value="" out="N"/>
				<param name="p_vvd" type="12" value="" out="N"/>
				<param name="p_status" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
