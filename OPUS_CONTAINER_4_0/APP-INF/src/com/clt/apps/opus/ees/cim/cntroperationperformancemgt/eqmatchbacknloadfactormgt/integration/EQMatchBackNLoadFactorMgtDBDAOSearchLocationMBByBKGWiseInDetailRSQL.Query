<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="EQMatchBackNLoadFactorMgtDBDAOSearchLocationMBByBKGWiseInDetailRSQL">
			<desc><![CDATA[Location M/B by BKG-Wise]]></desc>
			<sql><![CDATA[
SELECT
'ZZZZZ' LOC_CD,
'ZZZZZ' DIVISION,
'9' XXX,
0 TOTAL,
SUM(DECODE(DSP_SEQ,'01',XXX,0)) AS qty_0,
SUM(DECODE(DSP_SEQ,'02',XXX,0)) AS qty_1,
SUM(DECODE(DSP_SEQ,'03',XXX,0)) AS qty_2,
SUM(DECODE(DSP_SEQ,'04',XXX,0)) AS qty_3,
SUM(DECODE(DSP_SEQ,'05',XXX,0)) AS qty_4,
SUM(DECODE(DSP_SEQ,'06',XXX,0)) AS qty_5,
SUM(DECODE(DSP_SEQ,'07',XXX,0)) AS qty_6,
SUM(DECODE(DSP_SEQ,'08',XXX,0)) AS qty_7,
SUM(DECODE(DSP_SEQ,'09',XXX,0)) AS qty_8,
SUM(DECODE(DSP_SEQ,'10',XXX,0)) AS qty_9,
SUM(DECODE(DSP_SEQ,'11',XXX,0)) AS qty_10,
SUM(DECODE(DSP_SEQ,'12',XXX,0)) AS qty_11,
SUM(DECODE(DSP_SEQ,'13',XXX,0)) AS qty_12,
SUM(DECODE(DSP_SEQ,'14',XXX,0)) AS qty_13,
SUM(DECODE(DSP_SEQ,'15',XXX,0)) AS qty_14,
SUM(DECODE(DSP_SEQ,'16',XXX,0)) AS qty_15,
SUM(DECODE(DSP_SEQ,'17',XXX,0)) AS qty_16,
SUM(DECODE(DSP_SEQ,'18',XXX,0)) AS qty_17,
SUM(DECODE(DSP_SEQ,'19',XXX,0)) AS qty_18,
SUM(DECODE(DSP_SEQ,'20',XXX,0)) AS qty_19,
SUM(DECODE(DSP_SEQ,'21',XXX,0)) AS qty_20,
SUM(DECODE(DSP_SEQ,'22',XXX,0)) AS qty_21,
SUM(DECODE(DSP_SEQ,'23',XXX,0)) AS qty_22,
SUM(DECODE(DSP_SEQ,'24',XXX,0)) AS qty_23,
SUM(DECODE(DSP_SEQ,'25',XXX,0)) AS qty_24,
SUM(DECODE(DSP_SEQ,'26',XXX,0)) AS qty_25,
SUM(DECODE(DSP_SEQ,'27',XXX,0)) AS qty_26,
SUM(DECODE(DSP_SEQ,'28',XXX,0)) AS qty_27,
SUM(DECODE(DSP_SEQ,'29',XXX,0)) AS qty_28,
SUM(DECODE(DSP_SEQ,'30',XXX,0)) AS qty_29,
SUM(DECODE(DSP_SEQ,'31',XXX,0)) AS qty_30,
SUM(DECODE(DSP_SEQ,'32',XXX,0)) AS qty_31,
SUM(DECODE(DSP_SEQ,'33',XXX,0)) AS qty_32,
SUM(DECODE(DSP_SEQ,'34',XXX,0)) AS qty_33,
SUM(DECODE(DSP_SEQ,'35',XXX,0)) AS qty_34,
SUM(DECODE(DSP_SEQ,'36',XXX,0)) AS qty_35,
SUM(DECODE(DSP_SEQ,'37',XXX,0)) AS qty_36,
SUM(DECODE(DSP_SEQ,'38',XXX,0)) AS qty_37,
SUM(DECODE(DSP_SEQ,'39',XXX,0)) AS qty_38,
SUM(DECODE(DSP_SEQ,'40',XXX,0)) AS qty_39
FROM
(
SELECT  DP_SEQ DSP_SEQ, 
        DECODE( @[tpsz] , 'A' , 1 , DECODE( CNTR_TPSZ_DIV_CD , @[tpsz] , 1 , 0 ) ) XXX
FROM    CIM_TP_SZ_DP_SEQ_V
ORDER BY  DP_SEQ
) Z

UNION ALL

SELECT
		X.LOC_CD,
		DECODE(MAX(Y.NO),'1','I/B','2','O/B','3','Balance','4','M/B(%)') division,
MAX(Y.NO) XXX,
		DECODE(
            MAX(Y.NO),'1',SUM(X.IN_QTY),'2',SUM(X.OUT_QTY),'3',SUM(BALANCE),'4',
			CASE
					WHEN SUM(X.IN_QTY) >= SUM(X.OUT_QTY) THEN ROUND( SUM(X.OUT_QTY) / SUM(X.IN_QTY) * 100 )
					WHEN SUM(X.OUT_QTY) >0 THEN ROUND( SUM(X.IN_QTY) / SUM(X.OUT_QTY) * -1 * 100 )
			ELSE 0
			END
		) total,
		SUM(DECODE(DSP_SEQ,'01',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_0,
		SUM(DECODE(DSP_SEQ,'02',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_1,
		SUM(DECODE(DSP_SEQ,'03',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_2,
		SUM(DECODE(DSP_SEQ,'04',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_3,
		SUM(DECODE(DSP_SEQ,'05',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_4,
		SUM(DECODE(DSP_SEQ,'06',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_5,
		SUM(DECODE(DSP_SEQ,'07',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_6,
		SUM(DECODE(DSP_SEQ,'08',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_7,
		SUM(DECODE(DSP_SEQ,'09',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_8,
		SUM(DECODE(DSP_SEQ,'10',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_9,
		SUM(DECODE(DSP_SEQ,'11',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_10,
		SUM(DECODE(DSP_SEQ,'12',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_11,
		SUM(DECODE(DSP_SEQ,'13',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_12,
		SUM(DECODE(DSP_SEQ,'14',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_13,
		SUM(DECODE(DSP_SEQ,'15',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_14,
		SUM(DECODE(DSP_SEQ,'16',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_15,
		SUM(DECODE(DSP_SEQ,'17',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_16,
		SUM(DECODE(DSP_SEQ,'18',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_17,
		SUM(DECODE(DSP_SEQ,'19',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_18,
		SUM(DECODE(DSP_SEQ,'20',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_19,
		SUM(DECODE(DSP_SEQ,'21',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_20,
		SUM(DECODE(DSP_SEQ,'22',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_21,
		SUM(DECODE(DSP_SEQ,'23',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_22,
		SUM(DECODE(DSP_SEQ,'24',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_23,
		SUM(DECODE(DSP_SEQ,'25',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_24,
		SUM(DECODE(DSP_SEQ,'26',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_25,
		SUM(DECODE(DSP_SEQ,'27',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_26,
		SUM(DECODE(DSP_SEQ,'28',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_27,
		SUM(DECODE(DSP_SEQ,'29',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_28,
		SUM(DECODE(DSP_SEQ,'30',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_29,
		SUM(DECODE(DSP_SEQ,'31',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_30,
		SUM(DECODE(DSP_SEQ,'32',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_31,
		SUM(DECODE(DSP_SEQ,'33',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_32,
		SUM(DECODE(DSP_SEQ,'34',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_33,
		SUM(DECODE(DSP_SEQ,'35',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_34,
		SUM(DECODE(DSP_SEQ,'36',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_35,
		SUM(DECODE(DSP_SEQ,'37',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_36,
		SUM(DECODE(DSP_SEQ,'38',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_37,
		SUM(DECODE(DSP_SEQ,'39',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_38,
		SUM(DECODE(DSP_SEQ,'40',DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_39
FROM
		(
			SELECT	--/*+ LEADING( O L T ) USE_NL(O L T S ) */
                    (
                    #if    ( ${locationBy} == 'AP' || ${locationBy} == 'RP' )
                    L.LOC_CD
                    #elseif( ${locationBy} == 'AR' )
                    O.RCC_CD
                    #elseif( ${locationBy} == 'RL' )
                    O.LCC_CD
                    #elseif( ${locationBy} == 'LE' || ${locationBy} == 'RE')
                    O.ECC_CD
                    #elseif( ${locationBy} == 'ES' || ${locationBy} == 'SS' || ${locationBy} == 'LS' )
                    O.SCC_CD
                    #elseif( ${locationBy} == 'RC' || ${locationBy} == 'AC' )
                    SUBSTR(O.SCC_CD,1,2)
                    #end
                    ) LOC_CD,
					S.DP_SEQ DSP_SEQ,
					SUM(T.IB_QTY) IN_QTY,
					SUM(T.OB_QTY) OUT_QTY,
					( SUM(T.IB_QTY) - SUM(T.OB_QTY) ) BALANCE,
					CASE
					WHEN SUM (T.IB_QTY) >= SUM (T.OB_QTY) THEN ROUND( SUM (T.OB_QTY) / SUM (T.IB_QTY) * 100 )
					WHEN SUM (T.OB_QTY) >0 THEN ROUND(  SUM (T.IB_QTY) / SUM (T.OB_QTY) * -1  * 100 )
					ELSE 0
					END AS MB
			FROM
					CIM_BKG_MTCH_BAK_SMRY T,
					MDM_LOCATION L,
					MDM_EQ_ORZ_CHT O,
					CIM_TP_SZ_DP_SEQ_V S
#if (${period} == 'W')
            WHERE T.TGT_YRWK BETWEEN @[from] AND @[to]
#end
#if (${period} == 'M')
            WHERE T.TGT_MVMT_DT BETWEEN @[from] AND @[to]
#end
			AND T.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD
			AND T.LOC_CD = L.LOC_CD
			AND L.SCC_CD = O.SCC_CD

#if ( ${locationBy} == 'AP' && ${locationBy} == 'RP' )
            AND T.CNTR_PERF_LOC_DIV_CD IN ('POL','POD')
#else
            AND T.CNTR_PERF_LOC_DIV_CD IN ('POR','DEL')
#end


#if ( ${locationBy} != 'AP' && ${locationBy} != 'AC' && ${locationBy} != 'AP' )
			#if    ( ${locationBy} == 'RL' || ${locationBy} == 'RC' || ${locationBy} == 'RP'  || ${locationBy} == 'RE')
			AND O.RCC_CD = @[location]
			#elseif( ${locationBy} == 'LE' || ${locationBy} == 'LS' )
			AND O.LCC_CD = @[location]
			#elseif( ${locationBy} == 'ES' )
			AND O.ECC_CD = @[location]
			#elseif( ${locationBy} == 'SS' )
			AND O.SCC_CD = @[location]
			#end
#end
/* tpsz */
#if (${tpsz} == 'D')
			AND T.CNTR_TPSZ_CD IN ( 'D2','D4','D5','D7','D8','D9','DW','DX' )
#end
#if (${tpsz} == 'S')
			AND T.CNTR_TPSZ_CD IN ( 'O2','O4','S2','S4','F2','F4','F5','A4','A2','P2','P4','T2','T4' )
#end
#if (${tpsz} == 'R')
			AND T.CNTR_TPSZ_CD IN ( 'R2','R5','R7' )
#end
/* rdType */
#if (${rdtype} == 'E')
			AND T.RD_FLG = 'N'
#end
#if (${rdtype} == 'O')
			AND T.RD_FLG = 'Y'
#end
/* soc */
#if (${soc} == 'E')
			AND T.SOC_FLG = 'N'
#end
#if (${soc} == 'O')
			AND T.SOC_FLG = 'Y'
#end
			GROUP BY
				    (
                    #if    ( ${locationBy} == 'AP' || ${locationBy} == 'RP' )
                    L.LOC_CD
                    #elseif( ${locationBy} == 'AR' )
                    O.RCC_CD
                    #elseif( ${locationBy} == 'RL' )
                    O.LCC_CD
                    #elseif( ${locationBy} == 'LE' || ${locationBy} == 'RE' )
                    O.ECC_CD
                    #elseif( ${locationBy} == 'ES' || ${locationBy} == 'SS' || ${locationBy} == 'LS' )
                    O.SCC_CD
                    #elseif( ${locationBy} == 'RC' || ${locationBy} == 'AC' )
                    SUBSTR(O.SCC_CD,1,2)
                    #end
                    ), S.DP_SEQ
        )   X,
		(
			SELECT '1' AS NO FROM DUAL UNION SELECT '2' AS NO FROM DUAL UNION SELECT '3' AS NO FROM DUAL UNION SELECT '4' AS NO FROM DUAL
		) Y
GROUP BY X.LOC_CD, DECODE(Y.NO,'1','AA','2','BB','3','CC','4','DD')
ORDER BY
		LOC_CD,XXX			]]></sql>
			<params>
				<param name="tpsz" type="12" value="" out="N"/>
				<param name="from" type="12" value="" out="N"/>
				<param name="to" type="12" value="" out="N"/>
				<param name="location" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
