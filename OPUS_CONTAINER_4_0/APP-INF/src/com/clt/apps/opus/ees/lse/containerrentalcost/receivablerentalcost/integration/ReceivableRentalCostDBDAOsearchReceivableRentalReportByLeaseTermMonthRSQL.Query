<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ReceivableRentalCostDBDAOsearchReceivableRentalReportByLeaseTermMonthRSQL">
			<desc><![CDATA[Receivable Invoice 한 결과에 대하여 Lease Term , Month별로 실적을 조회]]></desc>
			<sql><![CDATA[
WITH PARAM AS (
    SELECT 
            @[report_type]  AS REPORT_TYPE,
            @[period_year]  AS PERIOD_YEAR,
			@[period_stdt]  AS PERIOD_STDT,
            @[period_eddt]  AS PERIOD_EDDT,
            @[status]       AS STATUS,            
            @[receivable]   AS RECEIVABLE,
            @[agmt_cty_cd]  AS AGMT_CTY_CD,
            @[agmt_seq]     AS AGMT_SEQ,
            @[vndr_seq]     AS VNDR_SEQ,
            @[loc_tp]       AS LOC_TP,
            @[loc_cd]       AS LOC_CD
            
    FROM    DUAL
) 
, XXX AS(
SELECT /*+ INDEX(A, XPKLSE_RCV_RNTL_CHG) */
   DISTINCT TO_CHAR(A.VNDR_SEQ)  VNDR_SEQ,
   SUBSTR(NVL(VNDR.VNDR_ABBR_NM, '   '), 1, 3) ABBR_NM ,
   NVL(D.LSTM_CD , '  ') LSTM_CD,
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '01', COST_AMT, 0))  JAN,
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '02', COST_AMT, 0))  FEB,
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '03', COST_AMT, 0))  MAR,  
  (SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '01', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '02', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '03', COST_AMT, 0))) TTL_1,  
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '04', COST_AMT, 0))  APR,
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '05', COST_AMT, 0))  MAY,
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '06', COST_AMT, 0))  JUN,
  (SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '04', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '05', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '06', COST_AMT, 0))) TTL_2,  
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '07', COST_AMT, 0))  JUL,
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '08', COST_AMT, 0))  AUG,
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '09', COST_AMT, 0))  SEP,
  (SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '07', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '08', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '09', COST_AMT, 0))) TTL_3,  
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '10', COST_AMT, 0))  OCT,
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '11', COST_AMT, 0))  NOV,
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '12', COST_AMT, 0))  DEC,
  (SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '10', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '11', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '12', COST_AMT, 0))) TTL_4,
  (SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '01', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '02', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '03', COST_AMT, 0))+
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '04', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '05', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '06', COST_AMT, 0))+
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '07', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '08', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '09', COST_AMT, 0))+
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '10', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '11', COST_AMT, 0))+ 
   SUM(DECODE(SUBSTR(A.QTY_YRMON, 5, 2), '12', COST_AMT, 0))) G_TTL
FROM LSE_RCV_RNTL_CHG A,
  LSE_RCV_RNTL_CHG_DTL B,
  MDM_VENDOR VNDR,
  MST_CONTAINER D , PARAM P
WHERE A.COST_YRMON   = B.COST_YRMON 
  AND A.RCV_RNTL_SEQ = B.RCV_RNTL_SEQ
  AND A.AGMT_CTY_CD  = B.AGMT_CTY_CD
  AND A.AGMT_SEQ     = B.AGMT_SEQ
  AND A.VNDR_SEQ     = VNDR.VNDR_SEQ
#if(${search_tp} == 'Cost')
  AND   A.QTY_YRMON BETWEEN P.PERIOD_STDT AND P.PERIOD_EDDT
#elseif(${search_tp} == 'Revenue')
  AND   A.COST_YRMON BETWEEN P.PERIOD_STDT AND P.PERIOD_EDDT 
#elseif(${search_tp} == 'Payment')
  AND	A.INV_NO IN (
	SELECT B1.INV_NO
		FROM    INV_AR_IF_MN INV,
       	(SELECT  LSE.INV_NO,LSE.SRC_IF_DT,LSE.SRC_IF_SEQ
        	FROM    LSE_RCV_RNTL_CHG LSE , PARAM P
        	WHERE   1 = 1
        	AND     LSE.COST_YRMON BETWEEN P.PERIOD_STDT AND P.PERIOD_EDDT 
        	GROUP BY LSE.INV_NO,LSE.SRC_IF_DT,LSE.SRC_IF_SEQ
        	) B1,BKG_OUTSTANDING BKG
	WHERE   B1.SRC_IF_SEQ = INV.SRC_IF_SEQ(+)
		AND     B1.SRC_IF_DT = INV.SRC_IF_DT(+)
		AND     B1.INV_NO IS NOT NULL
		AND     BKG.OTS_STL_FLG = 'Y'
        AND     INV.IF_SRC_CD = 'LSE'
		AND     INV.BL_SRC_NO = BKG.CLT_BL_NO(+)
		AND     INV.BL_SRC_NO = BKG.INV_NO(+)
	)
#end
  AND A.CXL_FLG = 'N'
  AND B.LSE_RCV_CHG_CRE_CD <> 'D'
  AND B.CNTR_NO = d.CNTR_NO
#if (${receivable} == 'A' ) 
  AND A.LSE_CNTR_CHG_STS_CD = 'I'               --Actual Amount경우 조건, Total Amount 인 경우 조건이 없어짐..
#end

#if (${agmt_seq} != '' ) 
  AND A.AGMT_CTY_CD  = P.AGMT_CTY_CD
  AND A.AGMT_SEQ     = P.AGMT_SEQ
#end

#if (${status} == 'SBO' ) 
  AND B.LSTM_CD = 'SO'
#elseif (${status} == 'MUO' ) 
  AND B.LSTM_CD = 'MO'
#end

#if (${vndr_seq} != '')
  AND A.VNDR_SEQ = P.VNDR_SEQ
#end

#if (${lstm_cd_str} != '')
  AND B.LSTM_CD IN (
	        #foreach($key IN ${lstm_cd})
		        #if($velocityCount < $lstm_cd.size())
			        '$key',
		        #else
			        '$key'
		        #end
	        #end
				)
#end

#if (${cntr_tpsz_cd_str} != '')
            AND     B.CNTR_TPSZ_CD IN (
	        #foreach($key IN ${cntr_tpsz_cd})
		        #if($velocityCount < $cntr_tpsz_cd.size())
			        '$key',
		        #else
			        '$key'
		        #end
	        #end
				)
#end

#if (${charge_type_cd_str} != '')
  AND B.LSE_RCV_CHG_TP_CD IN (
	        #foreach($key IN ${charge_type_cd})
		        #if($velocityCount < $charge_type_cd.size())
			        '$key',
		        #else
			        '$key'
		        #end
	        #end
				)
#end

#if (${loc_cd} != '')
    
 #if (${loc_tp} == 'R')
  AND B.OFFH_LOC_CD IN (SELECT RCC_CD FROM MDM_EQ_ORZ_CHT WHERE RCC_CD = P.LOC_CD)
 #elseif (${loc_tp} == 'L')
  AND B.OFFH_LOC_CD IN (SELECT LCC_CD FROM MDM_EQ_ORZ_CHT WHERE LCC_CD = P.LOC_CD)
 #elseif (${loc_tp} == 'S')
  AND B.OFFH_LOC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE SCC_CD = P.LOC_CD)
 #elseif (${loc_tp} == 'C')
  AND SUBSTR(B.OFFH_LOC_CD, 0 , 2 ) = P.LOC_CD
 #end
#end
GROUP BY A.VNDR_SEQ,SUBSTR(NVL(VNDR.VNDR_ABBR_NM, '   '), 1, 3), d.LSTM_CD )
SELECT
          VNDR_SEQ,
          ABBR_NM,
          LSTM_CD,
          ABBR_NM1,
          JAN,
          FEB,
          MAR,
          TTL_1,
          APR,
          MAY,
          JUN,
          TTL_2,
          JUL,
          AUG,
          SEP,
          TTL_3,
          OCT,
          NOV,
          DEC,
          TTL_4,
          G_TTL
FROM(
SELECT
          VNDR_SEQ,
          ABBR_NM,
          AAA.LSTM_CD,
          ABBR_NM1,
          JAN,
          FEB,
          MAR,
          TTL_1,
          APR,
          MAY,
          JUN,
          TTL_2,
          JUL,
          AUG,
          SEP,
          TTL_3,
          OCT,
          NOV,
          DEC,
          TTL_4,
          G_TTL,
          BBB.DP_SEQ 
FROM( SELECT 
          VNDR_SEQ,
          ABBR_NM,
          LSTM_CD,
          ABBR_NM1,
          JAN,
          FEB,
          MAR,
          TTL_1,
          APR,
          MAY,
          JUN,
          TTL_2,
          JUL,
          AUG,
          SEP,
          TTL_3,
          OCT,
          NOV,
          DEC,
          TTL_4,
          G_TTL
          FROM (SELECT
                    VNDR_SEQ,
                    ABBR_NM,
                    LSTM_CD,
                    '1' ABBR_NM1,
                    JAN,
                    FEB,
                    MAR,
                    TTL_1,
                    APR,
                    MAY,
                    JUN,
                    TTL_2,
                    JUL,
                    AUG,
                    SEP,
                    TTL_3,
                    OCT,
                    NOV,
                    DEC,
                    TTL_4,
                    G_TTL
                FROM XXX
                UNION ALL
                SELECT
                    'S.TTL' VNDR_SEQ,
                    '' ABBR_NM,
                    LSTM_CD,
                    '2' ABBR_NM1,
                    SUM(JAN),
                    SUM(FEB),
                    SUM(MAR),
                    SUM(TTL_1),
                    SUM(APR),
                    SUM(MAY),
                    SUM(JUN),
                    SUM(TTL_2),
                    SUM(JUL),
                    SUM(AUG),
                    SUM(SEP),
                    SUM(TTL_3),
                    SUM(OCT),
                    SUM(NOV),
                    SUM(DEC),
                    SUM(TTL_4),
                    SUM(G_TTL)
                FROM XXX
                GROUP BY  LSTM_CD )
                ORDER BY LSTM_CD  , ABBR_NM1 ) AAA , ( SELECT LSTM_CD,
                                                          LSTM_NM,
                                                          DP_SEQ 
                                                       FROM MST_LSE_TERM
                                                       ORDER BY DP_SEQ ) BBB
                 WHERE AAA.LSTM_CD =  BBB.LSTM_CD
                 ORDER BY BBB.DP_SEQ )
          UNION ALL
          SELECT
          NULL VNDR_SEQ,
          NULL ABBR_NM,
          'G.TTL' LSTM_CD,
          NULL ABBR_NM1,
          SUM(JAN),
          SUM(FEB),
          SUM(MAR),
          SUM(TTL_1),
          SUM(APR),
          SUM(MAY),
          SUM(JUN),
          SUM(TTL_2),
          SUM(JUL),
          SUM(AUG),
          SUM(SEP),
          SUM(TTL_3),
          SUM(OCT),
          SUM(NOV),
          SUM(DEC),
          SUM(TTL_4),
          SUM(G_TTL)
          FROM XXX
		  GROUP BY 3			]]></sql>
			<params>
				<param name="report_type" type="12" value="" out="N"/>
				<param name="period_year" type="12" value="" out="N"/>
				<param name="period_stdt" type="12" value="" out="N"/>
				<param name="period_eddt" type="12" value="" out="N"/>
				<param name="status" type="12" value="" out="N"/>
				<param name="receivable" type="12" value="" out="N"/>
				<param name="agmt_cty_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="loc_tp" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
