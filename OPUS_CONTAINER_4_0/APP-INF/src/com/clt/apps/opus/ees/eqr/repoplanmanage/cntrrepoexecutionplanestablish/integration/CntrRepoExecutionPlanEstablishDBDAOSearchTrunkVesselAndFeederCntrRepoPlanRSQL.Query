<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CntrRepoExecutionPlanEstablishDBDAOSearchTrunkVesselAndFeederCntrRepoPlanRSQL">
			<desc><![CDATA[EES_EQR_0059]]></desc>
			<sql><![CDATA[
SELECT	 
	T1_PLN_YRWK
	,T1_CO_CD
	,T1_DIV
	,T1_TRSP_MOD_CD
	,T1_VSL_LANE_CD
	,T1_VVD
	,T1_FM_YD_CD
	,T1_FM_ETD_DT
	,T1_TO_YD_CD
	,T1_TO_ETA_DT
	,T1_TS
	,T1_EQ_REPO_PURP_CD
	,T1_CNTRIMAGE
	,T1_REPO_MTY_BKG_FLG
	,T1_MTY_BKG_NO
	-- T1_BKG_STS_CD
	,T1_REPO_PLN_FB_RSN_CD
	,T1_REPO_PLN_FB_RMK
	,T1_TOTALVOL
	#foreach( $key in ${arrtpsz})
		,T1_VOL${key}
	#end
	
    ,T1_REPO_PLN_ID		-- HIDDEN
	,T1_REF_ID			-- HIDDEN
	,T1_SORTNUM			-- HIDDEN	PLAN(1), Execution(2), SO(3)를 구분
	,T1_NUM				-- HIDDEdN 	NORMAL ROW(1), SUB TOTAL(2), GRAND TOTAL(3) 구분
	,T1_PAST_REPO_PLN_FLG	-- HIDDEN   과거에서 온 PLAN (Y)
	,T1_SPLIT_REPO_PLN_FLG-- HIDDEN   SPLIT 된 EXECUTE 표시(Y)
	,T1_FM_RCC	-- From ecc's RCC
	,T1_TO_RCC	-- To   ecc's RCC
	,T1_FM_LCC	-- From ecc's LCC
	,T1_TO_LCC	-- To   ecc's LCC
	,T1_FM_ECC
	,T1_TO_ECC
	,T1_CNTRNO			-- HIDDEN
	,T1_TPSZNO			-- HIDDEN
	
	#foreach( $key in ${arrtpsz})
		,T1_FLAG${key}FLAG
	#end
	,T1_VVD_CNT
	,T1_REPOBKG_FLAG
	,T1_SORT_FRLOC
	,T1_SORT_TOLOC
	,T1_SORT
	,T1_ETA_WEEK
	,T1_PLN_YRWK_NEXT
	
	
	,T1_PLN_SEQ					--HIDDEN
	,T1_TO_YARD
	,NVL((SELECT 'Y' FROM MDM_EQ_ORZ_CHT EOC, MDM_LOCATION ML WHERE EOC.SCC_CD = ML.SCC_CD AND ML.LOC_CD = SUBSTR(T1_FM_YD_CD, 1, 5) AND EOC.DELT_FLG = 'N'
             AND DECODE(T1_DIV, 'Plan', EOC.RCC_CD, EOC.LCC_CD) = (SELECT DECODE(T1_DIV, 'Plan', SUB.RCC_CD, SUB.LCC_CD)FROM MDM_ORGANIZATION MO, MDM_EQ_ORZ_CHT SUB, MDM_LOCATION ML WHERE MO.OFC_CD = @[off_cd]
			 					AND MO.LOC_CD = ML.LOC_CD
			 					AND ML.SCC_CD = SUB.SCC_CD
			 					AND SUB.DELT_FLG = 'N'
								AND ROWNUM = 1)) , 'Y') AS T1_FM_CHK_FLG  
	,NVL ((SELECT 'Y'FROM MDM_EQ_ORZ_CHT EOC, MDM_LOCATION ML WHERE EOC.SCC_CD = ML.SCC_CD AND ML.LOC_CD = SUBSTR(T1_TO_YD_CD, 1, 5) AND EOC.DELT_FLG = 'N'
            AND DECODE(T1_DIV, 'Plan', EOC.RCC_CD, EOC.LCC_CD) = (SELECT DECODE(T1_DIV, 'Plan', SUB.RCC_CD, SUB.LCC_CD) FROM MDM_ORGANIZATION MO, MDM_EQ_ORZ_CHT SUB, MDM_LOCATION ML WHERE MO.OFC_CD = @[off_cd]
                                AND MO.LOC_CD = ML.LOC_CD
                                AND ML.SCC_CD = SUB.SCC_CD
                                AND SUB.DELT_FLG = 'N'
                                AND ROWNUM = 1)) , 'Y') AS T1_TO_CHK_FLG  

	,CASE WHEN T1_DIV = 'Plan' THEN 
        (SELECT OFC_CD FROM COM_USER WHERE USR_ID = (SELECT UPD_USR_ID FROM EQR_VSL_LODG_DCHG_PLN WHERE REPO_PLN_ID =  @[repo_pln_id] AND PLN_YRWK = T1_PLN_YRWK AND PLN_SEQ = T1_PLN_SEQ ))
     ELSE 
        (SELECT OFC_CD FROM COM_USER WHERE USR_ID = (SELECT UPD_USR_ID FROM EQR_VSL_LODG_DCHG_EXE_PLN WHERE REPO_PLN_ID =  @[repo_pln_id] AND PLN_YRWK = T1_PLN_YRWK AND	PLN_SEQ = T1_PLN_SEQ AND REF_ID = T1_REF_ID))
     END T1_OFC_CD  
     
     ,CASE WHEN T1_DIV = 'Plan' THEN 
          (SELECT UPD_USR_ID FROM EQR_VSL_LODG_DCHG_PLN WHERE REPO_PLN_ID =  @[repo_pln_id] AND PLN_YRWK = T1_PLN_YRWK AND PLN_SEQ = T1_PLN_SEQ )
     ELSE 
          (SELECT UPD_USR_ID FROM EQR_VSL_LODG_DCHG_EXE_PLN WHERE REPO_PLN_ID =  @[repo_pln_id] AND	PLN_YRWK = T1_PLN_YRWK AND PLN_SEQ = T1_PLN_SEQ AND REF_ID = T1_REF_ID )
     END T1_UPD_USR_ID 

	,CASE WHEN T1_DIV = 'Plan' THEN 
         TO_CHAR((SELECT UPD_DT FROM EQR_VSL_LODG_DCHG_PLN WHERE REPO_PLN_ID =  @[repo_pln_id] AND PLN_YRWK = T1_PLN_YRWK AND PLN_SEQ = T1_PLN_SEQ ),'YYYY-MM-DD HH24:MI:SS')
     ELSE 
         TO_CHAR((SELECT UPD_DT FROM EQR_VSL_LODG_DCHG_EXE_PLN WHERE REPO_PLN_ID =  @[repo_pln_id] AND	PLN_YRWK = T1_PLN_YRWK AND	PLN_SEQ = T1_PLN_SEQ AND REF_ID = T1_REF_ID),'YYYY-MM-DD HH24:MI:SS')
     END T1_UPD_DT 
             

FROM 
(
SELECT	 PLN_YRWK								AS T1_PLN_YRWK
		,COMPANY								AS T1_CO_CD
		,DIVISION								AS T1_DIV
		,ITEM									AS T1_TRSP_MOD_CD
		,LANE									AS T1_VSL_LANE_CD
		,VVD									AS T1_VVD
		,FRLOC									AS T1_FM_YD_CD
		,TO_CHAR(ETD,'YYYY-MM-DD HH24:MI:SS')	AS T1_FM_ETD_DT
		,TOLOC									AS T1_TO_YD_CD
		,TO_CHAR(ETB,'YYYY-MM-DD HH24:MI:SS')	AS T1_TO_ETA_DT
		,TS										AS T1_TS
		,PURPOSE								AS T1_EQ_REPO_PURP_CD
		,NVL(CNTRNO,-1)							AS T1_CNTRIMAGE
		,MTY									AS T1_REPO_MTY_BKG_FLG
		,BKGNO									AS T1_MTY_BKG_NO
--		,BKG_STS_CD								AS T1_BKG_STS_CD
		,REASON									AS T1_REPO_PLN_FB_RSN_CD
		,REASONREMARK							AS T1_REPO_PLN_FB_RMK
		,SUM(TOTALVOL)							AS T1_TOTALVOL
	#foreach( $key in ${arrtpsz})
		,SUM(${key}VOL)							AS T1_VOL${key}
	#end
		,0										AS T1_TOTALCOST
	#foreach( $key in ${arrtpsz})
		,SUM(${key}COST)						AS T1_COST${key}
	#end
		,REPO_PLN_ID							AS T1_REPO_PLN_ID		-- HIDDEN
		,REF_ID									AS T1_REF_ID			-- HIDDEN
		,SORTNUM								AS T1_SORTNUM			-- HIDDEN	PLAN(1), Execution(2), SO(3)를 구분
		,NUM									AS T1_NUM				-- HIDDEdN 	NORMAL ROW(1), SUB TOTAL(2), GRAND TOTAL(3) 구분
		,PAST_REPO_PLN_FLG						AS T1_PAST_REPO_PLN_FLG	-- HIDDEN   과거에서 온 PLAN (Y)
		,SPLIT_REPO_PLN_FLG						AS T1_SPLIT_REPO_PLN_FLG-- HIDDEN   SPLIT 된 EXECUTE 표시(Y)
		,(SELECT DISTINCT RCC_CD FROM EQR_ECC_MST WHERE ECC_CD = FM_ECC) AS T1_FM_RCC	-- From ecc's RCC
		,(SELECT DISTINCT RCC_CD FROM EQR_ECC_MST WHERE ECC_CD = TO_ECC) AS T1_TO_RCC	-- To   ecc's RCC
		,(SELECT DISTINCT LCC_CD FROM EQR_ECC_MST WHERE ECC_CD = FM_ECC) AS T1_FM_LCC	-- From ecc's LCC
		,(SELECT DISTINCT LCC_CD FROM EQR_ECC_MST WHERE ECC_CD = TO_ECC) AS T1_TO_LCC	-- To   ecc's LCC
		,FM_ECC									AS T1_FM_ECC
		,TO_ECC									AS T1_TO_ECC
		,''										AS T1_CNTRNO			-- HIDDEN
		,''										AS T1_TPSZNO			-- HIDDEN
	#foreach( $key in ${arrtpsz})
		,SUM(${key}CNTRVOL)						AS T1_CNTRVOL${key}
	#end
	#foreach( $key in ${arrtpsz})
		,'F'									AS T1_FLAG${key}FLAG
	#end
		,''										AS T1_VVD_CNT
		,'F'									AS T1_REPOBKG_FLAG
		,SUBSTR(FRLOC, 0, 5)					AS T1_SORT_FRLOC
		,SUBSTR(TOLOC, 0, 5)					AS T1_SORT_TOLOC
		,FM_ECC||TO_ECC							AS T1_SORT
		,(SELECT PLN_YR||PLN_WK ETA_WEEK FROM EQR_WK_PRD WHERE WK_ST_DT <= TO_CHAR(ETB,'YYYYMMDD') AND WK_END_DT >= TO_CHAR(ETB,'YYYYMMDD'))	AS T1_ETA_WEEK
		,(SELECT PLN_YR||PLN_WK WEEK     FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK > PLN_YRWK AND ROWNUM = 1)										AS T1_PLN_YRWK_NEXT
	#foreach( $key in ${arrtpsz})
		,SUM(${key}MAXVOL)						AS T1_MAXVOL${key}				-- HIDDEN
	#end
	#foreach( $key in ${arrtpsz})
		,0										AS T1_BASICRATIO${key}BASICRATIO	--HIDDEN
		,0										AS T1_BASICVOL${key}BASICVOL		--HIDDEN
	#end
	#foreach( $key in ${arrtpsz})
		,SUM(${key}UNITCOST)					AS T1_UNITCOST${key}			--HIDDEN
		,SUM(${key}FROMCOST)					AS T1_FROMCOST${key}			--HIDDEN
		,SUM(${key}TOCOST)						AS T1_TOCOST${key}				--HIDDEN
	#end
		,PLN_SEQ								AS T1_PLN_SEQ					--HIDDEN
		,TOYD									AS T1_TO_YARD
		
FROM    (
		SELECT	 DECODE(B.NUM, 1, A.PLN_YRWK, 2, A.PLN_YRWK||' TTL', 3, 'TOTAL') PLN_YRWK
				,DECODE(B.NUM, 1, A.COMPANY,  2, '', 3, '')                      COMPANY
				,A.DIVISION
				,DECODE(B.NUM, 1, A.FRLOC,  2, '', 3, '')		FRLOC
				,DECODE(B.NUM, 1, A.ETD  ,  2, NULL, 3, NULL)	ETD
				,DECODE(B.NUM, 1, A.TOLOC,  2, '', 3, '')		TOLOC
				,DECODE(B.NUM, 1, A.TOYD,  2, '', 3, '')		TOYD
				,DECODE(B.NUM, 1, A.ETB  ,  2, NULL, 3, NULL)	ETB
				,DECODE(B.NUM, 1, A.TS   ,  2, '', 3, '')		TS
				,DECODE(B.NUM, 1, A.ITEM ,  2, '', 3, '')		ITEM
				,DECODE(B.NUM, 1, A.LANE ,  2, '', 3, '')		LANE
				,DECODE(B.NUM, 1, A.VVD  ,  2, '', 3, '')		VVD
				,DECODE(B.NUM, 1, A.PURPOSE,  2, '', 3, '')		PURPOSE
				,DECODE(B.NUM, 1, A.CNTRNO,  2, '', 3, '')		CNTRNO
				,DECODE(B.NUM, 1, A.MTY,  2, '', 3, '')			MTY
				,DECODE(B.NUM, 1, A.BKGNO,  2, '', 3, '')		BKGNO
				,DECODE(B.NUM, 1, BKG_STS_CD,	2, '', 3, '')	BKG_STS_CD
				,DECODE(B.NUM, 1, A.REASON,  2, '', 3, '')		REASON
				,DECODE(B.NUM, 1, A.REASONREMARK,  2, '', 3, '') REASONREMARK
				,SUM(A.TOTALVOL)  TOTALVOL
				,SUM(A.TOTALCOST) TOTALCOST
			#foreach( $key in ${arrtpsz})
				,SUM(A.${key}VOL)     ${key}VOL
				,SUM(A.${key}COST)    ${key}COST
				,SUM(A.${key}CNTRVOL) ${key}CNTRVOL
				,SUM(A.${key}MAXVOL)     ${key}MAXVOL --HIDDEN
				,SUM(A.${key}UNITCOST)   ${key}UNITCOST --HIDDEN
				,SUM(A.${key}FROMCOST)   ${key}FROMCOST --HIDDEN
				,SUM(A.${key}TOCOST)     ${key}TOCOST   --HIDDEN
			#end
				,DECODE(B.NUM, 1, A.REPO_PLN_ID,  2, '', 3, '')	REPO_PLN_ID 		-- HIDDEN
				,DECODE(B.NUM, 1, A.REF_ID,  2, '', 3, '')		REF_ID             -- HIDDEN
				,A.SORTNUM    	    -- HIDDEN
				,B.NUM           		-- HIDDEN
				,DECODE(B.NUM, 1, A.PAST_REPO_PLN_FLG,  2, '', 3, '')	PAST_REPO_PLN_FLG	-- HIDDEN
				,DECODE(B.NUM, 1, A.SPLIT_REPO_PLN_FLG,  2, '', 3, '')	SPLIT_REPO_PLN_FLG	-- HIDDEN
				,DECODE(B.NUM, 1, A.FM_ECC,		2, '', 3, '')			AS	FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,DECODE(B.NUM, 1, A.TO_ECC,		2, '', 3, '')			AS	TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
				,DECODE(B.NUM, 1, A.PLN_SEQ,	2, '', 3, '')			AS	PLN_SEQ             -- HIDDEN
		FROM	(
				-- PLAN -------------------------------------------
				--SELECT	 VSL_PLN.PLN_YRWK
                SELECT /*+ ordered use_hash(VSL_PLN EXE_PLN PLN_FB) */  VSL_PLN.PLN_YRWK 
						,VSL_PLN.PLN_SEQ
						,'' 		COMPANY
						,'Plan' 		DIVISION
						,VSL_PLN.FM_ECC_CD 	FRLOC
						,VSL_PLN.FM_ETD_DT 	ETD
						,VSL_PLN.TO_ECC_CD 	TOLOC
						,VSL_PLN.TO_YD_CD 	TOYD
						,VSL_PLN.TO_ETB_DT 	ETB
						,VSL_PLN.LDIS_TS_FLG TS
						,VSL_PLN.TRSP_MOD_CD 	ITEM
						,VSL_PLN.VSL_LANE_CD 	LANE
						,VSL_PLN.VSL_CD||VSL_PLN.SKD_VOY_NO||VSL_PLN.SKD_DIR_CD VVD
						,''			PURPOSE
						,''			CNTRNO
						,''			MTY
						,''			BKGNO
						,''			BKG_STS_CD
						,''			REASON
						,''			REASONREMARK
						,VSL_PLN.REPO_PLN_ID 		-- HIDDEN
						,'' REF_ID        -- HIDDEN
						,1 SORTNUM    	-- HIDDEN
						,VSL_PLN.PAST_REPO_PLN_FLG   -- HIDDEN
						,'' SPLIT_REPO_PLN_FLG -- HIDDEN
						,VSL_PLN.FM_ECC_CD FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
						,VSL_PLN.TO_ECC_CD TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
					#foreach( $key in ${arrtpsz})
						#if($velocityCount == 1 )
						,NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.CNTR_QTY)),0)
						#else
						+NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.CNTR_QTY)),0)
						#end
					#end
						TOTALVOL
					#foreach( $key in ${arrtpsz})
						#if($velocityCount == 1)
						,NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.LODG_DCHG_COST_AMT)),0)
						#else
						+NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.LODG_DCHG_COST_AMT)),0)
						#end
					#end
						TOTALCOST
					#foreach( $key in ${arrtpsz})
						,NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.CNTR_QTY)),0)				${key}VOL
						,NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.LODG_DCHG_COST_AMT)),0)	${key}COST
						,NVL(MAX(DECODE(EXE_PLN.CNTR_TPSZ_CD, '$key', EXE_PLN.MAX_QTY)),0)				${key}MAXVOL --HIDDEN
					#end
					#foreach( ${key} in ${tpszArr})
						,NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '${key.field2}', VSL_PLN.PLN_UC_AMT)),0)			${key.field1}UNITCOST --HIDDEN
						,NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '${key.field2}', VSL_PLN.LODG_PORT_COST_AMT)),0)	${key.field1}FROMCOST --HIDDEN
						,NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '${key.field2}', VSL_PLN.DCHG_PORT_COST_AMT)),0)	${key.field1}TOCOST --HIDDEN
						,0 ${key.field1}CNTRVOL
					#end
				FROM	(
						SELECT	 VSL_PLN.REPO_PLN_ID
								,VSL_PLN.PLN_YRWK
								,VSL_PLN.PLN_SEQ
								,VSL_PLN.TRSP_MOD_CD
								,VSL_PLN.VSL_LANE_CD
								,VSL_PLN.VSL_CD
								,VSL_PLN.SKD_VOY_NO
								,VSL_PLN.SKD_DIR_CD
								,VSL_PLN.FM_ECC_CD
								,VSL_PLN.FM_ETD_DT
								,VSL_PLN.TO_ECC_CD
								,VSL_PLN.TO_YD_CD
								,VSL_PLN.TO_ETB_DT
								,VSL_PLN.LDIS_TS_FLG
								,VSL_PLN.PAST_REPO_PLN_FLG
								,VSL_PLN_QTY.CNTR_TPSZ_CD
								,VSL_PLN_QTY.CNTR_QTY
								,VSL_PLN_QTY.PLN_UC_AMT
								,VSL_PLN_QTY.LODG_PORT_COST_AMT
								,VSL_PLN_QTY.DCHG_PORT_COST_AMT
								,VSL_PLN_QTY.LODG_DCHG_COST_AMT
						FROM	EQR_VSL_LODG_DCHG_PLN		VSL_PLN
								,EQR_VSL_LODG_DCHG_PLN_QTY	VSL_PLN_QTY
						WHERE	VSL_PLN.REPO_PLN_ID	= VSL_PLN_QTY.REPO_PLN_ID
							AND	VSL_PLN.PLN_YRWK	= VSL_PLN_QTY.PLN_YRWK
							AND VSL_PLN.PLN_SEQ		= VSL_PLN_QTY.PLN_SEQ
							AND VSL_PLN.REPO_PLN_ID	= @[repo_pln_id]
						#if (${itemText} != '')
							AND VSL_PLN.TRSP_MOD_CD	IN ( ${itemText} )
						#end
						#if (${laneText} != '')
							AND VSL_PLN.VSL_LANE_CD	IN ( ${laneText} )
						#end
						#if (${vvdText} != '')
							AND VSL_PLN.VSL_CD||VSL_PLN.SKD_VOY_NO||VSL_PLN.SKD_DIR_CD	IN ( ${vvdText} )
						#end
						#if (${userEcc} != ${userEcc})
							AND	(VSL_PLN.FM_ECC_CD IN ( ${userEccText} )
								OR VSL_PLN.TO_ECC_CD IN ( ${userEccText} ) )
						#end

						#if (${tpszText} != '')
							AND VSL_PLN_QTY.CNTR_TPSZ_CD	IN ( ${tpszText})
						#end
					#if ( ${fmtoat} == 1 )
					   #if ( ${fromstatus} != '' )
							AND VSL_PLN.FM_ECC_CD	IN ( ${fromEccText} )
					   #end
					   #if ( ${tostatus} != '' )
							AND VSL_PLN.TO_ECC_CD	IN ( ${toEccText} )
					   #end
							AND VSL_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
					#elseif ( ${fmtoat} == 3 )
						#if ( ${fromstatus} != '' )
							AND VSL_PLN.FM_ECC_CD	IN ( ${fromEccText} )
						#end
						#if ( ${tostatus} != '' )
							AND VSL_PLN.TO_ECC_CD	IN ( ${toEccText} )
						#end
							AND	TO_CHAR(VSL_PLN.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk] )
																			AND	(SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk] )
					#elseif ( ${fmtoat} == 4 )
						#if ( ${fromstatus} != '' )
							AND VSL_PLN.FM_ECC_CD	IN ( ${fromEccText} )
						#end
						#if ( ${tostatus} != '' )
							AND VSL_PLN.TO_ECC_CD	IN ( ${toEccText} )
						#end
							AND	TO_CHAR(VSL_PLN.TO_ETB_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk] )
																			AND	(SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk] )
					#else
					       AND (
					   #if( ${atstatus} != '' )
					           (VSL_PLN.FM_ECC_CD IN ( ${fromEccText} )
					               AND VSL_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )
					           OR
					           (VSL_PLN.TO_ECC_CD IN ( ${fromEccText} ) AND (SELECT  PLN_YR||PLN_WK
					                                                       FROM    EQR_WK_PRD
					                                                       WHERE   TO_CHAR(VSL_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )

					   #else
					           (VSL_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]  )
					           OR
					           (
					           (SELECT PLN_YR||PLN_WK
					             FROM  EQR_WK_PRD
					             WHERE TO_CHAR(VSL_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )
					   #end
					           )
					#end
						) VSL_PLN,
					#if( ${reasonText} != '' || ${mty} != '' )
						(
						SELECT	 A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.TRSP_MOD_CD
								,A.FM_YD_CD
								,A.TO_YD_CD
								,A.CO_CD
								,A.REPO_PLN_FB_RSN_CD
								,A.REPO_MTY_BKG_FLG
								,B.ECC_CD FM_ECC
								,C.ECC_CD TO_ECC
						FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A
								,MDM_EQ_ORZ_CHT B
								,MDM_EQ_ORZ_CHT C
								,MDM_LOCATION E
								,MDM_LOCATION F
						WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
						  AND E.SCC_CD = B.SCC_CD
							AND	SUBSTR(A.TO_YD_CD, 0, 5) = F.LOC_CD
							AND F.SCC_CD = C.SCC_CD
						#if( ${reasonText} != '' )
							AND	A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
						#end
						#if( ${mty} != '' )
							AND	A.REPO_MTY_BKG_FLG = '${mty}'
						#end
						) B,
					#end
						(
						SELECT	 A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.TRSP_MOD_CD
								,A.VSL_LANE_CD
								,A.VSL_CD
								,A.SKD_VOY_NO
								,A.SKD_DIR_CD
								,C.ECC_CD FM_ECC
								,D.ECC_CD TO_ECC
								,B.CNTR_TPSZ_CD
								,SUM(B.CNTR_QTY) MAX_QTY
						FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A
								,EQR_VSL_EXE_PLN_QTY B
								,MDM_EQ_ORZ_CHT C
								,MDM_EQ_ORZ_CHT D
								,MDM_LOCATION E
								,MDM_LOCATION F
						WHERE	A.REPO_PLN_ID = B.REPO_PLN_ID
							AND	A.PLN_YRWK    = B.PLN_YRWK
							AND	A.PLN_SEQ     = B.PLN_SEQ
							AND	A.REF_ID      = B.REF_ID
							AND	A.REPO_PLN_ID = @[repo_pln_id]
							AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
							AND	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
							AND E.SCC_CD = C.SCC_CD
							AND	SUBSTR(A.TO_YD_CD, 0, 5) = F.LOC_CD
							AND F.SCC_CD = D.SCC_CD
						GROUP BY A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.TRSP_MOD_CD
								,A.VSL_LANE_CD
								,A.VSL_CD
								,A.SKD_VOY_NO
								,A.SKD_DIR_CD
								,C.ECC_CD
								,D.ECC_CD
								,B.CNTR_TPSZ_CD
						) EXE_PLN

				WHERE	1=1
					AND	VSL_PLN.REPO_PLN_ID    = EXE_PLN.REPO_PLN_ID(+)
					AND	VSL_PLN.PLN_YRWK       = EXE_PLN.PLN_YRWK(+)
					AND	VSL_PLN.TRSP_MOD_CD    = EXE_PLN.TRSP_MOD_CD(+)
					AND	VSL_PLN.VSL_LANE_CD    = EXE_PLN.VSL_LANE_CD(+)
					AND	VSL_PLN.VSL_CD         = EXE_PLN.VSL_CD(+)
					AND	VSL_PLN.SKD_VOY_NO     = EXE_PLN.SKD_VOY_NO(+)
					AND	VSL_PLN.SKD_DIR_CD     = EXE_PLN.SKD_DIR_CD(+)
					AND	VSL_PLN.FM_ECC_CD      = EXE_PLN.FM_ECC(+)
					AND	VSL_PLN.TO_ECC_CD      = EXE_PLN.TO_ECC(+)
					AND	VSL_PLN.CNTR_TPSZ_CD   = EXE_PLN.CNTR_TPSZ_CD(+)
				#if( ${reasonText} != '' || ${mty} != '' )
					AND	VSL_PLN.REPO_PLN_ID		= B.REPO_PLN_ID
					AND	VSL_PLN.PLN_YRWK		= B.PLN_YRWK
					AND	VSL_PLN.FM_ECC_CD		= B.FM_ECC
					AND	VSL_PLN.TO_ECC_CD		= B.TO_ECC
					AND	VSL_PLN.TRSP_MOD_CD		= B.TRSP_MOD_CD
				#end
				GROUP BY VSL_PLN.PLN_YRWK
						,VSL_PLN.PLN_SEQ
						,VSL_PLN.FM_ECC_CD
						,VSL_PLN.FM_ETD_DT
						,VSL_PLN.TO_ECC_CD
						,VSL_PLN.TO_YD_CD
						,VSL_PLN.TO_ETB_DT
						,VSL_PLN.LDIS_TS_FLG
						,VSL_PLN.TRSP_MOD_CD
						,VSL_PLN.VSL_LANE_CD
						,VSL_PLN.VSL_CD||VSL_PLN.SKD_VOY_NO||VSL_PLN.SKD_DIR_CD
						,VSL_PLN.REPO_PLN_ID
						,VSL_PLN.PAST_REPO_PLN_FLG
				-- REPO BKG ---------------------------------------
				UNION ALL
				--SELECT	 /*+ NO_QUERY_TRANSFORMATION */ A.PLN_YRWK 		PLN_YRWK
                SELECT /*+ ordered use_hash(A B C D E F) */
						 A.PLN_YRWK   PLN_YRWK 
						,A.PLN_SEQ			PLN_SEQ
						,A.CO_CD 			COMPANY
						,'REPO BKG' 		DIVISION
						,A.FM_YD_CD  		FRLOC
						,A.FM_ETD_DT 		ETD
						,A.TO_YD_CD  		TOLOC
						,A.TO_YD_CD			TOYD
						,A.TO_ETB_DT 		ETB
						,''               TS
						,A.TRSP_MOD_CD 	ITEM
						,A.VSL_LANE_CD 	LANE
						,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD
						,A.EQ_REPO_PURP_CD PURPOSE
						,CASE WHEN A.MTY_BKG_NO IS NULL
							THEN
								-- ORIGINAL CNTR TABLE
								CASE WHEN A.PLN_YRWK = C.PLN_YRWK AND A.REF_ID = C.REF_ID
									THEN '0'  -- CNTR 존재
									ELSE '1'  -- CNTR 존재안함
									END
							ELSE
								--  SYNC CNTR TABLE
								CASE WHEN A.MTY_BKG_NO = E.BKG_NO
									THEN '0'  -- CNTR 존재
									ELSE '1'  -- CNTR 존재안함
									END
							END CNTRNO
						,A.REPO_MTY_BKG_FLG    MTY
						,A.MTY_BKG_NO          BKGNO
						,F.BKG_STS_CD			BKG_STS_CD
						,A.REPO_PLN_FB_RSN_CD  REASON
						,A.REPO_PLN_FB_RMK REASONREMARK
						,A.REPO_PLN_ID 				-- HIDDEN
						,A.REF_ID                     -- HIDDEN
						,2 SORTNUM   					-- HIDDEN
						,CASE WHEN A.SPLIT_REPO_PLN_FLG = 'Y'
							THEN 'Y'
							ELSE DECODE(A.PAST_REPO_PLN_FLG, '' , 'N', NULL, 'N', A.PAST_REPO_PLN_FLG)
							END PAST_REPO_PLN_FLG
						,A.SPLIT_REPO_PLN_FLG         -- HIDDEN
						,A.FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
						,A.TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
					#foreach( $key in ${arrtpsz})
						#if($velocityCount == 1)
							,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', DECODE(A.REPO_MTY_BKG_FLG, 'Y', DECODE(A.SPLIT_REPO_PLN_FLG,'N',B.CNTR_QTY,A.CNTR_QTY), A.CNTR_QTY))),0)
						#else
							+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', DECODE(A.REPO_MTY_BKG_FLG, 'Y', DECODE(A.SPLIT_REPO_PLN_FLG,'N',B.CNTR_QTY,A.CNTR_QTY), A.CNTR_QTY))),0)
						#end
					#end
						TOTALVOL
					#foreach( $key in ${arrtpsz})
						#if($velocityCount == 1)
							,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)
						#else
							+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)
						#end
					#end
						TOTALCOST
					#foreach( $key in ${arrtpsz})
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', DECODE(A.REPO_MTY_BKG_FLG, 'Y', DECODE(A.SPLIT_REPO_PLN_FLG,'N',B.CNTR_QTY,A.CNTR_QTY), A.CNTR_QTY))),0)  ${key}VOL
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)	${key}COST
						,0		${key}MAXVOL --HIDDEN
					#end
					#foreach( $key in ${arrtpsz})
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.PLN_UC_AMT)),0)       	${key}UNITCOST --HIDDEN
 						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_PORT_UC_AMT)),0) 	${key}FROMCOST --HIDDEN
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.DCHG_PORT_UC_AMT)),0) 	${key}TOCOST   --HIDDEN
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', D.REFCOUNT)),0) 			${key}CNTRVOL
					#end
				FROM	(
						SELECT	 A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.PLN_SEQ
								,A.REF_ID
								,B.CNTR_TPSZ_CD
								,A.CO_CD
								,A.TRSP_MOD_CD
								,A.VSL_LANE_CD
								,A.VSL_CD
								,A.SKD_VOY_NO
								,A.SKD_DIR_CD
								,A.FM_YD_CD
								,A.FM_ETD_DT
								,A.TO_YD_CD
								,A.TO_ETB_DT
								,A.EQ_REPO_PURP_CD
								,A.REPO_MTY_BKG_FLG
								,A.REPO_PLN_FB_RSN_CD
								,A.REPO_PLN_FB_RMK
								,B.CNTR_QTY
								,B.LODG_DCHG_COST_AMT
								,A.MTY_BKG_NO
								,A.OLD_BKG_GRP_NO
								,C.ECC_CD FM_ECC
								,D.ECC_CD TO_ECC
								,A.SPLIT_REPO_PLN_FLG
								,A.PAST_REPO_PLN_FLG
								,B.PLN_UC_AMT
								,B.LODG_PORT_UC_AMT
								,B.DCHG_PORT_UC_AMT
						FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A
								,EQR_VSL_EXE_PLN_QTY B
								,MDM_EQ_ORZ_CHT C
								,MDM_EQ_ORZ_CHT D
								,MDM_LOCATION E
								,MDM_LOCATION F
						WHERE	A.REPO_PLN_ID   = B.REPO_PLN_ID
							AND A.PLN_YRWK      = B.PLN_YRWK
							AND A.PLN_SEQ       = B.PLN_SEQ
							AND A.REF_ID        = B.REF_ID
							AND SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
							AND E.SCC_CD = C.SCC_CD
							AND SUBSTR(A.TO_YD_CD, 0, 5) = F.LOC_CD
							AND F.SCC_CD = D.SCC_CD
						) A
						,(
						SELECT	 A.OLD_BKG_GRP_NO
								,A.CNTR_TPSZ_CD
								,NVL(A.CNTR_QTY, 0) - NVL(B.CNTR_QTY, 0) CNTR_QTY  -- (original - split)
						FROM	(
								-- original booking vol 집계
								SELECT	 DISTINCT A.OLD_BKG_GRP_NO AS OLD_BKG_GRP_NO
										,B.CNTR_TPSZ_CD
										,SUM(B.CNTR_QTY) CNTR_QTY
								FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A
										,EQR_VSL_EXE_PLN_QTY B
										,(
										SELECT	DISTINCT OLD_BKG_GRP_NO
										FROM	EQR_VSL_LODG_DCHG_EXE_PLN
										WHERE	REPO_PLN_ID = @[repo_pln_id]
											AND	REPO_MTY_BKG_FLG = 'Y'
										) C
								WHERE	A.REPO_PLN_ID   = B.REPO_PLN_ID
									AND	A.PLN_YRWK      = B.PLN_YRWK
									AND	A.PLN_SEQ       = B.PLN_SEQ
									AND	A.REF_ID        = B.REF_ID
									AND	A.OLD_BKG_GRP_NO= C.OLD_BKG_GRP_NO
									--AND	A.SPLIT_REPO_PLN_FLG= 'N'
								GROUP BY A.OLD_BKG_GRP_NO
										,B.CNTR_TPSZ_CD
								) A
								,(
								-- split booking vol 집계
								SELECT	 DISTINCT A.OLD_BKG_GRP_NO AS OLD_BKG_GRP_NO
										,B.CNTR_TPSZ_CD
										,SUM(B.CNTR_QTY) CNTR_QTY
								FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A
										,EQR_VSL_EXE_PLN_QTY B
										,(
										SELECT	DISTINCT OLD_BKG_GRP_NO
										FROM	EQR_VSL_LODG_DCHG_EXE_PLN
										WHERE	REPO_PLN_ID			= @[repo_pln_id]
											AND	REPO_MTY_BKG_FLG	= 'Y'
											AND	SPLIT_REPO_PLN_FLG	= 'Y'
											--AND	TRIM(MTY_BKG_NO_SPLIT) IS NOT NULL
										) C
								WHERE	A.REPO_PLN_ID   = B.REPO_PLN_ID
									AND A.PLN_YRWK      = B.PLN_YRWK
									AND A.PLN_SEQ       = B.PLN_SEQ
									AND A.REF_ID        = B.REF_ID
									AND A.OLD_BKG_GRP_NO	= C.OLD_BKG_GRP_NO
								    AND	A.REPO_MTY_BKG_FLG	= 'Y'
									AND	A.SPLIT_REPO_PLN_FLG	= 'Y'

								GROUP BY A.OLD_BKG_GRP_NO
										,B.CNTR_TPSZ_CD
								) B
						WHERE	A.OLD_BKG_GRP_NO = B.OLD_BKG_GRP_NO(+)
							AND	A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD(+)
						) B
						,(
						--SELECT	PLN_CNTR.REPO_PLN_ID
                        SELECT /*+ ORDERED use_nl(EXE_PLN PLN_CNTR) */ PLN_CNTR.REPO_PLN_ID 
								,PLN_CNTR.PLN_YRWK
								,PLN_CNTR.PLN_SEQ
								,PLN_CNTR.REF_ID
								,NVL(COUNT(*), 0) REFCOUNT
						FROM	EQR_EXE_PLN_CNTR PLN_CNTR,
								(SELECT	 DISTINCT EXE_PLN.REPO_PLN_ID  
										,EXE_PLN.PLN_YRWK
										,EXE_PLN.PLN_SEQ
										,EXE_PLN.REF_ID
								FROM     EQR_VSL_LODG_DCHG_EXE_PLN EXE_PLN
										,EQR_VSL_EXE_PLN_QTY EXE_PLN_QTY
								WHERE	EXE_PLN_QTY.REPO_PLN_ID = EXE_PLN.REPO_PLN_ID
									AND EXE_PLN_QTY.PLN_YRWK    = EXE_PLN.PLN_YRWK
									AND EXE_PLN_QTY.PLN_SEQ     = EXE_PLN.PLN_SEQ
									AND EXE_PLN_QTY.REF_ID      = EXE_PLN.REF_ID
									AND EXE_PLN.REPO_PLN_ID = @[repo_pln_id]
							#if ( ${fmtoat} == 1 )
									AND EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
								#if ( ${fromstatus} != '' )
									AND SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ) )
								#end
								#if ( ${tostatus} != '' )
									AND SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ) )
								#end
							#elseif ( ${fmtoat} == 3 )
								AND  TO_CHAR(EXE_PLN.FM_ETD_DT,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk] )
																			AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk] )

								#if ( ${fromstatus} != '' )
									AND SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ) )
								#end
								#if ( ${tostatus} != '' )
									AND SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ) )
								#end
							#elseif ( ${fmtoat} == 4 )
									AND	TO_CHAR(EXE_PLN.TO_ETB_DT,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK =  @[fm_plnyrwk])
																					AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK =  @[to_plnyrwk])

								#if ( ${fromstatus} != '' )
									AND SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ) )
								#end
								#if ( ${tostatus} != '' )
									AND SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ) )
								#end
							#else
									AND	(
								#if ( ${atstatus} != '' )
											(EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
										 	AND SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText}) ) )
										OR
											((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(EXE_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT)  BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
											AND SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ) ) )
								#else
											(EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )
										OR
											((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(EXE_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )
								#end
										)
							#end
								#if (${tpszText} != '')
									AND	EXE_PLN_QTY.CNTR_TPSZ_CD IN (${tpszText})
								#end
								#if (${reasonText} != '')
									AND	EXE_PLN.REPO_PLN_FB_RSN_CD IN (${reasonText})
								#end
								#if (${itemText} != '')
									AND	EXE_PLN.TRSP_MOD_CD IN (${itemText})
								#end
								#if (${laneText} != '')
									AND	EXE_PLN.VSL_LANE_CD IN (${laneText})
								#end
								#if (${vvdText} != '')
									AND	EXE_PLN.VSL_CD||EXE_PLN.SKD_VOY_NO||EXE_PLN.SKD_DIR_CD IN (${vvdText})
								#end
								#if (${mty} != '')
									AND	EXE_PLN.REPO_MTY_BKG_FLG = '${mty}'
								#end

								) EXE_PLN
						WHERE	PLN_CNTR.REPO_PLN_ID = EXE_PLN.REPO_PLN_ID
							AND	PLN_CNTR.PLN_YRWK    = EXE_PLN.PLN_YRWK
							AND	PLN_CNTR.PLN_SEQ     = EXE_PLN.PLN_SEQ
							AND	PLN_CNTR.REF_ID      = EXE_PLN.REF_ID

						GROUP BY PLN_CNTR.REPO_PLN_ID
								,PLN_CNTR.PLN_YRWK
								,PLN_CNTR.PLN_SEQ
								,PLN_CNTR.REF_ID
						HAVING NVL(COUNT(*), 0) > 0
						) C
						,(
						--SELECT	 PLN_CNTR.REPO_PLN_ID
                        SELECT /*+ ORDERED use_nl(EXE_PLN PLN_CNTR) */ PLN_CNTR.REPO_PLN_ID 
								,PLN_CNTR.PLN_YRWK
								,PLN_CNTR.PLN_SEQ
								,PLN_CNTR.REF_ID
								,PLN_CNTR.CNTR_TPSZ_CD
								,NVL(COUNT(*), 0) REFCOUNT
						FROM	EQR_EXE_PLN_CNTR PLN_CNTR,
								(
								SELECT	 DISTINCT EXE_PLN.REPO_PLN_ID 
										,EXE_PLN.PLN_YRWK
										,EXE_PLN.PLN_SEQ
										,EXE_PLN.REF_ID
										,EXE_PLN_QTY.CNTR_TPSZ_CD
								FROM     EQR_VSL_LODG_DCHG_EXE_PLN EXE_PLN
										,EQR_VSL_EXE_PLN_QTY EXE_PLN_QTY
								WHERE   EXE_PLN.REPO_PLN_ID = EXE_PLN_QTY.REPO_PLN_ID
									AND EXE_PLN.PLN_YRWK    = EXE_PLN_QTY.PLN_YRWK
									AND EXE_PLN.PLN_SEQ     = EXE_PLN_QTY.PLN_SEQ
									AND EXE_PLN.REF_ID      = EXE_PLN_QTY.REF_ID
									AND EXE_PLN.REPO_PLN_ID = @[repo_pln_id]
							#if ( ${fmtoat} == 1 )
									AND	EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
								#if( ${fromstatus} != '' )
									AND	SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText}) )
								#end
								#if( ${tostatus} != '' )
									AND	SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText}))
								#end
							#elseif ( ${fmtoat} == 3 )
									AND	TO_CHAR(EXE_PLN.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
																					AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
								#if( ${fromstatus} != '' )
									AND	SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText}) )
								#end
								#if( ${tostatus} != '' )
									AND	SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText}))
								#end
							#elseif ( ${fmtoat} == 4 )
									AND	TO_CHAR(EXE_PLN.TO_ETB_DT ,'YYYYMMDD') BETWEEN  (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
																					AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
								#if( ${fromstatus} != '' )
									AND	SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText}) )
								#end
								#if( ${tostatus} != '' )
									AND	SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText}))
								#end
							#else
									AND (
								#if ( ${atstatus} != '' )
										(EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
											AND SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText})) )
										OR
										((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(EXE_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
											AND SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText})) )
								#else
										(EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk])
										OR
										((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(EXE_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )
								#end
										)
							#end
								#if(${userEcc} != ${userEcc})
									AND (SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${userEccText} ) )
										OR SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${userEccText} )) )
								#end
								#if(${tpszText} != '')
									AND EXE_PLN_QTY.CNTR_TPSZ_CD IN (${tpszText})
								#end
								#if(${reasonText} != '')
									AND EXE_PLN.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
								#end
								#if(${itemText} != '')
									AND EXE_PLN.TRSP_MOD_CD IN ( ${itemText} )
								#end
								#if(${mty} != '')
									AND	EXE_PLN.REPO_MTY_BKG_FLG = '${mty}'
								#end
								#if(${laneText} != '')
									AND EXE_PLN.VSL_LANE_CD IN ( ${laneText} )
								#end
								#if(${vvdText} != '')
									AND EXE_PLN.VSL_CD||EXE_PLN.SKD_VOY_NO||EXE_PLN.SKD_DIR_CD IN ( ${vvdText} )
								#end

								) EXE_PLN
						WHERE	PLN_CNTR.REPO_PLN_ID = EXE_PLN.REPO_PLN_ID
							AND	PLN_CNTR.PLN_YRWK    = EXE_PLN.PLN_YRWK
							AND	PLN_CNTR.REF_ID      = EXE_PLN.REF_ID
							AND	PLN_CNTR.CNTR_TPSZ_CD= EXE_PLN.CNTR_TPSZ_CD
						GROUP BY  PLN_CNTR.REPO_PLN_ID
								, PLN_CNTR.PLN_YRWK
								, PLN_CNTR.PLN_SEQ
								, PLN_CNTR.REF_ID
								, PLN_CNTR.CNTR_TPSZ_CD
						) D
						,(
						SELECT	 A.BKG_NO
								,B.OLD_BKG_GRP_NO
								,NVL(COUNT(*), 0) REFCOUNT
						FROM	 BKG_CONTAINER A
								,EQR_VSL_LODG_DCHG_EXE_PLN B
								,EQR_VSL_EXE_PLN_QTY C
						WHERE	B.REPO_PLN_ID = C.REPO_PLN_ID
							AND	B.PLN_YRWK  = C.PLN_YRWK
							AND	B.PLN_SEQ   = C.PLN_SEQ
							AND	B.REF_ID    = C.REF_ID
							AND	A.BKG_NO	= B.MTY_BKG_NO
							AND	B.REPO_PLN_ID = @[repo_pln_id]
							AND	B.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
							AND	B.CO_CD = 'H'
						#if(${tpszText} != '')
							AND	C.CNTR_TPSZ_CD IN ( ${tpszText} )
						#end
						GROUP BY A.BKG_NO
								,B.OLD_BKG_GRP_NO
						) E
						,(
						SELECT	 BKG_NO
								,BKG_STS_CD
						FROM	BKG_BOOKING
						WHERE	BKG_CGO_TP_CD = 'P'
							AND	BKG_NO IN	(
											SELECT	MTY_BKG_NO
											FROM	EQR_VSL_LODG_DCHG_EXE_PLN
											WHERE	REPO_PLN_ID	= @[repo_pln_id]
												AND	PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
												AND	REPO_MTY_BKG_FLG = 'Y'
												AND	MTY_BKG_NO IS NOT NULL
											)
						) F
				WHERE	A.OLD_BKG_GRP_NO= B.OLD_BKG_GRP_NO(+)
					AND	A.CNTR_TPSZ_CD	= B.CNTR_TPSZ_CD(+)
					AND	A.PLN_YRWK		= C.PLN_YRWK(+)
					AND	A.REF_ID		= C.REF_ID(+)
					AND	A.PLN_YRWK		= D.PLN_YRWK(+)
					AND	A.REF_ID		= D.REF_ID(+)
					AND	A.CNTR_TPSZ_CD	= D.CNTR_TPSZ_CD(+)
					AND	A.MTY_BKG_NO	= E.BKG_NO(+)
					AND	A.MTY_BKG_NO	= F.BKG_NO(+)
					AND	A.REPO_PLN_ID	= @[repo_pln_id]
			#if( ${fmtoat} == 1 )
					AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
				#if( ${fromstatus} != '' )
					AND	A.FM_ECC IN ( ${fromEccText} )
				#end
				#if( ${tostatus} != '' )
					AND	A.TO_ECC IN ( ${toEccText} )
				#end
			#elseif( ${fmtoat} == 3 )
					AND	TO_CHAR(A.FM_ETD_DT,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
														   AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
				#if( ${fromstatus} != '' )
					AND	A.FM_ECC IN ( ${fromEccText} )
				#end
				#if( ${tostatus} != '' )
					AND	A.TO_ECC IN ( ${toEccText} )
				#end
			#elseif( ${fmtoat} == 4 )
					AND	TO_CHAR(A.TO_ETB_DT,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
														   AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
				#if( ${fromstatus} != '' )
					AND	A.FM_ECC IN ( ${fromEccText} )
				#end
				#if( ${tostatus} != '' )
					AND	A.TO_ECC IN ( ${toEccText} )
				#end
			#else
					AND (
				#if( ${atstatus} != '' )
						(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
						 	AND A.FM_ECC IN ( ${fromEccText} ) )
						OR
						((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]
							AND A.TO_ECC IN ( ${fromEccText} ) )
				#else
						(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )
						OR
						((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )
				#end
						)
			#end
				#if(${userEcc} != ${userEcc})
					AND	(A.FM_ECC IN ( ${userEccText} ) OR A.TO_ECC IN ( ${userEccText} ))
				#end
				#if(${reasonText} != '')
					AND	A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
				#end
				#if(${tpszText} != '')
					AND	A.CNTR_TPSZ_CD IN ( ${tpszText} )
				#end
				#if(${itemText} != '')
					AND	A.TRSP_MOD_CD IN (${itemText})
				#end
				#if(${mty} != '')
					AND	A.REPO_MTY_BKG_FLG = '${mty}'
				#end
				#if(${laneText} != '')
					AND	A.VSL_LANE_CD IN ( ${laneText} )
				#end
				#if(${vvdText} != '')
					AND	A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdText} )
				#end
				GROUP BY A.PLN_YRWK
						,A.PLN_SEQ
						,A.CO_CD
						,A.FM_YD_CD
						,A.FM_ETD_DT
						,A.TO_YD_CD
						,A.TO_ETB_DT
						,A.TRSP_MOD_CD
						,A.VSL_LANE_CD
						,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD
						,A.EQ_REPO_PURP_CD
						,CASE WHEN A.MTY_BKG_NO IS NULL
							THEN
								-- ORIGINAL CNTR TABLE
								CASE WHEN A.PLN_YRWK = C.PLN_YRWK AND A.REF_ID = C.REF_ID
									THEN '0'  -- CNTR 존재
									ELSE '1'  -- CNTR 존재안함
									END
							ELSE
								--  SYNC CNTR TABLE
								CASE WHEN A.MTY_BKG_NO = E.BKG_NO
									THEN '0'  -- CNTR 존재
									ELSE '1'  -- CNTR 존재안함
									END
							END
						,A.REPO_MTY_BKG_FLG
						,A.REPO_PLN_FB_RSN_CD
						,A.REPO_PLN_FB_RMK
						,A.MTY_BKG_NO
						,F.BKG_STS_CD
						,A.REPO_PLN_ID
						,A.REF_ID
						,A.FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
						,A.TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
						,A.SPLIT_REPO_PLN_FLG
						,CASE WHEN A.SPLIT_REPO_PLN_FLG = 'Y'
							THEN 'Y'
							ELSE DECODE(A.PAST_REPO_PLN_FLG, '' , 'N', NULL, 'N', A.PAST_REPO_PLN_FLG)
							END
				) A,
				(
			   	SELECT 1 NUM, '' NAME FROM DUAL
			   	UNION
			   	SELECT 2 NUM, 'TOTAL' NAME FROM DUAL
			   	UNION
			   	SELECT 3 NUM, 'GRAND TOTAL' NAME FROM DUAL
				) B
		GROUP BY DECODE(B.NUM, 1, A.PLN_YRWK, 2, A.PLN_YRWK||' TTL', 3, 'TOTAL')
				,DECODE(B.NUM, 1, A.COMPANY,  2, '', 3, '')
				,A.DIVISION
				,A.BKGNO
				,DECODE(B.NUM, 1, BKG_STS_CD,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.REPO_PLN_ID,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.REF_ID,  2, '', 3, '')
				,A.SORTNUM
				,B.NUM
				,DECODE(B.NUM, 1, A.PAST_REPO_PLN_FLG,  2, '', 3, '')	 -- HIDDEN
				,DECODE(B.NUM, 1, A.SPLIT_REPO_PLN_FLG,  2, '', 3, '') 	-- HIDDEN
				,DECODE(B.NUM, 1, A.FM_ECC,  2, '', 3, '')  -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,DECODE(B.NUM, 1, A.TO_ECC,  2, '', 3, '')  -- SORT에 사용될 SCC의 해당 TO ECC 정보
				,DECODE(B.NUM, 1, A.FRLOC,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.ETD  ,  2, NULL, 3, NULL)
				,DECODE(B.NUM, 1, A.TOLOC,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.TOYD,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.ETB  ,  2, NULL, 3, NULL)
				,DECODE(B.NUM, 1, A.TS   ,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.ITEM ,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.LANE ,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.VVD  ,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.PURPOSE,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.CNTRNO,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.MTY,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.BKGNO,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.REASON,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.REASONREMARK,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.PLN_SEQ,  2, '', 3, '')
		)
GROUP BY PLN_YRWK
		,COMPANY
		,DIVISION
		,FRLOC
		,TO_CHAR(ETD,'YYYY-MM-DD HH24:MI:SS')
		,TOLOC
		,TOYD
		,TO_CHAR(ETB,'YYYY-MM-DD HH24:MI:SS')
		,TS
		,ITEM
		,LANE
		,VVD
		,PURPOSE
		,CNTRNO
		,MTY
		,REASON
		,REASONREMARK
		,BKGNO
		,BKG_STS_CD
		,REPO_PLN_ID 	-- HIDDEN
		,REF_ID       -- HIDDEN
		,SORTNUM    	-- HIDDEN
		,NUM        	-- HIDDEN
		,FM_ECC||TO_ECC
		,FM_ECC
		,TO_ECC
		,PAST_REPO_PLN_FLG	-- HIDDEN
		,SPLIT_REPO_PLN_FLG	-- HIDDEN
		,ETB
		,PLN_SEQ
ORDER BY 1, T1_TRSP_MOD_CD, T1_PLN_SEQ, T1_DIV, T1_SORT, T1_VSL_LANE_CD, T1_VVD, T1_PAST_REPO_PLN_FLG||T1_SORTNUM, T1_MTY_BKG_NO
)
--, BKGNO_SPLIT			]]></sql>
			<params>
				<param name="off_cd" type="12" value="" out="N"/>
				<param name="repo_pln_id" type="12" value="" out="N"/>
				<param name="fm_plnyrwk" type="12" value="" out="N"/>
				<param name="to_plnyrwk" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
