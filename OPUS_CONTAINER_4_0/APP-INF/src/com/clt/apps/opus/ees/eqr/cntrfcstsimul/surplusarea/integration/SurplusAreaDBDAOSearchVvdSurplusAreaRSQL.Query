<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SurplusAreaDBDAOSearchVvdSurplusAreaRSQL">
			<desc><![CDATA[Port Inventory Balance Simulation 의 VVD sheet 를 조회한다]]></desc>
			<sql><![CDATA[
--// BSA GRID 조회 V01 
WITH 
BSA_GRID_O1 AS (
    SELECT 
		DISTINCT
		NVL(A.RHQ,DECODE(A.TRD_CD,'AES','HAMUR','TPS','NYCNA','IAS','SINWA','')) RHQ,
        A.TRD_CD, A.SUB_TRD_CD, A.RLANE_CD, A.IOC_CD, A.COST_YRWK, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD
        , B.FNL_HJS_BSA_CAPA_BSA BSA, B.FNL_HJS_BSA_CAPA_WT BSA_WGT
    FROM (
		SELECT A.TRD_CD, A.SUB_TRD_CD, A.IOC_CD, A.RLANE_CD, A.COST_YRWK, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD 
        , (
            SELECT
            DISTINCT O.AR_HD_QTR_OFC_CD RHQ
            FROM MDM_LOCATION M, MDM_ORGANIZATION O
            WHERE 1=1 
			AND M.EQ_CTRL_OFC_CD = O.OFC_CD
            AND M.LOC_CD = A.VPS_PORT_CD
            AND NVL(M.DELT_FLG,'N') <> 'Y'
            AND NVL(O.DELT_FLG,'N') <> 'Y'
            AND O.AR_HD_QTR_OFC_CD IS NOT NULL
            AND ROWNUM = 1
        ) RHQ, A.VPS_PORT_CD
		FROM (
        SELECT 
            DISTINCT
            R.REP_TRD_CD TRD_CD, D.SUB_TRD_CD, R.RLANE_CD, D.VSL_SLAN_DIR_CD, D.FM_CONTI_CD, D.IOC_CD
            , P.COST_YR||P.COST_WK AS COST_YRWK, P.SLS_FM_DT, P.SLS_TO_DT
            , V.VSL_CD, V.SKD_VOY_NO, V.SKD_DIR_CD, V.SLAN_CD, V.CLPT_SEQ, V.VPS_PORT_CD, V.YD_CD
            , MAX(DECODE(V.TURN_PORT_FLG,'Y',V.VPS_ETD_DT,'')) OVER (PARTITION BY V.SLAN_CD,V.VSL_CD,V.SKD_VOY_NO,V.SKD_DIR_CD) MAX_VPS_ETD_DT
        FROM MDM_REV_LANE R, MDM_DTL_REV_LANE D, MDM_LOCATION L, COA_MON_VVD C, COA_WK_PRD P, VSK_VSL_PORT_SKD V, MDM_VSL_SVC_LANE M, MDM_LOCATION T
        WHERE  1=1
            AND R.RLANE_CD = D.RLANE_CD
            AND NVL(R.DELT_FLG,'N') <> 'Y' 
            AND NVL(D.DELT_FLG,'N') <> 'Y' 
            AND D.IOC_CD = CASE WHEN SUBSTR(R.REP_TRD_CD,1,1)='I' THEN 'I' ELSE 'O' END
    #if(${lane} != '')        -- Lane 콤보 조건 일 경우
        AND (
        #foreach($key IN ${arr_lane})
            #if($velocityCount > 1 )
                OR
            #end 
                (
                        D.RLANE_CD LIKE SUBSTR('$key',6,3)||'%'  -- LANE
                    AND D.SUB_TRD_CD = SUBSTR('$key',4,2)        -- SUB TRADE
                    AND R.REP_TRD_CD = SUBSTR('$key',1,3)        -- TRADE
                )
        #end
        )
    #elseif(${subtrade} != '') -- S.Trade 콤보 조건 일 경우
        AND (
        #foreach($key IN ${arr_subtrade})
            #if($velocityCount > 1 )
                OR
            #end 
                (
                        D.SUB_TRD_CD = SUBSTR('$key',4,2)    -- SUB TRADE
                    AND R.REP_TRD_CD = SUBSTR('$key',1,3)    -- TRADE
                )
        #end
        )
    #elseif(${trade} != '')   -- Trade 콤보 조건 일 경우
        AND (
              R.REP_TRD_CD IN (
        #foreach($key IN ${arr_trade})
            #if($velocityCount == 1 )
                                '$key'
            #else
                               ,'$key'
            #end                
        #end
                                      )
        )
    #end
            AND D.FM_CONTI_CD  = L.CONTI_CD
            AND NVL(L.DELT_FLG,'N') <> 'Y'
            AND R.REP_TRD_CD = C.TRD_CD
            AND D.SUB_TRD_CD = C.SUB_TRD_CD
            AND C.RLANE_CD = R.RLANE_CD
            AND SUBSTR(C.SLS_YRMON,1,4) = P.COST_YR
            AND C.COST_WK = P.COST_WK
            AND C.DIR_CD = D.VSL_SLAN_DIR_CD
            AND P.COST_YR||P.COST_WK BETWEEN @[curr_yrwk] AND @[to_yrwk]
            AND V.SLAN_CD =  M.VSL_SLAN_CD
            AND V.SLAN_CD = C.SLAN_CD
            AND V.VSL_CD				=  C.VSL_CD
            AND V.SKD_VOY_NO			=  C.SKD_VOY_NO
            AND V.SKD_DIR_CD			=  C.DIR_CD
            AND V.TURN_PORT_IND_CD		!= 'D'
            AND V.TURN_PORT_IND_CD		!= 'V'
            AND M.VSL_TP_CD			    =  'C'
            AND L.LOC_CD                = V.VPS_PORT_CD
            AND V.VPS_PORT_CD           = T.LOC_CD
			AND DECODE(SUBSTR(R.REP_TRD_CD,1,1),'I','X',T.CONTI_CD) <> 'A'
            AND NVL(T.DELT_FLG,'N') <> 'Y'
            AND DECODE(SUBSTR(R.REP_TRD_CD,1,1),'I',T.SCONTI_CD,'X') = DECODE(SUBSTR(R.REP_TRD_CD,1,1),'I',@[subconti],'X')
		#if( ${level_cd} == '2' ) --LEVEL_CD 2 RHQ
/*
            AND L.LOC_CD IN (SELECT DISTINCT LOC_CD
                             FROM MDM_ORGANIZATION
                             WHERE NVL(DELT_FLG,'N') <> 'Y'
                             CONNECT BY NOCYCLE PRIOR OFC_CD = PRNT_OFC_CD
                             START WITH OFC_CD = (SELECT DISTINCT AR_HD_QTR_OFC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = [ofc_cd]))
*/
			AND L.LOC_CD IN 
			(
   				SELECT LOC_CD FROM MDM_LOCATION
   				WHERE SCC_CD IN 
				( 
   					SELECT SCC_CD FROM MDM_EQ_ORZ_CHT
   					WHERE LCC_CD IN 
					( 
                        -- HQ OFFICE 속한 LCC_CD 검색 (RCC 단위)
            			SELECT LCC_CD
            			FROM MDM_EQ_ORZ_CHT                         
            			WHERE SCC_CD IN 
						(
                			SELECT SCC_CD
                			FROM MDM_LOCATION
                			WHERE LOC_CD IN 
							(
								 SELECT DISTINCT LOC_CD
                                 FROM MDM_ORGANIZATION
                                 WHERE NVL(DELT_FLG,'N') <> 'Y'
                                 CONNECT BY NOCYCLE PRIOR OFC_CD = PRNT_OFC_CD
                                 START WITH OFC_CD = (SELECT DISTINCT AR_HD_QTR_OFC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = @[ofc_cd])
							)
            			)
    				)               
    			)     
			)

		#elseif( ${level_cd} == '5' ) --LEVEL_CD 5 ATLSC/PHXSC
/*
            AND L.LOC_CD IN (SELECT DISTINCT LOC_CD
                             FROM MDM_ORGANIZATION
                             WHERE NVL(DELT_FLG,'N') <> 'Y'
                             CONNECT BY NOCYCLE PRIOR OFC_CD = PRNT_OFC_CD
                             START WITH OFC_CD = (SELECT DISTINCT AR_HD_QTR_OFC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = [ofc_cd] AND OFC_CD IN ('ATLSC','PHXSC')))
*/
			AND L.LOC_CD IN 
			(
   				SELECT LOC_CD FROM MDM_LOCATION
   				WHERE SCC_CD IN 
				( 
   					SELECT SCC_CD FROM MDM_EQ_ORZ_CHT
   					WHERE LCC_CD IN 
					( 
                        -- HQ OFFICE 속한 LCC_CD 검색 (RCC 단위)
            			SELECT LCC_CD
            			FROM MDM_EQ_ORZ_CHT                         
            			WHERE SCC_CD IN 
						(
                			SELECT SCC_CD
                			FROM MDM_LOCATION
                			WHERE LOC_CD IN 
							(
								 SELECT DISTINCT LOC_CD
                                 FROM MDM_ORGANIZATION
                                 WHERE NVL(DELT_FLG,'N') <> 'Y'
                                 CONNECT BY NOCYCLE PRIOR OFC_CD = PRNT_OFC_CD
                                 START WITH OFC_CD = (SELECT DISTINCT AR_HD_QTR_OFC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = @[ofc_cd] AND OFC_CD IN ('ATLSC','PHXSC'))
							)
            			)
    				)               
    			)     
			)

		#elseif( ${level_cd} == '6' ) --LEVEL_CD 6 Office
            --AND L.LOC_CD IN (SELECT LOC_CD FROM MDM_ORGANIZATION WHERE NVL(DELT_FLG,'N') <> 'Y' AND OFC_CD = [ofc_cd]) 

			AND L.LOC_CD IN 
			(
   				SELECT LOC_CD FROM MDM_LOCATION
   				WHERE SCC_CD IN 
				( 
   					SELECT SCC_CD FROM MDM_EQ_ORZ_CHT
   					WHERE LCC_CD IN 
					( 
                        -- OFFICE 속한 LCC_CD 검색 
            			SELECT LCC_CD
            			FROM MDM_EQ_ORZ_CHT                         
            			WHERE SCC_CD IN (
                							SELECT SCC_CD
                							FROM MDM_LOCATION
                							WHERE LOC_CD IN (SELECT LOC_CD FROM MDM_ORGANIZATION WHERE NVL(DELT_FLG,'N') <> 'Y' AND OFC_CD = @[ofc_cd])
            							)
    				)               
    			)     
			)
               
	    #elseif( ${level_cd} == '3' || ${level_cd} == '4' ) --LEVEL_CD 3,4 Office
			AND 1=2 --조회안되야함
		#end
            GROUP BY R.REP_TRD_CD, D.SUB_TRD_CD, R.RLANE_CD, D.VSL_SLAN_DIR_CD, D.FM_CONTI_CD, D.IOC_CD
                     , P.COST_YR, P.COST_WK, P.SLS_FM_DT, P.SLS_TO_DT
                     , V.VSL_CD, V.SKD_VOY_NO, V.SKD_DIR_CD, V.SLAN_CD, V.CLPT_SEQ, V.VPS_PORT_CD, V.YD_CD
                     , DECODE(V.TURN_PORT_FLG,'Y',V.VPS_ETD_DT,'')
		) A
		GROUP BY A.TRD_CD, A.SUB_TRD_CD, A.IOC_CD, A.RLANE_CD, A.COST_YRWK, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.VPS_PORT_CD
        ) A
        , (
        SELECT 
            SUBSTR(A.SLS_YRMON,0,4)||A.COST_WK COST_YRWK,   	
            C.TRD_CD, 
            A.SUB_TRD_CD, 
            A.IOC_CD,
            A.SLAN_CD, 
            C.RLANE_CD, 
            DECODE(C.BSA_OP_CD, 'J', 'JO', 'SC') VSL_LANE_TP_CD, 
            C.VSL_CD, 
            C.SKD_VOY_NO,  
            C.SKD_DIR_CD, 
            NVL(SUM(DECODE(D.CRR_CD,'HJS',DECODE(D.BSA_OP_JB_CD,'007',NVL(D.CRR_BSA_CAPA,NVL(C.N2ND_FNL_CO_BSA_CAPA,NVL(C.BSA_CAPA,0))),0))),0) FNL_HJS_BSA_CAPA_BSA,
            NVL(SUM(DECODE(D.CRR_CD,'HJS',DECODE(D.BSA_OP_JB_CD,'009',NVL(D.CRR_BSA_CAPA,NVL(C.N2ND_FNL_CO_BSA_CAPA,NVL(C.BSA_CAPA,0))),0))),0) FNL_HJS_BSA_CAPA_WT
        FROM COA_MON_VVD A, COA_LANE_RGST B, BSA_VVD_MST C, BSA_VVD_OTR_CRR D, BSA_VVD_SWAP_INFO F 
        WHERE A.TRD_CD     = C.TRD_CD 
            AND A.RLANE_CD   = C.RLANE_CD 
            AND A.IOC_CD     = C.IOC_CD 
            AND A.VSL_CD     = C.VSL_CD 
            AND A.SKD_VOY_NO = C.SKD_VOY_NO 
            AND A.DIR_CD     = C.SKD_DIR_CD 
            AND A.TRD_CD     = B.TRD_CD 
            AND A.RLANE_CD   = B.RLANE_CD 
            AND A.DIR_CD     = B.DIR_CD 
            AND A.IOC_CD     = B.IOC_CD 
            AND C.TRD_CD     = D.TRD_CD(+) 
            AND C.RLANE_CD   = D.RLANE_CD(+) 
            AND C.VSL_CD     = D.VSL_CD(+) 
            AND C.SKD_VOY_NO = D.SKD_VOY_NO(+) 
            AND C.SKD_DIR_CD = D.SKD_DIR_CD(+) 
            AND D.TRD_CD     = F.TRD_CD(+) 
            AND D.RLANE_CD   = F.RLANE_CD(+) 
            AND D.VSL_CD     = F.VSL_CD(+) 
            AND D.SKD_VOY_NO = F.SKD_VOY_NO(+) 
            AND D.SKD_DIR_CD = F.SKD_DIR_CD(+) 
            AND D.BSA_OP_JB_CD= F.BSA_OP_JB_CD(+) 
            AND D.CRR_CD      = F.CRR_CD(+) 
            AND NVL(A.DELT_FLG,'N') = 'N' 
            AND SUBSTR(A.SLS_YRMON,1,4)||A.COST_WK BETWEEN @[curr_yrwk] AND @[to_yrwk]
    #if(${lane} != '')        -- Lane 콤보 조건 일 경우
        AND (
        #foreach($key IN ${arr_lane})
            #if($velocityCount > 1 )
                OR
            #end 
                (
                        D.RLANE_CD LIKE SUBSTR('$key',6,3)||'%'  -- LANE
					AND A.SUB_TRD_CD = SUBSTR('$key',4,2)        -- SUB TRADE
                    AND C.TRD_CD = SUBSTR('$key',1,3)        -- TRADE
                )
        #end
        )

    #elseif(${subtrade} != '') -- S.Trade 콤보 조건 일 경우
        AND (
        #foreach($key IN ${arr_subtrade})
            #if($velocityCount > 1 )
                OR
            #end 
                (
					A.SUB_TRD_CD = SUBSTR('$key',4,2)    -- SUB TRADE
                    AND C.TRD_CD = SUBSTR('$key',1,3)    -- TRADE
                )
        #end
        )

    #elseif(${trade} != '')   -- Trade 콤보 조건 일 경우
        AND (
              C.TRD_CD IN (
        #foreach($key IN ${arr_trade})
            #if($velocityCount == 1 )
                                '$key'
            #else
                               ,'$key'
            #end                
        #end
                                      )
        )
    #end

            GROUP BY A.SLS_YRMON, A.COST_WK, C.TRD_CD, A.SUB_TRD_CD, A.IOC_CD, A.SLAN_CD, C.RLANE_CD, DECODE(C.BSA_OP_CD, 'J', 'JO', 'SC')
                     , C.VSL_CD, C.SKD_VOY_NO, C.SKD_DIR_CD, NVL(C.N2ND_FNL_CO_BSA_CAPA,NVL(C.BSA_CAPA,0))
    ) B
    WHERE 1=1
        AND A.COST_YRWK = B.COST_YRWK
        AND A.TRD_CD = B.TRD_CD
        AND A.SUB_TRD_CD = B.SUB_TRD_CD
        AND A.RLANE_CD = B.RLANE_CD
        AND A.IOC_CD = B.IOC_CD
        AND A.VSL_CD = B.VSL_CD
        AND A.SKD_VOY_NO = B.SKD_VOY_NO
        AND A.SKD_DIR_CD = B.SKD_DIR_CD
)
,
BKG_DATA AS (
    SELECT 
        A.RHQ, A.TRD_CD, A.SUB_TRD_CD,
        TO_NUMBER(
        EQR_PORT_SIM_GET_BKG_VAL_FNC(
        (SELECT SUBSTR(TO_CHAR(TO_NUMBER(MAX(W.PLN_YR||W.PLN_WK))-3),1,4) FROM EQR_WK_PRD W WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN W.WK_ST_DT AND W.WK_END_DT),
        (SELECT SUBSTR(TO_CHAR(TO_NUMBER(MAX(W.PLN_YR||W.PLN_WK))-3),5,2) FROM EQR_WK_PRD W WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN W.WK_ST_DT AND W.WK_END_DT),
        (SELECT SUBSTR(TO_CHAR(TO_NUMBER(MAX(W.PLN_YR||W.PLN_WK))-1),1,4) FROM EQR_WK_PRD W WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN W.WK_ST_DT AND W.WK_END_DT),
        (SELECT SUBSTR(TO_CHAR(TO_NUMBER(MAX(W.PLN_YR||W.PLN_WK))-1),5,2) FROM EQR_WK_PRD W WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN W.WK_ST_DT AND W.WK_END_DT),
        A.RHQ,
        A.TRD_CD,
        A.SUB_TRD_CD,
        '',--A.RLANE_CD,
        '',--A.VSL_CD,
        '',--A.SKD_VOY_NO,
        '',--A.SKD_DIR_CD,
        '',--A.IOC_CD,
        '',
        '1'
        )) BKG_QTY,
        TO_NUMBER(
        EQR_PORT_SIM_GET_BKG_VAL_FNC(
        (SELECT SUBSTR(TO_CHAR(TO_NUMBER(MAX(W.PLN_YR||W.PLN_WK))-3),1,4) FROM EQR_WK_PRD W WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN W.WK_ST_DT AND W.WK_END_DT),
        (SELECT SUBSTR(TO_CHAR(TO_NUMBER(MAX(W.PLN_YR||W.PLN_WK))-3),5,2) FROM EQR_WK_PRD W WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN W.WK_ST_DT AND W.WK_END_DT),
        (SELECT SUBSTR(TO_CHAR(TO_NUMBER(MAX(W.PLN_YR||W.PLN_WK))-1),1,4) FROM EQR_WK_PRD W WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN W.WK_ST_DT AND W.WK_END_DT),
        (SELECT SUBSTR(TO_CHAR(TO_NUMBER(MAX(W.PLN_YR||W.PLN_WK))-1),5,2) FROM EQR_WK_PRD W WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN W.WK_ST_DT AND W.WK_END_DT),
        A.RHQ,
        A.TRD_CD,
        A.SUB_TRD_CD,
        '',--A.RLANE_CD,
        '',--A.VSL_CD,
        '',--A.SKD_VOY_NO,
        '',--A.SKD_DIR_CD,
        '',--A.IOC_CD,
        '',
        '2'
        )) BKG_WGT    
    FROM BSA_GRID_O1 A
    GROUP BY A.RHQ, A.TRD_CD, A.SUB_TRD_CD
)
SELECT 
    C.SEQ
    , CASE 
      WHEN C.SEQ=1 THEN 'BSA'
      WHEN C.SEQ=2 THEN 'BKG'
      WHEN C.SEQ=3 THEN 'AVAL'
      WHEN C.SEQ=4 THEN 'PL'
      WHEN C.SEQ=5 THEN 'TTL'
      END CODE
    , CASE 
      WHEN C.SEQ=1 THEN 'BSA'
      WHEN C.SEQ=2 THEN 'Full Export'
      WHEN C.SEQ=3 THEN 'Space Available for MT'
      WHEN C.SEQ=4 THEN 'MT Plan'
      WHEN C.SEQ=5 THEN 'TTL'
      END NAME
#foreach($key in ${arrweek2})
    , ROUND(MAX(C.QTY_$key)) QTY_$key, CEIL(MAX(C.LF_$key)) LF_$key, ROUND(MAX(C.WGT_$key)) WGT_$key, CEIL(MAX(C.WGTLF_$key)) WGTLF_$key
#end
FROM (
SELECT 
    A.SEQ
#foreach($key in ${arrweek2})
    , CASE WHEN A.COST_YRWK='$key' THEN MAX(A.QTY)      ELSE TO_NUMBER('') END QTY_$key
    , CASE WHEN A.COST_YRWK='$key' THEN MAX(A.LF)       ELSE TO_NUMBER('') END LF_$key
    , CASE WHEN A.COST_YRWK='$key' THEN MAX(A.WGT)      ELSE TO_NUMBER('') END WGT_$key
    , CASE WHEN A.COST_YRWK='$key' THEN MAX(A.WGTLF)    ELSE TO_NUMBER('') END WGTLF_$key
#end
FROM (
SELECT 
    L.SEQ, Y.COST_YRWK,
    CASE 
    WHEN L.SEQ = 1 THEN MAX(Y.BSA_QTY) 
    WHEN L.SEQ = 2 THEN MAX(Y.BKG_QTY)
    WHEN L.SEQ = 3 THEN MAX(Y.AVAL_QTY)
    WHEN L.SEQ = 4 THEN TO_NUMBER('')
    WHEN L.SEQ = 5 THEN MAX(Y.TTL_QTY)
    ELSE TO_NUMBER('')
    END QTY,
    CASE 
    WHEN L.SEQ = 1 THEN MAX(Y.BSA_LF)
    WHEN L.SEQ = 2 THEN MAX(Y.BKG_LF)
    WHEN L.SEQ = 3 THEN MAX(Y.AVAL_LF)
    WHEN L.SEQ = 4 THEN TO_NUMBER('')
    WHEN L.SEQ = 5 THEN MAX(Y.TTL_LF)
    ELSE TO_NUMBER('')
    END LF,
    CASE 
    WHEN L.SEQ = 1 THEN MAX(Y.BSA_WGT)
    WHEN L.SEQ = 2 THEN MAX(Y.BKG_WGT)
    WHEN L.SEQ = 3 THEN MAX(Y.AVAL_WGT)
    WHEN L.SEQ = 4 THEN TO_NUMBER('')
    WHEN L.SEQ = 5 THEN MAX(Y.TTL_WGT)
    ELSE TO_NUMBER('')
    END WGT,
    CASE 
    WHEN L.SEQ = 1 THEN MAX(Y.BSA_WGTLF)
    WHEN L.SEQ = 2 THEN MAX(Y.BKG_WGTLF)
    WHEN L.SEQ = 3 THEN MAX(Y.AVAL_WGTLF)
    WHEN L.SEQ = 4 THEN TO_NUMBER('')
    WHEN L.SEQ = 5 THEN MAX(Y.TTL_WGTLF)
    ELSE TO_NUMBER('')
    END WGTLF
FROM (
SELECT
    X.COST_YRWK
    /** TEU **/
    , NVL(SUM(X.BSA),0) BSA_QTY
    , NVL(MAX(X.BKG_QTY),0) BKG_QTY --1107
    , CASE WHEN NVL(SUM(X.BSA),0)<>0 THEN NVL(SUM(X.BSA),0) - NVL(MAX(X.BKG_QTY),0) ELSE TO_NUMBER('') END AVAL_QTY
    , NVL(SUM(X.BKG_QTY),0) TTL_QTY
    /** LF **/
    , TO_NUMBER('') BSA_LF
    , CASE WHEN NVL(SUM(X.BSA),0)<>0 THEN ROUND(NVL(MAX(X.BKG_QTY),0)/NVL(SUM(X.BSA),0) * 100,2) ELSE TO_NUMBER('') END BKG_LF
    , CASE WHEN NVL(SUM(X.BSA),0)<>0 THEN ROUND((NVL(SUM(X.BSA),0) - NVL(MAX(X.BKG_QTY),0))/NVL(SUM(X.BSA),0) * 100,2) ELSE TO_NUMBER('') END AVAL_LF
    , CASE WHEN NVL(SUM(X.BSA),0)<>0 THEN ROUND(NVL(MAX(X.BKG_QTY),0)/NVL(SUM(X.BSA),0) * 100,2) ELSE TO_NUMBER('') END TTL_LF
    /** WGT **/
    , NVL(SUM(X.BSA_WGT),0) BSA_WGT 
    , NVL(MAX(X.BKG_WGT),0) BKG_WGT --1107
    , CASE WHEN NVL(SUM(X.BSA_WGT),0)<>0 THEN (NVL(SUM(X.BSA_WGT),0) - NVL(MAX(X.BKG_WGT),0)) ELSE TO_NUMBER('') END AVAL_WGT
    , NVL(SUM(X.BSA_WGT),0) TTL_WGT
    /** WGT LF **/
    , TO_NUMBER('') BSA_WGTLF
    , CASE WHEN NVL(SUM(X.BSA_WGT),0)<>0 THEN ROUND(NVL(MAX(X.BKG_WGT),0)/NVL(SUM(X.BSA_WGT),0) * 100,2) ELSE TO_NUMBER('') END BKG_WGTLF
    , CASE WHEN NVL(SUM(X.BSA_WGT),0)<>0 THEN ROUND(((NVL(SUM(X.BSA_WGT),0) - NVL(MAX(X.BKG_WGT),0)))/NVL(SUM(X.BSA_WGT),0) * 100,2) ELSE TO_NUMBER('') END AVAL_WGTLF
    , CASE WHEN NVL(SUM(X.BSA_WGT),0)<>0 THEN ROUND(NVL(MAX(X.BKG_WGT),0)/NVL(SUM(X.BSA_WGT),0) * 100,2) + ROUND(((NVL(SUM(X.BSA),0) - NVL(MAX(X.BKG_QTY),0)))/NVL(SUM(X.BSA_WGT),0) * 100,2) ELSE TO_NUMBER('') END TTL_WGTLF
FROM (
    SELECT 
        A.TRD_CD, A.SUB_TRD_CD, A.RLANE_CD, A.IOC_CD, A.COST_YRWK, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD
        , SUM(NVL(A.BSA,0)) BSA, SUM(NVL(A.BSA_WGT,0)) BSA_WGT
		, SUM(NVL(B.BKG_QTY,0)) BKG_QTY
		, SUM(NVL(B.BKG_WGT,0)) BKG_WGT
    FROM BSA_GRID_O1 A, BKG_DATA B
    WHERE 1=1
        AND A.TRD_CD = B.TRD_CD(+)
        AND A.SUB_TRD_CD = B.SUB_TRD_CD(+)
        GROUP BY A.TRD_CD, A.SUB_TRD_CD, A.RLANE_CD, A.IOC_CD, A.COST_YRWK, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.RHQ
) X
GROUP BY X.COST_YRWK
) Y, (SELECT LEVEL SEQ FROM DUAL CONNECT BY LEVEL <= 5) L
GROUP BY Y.COST_YRWK, L.SEQ
) A
GROUP BY A.SEQ, A.COST_YRWK
) C
GROUP BY C.SEQ
ORDER BY C.SEQ			]]></sql>
			<params>
				<param name="curr_yrwk" type="12" value="" out="N"/>
				<param name="to_yrwk" type="12" value="" out="N"/>
				<param name="subconti" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
