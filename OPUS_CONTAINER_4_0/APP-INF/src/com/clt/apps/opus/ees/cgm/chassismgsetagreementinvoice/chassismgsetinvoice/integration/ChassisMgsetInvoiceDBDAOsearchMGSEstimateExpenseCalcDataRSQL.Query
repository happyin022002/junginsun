<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChassisMgsetInvoiceDBDAOsearchMGSEstimateExpenseCalcDataRSQL">
			<desc><![CDATA[chungpa 20091012 2206 start]]></desc>
			<sql><![CDATA[
SELECT
    @[period_eddt]                  AS EXE_YRMON
    ,'MGS'                          AS SYS_SRC_ID
    ,T1.COST_YRMON                  AS REV_YRMON
    ,T1.ACCT_CD                     AS ACCT_CD
	,T1.AGMT_NO                     AS AGMT_NO
	,T1.AGMT_LSTM_CD                AS AGMT_LSTM_CD
,''                AS CHSS_POOL_CD
	,T1.INV_NO                      AS INVO_NO
    ,1                              AS ESTM_SEQ_NO            
    , 'CNTC'                        AS VSL_CD
    , SUBSTR(T1.COST_YRMON, 3, 4)  	AS SKD_VOY_NO
    ,'M'                            AS SKD_DIR_CD
    ,'M'                            AS REV_DIR_CD
,'CNTC'||SUBSTR(T1.COST_YRMON, 3, 4)||'MM'    AS REV_VVD

, CASE
WHEN (T1.COST_YRMON = @[period_eddt] ) THEN 
    CASE WHEN T1.ESTIMATE_AMT - ABS( T1.ACTUAL_AMT ) <0 THEN NVL(T1.ACTUAL_AMT, 0)
    ELSE NVL(T1.ESTIMATE_AMT, 0)
    END
ELSE NVL(T1.ACTUAL_AMT, 0)
END AS ESTM_AMT 
,NVL(T1.ACTUAL_AMT,0)  AS ACT_AMT   -- 해당월에도 Actual 금액 있으면 표시
  
, CASE
        WHEN (T1.COST_YRMON = @[period_eddt] ) THEN 
            CASE WHEN T1.ESTIMATE_AMT - ABS( T1.ACTUAL_AMT) <0 THEN NVL(T1.ACTUAL_AMT, 0)
            ELSE NVL(T1.ESTIMATE_AMT, 0)
            END
        ELSE NVL(T1.ACTUAL_AMT, 0)
    END - NVL(T1.ACTUAL_AMT,0)
AS ACCL_AMT

, T1.CRE_USR_ID					AS CRE_USR_ID
, TO_CHAR(T1.CRE_DT,'YYYY-MM-DD')	AS CRE_DT
,1 SORT
FROM

(



    SELECT 
    A.AGMT_OFC_CTY_CD||A.AGMT_SEQ AGMT_NO
    ,COST_YRMON
    ,ACCT_CD
    ,MAX(AGMT_LSTM_CD) AGMT_LSTM_CD
    ,INV_NO
    ,MAX(CHG_AMT) ESTIMATE_AMT
    ,MAX(INV_AMT) ACTUAL_AMT
    ,MAX(CHG_CRE_DT) CRE_dT
    ,MAX(A.CRE_USR_ID) CRE_USR_ID
    
     FROM (
    
          SELECT  
          B.AGMT_OFC_CTY_CD, 
          B.AGMT_SEQ, 
          B.AGMT_VER_NO, 
          B.COST_YRMON, 
--          DECODE(B.ACCT_CD, '510871', '510831', B.ACCT_CD) ACCT_CD ,
		  ACCT_CD,
          B.INV_NO,   
          SUM(B.LSE_CHG_AMT) CHG_AMT,
          NULL INV_AMT,
          MAX(A.CRE_DT) CHG_CRE_DT,
          MAX(A.CRE_USR_ID) CRE_USR_ID
          
          FROM  CGM_LSE_CHG_HDR A, CGM_LSE_CHG_DTL B 
          WHERE 
          A.AGMT_OFC_CTY_CD = B.AGMT_OFC_CTY_CD
          AND A.AGMT_SEQ = B.AGMT_SEQ
          AND A.AGMT_VER_NO = B.AGMT_VER_NO
          AND A.COST_YRMON = B.COST_YRMON
          AND B.COST_YRMON <= @[period_eddt]
          AND A.EQ_KND_CD = 'G'
		  AND B.ACCT_CD = 510831
         GROUP BY 
          B.AGMT_OFC_CTY_CD, 
          B.AGMT_SEQ, 
          B.AGMT_VER_NO, 
          B.COST_YRMON, 
--          DECODE(B.ACCT_CD, '510871', '510831', B.ACCT_CD) ,
		  ACCT_CD,
          B.INV_NO
          
          
    UNION ALL      
          
              
        SELECT 
        C.AGMT_OFC_CTY_CD,
        C.AGMT_SEQ,
        C.AGMT_VER_NO,
        C.COST_YRMON, 
--        DECODE(D1.ACCT_CD, '510871', '510831', D1.ACCT_CD) ACCT_CD, 
		D1.ACCT_CD,
        C.INV_NO, 
        NULL ,
        SUM(D1.INV_AMT) INV_AMT,
        MAX(C.CRE_DT),
        MAX(C.CRE_USR_ID)
        
        FROM CGM_PAY_INV C, AP_PAY_INV D, AP_PAY_INV_DTL D1, AP_INV_HDR E
        WHERE   
        C.INV_RGST_NO = D.INV_RGST_NO
        AND D.INV_RGST_NO = D1.INV_RGST_NO        
        AND C.CHSS_MGST_INV_KND_CD IN ('LS')
        AND C.EQ_KND_CD = 'G'        
        AND D.INV_STS_CD IN ( 'D','P')
        AND D.CSR_NO = E.CSR_NO
        AND  SUBSTR( E.GL_DT,1,6) <= @[period_eddt]
		AND D1.ACCT_CD = 510831

        GROUP BY C.AGMT_OFC_CTY_CD,C.AGMT_SEQ,C.AGMT_VER_NO,C.COST_YRMON, 
--		DECODE(D1.ACCT_CD, '510871', '510831', D1.ACCT_CD) , 
		D1.ACCT_CD, C.INV_NO 
    
    )  A, CGM_AGREEMENT E
    WHERE A.AGMT_OFC_CTY_CD = E.AGMT_OFC_cTY_CD(+)
     AND A.AGMT_SEQ = E.AGMT_SEQ(+)
     AND E.LST_VER_FLG(+) = 'Y'   
    
    GROUP BY 
    A.AGMT_OFC_CTY_CD
    ,A.AGMT_SEQ
    ,A.AGMT_VER_NO
    ,COST_YRMON
    ,ACCT_CD
    ,INV_NO
 
 


) T1

WHERE TO_NUMBER(SUBSTR(T1.COST_YRMON, 5, 2)) <= TO_NUMBER(SUBSTR( @[period_eddt] , 5, 2))
AND ( NVL(T1.ESTIMATE_AMT ,0) <> 0 OR NVL(T1.ACTUAL_AMT,0) <>0  )



ORDER BY REV_YRMON DESC , SORT , AGMT_LSTM_CD, AGMT_NO			]]></sql>
			<params>
				<param name="period_eddt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
