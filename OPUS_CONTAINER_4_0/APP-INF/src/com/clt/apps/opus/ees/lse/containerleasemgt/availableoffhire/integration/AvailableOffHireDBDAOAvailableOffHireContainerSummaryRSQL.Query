<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AvailableOffHireDBDAOAvailableOffHireContainerSummaryRSQL">
			<desc><![CDATA[지역별 반납가능 대상 장비의 현황을 조회합니다.
]]></desc>
			<sql><![CDATA[
WITH PARAM AS (
    SELECT  @[loc_case]       AS P_LOC_CASE,
            @[loc_tp]         AS P_LOC_TP,
            @[loc_cd]         AS P_LOC_CD,
            @[port_cd]        AS P_PORT_CD,
            @[slan_cd]        AS P_VSL_SLAN_CD,
            @[del_cd]         AS P_DEL_CD,
            @[vvd_cd]         AS P_VVD_CD,
            @[estm_tp]        AS P_ESTM_TP,
            @[str_estm_dt]    AS P_STR_ESTM_DT,
            @[end_estm_dt]    AS P_END_ESTM_DT,
            @[lstm_cd]        AS P_LSTM_CD,
            @[cntr_tpsz_cd]   AS P_CNTR_TPSZ_CD,
            @[cnmv_sts_cd]    AS P_CNMV_STS_CD,
            @[agmt_cty_cd]    AS P_AGMT_CTY_CD,
            @[agmt_seq]       AS P_AGMT_SEQ,
            @[vndr_seq]       AS P_VNDR_SEQ,
            @[used_dys]       AS P_USED_DYS,
            @[free_dys]       AS P_FREE_DYS,
            @[min_onh_dys_tp] AS P_MIN_ONH_DYS_TP
    FROM    DUAL
), TEMP_DROP01 AS (
SELECT    T01.CNTR_NO ,   T01.CNMV_YR ,   T01.CNMV_ID_NO  ,    T01.BKG_NO ,    T01.CNTR_TPSZ_CD ,  T01.CNMV_STS_CD ,   T01.CNMV_DT    ,   T01.CRNT_YD_CD ,    T01.SCC_CD
        , T01.LCC_CD  ,   T01.RCC_CD  ,   T01.POD_CD      ,    T01.DEL_CD ,    T01.VSL_SLAN_CD  ,  T01.VSL_CD      ,   T01.SKD_VOY_NO ,   T01.SKD_DIR_CD ,    T01.AGMT_CTY_CD 
        , T01.AGMT_SEQ,   T01.REF_NO  ,   T01.VNDR_SEQ    ,    T01.VNDR_ABBR_NM, T01.VNDR_LGL_ENG_NM, T01.LSTM_CD ,   T01.ONH_FREE_DYS ,  T01.ONH_DT      ,   T01.MIN_ONH_DYS,   T01.LOC_CLSS
        --, NVL(MIN(T02.AGMT_CHG_VAL),0 )  AS DOL_CNT
        , NVL(MIN(MST_COMMON_PKG.MST_LSE_AGMT_RT_GET_FNC(T01.AGMT_CTY_CD, T01.AGMT_SEQ, 'DOL', T01.CNTR_TPSZ_CD, T01.DOL_YD_CD)), 0) AS DOL_CNT
        , MAX((SELECT MY.LOC_CD FROM MDM_YARD MY WHERE MY.YD_CD LIKE T01.DOL_YD_CD||'%' AND ROWNUM = 1)) AS LOC_CD
FROM    (
#if (${loc_case} == '0' || ${loc_case} == '1')
        -- MASTER 정보 기준으로 조회
        -- BOOKING이 없는 EN, TN, MT만 조회
        SELECT  T1.CNTR_NO, T1.CNMV_YR, T1.CNMV_ID_NO, T1.BKG_NO, T1.CNTR_TPSZ_CD, 'LOCAL' AS LOC_CLSS
                , T1.CNMV_STS_CD, T1.CNMV_DT, T1.CRNT_YD_CD, NULL AS DEL_CD, T1.SCC_CD, T1.LCC_CD, T1.RCC_CD, NULL AS POD_CD
                , NULL AS VSL_SLAN_CD, T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD
                , T1.AGMT_CTY_CD, T1.AGMT_SEQ, T2.REF_NO, T2.VNDR_SEQ, T10.VNDR_ABBR_NM, T10.VNDR_LGL_ENG_NM, T1.LSTM_CD, T1.ONH_FREE_DYS, T1.ONH_DT, T1.MIN_ONH_DYS
                , DECODE(T1.CNMV_STS_CD, 'MT', T1.CRNT_YD_CD, NVL(T1.DEST_YD_CD, T1.CRNT_YD_CD) ) AS DOL_YD_CD
        FROM    PARAM               P ,
                MST_CONTAINER       T1,
                LSE_AGREEMENT       T2,
                MDM_VENDOR          T10
        WHERE   1=1
        AND     T1.AGMT_CTY_CD  = T2.AGMT_CTY_CD
        AND     T1.AGMT_SEQ     = T2.AGMT_SEQ
        AND     T1.ACIAC_DIV_CD = 'A'
#if (${rstr_usg_lbl} == '' && ${cntr_no} == '')
        AND     DECODE(T1.LSTM_CD, 'ST', T1.ONH_DT + NVL(T1.MIN_ONH_DYS,0),  T1.ONH_DT ) < SYSDATE
        AND     DECODE(T1.LSTM_CD, 'LT', T2.LST_EXP_DT                    , SYSDATE - 1) < SYSDATE
        AND     EXISTS ( SELECT 'X'
                           FROM LSE_AGMT_OFFH_PLC OP
                              , MDM_EQ_ORZ_CHT SUB
                              , MDM_LOCATION ML
                              , MDM_YARD MY
                          WHERE T1.AGMT_CTY_CD  = OP.AGMT_CTY_CD
                            AND T1.AGMT_SEQ     = OP.AGMT_SEQ
                            AND T1.CNTR_TPSZ_CD = OP.CNTR_TPSZ_CD                                                       
                            AND T1.LSTM_CD      IN ('LT', 'ST')
                            AND MY.YD_CD        = DECODE(T1.CNMV_STS_CD, 'MT', T1.CRNT_YD_CD, T1.DEST_YD_CD)
                            AND MY.LOC_CD       = ML.LOC_CD
                            AND ML.SCC_CD       = SUB.SCC_CD
                            AND DECODE (OP.EQ_LOC_TP_CD
                                          , 'AL', 'ALL'
                                          , 'CT', ML.CONTI_CD
                                          , 'ST', ML.SCONTI_CD
                                          , 'CN', ML.CNT_CD
                                          , 'RC', SUB.RCC_CD
                                          , 'LC', SUB.LCC_CD
                                          , 'EC', SUB.ECC_CD
                                          , 'SC', SUB.SCC_CD
                                          , 'LO', ML.LOC_CD
                                          , 'XXXXX') = OP.LOC_CD
                         UNION ALL
                         SELECT 'X'
                           FROM DUAL
                          WHERE T1.LSTM_CD NOT IN ('LT', 'ST')
                       )
#end
        AND     T1.LSTM_CD      IN ('OF', 'MI', 'LT', 'SI', 'ST')
        AND     T1.CNMV_STS_CD  IN ('EN', 'MT', 'TN')
        AND     T1.FULL_FLG     = 'N'
        AND     CASE WHEN P_LOC_TP = '0' THEN T1.RCC_CD
                     WHEN P_LOC_TP = '1' THEN T1.LCC_CD
                     WHEN P_LOC_TP = '2' THEN T1.SCC_CD
                     WHEN P_LOC_TP = '3' THEN T1.CRNT_YD_CD END = DECODE(P_LOC_CASE, 0, CASE WHEN P_LOC_TP = '0' THEN T1.RCC_CD
                                                                                             WHEN P_LOC_TP = '1' THEN T1.LCC_CD
                                                                                             WHEN P_LOC_TP = '2' THEN T1.SCC_CD
                                                                                             WHEN P_LOC_TP = '3' THEN T1.CRNT_YD_CD END
                                                                                      , P_LOC_CD)
        AND      T2.VNDR_SEQ      = T10.VNDR_SEQ
#if (${rstr_usg_lbl} != '')
	AND	
	(
	T1.RSTR_USG_TP_LBL_NM1 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM2 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM3 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM4 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM5 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM6 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM7 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM8 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM9 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM10 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM11 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	)
#end
#if (${cntr_no} != '')
	AND	T1.CNTR_NO IN (
		              #foreach ($key IN ${cntr_no})
	            	       #if($velocityCount < $cntr_no.size())
	                	    '$key',
	                       #else
	                        '$key'
	                       #end
	                  #end			  
	                  )
#end		
#if (${port_cd} != '')
        AND     'A'               = 'B'                                                                            -- Vessel Port
#end
#if (${slan_cd} != '')
        AND     'A'               = 'B'                                                                            -- Vessel Lane
#end
#if (${del_cd} != '')
        AND     'A'               = 'B'                                                                             -- Delivery SCC
#end
#if (${str_estm_dt} != '')
  #if (${estm_tp} == 'ETA')
        AND     'A'               = 'B'   -- ETA
  #else
        AND     'A'               = 'B'   -- ETD
  #end
#end
#if (${vvd_cd} != '')
        AND     'A'               = 'B'                                                               -- VVD Code
#end
#if (${lstm_cd} != '')
        AND     T1.LSTM_CD IN (
	#foreach($key IN ${lstm_cd_seq})
		#if($velocityCount < $lstm_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
                      )
#end
#if (${cntr_tpsz_cd} != '')
        AND     T1.CNTR_TPSZ_CD IN (
	#foreach($key IN ${cntr_tpsz_cd_seq})
		#if($velocityCount < $cntr_tpsz_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
                      )
#end
#if (${cnmv_sts_cd} != '')
        AND     T1.CNMV_STS_CD IN (
    	#foreach($key IN ${cnmv_sts_cd_seq})
			#if($velocityCount < $cnmv_sts_cd_seq.size())
				'$key',
			#else
				'$key'
			#end
		#end
                        )
#end
#if (${agmt_seq} != '')
        AND     T1.AGMT_CTY_CD = P_AGMT_CTY_CD
        AND     T1.AGMT_SEQ    = P_AGMT_SEQ
#end
#if (${vndr_seq} != '')
        AND     T10.VNDR_SEQ    = P_VNDR_SEQ
#end
#if (${used_dys} != '')
        AND     SYSDATE        > T1.ONH_DT + P_USED_DYS
#end
#if (${free_dys} != '')
        AND     T1.ONH_FREE_DYS > P_FREE_DYS
#end
        UNION ALL
        -- BOOKING에 DEL LOCATION 기준으로 조회
        -- CTM 에서 VD 발생시 자동으로 IC를 생성함으로 VD 로직은 별도로 넣지 않는다.
        -- EN, TN BOOKING 기준으로 조회 
        SELECT  T1.CNTR_NO, T1.CNMV_YR, T1.CNMV_ID_NO, T1.BKG_NO, T1.CNTR_TPSZ_CD, 'LOCAL' AS LOC_CLSS
                , T1.CNMV_STS_CD, T1.CNMV_DT, T1.CRNT_YD_CD, T2.DEL_CD, T9.SCC_CD, T9.LCC_CD, T9.RCC_CD, T2.POD_CD
                , NULL AS VSL_SLAN_CD, T2.VSL_CD, T2.SKD_VOY_NO, T2.SKD_DIR_CD, T1.AGMT_CTY_CD
                , T1.AGMT_SEQ, T3.REF_NO, T3.VNDR_SEQ, T10.VNDR_ABBR_NM, T10.VNDR_LGL_ENG_NM, T1.LSTM_CD, T1.ONH_FREE_DYS, T1.ONH_DT, T1.MIN_ONH_DYS
                , NVL(T2.MTY_RTN_YD_CD, T2.DEL_CD) AS DOL_YD_CD
        FROM    PARAM               P ,
                MST_CONTAINER       T1,
                CIM_BOOKING_V       T2,
                LSE_AGREEMENT       T3,
                MDM_LOCATION        T8,
                MDM_EQ_ORZ_CHT      T9,
                MDM_VENDOR          T10
        WHERE   1 = 1
        AND     T1.BKG_NO        = T2.BKG_NO
        AND     T1.AGMT_CTY_CD   = T3.AGMT_CTY_CD
        AND     T1.AGMT_SEQ      = T3.AGMT_SEQ
#if (${rstr_usg_lbl} == '' && ${cntr_no} == '')
        AND     DECODE(T1.LSTM_CD, 'ST', T1.ONH_DT + NVL(T1.MIN_ONH_DYS,0),  T1.ONH_DT ) < SYSDATE
        AND     DECODE(T1.LSTM_CD, 'LT', T3.LST_EXP_DT                    , SYSDATE - 1) < SYSDATE
        AND     EXISTS ( SELECT 'X'
                           FROM LSE_AGMT_OFFH_PLC OP
                              , MDM_EQ_ORZ_CHT SUB
                              , MDM_LOCATION ML
                              , MDM_YARD MY
                          WHERE T1.AGMT_CTY_CD  = OP.AGMT_CTY_CD
                            AND T1.AGMT_SEQ     = OP.AGMT_SEQ
                            AND T1.CNTR_TPSZ_CD = OP.CNTR_TPSZ_CD                                                       
                            AND T1.LSTM_CD      IN ('LT', 'ST')
                            AND NVL(T2.MTY_RTN_YD_CD, T2.DEL_CD)   = SUBSTR(MY.YD_CD, 1, 5)
                            AND MY.LOC_CD       = ML.LOC_CD
                            AND ML.SCC_CD       = SUB.SCC_CD
                            AND DECODE (OP.EQ_LOC_TP_CD
                                          , 'AL', 'ALL'
                                          , 'CT', ML.CONTI_CD
                                          , 'ST', ML.SCONTI_CD
                                          , 'CN', ML.CNT_CD
                                          , 'RC', SUB.RCC_CD
                                          , 'LC', SUB.LCC_CD
                                          , 'EC', SUB.ECC_CD
                                          , 'SC', SUB.SCC_CD
                                          , 'LO', ML.LOC_CD
                                          , 'XXXXX') = OP.LOC_CD
                         UNION ALL
                         SELECT 'X'
                           FROM DUAL
                          WHERE T1.LSTM_CD NOT IN ('LT', 'ST')
                       )
#end
        AND     T8.LOC_CD        = NVL(SUBSTR(T2.MTY_RTN_YD_CD, 1, 5), T2.DEL_CD)             -- Full Container가 Empty로 반납되는 지역에 해당하는 Empty Return Yard 기준으로 대상 조회
        AND     T8.SCC_CD        = T9.SCC_CD
        AND     T1.ACIAC_DIV_CD  = 'A'
        AND     T1.LSTM_CD     IN ('OF', 'MI', 'LT', 'SI', 'ST')
        AND     CASE WHEN P_LOC_TP = '0' THEN T9.RCC_CD
                     WHEN P_LOC_TP = '1' THEN T9.LCC_CD
                     WHEN P_LOC_TP = '2' THEN T9.SCC_CD
                     WHEN P_LOC_TP = '3' THEN NVL(T2.MTY_RTN_YD_CD, T1.CRNT_YD_CD) END      -- BOOKING.MTY_RTN_YD_CD가 NULL인 것이 있어, MASTER.CRNT_YD_CD를 사용하도록 함.
                                   = DECODE(P_LOC_CASE, 0, CASE WHEN P_LOC_TP = '0' THEN T9.RCC_CD
                                                                 WHEN P_LOC_TP = '1' THEN T9.LCC_CD
                                                                 WHEN P_LOC_TP = '2' THEN T9.SCC_CD
                                                                 WHEN P_LOC_TP = '3' THEN NVL(T2.MTY_RTN_YD_CD, T1.CRNT_YD_CD) END
                                                          , P_LOC_CD)
        AND     T1.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN')    
 		AND     CASE WHEN T1.CNMV_STS_CD IN ('IC', 'ID')                           THEN 'Y' -- IN BOUND 임으로 MVMT 정보를 조회할 필요 없음
                     WHEN T1.CNMV_STS_CD IN ('EN', 'TN') AND T1.FULL_FLG = 'N'     THEN 'N' -- EMPTY CONTAINER MOVEMENT로 EN, TN 발생 MVMT 정보를 조회할 필요 없음
                     WHEN T1.CNMV_STS_CD IN ('EN', 'TN') AND T1.FULL_FLG = 'Y'     THEN     -- FULL CONTAINER MOVEMENT로 EN, TN 발생
                          (
                          SELECT  DECODE(S.OB_CNTR_FLG, 'N', 'Y', 'N')                      -- IN BOUND EN, TN인 경우에만 대상 됨
                          FROM    CTM_MOVEMENT    S
                          WHERE   T1.CNTR_NO      = S.CNTR_NO
                          AND     T1.CNMV_STS_CD  = S.MVMT_STS_CD
                          AND     T1.CNMV_YR      = S.CNMV_YR
                          AND     T1.CNMV_ID_NO   = S.CNMV_ID_NO
                          )
                     END  = 'Y'
        AND      T3.VNDR_SEQ      = T10.VNDR_SEQ
#if (${rstr_usg_lbl} != '')
	AND	
	(
	T1.RSTR_USG_TP_LBL_NM1 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM2 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM3 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM4 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM5 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM6 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM7 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM8 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM9 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM10 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM11 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	)
#end
#if (${cntr_no} != '')
	AND	T1.CNTR_NO IN (
		              #foreach ($key IN ${cntr_no})
	            	       #if($velocityCount < $cntr_no.size())
	                	    '$key',
	                       #else
	                        '$key'
	                       #end
	                  #end			  
	                  )
#end		
#if (${port_cd} != '')
        AND     T2.POD_CD           = P_PORT_CD                                                                            -- Vessel Port
#end
#if (${slan_cd} != '')
        AND     T2.SLAN_CD          = P_VSL_SLAN_CD                                                                        -- Vessel Lane
#end
#if (${del_cd} != '')
        AND     T2.DEL_CD           = P_DEL_CD                                                                             -- Delivery SCC
#end
#if (${str_estm_dt} != '')
  #if (${estm_tp} == 'ETA')
        AND     T2.POD_ETA_DT BETWEEN TO_DATE( REPLACE(P_STR_ESTM_DT, '-',''),'YYYYMMDD') AND TO_DATE( REPLACE(P_END_ESTM_DT, '-',''), 'YYYYMMDD') + 0.99999   -- ETA
  #else
        AND     T2.POL_ETD_DT BETWEEN TO_DATE( REPLACE(P_STR_ESTM_DT, '-',''),'YYYYMMDD') AND TO_DATE( REPLACE(P_END_ESTM_DT, '-',''), 'YYYYMMDD') + 0.99999   -- ETD
  #end
#end
#if (${vvd_cd} != '')
        AND     T2.VSL_CD           = SUBSTR(P_VVD_CD, 1, 4)                                                               -- VVD Code
        AND     T2.SKD_VOY_NO       = SUBSTR(P_VVD_CD, 5, 4)                                                               -- VVD Code
        AND     T2.SKD_DIR_CD       = SUBSTR(P_VVD_CD, 9, 1)                                                               -- VVD Code
#end
#if (${lstm_cd} != '')
        AND     T1.LSTM_CD IN (
	#foreach($key IN ${lstm_cd_seq})
		#if($velocityCount < $lstm_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
                      )
#end
#if (${cntr_tpsz_cd} != '')
        AND     T1.CNTR_TPSZ_CD IN (
	#foreach($key IN ${cntr_tpsz_cd_seq})
		#if($velocityCount < $cntr_tpsz_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
                      )
#end
#if (${cnmv_sts_cd} != '')
        AND     T1.CNMV_STS_CD IN (
    	#foreach($key IN ${cnmv_sts_cd_seq})
			#if($velocityCount < $cnmv_sts_cd_seq.size())
				'$key',
			#else
				'$key'
			#end
		#end
                        )
#end
#if (${agmt_seq} != '')
        AND     T1.AGMT_CTY_CD = P_AGMT_CTY_CD
        AND     T1.AGMT_SEQ    = P_AGMT_SEQ
#end
#if (${vndr_seq} != '')
        AND     T10.VNDR_SEQ    = P_VNDR_SEQ
#end
#if (${used_dys} != '')
        AND     SYSDATE        > T1.ONH_DT + P_USED_DYS
#end
#if (${free_dys} != '')
        AND     T1.ONH_FREE_DYS > P_FREE_DYS
#end
#end
#if (${loc_case} == '0')
    UNION ALL
#end
#if (${loc_case} != '1')
        -- BOOKING 정보가 존재하는 CONTAINER만 대상
        -- MASTER YARD 기준, VL,VD 정보를 조회. (현재 CONTAINER LOADING LOCATION 기준)
        -- BOOKING 정보 DEL CODE 기준로 화면 표시. (최종 CONTAINER DELIVERY LOCATION 기준)
        SELECT  T1.CNTR_NO, T1.CNMV_YR, T1.CNMV_ID_NO, T1.BKG_NO, T1.CNTR_TPSZ_CD, 'PORT' AS LOC_CLSS
              , T1.CNMV_STS_CD, T1.CNMV_DT, T1.CRNT_YD_CD, T2.DEL_CD, T9.SCC_CD, T9.LCC_CD, T9.RCC_CD, T2.POD_CD
              , T4.VSL_SLAN_CD, T4.VSL_CD, T4.SKD_VOY_NO, T4.SKD_DIR_CD
              , T1.AGMT_CTY_CD, T1.AGMT_SEQ, T6.REF_NO, T6.VNDR_SEQ, T10.VNDR_ABBR_NM, T10.VNDR_LGL_ENG_NM, T1.LSTM_CD, T1.ONH_FREE_DYS, T1.ONH_DT, T1.MIN_ONH_DYS
              , T2.DEL_CD AS DOL_YD_CD
        FROM    PARAM               P ,
                MST_CONTAINER       T1,
                CIM_BOOKING_V       T2,
                CIM_BKG_VVD_V       T3,
                VSK_VSL_SKD         T4,
                VSK_VSL_PORT_SKD    T5,
                LSE_AGREEMENT       T6,
                MDM_LOCATION        T8,
                MDM_EQ_ORZ_CHT      T9,
                MDM_VENDOR          T10
        WHERE   1 = 1
        AND     T1.BKG_NO           = T2.BKG_NO
        AND     T1.ACIAC_DIV_CD     = 'A'
        AND     SUBSTR(T1.CNMV_STS_CD, 1, 1) != 'C'
        AND     T1.CNMV_STS_CD IN ('TS', 'VL')
#if (${rstr_usg_lbl} == '' && ${cntr_no} == '')
        AND     DECODE(T1.LSTM_CD, 'ST', T1.ONH_DT + NVL(T1.MIN_ONH_DYS,0),  T1.ONH_DT ) < SYSDATE
        AND     DECODE(T1.LSTM_CD, 'LT', T6.LST_EXP_DT                    , SYSDATE - 1) < SYSDATE
        AND     EXISTS ( SELECT 'X'
                           FROM LSE_AGMT_OFFH_PLC OP
                              , MDM_EQ_ORZ_CHT SUB
                              , MDM_LOCATION ML
                              , MDM_YARD MY
                          WHERE T1.AGMT_CTY_CD  = OP.AGMT_CTY_CD
                            AND T1.AGMT_SEQ     = OP.AGMT_SEQ
                            AND T1.CNTR_TPSZ_CD = OP.CNTR_TPSZ_CD                                                       
                            AND T1.LSTM_CD      IN ('LT', 'ST')
                            AND T2.DEL_CD       = SUBSTR(MY.YD_CD, 1, 5)
                            AND MY.LOC_CD       = ML.LOC_CD
                            AND ML.SCC_CD       = SUB.SCC_CD
                            AND DECODE (OP.EQ_LOC_TP_CD
                                          , 'AL', 'ALL'
                                          , 'CT', ML.CONTI_CD
                                          , 'ST', ML.SCONTI_CD
                                          , 'CN', ML.CNT_CD
                                          , 'RC', SUB.RCC_CD
                                          , 'LC', SUB.LCC_CD
                                          , 'EC', SUB.ECC_CD
                                          , 'SC', SUB.SCC_CD
                                          , 'LO', ML.LOC_CD
                                          , 'XXXXX') = OP.LOC_CD
                         UNION ALL
                         SELECT 'X'
                           FROM DUAL
                          WHERE T1.LSTM_CD NOT IN ('LT', 'ST')
                       )
#end
        AND     T1.LSTM_CD     IN ('OF', 'MI', 'LT', 'SI', 'ST')
        AND     T1.AGMT_CTY_CD      = T6.AGMT_CTY_CD
        AND     T1.AGMT_SEQ         = T6.AGMT_SEQ
        AND     T2.BKG_NO           = T3.BKG_NO
        AND     T1.CRNT_YD_CD       = T3.POL_YD_CD
        AND     T3.VSL_CD           = T4.VSL_CD
        AND     T3.SKD_VOY_NO       = T4.SKD_VOY_NO
        AND     T3.SKD_DIR_CD       = T4.SKD_DIR_CD
        AND     T4.VSL_CD           = T5.VSL_CD
        AND     T4.SKD_VOY_NO       = T5.SKD_VOY_NO
        AND     T4.SKD_DIR_CD       = T5.SKD_DIR_CD
        AND     T3.POD_CD           = T5.VPS_PORT_CD
        AND     T3.POD_CLPT_IND_SEQ = T5.CLPT_IND_SEQ
        AND     'S'                <> NVL(T5.SKD_CNG_STS_CD, 'N')
        AND     T2.DEL_CD           = T8.LOC_CD
        AND     T8.SCC_CD           = T9.SCC_CD
        AND     T6.VNDR_SEQ         = T10.VNDR_SEQ
#if (${rstr_usg_lbl} != '')
	AND	
	(
	T1.RSTR_USG_TP_LBL_NM1 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM2 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM3 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM4 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM5 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM6 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM7 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM8 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM9 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM10 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	T1.RSTR_USG_TP_LBL_NM11 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	)
#end
#if (${cntr_no} != '')
	AND	T1.CNTR_NO IN (
		              #foreach ($key IN ${cntr_no})
	            	       #if($velocityCount < $cntr_no.size())
	                	    '$key',
	                       #else
	                        '$key'
	                       #end
	                  #end			  
	                  )
#end		
#if (${port_cd} != '')
        AND     T2.POD_CD           = P_PORT_CD                                                                            -- Vessel Port
#end
#if (${slan_cd} != '')
        AND     T5.SLAN_CD          = P_VSL_SLAN_CD                                                                        -- Vessel Lane
#end
#if (${del_cd} != '')
        AND     T2.DEL_CD           = P_DEL_CD                                                                             -- Delivery SCC
#end
#if (${str_estm_dt} != '')
  #if (${estm_tp} == 'ETA')
        AND     T5.VPS_ETA_DT BETWEEN TO_DATE( REPLACE(P_STR_ESTM_DT, '-',''),'YYYYMMDD') AND TO_DATE( REPLACE(P_END_ESTM_DT, '-',''), 'YYYYMMDD') + 0.99999   -- ETA
  #else
        AND     T5.VPS_ETD_DT BETWEEN TO_DATE( REPLACE(P_STR_ESTM_DT, '-',''),'YYYYMMDD') AND TO_DATE( REPLACE(P_END_ESTM_DT, '-',''), 'YYYYMMDD') + 0.99999   -- ETD
  #end
#end
#if (${vvd_cd} != '')
        AND     T4.VSL_CD           = SUBSTR(P_VVD_CD, 1, 4)                                                               -- VVD Code
        AND     T4.SKD_VOY_NO       = SUBSTR(P_VVD_CD, 5, 4)                                                               -- VVD Code
        AND     T4.SKD_DIR_CD       = SUBSTR(P_VVD_CD, 9, 1)                                                               -- VVD Code
#end
#if (${lstm_cd} != '')
        AND     T1.LSTM_CD IN (
	#foreach($key IN ${lstm_cd_seq})
		#if($velocityCount < $lstm_cd_seq.size())
        '$key',
		#else
        '$key'
		#end
	#end
                      )
#end
#if (${cntr_tpsz_cd} != '')
        AND     T1.CNTR_TPSZ_CD IN (
	#foreach($key IN ${cntr_tpsz_cd_seq})
		#if($velocityCount < $cntr_tpsz_cd_seq.size())
        '$key',
		#else
        '$key'
		#end
	#end
                      )
#end
#if (${cnmv_sts_cd} != '')
        AND     T1.CNMV_STS_CD IN (
    	#foreach($key IN ${cnmv_sts_cd_seq})
			#if($velocityCount < $cnmv_sts_cd_seq.size())
        		'$key',
			#else
        		'$key'
			#end
		#end
                        )
#end
#if (${agmt_seq} != '')
        AND     T1.AGMT_CTY_CD = P_AGMT_CTY_CD
        AND     T1.AGMT_SEQ    = P_AGMT_SEQ
#end
#if (${vndr_seq} != '')
        AND     T10.VNDR_SEQ    = P_VNDR_SEQ
#end
#if (${used_dys} != '')
        AND     SYSDATE        > T1.ONH_DT + P_USED_DYS
#end
#if (${free_dys} != '')
        AND     T1.ONH_FREE_DYS > P_FREE_DYS
#end
#end
        )               T01,
        LSE_AGMT_RT     T02
WHERE   1=1
AND     T01.AGMT_CTY_CD  = T02.AGMT_CTY_CD          (+)
AND     T01.AGMT_SEQ     = T02.AGMT_SEQ             (+)
AND     T01.SCC_CD       = T02.LOC_CD               (+)
AND     T01.CNTR_TPSZ_CD = T02.CNTR_TPSZ_CD         (+)
AND     'DOCV'           = T02.CNTR_RNTL_CHG_TP_CD  (+)
GROUP BY    T01.CNTR_NO ,   T01.CNMV_YR ,   T01.CNMV_ID_NO  ,    T01.BKG_NO ,    T01.CNTR_TPSZ_CD ,  T01.CNMV_STS_CD , T01.CNMV_DT     ,   T01.CRNT_YD_CD ,    T01.SCC_CD      ,
            T01.LCC_CD  ,   T01.RCC_CD  ,   T01.POD_CD      ,    T01.DEL_CD ,    T01.VSL_SLAN_CD  ,  T01.VSL_CD      , T01.SKD_VOY_NO  ,   T01.SKD_DIR_CD ,    T01.AGMT_CTY_CD ,
            T01.AGMT_SEQ,   T01.REF_NO  ,   T01.VNDR_SEQ    ,    T01.LSTM_CD ,   T01.ONH_FREE_DYS ,  T01.ONH_DT      , T01.MIN_ONH_DYS ,   T01.LOC_CLSS   ,
            T01.VNDR_ABBR_NM,               T01.VNDR_LGL_ENG_NM
)
SELECT  AGMT_CTY_CD||LPAD(AGMT_SEQ, 6, '0') AS AGMT_NO, AGMT_CTY_CD, AGMT_SEQ, REF_NO, VNDR_SEQ, VNDR_ABBR_NM, VNDR_LGL_ENG_NM, LSTM_CD, SCC_CD, CNTR_TPSZ_CD
        , CASE WHEN LSTM_CD IN('MI') THEN TTL_QTY
            ELSE DOL_QTY
        END                                                                                         AS DOL_QTY
        , PFMC_QTY                                                                                  AS PFMC_QTY
        , CASE WHEN LSTM_CD IN('MI') THEN TTL_QTY - PFMC_QTY
            ELSE DOL_QTY  - PFMC_QTY
        END                                                                                         AS BAL_QTY
        , CONFIRM_CNT                                                                               AS RES_QTY
        , CASE WHEN LSTM_CD IN('MI') THEN TTL_QTY - PFMC_QTY - CONFIRM_CNT
                ELSE DOL_QTY  - PFMC_QTY - CONFIRM_CNT
        END                                                                                         AS REM_QTY -- 반납 가능 갯수
        , MT_QTY                                                                                    AS MT_QTY
        , VLTS_QTY                                                                                  AS VL_QTY
        , VDIC_QTY                                                                                  AS IC_QTY
        , ID_QTY                                                                                    AS ID_QTY
        , ENTN_QTY                                                                                  AS ETN_QTY
        , TTL_QTY                                                                                   AS TOT_QTY
        , PROCESS_CNT                                                                               AS HLD_QTY
        , CASE WHEN (DOL_QTY  - PFMC_QTY - CONFIRM_CNT) > TTL_QTY OR LSTM_CD IN('MI')
                THEN TTL_QTY - PROCESS_CNT
                ELSE DOL_QTY  - PFMC_QTY - PROCESS_CNT
        END                                                                                         AS CNTR_QTY
FROM    (
        SELECT  T1.LOC_CD AS SCC_CD, T1.AGMT_CTY_CD, T1.AGMT_SEQ, T1.REF_NO, T1.VNDR_SEQ, T1.VNDR_ABBR_NM, T1.VNDR_LGL_ENG_NM, T1.LSTM_CD, T1.CNTR_TPSZ_CD
                , CASE WHEN T1.LSTM_CD IN ('SI', 'OF') THEN
                            DECODE(NVL(MAX(MAX(DOL_CNT)) OVER (PARTITION BY T1.AGMT_CTY_CD, T1.AGMT_SEQ,  T1.LOC_CD, T1.CNTR_TPSZ_CD), 0), 0, COUNT(T1.CNTR_NO)
                                            , MAX(MAX(DOL_CNT)) OVER (PARTITION BY T1.AGMT_CTY_CD, T1.AGMT_SEQ,  T1.LOC_CD, T1.CNTR_TPSZ_CD))
                       ELSE
                            MAX(MAX(DOL_CNT)) OVER (PARTITION BY T1.AGMT_CTY_CD, T1.AGMT_SEQ,  T1.LOC_CD, T1.CNTR_TPSZ_CD)
                  END AS DOL_QTY
                , ( SELECT  COUNT(*)
                    FROM    MST_CONTAINER S
                    WHERE   1=1
                    AND     T1.AGMT_CTY_CD    = S.AGMT_CTY_CD
                    AND     T1.AGMT_SEQ       = S.AGMT_SEQ
                    AND     T1.LOC_CD         = S.LOC_CD
                    AND     T1.CNTR_TPSZ_CD   = S.CNTR_TPSZ_CD
                    AND     S.ACIAC_DIV_CD    = 'I'
                    AND     S.CNMV_STS_CD     = 'XX'
                    AND     S.CNMV_DT         >= TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM'), 'YYYYMM')
                    AND     S.CNTR_STS_CD     = 'LSO'
                  )                                                                     AS PFMC_QTY
                , SUM(CASE WHEN CNMV_STS_CD = 'MT'         THEN 1 ELSE 0 END)           AS MT_QTY
                , SUM(CASE WHEN CNMV_STS_CD IN('TS', 'VL') THEN 1 ELSE 0 END)           AS VLTS_QTY
                , SUM(CASE WHEN CNMV_STS_CD IN('VD', 'IC') THEN 1 ELSE 0 END)           AS VDIC_QTY
                , SUM(CASE WHEN CNMV_STS_CD = 'ID'         THEN 1 ELSE 0 END)           AS ID_QTY
                , SUM(CASE WHEN CNMV_STS_CD IN('EN', 'TN') THEN 1 ELSE 0 END)           AS ENTN_QTY
                , COUNT(T1.CNTR_NO)                                                     AS TTL_QTY
                , NVL(SUM(PROCESS_CNT ), 0)                                             AS PROCESS_CNT      -- E-Mail Sending Count
                , NVL(SUM(CONFIRM_CNT), 0)                                              AS CONFIRM_CNT      -- Confirmed Count
        FROM    TEMP_DROP01 T1,
                (
                SELECT  T1.AGMT_CTY_CD, T1.AGMT_SEQ, T1.CNTR_NO, T2.CNTR_TPSZ_CD, T2.SCC_CD
                        , 1                              AS PROCESS_CNT -- E-Mail Sending Count
                        , DECODE(OFFH_STS_CD, 'C', 1, 0) AS CONFIRM_CNT -- Confirmed Count
                FROM    LSE_AVAL_OFFH T1, MST_CONTAINER T2
                WHERE   1=1
                AND     T1.CNTR_NO      = T2.CNTR_NO
                AND     T1.AGMT_CTY_CD  = T2.AGMT_CTY_CD
                AND     T1.AGMT_SEQ     = T2.AGMT_SEQ
                AND     T2.CNTR_STS_CD != 'LSO'
                AND     T1.OFFH_STS_CD IN ('R','C')
#if (${rstr_usg_lbl} == '')
                AND     (T1.OFFH_DUE_DT > TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -1)), 'YYYYMMDD') OR  T1.OFFH_DUE_DT IS NULL)
#end
                )           T2
        WHERE   1=1
        AND     T1.AGMT_CTY_CD  = T2.AGMT_CTY_CD    (+)
        AND     T1.AGMT_SEQ     = T2.AGMT_SEQ       (+)
        AND     T1.CNTR_NO      = T2.CNTR_NO        (+)
        GROUP BY T1.LOC_CD, T1.AGMT_CTY_CD, T1.AGMT_SEQ, T1.REF_NO, T1.VNDR_SEQ, T1.VNDR_ABBR_NM, T1.VNDR_LGL_ENG_NM, T1.LSTM_CD, T1.CNTR_TPSZ_CD
        )
WHERE   1 = 1
AND     TTL_QTY > PROCESS_CNT
#if (${dol_tp} == 'E')
AND     CASE WHEN LSTM_CD IN('MI') THEN TTL_QTY ELSE DOL_QTY END > 0
#end
#if (${dol_tp} == 'N')
AND     CASE WHEN LSTM_CD IN('MI') THEN TTL_QTY ELSE DOL_QTY END = 0
#end
#if (${sent_tp} == 'E')
AND     PROCESS_CNT    > 0
#end
#if (${sent_tp} == 'N')
AND     PROCESS_CNT    = 0
#end
ORDER BY SCC_CD, AGMT_CTY_CD, AGMT_SEQ, VNDR_SEQ			]]></sql>
			<params>
				<param name="loc_case" type="12" value="" out="N"/>
				<param name="loc_tp" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="port_cd" type="12" value="" out="N"/>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="estm_tp" type="12" value="" out="N"/>
				<param name="str_estm_dt" type="12" value="" out="N"/>
				<param name="end_estm_dt" type="12" value="" out="N"/>
				<param name="lstm_cd" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd" type="12" value="" out="N"/>
				<param name="cnmv_sts_cd" type="12" value="" out="N"/>
				<param name="agmt_cty_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="2" value="" out="N"/>
				<param name="vndr_seq" type="2" value="" out="N"/>
				<param name="used_dys" type="2" value="" out="N"/>
				<param name="free_dys" type="2" value="" out="N"/>
				<param name="min_onh_dys_tp" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
