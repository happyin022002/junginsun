<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChargeCollectionReportDBDAOCollectionSummaryReportByOfficeVORSQL">
			<desc><![CDATA[Collection Status Report by Office의 상세 내역을 조회]]></desc>
			<sql><![CDATA[
SELECT
	OFC_CD,
	DMDT_TRF_CD,
	TTL_CNTR,
	CURR_CD,
	INCR_CNTR,
	INCR_AMT,
	CMDT_CNTR,
	CMDT_AMT,
	EXPT_CNTR,
	EXPT_AMT,
	DC_CNTR,
	DC_AMT,
	BILL_CNTR,
	BILL_AMT,
	INV_CNTR,
	INV_AMT,
	COLL_CNTR,
	COLL_AMT,
	ROUND( COLL_AMT / DECODE(INCR_AMT, 0, 1, INCR_AMT), 4) * 100	COLL_RTO_A,
	ROUND( COLL_AMT / DECODE(BILL_AMT, 0, 1, BILL_AMT), 4) * 100	COLL_RTO_B,
	ROUND( COLL_AMT / DECODE(INV_AMT, 0, 1, INV_AMT), 4) * 100		COLL_RTO_C

FROM (

	SELECT
		X.OFC_CD                OFC_CD,
		X.DMDT_TRF_CD           DMDT_TRF_CD,
		SUM(TTL_CNTR)           TTL_CNTR,
		X.CURR_CD               CURR_CD,
		SUM(X.INCR_CNTR  )      INCR_CNTR,
		SUM(X.INCR_AMT   )      INCR_AMT,
		SUM(X.CMDT_CNTR  )      CMDT_CNTR,
		SUM(X.CMDT_AMT   )      CMDT_AMT,
		SUM(X.EXPT_CNTR  )      EXPT_CNTR,
		SUM(X.EXPT_AMT   )      EXPT_AMT,
		SUM(X.DC_CNTR    )      DC_CNTR,
		SUM(X.DC_AMT     )      DC_AMT,
		SUM(X.BILL_CNTR  )      BILL_CNTR,
		SUM(X.BILL_AMT   )      BILL_AMT,
		SUM(X.INV_CNTR   )      INV_CNTR,
		SUM(X.INV_AMT    )      INV_AMT,
		SUM(X.COLL_CNTR  )      COLL_CNTR,
		SUM(X.COLL_AMT   )      COLL_AMT

	FROM (

		SELECT
			#if (${grp_flg} == 'R')
				C.OFC_RHQ_CD
			#else
				C.OFC_CD
			#end
			AS OFC_CD,
			C.DMDT_TRF_CD,
			COUNT (C.CNTR_NO) TTL_CNTR,
			C.BZC_TRF_CURR_CD CURR_CD,
			SUM( DECODE( NVL(C.ORG_CHG_AMT, 0), 0, 0, 1 ) ) INCR_CNTR,
			ROUND ( SUM ( DECODE( @[curr_flg], 'U', C.ORG_CHG_AMT  / F.USD_LOCL_XCH_RT, C.ORG_CHG_AMT  ) ), 2 ) INCR_AMT,
			SUM( DECODE( NVL(C.CMDT_EXPT_AMT, 0), 0, 0, 1 ) ) CMDT_CNTR,
			ROUND ( SUM ( DECODE( @[curr_flg], 'U', NVL(C.CMDT_EXPT_AMT, 0) / F.USD_LOCL_XCH_RT, NVL(C.CMDT_EXPT_AMT, 0) ) ), 2 ) CMDT_AMT,
			SUM( DECODE( NVL(C.SC_RFA_EXPT_AMT, 0), 0, 0, 1 ) ) EXPT_CNTR,
			ROUND ( SUM ( DECODE( @[curr_flg], 'U', C.SC_RFA_EXPT_AMT / F.USD_LOCL_XCH_RT, C.SC_RFA_EXPT_AMT) ), 2 ) EXPT_AMT,
			SUM( DECODE( NVL(C.AFT_EXPT_DC_AMT, 0), 0, 0, 1 ) ) DC_CNTR,
			ROUND ( SUM ( DECODE( @[curr_flg], 'U', C.AFT_EXPT_DC_AMT  / F.USD_LOCL_XCH_RT, C.AFT_EXPT_DC_AMT  ) ), 2 ) DC_AMT,

			/* BILLABLE */
			SUM( DECODE( NVL(C.BIL_AMT, 0), 0, 0, 1 ) ) BILL_CNTR,
			ROUND( SUM( DECODE( @[curr_flg], 'U', C.BIL_AMT / F.USD_LOCL_XCH_RT, C.BIL_AMT ) )
				, 2 ) BILL_AMT,

			/* INVOICE */
			SUM( DECODE( V.DMDT_INV_STS_CD, 'I', 1, 0 ) ) INV_CNTR,
			ROUND( SUM( DECODE( V.DMDT_INV_STS_CD, 'I', DECODE( @[curr_flg], 'U', C.BIL_AMT / F.USD_LOCL_XCH_RT, C.BIL_AMT), 0) )
				, 2 ) INV_AMT,

			/* COLLECTION */
			SUM( DECODE( V.DMDT_AR_IF_CD, 'Y', 1, 0 ) ) COLL_CNTR,
			ROUND(	SUM( DECODE (V.DMDT_AR_IF_CD, 'Y', DECODE( @[curr_flg], 'U', C.BIL_AMT / F.USD_LOCL_XCH_RT, C.BIL_AMT )
								 , 0 ) )
				, 2 ) COLL_AMT

		#*
			/* COLLECTION RATIO (%) VS INCURRED */
			ROUND(	SUM( DECODE (V.DMDT_AR_IF_CD, 'Y', DECODE( @[curr_flg], 'U', C.BIL_AMT / F.USD_LOCL_XCH_RT, C.BIL_AMT )
								  , 0 ) )
					/ SUM( DECODE( @[curr_flg], 'U', C.ORG_CHG_AMT  / F.USD_LOCL_XCH_RT, C.ORG_CHG_AMT ) )
				 , 4) * 100 AS COLL_RTO_A,
		
			/* COLLECTION RATIO (%) VS BILLABLE */
			ROUND( SUM( DECODE (V.DMDT_AR_IF_CD , 'Y' , DECODE( @[curr_flg], 'U', C.BIL_AMT / F.USD_LOCL_XCH_RT, C.BIL_AMT )
								  , 0 ) )
					/ DECODE(  SUM( DECODE( @[curr_flg], 'U', C.BIL_AMT / F.USD_LOCL_XCH_RT, C.BIL_AMT) ), 0, 1,
							SUM( DECODE( @[curr_flg], 'U', C.BIL_AMT / F.USD_LOCL_XCH_RT, C.BIL_AMT) ) )

				 , 4 ) * 100 AS COLL_RTO_B,
			/* _________ DIVISOR IS EQUAL TO ZERO ORA-01476 방지 */

			/* COLLECTION RATIO (%) VS INVOICED */
			ROUND( SUM( DECODE ( V.DMDT_AR_IF_CD, 'Y', DECODE( @[curr_flg], 'U', C.BIL_AMT / F.USD_LOCL_XCH_RT, C.BIL_AMT )
								 ,0 ) )
					/ DECODE (   V.DMDT_INV_STS_CD, 'I',
						   DECODE (
							SUM ( DECODE( @[curr_flg], 'U', C.BIL_AMT / F.USD_LOCL_XCH_RT, C.BIL_AMT ) ), 0, 1,
								SUM ( DECODE( @[curr_flg], 'U', C.BIL_AMT / F.USD_LOCL_XCH_RT, C.BIL_AMT ) ) ), 1
				), 4 ) * 100 AS COLL_RTO_C
			/* _________ DIVISOR IS EQUAL TO ZERO ORA-01476 방지 */
		*#

		FROM	DMT_CHG_CALC		C,
				DMT_INV_MN			V,
				DMT_CHG_BKG_CNTR	B,
				GL_MON_XCH_RT		F

		WHERE   C.TO_MVMT_DT BETWEEN TO_DATE(@[start_dt],'YYYYMMDD') +.0  AND TO_DATE(@[end_dt],'YYYYMMDD') + .99999
		AND		C.DMDT_CHG_STS_CD	IN	( 'F' ,'C', 'I', 'N')		

		#if (${ofc_flg} == 'O')
		AND		C.OFC_CD	IN (
				#foreach( $an_ofc in ${ofc_cd_list} )
					#if($velocityCount < $ofc_cd_list.size()) '$an_ofc', #else '$an_ofc' #end
				#end
				)
		#elseif (${ofc_flg} == 'R' && ${ofc_cd} != 'All')
		AND		C.OFC_RHQ_CD = @[ofc_cd]
		#end

		AND		C.DMDT_TRF_CD		IN	(		/*_________ MULTI TARIFF TYPE	*/
					#foreach( $trf_cd in ${trf_cd_list} ) 
						#if($velocityCount < $trf_cd_list.size()) '$trf_cd', #else '$trf_cd' #end
					#end
				)
		AND		( C.ORG_CHG_AMT > 0 OR C.BIL_AMT > 0 )
		AND		C.SYS_AREA_GRP_ID	= B.SYS_AREA_GRP_ID
		AND		C.CNTR_NO			= B.CNTR_NO
		AND		C.CNTR_CYC_NO		= B.CNTR_CYC_NO
		AND		C.DMDT_INV_NO		=	V.DMDT_INV_NO(+)
		AND		C.DMDT_CHG_LOC_DIV_CD <> 'SZP'	-- 2010/03/18 추가
		AND		-- 2010/03/25 추가
		(
		    (C.DUL_TP_EXPT_FLG = 'Y' AND SUBSTR(C.DMDT_TRF_CD, 1, 1) = 'C')
		    OR
		    (C.DUL_TP_EXPT_FLG = 'N')
		)
				
		AND
		(
			(C.DMDT_CHG_STS_CD <> 'I')
			OR
			(
					C.DMDT_CHG_STS_CD   =	'I'
				AND V.DMDT_INV_STS_CD   =	'I'
				AND V.DMDT_AR_IF_CD		<>	'H'
			)
		)

		AND		B.DMDT_CNTR_TP_CD	IN (
					#foreach( $cntr_tp in ${cntr_tp_list} )
						#if ($cntr_tp == 'S')
							'F', 'O', 'T', 'P', 'S', 'A'
						#elseif ($cntr_tp == 'D' || $cntr_tp == 'R')
							'$cntr_tp'
						#end

						#if($velocityCount < $cntr_tp_list.size()) , #end
					#end
				)

		AND		F.ACCT_XCH_RT_YRMON	=	TO_CHAR(C.TO_MVMT_DT,'YYYYMM')
		AND		F.ACCT_XCH_RT_LVL	=	'1'
		AND		F.CURR_CD          	=	C.BZC_TRF_CURR_CD		

		GROUP	BY
				#if (${grp_flg} == 'R')
					C.OFC_RHQ_CD
				#else
					C.OFC_CD
				#end
				,C.DMDT_TRF_CD
				,C.BZC_TRF_CURR_CD
				,V.DMDT_INV_STS_CD
	) X

	GROUP BY	X.OFC_CD,
				X.DMDT_TRF_CD,
				X.CURR_CD

) Y

ORDER BY 1			]]></sql>
			<params>
				<param name="curr_flg" type="12" value="" out="N"/>
				<param name="start_dt" type="12" value="" out="N"/>
				<param name="end_dt" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
