<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ContainerMovementMgtDBDAOcheckBKGscheduleRSQL">
			<desc><![CDATA[check BKG schedule]]></desc>
			<sql><![CDATA[
SELECT 'Y'
  FROM 
       (SELECT /*+ ORDERED USE_NL(BK B1 VVD1 VVD2 SKD1 SKD2) */
               SKD1.VPS_PORT_CD POL_PORT
               , SKD2.VPS_PORT_CD POD_PORT
               , ROW_NUMBER() OVER( ORDER BY VVD1.VSL_PRE_PST_CD, VVD1.VSL_SEQ, SKD1.CLPT_SEQ) ROW_SEQ
               , SKD1.CLPT_SEQ AS POL_CLPT_SEQ
               , SKD2.CLPT_SEQ AS POD_CLPT_SEQ
               , SKD1.VPS_ETD_DT
               , SKD2.VPS_ETA_DT
          FROM BKG_BOOKING BK
               , BKG_BOOKING B1
               , BKG_VVD VVD1
               , BKG_VVD VVD2
               , VSK_VSL_PORT_SKD SKD1
               , VSK_VSL_PORT_SKD SKD2
         WHERE 1=1
           AND B1.BKG_NO = @[bkg_no]
           AND Bk.BKG_NO = @[pre_bkg_no]
           AND BK.BKG_NO = VVD1.BKG_NO
           AND BK.BKG_NO = VVD2.BKG_NO
           AND VVD1.VSL_CD = BK.VSL_CD
           AND VVD1.SKD_VOY_NO = BK.SKD_VOY_NO
           AND VVD1.SKD_DIR_CD = BK.SKD_DIR_CD                        
           AND VVD2.VSL_CD = BK.VSL_CD
           AND VVD2.SKD_VOY_NO = BK.SKD_VOY_NO
           AND VVD2.SKD_DIR_CD = BK.SKD_DIR_CD  
           AND VVD1.VSL_CD = SKD1.VSL_CD
           AND VVD1.SKD_VOY_NO = SKD1.SKD_VOY_NO
           AND VVD1.SKD_DIR_CD = SKD1.SKD_DIR_CD
           AND VVD1.POL_CD = SKD1.VPS_PORT_CD
           AND VVD1.POL_CLPT_IND_SEQ  = SKD1.CLPT_IND_SEQ 
           AND VVD2.VSL_CD = SKD2.VSL_CD
           AND VVD2.SKD_VOY_NO = SKD2.SKD_VOY_NO
           AND VVD2.SKD_DIR_CD = SKD2.SKD_DIR_CD
           AND VVD2.POD_CD = SKD2.VPS_PORT_CD
           AND VVD2.POD_CLPT_IND_SEQ  = SKD2.CLPT_IND_SEQ
           AND NVL(SKD1.SKD_CNG_STS_CD,'X') <> 'S'
           AND NVL(SKD2.SKD_CNG_STS_CD,'X') <> 'S'
       ) A,
       (SELECT /*+ ORDERED USE_NL(BK VVD1 VVD2 SKD1 SKD2) */
               SKD1.VPS_PORT_CD POL_PORT
               , SKD2.VPS_PORT_CD POD_PORT
               , ROW_NUMBER() OVER( ORDER BY VVD1.VSL_PRE_PST_CD, VVD1.VSL_SEQ, SKD1.CLPT_SEQ) ROW_SEQ
               , SKD1.CLPT_SEQ AS POL_CLPT_SEQ
               , SKD2.CLPT_SEQ AS POD_CLPT_SEQ
               , SKD1.VPS_ETD_DT
               , SKD2.VPS_ETA_DT
          FROM BKG_BOOKING BK
               , BKG_VVD VVD1
               , BKG_VVD VVD2
               , VSK_VSL_PORT_SKD SKD1
               , VSK_VSL_PORT_SKD SKD2
         WHERE 1=1
           AND BK.BKG_NO = @[bkg_no]
           AND BK.BKG_NO = VVD1.BKG_NO
           AND BK.BKG_NO = VVD2.BKG_NO
           AND VVD1.VSL_CD = BK.VSL_CD
           AND VVD1.SKD_VOY_NO = BK.SKD_VOY_NO
           AND VVD1.SKD_DIR_CD = BK.SKD_DIR_CD                        
           AND VVD2.VSL_CD = BK.VSL_CD
           AND VVD2.SKD_VOY_NO = BK.SKD_VOY_NO
           AND VVD2.SKD_DIR_CD = BK.SKD_DIR_CD                        
           AND VVD1.VSL_CD = SKD1.VSL_CD
           AND VVD1.SKD_VOY_NO = SKD1.SKD_VOY_NO
           AND VVD1.SKD_DIR_CD = SKD1.SKD_DIR_CD
           AND VVD1.POL_CD = SKD1.VPS_PORT_CD
           AND VVD1.POL_CLPT_IND_SEQ  = SKD1.CLPT_IND_SEQ 
           AND VVD2.VSL_CD = SKD2.VSL_CD
           AND VVD2.SKD_VOY_NO = SKD2.SKD_VOY_NO
           AND VVD2.SKD_DIR_CD = SKD2.SKD_DIR_CD
           AND VVD2.POD_CD = SKD2.VPS_PORT_CD
           AND VVD2.POD_CLPT_IND_SEQ  = SKD2.CLPT_IND_SEQ
           AND NVL(SKD1.SKD_CNG_STS_CD,'X')  <> 'S'
           AND NVL(SKD2.SKD_CNG_STS_CD,'X')  <> 'S'
       ) B
 WHERE A.POL_CLPT_SEQ < B.POD_CLPT_SEQ
   AND A.POD_CLPT_SEQ > B.POL_CLPT_SEQ
   AND ROWNUM =1			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="pre_bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
