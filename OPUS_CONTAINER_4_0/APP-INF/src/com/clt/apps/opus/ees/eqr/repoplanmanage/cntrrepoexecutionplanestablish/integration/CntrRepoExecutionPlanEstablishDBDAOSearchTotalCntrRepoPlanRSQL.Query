<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CntrRepoExecutionPlanEstablishDBDAOSearchTotalCntrRepoPlanRSQL">
			<desc><![CDATA[EES_EQR_0092]]></desc>
			<sql><![CDATA[
SELECT	PLN_YRWK			AS T5_PLN_YRWK
		,COMPANY			AS T5_COMPANY
		,DIVISION			AS T5_DIVISION
		,ITEM       	 	AS T5_ITEM 
		,LANE				AS T5_LANE
		,VVD				AS T5_VVD
		,FRLOC				AS T5_FRLOC
		,ETD				AS T5_ETD
		,TOLOC				AS T5_TOLOC
		,ETA				AS T5_ETA
		,LSR        		AS T5_LSR	-- VENDOR ABBR NM
		,SOSEND				AS T5_SOSENED
		,MTY				AS T5_MTY
		,REF_ID				AS T5_REF_ID
		,BKG_NO				AS T5_BKG_NO
		,PURPOSE			AS T5_PURPOSE
		,REASON				AS T5_REASON
		,REASONREMARK		AS T5_REASONREMARK
		,SUM(TOTALVOL)  	AS TOTALVOL
	#foreach ( $key in ${arrtpsz} )
		,SUM(${key}VOL) 	AS T5_${key}VOL
    #end

		,SORTNUM			AS T5_SORTNUM   	-- HIDDEN	PLAN(1), Execution(2), SO(3)를 구분
		,NUM				AS T5_NUM        	-- HIDDEN 	NORMAL ROW(1), SUB TOTAL(2), GRAND TOTAL(3) 구분
		,FM_ECC||TO_ECC		AS T5_SORT1
FROM	(
		SELECT	 DECODE(B.NUM, 1, A.PLN_YRWK, 2, A.PLN_YRWK||' TTL', 3, 'TOTAL') PLN_YRWK
				,DECODE(B.NUM, 1, A.COMPANY,  2, '', 3, '') COMPANY
				,A.DIVISION
				,DECODE(B.NUM, 1, A.ITEM ,  2, '', 3, '') ITEM
				,DECODE(B.NUM, 1, A.LANE ,  2, '', 3, '') LANE
				,DECODE(B.NUM, 1, A.VVD  ,  2, '', 3, '') VVD
				,DECODE(B.NUM, 1, A.FRLOC,  2, '', 3, '') FRLOC
				,DECODE(B.NUM, 1, A.ETD  ,  2, NULL, 3, NULL) ETD
				,DECODE(B.NUM, 1, A.TOLOC,  2, '', 3, '') TOLOC
				,DECODE(B.NUM, 1, A.ETA  ,  2, NULL, 3, NULL) ETA
				,DECODE(B.NUM, 1, A.SOSEND  ,  2, NULL, 3, NULL) SOSEND
				,DECODE(B.NUM, 1, A.MTY,  2, '', 3, '') MTY
				,DECODE(B.NUM, 1, A.LSR,  2, '', 3, '') LSR
				,DECODE(B.NUM, 1, A.PURPOSE,  2, '', 3, '') PURPOSE
				,DECODE(B.NUM, 1, A.REASON,  2, '', 3, '') REASON
				,DECODE(B.NUM, 1, A.REASONREMARK,  2, '', 3, '') REASONREMARK
				,SUM(A.TOTALVOL)  TOTALVOL
				,SUM(A.TOTALCOST) TOTALCOST
			#foreach ( $key in ${arrtpsz} )
				,SUM(A.${key}VOL)     ${key}VOL
				,SUM(A.${key}COST)    ${key}COST
    		#end
				,DECODE(B.NUM, 1, A.REF_ID,  2, '', 3, '') REF_ID
				,DECODE(B.NUM, 1, A.BKG_NO,  2, '', 3, '') BKG_NO
				,A.SORTNUM    	    -- HIDDEN
				,B.NUM         		-- HIDDEN
				,DECODE(B.NUM, 1, A.FM_ECC,  2, '', 3, '') FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,DECODE(B.NUM, 1, A.TO_ECC,  2, '', 3, '') TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
		FROM	(
				-- PLAN -------------------------------------------
				-- 1. T.VVD & D.VVD(PLAN) ------------------------
				SELECT	 A.PLN_YRWK
						,' ' 			COMPANY
						,'Plan' 			DIVISION
						,A.TRSP_MOD_CD	ITEM
						,A.VSL_LANE_CD 	LANE
						,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD
						,A.FM_ECC_CD 		FRLOC
						,TO_CHAR(A.FM_ETD_DT,'YYYY-MM-DD HH24:MI:SS') ETD
						,A.TO_ECC_CD 		TOLOC
						,TO_CHAR(A.TO_ETB_DT,'YYYY-MM-DD HH24:MI:SS') ETA
						,'' 			SOSEND
						,'' 			MTY
						,'' 			LSR
						,'' 			PURPOSE
						,'' 			REASON
						,'' 			REASONREMARK
				#foreach ( $key in ${arrtpsz} )
					#if($velocityCount == 1)
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
					#else
						+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
				    #end
				#end
						TOTALVOL
				#foreach ( $key in ${arrtpsz} )
					#if($velocityCount == 1)
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)
					#else
						+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)
					#end
				#end
						TOTALCOST
				#foreach ( $key in ${arrtpsz} )
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)        			${key}VOL
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)		${key}COST
				#end
						,'' REF_ID
						,'' BKG_NO
						,1 SORTNUM    	-- HIDDEN
						,A.FM_ECC_CD FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
						,A.TO_ECC_CD TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
				FROM	(
						SELECT	A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.TRSP_MOD_CD
								,A.VSL_LANE_CD
								,A.VSL_CD
								,A.SKD_VOY_NO
								,A.SKD_DIR_CD
								,A.FM_ECC_CD
								,A.FM_ETD_DT
								,A.TO_ETB_DT
								,A.TO_ECC_CD
								,QTY.CNTR_TPSZ_CD
								,QTY.CNTR_QTY
								,QTY.LODG_DCHG_COST_AMT
						FROM	 EQR_VSL_LODG_DCHG_PLN A
								,EQR_VSL_LODG_DCHG_PLN_QTY QTY
						WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
							AND	A.PLN_YRWK		= QTY.PLN_YRWK
							AND	A.PLN_SEQ		= QTY.PLN_SEQ
							AND	A.REPO_PLN_ID	= @[repo_pln_id]
		 				#if ( ${userEcc} != ${userEcc} )
		 					AND	(A.FM_ECC_CD IN ( ${userEccText} ) OR A.TO_ECC_CD IN ( ${userEccText} ) )
		 				#end
		 			#if ( ${fmtoat} == 1 )
		 					AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
		 				#if ( ${fromstatus} != '' )
		 					AND	A.FM_ECC_CD IN ( ${fromEccText} )
		 				#end
		 				#if ( ${tostatus} != '' )
		 					AND	A.TO_ECC_CD IN ( ${toEccText} )
		 				#end
					#elseif ( ${fmtoat} == 3 )
							AND	TO_CHAR(A.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
																	AND	(SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
						#if ( ${fromstatus} != '' )
		 					AND	A.FM_ECC_CD IN ( ${fromEccText} )
		 				#end
		 				#if ( ${tostatus} != '' )
		 					AND	A.TO_ECC_CD IN ( ${toEccText} )
		 				#end
					#elseif ( ${fmtoat} == 4 )
							AND  TO_CHAR(A.TO_ETB_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
																	AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
						#if ( ${fromstatus} != '' )
		 					AND	A.FM_ECC_CD IN ( ${fromEccText} )
		 				#end
		 				#if ( ${tostatus} != '' )
		 					AND	A.TO_ECC_CD IN ( ${toEccText} )
		 				#end
					#else
						#if ( ${atstatus} != '' )
							AND	(	(A.FM_ECC_CD IN ( ${fromEccText} ) AND A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]  )
								OR	(A.TO_ECC_CD IN ( ${fromEccText} ) AND (SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)
																		BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
								)
						#else
							AND (	(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]  )
								OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)
									BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
								)
						#end
		 			#end
						#if ( ${tpsz} != '' && ${tpsztype} != '')
							AND	QTY.CNTR_TPSZ_CD IN ( ${tpszText} )
						#end
						#if ( ${itemText} != '' )
							AND	A.TRSP_MOD_CD IN ( ${itemText} )
						#end
						#if ( ${lane} != '' )
							AND	A.VSL_LANE_CD IN ( ${laneText} )
						#end
						#if ( ${vvd} != '' )
							AND	A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdText} )
						#end
						) A
    					-- reason, company, mty 검색정보 사용시만 조인쿼리를 사용합니다.
    		#if ( ${reason} != '' || ${mty} != '' || ${sosend} != '' )
    					,(
						SELECT	 DISTINCT A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.TRSP_MOD_CD
								,A.FM_YD_CD
								,A.TO_YD_CD
								,A.CO_CD
								,A.REPO_PLN_FB_RSN_CD
								,A.REPO_MTY_BKG_FLG
								,B.LOC_CD FM_ECC
								,C.LOC_CD TO_ECC
						FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A
								,MDM_EQ_ORZ_CHT B
								,MDM_EQ_ORZ_CHT C
								,MDM_LOCATION E
								,MDM_LOCATION F
						WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
						AND     E.SCC_CD                 = B.SCC_CD
						AND	SUBSTR(A.TO_YD_CD, 0, 5) = F.LOC_CD
						AND     F.SCC_CD                 = C.SCC_CD
						#if ( ${reason} != '' )
							AND	A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
						#end
						#if ( ${mty} != '' )
							AND	A.REPO_MTY_BKG_FLG = @[mty]
						#end
						#if ( ${sosend} != '' )
							AND	1=0
						#end
						) B
				WHERE	A.REPO_PLN_ID = B.REPO_PLN_ID
					AND	A.PLN_YRWK    = B.PLN_YRWK
					AND	A.FM_ECC_CD   = B.FM_ECC
					AND	A.TO_ECC_CD   = B.TO_ECC
					AND	A.TRSP_MOD_CD = B.TRSP_MOD_CD
			#else
				WHERE	1=1
    		#end
				GROUP BY A.PLN_YRWK
					,A.FM_ECC_CD
					,TO_CHAR(A.FM_ETD_DT,'YYYY-MM-DD HH24:MI:SS')
					,A.TO_ECC_CD
					,TO_CHAR(A.TO_ETB_DT,'YYYY-MM-DD HH24:MI:SS')
					,A.TRSP_MOD_CD
					,A.VSL_LANE_CD
					,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD
				-- 2. TRUCK & RAIL & WATER(PLAN)-------------------
				UNION
				SELECT	 A.PLN_YRWK
						,' ' 		COMPANY
						,'Plan' 		DIVISION
						,A.TRSP_MOD_CD 	ITEM
						,'' 			LANE
						,'' 			VVD
						,A.FM_ECC_CD 	FRLOC
						,A.FM_YRWK		ETD
						,A.TO_ECC_CD 	TOLOC
						,A.TO_YRWK 	ETA
						,'' 			SOSEND
						,'' 			MTY
						,'' 			LSR
						,'' 			PURPOSE
						,'' 			REASON
						,'' 			REASONREMARK
				#foreach ( $key in ${arrtpsz} )
       				#if($velocityCount == 1)
    	   				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
        			#else
        				+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
        			#end
				#end
						TOTALVOL
				#foreach ( $key in ${arrtpsz} )
        			#if($velocityCount == 1)
        				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.TRSP_COST_AMT)),0)
        			#else
        				+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.TRSP_COST_AMT)),0)
        			#end
        		#end
        				TOTALCOST
					#foreach ( $key in ${arrtpsz} )
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0) 	  ${key}VOL
						,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.TRSP_COST_AMT)),0) ${key}COST
					#end
						,'' REF_ID
						,'' BKG_NO
						,1 SORTNUM    	  -- HIDDEN
						,A.FM_ECC_CD FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
						,A.TO_ECC_CD TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
				FROM	(SELECT	 A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.TRSP_MOD_CD
								,A.FM_ECC_CD
								,A.TO_ECC_CD
								,A.FM_YRWK
								,A.TO_YRWK
								,QTY.CNTR_TPSZ_CD
								,QTY.CNTR_QTY
								,QTY.TRSP_COST_AMT
						FROM	EQR_INLND_TRSP_PLN A
								,EQR_INLND_TRSP_PLN_QTY QTY
						WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
							AND	A.PLN_YRWK		= QTY.PLN_YRWK
							AND	A.PLN_SEQ		= QTY.PLN_SEQ
						) A
				-- reason, company, sosend 검색정보 사용시만 조인쿼리를 사용합니다.
	    		#if ( ${reason} != '' || ${mty} != '' || ${sosend} != ''  || ${lane} != '' || ${vvd} != '' )
						,(
						SELECT	 DISTINCT A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.REF_ID
								,A.CNTR_TPSZ_CD
								,A.CO_CD
								,A.TRSP_MOD_CD
								,A.VSL_LANE_CD
								,A.VSL_CD
								,A.SKD_VOY_NO
								,A.SKD_DIR_CD
								,A.FM_YD_CD
								,A.FM_ETD_DT
								,A.TO_YD_CD
								,A.TO_ETA_DT
								,A.EQ_REPO_PURP_CD
								,A.REPO_PLN_FB_RSN_CD
								,A.REPO_PLN_FB_RMK
								,A.CNTR_QTY
								,A.TRSP_COST_AMT
								,A.EXE_RQST_DT
								,A.EXE_ISS_FLG
								,A.REPO_MTY_BKG_FLG
								,E.LOC_CD FM_ECC
								,F.LOC_CD TO_ECC
						FROM	(
								SELECT	 A.REPO_PLN_ID
										,A.PLN_YRWK
										,A.REF_ID
										,A.CO_CD
										,A.TRSP_MOD_CD
										,A.VSL_LANE_CD
										,A.VSL_CD
										,A.SKD_VOY_NO
										,A.SKD_DIR_CD
										,A.FM_YD_CD
										,A.FM_ETD_DT
										,A.TO_YD_CD
										,A.TO_ETA_DT
										,A.EQ_REPO_PURP_CD
										,A.REPO_PLN_FB_RSN_CD
										,A.REPO_PLN_FB_RMK
										,A.EXE_ISS_FLG
										,A.REPO_MTY_BKG_FLG
										,QTY.CNTR_TPSZ_CD
										,QTY.CNTR_QTY
										,QTY.TRSP_COST_AMT
										,QTY.EXE_RQST_DT
								FROM	EQR_INLND_TRSP_EXE_PLN A
										,EQR_INLND_TRSP_EXE_PLN_QTY QTY
								WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
									AND	A.PLN_YRWK		= QTY.PLN_YRWK
									AND	A.PLN_SEQ		= QTY.PLN_SEQ
									AND	A.REF_ID		= QTY.REF_ID
								)A
								,MDM_EQ_ORZ_CHT B
								,MDM_EQ_ORZ_CHT C
								,MDM_LOCATION E
								,MDM_LOCATION F
						WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
						AND     E.SCC_CD                 = B.SCC_CD
						AND	SUBSTR(A.TO_YD_CD, 0, 5) = F.LOC_CD
						AND     F.SCC_CD                 = C.SCC_CD
						#if ( ${sosend} != '' )
							AND A.EXE_ISS_FLG = @[sosend]
						#end
						#if ( ${mty} != '' )
							AND A.REPO_MTY_BKG_FLG = @[mty]
						#end
						#if ( ${reason} != '' )
							AND A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
						#end
						#if ( ${lane} != '' )
							AND A.VSL_LANE_CD IN ( ${laneText} )
						#end
						#if ( ${vvd} != '' )
							AND A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdText} )
						#end
	            		) B
				WHERE	A.REPO_PLN_ID = B.REPO_PLN_ID
					AND	A.PLN_YRWK    = B.PLN_YRWK
					AND	A.FM_ECC_CD   = B.FM_ECC
					AND	A.TO_ECC_CD   = B.TO_ECC
					AND	A.TRSP_MOD_CD = B.TRSP_MOD_CD
    		#else
				WHERE	1=1
    		#end
					AND	A.REPO_PLN_ID = @[repo_pln_id]
				#if ( ${userEcc} != ${userEcc} )
					AND (A.FM_ECC_CD IN ( ${userEccText} ) OR A.TO_ECC_CD IN ( ${userEccText} ))
				#end
			#if( ${fmtoat} == 1 )
					AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
            	#if ( ${fromstatus} != '' )
            		AND A.FM_ECC_CD IN ( ${fromEccText} )
            	#end
            	#if ( ${tostatus} != '' )
            		AND A.TO_ECC_CD IN ( ${toEccText} )
            	#end
			#elseif( ${fmtoat} == 3 )
				AND	A.FM_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
            	#if ( ${fromstatus} != '' )
            		AND A.FM_ECC_CD IN ( ${fromEccText} )
            	#end
            	#if ( ${tostatus} != '' )
            		AND A.TO_ECC_CD IN ( ${toEccText} )
            	#end
			#elseif( ${fmtoat} == 4 )
					AND	A.TO_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
            
            	#if ( ${fromstatus} != '' )
            		AND A.FM_ECC_CD IN ( ${fromEccText} )
            	#end
            	#if ( ${tostatus} != '' )
            		AND A.TO_ECC_CD IN ( ${toEccText} )
            	#end
			#else
				#if ( ${atstatus} != '' )
					AND (	(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] AND A.FM_ECC_CD IN ( ${fromEccText} ) )
						OR	(A.TO_YRWK  BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] AND A.TO_ECC_CD IN ( ${fromEccText} ) )
						)
				#else
					AND	(	(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
						OR	(A.TO_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
						)
        		#end
			#end
				#if ( ${tpsz} != '' && ${tpsztype} != '' )
					AND A.CNTR_TPSZ_CD IN ( ${tpszText} )
				#end
				#if ( ${itemText} != '' )
					AND A.TRSP_MOD_CD IN ( ${itemText} )
				#end
				
		GROUP BY A.PLN_YRWK
			,A.FM_ECC_CD
			,A.FM_YRWK
			,A.TO_ECC_CD
			,A.TO_YRWK
			,A.TRSP_MOD_CD
		-- lane & vvd 검색조건이 들어오면 on-off hire 조외하지 않음
		#if ( ${lane} == '' && ${vvd} == '' )
		-- 3. ON-HIRE & OFF-HIRE(PLAN)---------------------
		UNION
		SELECT	 A.PLN_YRWK
				,' ' COMPANY
				,'Plan' DIVISION
				,A.ONF_HIR_DIV_CD ITEM
				,'' LANE
				,'' VVD
				, A.ECC_CD FRLOC
				,'' ETD
				, A.ECC_CD TOLOC
				,'' ETA
				,'' SOSEND
				,'' MTY
				,'' LSR
				,'' PURPOSE
				,'' REASON
				,'' REASONREMARK
		#foreach ( $key in ${arrtpsz} )
			#if($velocityCount == 1)
	       		,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
	       	#else
	       		+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
	        #end
	    #end
	        	TOTALVOL
		#foreach ( $key in ${arrtpsz} )
			#if($velocityCount == 1)
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.ONF_HIR_COST_AMT)),0)
			#else
				+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.ONF_HIR_COST_AMT)),0)
			#end
		#end
			TOTALCOST
			#foreach ( $key in ${arrtpsz} )
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0) 		 ${key}VOL
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.ONF_HIR_COST_AMT)),0) ${key}COST
			#end
				,'' REF_ID
				,'' BKG_NO
				,1 SORTNUM    	-- HIDDEN
				,DECODE(A.ONF_HIR_DIV_CD, 'F', A.ECC_CD) FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,DECODE(A.ONF_HIR_DIV_CD, 'O', A.ECC_CD) TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
		FROM	(
				SELECT	 A.PLN_YRWK
						,A.ONF_HIR_DIV_CD
						,A.ECC_CD
						,A.REPO_PLN_ID
						,QTY.CNTR_TPSZ_CD
						,QTY.CNTR_QTY
						,QTY.ONF_HIR_COST_AMT
				FROM	 EQR_ONF_HIR_PLN A
						,EQR_ONF_HIR_PLN_QTY QTY
				WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
					AND	A.PLN_YRWK		= QTY.PLN_YRWK
					AND	A.PLN_SEQ		= QTY.PLN_SEQ
				) A
		-- reason, company, sosend 검색정보 사용시만 조인쿼리를 사용합니다.
		#if ( ${reason} != '' || ${mty} != '' || ${sosend} != '' )
				,(
				SELECT	 DISTINCT A.REPO_PLN_ID
						,A.PLN_YRWK
						,A.REF_ID
						,A.CNTR_TPSZ_CD
						,A.CO_CD
						,A.ONF_HIR_DIV_CD
						,A.FM_YD_CD
						,A.TO_YD_CD
						,A.REPO_PLN_FB_RSN_CD
						,A.SO_ISS_FLG
						,A.NON_SO_ISS_FLG
						,B.LCC_CD FM_ECC
						,C.LCC_CD TO_ECC
				FROM	(
						SELECT	 A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.REF_ID
								,A.CO_CD
								,A.ONF_HIR_DIV_CD
								,A.FM_YD_CD
								,A.TO_YD_CD
								,A.REPO_PLN_FB_RSN_CD
								,A.SO_ISS_FLG
								,A.NON_SO_ISS_FLG
								,QTY.CNTR_TPSZ_CD
						FROM	 EQR_ONF_HIR_EXE_PLN A
								,EQR_ONF_HIR_EXE_PLN_QTY QTY
						WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
							AND	A.PLN_YRWK		= QTY.PLN_YRWK
							AND	A.PLN_SEQ		= QTY.PLN_SEQ
							AND	A.REF_ID		= QTY.REF_ID
						) A
						,MDM_EQ_ORZ_CHT B
						,MDM_EQ_ORZ_CHT C
						,MDM_LOCATION E
						,MDM_LOCATION F
				WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
				AND     E.SCC_CD                 = B.SCC_CD
				AND	SUBSTR(A.TO_YD_CD, 0, 5)     = F.LOC_CD
				AND     F.SCC_CD                 = C.SCC_CD
				#if ( ${reason} != '' )
					AND A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
				#end
				#if ( ${sosend} != '' )
					AND (A.SO_ISS_FLG = @[sosend] OR NON_SO_ISS_FLG= @[sosend])
				#end
				#if ( ${mty} != '' )
					AND 1=0
				#end
				) B
		WHERE	A.REPO_PLN_ID	= B.REPO_PLN_ID
			AND	A.PLN_YRWK		= B.PLN_YRWK
			AND	A.ONF_HIR_DIV_CD= B.ONF_HIR_DIV_CD
			AND	(A.ECC_CD=B.FM_ECC OR A.ECC_CD=B.TO_ECC)
		#else
		WHERE	1=1
		#end
			AND	A.REPO_PLN_ID = @[repo_pln_id]
			AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
		#if ( ${userEcc} != ${userEcc} )
			AND	A.ECC_CD IN ( ${userEccText} )
		#end
		#if ( (${fmtoat} == 1 || ${fmtoat} == 3 || ${fmtoat} == 4 ) && ${fromstatus} != '')
			AND A.ECC_CD IN ( ${fromEccText} )
		#end
		#if ( ${tpsz} != '' && ${tpsztype} != '' )
			AND A.CNTR_TPSZ_CD IN ( ${tpszText} )
		#end
		#if ( ${itemText} != '' )
			AND A.ONF_HIR_DIV_CD IN ( ${itemText} )
		#end
		GROUP BY A.PLN_YRWK
				,A.ONF_HIR_DIV_CD
				,A.ECC_CD
	#end
		-- 4. ECC INTERNAL (PLAN)  ------------------------
		-- (PLAN 없음)             ------------------------
		
		-- Execution  ---------------------------------------
		-- 1. T.VVD & D.VVD	(Execution)----------------------
		UNION
		SELECT	 A.PLN_YRWK 		PLN_YRWK
				,A.CO_CD 			COMPANY
				,'REPO BKG' 		DIVISION
				,A.TRSP_MOD_CD 	ITEM
				,A.VSL_LANE_CD 	LANE
				,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD
				,A.FM_YD_CD  		FRLOC
				,TO_CHAR(A.FM_ETD_DT, 'YYYY-MM-DD HH24:MI:SS') ETD
				,A.TO_YD_CD  		TOLOC
				,TO_CHAR(A.TO_ETB_DT, 'YYYY-MM-DD HH24:MI:SS') ETA
				,''                    SOSEND
				,A.REPO_MTY_BKG_FLG    MTY
				,''                    LSR
				,A.EQ_REPO_PURP_CD     PURPOSE
				,A.REPO_PLN_FB_RSN_CD  REASON
				,A.REPO_PLN_FB_RMK REASONREMARK
		#foreach ( $key in ${arrtpsz} )
			#if(${velocityCount} == 1 )
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', DECODE(A.REPO_MTY_BKG_FLG, 'Y', DECODE(A.SPLIT_REPO_PLN_FLG,'N',B.CNTR_QTY,A.CNTR_QTY), A.CNTR_QTY))),0)
			#else
				+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', DECODE(A.REPO_MTY_BKG_FLG, 'Y', DECODE(A.SPLIT_REPO_PLN_FLG,'N',B.CNTR_QTY,A.CNTR_QTY), A.CNTR_QTY))),0)
			#end
		#end
				TOTALVOL
        #foreach ( $key in ${arrtpsz} )
        	#if(${velocityCount} == 1 )
        		,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)
        	#else
        		+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)
        	#end
        #end
        		TOTALCOST
	        #foreach ( $key in ${arrtpsz} )
	        	,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', DECODE(A.REPO_MTY_BKG_FLG, 'Y', DECODE(A.SPLIT_REPO_PLN_FLG,'N',B.CNTR_QTY,A.CNTR_QTY), A.CNTR_QTY))),0) ${key}VOL
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0) ${key}COST
			#end
				,A.REF_ID
				,A.MTY_BKG_NO BKG_NO
				,4 SORTNUM
				,A.FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,A.TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
		FROM	(
				SELECT	 A.REPO_PLN_ID
						,A.PLN_YRWK
						,A.REF_ID
						,A.CNTR_TPSZ_CD
						,A.CO_CD
						,A.TRSP_MOD_CD
						,A.VSL_LANE_CD
						,A.VSL_CD
						,A.SKD_VOY_NO
						,A.SKD_DIR_CD
						,A.FM_YD_CD
						,A.FM_ETD_DT
						,A.TO_YD_CD
						,A.TO_ETB_DT
						,A.EQ_REPO_PURP_CD
						,A.REPO_MTY_BKG_FLG
						,A.REPO_PLN_FB_RSN_CD
						,A.REPO_PLN_FB_RMK
						,A.CNTR_QTY
						,A.LODG_DCHG_COST_AMT
						,A.MTY_BKG_NO
						,A.OLD_BKG_GRP_NO
						,A.SPLIT_REPO_PLN_FLG
						,B.ECC_CD FM_ECC
						,C.ECC_CD TO_ECC
				FROM	(
						SELECT	 A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.REF_ID
								,A.CO_CD
								,A.TRSP_MOD_CD
								,A.VSL_LANE_CD
								,A.VSL_CD
								,A.SKD_VOY_NO
								,A.SKD_DIR_CD
								,A.FM_YD_CD
								,A.FM_ETD_DT
								,A.TO_YD_CD
								,A.TO_ETB_DT
								,A.EQ_REPO_PURP_CD
								,A.REPO_MTY_BKG_FLG
								,A.REPO_PLN_FB_RSN_CD
								,A.REPO_PLN_FB_RMK
								,A.MTY_BKG_NO
								,A.OLD_BKG_GRP_NO
								,A.SPLIT_REPO_PLN_FLG
								,QTY.CNTR_TPSZ_CD
								,QTY.CNTR_QTY
								,QTY.LODG_DCHG_COST_AMT
						FROM	EQR_VSL_LODG_DCHG_EXE_PLN A
								,EQR_VSL_EXE_PLN_QTY QTY
						WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
							AND	A.PLN_YRWK		= QTY.PLN_YRWK
							AND	A.PLN_SEQ		= QTY.PLN_SEQ
							AND	A.REF_ID		= QTY.REF_ID
						) A
						,MDM_EQ_ORZ_CHT B
						,MDM_EQ_ORZ_CHT C
						,MDM_LOCATION E
						,MDM_LOCATION F
				WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
				AND     E.SCC_CD                 = B.SCC_CD
				AND	SUBSTR(A.TO_YD_CD, 0, 5)     = F.LOC_CD
				AND     F.SCC_CD                 = C.SCC_CD
				) A,
				(
				SELECT	 A.OLD_BKG_GRP_NO
						,A.CNTR_TPSZ_CD
						,NVL(A.CNTR_QTY, 0) - NVL(B.CNTR_QTY, 0) CNTR_QTY  -- (original - split)
				FROM	(
						-- original booking vol 집계
						SELECT	 DISTINCT A.OLD_BKG_GRP_NO AS OLD_BKG_GRP_NO
								,B.CNTR_TPSZ_CD
								,SUM(B.CNTR_QTY) CNTR_QTY
						FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A
								,EQR_VSL_EXE_PLN_QTY B
								,(
								SELECT	DISTINCT OLD_BKG_GRP_NO
								FROM	EQR_VSL_LODG_DCHG_EXE_PLN
								WHERE	REPO_PLN_ID = @[repo_pln_id]
									AND	REPO_MTY_BKG_FLG = 'Y'
								) C                         
						WHERE	A.REPO_PLN_ID   = B.REPO_PLN_ID
							AND	A.PLN_YRWK      = B.PLN_YRWK
							AND	A.PLN_SEQ       = B.PLN_SEQ
							AND	A.REF_ID        = B.REF_ID
							AND	A.OLD_BKG_GRP_NO= C.OLD_BKG_GRP_NO
						GROUP BY A.OLD_BKG_GRP_NO
								,B.CNTR_TPSZ_CD
						) A,
						(
						-- split booking vol 집계
						SELECT	 DISTINCT A.OLD_BKG_GRP_NO AS OLD_BKG_GRP_NO
								,B.CNTR_TPSZ_CD                        
								,SUM(B.CNTR_QTY) CNTR_QTY              
						FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A
								,EQR_VSL_EXE_PLN_QTY B
								,(                                       
								SELECT	DISTINCT OLD_BKG_GRP_NO
								FROM	EQR_VSL_LODG_DCHG_EXE_PLN      
								WHERE	REPO_PLN_ID			= @[repo_pln_id]
									AND	REPO_MTY_BKG_FLG	= 'Y'       
									AND	SPLIT_REPO_PLN_FLG	= 'Y'
									--AND	TRIM(MTY_BKG_NO_SPLIT) IS NOT NULL 
								) C                                     
						WHERE	A.REPO_PLN_ID   = B.REPO_PLN_ID
							AND A.PLN_YRWK      = B.PLN_YRWK
							AND A.PLN_SEQ       = B.PLN_SEQ
							AND A.REF_ID        = B.REF_ID
							AND A.OLD_BKG_GRP_NO	= C.OLD_BKG_GRP_NO
						    AND	A.REPO_MTY_BKG_FLG	= 'Y'       
							AND	A.SPLIT_REPO_PLN_FLG	= 'Y'
						GROUP BY A.OLD_BKG_GRP_NO
								,B.CNTR_TPSZ_CD
						) B
				WHERE	A.OLD_BKG_GRP_NO = B.OLD_BKG_GRP_NO(+)
					AND	A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD(+)
				) B
				,EQR_VSL_LODG_DCHG_PLN C
		WHERE	A.REPO_PLN_ID = C.REPO_PLN_ID
			AND	A.PLN_YRWK    = C.PLN_YRWK
			AND	A.TRSP_MOD_CD = C.TRSP_MOD_CD
			AND	C.REPO_PLN_ID = @[repo_pln_id]
			AND	A.OLD_BKG_GRP_NO= B.OLD_BKG_GRP_NO(+)
			AND	A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD(+)
		#if ( ${userEcc} != ${userEcc} )
			AND	(A.FM_ECC IN ( ${userEccText} ) OR A.TO_ECC IN ( ${userEccText} ))
		#end
	#if ( ${fmtoat} == 1 )
			AND	C.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
		#if ( ${fromstatus} != '' )
			AND	A.FM_ECC IN ( ${fromEccText} )
		#end
		#if ( ${tostatus} != '' )
			AND	A.TO_ECC IN ( ${toEccText} )
		#end
	#elseif ( ${fmtoat} == 3 )
			AND	TO_CHAR(A.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
													AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
		#if ( ${fromstatus} != '' )
			AND	A.FM_ECC IN ( ${fromEccText} )
		#end
		#if ( ${tostatus} != '' )
			AND	A.TO_ECC IN ( ${toEccText} )
		#end
	#elseif ( ${fmtoat} == 4 )
			AND	TO_CHAR(A.TO_ETB_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
													AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
		#if ( ${fromstatus} != '' )
			AND	A.FM_ECC IN ( ${fromEccText} )
		#end
		#if ( ${tostatus} != '' )
			AND	A.TO_ECC IN ( ${toEccText} )
		#end
	#else		
		#if ( ${atstatus} != '' )
			AND	(	(C.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] AND A.FM_ECC IN ( ${fromEccText} ))
				OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT) 
					BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] AND A.TO_ECC IN ( ${fromEccText} ))
				)
		#else
			AND	(	(C.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
				OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
				)
   		#end
	#end
		#if (${reason} != '' )
			AND	A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
		#end
		#if (${tpsz} != '' && ${tpsztype} != '' )
			AND	A.CNTR_TPSZ_CD IN ( ${tpszText} )
		#end
		#if (${itemText} != '' )
			AND	A.TRSP_MOD_CD IN ( ${itemText} )
		#end
		#if (${mty} != '' )
			AND	A.REPO_MTY_BKG_FLG = @[mty]
		#end
		#if (${sosend} != '' )
			AND	1=0
		#end
		#if (${lane} != '' )
			AND	A.VSL_LANE_CD IN ( ${laneText} )
		#end
		#if (${vvd} != '' )
			AND	A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdText} )
		#end
		GROUP BY A.PLN_YRWK
				,A.CO_CD
				,A.FM_YD_CD
				,A.FM_ETD_DT
				,A.TO_YD_CD
				,A.TO_ETB_DT
				,A.TRSP_MOD_CD
				,A.VSL_LANE_CD
				,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD
				,A.EQ_REPO_PURP_CD
				,A.REPO_MTY_BKG_FLG
				,A.REPO_PLN_FB_RSN_CD
				,A.REPO_PLN_FB_RMK
				,A.MTY_BKG_NO
				,A.REF_ID
				,A.FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,A.TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
		-- 2. TRUCK & RAIL & WATER (Execution)-----------------
		UNION
		SELECT	 A.PLN_YRWK 		PLN_YRWK
				,A.CO_CD 			COMPANY
				,'Execution' 		DIVISION
				,A.TRSP_MOD_CD 	ITEM
				,A.VSL_LANE_CD 	LANE
				,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD     VVD
				,A.FM_YD_CD  		FRLOC
				,TO_CHAR(A.FM_ETD_DT, 'YYYYMMDD') 		ETD
				,A.TO_YD_CD  		TOLOC
				,TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') 		ETA
				,A.EXE_ISS_FLG    	 SOSEND
				,A.REPO_MTY_BKG_FLG	 MTY
				,''    				 LSR
				,A.EQ_REPO_PURP_CD PURPOSE
				,A.REPO_PLN_FB_RSN_CD  REASON
				,A.REPO_PLN_FB_RMK     REASONREMARK
		#foreach ( $key in ${arrtpsz} )
			#if ( ${velocityCount} == 1 )
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
			#else
				+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
			#end
		#end
				TOTALVOL
		#foreach ( $key in ${arrtpsz} )
			#if ( ${velocityCount} == 1 )
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.TRSP_COST_AMT)),0)
			#else
				+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.TRSP_COST_AMT)),0)
			#end
		#end
				TOTALCOST
			#foreach ( $key in ${arrtpsz} )
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0) 	 ${key}VOL
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.TRSP_COST_AMT)),0) ${key}COST
			#end
				,A.REF_ID
				,A.MTY_BKG_NO BKG_NO
				,2 SORTNUM
				,A.FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,A.TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
		FROM	(
				SELECT	 A.REPO_PLN_ID
						,A.PLN_YRWK
						,A.REF_ID
						,A.CNTR_TPSZ_CD
						,A.CO_CD
						,A.TRSP_MOD_CD
						,A.VSL_LANE_CD
						,A.VSL_CD
						,A.SKD_VOY_NO
						,A.SKD_DIR_CD
						,A.FM_YD_CD
						,A.FM_ETD_DT
						,A.TO_YD_CD
						,A.TO_ETA_DT
						,A.EQ_REPO_PURP_CD
						,A.REPO_PLN_FB_RSN_CD
						,A.REPO_PLN_FB_RMK
						,A.CNTR_QTY
						,A.TRSP_COST_AMT
						,A.EXE_RQST_DT
						,A.EXE_ISS_FLG
						,A.REPO_MTY_BKG_FLG
						,A.MTY_BKG_NO
						,E.LOC_CD FM_ECC
						,F.LOC_CD TO_ECC
				FROM	(
						SELECT	 A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.REF_ID
								,A.CO_CD
								,A.TRSP_MOD_CD
								,A.VSL_LANE_CD
								,A.VSL_CD
								,A.SKD_VOY_NO
								,A.SKD_DIR_CD
								,A.FM_YD_CD
								,A.FM_ETD_DT
								,A.TO_YD_CD
								,A.TO_ETA_DT
								,A.EQ_REPO_PURP_CD
								,A.REPO_PLN_FB_RSN_CD
								,A.REPO_PLN_FB_RMK
								,A.EXE_ISS_FLG
								,A.REPO_MTY_BKG_FLG
								,A.MTY_BKG_NO
								,QTY.CNTR_TPSZ_CD
								,QTY.CNTR_QTY
								,QTY.TRSP_COST_AMT
								,QTY.EXE_RQST_DT
						FROM	 EQR_INLND_TRSP_EXE_PLN A
								,EQR_INLND_TRSP_EXE_PLN_QTY QTY
						WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
							AND	A.PLN_YRWK		= QTY.PLN_YRWK
							AND	A.PLN_SEQ		= QTY.PLN_SEQ
							AND	A.REF_ID		= QTY.REF_ID
						) A
						,MDM_EQ_ORZ_CHT B
						,MDM_EQ_ORZ_CHT C
						,MDM_LOCATION E
						,MDM_LOCATION F
				WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
				AND     E.SCC_CD                 = B.SCC_CD
				AND	SUBSTR(A.TO_YD_CD, 0, 5) = F.LOC_CD
				AND     F.SCC_CD                 = C.SCC_CD
				) A
				,EQR_INLND_TRSP_PLN B
		WHERE	A.REPO_PLN_ID = B.REPO_PLN_ID
			AND	A.PLN_YRWK    = B.PLN_YRWK
			AND	A.FM_ECC   = B.FM_ECC_CD
			AND	A.TO_ECC 	 = B.TO_ECC_CD
			AND	A.TRSP_MOD_CD= B.TRSP_MOD_CD
			AND	A.REPO_PLN_ID = @[repo_pln_id]
		#if ( ${userEcc} != ${userEcc} )
			AND	(A.FM_ECC IN ( ${userEccText} ) OR A.TO_ECC IN ( ${userEccText} ))
		#end
	#if ( ${fmtoat} == 1 )
			AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
		#if ( ${fromstatus} != '' )
			AND	A.FM_ECC IN ( ${fromEccText} )
		#end
		#if ( ${tostatus} != '' )
			AND	A.TO_ECC IN ( ${toEccText} )
		#end
	#elseif ( ${fmtoat} == 3 )
			AND	TO_CHAR(A.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[FM_PLNYRWK])
													AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
		#if ( ${fromstatus} != '' )
			AND	A.FM_ECC IN ( ${fromEccText} )
		#end
		#if ( ${tostatus} != '' )
			AND	A.TO_ECC IN ( ${toEccText} )
		#end
	#elseif ( ${fmtoat} == 4 )
			AND	TO_CHAR(A.TO_ETA_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
													AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
		#if ( ${fromstatus} != '' )
			AND	A.FM_ECC IN ( ${fromEccText} )
		#end
		#if ( ${tostatus} != '' )
			AND	A.TO_ECC IN ( ${toEccText} )
		#end
	#else
		#if ( ${atstatus} != '' )
			AND	(	(B.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] AND A.FM_ECC IN ( ${fromEccText} ))
				OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
						AND A.TO_ECC IN ( ${fromEccText} ))
				)
		#else
			AND	(	(B.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
				OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
				)
		#end
	#end
		#if ( ${tpsz} != '' && ${tpsztype} != '')
			AND	A.CNTR_TPSZ_CD IN ( ${tpszText} )
		#end
		#if ( ${reason} != '')
			AND	A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
		#end
		#if ( ${itemText} != '')
			AND	A.TRSP_MOD_CD IN ( ${itemText} )
		#end
		#if ( ${sosend} != '')
			AND	A.EXE_ISS_FLG = @[sosend]
		#end
		#if ( ${lane} != '')
			AND	A.VSL_LANE_CD IN ( ${laneText} )
		#end
		#if ( ${vvd} != '')
			AND	A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdText} )
		#end
		#if ( ${mty} != '')
			AND	A.REPO_MTY_BKG_FLG = @[mty]
		#end

		GROUP BY A.PLN_YRWK
			,A.CO_CD
			,A.TRSP_MOD_CD
			,A.FM_YD_CD
			,TO_CHAR(A.FM_ETD_DT, 'YYYYMMDD')
			,A.TO_YD_CD
			,TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD')
			,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD
			,A.VSL_LANE_CD
			,A.EQ_REPO_PURP_CD
			,A.EXE_ISS_FLG
			,A.REPO_MTY_BKG_FLG
			,A.REPO_PLN_FB_RSN_CD
			,A.REPO_PLN_FB_RMK
			,A.REF_ID
			,A.MTY_BKG_NO
			,A.FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보
			,A.TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보
		-- lane & vvd 검색조건이 들어오면 on-off hire 조외하지 않음
	#if ( ${lane} == '' && ${vvd} == '' )
		-- 3. ON-HIRE & OFF-HIRE (Execution)-----------------
		UNION
		SELECT	 A.PLN_YRWK 		PLN_YRWK
				,A.CO_CD 			COMPANY
				,'Execution' 		DIVISION
				,A.ONF_HIR_DIV_CD ITEM
				,'' 				LANE
				,'' 				VVD
				,A.FM_YD_CD 		FRLOC
				,A.FM_LOC_DT 		ETD
				,A.TO_YD_CD 		TOLOC
				,A.TO_LOC_DT 		ETA
				,DECODE(A.SO_ISS_FLG, 'Y', A.SO_ISS_FLG, A.NON_SO_ISS_FLG) SOSEND
				,'' 				MTY
				,A.VNDR_ABBR_NM 	LSR
				,'' 				PURPOSE
				,A.REPO_PLN_FB_RSN_CD REASON
				,A.REPO_PLN_FB_RMK REASONREMARK
		#foreach ( $key in ${arrtpsz} )
			#if ( ${velocityCount} == 1 )
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
			#else
				+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
			#end
		#end
				TOTALVOL
		#foreach ( $key in ${arrtpsz} )
			#if ( ${velocityCount} == 1 )
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.ONF_HIR_COST_AMT)),0)
			#else
				+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.ONF_HIR_COST_AMT)),0)
			#end
		#end
				TOTALCOST
			#foreach ( $key in ${arrtpsz} )
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0) 		 ${key}VOL
				,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.ONF_HIR_COST_AMT)),0) ${key}COST
			#end
				,A.REF_ID REFNO
				,'' BKG_NO
				,2 SORTNUM   					-- HIDDEN
				,A.FM_ECC  -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,A.TO_ECC  -- SORT에 사용될 SCC의 해당 TO ECC 정보
		FROM	(
				SELECT	 A.REPO_PLN_ID
						,A.PLN_YRWK
						,A.REF_ID
						,A.CNTR_TPSZ_CD
						,A.CO_CD
						,A.ONF_HIR_DIV_CD
						,A.VNDR_CNT_CD
						,A.VNDR_SEQ
						,A.VNDR_ABBR_NM
						,A.FM_YD_CD
						,A.FM_LOC_DT
						,A.TO_YD_CD
						,A.TO_LOC_DT
						,A.REPO_PLN_FB_RSN_CD
						,A.REPO_PLN_FB_RMK
						,A.CNTR_QTY
						,A.ONF_HIR_COST_AMT
						,A.SO_RQST_DT
						,A.SO_ISS_FLG
						,A.NON_SO_ISS_FLG
						,B.LCC_CD FM_ECC
						,C.LCC_CD TO_ECC
				FROM	(
						SELECT	 A.REPO_PLN_ID
								,A.PLN_YRWK
								,A.REF_ID
								,A.CO_CD
								,A.ONF_HIR_DIV_CD
								,A.VNDR_CNT_CD
								,A.VNDR_SEQ
								,A.VNDR_ABBR_NM
								,A.FM_YD_CD
								,A.FM_LOC_DT
								,A.TO_YD_CD
								,A.TO_LOC_DT
								,A.REPO_PLN_FB_RSN_CD
								,A.REPO_PLN_FB_RMK
								,A.SO_RQST_DT
								,A.SO_ISS_FLG
								,A.NON_SO_ISS_FLG
								,QTY.CNTR_TPSZ_CD
								,QTY.CNTR_QTY
								,QTY.ONF_HIR_COST_AMT
						FROM	 EQR_ONF_HIR_EXE_PLN A
								,EQR_ONF_HIR_EXE_PLN_QTY QTY
						WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
							AND	A.PLN_YRWK		= QTY.PLN_YRWK
							AND	A.PLN_SEQ		= QTY.PLN_SEQ
							AND	A.REF_ID		= QTY.REF_ID
						) A
						,MDM_EQ_ORZ_CHT B
						,MDM_EQ_ORZ_CHT C
						,MDM_LOCATION E
						,MDM_LOCATION F
				WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
				AND     E.SCC_CD                 = B.SCC_CD
				AND	SUBSTR(A.TO_YD_CD, 0, 5) = F.LOC_CD
				AND     F.SCC_CD                 = C.SCC_CD
				) A
				,EQR_ONF_HIR_PLN B
		WHERE	A.REPO_PLN_ID = B.REPO_PLN_ID
			AND	A.PLN_YRWK    = B.PLN_YRWK
			AND	A.ONF_HIR_DIV_CD = B.ONF_HIR_DIV_CD
			AND	(A.FM_ECC = B.ECC_CD OR A.TO_ECC = B.ECC_CD)
			AND	A.REPO_PLN_ID = @[repo_pln_id]
		#if ( ${fmtoat} == 3 )
			AND	A.FM_LOC_DT BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
								AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
		#elseif ( ${fmtoat} == 4 )
			AND	A.TO_LOC_DT BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
								AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
		#else
	        AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
		#end
		#if ( ${userEcc} != ${userEcc} )
			AND (A.FM_ECC IN ( ${userEccText} ) OR A.TO_ECC IN ( ${userEccText} ))
		#end
		#if ( ( ${fmtoat} == 1 || ${fmtoat} == 3 || ${fmtoat} == 4 ) && ${fromstatus} != '' )
			AND (A.FM_ECC IN ( ${fromEccText} ) OR A.TO_ECC IN ( ${fromEccText} ))
		#end		
		#if ( ${tpsz} != '' && ${tpsztype} != '' )
			AND	A.CNTR_TPSZ_CD IN ( ${tpszText} )
		#end
		#if ( ${reason} != '' )
			AND	A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
		#end
		#if ( ${itemText} != '' )
			AND	A.ONF_HIR_DIV_CD IN ( ${itemText} )
		#end
		#if ( ${sosend} != '' )
			AND	(A.SO_ISS_FLG = @[sosend] OR A.NON_SO_ISS_FLG = @[sosend])
		#end
		#if ( ${mty} != '' )
			AND	1=0
		#end	                  
		GROUP BY A.PLN_YRWK
			,A.CO_CD           
			,A.ONF_HIR_DIV_CD  
			,A.VNDR_ABBR_NM    
			,A.FM_YD_CD        
			,A.FM_LOC_DT       
			,A.TO_YD_CD        
			,A.TO_LOC_DT       
			,DECODE(A.SO_ISS_FLG, 'Y', A.SO_ISS_FLG, A.NON_SO_ISS_FLG)
			,A.REPO_PLN_FB_RSN_CD 
			,A.REPO_PLN_FB_RMK    
			,A.REF_ID             
			,A.FM_ECC  -- SORT에 사용될 SCC의 해당 FM ECC 정보
			,A.TO_ECC  -- SORT에 사용될 SCC의 해당 TO ECC 정보
	-- 4. ECC INTERNAL (Execution)-----------------------
	UNION
	SELECT	 A.PLN_YRWK 		PLN_YRWK
			,A.CO_CD 			COMPANY
			,'Execution' 		DIVISION
			,DECODE(A.TRSP_MOD_CD, 'T', 'S', 'W', 'S', 'R', 'S') AS	ITEM
			,'' 	LANE
			,'' 	VVD
			,A.FM_YD_CD  		FRLOC
			,TO_CHAR(A.FM_ETD_DT, 'YYYYMMDD') ETD
			,A.TO_YD_CD  		TOLOC
			,TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') ETA
			,A.EXE_ISS_FLG    SOSEND
			,''    MTY
			,''    LSR
			,A.EQ_REPO_PURP_CD PURPOSE
			,''    REASON
			,''    REASONREMARK
	#foreach ( $key in ${arrtpsz} )
		#if ( ${velocityCount} == 1 )
			,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
		#else
			+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0)
		#end
	#end
			TOTALVOL
	#foreach ( $key in ${arrtpsz} )
		#if ( ${velocityCount} == 1 )
			,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.TRSP_COST_AMT)),0)
		#else
			+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.TRSP_COST_AMT)),0)
		#end
	#end
			TOTALCOST
		#foreach ( $key in ${arrtpsz} )
            ,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.CNTR_QTY)),0) 	 ${key}VOL
            ,NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.TRSP_COST_AMT)),0) ${key}COS
        #end
			,A.REF_ID
			,'' BKG_NO
			,2 SORTNUM   					-- HIDDEN
			,B.ECC_CD FM_ECC
			,C.ECC_CD TO_ECC
	FROM	(
			SELECT	 A.REPO_PLN_ID
					,A.PLN_YRWK
					,A.REF_ID
					,A.CO_CD
					,A.TRSP_MOD_CD
					,A.FM_YD_CD
					,A.FM_ETD_DT
					,A.TO_YD_CD
					,A.TO_ETA_DT
					,A.EXE_ISS_FLG
					,A.EQ_REPO_PURP_CD
					,QTY.CNTR_TPSZ_CD
					,QTY.CNTR_QTY
					,QTY.TRSP_COST_AMT
			FROM	 EQR_ECC_INTER_EXE_PLN A
					,EQR_ECC_INTER_EXE_PLN_QTY QTY
			WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
				AND	A.PLN_YRWK		= QTY.PLN_YRWK
				AND	A.REF_ID		= QTY.REF_ID
			) A
			,MDM_EQ_ORZ_CHT B
			,MDM_EQ_ORZ_CHT C
			,MDM_LOCATION E
			,MDM_LOCATION F
	WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
	AND     E.SCC_CD                 = B.SCC_CD
	AND	SUBSTR(A.TO_YD_CD, 0, 5) = F.LOC_CD
	AND     F.SCC_CD                 = C.SCC_CD
	AND	A.REPO_PLN_ID = @[repo_pln_id]
	#if ( ${userEcc} != ${userEcc} )
		AND (E.SCC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${userEccText} ))
			OR F.SCC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${userEccText} )))
	#end
#if ( ${fmtoat} == 1 )
		AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
	#if( ${fromstatus} != '' )
		AND E.SCC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ))
	#end
	#if( ${tostatus} != '' )
		AND F.SCC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ))
	#end
#elseif ( ${fmtoat} == 3 )
		AND	TO_CHAR(A.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
												AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
	#if( ${fromstatus} != '' )
		AND E.SCC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ))
	#end
	#if( ${tostatus} != '' )
		AND F.SCC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ))
	#end	            
#elseif ( ${fmtoat} == 4 )
		AND	TO_CHAR(A.TO_ETA_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
												AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
	#if( ${fromstatus} != '' )
		AND E.SCC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ))
	#end
	#if( ${tostatus} != '' )
		AND F.SCC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ))
	#end
#else
   	#if( ${atstatus} != '' )
   		AND	(	(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
   				AND E.SCC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} )))
   			OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)
   					BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] AND SUBSTR(A.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} )))
   			)
   	#else
   		AND	(	(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
   			OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
        	)
    #end
#end
	#if ( ${tpsz} != '' && ${tpsztype} != '')
		AND	A.CNTR_TPSZ_CD IN ( ${tpszText} )
	#end
	#if ( ${itemText} != '')
		AND	DECODE(A.TRSP_MOD_CD, 'T', 'S', 'W', 'S', 'R', 'S') IN ( ${itemText} )
	#end
	#if ( ${sosend} != '')
		AND	A.EXE_ISS_FLG = @[sosend]
	#end
	#if ( ${mty} != '')
		AND	1=0
	#end
	GROUP BY A.PLN_YRWK
			,A.CO_CD
			,A.TRSP_MOD_CD
			,A.FM_YD_CD
			,TO_CHAR(A.FM_ETD_DT, 'YYYYMMDD')
			,A.TO_YD_CD
			,TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD')
			,A.EQ_REPO_PURP_CD
			,A.EXE_ISS_FLG
			,A.REF_ID
			,B.ECC_CD
			,C.ECC_CD
#end
		-- W/O Issue --------------------------------------
		-- 1. T.VVD & D.VVD	(W/O Issue)--------------------
		--(없음)
		-- 2. TRUCK & RAIL & WATER (W/O Issue)-------------
		UNION
		SELECT	 PLN_YRWK 		PLN_YRWK
				,CO_CD 			COMPANY
				,'W/O Issue' 		DIVISION
				,TRSP_MOD_CD      ITEM
				,'' 				LANE
				,'' 				VVD
				,FM_YD_CD 		FRLOC
				,FM_DT 			ETD
				,TO_YD_CD 		TOLOC
				,TO_DT 			ETA
				,'' 				SOSEND
				,'' 				MTY
				,'' 				LSR
				,'' 				PURPOSE
				,'' 				REASON
				,'' 				REASONREMARK
				,COUNT(CNTR_TPSZ_CD) TOTALVOL
		#foreach ( $key in ${arrtpsz} )
			#if ( ${velocityCount} == 1 )
				,NVL(MAX(DECODE(CNTR_TPSZ_CD, '$key', REPO_COST_AMT)),0)
			#else
				+NVL(MAX(DECODE(CNTR_TPSZ_CD, '$key', REPO_COST_AMT)),0)
			#end
		#end
			TOTALCOST
			#foreach ( $key in ${arrtpsz} )
				,COUNT(DECODE(CNTR_TPSZ_CD, '$key', CNTR_TPSZ_CD))  ${key}VOL
				,MAX(DECODE(CNTR_TPSZ_CD,   '$key', REPO_COST_AMT)) ${key}COST
			#end
				,REF_ID REFNO
				,'' BKG_NO
				,3 SORTNUM	 	-- HIDDEN
				,E.LOC_CD FM_ECC  -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,F.LOC_CD TO_ECC  -- SORT에 사용될 SCC의 해당 TO ECC 정보
		FROM	 EQR_REPO_EXE_SO_IF OUTER
				,MDM_EQ_ORZ_CHT B
				,MDM_EQ_ORZ_CHT C
				,MDM_LOCATION E
				,MDM_LOCATION F
		WHERE	SUBSTR(OUTER.FM_YD_CD, 0, 5) = E.LOC_CD
		AND     E.SCC_CD                     = B.SCC_CD
		AND	SUBSTR(OUTER.TO_YD_CD, 0, 5) = F.LOC_CD
		AND     F.SCC_CD                     = C.SCC_CD
			AND	OUTER.WO_EXE_FLG = 'Y'
			AND	EXISTS	(
						SELECT	 INNER.REPO_PLN_ID
								,INNER.PLN_YRWK
								,INNER.REF_ID
						FROM	(
								SELECT	A.REPO_PLN_ID
										,A.PLN_YRWK
										,A.REF_ID
										,A.CNTR_TPSZ_CD
										,A.CO_CD
										,A.TRSP_MOD_CD
										,A.VSL_LANE_CD
										,A.VSL_CD
										,A.SKD_VOY_NO
										,A.SKD_DIR_CD
										,A.FM_YD_CD
										,A.FM_ETD_DT
										,A.TO_YD_CD
										,A.TO_ETA_DT
										,A.EQ_REPO_PURP_CD
										,A.REPO_PLN_FB_RSN_CD
										,A.REPO_PLN_FB_RMK
										,A.CNTR_QTY
										,A.TRSP_COST_AMT
										,A.EXE_RQST_DT
										,A.EXE_ISS_FLG
										,A.REPO_MTY_BKG_FLG
										,A.FM_ECC
										,A.TO_ECC
								FROM    (
										SELECT	 A.REPO_PLN_ID
												,A.PLN_YRWK
												,A.REF_ID
												,A.CNTR_TPSZ_CD
												,A.CO_CD
												,A.TRSP_MOD_CD
												,A.VSL_LANE_CD
												,A.VSL_CD
												,A.SKD_VOY_NO
												,A.SKD_DIR_CD
												,A.FM_YD_CD
												,A.FM_ETD_DT
												,A.TO_YD_CD
												,A.TO_ETA_DT
												,A.EQ_REPO_PURP_CD
												,A.REPO_PLN_FB_RSN_CD
												,A.REPO_PLN_FB_RMK
												,A.CNTR_QTY
												,A.TRSP_COST_AMT
												,A.EXE_RQST_DT
												,A.EXE_ISS_FLG
												,A.REPO_MTY_BKG_FLG
												,E.LOC_CD FM_ECC
												,F.LOC_CD TO_ECC
										FROM	(
												SELECT	 A.REPO_PLN_ID
														,A.PLN_YRWK
														,A.REF_ID
														,A.CO_CD
														,A.TRSP_MOD_CD
														,A.VSL_LANE_CD
														,A.VSL_CD
														,A.SKD_VOY_NO
														,A.SKD_DIR_CD
														,A.FM_YD_CD
														,A.FM_ETD_DT
														,A.TO_YD_CD
														,A.TO_ETA_DT
														,A.EQ_REPO_PURP_CD
														,A.REPO_PLN_FB_RSN_CD
														,A.REPO_PLN_FB_RMK
														,A.EXE_ISS_FLG
														,A.REPO_MTY_BKG_FLG
														,QTY.CNTR_TPSZ_CD
														,QTY.CNTR_QTY
														,QTY.TRSP_COST_AMT
														,QTY.EXE_RQST_DT
												FROM	 EQR_INLND_TRSP_EXE_PLN A
														,EQR_INLND_TRSP_EXE_PLN_QTY QTY
												WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
													AND	A.PLN_YRWK		= QTY.PLN_YRWK
													AND	A.PLN_SEQ		= QTY.PLN_SEQ
													AND	A.REF_ID		= QTY.REF_ID
												) A
												,MDM_EQ_ORZ_CHT B
												,MDM_EQ_ORZ_CHT C
												,MDM_LOCATION E
												,MDM_LOCATION F
										WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
										AND     E.SCC_CD                 = B.SCC_CD
											AND	SUBSTR(A.TO_YD_CD, 0, 5) = F.LOC_CD
											AND     F.SCC_CD                 = C.SCC_CD
										) A
										,EQR_INLND_TRSP_PLN     B
								WHERE	A.REPO_PLN_ID = B.REPO_PLN_ID
									AND	A.PLN_YRWK    = B.PLN_YRWK
									AND	A.TRSP_MOD_CD = B.TRSP_MOD_CD
									AND	A.FM_ECC      = B.FM_ECC_CD
									AND	A.TO_ECC      = B.TO_ECC_CD
									AND	A.REPO_PLN_ID = @[repo_pln_id]
								#if ( ${userEcc} != ${userEcc} )
									AND (A.FM_ECC IN ( ${userEccText} ) OR A.TO_ECC IN ( ${userEccText} ))
								#end
							#if ( ${fmtoat} == 1 )
									AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
								#if ( ${fromstatus} != '' )
									AND A.FM_ECC IN ( ${fromEccText} )
								#end
								#if ( ${tostatus} != '' )
									AND A.TO_ECC IN ( ${toEccText} )
								#end
							#elseif ( ${fmtoat} == 3 )
									AND	TO_CHAR(A.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
																			AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
								#if ( ${fromstatus} != '' )
									AND SUBSTR(A.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ))
								#end
								#if ( ${tostatus} != '' )
									AND SUBSTR(A.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ))
								#end
							#elseif ( ${fmtoat} == 4 )
									AND	TO_CHAR(A.TO_ETA_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
																			AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
								#if ( ${fromstatus} != '' )
									AND SUBSTR(A.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ))
								#end
								#if ( ${tostatus} != '' )
									AND SUBSTR(A.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ))
								#end
							#else
								#if ( ${atstatus} != '' )
									AND	(	(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] AND A.FM_ECC IN ( ${fromEccText} ))
										OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)
												BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] AND A.TO_ECC IN ( ${fromEccText} ))
										)
								#else
									AND	(	(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
										OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)
												BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
										)
								#end
							#end
								#if ( ${tpsz} != '' && ${tpsztype} != '' )
									AND	A.CNTR_TPSZ_CD IN ( ${tpszText} )
								#end
								#if ( ${itemText} != '' )
									AND	B.TRSP_MOD_CD IN ( ${itemText} )
								#end
								#if ( ${reason} != '' )
									AND	A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
								#end
								#if ( ${sosend} != '' )
									AND	A.EXE_ISS_FLG = @[sosend]
								#end
								#if ( ${lane} != '' )
									AND	A.VSL_LANE_CD IN ( ${laneText} )
								#end
								#if ( ${vvd} != '' )
									AND	A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdText} )
								#end
								#if ( ${mty} != '' )
									AND	A.REPO_MTY_BKG_FLG = @[mty]
								#end
								) INNER
						WHERE	INNER.REPO_PLN_ID = OUTER.REPO_PLN_ID
							AND	INNER.REF_ID      = OUTER.REF_ID
							AND	INNER.PLN_YRWK    = OUTER.PLN_YRWK
						)
		GROUP BY PLN_YRWK
				,CO_CD
				,TRSP_MOD_CD
				,FM_YD_CD
				,FM_DT
				,TO_YD_CD
				,TO_DT
				,REF_ID
				,E.LOC_CD -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,F.LOC_CD -- SORT에 사용될 SCC의 해당 TO ECC 정보

		--lane & vvd 검색조건이 들어오면 on-off hire 조외하지 않음
	#if ( ${lane} == '' && ${vvd} == '' )
		-- 3. ON-HIRE & OFF-HIRE (W/O Issue)-----------
		UNION
		SELECT	 PLN_YRWK 		PLN_YRWK
				,CO_CD 			COMPANY
				,'W/O Issue' 		DIVISION
				,SO_IF_DIV_CD     ITEM
				,''     			LANE
				,''    			VVD
				,FM_YD_CD 		FRLOC
				,FM_DT 			ETD
				,TO_YD_CD 		TOLOC
				,TO_DT 			ETA
				,'' SOSEND
				,'' MTY
				,'' LSR
				,'' PURPOSE
				,'' REASON
				,'' REASONREMARK
				,COUNT(CNTR_TPSZ_CD) TOTALVOL
		#foreach ( $key in ${arrtpsz} )
			#if ( ${velocityCount} == 1 )
				,NVL(MAX(DECODE(CNTR_TPSZ_CD, '$key', REPO_COST_AMT)),0)
			#else
				+NVL(MAX(DECODE(CNTR_TPSZ_CD, '$key', REPO_COST_AMT)),0)
			#end
		#end
				TOTALCOST
			#foreach ( $key in ${arrtpsz} )
				,COUNT(DECODE(CNTR_TPSZ_CD, '$key', CNTR_TPSZ_CD))  ${key}VOL
				,MAX(DECODE(CNTR_TPSZ_CD,   '$key', REPO_COST_AMT)) ${key}COST
			#end
				,REF_ID REFNO
				,'' BKG_NO
				,3 SORTNUM	 	-- HIDDEN
				,B.LCC_CD FM_ECC  -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,C.LCC_CD TO_ECC  -- SORT에 사용될 SCC의 해당 TO ECC 정보
		FROM	 EQR_REPO_EXE_SO_IF OUTER
				,MDM_EQ_ORZ_CHT B
				,MDM_EQ_ORZ_CHT C
				,MDM_LOCATION E
				,MDM_LOCATION F
		WHERE	OUTER.WO_EXE_FLG = 'Y'
			AND	EXISTS	(
						SELECT	 INNER.REPO_PLN_ID
								,INNER.REF_ID
								,INNER.PLN_YRWK
						FROM	(
								SELECT	 A.REPO_PLN_ID
										,A.PLN_YRWK
										,A.REF_ID
										,A.ONF_HIR_DIV_CD
										,A.FM_ECC
										,A.TO_ECC
										,A.CO_CD
										,A.SO_ISS_FLG
										,A.NON_SO_ISS_FLG
										,A.REPO_PLN_FB_RSN_CD
								FROM	(
										SELECT	 A.REPO_PLN_ID
												,A.PLN_YRWK
												,A.REF_ID
												,A.CNTR_TPSZ_CD
												,A.CO_CD
												,A.ONF_HIR_DIV_CD
												,A.VNDR_CNT_CD
												,A.VNDR_SEQ
												,A.VNDR_ABBR_NM
												,A.FM_YD_CD
												,A.FM_LOC_DT
												,A.TO_YD_CD
												,A.TO_LOC_DT
												,A.REPO_PLN_FB_RSN_CD
												,A.REPO_PLN_FB_RMK
												,A.CNTR_QTY
												,A.ONF_HIR_COST_AMT
												,A.SO_RQST_DT
												,A.SO_ISS_FLG
												,A.NON_SO_ISS_FLG
												,B.LCC_CD FM_ECC
												,C.LCC_CD TO_ECC
										FROM	(
												SELECT	 A.REPO_PLN_ID
														,A.PLN_YRWK
														,A.REF_ID
														,A.CO_CD
														,A.ONF_HIR_DIV_CD
														,A.VNDR_CNT_CD
														,A.VNDR_SEQ
														,A.VNDR_ABBR_NM
														,A.FM_YD_CD
														,A.FM_LOC_DT
														,A.TO_YD_CD
														,A.TO_LOC_DT
														,A.REPO_PLN_FB_RSN_CD
														,A.REPO_PLN_FB_RMK
														,A.SO_RQST_DT
														,A.SO_ISS_FLG
														,A.NON_SO_ISS_FLG
														,QTY.CNTR_TPSZ_CD
														,QTY.CNTR_QTY
														,QTY.ONF_HIR_COST_AMT
												FROM	 EQR_ONF_HIR_EXE_PLN A
														,EQR_ONF_HIR_EXE_PLN_QTY QTY
												WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
													AND	A.PLN_YRWK		= QTY.PLN_YRWK
													AND	A.PLN_SEQ		= QTY.PLN_SEQ
													AND	A.REF_ID		= QTY.REF_ID
												) A
												,MDM_EQ_ORZ_CHT B
												,MDM_EQ_ORZ_CHT C
												,MDM_LOCATION E
												,MDM_LOCATION F
										WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = E.LOC_CD
										AND     E.SCC_CD                 = B.SCC_CD
										AND	SUBSTR(A.TO_YD_CD, 0, 5) = F.LOC_CD
										AND     F.SCC_CD                 = C.SCC_CD
										) A
										,EQR_ONF_HIR_PLN B
								WHERE	A.REPO_PLN_ID = B.REPO_PLN_ID
									AND	A.PLN_YRWK    = B.PLN_YRWK
									AND	A.ONF_HIR_DIV_CD = B.ONF_HIR_DIV_CD
									AND	(A.FM_ECC = B.ECC_CD OR A.TO_ECC = B.ECC_CD)
									AND	A.REPO_PLN_ID = @[repo_pln_id]
								#if ( ${fmtoat} == 3 )
									AND	A.FM_LOC_DT BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
														AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
								#elseif ( ${fmtoat} == 4 )
									AND	A.TO_LOC_DT BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
														AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
								#else
									AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
								#end
								#if ( ${userEcc} != ${userEcc} )
									AND (A.FM_ECC IN ( ${userEccText} ) OR A.TO_ECC IN ( ${userEccText} ))
								#end
								#if ( ( ${fmtoat} == 1 || ${fmtoat} == 3 || ${fmtoat} == 4 ) && ${fromstatus} != '' )
									AND (A.FM_ECC IN ( ${fromEccText} ) OR A.TO_ECC IN ( ${fromEccText} ))
								#end
								#if ( ${tpsz} != '' && ${tpsztype} != '')
									AND A.CNTR_TPSZ_CD IN ( ${tpszText} )
								#end
								#if ( ${itemText} != '' )
									AND B.ONF_HIR_DIV_CD IN ( ${itemText} )
								#end
								#if ( ${sosend} != '' )
									AND (A.SO_ISS_FLG = @[sosend] OR A.NON_SO_ISS_FLG= @[sosend] )
								#end
								#if ( ${reason} != '' )
									AND A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )
								#end
								#if ( ${mty} != '' )
									AND 1=0
								#end
								) INNER
						WHERE	INNER.REPO_PLN_ID = OUTER.REPO_PLN_ID 
							AND	INNER.REF_ID		= OUTER.REF_ID
							AND	INNER.PLN_YRWK 	= OUTER.PLN_YRWK
						)
					AND	SUBSTR(OUTER.FM_YD_CD, 0, 5) = E.LOC_CD
					AND     E.SCC_CD                 = B.SCC_CD
					AND SUBSTR(OUTER.TO_YD_CD, 0, 5) = F.LOC_CD
					AND     F.SCC_CD                 = C.SCC_CD
		GROUP BY OUTER.PLN_YRWK
				,OUTER.CO_CD
				,OUTER.SO_IF_DIV_CD
				,OUTER.FM_YD_CD
				,OUTER.FM_DT
				,OUTER.TO_YD_CD
				,OUTER.TO_DT
				,OUTER.REF_ID
				,B.LCC_CD    -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,C.LCC_CD    -- SORT에 사용될 SCC의 해당 TO ECC 정보
		-- 4. ECC INTERNAL       (W/O Issue)-----------
		UNION
		SELECT	 PLN_YRWK 		PLN_YRWK
				,CO_CD 			COMPANY
				,'W/O Issue' 	DIVISION
				,'S'      ITEM
				,''               LANE
				,''               VVD
				,FM_YD_CD 		FRLOC
				,FM_DT 			ETD
				,TO_YD_CD 		TOLOC
				,TO_DT 			ETA
				,'' SOSEND
				,'' MTY
				,'' LSR
				,'' PURPOSE
				,'' REASON
				,'' REASONREMARK
				,COUNT(CNTR_TPSZ_CD) TOTALVOL
		#foreach ( $key in ${arrtpsz} )
			#if ( ${velocityCount} == 1 )
				,NVL(MAX(DECODE(CNTR_TPSZ_CD, '$key', REPO_COST_AMT)),0)
			#else
				+NVL(MAX(DECODE(CNTR_TPSZ_CD, '$key', REPO_COST_AMT)),0)
			#end
		#end
				TOTALCOST
			#foreach ( $key in ${arrtpsz} )
				,COUNT(DECODE(CNTR_TPSZ_CD, '$key', CNTR_TPSZ_CD))  ${key}VOL
				,MAX(DECODE(CNTR_TPSZ_CD,   '$key', REPO_COST_AMT)) ${key}COST
			#end 
				,REF_ID REFNO
				,'' BKG_NO
				,3 SORTNUM	 	-- HIDDEN
				,B.LCC_CD FM_ECC  -- SORT에 사용될 SCC의 해당 FM ECC 정보
				,C.LCC_CD TO_ECC  -- SORT에 사용될 SCC의 해당 TO ECC 정보
		FROM	 EQR_REPO_EXE_SO_IF OUTER
				,MDM_EQ_ORZ_CHT B
				,MDM_EQ_ORZ_CHT C
				,MDM_LOCATION E
				,MDM_LOCATION F
		WHERE	SUBSTR(OUTER.FM_YD_CD, 0, 5) = E.LOC_CD
		AND     E.SCC_CD                 = B.SCC_CD
			AND	SUBSTR(OUTER.TO_YD_CD, 0, 5) = F.LOC_CD
			AND     F.SCC_CD                 = C.SCC_CD
			AND	OUTER.WO_EXE_FLG = 'Y'
			AND	EXISTS	(
						SELECT	 REPO_PLN_ID
								,REF_ID
								,PLN_YRWK
						FROM	(
								SELECT	 A.REPO_PLN_ID
										,A.PLN_YRWK
										,A.REF_ID
										,A.CNTR_TPSZ_CD
										,A.CO_CD
										,DECODE(A.TRSP_MOD_CD, 'T', 'S', 'W', 'S', 'R', 'S') TRSP_MOD_CD
										,A.FM_YD_CD
										,A.FM_ETD_DT
										,A.TO_YD_CD
										,A.TO_ETA_DT
										,A.EQ_REPO_PURP_CD
										,A.CNTR_QTY
										,A.TRSP_COST_AMT
										,A.EXE_RQST_DT
										,A.EXE_ISS_FLG
								FROM	(
										SELECT	 A.REPO_PLN_ID
												,A.PLN_YRWK
												,A.REF_ID
												,A.CO_CD
												,A.TRSP_MOD_CD
												,A.FM_YD_CD
												,A.FM_ETD_DT
												,A.TO_YD_CD
												,A.TO_ETA_DT
												,A.EQ_REPO_PURP_CD
												,A.EXE_ISS_FLG
												,QTY.CNTR_TPSZ_CD
												,QTY.CNTR_QTY
												,QTY.TRSP_COST_AMT
												,QTY.EXE_RQST_DT
										FROM	 EQR_ECC_INTER_EXE_PLN A
												,EQR_ECC_INTER_EXE_PLN_QTY QTY
										WHERE	A.REPO_PLN_ID	= QTY.REPO_PLN_ID
											AND	A.PLN_YRWK		= QTY.PLN_YRWK
											AND	A.REF_ID		= QTY.REF_ID
										) A
								WHERE	A.REPO_PLN_ID = @[repo_pln_id]
								#if ( ${userEcc} != ${userEcc} )
									AND (SUBSTR(A.FM_YD_CD, 0, 5) IN (SELECT LOC_CD FROM MDM_EQ_ORZ_CHT CT, MDM_LOCATION ML WHERE  CT.SCC_CD = ML.SCC_CD AND ECC_CD IN ( ${userEccText} ))
										OR SUBSTR(A.TO_YD_CD, 0, 5) IN (SELECT LOC_CD FROM MDM_EQ_ORZ_CHT CT, MDM_LOCATION ML WHERE  CT.SCC_CD = ML.SCC_CD AND ECC_CD IN ( ${userEccText} )))
								#end
							#if ( ${fmtoat} == 1 )
									AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk]
								#if ( ${fromstatus} != '' )
									AND SUBSTR(A.FM_YD_CD, 0, 5) IN (SELECT LOC_CD FROM MDM_EQ_ORZ_CHT CT, MDM_LOCATION ML WHERE  CT.SCC_CD = ML.SCC_CD AND ECC_CD IN ( ${fromEccText} ))
								#end
								#if ( ${tostatus} != '' )
									AND SUBSTR(A.TO_YD_CD, 0, 5) IN (SELECT LOC_CD FROM MDM_EQ_ORZ_CHT CT, MDM_LOCATION ML WHERE  CT.SCC_CD = ML.SCC_CD AND ECC_CD IN ( ${toEccText} ))
								#end
							#elseif ( ${fmtoat} == 3 )
									AND	TO_CHAR(A.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
																			AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])
								#if ( ${fromstatus} != '' )
									AND SUBSTR(A.FM_YD_CD, 0, 5) IN (SELECT LOC_CD FROM MDM_EQ_ORZ_CHT CT, MDM_LOCATION ML WHERE  CT.SCC_CD = ML.SCC_CD AND ECC_CD IN ( ${fromEccText} ))
								#end
								#if ( ${tostatus} != '' )
									 AND SUBSTR(A.TO_YD_CD, 0, 5) IN (SELECT LOC_CD FROM MDM_EQ_ORZ_CHT CT, MDM_LOCATION ML WHERE  CT.SCC_CD = ML.SCC_CD AND ECC_CD IN ( ${toEccText} ))
								#end
							#elseif ( ${fmtoat} == 4 )
								AND	TO_CHAR(A.TO_ETA_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])
																		AND (SELECT WK_END_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK =@[to_plnyrwk] )
								#if ( ${fromstatus} != '' )
									AND SUBSTR(A.FM_YD_CD, 0, 5) IN (SELECT LOC_CD FROM MDM_EQ_ORZ_CHT CT, MDM_LOCATION ML WHERE  CT.SCC_CD = ML.SCC_CD AND ECC_CD IN ( ${fromEccText} ))
								#end
								#if ( ${tostatus} != '' )
									 AND SUBSTR(A.TO_YD_CD, 0, 5) IN (SELECT LOC_CD FROM MDM_EQ_ORZ_CHT CT, MDM_LOCATION ML WHERE  CT.SCC_CD = ML.SCC_CD AND ECC_CD IN ( ${toEccText} ))
								#end
							#else
								#if ( ${atstatus} != '' )
									AND	(	(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] AND SUBSTR(A.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} )))
										OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] 
											AND SUBSTR(A.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} )))
										)
								#else
									AND	(	(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
										OR	((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND  @[to_plnyrwk] )
										)
								#end
							#end
								#if ( ${tpsz} != '' && ${tpsz} != '' )
									AND	A.CNTR_TPSZ_CD IN ( ${tpszText} )
								#end
								#if ( ${itemText} != '' )
									AND	DECODE(A.TRSP_MOD_CD, 'T', 'S', 'W', 'S', 'R', 'S') IN ( ${itemText} )
								#end
								#if ( ${sosend} != '' )
									AND	A.EXE_ISS_FLG = @[sosend]
								#end
								#if ( ${mty} != '' )
									AND	1 = 0
								#end
								) INNER
						WHERE	INNER.REPO_PLN_ID = OUTER.REPO_PLN_ID
							AND	INNER.REF_ID      = OUTER.REF_ID
							AND	INNER.PLN_YRWK    = OUTER.PLN_YRWK
						)
				GROUP BY PLN_YRWK
						,CO_CD
						,FM_YD_CD
						,FM_DT
						,TO_YD_CD
						,TO_DT
						,REF_ID
						,B.LCC_CD
						,C.LCC_CD
	#end
				) A,
				(
				SELECT 1 NUM, '' NAME		FROM DUAL	UNION
				SELECT 2 NUM, 'TOTAL' NAME	FROM DUAL	UNION
				SELECT 3 NUM, 'GRAND TOTAL' NAME FROM DUAL
				) B
		GROUP BY DECODE(B.NUM, 1, A.PLN_YRWK, 2, A.PLN_YRWK||' TTL', 3, 'TOTAL')
				,DECODE(B.NUM, 1, A.COMPANY,  2, '', 3, '')
				,A.DIVISION
				,DECODE(B.NUM, 1, A.ITEM ,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.LANE ,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.VVD  ,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.FRLOC,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.ETD  ,  2, NULL, 3, NULL)
				,DECODE(B.NUM, 1, A.TOLOC,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.ETA  ,  2, NULL, 3, NULL)
				,DECODE(B.NUM, 1, A.SOSEND  ,  2, NULL, 3, NULL)
				,DECODE(B.NUM, 1, A.MTY,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.LSR,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.PURPOSE,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.REASON,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.REASONREMARK,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.REF_ID,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.BKG_NO,  2, '', 3, '')
				,A.SORTNUM    	    -- HIDDEN
				,B.NUM         		-- HIDDEN
				,DECODE(B.NUM, 1, A.FM_ECC,  2, '', 3, '')
				,DECODE(B.NUM, 1, A.TO_ECC,  2, '', 3, '')
		)
GROUP BY PLN_YRWK
		,COMPANY
		,DIVISION
		,ITEM
		,LANE
		,VVD
		,FRLOC
		,ETD
		,TOLOC
		,ETA
		,SOSEND
		,MTY
		,LSR
		,PURPOSE
		,REASON
		,REASONREMARK
		,REF_ID
		,BKG_NO
		,SORTNUM    	-- HIDDEN
		,NUM        	-- HIDDEN
		,FM_ECC||TO_ECC
		ORDER BY 1, ITEM DESC, FM_ECC||TO_ECC, REF_ID||SORTNUM			]]></sql>
			<params>
				<param name="repo_pln_id" type="12" value="" out="N"/>
				<param name="fm_plnyrwk" type="12" value="" out="N"/>
				<param name="to_plnyrwk" type="12" value="" out="N"/>
				<param name="mty" type="12" value="" out="N"/>
				<param name="sosend" type="12" value="" out="N"/>
				<param name="FM_PLNYRWK" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
