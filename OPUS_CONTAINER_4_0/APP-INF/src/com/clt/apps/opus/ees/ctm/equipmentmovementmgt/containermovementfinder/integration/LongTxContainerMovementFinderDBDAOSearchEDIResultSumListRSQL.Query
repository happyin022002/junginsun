<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="LongTxContainerMovementFinderDBDAOSearchEDIResultSumListRSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
SELECT   RCC
         ,CN
         ,LCC
         ,LOC
         ,YARD
         ,SUM (TTL_CNT) - SUM (INIT_OK_CNT) - SUM (INIT_IGNR_CNT) AS INT_ERR
         ,CASE WHEN SUM (TTL_CNT) = 0 THEN 0 ELSE ROUND ((SUM (TTL_CNT) - SUM (INIT_OK_CNT) - SUM (INIT_IGNR_CNT)) / SUM (TTL_CNT) * 100, 1) END AS INT_ERR_RATIO
         ,SUM (INIT_IGNR_CNT) AS INT_IGNR
         ,CASE WHEN SUM (TTL_CNT) = 0 THEN 0 ELSE ROUND (SUM (INIT_IGNR_CNT) / SUM (TTL_CNT) * 100, 1) END AS INT_IGNR_RATIO
         ,SUM (INIT_OK_CNT) AS INT_OK
         ,CASE WHEN SUM (TTL_CNT) = 0 THEN 0 ELSE ROUND (SUM (INIT_OK_CNT) / SUM (TTL_CNT) * 100, 1) END AS INT_OK_RATIO
         ,SUM (TTL_CNT) AS INT_TTL
#if (${gap_radio} == '12')
         ,SUM (GAP_12) AS EDI_12H
         ,CASE WHEN SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND (SUM (GAP_12) / SUM (INIT_OK_CNT) * 100, 1) END AS EDI_12H_RATIO
         ,(SUM (GAP_24) + SUM (GAP_48) + SUM (GAP_OVER)) AS EDI_OVER
         ,CASE WHEN SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND ((SUM (GAP_24) + SUM (GAP_48) + SUM (GAP_OVER)) / SUM (INIT_OK_CNT) * 100, 1) END AS EDI_OVER_RATIO
#elseif (${gap_radio} == '24')
         ,(SUM (GAP_12) + SUM (GAP_24)) AS EDI_24H
         ,CASE WHEN SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND ((SUM (GAP_12) + SUM (GAP_24)) / SUM (INIT_OK_CNT) * 100, 1) END AS EDI_24H_RATIO
         ,(SUM (GAP_48) + SUM (GAP_OVER)) AS EDI_OVER
         ,CASE WHEN SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND ((SUM (GAP_48) + SUM (GAP_OVER)) / SUM (INIT_OK_CNT) * 100, 1) END AS EDI_OVER_RATIO
#elseif (${gap_radio} == '48')
         ,(SUM (GAP_12) + SUM (GAP_24) + SUM (GAP_48)) AS EDI_48H
         ,CASE WHEN SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND ((SUM (GAP_12) + SUM (GAP_24) + SUM (GAP_48)) / SUM (INIT_OK_CNT) * 100, 1) END AS EDI_48H_RATIO
         ,SUM (GAP_OVER) AS EDI_OVER
         ,CASE WHEN SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND (SUM (GAP_OVER) / SUM (INIT_OK_CNT) * 100, 1) END AS EDI_OVER_RATIO
#else
         ,SUM (GAP_12) AS EDI_12H
         ,CASE WHEN SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND (SUM (GAP_12) / SUM (INIT_OK_CNT) * 100, 1) END AS EDI_12H_RATIO
         ,SUM (GAP_24) AS EDI_24H
         ,CASE WHEN SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND (SUM (GAP_24) / SUM (INIT_OK_CNT) * 100, 1) END AS EDI_24H_RATIO
         ,SUM (GAP_48) AS EDI_48H
         ,CASE WHEN SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND (SUM (GAP_48) / SUM (INIT_OK_CNT) * 100, 1) END AS EDI_48H_RATIO
         ,SUM (GAP_OVER) AS EDI_OVER
         ,CASE WHEN SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND (SUM (GAP_OVER) / SUM (INIT_OK_CNT) * 100, 1) END AS EDI_OVER_RATIO
#end
         ,SUM (INIT_OK_CNT) AS EDI_TTL
         ,@[p_date1] AS P_DATE1
         ,@[p_date2] AS P_DATE2
         ,@[gap_radio] AS GAP_RADIO
    FROM (SELECT /*+ ORDERED USE_NL(MSG ML ME) */
                 ME.RCC_CD AS RCC
                 ,SUBSTR (EVNT_YD_CD, 1, 2) AS CN
                 ,ME.LCC_CD AS LCC
                 ,SUBSTR (EVNT_YD_CD, 1, 5) AS LOC
                 ,EVNT_YD_CD AS YARD
                 ,INIT_OK_CNT
                 ,INIT_IGNR_CNT
                 ,TTL_CNT
                 ,GAP_12
                 ,GAP_24
                 ,GAP_48
                 ,GAP_OVER
            FROM (
                  SELECT EVNT_YD_CD
                     	 ,SUM(INIT_OK_CNT) AS INIT_OK_CNT
 	                     ,SUM(INIT_IGNR_CNT) AS INIT_IGNR_CNT
    	                 ,SUM(TTL_CNT) AS TTL_CNT
        	             ,SUM(CASE WHEN OFFSET_DT <= 0.5 THEN CNT ELSE 0 END) AS GAP_12
            	         ,SUM(CASE WHEN OFFSET_DT > 0.5 AND OFFSET_DT <= 1 THEN CNT ELSE 0 END) AS GAP_24
                	     ,SUM(CASE WHEN OFFSET_DT > 1 AND OFFSET_DT <= 2 THEN CNT ELSE 0 END) AS GAP_48
                    	 ,SUM(CASE WHEN OFFSET_DT > 2 THEN CNT ELSE 0 END) AS GAP_OVER
                	FROM 
                     	 --CTM_MVMT_EDI_MSG,
                    	 (SELECT MSG.EVNT_YD_CD
                         	     ,CASE WHEN RMK.MVMT_EDI_RSLT_CD = 'Y' THEN CEIL(ROUND((MSG.CRE_LOCL_DT - MSG.EVNT_DT),2)*10)/10 END AS OFFSET_DT
	                             ,COUNT(CASE WHEN RMK.MVMT_EDI_RSLT_CD = 'Y' THEN 1 END) AS INIT_OK_CNT
     	                         ,COUNT(CASE WHEN RMK.MVMT_EDI_RSLT_CD IN ('X','I') THEN 1 END) AS INIT_IGNR_CNT
          	                     ,COUNT(CASE WHEN (MSG.RTY_KNT = MSG.RTY_KNT) THEN 1 END) AS TTL_CNT
               		             ,COUNT(*) CNT
                     		FROM CTM_MVMT_EDI_MSG MSG, CTM_EDI_RSLT_RMK RMK
		                   WHERE MSG.MVMT_EDI_TP_CD = RMK.MVMT_EDI_TP_CD
        		             AND MSG.MVMT_EDI_MSG_TP_ID = RMK.MVMT_EDI_MSG_TP_ID
                		     AND MSG.MVMT_EDI_MSG_AREA_CD = RMK.MVMT_EDI_MSG_AREA_CD
                     		 AND MSG.MVMT_EDI_MSG_YRMONDY = RMK.MVMT_EDI_MSG_YRMONDY
		                     AND MSG.MVMT_EDI_MSG_SEQ = RMK.MVMT_EDI_MSG_SEQ
        		             AND RMK.RTY_KNT = 0
                		     AND MSG.IDX_CRE_LOCL_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '')
#if (${rcc_cd} == '' || ${rcc_cd} == 'ALL')
                     		 AND MSG.MVMT_EDI_MSG_AREA_CD IN ('USA', 'SWA', 'KOR', 'EUR', 'CHN')
#else
		                     AND MSG.MVMT_EDI_MSG_AREA_CD = (SELECT SYS_AREA_GRP_ID AS SVR_ID
        		                                               FROM COM_SYS_AREA_GRP_ID
                		                                      WHERE CNT_CD = SUBSTR (@[rcc_cd], 0, 2)
                        		                                AND SUBSTR (SYS_AREA_GRP_ID, 0, 1) != 'D')
#end
#if (${p_yard2} != '')
                     		 AND MSG.EVNT_YD_CD = @[p_yard1]||@[p_yard2]
#elseif (${p_yard1} != '')
		                     AND MSG.EVNT_YD_CD LIKE @[p_yard1]||'%'
#end
                 		   GROUP BY MSG.EVNT_YD_CD, CASE WHEN RMK.MVMT_EDI_RSLT_CD = 'Y' THEN CEIL(ROUND((MSG.CRE_LOCL_DT - MSG.EVNT_DT),2)*10)/10 END
                     	 ) 
                   GROUP BY EVNT_YD_CD
                 ) MSG
                 ,MDM_LOCATION ML
                 ,MDM_EQ_ORZ_CHT ME
           WHERE 1=1
#if (${rcc_cd} != '' && ${rcc_cd} != 'ALL')
             AND ME.RCC_CD = @[rcc_cd]
#end
#if (${lcc_cd} != '')
             AND ME.LCC_CD = @[lcc_cd]
#end
             AND ME.SCC_CD(+) = ML.SCC_CD
             AND ML.LOC_CD(+) = SUBSTR (EVNT_YD_CD, 0, 5)
/*             AND MVMT_EDI_RMK = DECODE (MVMT_EDI_RSLT_CD, 'Y', 'OK.PROCESSED', MVMT_EDI_RMK)*/
         )
   GROUP BY RCC, CN, LCC, LOC, YARD
#if (${rcc_cd} != '' && ${rcc_cd} != 'ALL')
  HAVING RCC IN @[rcc_cd]
#end
   ORDER BY RCC, CN, LCC, LOC, YARD			]]></sql>
			<params>
				<param name="p_date1" type="12" value="" out="N"/>
				<param name="p_date2" type="12" value="" out="N"/>
				<param name="gap_radio" type="12" value="" out="N"/>
				<param name="rcc_cd" type="12" value="" out="N"/>
				<param name="p_yard1" type="12" value="" out="N"/>
				<param name="p_yard2" type="12" value="" out="N"/>
				<param name="lcc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
