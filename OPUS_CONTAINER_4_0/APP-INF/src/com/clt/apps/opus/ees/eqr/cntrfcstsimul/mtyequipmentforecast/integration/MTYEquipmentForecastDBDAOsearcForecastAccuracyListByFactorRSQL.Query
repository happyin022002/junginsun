<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MTYEquipmentForecastDBDAOsearcForecastAccuracyListByFactorRSQL">
			<desc><![CDATA[MTY Balance Report의 In&Out Bound FCST Data의 정확도를 FACTOR별로 조회

2011.06.13 나상보 [CHM-201111555-01] [EQR] R9 코드 생성에 따른 EQR 모듈 보완 작업 
2013-01-21  CHM-201322369, Location 검색조건 추가,  수석]]></desc>
			<sql><![CDATA[
WITH LV_QTY_LIST AS
(
SELECT A.BOUND
      ,GROUPING(A.LOC_CD)||GROUPING(A.YRWK)||GROUPING(A.BOUND) GLOC_CD
      ,DECODE(GROUPING(A.YRWK),0,A.YRWK,'999999') YRWK
      ,DECODE(GROUPING(A.LOC_CD),0,A.LOC_CD,'ZZZZ9') LOC_CD
      ,A.DP_SEQ
      ,SUM(DECODE(A.DP_SEQ,3,A.TOT_ABS_QTY,A.TOT_QTY)) TOT_QTY
      ,SUM(A.TOT_ABS_QTY) TOT_ABS_QTY
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.D2_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.D2_QTY)),SUM(A.D2_QTY))) D2_QTY   
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.D4_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.D4_QTY)),SUM(A.D4_QTY))) D4_QTY   
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.D5_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.D5_QTY)),SUM(A.D5_QTY))) D5_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.D7_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.D7_QTY)),SUM(A.D7_QTY))) D7_QTY       

      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.R2_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.R2_QTY)),SUM(A.R2_QTY))) R2_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.R5_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.R5_QTY)),SUM(A.R5_QTY))) R5_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.R9_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.R9_QTY)),SUM(A.R9_QTY))) R9_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.O2_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.O2_QTY)),SUM(A.O2_QTY))) O2_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.O4_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.O4_QTY)),SUM(A.O4_QTY))) O4_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.S2_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.S2_QTY)),SUM(A.S2_QTY))) S2_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.S4_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.S4_QTY)),SUM(A.S4_QTY))) S4_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.F2_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.F2_QTY)),SUM(A.F2_QTY))) F2_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.F4_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.F4_QTY)),SUM(A.F4_QTY))) F4_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.F5_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.F5_QTY)),SUM(A.F5_QTY))) F5_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.A2_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.A2_QTY)),SUM(A.A2_QTY))) A2_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.A4_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.A4_QTY)),SUM(A.A4_QTY))) A4_QTY       
      ,DECODE(GROUPING(A.LOC_CD),1,SUM(ABS(A.O5_QTY)),DECODE(GROUPING(A.YRWK),1,SUM(ABS(A.O5_QTY)),SUM(A.O5_QTY))) O5_QTY       

      ,GROUPING(A.YRWK)||GROUPING(A.LOC_CD)      
FROM
    (
    SELECT  
              A.BOUND
             ,A.YRWK
             ,A.LOC_CD
             ,A.DP_SEQ
             ,SUM(A.CNTR_QTY) TOT_QTY
             ,SUM(ABS(A.CNTR_QTY)) TOT_ABS_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',A.CNTR_QTY,0)) D2_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',A.CNTR_QTY,0)) D4_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',A.CNTR_QTY,0)) D5_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',A.CNTR_QTY,0)) D7_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',A.CNTR_QTY,0)) R2_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',A.CNTR_QTY,0)) R5_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',A.CNTR_QTY,0)) R9_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',A.CNTR_QTY,0)) O2_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',A.CNTR_QTY,0)) S2_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',A.CNTR_QTY,0)) O4_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',A.CNTR_QTY,0)) S4_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',A.CNTR_QTY,0)) F2_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',A.CNTR_QTY,0)) A2_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',A.CNTR_QTY,0)) F4_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',A.CNTR_QTY,0)) A4_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',A.CNTR_QTY,0)) F5_QTY
             ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',A.CNTR_QTY,0)) O5_QTY
    FROM
        (
        SELECT  
                A.BOUND
               ,A.YRWK
               ,A.LOC_CD
               ,A.CNTR_TPSZ_CD
               ,B.DP_SEQ
               ,DECODE(B.DP_SEQ,1,A.FCAST_CNTR_QTY,2,A.PFMC_CNTR_QTY,3,A.DIFF_VOL,4,A.DIFF_RAT) CNTR_QTY
        FROM
            (
            SELECT  
                    A.BOUND
                   ,A.YRWK
                   ,A.LOC_CD
                   ,A.CNTR_TPSZ_CD
                   ,A.FCAST_CNTR_QTY
                   ,A.PFMC_CNTR_QTY
                   ,(A.FCAST_CNTR_QTY-A.PFMC_CNTR_QTY) DIFF_VOL
                   ,DECODE(A.FCAST_CNTR_QTY,0,100,((A.FCAST_CNTR_QTY-A.PFMC_CNTR_QTY)/A.FCAST_CNTR_QTY)*100) DIFF_RAT
            FROM 
                (
                SELECT  
                        A.BOUND
                       ,A.YRWK
                       ,A.LOC_CD
                       ,A.CNTR_TPSZ_CD
                       ,SUM(DECODE(A.SRC_CD,'F',A.CNTR_QTY,0)) FCAST_CNTR_QTY
                       ,SUM(DECODE(A.SRC_CD,'P',A.CNTR_QTY,0)) PFMC_CNTR_QTY
                FROM
                    (
                    SELECT  DECODE(A.MTY_BAL_TP_CD,'1','MG','OP') BOUND
                            ,A.YRWK
                            ,A.LOC_CD
                            ,'F' SRC_CD
                            ,A.CNTR_TPSZ_CD
                            ,SUM(NVL(A.CNTR_QTY,0)) CNTR_QTY
                    FROM
                        (
                         SELECT 
                               A.MTY_BAL_TP_CD
                              ,A.FCAST_YRWK YRWK

						 #if (${div_flag} == '1' )
							#if (${loc_tp_cd} == 'R' )
            		   		  ,B.LCC_CD LOC_CD
							#elseif (${loc_tp_cd} == 'L')
                              ,B.ECC_CD LOC_CD
							#elseif (${loc_tp_cd} == 'E')
                              ,B.SCC_CD LOC_CD
							#elseif (${loc_tp_cd} == 'S')
                              ,B.SCC_CD LOC_CD
							#end

						 #else
							#if (${loc_tp_cd_second} == 'L')
                              ,B.LCC_CD LOC_CD
							#elseif (${loc_tp_cd_second} == 'E')
                              ,B.ECC_CD LOC_CD
							#elseif (${loc_tp_cd_second} == 'S')
                              ,B.SCC_CD LOC_CD
							#end
                         #end

                              ,DECODE(C.DP_SEQ,1,'D2',2,'D4',3,'D5',4,'D7',5,'R2',6,'R5',7,'R9',8,'O2',9,'S2',10,'O4',11,'S4',12,'F2',13,'A2',14,'F4',15,'A4',16,'F5',17,'O5') CNTR_TPSZ_CD
                              ,SUM(DECODE(C.DP_SEQ, 1,D2_FCAST_QTY,
                                                2,D4_FCAST_QTY,
                                                3,D5_FCAST_QTY,
                                                4,D7_FCAST_QTY,
                                                5,R2_FCAST_QTY,
                                                6,R5_FCAST_QTY,
                                                7,R9_FCAST_QTY,
                                                8,O2_FCAST_QTY,
                                                9,S2_FCAST_QTY,
                                                10,O4_FCAST_QTY,
                                                11,S4_FCAST_QTY,
                                                12,F2_FCAST_QTY,
                                                13,A2_FCAST_QTY,
                                                14,F4_FCAST_QTY,
                                                15,A4_FCAST_QTY,
                                                16,F5_FCAST_QTY,
                                                17,O5_FCAST_QTY,0))  CNTR_QTY                   
                        FROM 
							(
							SELECT
							    (SELECT /*+INDEX_DESC(W XPKEQR_WK_PRD) */
							        W.PLN_YR||PLN_WK
							    FROM EQR_WK_PRD W
							    WHERE @[fm_week] > W.PLN_YR||PLN_WK
							    AND   ROWNUM = 1
							    ) FM_INP_WEEK
							    ,(SELECT /*+INDEX_DESC(W XPKEQR_WK_PRD) */
							        W.PLN_YR||PLN_WK
							    FROM EQR_WK_PRD W
							    WHERE @[to_week] > W.PLN_YR||PLN_WK
							    AND   ROWNUM = 1
							    ) TO_INP_WEEK
							FROM DUAL    
							) W
                           ,EQR_CTRL_MTY_BAL_RPT A
                           ,(

                          #if (${div_flag} == '1' )
                            #if (${loc_tp_cd} == 'R' )
                               SELECT DISTINCT LCC_CD, RCC_CD 
                            #elseif (${loc_tp_cd} == 'L')
                               SELECT DISTINCT ECC_CD, LCC_CD 
                            #elseif (${loc_tp_cd} == 'E')
                               SELECT DISTINCT SCC_CD, ECC_CD 
                            #else --S(LCC 조건으로 SCC 표현)
                               SELECT DISTINCT SCC_CD, LCC_CD 
                            #end

						  #else
                            #if (${loc_tp_cd_second} == 'L')
                               SELECT DISTINCT LCC_CD 
                            #elseif (${loc_tp_cd_second} == 'E')
                               SELECT DISTINCT ECC_CD 
                            #else --S(LCC 조건으로 SCC 표현)
                               SELECT DISTINCT SCC_CD 
                            #end
                          #end

                               FROM MDM_EQ_ORZ_CHT 
                               WHERE NVL(DELT_FLG, 'N') = 'N'
                            )  B 
                           ,(SELECT LEVEL DP_SEQ FROM DUAL CONNECT BY LEVEL <= 16) C 
                        WHERE A.CO_CD ='H'

                  #if (${div_flag} == '1' )
					#if (${loc_tp_cd} == 'R' )
						AND   A.LOC_GRP_CD = 'L' 
					#elseif (${loc_tp_cd} == 'L')
						AND   A.LOC_GRP_CD = 'E' 
					#elseif (${loc_tp_cd} == 'E')
						AND   A.LOC_GRP_CD = 'S' 
					#else --S(LCC 조건으로 SCC 표현)
						AND   A.LOC_GRP_CD = 'S' 
					#end

				  #else
					#if (${loc_tp_cd_second} == 'L')
						AND   A.LOC_GRP_CD = 'L' 
					#elseif (${loc_tp_cd_second} == 'E')
						AND   A.LOC_GRP_CD = 'E' 
					#else --S(LCC 조건으로 SCC 표현)
						AND   A.LOC_GRP_CD = 'S' 
					#end
                  #end

                        AND   A.INP_YRWK  BETWEEN W.FM_INP_WEEK AND W.TO_INP_WEEK
                        -- 각INP_YRWK당 첫번째 FCAST_YRWK 주차만 수집
                        AND   A.FCAST_YRWK = (
                                                 SELECT W.PLN_YR||PLN_WK
                                                 FROM EQR_WK_PRD W
                                                 WHERE A.INP_YRWK <  W.PLN_YR||PLN_WK
                                                 AND   ROWNUM =1
                                             )
						#if (${bound} == 'A' )
	                        AND   A.MTY_BAL_TP_CD IN('1','3')   
						#else
							AND   DECODE(@[bound],'I','1','O','3') =  A.MTY_BAL_TP_CD      
						#end

                  #if (${div_flag} == '1' )
                    #if (${loc_tp_cd} == 'E' )
                    	AND   A.LOC_CD  = B.SCC_CD
                        AND   @[loc_cd] = B.ECC_CD
                   	#elseif (${loc_tp_cd} == 'L' )
                    	AND   A.LOC_CD  = B.ECC_CD
                       	AND   @[loc_cd] = B.LCC_CD
                   	#elseif (${loc_tp_cd} == 'R' )
                    	AND   A.LOC_CD  = B.LCC_CD
                        AND   @[loc_cd] = B.RCC_CD
                   	#elseif (${loc_tp_cd} == 'S' )  --S(LCC 조건으로 SCC 표현)
                    	AND   A.LOC_CD  = B.SCC_CD
                        AND   @[loc_cd] = B.LCC_CD
                   	#end
           
					#if (${loc_tp_cd} == 'R' )
	                        GROUP BY A.MTY_BAL_TP_CD,B.LCC_CD,C.DP_SEQ,A.FCAST_YRWK
                   	#elseif (${loc_tp_cd} == 'L' )
	                        GROUP BY A.MTY_BAL_TP_CD,B.ECC_CD,C.DP_SEQ,A.FCAST_YRWK
					#elseif (${loc_tp_cd} == 'E' )
	                        GROUP BY A.MTY_BAL_TP_CD,B.SCC_CD,C.DP_SEQ,A.FCAST_YRWK
					#elseif (${loc_tp_cd} == 'S' ) --S(LCC 조건으로 SCC 표현)
	                        GROUP BY A.MTY_BAL_TP_CD,B.SCC_CD,C.DP_SEQ,A.FCAST_YRWK
					#end

				  #else
                    #if (${loc_tp_cd_second} == 'L' )
                    	AND   A.LOC_CD         = B.LCC_CD
                       	AND   @[loc_cd_second] = B.LCC_CD
                   	#elseif (${loc_tp_cd_second} == 'E' )
                    	AND   A.LOC_CD         = B.ECC_CD
                        AND   @[loc_cd_second] = B.ECC_CD
                   	#elseif (${loc_tp_cd_second} == 'S' )  --S(LCC 조건으로 SCC 표현)
                    	AND   A.LOC_CD         = B.SCC_CD
                        AND   @[loc_cd_second] = B.SCC_CD
                   	#end
           
					#if (${loc_tp_cd_second} == 'L' )
	                        GROUP BY A.MTY_BAL_TP_CD,B.LCC_CD,C.DP_SEQ,A.FCAST_YRWK
					#elseif (${loc_tp_cd_second} == 'E' )
	                        GROUP BY A.MTY_BAL_TP_CD,B.ECC_CD,C.DP_SEQ,A.FCAST_YRWK
					#elseif (${loc_tp_cd_second} == 'S' ) --S(LCC 조건으로 SCC 표현)
	                        GROUP BY A.MTY_BAL_TP_CD,B.SCC_CD,C.DP_SEQ,A.FCAST_YRWK
					#end
                  #end

                        ) A
					#if ( ${tpszText} != '' )
					WHERE  A.CNTR_TPSZ_CD IN( ${tpszText} )
					#else
                    WHERE  A.CNTR_TPSZ_CD IN('D2','D4','D5','D7','R2','R5','R9','O2','S2','O4','S4','F2','A2','F4','A4','F5','O5')
					#end
                    GROUP BY DECODE(A.MTY_BAL_TP_CD,'1','MG','OP'),A.YRWK,A.LOC_CD,A.CNTR_TPSZ_CD
                    UNION ALL
                    SELECT  A.BOUND
                           ,A.YRWK
                           ,A.LOC_CD
                           ,'P' SRC_CD
                           ,A.CNTR_TPSZ_CD
                           ,A.CNTR_QTY
                    FROM 
                        (
                            SELECT   DECODE(B.DP_SEQ,1,'OP','MG') BOUND
                                     ,A.YRWK
                                     ,A.LOC_CD
                                     ,A.CNTR_TPSZ_CD
                                     ,DECODE(B.DP_SEQ,1,OB_QTY,IB_QTY) CNTR_QTY 
                            FROM
                                (
						#if (${bound} == 'A' || ${bound} == 'O')
								        SELECT 	E.PLN_YR||E.PLN_WK YRWK,
                                        		M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ,

										#if (${div_flag} == '1' )
											#if (${loc_tp_cd}=='R' )
	                    						G.LCC_CD                LOC_CD,
                                            #elseif (${loc_tp_cd}=='L' )
                                                G.ECC_CD                LOC_CD,
											#elseif (${loc_tp_cd}=='E' )
                            	            	G.SCC_CD                LOC_CD,
											#elseif (${loc_tp_cd}=='S' ) --S(LCC 조건으로 SCC 표현)
                            	            	G.SCC_CD                LOC_CD,
											#end

										#else
											#if (${loc_tp_cd_second}=='L' )
                                                G.LCC_CD                LOC_CD,
											#elseif (${loc_tp_cd_second}=='E' )
                            	            	G.ECC_CD                LOC_CD,
											#elseif (${loc_tp_cd_second}=='S' ) --S(LCC 조건으로 SCC 표현)
                            	            	G.SCC_CD                LOC_CD,
											#end
										#end
                                        		COUNT(*) OB_QTY         ,
												0 IB_QTY 
                                          FROM 	CTM_MOVEMENT	     M,
                                               	MST_CONTAINER        C,
                                               	MDM_EQ_ORZ_CHT G,
                                                MDM_LOCATION L,
                                                MDM_YARD Y,
												EQR_WK_PRD E
                                         WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
                                        				SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
                                        				FROM   EQR_WK_PRD K
                                        				WHERE  K.PLN_YR = SUBSTR(@[fm_week],1,4)
                                        				AND    K.PLN_WK = SUBSTR(@[fm_week],5)
                                        				)	
                                           AND				( 
                                        				 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
                                        				 FROM   EQR_WK_PRD K
                                        				WHERE  K.PLN_YR = SUBSTR(@[to_week],1,4)
                                        				AND    K.PLN_WK = SUBSTR(@[to_week],5)
                                        				)                                     
                                           AND 	M.MVMT_STS_CD = 'OP'
                                           AND  Y.LOC_CD = L.LOC_CD
                                           AND  L.SCC_CD = G.SCC_CD

                                      #if (${div_flag} == '1' )
                       					#if (${loc_tp_cd} == 'E' )
                        				   AND   @[loc_cd] = G.ECC_CD
                       					#elseif (${loc_tp_cd} == 'L' )
                        				   AND   @[loc_cd] = G.LCC_CD
                       					#elseif (${loc_tp_cd} == 'R' )
                        				   AND   @[loc_cd] = G.RCC_CD
                       					#elseif (${loc_tp_cd} == 'S' )
                        				   AND   @[loc_cd] = G.LCC_CD
                       					#end
                                      #else
                       					#if (${loc_tp_cd_second} == 'E' )
                        				   AND   @[loc_cd_second] = G.ECC_CD
                       					#elseif (${loc_tp_cd_second} == 'L' )
                        				   AND   @[loc_cd_second] = G.LCC_CD
                       					#elseif (${loc_tp_cd_second} == 'S' )
                        				   AND   @[loc_cd_second] = G.SCC_CD
                       					#end                                      
                                      #end
                                           AND  M.ORG_YD_CD = Y.YD_CD
                                           AND 	M.CNTR_NO  	= C.CNTR_NO

										   #if ( ${tpszText} != '' )
										   AND  C.CNTR_TPSZ_CD IN( ${tpszText} )
					 					   #else
										   AND  C.CNTR_TPSZ_CD IN('D2','D4','D5','D7','R2','R5','R9','O2','S2','O4','S4','F2','A2','F4','A4','F5','O5')
										   #end

                                           AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ 
										   AND  TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD') BETWEEN E.WK_ST_DT AND E.WK_END_DT
										GROUP BY E.PLN_YR||E.PLN_WK,
												M.MVMT_STS_CD ,
												M.CNTR_TPSZ_CD,

										#if (${div_flag} == '1' )		
											#if (${loc_tp_cd} == 'R' )
            		   						    G.LCC_CD
											#elseif (${loc_tp_cd} == 'L' )
                                                G.ECC_CD
											#elseif (${loc_tp_cd} == 'E' )
												G.SCC_CD
											#elseif (${loc_tp_cd} == 'S' )
												G.SCC_CD
											#end
										#else
											#if (${loc_tp_cd_second} == 'L' )
                                                G.LCC_CD
											#elseif (${loc_tp_cd_second} == 'E' )
												G.ECC_CD
											#elseif (${loc_tp_cd_second} == 'S' )
												G.SCC_CD
											#end										
										#end


						#end
						#if (${bound} == 'A')
									UNION ALL
						#end
						#if (${bound} == 'A' || ${bound} == 'I')
 									SELECT 	E.PLN_YR||E.PLN_WK  YRWK,
												M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ,

											#if (${div_flag} == '1' )			
												#if (${loc_tp_cd} == 'R' )
	                    						    G.LCC_CD                LOC_CD,
												#elseif (${loc_tp_cd} == 'L' )
													G.ECC_CD                LOC_CD,
												#elseif (${loc_tp_cd} == 'E' )
                            	            		G.SCC_CD                LOC_CD,
												#elseif (${loc_tp_cd} == 'S' )
                            	            		G.SCC_CD                LOC_CD,
												#end
                                            #else
												#if (${loc_tp_cd_second} == 'L' )
													G.LCC_CD                LOC_CD,
												#elseif (${loc_tp_cd_second} == 'E' )
                            	            		G.ECC_CD                LOC_CD,
												#elseif (${loc_tp_cd_second} == 'S' )
                            	            		G.SCC_CD                LOC_CD,
												#end                                            
                                            #end

                                        		0 OB_QTY         ,
                                        		COUNT(*) IB_QTY 
                                          FROM 	CTM_MOVEMENT	     M,
                                               	MST_CONTAINER        C,
                                               	MDM_EQ_ORZ_CHT G,
                                                MDM_LOCATION L,
                                                MDM_YARD Y,
												EQR_WK_PRD E
                                         WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
                                        				SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
                                        				FROM   EQR_WK_PRD K
                                        				WHERE  K.PLN_YR = SUBSTR(@[fm_week],1,4)
                                        				AND    K.PLN_WK = SUBSTR(@[fm_week],5)
                                        				)	
                                           AND				( 
                                        				 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
                                        				 FROM   EQR_WK_PRD K
                                        				WHERE  K.PLN_YR = SUBSTR(@[to_week],1,4)
                                        				AND    K.PLN_WK = SUBSTR(@[to_week],5)
                                        				)       
	                        			   AND 	M.MVMT_STS_CD = 'MT'       
                                           AND  Y.LOC_CD = L.LOC_CD
                                           AND  L.SCC_CD = G.SCC_CD

                                    #if (${div_flag} == '1' )			
                       					#if (${loc_tp_cd} == 'E' )
                        					AND   @[loc_cd] = G.ECC_CD
                       					#elseif (${loc_tp_cd} == 'L' )
                        					AND   @[loc_cd] = G.LCC_CD
                       					#elseif (${loc_tp_cd} == 'R' )
                        					AND   @[loc_cd] = G.RCC_CD
                       					#elseif (${loc_tp_cd} == 'S' )
                        					AND   @[loc_cd] = G.LCC_CD
                       					#end
                                    #else
                       					#if (${loc_tp_cd_second} == 'E' )
                        					AND   @[loc_cd_second] = G.ECC_CD
                       					#elseif (${loc_tp_cd_second} == 'L' )
                        					AND   @[loc_cd_second] = G.LCC_CD
                       					#elseif (${loc_tp_cd_second} == 'S' )
                        					AND   @[loc_cd_second] = G.SCC_CD
                       					#end                                    
                                    #end

                                           AND  M.ORG_YD_CD = Y.YD_CD
                                           AND 	M.CNTR_NO  	= C.CNTR_NO

							  			   #if ( ${tpszText} != '' )
										   AND  C.CNTR_TPSZ_CD IN( ${tpszText} )
					 					   #else
										   AND  C.CNTR_TPSZ_CD IN('D2','D4','D5','D7','R2','R5','R9','O2','S2','O4','S4','F2','A2','F4','A4','F5','O5')
										   #end

                                           AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
										   AND  TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD') BETWEEN E.WK_ST_DT AND E.WK_END_DT
							               AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' )
 							               AND 'ID' = ( SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
         										             MM.MVMT_STS_CD /*  pre_mvmt_sts_cd   */
									                    FROM CTM_MOVEMENT MM
									                    WHERE MM.CNTR_NO = M.CNTR_NO
									                      AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO < M.CNMV_YR||TO_CHAR(M.CNMV_SEQ, '0000')||M.CNMV_SPLIT_NO
									                      AND ROWNUM = 1 )
										GROUP BY E.PLN_YR||E.PLN_WK,
												M.CNTR_TPSZ_CD,

                                            #if (${div_flag} == '1' )														
												#if (${loc_tp_cd} == 'R' )
            		   							    G.LCC_CD
                       					        #elseif (${loc_tp_cd} == 'L' )
													G.ECC_CD
												#elseif (${loc_tp_cd} == 'E' )
													G.SCC_CD
												#elseif (${loc_tp_cd} == 'S' )
													G.SCC_CD
												#end
                                            #else
												#if (${loc_tp_cd_second} == 'L' )
													G.LCC_CD
												#elseif (${loc_tp_cd_second} == 'E' )
													G.ECC_CD
												#elseif (${loc_tp_cd_second} == 'S' )
													G.SCC_CD
												#end                                            
                                            #end	

						#end
                                ) A, (SELECT LEVEL DP_SEQ  FROM DUAL CONNECT BY LEVEL <=2) B
                        ) A
						#if (${bound} != 'A' )
                        	
							#if (${bound} == 'O')
                        	WHERE A.BOUND = 'OP'
							#end
							#if (${bound} == 'I')
                        	WHERE A.BOUND = 'MG'
							#end

						#end
                        
                    ) A
                GROUP BY A.BOUND,A.YRWK,A.LOC_CD,A.CNTR_TPSZ_CD                
                )  A
            WHERE A.FCAST_CNTR_QTY + A.PFMC_CNTR_QTY > 0
            ) A , (SELECT LEVEL DP_SEQ  FROM DUAL CONNECT BY LEVEL <=5) B
       ) A
    GROUP BY  A.BOUND, A.YRWK,A.LOC_CD, A.DP_SEQ
    ) A
GROUP BY GROUPING SETS((A.BOUND,A.LOC_CD,A.DP_SEQ,A.YRWK),(A.BOUND,A.LOC_CD,A.DP_SEQ),(A.BOUND,A.DP_SEQ,A.YRWK),(A.BOUND,A.DP_SEQ))
ORDER BY DECODE(A.BOUND,'OP',1,2), A.LOC_CD,A.DP_SEQ,A.YRWK
)
, LV_QTY_LIST2 AS
(
SELECT 
        A.BOUND
       ,A.GLOC_CD
       ,A.LOC_CD
       ,A.DP_SEQ
       ,A.YRWK
       ,DECODE(A.DP_SEQ,4,DECODE(B.TOT_QTY,0,100,(C.TOT_QTY/B.TOT_QTY)*100),A.TOT_QTY) TOT_QTY   
	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.D2_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.D2_QTY+C.D2_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.D2_QTY,0,100, (C.D2_QTY/B.D2_QTY)*100)
		      END)
		  END) AS D2_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.D4_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.D4_QTY+C.D4_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.D4_QTY,0,100, (C.D4_QTY/B.D4_QTY)*100)
		      END)
		  END) AS D4_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.D5_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.D5_QTY+C.D5_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.D5_QTY,0,100, (C.D5_QTY/B.D5_QTY)*100)
		      END)
		  END) AS D5_QTY         


	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.D7_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.D7_QTY+C.D7_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.D7_QTY,0,100, (C.D7_QTY/B.D7_QTY)*100)
		      END)
		  END) AS D7_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.R2_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.R2_QTY+C.R2_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.R2_QTY,0,100, (C.R2_QTY/B.R2_QTY)*100)
		      END)
		  END) AS R2_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.R5_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.R5_QTY+C.R5_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.R5_QTY,0,100, (C.R5_QTY/B.R5_QTY)*100)
		      END)
		  END) AS R5_QTY 

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.R9_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.R9_QTY+C.R9_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.R9_QTY,0,100, (C.R9_QTY/B.R9_QTY)*100)
		      END)
		  END) AS R9_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.O2_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.O2_QTY+C.O2_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.O2_QTY,0,100, (C.O2_QTY/B.O2_QTY)*100)
		      END)
		  END) AS O2_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.S2_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.S2_QTY+C.S2_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.S2_QTY,0,100, (C.S2_QTY/B.S2_QTY)*100)
		      END)
		  END) AS S2_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.O4_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.O4_QTY+C.O4_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.O4_QTY,0,100, (C.O4_QTY/B.O4_QTY)*100)
		      END)
		  END) AS O4_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.S4_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.S4_QTY+C.S4_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.S4_QTY,0,100, (C.S4_QTY/B.S4_QTY)*100)
		      END)
		  END) AS S4_QTY         


	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.F2_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.F2_QTY+C.F2_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.F2_QTY,0,100, (C.F2_QTY/B.F2_QTY)*100)
		      END)
		  END) AS F2_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.A2_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.A2_QTY+C.A2_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.A2_QTY,0,100, (C.A2_QTY/B.A2_QTY)*100)
		      END)
		  END) AS A2_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.F4_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.F4_QTY+C.F4_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.F4_QTY,0,100, (C.F4_QTY/B.F4_QTY)*100)
		      END)
		  END) AS F4_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.A4_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.A4_QTY+C.A4_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.A4_QTY,0,100, (C.A4_QTY/B.A4_QTY)*100)
		      END)
		  END) AS A4_QTY         

	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.F5_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.F5_QTY+C.F5_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.F5_QTY,0,100, (C.F5_QTY/B.F5_QTY)*100)
		      END)
		  END) AS F5_QTY         
	   ,(CASE WHEN A.DP_SEQ <> '4' THEN 
		       A.O5_QTY
		  ELSE 
		    ( CASE WHEN A.DP_SEQ||B.O5_QTY+C.O5_QTY = '40' THEN 
		          NULL
		      ELSE 
		          DECODE(B.O5_QTY,0,100, (C.O5_QTY/B.O5_QTY)*100)
		      END)
		  END) AS O5_QTY 
FROM LV_QTY_LIST A, LV_QTY_LIST B , LV_QTY_LIST C 
WHERE A.BOUND = B.BOUND
AND   A.YRWK = B.YRWK
AND   A.LOC_CD = B.LOC_CD
AND   B.DP_SEQ = 1
AND   A.BOUND = C.BOUND
AND   A.YRWK = C.YRWK
AND   A.LOC_CD = C.LOC_CD
AND   C.DP_SEQ = 3
ORDER BY DECODE(A.BOUND,'OP',1,2),LOC_CD,DP_SEQ,YRWK
)

SELECT
       A.BOUND
       ,A.DP_SEQ
       ,DECODE(A.LOC_CD,'ZZZZ9','Total',A.LOC_CD) LOC_CD
       ,DECODE(A.DP_SEQ,1,'FCST',2,'PFMC',3,'Diff. Vol',4,'Diff.(%)',5,'Evaluation') FACTOR
       ,DECODE(A.YRWK,'999999','Total',A.YRWK) YRWK
	   ,DECODE(A.DP_SEQ,2,TO_CHAR(ROUND(A.TOT_QTY,1),'999,999,999'),3,'ABS '||LTRIM(TO_CHAR(A.TOT_QTY,'999,999,999')),4,TO_CHAR(ROUND(A.TOT_QTY,1),'9,999,990.9')||'%',5,EQR_FCAST_EVAL_FNC(ABS(ROUND(B.TOT_QTY,1))),LTRIM(TO_CHAR(A.TOT_QTY),'999,999,999,999')) TOT_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.D2_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.D2_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.D2_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.D2_QTY,1),'999,999,999,999'))) D2_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.D4_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.D4_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.D4_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.D4_QTY,1),'999,999,999,999'))) D4_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.D5_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.D5_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.D5_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.D5_QTY,1),'999,999,999,999'))) D5_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.D7_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.D7_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.D7_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.D7_QTY,1),'999,999,999,999'))) D7_QTY
                                                                                                                                                                                                                       
       ,DECODE(A.DP_SEQ,4,DECODE(B.R2_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.R2_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.R2_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.R2_QTY,1),'999,999,999,999'))) R2_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.R5_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.R5_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.R5_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.R5_QTY,1),'999,999,999,999'))) R5_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.R9_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.R9_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.R9_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.R9_QTY,1),'999,999,999,999'))) R9_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.O2_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.O2_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.O2_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.O2_QTY,1),'999,999,999,999'))) O2_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.S2_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.S2_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.S2_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.S2_QTY,1),'999,999,999,999'))) S2_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.O4_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.O4_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.O4_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.O4_QTY,1),'999,999,999,999'))) O4_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.S4_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.S4_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.S4_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.S4_QTY,1),'999,999,999,999'))) S4_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.F2_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.F2_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.F2_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.F2_QTY,1),'999,999,999,999'))) F2_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.A2_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.A2_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.A2_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.A2_QTY,1),'999,999,999,999'))) A2_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.F4_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.F4_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.F4_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.F4_QTY,1),'999,999,999,999'))) F4_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.A4_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.A4_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.A4_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.A4_QTY,1),'999,999,999,999'))) A4_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.F5_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.F5_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.F5_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.F5_QTY,1),'999,999,999,999'))) F5_QTY
       ,DECODE(A.DP_SEQ,4,DECODE(B.O5_QTY,NULL,'',LTRIM(TO_CHAR(ROUND(B.O5_QTY,1),'9,999,990.9'))||'%'),5,LTRIM(TO_CHAR(EQR_FCAST_EVAL_FNC(ABS(ROUND(B.O5_QTY,1))))),LTRIM(TO_CHAR(ROUND(A.O5_QTY,1),'999,999,999,999'))) O5_QTY
	   ,'FACTOR' VIEW_FLAG
FROM LV_QTY_LIST2 A , LV_QTY_LIST2 b
WHERE A.BOUND = B.BOUND
AND   A.YRWK =  B.YRWK 
AND   A.LOC_CD = B.LOC_CD
AND   B.DP_SEQ = 4

#if (${div_flag} == '1' )
  #if (${loc_tp_cd} == 'E' )
   AND A.LOC_CD <> 'ZZZZ9'
  #end
  #if (${loc_tp_cd} == 'L' && ${loc_cd} =='HKHKG' )
   AND A.LOC_CD <> 'ZZZZ9'
  #end
#elseif (${div_flag} == '2' )	
       AND A.LOC_CD <> 'ZZZZ9' -- SUB TOTAL 제외
#end

#if ( ${fm_week} == ${to_week} )
	AND A.YRWK <> '999999'
#end
ORDER BY DECODE(A.BOUND,'OP',1,2),A.LOC_CD,A.DP_SEQ,A.YRWK			]]></sql>
			<params>
				<param name="fm_week" type="12" value="" out="N"/>
				<param name="to_week" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="loc_cd_second" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
