<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PoolChassisHistoryDBDAOsearchPoolMvmtCompareDtlDataRSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
SELECT MATCHING
      ,CHSS_NO
     ,CNTR_NO
     ,ONHDT
     ,CHSS_OWNR_CO_CD
     ,CNTR_OWNR_CO_CD
     ,OWN_ONHDT 
     ,OWN_ONHYD
     ,OWN_OFFHDT
     ,OWN_OFFHYD
     ,OWN_USDY
     ,MGMT_ONHDT
     ,MGMT_ONHYD
     , MGMT_OFFHDT
     ,MGMT_OFFHYD
     ,MGMT_USDDYS
     ,DECODE( CHSS_NO, LAG ( CHSS_NO,1) OVER ( ORDER BY CHSS_NO,ONHDT), 0 , 1 ) POOL_UNIT
FROM (
SELECT 
#if ( ${gubun} == 'M'  )
	'MATCHING' MATCHING
#else 
    'UNMATCHING' MATCHING
#end 

 
	,CHSS_NO
	,CNTR_NO
	,ONHDT
	,CHSS_OWNR_CO_CD
	,CNTR_OWNR_CO_CD
	,OWN_ONHDT
		,OWN_ONHYD
	,OWN_OFFHDT
	,OWN_OFFHYD
	,OWN_USDY
	,SUM(OWN_USDY) OVER (PARTITION BY CHSS_NO,CNTR_NO) OWN_SMRY
	,MGMT_ONHDT
	,MGMT_ONHYD
	,MGMT_OFFHDT
	,MGMT_OFFHYD
	,MGMT_USDDYS
	,SUM(MGMT_USDDYS) OVER (PARTITION BY CHSS_NO,CNTR_NO) MGMT_SMRY      
FROM
( 
     SELECT 
     CHSS_NO
     ,CNTR_NO
     , NVL(OWN_ONHDT , MGMT_ONHDT)  ONHDT
, MAX( CASE WHEN EXISTS (SELECT /*+ INDEX(H XAK4CGM_EQ_STS_HIS) */
						 'X' FROM CGM_EQ_STS_HIS H
                    WHERE H.EQ_NO = AA.CHSS_NO
                    AND H.EQ_ASET_STS_CD IN ('LSI','OWN','DII')
                    AND H.STS_EVNT_DT BETWEEN  TO_DATE( REPLACE(@[mvmt_dt], '-',''), 'YYYYMM' ) AND ADD_MONTHS( TO_DATE(REPLACE(@[mvmt_dt], '-',''), 'YYYYMM' ),1)
                    ) THEN 'H'
			       ELSE 
			       NVL( (SELECT /*+ INDEX_DESC(H XAK4CGM_EQ_STS_HIS) */
			                CASE WHEN EQ_ASET_STS_CD IN ('LSI','OWN','DII') THEN 'H'
			                     ELSE 'O'
			                END CHSS_OWNR_CO_CD
			            FROM CGM_EQ_STS_HIS H
			            WHERE H.EQ_NO =  AA.CHSS_NO
			            AND H.EQ_ASET_STS_CD IN ('LSI','OWN','DII','LSO','TLL','SCR','SLD')
			            AND H.STS_EVNT_DT < TO_DATE( REPLACE(@[mvmt_dt], '-',''), 'YYYYMM' )
			            AND ROWNUM =1)
			        ,'O')
			  END ) CHSS_OWNR_CO_CD

, MAX(CASE WHEN EXISTS (SELECT /*+ INDEX(H XAK1MST_CNTR_STS_HIS) */  
							'X' FROM MST_CNTR_STS_HIS H
	                    WHERE H.CNTR_NO = AA.CNTR_NO
	                    AND H.CNTR_STS_CD IN ('LSI','OWN','DII')
	                    AND H.CNTR_STS_EVNT_DT BETWEEN  TO_DATE(REPLACE(@[mvmt_dt], '-',''), 'YYYYMM' ) AND ADD_MONTHS( TO_DATE(REPLACE(@[mvmt_dt], '-',''), 'YYYYMM' ),1)
	                    ) THEN 'H'
	       ELSE 
	       NVL( (SELECT /*+ INDEX_DESC(H XAK1MST_CNTR_STS_HIS) */
	            CASE WHEN CNTR_STS_CD IN ('LSI','OWN','DII') THEN 'H'
	                 ELSE 'O'
	            END CNTR_OWNR_CO_CD
	            FROM MST_CNTR_STS_HIS H
	            WHERE H.CNTR_NO = AA.CNTR_NO
	            AND H.CNTR_STS_CD IN ('LSI','OWN','DII','LSO','TLL','SCR','SLD')
	            AND H.CNTR_STS_EVNT_DT < TO_DATE(REPLACE(@[mvmt_dt], '-',''), 'YYYYMM' )
	            AND ROWNUM =1)
	       ,'O')
	  END ) CNTR_OWNR_CO_CD

, MAX( OWN_ONHDT )  OWN_ONHDT
,MAX( OWN_ONHYD ) OWN_ONHYD
, MAX( OWN_OFFHDT )  OWN_OFFHDT
,MAX( OWN_OFFYD ) OWN_OFFHYD
, MAX( OWN_USDY)  OWN_USDY
, MAX( MGMT_ONHDT)  MGMT_ONHDT
,MAX( MGMT_ONHYD) MGMT_ONHYD
, MAX( MGMT_OFFHDT)  MGMT_OFFHDT
,MAX( MGMT_OFFHYD) MGMT_OFFHYD
, MAX( MGMT_USDDYS) MGMT_USDDYS

FROM (

SELECT
AA.CHSS_NO
,AA.CNTR_NO

            ,AA.ONH_DT OWN_ONHDT
            ,AA.ONH_YD OWN_ONHYD
            , AA.OFFH_DT  OWN_OFFHDT
            ,AA.OFFH_YD  OWN_OFFYD
            ,AA.POOL_CHSS_USD_DYS OWN_USDY
            ,NULL MGMT_ONHDT
            ,NULL MGMT_ONHYD
            ,NULL MGMT_OFFHDT
            ,NULL MGMT_OFFHYD
            ,NULL MGMT_USDDYS
        FROM
            (
                
                SELECT
                OWNDYS.CHSS_NO
                ,OWNDYS.CNTR_NO
                , DECODE(ONH_DT, OFFH_LAG1, DECODE(LAG1, OFFH_LAG2, DECODE(LAG2,OFFH_LAG3, DECODE( LAG3,OFFH_LAG4 ,DECODE( LAG4, OFFH_LAG5 , DECODE(LAG5, OFFH_LAG6, DECODE(LAG6,OFFH_LAG7,
                DECODE( LAG7,OFFH_LAG8, DECODE( LAG8, OFFH_LAG9, LAG9, LAG8) ,LAG7), LAG6), LAG5), LAG4), LAG3), LAG2 ), LAG1 ), ONH_DT )   ONH_DTg
                , SUBSTR( MIN(OWNDYS.ONH_YDDT)  , 1,14) ONH_dt
                , SUBSTR( MIN(OWNDYS.ONH_YDDT)  , 15) ONH_YD
                , SUBSTR( MAX(OWNDYS.OFFH_YDDT)  , 1,14) OFFH_DT
                , SUBSTR( MAX(OWNDYS.OFFH_YDDT)  , 15) OFFH_YD
                , SUM(POOL_CHSS_USD_DYS) POOL_CHSS_USD_DYS
                FROM (
                    SELECT  
                    A.CHSS_NO
                    ,A.CNTR_NO
                    ,LAG(A.ONH_DT,1) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG1
                    ,LAG(A.ONH_DT,2) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG2
                    ,LAG(A.ONH_DT,3) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG3
                    ,LAG(A.ONH_DT,4) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG4
                    ,LAG(A.ONH_DT,5) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG5
                    ,LAG(A.ONH_DT,6) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG6
                    ,LAG(A.ONH_DT,7) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG7
                    ,LAG(A.ONH_DT,8) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG8
                    ,LAG(A.ONH_DT,9) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG9
                    ,LAG(OFFH_DT,1) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG1
                    ,LAG(OFFH_DT,2) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG2
                    ,LAG(OFFH_DT,3) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG3
                    ,LAG(OFFH_DT,4) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG4
                    ,LAG(OFFH_DT,5) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG5
                    ,LAG(OFFH_DT,6) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG6
                    ,LAG(OFFH_DT,7) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG7
                    ,LAG(OFFH_DT,8) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG8
                    ,LAG(OFFH_DT,9) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG9
                    ,A.ONH_DT
                    ,A.OFFH_DT
                    ,TO_CHAR(A.ONH_DT,'YYYYMMDDHH24MISS') || A.ONH_YD_CD ONH_YDDT
                    ,TO_CHAR(A.OFFH_DT,'YYYYMMDDHH24MISS') || A.OFFH_YD_CD OFFH_YDDT
                    ,POOL_CHSS_USD_DYS
                    FROM CGM_POOL_CHSS_USD_DYS_SMRY A ,CGM_CHSS_POOL_LOC_MTCH B
                    WHERE A.COST_YRMON = TO_CHAR(TO_DATE(REPLACE(@[mvmt_dt], '-','')  , 'YYYYMM' ), 'YYYYMM')
                      AND A.ONH_YD_CD LIKE B.OWN_POOL_LOC_CD || '%'          
                      AND B.CHSS_POOL_CD = @[chss_pool_cd]
                    ORDER BY A.CHSS_NO
                    ,ONH_DT
                ) OWNDYS
                GROUP BY OWNDYS.CHSS_NO
                ,OWNDYS.CNTR_NO
                , DECODE(ONH_DT, OFFH_LAG1, DECODE(LAG1, OFFH_LAG2, DECODE(LAG2,OFFH_LAG3, DECODE( LAG3,OFFH_LAG4 ,DECODE( LAG4, OFFH_LAG5 , DECODE(LAG5, OFFH_LAG6, DECODE(LAG6,OFFH_LAG7,
                DECODE( LAG7,OFFH_LAG8, DECODE( LAG8, OFFH_LAG9, LAG9, LAG8) ,LAG7), LAG6), LAG5), LAG4), LAG3), LAG2 ), LAG1 ), ONH_DT )
                
        ) AA
        
    
        UNION ALL
    
    SELECT 
    CHSS_NO
    ,CNTR_NO
    ,NULL
    ,NULL
    ,NULL
    ,NULL
    ,NULL
    ,ONH_DT   MGMT_ONH_DT
    ,ONH_YD
    , OFFH_DT  MGMT_OFFHDT
    ,OFFH_YD
    ,POOL_CHSS_USD_DYS
    FROM (

            SELECT
            MGMTDYS.CHSS_NO
            ,MGMTDYS.CNTR_NO
			, DECODE( TO_CHAR( ONH_DT,'YYYYMMDD')  , TO_CHAR(OFFH_LAG1,'YYYYMMDD')
			, DECODE( TO_CHAR(LAG1,'YYYYMMDD') , TO_CHAR(OFFH_LAG2,'YYYYMMDD'), DECODE( TO_CHAR(LAG2,'YYYYMMDD'), TO_CHAR(OFFH_LAG3,'YYYYMMDD')
			, DECODE( TO_CHAR(LAG3,'YYYYMMDD') ,TO_CHAR(OFFH_LAG4 ,'YYYYMMDD'),DECODE( TO_CHAR(LAG4,'YYYYMMDD'), TO_CHAR(OFFH_LAG5 ,'YYYYMMDD')
			, DECODE(TO_CHAR(LAG5,'YYYYMMDD'), TO_CHAR(OFFH_LAG6,'YYYYMMDD'), DECODE( TO_CHAR(LAG6,'YYYYMMDD'), TO_CHAR(OFFH_LAG7,'YYYYMMDD')
			,DECODE( TO_CHAR(LAG7,'YYYYMMDD') ,TO_CHAR(OFFH_LAG8,'YYYYMMDD'), DECODE( TO_CHAR(LAG8,'YYYYMMDD'), TO_CHAR(OFFH_LAG9,'YYYYMMDD')
			, TO_CHAR(LAG9,'YYYYMMDDHH24MISSHH24MISS'), TO_CHAR(LAG8,'YYYYMMDDHH24MISS')) ,TO_CHAR(LAG7,'YYYYMMDDHH24MISS')), TO_CHAR(LAG6,'YYYYMMDDHH24MISS'))
			, TO_CHAR(LAG5,'YYYYMMDDHH24MISS')), TO_CHAR(LAG4,'YYYYMMDDHH24MISS')), TO_CHAR(LAG3,'YYYYMMDDHH24MISS')), TO_CHAR(LAG2 ,'YYYYMMDDHH24MISS'))
			, TO_CHAR(LAG1 ,'YYYYMMDDHH24MISS')), TO_CHAR(ONH_DT ,'YYYYMMDDHH24MISS'))   ONH_DTG
            , SUBSTR( MIN(MGMTDYS.ONH_YDDT)  , 1,14) ONH_DT
            , SUBSTR( MIN(MGMTDYS.ONH_YDDT)  , 15) ONH_YD
            , SUBSTR( MAX(MGMTDYS.OFFH_YDDT)  , 1,14) OFFH_DT
            , SUBSTR( MAX(MGMTDYS.OFFH_YDDT)  , 15) OFFH_YD
            , SUM(POOL_CHSS_USD_DYS) POOL_CHSS_USD_DYS
            FROM (
                SELECT  
                A.CHSS_NO
                ,A.CNTR_NO
                ,LAG(A.ONH_DT,1) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG1
                ,LAG(A.ONH_DT,2) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG2
                ,LAG(A.ONH_DT,3) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG3
                ,LAG(A.ONH_DT,4) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG4
                ,LAG(A.ONH_DT,5) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG5
                ,LAG(A.ONH_DT,6) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG6
                ,LAG(A.ONH_DT,7) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG7
                ,LAG(A.ONH_DT,8) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG8
                ,LAG(A.ONH_DT,9) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) LAG9
                ,LAG(OFFH_DT,1) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG1
                ,LAG(OFFH_DT,2) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG2
                ,LAG(OFFH_DT,3) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG3
                ,LAG(OFFH_DT,4) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG4
                ,LAG(OFFH_DT,5) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG5
                ,LAG(OFFH_DT,6) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG6
                ,LAG(OFFH_DT,7) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG7
                ,LAG(OFFH_DT,8) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG8
                ,LAG(OFFH_DT,9) OVER (PARTITION BY A.CHSS_NO,A.CNTR_NO  ORDER BY ONH_DT) OFFH_LAG9
                ,A.ONH_DT
                ,A.OFFH_DT
                ,TO_CHAR(A.ONH_DT,'YYYYMMDDHH24MISS') || A.ONH_LOC_NM ONH_YDDT
                ,TO_CHAR(A.OFFH_DT,'YYYYMMDDHH24MISS') || A.OFFH_LOC_NM OFFH_YDDT
                ,POOL_CHSS_USD_DYS
                FROM CGM_POOL_CO_CHSS_USE_HIS A ,CGM_POOL_CHSS_IMP_FILE B
                WHERE B.COST_YRMON = TO_CHAR(TO_DATE(REPLACE(@[mvmt_dt], '-',''), 'YYYYMM' ), 'YYYYMM')
                AND B.CHSS_POOL_CD = @[chss_pool_cd]
                AND A.FILE_SEQ = B.FILE_SEQ
                ) MGMTDYS
            GROUP BY MGMTDYS.CHSS_NO
            ,MGMTDYS.CNTR_NO
            , DECODE( TO_CHAR( ONH_DT,'YYYYMMDD')  , TO_CHAR(OFFH_LAG1,'YYYYMMDD')
            , DECODE( TO_CHAR(LAG1,'YYYYMMDD') , TO_CHAR(OFFH_LAG2,'YYYYMMDD'), DECODE( TO_CHAR(LAG2,'YYYYMMDD'), TO_CHAR(OFFH_LAG3,'YYYYMMDD')
            , DECODE( TO_CHAR(LAG3,'YYYYMMDD') ,TO_CHAR(OFFH_LAG4 ,'YYYYMMDD'),DECODE( TO_CHAR(LAG4,'YYYYMMDD'), TO_CHAR(OFFH_LAG5 ,'YYYYMMDD')
            , DECODE(TO_CHAR(LAG5,'YYYYMMDD'), TO_CHAR(OFFH_LAG6,'YYYYMMDD'), DECODE( TO_CHAR(LAG6,'YYYYMMDD'), TO_CHAR(OFFH_LAG7,'YYYYMMDD')
            ,DECODE( TO_CHAR(LAG7,'YYYYMMDD') ,TO_CHAR(OFFH_LAG8,'YYYYMMDD'), DECODE( TO_CHAR(LAG8,'YYYYMMDD'), TO_CHAR(OFFH_LAG9,'YYYYMMDD')
            , TO_CHAR(LAG9,'YYYYMMDDHH24MISSHH24MISS'), TO_CHAR(LAG8,'YYYYMMDDHH24MISS')) ,TO_CHAR(LAG7,'YYYYMMDDHH24MISS')), TO_CHAR(LAG6,'YYYYMMDDHH24MISS'))
            , TO_CHAR(LAG5,'YYYYMMDDHH24MISS')), TO_CHAR(LAG4,'YYYYMMDDHH24MISS')), TO_CHAR(LAG3,'YYYYMMDDHH24MISS')), TO_CHAR(LAG2 ,'YYYYMMDDHH24MISS'))
            , TO_CHAR(LAG1 ,'YYYYMMDDHH24MISS')), TO_CHAR(ONH_DT ,'YYYYMMDDHH24MISS'))  
                            
     )

    
      ) AA
    
    GROUP BY  
      CHSS_NO
     ,CNTR_NO
     ,NVL(OWN_ONHDT , MGMT_ONHDT)
     
)

)

WHERE 1=1

#if ( ${gubun} == 'M'  )
	and nvl(OWN_SMRY,9999999999) = nvl(MGMT_SMRY      ,9999999999)
#else 
    and nvl(OWN_SMRY,9999999999) <>  nvl(MGMT_SMRY      ,9999999999)
#end 

#if ( ${chss_ownr_co_cd} != '' )
	 AND CHSS_OWNR_CO_CD = @[chss_ownr_co_cd] 
#end
#if ( ${cntr_ownr_co_cd} != ''  )
	AND CNTR_OWNR_CO_CD = @[cntr_ownr_co_cd]
#end			]]></sql>
			<params>
				<param name="mvmt_dt" type="12" value="" out="N"/>
				<param name="chss_pool_cd" type="12" value="" out="N"/>
				<param name="chss_ownr_co_cd" type="12" value="" out="N"/>
				<param name="cntr_ownr_co_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
