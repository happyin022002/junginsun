<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ITurnTimePerformanceFinderBCDAOTTSearchOptionInGereralVORSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
SELECT
LOC_CD pol,
DECODE(MAX(Y.NO),'1','CNTR','2','Days','3','T/Time' ,1 ) AS etc,
DECODE(MAX(Y.NO),'1',SUM(X.T_CNT),'2',SUM(X.T_TIME),'3',ROUND(SUM(X.T_TIME) / SUM(X.T_CNT) ,1 )) AS total,
SUM( DECODE( DSP_SEQ,  '01',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count01,
SUM( DECODE( DSP_SEQ,  '02',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count02,
SUM( DECODE( DSP_SEQ,  '03',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count03,
SUM( DECODE( DSP_SEQ,  '04',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count04,
SUM( DECODE( DSP_SEQ,  '05',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count05,
SUM( DECODE( DSP_SEQ,  '06',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count06,
SUM( DECODE( DSP_SEQ,  '07',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count07,
SUM( DECODE( DSP_SEQ,  '08',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count08,
SUM( DECODE( DSP_SEQ,  '09',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count09,
SUM( DECODE( DSP_SEQ,  '10',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count10,
SUM( DECODE( DSP_SEQ,  '11',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count11,
SUM( DECODE( DSP_SEQ,  '12',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count12,
SUM( DECODE( DSP_SEQ,  '13',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count13,
SUM( DECODE( DSP_SEQ,  '14',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count14,
SUM( DECODE( DSP_SEQ,  '15',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count15,
SUM( DECODE( DSP_SEQ,  '16',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count16,
SUM( DECODE( DSP_SEQ,  '17',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count17,
SUM( DECODE( DSP_SEQ,  '18',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count18,
SUM( DECODE( DSP_SEQ,  '19',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count19,
SUM( DECODE( DSP_SEQ,  '20',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count20,
SUM( DECODE( DSP_SEQ,  '21',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count21,
SUM( DECODE( DSP_SEQ,  '22',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count22,
SUM( DECODE( DSP_SEQ,  '23',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count23,
SUM( DECODE( DSP_SEQ,  '24',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count24,
SUM( DECODE( DSP_SEQ,  '25',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count25,
SUM( DECODE( DSP_SEQ,  '26',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count26,
SUM( DECODE( DSP_SEQ,  '27',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count27,
SUM( DECODE( DSP_SEQ,  '28',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count28,
SUM( DECODE( DSP_SEQ,  '29',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count29,
SUM( DECODE( DSP_SEQ,  '30',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count30,
SUM( DECODE( DSP_SEQ,  '31',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count31,
SUM( DECODE( DSP_SEQ,  '32',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count32,
SUM( DECODE( DSP_SEQ,  '33',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count33,
SUM( DECODE( DSP_SEQ,  '34',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count34,
SUM( DECODE( DSP_SEQ,  '35',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count35,
SUM( DECODE( DSP_SEQ,  '36',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count36,
SUM( DECODE( DSP_SEQ,  '37',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count37,
SUM( DECODE( DSP_SEQ,  '38',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count38,
SUM( DECODE( DSP_SEQ,  '39',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count39,
SUM( DECODE( DSP_SEQ,  '40',DECODE(Y.NO,'1',X.T_CNT,'2',X.T_TIME,'3',ROUND(X.T_TIME / X.T_CNT ,1 )),0)) AS count40
FROM    (
SELECT	T.VL_LOC_CD		LOC_CD,
S.DP_SEQ		DSP_SEQ,
SUM  (T.TT_DYS)		T_TIME,
COUNT(T.CNTR_TPSZ_CD)	T_CNT
FROM	CIM_PORT_TURN_TM	T,
MDM_LOCATION		L,
MDM_EQ_ORZ_CHT	O,
CIM_TP_SZ_DP_SEQ	S
            WHERE	T.TGT_MVMT_DT	BETWEEN    @[from]	AND @[to]
		AND		T.CNTR_TPSZ_CD	=	S.CNTR_TPSZ_CD
		AND		T.VL_LOC_CD		=	L.LOC_CD
		AND		L.SCC_CD		=	O.SCC_CD
		#if (${inquiryLevel} == 'R') 
		AND		O.RCC_CD		=	@[location]
		#end
		#if (${inquiryLevel} == 'C') 
		AND		SUBSTR(O.SCC_CD,0,2) =	@[location]
		#end
		#if (${inquiryLevel} == 'P') 
		AND		O.LOC_CD		=	@[location]
		#end
		#if (${portcom} == 'S') 
		AND		T.VD_LOC_CD		=	T.VL_LOC_CD
		#end
		#if (${portcom} == 'D') 
		AND		T.VD_LOC_CD		!=	T.VL_LOC_CD
		#end
		#if (${flowpattern} != '' && ${flowpattern} != 'A') 
		AND     T.TT_CGO_TP_CD	=	@[flowpattern]
		#end
		#if (${tpsz} == 'D') 
		AND		T.CNTR_TPSZ_CD  IN ( 'D2','D4','D5','D7','D8','D9','DW','DX' )
		#end
		#if (${tpsz} == 'S') 
		AND		T.CNTR_TPSZ_CD  IN ( 'O2','O4','S2','S4','F2','F4','F5','A4','A2','P2','P4','T2','T4' )
		#end
		#if (${tpsz} == 'R') 
		AND		T.CNTR_TPSZ_CD  IN ( 'R2','R5','R7')
		#end
		#if (${rdtype} == 'E') 
		AND		T.RD_FLG		=	'N'
		#end
		#if (${rdtype} == 'O') 
		AND		T.RD_FLG		=	'Y'
		#end
		#if (${tscntr} == 'E') 
		AND		T.TS_FLG		=	'N'
		#end
		#if (${tscntr} == 'O') 
		AND		T.TS_FLG		=	'Y'
		#end
		#if (${soc} == 'E') 
		AND		T.SOC_FLG		=	'N'
		#end
		#if (${soc} == 'O') 
		AND		T.SOC_FLG		=	'Y'
		#end
		GROUP BY T.VL_LOC_CD,
              		S.DP_SEQ				
        ) X,
(
   SELECT '1' AS NO FROM DUAL UNION SELECT '2' AS NO FROM DUAL UNION SELECT '3' AS NO FROM DUAL
) Y
GROUP BY LOC_CD,DECODE(Y.NO,'1','XX','2','YY')
ORDER BY 1,2,LOC_CD			]]></sql>
			<params>
				<param name="from" type="12" value="" out="N"/>
				<param name="to" type="12" value="" out="N"/>
				<param name="location" type="12" value="" out="N"/>
				<param name="flowpattern" type="12" value="" out="N"/>
				<param name="tpsz" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
