<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MTYEquipmentForecastDBDAOsearchMtyBalanceReferenceListRSQL">
			<desc><![CDATA[지점별로 향후 2 weeks의 예상 MTY 장비 Supply & Demand를 항목별로 입력된 MTY Balance의 Referential Data를 조회한다.]]></desc>
			<sql><![CDATA[
#if (${search_flag} == '2' )
WITH LV_REPO_IN_WEEK AS (
     SELECT 
            TO_DATE(A.WK_ST_DT,'YYYYMMDD') WK_ST_DT,
            TO_DATE(A.WK_END_DT,'YYYYMMDD') WK_END_DT1,
            TO_DATE(A.WK_END_DT,'YYYYMMDD')+7 WK_END_DT2,
            (SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ A.PLN_YR||A.PLN_WK
             FROM EQR_WK_PRD A
             WHERE A.PLN_YR||A.PLN_WK > @[fcast_yrwk]
             AND   ROWNUM = 1) FCAST_YRWK2,
             @[fcast_yrwk] FCAST_YRWK1
     FROM EQR_WK_PRD A
     WHERE A.PLN_YR = SUBSTR(@[fcast_yrwk],1,4)
     AND   A.PLN_WK = SUBSTR(@[fcast_yrwk],5,2)
)
#end
#if (${search_flag} == '2' || ${search_flag} == '3' )
	#if (${search_flag} == '3' )
		WITH LV_DUMMY_WEEK AS
	#else
		,LV_DUMMY_WEEK AS
	#end
	(
	    SELECT /*+ INDEX_DESC(A XPKEQR_WK_PRD) */ 
	           1 TP,ROWNUM WK_SEQ,A.PLN_YR||A.PLN_WK AS FCAST_YRWK, @[loc_cd] LOC_CD,
	           A.WK_ST_DT,A.WK_END_DT, NULL WK3_ST_DT, NULL WK3_END_DT
	    FROM EQR_WK_PRD A
	    WHERE PLN_YR||PLN_WK  < @[fcast_yrwk]
	    AND   ROWNUM <=4
	    UNION ALL
	    SELECT TP,WK_SEQ,FCAST_YRWK,LOC_CD,WK_ST_DT,WK_END_DT,
	           MIN(WK_ST_DT) OVER(ORDER BY WK_ST_DT) AS WK3_ST_DT,
	           MAX(WK_END_DT) OVER(ORDER BY WK_END_DT DESC) AS WK3_END_DT
	    FROM 
	        (SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ 
	              2 TP,ROWNUM WK_SEQ,A.PLN_YR||A.PLN_WK AS FCAST_YRWK, @[loc_cd] LOC_CD,
	              A.WK_ST_DT,A.WK_END_DT
	        FROM EQR_WK_PRD A
	        WHERE PLN_YR||PLN_WK >= @[fcast_yrwk]
	        AND   ROWNUM <=3)
	)
	,LV_YD_LIST AS
	(
	SELECT /*+ use_nl(a b c) */ C.YD_CD, A.SCC_CD
	FROM MDM_EQ_ORZ_CHT A,MDM_LOCATION B,MDM_YARD C
	WHERE A.ECC_CD = @[loc_cd]
	AND   A.SCC_CD = B.SCC_CD
	AND   B.LOC_CD = C.LOC_CD
	)
	
#end

SELECT
     A.DP_SEQ
    ,A.TITLE
    ,A.ITEM
    ,TO_CHAR(A.D2_FCAST_QTY+A.D4_FCAST_QTY+A.D5_FCAST_QTY+A.D7_FCAST_QTY+A.R2_FCAST_QTY+A.R5_FCAST_QTY+A.O2_FCAST_QTY+A.S2_FCAST_QTY+A.O4_FCAST_QTY+A.S4_FCAST_QTY+A.F2_FCAST_QTY+A.A2_FCAST_QTY+A.F4_FCAST_QTY+A.A4_FCAST_QTY+A.F5_FCAST_QTY,'9,999,999')   G_TOTAL
    ,TO_CHAR(A.D2_FCAST_QTY+A.D4_FCAST_QTY+A.D5_FCAST_QTY+A.D7_FCAST_QTY,'9,999,999')   D_TOTAL
    ,TO_CHAR(A.D2_FCAST_QTY,'9,999,999') D2_FCAST_QTY
    ,TO_CHAR(A.D4_FCAST_QTY,'9,999,999') D4_FCAST_QTY
    ,TO_CHAR(A.D5_FCAST_QTY,'9,999,999') D5_FCAST_QTY
    ,TO_CHAR(A.D7_FCAST_QTY,'9,999,999') D7_FCAST_QTY
    ,TO_CHAR(A.R2_FCAST_QTY+A.R5_FCAST_QTY+A.O2_FCAST_QTY+A.S2_FCAST_QTY+A.O4_FCAST_QTY+A.S4_FCAST_QTY+A.F2_FCAST_QTY+A.A2_FCAST_QTY+A.F4_FCAST_QTY+A.A4_FCAST_QTY+A.F5_FCAST_QTY,'9,999,999') S_TOTAL
    
    ,TO_CHAR(A.R2_FCAST_QTY,'9,999,999') R2_FCAST_QTY   
    ,TO_CHAR(A.R5_FCAST_QTY,'9,999,999') R5_FCAST_QTY  
    ,TO_CHAR(A.O2_FCAST_QTY,'9,999,999') O2_FCAST_QTY  
    ,TO_CHAR(A.S2_FCAST_QTY,'9,999,999') S2_FCAST_QTY  
    ,TO_CHAR(A.O4_FCAST_QTY,'9,999,999') O4_FCAST_QTY  
    ,TO_CHAR(A.S4_FCAST_QTY,'9,999,999') S4_FCAST_QTY  
    ,TO_CHAR(A.F2_FCAST_QTY,'9,999,999') F2_FCAST_QTY  
    ,TO_CHAR(A.A2_FCAST_QTY,'9,999,999') A2_FCAST_QTY  
    ,TO_CHAR(A.F4_FCAST_QTY,'9,999,999') F4_FCAST_QTY  
    ,TO_CHAR(A.A4_FCAST_QTY,'9,999,999') A4_FCAST_QTY  
    ,TO_CHAR(A.F5_FCAST_QTY,'9,999,999') F5_FCAST_QTY  
FROM
(
    SELECT 
         A.DP_SEQ
        ,A.TITLE
        ,A.ITEM
        ,A.D2_QTY   D2_FCAST_QTY
        ,A.D4_QTY   D4_FCAST_QTY
        ,A.D5_QTY   D5_FCAST_QTY
        ,A.D7_QTY   D7_FCAST_QTY
        ,A.R2_QTY   R2_FCAST_QTY
        ,A.R5_QTY   R5_FCAST_QTY
        ,A.O2_QTY   O2_FCAST_QTY
        ,A.S2_QTY   S2_FCAST_QTY
        ,A.O4_QTY   O4_FCAST_QTY
        ,A.S4_QTY   S4_FCAST_QTY
        ,A.F2_QTY   F2_FCAST_QTY
        ,A.A2_QTY   A2_FCAST_QTY
        ,A.F4_QTY   F4_FCAST_QTY
        ,A.A4_QTY   A4_FCAST_QTY
        ,A.F5_QTY   F5_FCAST_QTY
    FROM
    (   
        #if (${search_flag} == '1')
            ----Sound MT,Damage MT
            SELECT 
                B.DP_SEQ,
                DECODE(B.DP_SEQ, 1,'Sound MT','Damage MT') TITLE,
                DECODE(B.DP_SEQ, 1,'Sound MT','Damage MT') ITEM,
                SUM(DECODE(A.CNTR_TPSZ_CD,'D2',A.CNTR_QTY,0)) D2_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'D4',A.CNTR_QTY,0)) D4_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'D5',A.CNTR_QTY,0)) D5_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'D7',A.CNTR_QTY,0)) D7_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'R2',A.CNTR_QTY,0)) R2_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'R5',A.CNTR_QTY,0)) R5_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'O2',A.CNTR_QTY,0)) O2_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'S2',A.CNTR_QTY,0)) S2_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'O4',A.CNTR_QTY,0)) O4_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'S4',A.CNTR_QTY,0)) S4_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'F2',A.CNTR_QTY,0)) F2_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'A2',A.CNTR_QTY,0)) A2_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'F4',A.CNTR_QTY,0)) F4_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'A4',A.CNTR_QTY,0)) A4_QTY,
                SUM(DECODE(A.CNTR_TPSZ_CD,'F5',A.CNTR_QTY,0)) F5_QTY
            FROM 
            (SELECT DECODE(A.DMG_FLG, 'N', 1, 2) DP_SEQ, A.CNTR_TPSZ_CD, 1 CNTR_QTY
             FROM MST_CONTAINER A
             WHERE A.CRNT_YD_CD LIKE @[loc_cd]||'%'
             AND    A.CNMV_STS_CD = 'MT') A, (SELECT LEVEL DP_SEQ,
                                                  'D2' CNTR_TPSZ_CD,
                                                  0 CNTR_QTY
                                            FROM DUAL
                                            CONNECT BY LEVEL<=2) B
            WHERE A.DP_SEQ (+)= B.DP_SEQ
            GROUP BY B.DP_SEQ
        #end
        --UNION ALL
        #if (${search_flag} == '2' || ${search_flag} == '3' )
            ---- I/B PFMC,O/B PFMC, I/B Remaining(F~S),O/B Remaining(F~S)
            SELECT
                 A.DP_SEQ
                ,A.TITLE
                ,A.ITEM
                ,A.D2_QTY
                ,A.D4_QTY
                ,A.D5_QTY
                ,A.D7_QTY
                ,A.R2_QTY
                ,A.R5_QTY
                ,A.O2_QTY
                ,A.S2_QTY
                ,A.O4_QTY
                ,A.S4_QTY
                ,A.F2_QTY
                ,A.A2_QTY
                ,A.F4_QTY
                ,A.A4_QTY
                ,A.F5_QTY
            FROM
            (
                SELECT  MAX(DECODE(B.DP_SEQ,1,3,2,4,3,10,4,11)) DP_SEQ,
                        MAX(DECODE(B.DP_SEQ,1,'I/B PFMC',2,'I/B Remaining(F~S)',3,'O/B PFMC',4,'O/B Remaining(F~S)')) TITLE,
                        MAX(DECODE(B.DP_SEQ,1,'I/B PFMC',2,'I/B Remaining(F~S)',3,'O/B PFMC',4,'O/B Remaining(F~S)')) ITEM,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'D2',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) D2_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'D4',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) D4_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'D5',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) D5_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'D7',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) D7_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'R2',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) R2_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'R5',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) R5_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'O2',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) O2_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'S2',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) S2_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'O4',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) O4_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'S4',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) S4_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'F2',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) F2_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'A2',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) A2_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'F4',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) F4_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'A4',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) A4_QTY,
                        SUM(DECODE(A.CNTR_TPSZ_CD,'F5',DECODE(B.DP_SEQ,1,IB_QTY,2,FS_IB_QTY,3,OB_QTY,4,FS_OB_QTY),0)) F5_QTY
                FROM 
                
                    (SELECT /*+ use_nl(a b c d) */  
                    		A.CNTR_TPSZ_CD,ROUND(SUM(A.IB_QTY)/3) IB_QTY,ROUND(SUM(A.OB_QTY)/3) OB_QTY,
                           0 FS_IB_QTY, -- 임시
                           0 FS_OB_QTY  -- 임시
                    FROM CIM_LOC_MTCH_BAK_SMRY A, LV_DUMMY_WEEK B , MDM_LOCATION C, MDM_EQ_ORZ_CHT D
                    WHERE A.FULL_MTY_CD = 'F'
                    AND   A.SOC_FLG = 'N'
                    AND   A.ENR_FLG = 'N'
                    AND   A.TGT_YRWK = B.FCAST_YRWK
                    AND   A.LOC_CD = C.LOC_CD
                    AND   C.SCC_CD = D.SCC_CD
                    AND   D.ECC_CD = B.LOC_CD
                    AND   B.TP = 1
                    AND   B.WK_SEQ > 1
                    GROUP BY A.CNTR_TPSZ_CD
                    UNION ALL
                    SELECT 'D2' CNTR_TPSZ_CD, 0,0,0,0 FROM DUAL -- DUMMY
                    ) A, (SELECT LEVEL DP_SEQ  FROM DUAL CONNECT BY LEVEL <=4) B                        
                GROUP BY B.DP_SEQ
            ) A
            #if (${search_flag} == '2')
                WHERE A.DP_SEQ IN ('3','4')
            #elseif (${search_flag} == '3')
                WHERE A.DP_SEQ IN ('10','11')
            #end
        --UNION ALL
        -- + Others, - Others
        UNION ALL
            SELECT DECODE(TP_CD,'2', 9,14) DP_SEQ,
                   DECODE(TP_CD,'2', '+ Others','- Others') TITLE,
                   DECODE(TP_CD,'2', '+ Others','- Others') ITEM,
                   ROUND(SUM(D2_QTY)/3) D2_QTY,
                   ROUND(SUM(D4_QTY)/3) D4_QTY,
                   ROUND(SUM(D5_QTY)/3) D5_QTY,
                   ROUND(SUM(D7_QTY)/3) D7_QTY,
                   ROUND(SUM(R2_QTY)/3) R2_QTY,
                   ROUND(SUM(R5_QTY)/3) R5_QTY,
                   ROUND(SUM(O2_QTY)/3) O2_QTY,
                   ROUND(SUM(S2_QTY)/3) S2_QTY,
                   ROUND(SUM(O4_QTY)/3) O4_QTY,
                   ROUND(SUM(S4_QTY)/3) S4_QTY,
                   ROUND(SUM(F2_QTY)/3) F2_QTY,
                   ROUND(SUM(A2_QTY)/3) A2_QTY,
                   ROUND(SUM(F4_QTY)/3) F4_QTY,
                   ROUND(SUM(A4_QTY)/3) A4_QTY,
                   ROUND(SUM(F5_QTY)/3) F5_QTY
            FROM
                (SELECT A.MTY_BAL_OTR_TP_CD TP_CD,
                        SUM(A.D2_FCAST_QTY) D2_QTY,
                        SUM(A.D4_FCAST_QTY) D4_QTY,
                        SUM(A.D5_FCAST_QTY) D5_QTY,
                        SUM(A.D7_FCAST_QTY) D7_QTY,
                        SUM(A.R2_FCAST_QTY) R2_QTY,
                        SUM(A.R5_FCAST_QTY) R5_QTY,
                        SUM(A.O2_FCAST_QTY) O2_QTY,
                        SUM(A.S2_FCAST_QTY) S2_QTY,
                        SUM(A.O4_FCAST_QTY) O4_QTY,
                        SUM(A.S4_FCAST_QTY) S4_QTY,
                        SUM(A.F2_FCAST_QTY) F2_QTY,
                        SUM(A.A2_FCAST_QTY) A2_QTY,
                        SUM(A.F4_FCAST_QTY) F4_QTY,
                        SUM(A.A4_FCAST_QTY) A4_QTY,
                        SUM(A.F5_FCAST_QTY) F5_QTY
                FROM EQR_MTY_BAL_RPT_OTR A, 
				(
				    SELECT /*+ INDEX_DESC(A XPKEQR_WK_PRD) */ 
				           ROWNUM WK_SEQ,
				           A.PLN_YR||A.PLN_WK FCAST_YRWK,
				           LAG(A.PLN_YR||A.PLN_WK) OVER(ORDER BY A.PLN_YR||A.PLN_WK) AS INP_YRWK
				    FROM  EQR_WK_PRD A
				    WHERE A.PLN_YR||A.PLN_WK  < @[fcast_yrwk]
				    AND   ROWNUM <=5
				) B
                WHERE A.CO_CD = 'O'
                AND   A.LOC_CD = @[loc_cd]
                AND   A.FCAST_YRWK = B.FCAST_YRWK
                AND   A.INP_YRWK  = A.INP_YRWK 
                #if (${search_flag} == '2')
                    AND   A.MTY_BAL_OTR_TP_CD ='2'
                #else
                    AND   A.MTY_BAL_OTR_TP_CD ='4'
                #end
                GROUP BY A.MTY_BAL_OTR_TP_CD
                #if (${search_flag} == '2')
                    UNION ALL
                    SELECT '2' DP_SEQ, 
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
					0 
                    FROM DUAL
                #end
                #if (${search_flag} == '3')
                    UNION ALL
                    SELECT '4' DP_SEQ, 
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
					0 
                    FROM DUAL
                #end
			)
            GROUP BY TP_CD
        #end   
        #if (${search_flag} == '2')
            UNION ALL
            ---- COP I/B
            SELECT DP_SEQ,
            'COP I/B' TITLE,
            A.FCAST_YRWK  ITEM,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',QTY,0)),0) D2_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',QTY,0)),0) D4_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',QTY,0)),0) D5_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',QTY,0)),0) D7_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',QTY,0)),0) R2_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',QTY,0)),0) R5_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',QTY,0)),0) O2_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',QTY,0)),0) S2_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',QTY,0)),0) O4_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',QTY,0)),0) S4_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',QTY,0)),0) F2_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',QTY,0)),0) A2_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',QTY,0)),0) F4_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',QTY,0)),0) A4_QTY,
            NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',QTY,0)),0) F5_QTY
            FROM
            (
                SELECT   
                    DECODE(SIGN(F.WK_END_DT1 - TRUNC(A.ESTM_DT)),-1,6,5) DP_SEQ,
                    DECODE(SIGN(F.WK_END_DT1 - TRUNC(A.ESTM_DT)),-1,F.FCAST_YRWK2,F.FCAST_YRWK1) FCAST_YRWK,
                    A.CNTR_TPSZ_CD,
                    SUM(NVL(D.CNTR_VOL_QTY,1)) QTY 
                FROM(
                    SELECT /*+ ORDERED USE_HASH(A G1 G2) */	--변경
                       A.NOD_CD,
                       TRUNC(TO_DATE(SUBSTR(A.ESTM_DT,6),'YYYYMMDD HH24MISS') + NVL(G1.AVG_TT_DYS,NVL(G2.AVG_TT_DYS,1))) ESTM_DT,
                       A.COP_NO,
                       A.CNTR_TPSZ_CD,
                       A.BKG_NO,
                       A.CNTR_NO
                    FROM(    
                        SELECT
                           A.NOD_CD,
                           A.COP_NO,
                           B.CNTR_TPSZ_CD,
                           B.BKG_NO,
                           B.CNTR_NO,
                            (SELECT /*+ INDEX_DESC(A1 XPKSCE_COP_DTL) */
                                   L.SCC_CD||TO_CHAR(DECODE(A1.ACT_STS_CD,'F',NVL(A1.ACT_DT,A1.ESTM_DT),A1.ESTM_DT),'YYYYMMDD HH24MISS')
                            FROM SCE_COP_DTL A1, MDM_LOCATION L
                            WHERE A.COP_NO = A1.COP_NO
                            AND   A1.ACT_CD IN('FITMDO','FITYDO','FITRDO','FUVMUD')
                            AND   SUBSTR(A1.NOD_CD,1,5) = L.LOC_CD
                            AND   ROWNUM =1) ESTM_DT
                        FROM  LV_YD_LIST Y,  LV_REPO_IN_WEEK F ,SCE_COP_DTL A, SCE_COP_HDR B 
                        WHERE A.COP_NO = B.COP_NO
                          AND  A.ACT_CD = 'MITYAD'
                          AND    A.ACT_STS_CD IN('N','C')
                          AND    B.COP_STS_CD NOT IN ('X', 'O', 'F', 'M')
                          AND A.ESTM_DT  BETWEEN  F.WK_ST_DT-30 AND F.WK_END_DT2 + 20.99999    --+,-30일
                          AND    Y.YD_CD = A.NOD_CD
                    ) A
                   ,( SELECT Y.YD_CD,
                            F.WK_ST_DT,
                            F.WK_END_DT2,
                            ROWNUM
                     FROM LV_YD_LIST Y,
                          LV_REPO_IN_WEEK F ) F
                    , CIM_MTY_GEN_TURN_TM G1, CIM_MTY_GEN_TURN_TM G2
                    WHERE 1=1
                    AND   G1.LOC_CD(+) = SUBSTR(A.ESTM_DT,1,5)
                    AND   G1.CNTR_TPSZ_CD(+) = A.CNTR_TPSZ_CD
                    AND   G2.LOC_CD (+)=  SUBSTR(A.ESTM_DT,1,5)
                    AND   G2.CNTR_TPSZ_CD(+) = DECODE(SUBSTR(A.CNTR_TPSZ_CD,2,1),'2','20','40')
                    AND   TO_DATE(SUBSTR(A.ESTM_DT,6),'YYYYMMDD HH24MISS') + NVL(G1.AVG_TT_DYS,NVL(G2.AVG_TT_DYS,1)) BETWEEN F.WK_ST_DT AND F.WK_END_DT2 + 0.99999
                    AND F.YD_CD = A.NOD_CD 
                    ) A, BKG_BOOKING C , BKG_CONTAINER D , MST_CONTAINER E, LV_REPO_IN_WEEK F
                WHERE A.BKG_NO = C.BKG_NO
                AND   C.BKG_STS_CD IN('A','W','F')
                AND   C.SOC_FLG = 'N' 
                AND   D.BKG_NO(+) = A.BKG_NO
                AND   D.CNTR_NO(+) = A.CNTR_NO 
                AND   D.CNTR_NO = E.CNTR_NO(+) 
                AND   NVL(E.IMDT_EXT_FLG,'N') ='N' 
                GROUP BY A.CNTR_TPSZ_CD
                        ,DECODE(SIGN(F.WK_END_DT1 - TRUNC(A.ESTM_DT)),-1,6,5),DECODE(SIGN(F.WK_END_DT1 - TRUNC(A.ESTM_DT)),-1,F.FCAST_YRWK2,F.FCAST_YRWK1)
                        
            UNION ALL
            SELECT (A.WK_SEQ + 4) DP_SEQ,
            A.FCAST_YRWK,
            'D2' CNTR_TPSZ_CD,
            0 QTY
            FROM LV_DUMMY_WEEK A
            WHERE A.TP = 2
            GROUP BY (A.WK_SEQ + 4),A.FCAST_YRWK
            ) A
            GROUP BY A.DP_SEQ,A.FCAST_YRWK
            UNION ALL
            
            SELECT 8 DP_SEQ,
                'Repo. In' TITLE,
                'Repo. In' ITEM,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',QTY,0)),0) D2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',QTY,0)),0) D4_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',QTY,0)),0) D5_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',QTY,0)),0) D7_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',QTY,0)),0) R2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',QTY,0)),0) R5_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',QTY,0)),0) O2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',QTY,0)),0) S2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',QTY,0)),0) O4_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',QTY,0)),0) S4_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',QTY,0)),0) F2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',QTY,0)),0) A2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',QTY,0)),0) F4_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',QTY,0)),0) A4_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',QTY,0)),0) F5_QTY
            FROM 
            (
                SELECT
                      B.CNTR_TPSZ_CD,
                      ROUND(SUM(B.CNTR_QTY)/3 ,0) QTY
                FROM LV_YD_LIST Y, EQR_MTY_REPO_PERF_IB_V B , (SELECT TO_DATE(A.WK_ST_DT,'YYYYMMDD') -27 WK_ST_DT,
                                                                      TO_DATE(A.WK_END_DT,'YYYYMMDD')-13 WK_END_DT
                                                               FROM EQR_WK_PRD A
                                                               WHERE A.PLN_YR = SUBSTR(@[fcast_yrwk],1,4)
                                                               AND   A.PLN_WK = SUBSTR(@[fcast_yrwk],5)) C
                WHERE Y.YD_CD = B.TO_YD_CD
                AND   B.TO_ETA_DT BETWEEN C.WK_ST_DT AND C.WK_END_DT+0.99999
                GROUP BY B.CNTR_TPSZ_CD
            ) A
        #end
        
		#if (${search_flag} == '3')
            UNION ALL
                ---- Cumulative OP
                SELECT 12 DP_SEQ,
                       'Cumulative OP' TITLE,
                       'Cumulative OP' ITEM,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',QTY,0)),0) D2_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',QTY,0)),0) D4_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',QTY,0)),0) D5_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',QTY,0)),0) D7_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',QTY,0)),0) R2_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',QTY,0)),0) R5_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',QTY,0)),0) O2_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',QTY,0)),0) S2_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',QTY,0)),0) O4_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',QTY,0)),0) S4_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',QTY,0)),0) F2_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',QTY,0)),0) A2_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',QTY,0)),0) F4_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',QTY,0)),0) A4_QTY,
                       NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',QTY,0)),0) F5_QTY
                FROM
                    (SELECT /*+ INDEX(A XAK5CTM_MOVEMENT) */ A.CNTR_TPSZ_CD,COUNT(1) QTY
                    FROM  CTM_MOVEMENT A, LV_DUMMY_WEEK B,LV_YD_LIST C
                    WHERE A.MVMT_STS_CD = 'OP'
                    AND   A.CNMV_EVNT_DT BETWEEN  TO_DATE(B.WK_ST_DT,'YYYYMMDD') AND TO_DATE(B.WK_END_DT,'YYYYMMDD') + 0.99999
                    AND   B.FCAST_YRWK = @[fcast_yrwk]
                    AND   B.TP=2
                    AND   B.WK_SEQ = 1
                    AND   A.ORG_YD_CD = C.YD_CD
                    GROUP BY A.CNTR_TPSZ_CD) A
            UNION ALL
                SELECT 13 DP_SEQ,
                'Repo. Out' TITLE,
                'Repo. Out' ITEM,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',QTY,0)),0) D2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',QTY,0)),0) D4_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',QTY,0)),0) D5_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',QTY,0)),0) D7_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',QTY,0)),0) R2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',QTY,0)),0) R5_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',QTY,0)),0) O2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',QTY,0)),0) S2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',QTY,0)),0) O4_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',QTY,0)),0) S4_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',QTY,0)),0) F2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',QTY,0)),0) A2_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',QTY,0)),0) F4_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',QTY,0)),0) A4_QTY,
                NVL(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',QTY,0)),0) F5_QTY
                FROM 
                (
                    SELECT
                          B.CNTR_TPSZ_CD,
                          ROUND(SUM(B.CNTR_QTY)/3 ,0) QTY
                    FROM LV_YD_LIST Y, EQR_MTY_REPO_PERF_OB_V B , (SELECT TO_DATE(A.WK_ST_DT,'YYYYMMDD') -27 WK_ST_DT,
                                                                          TO_DATE(A.WK_END_DT,'YYYYMMDD')-13 WK_END_DT
                                                                   FROM EQR_WK_PRD A
                                                                   WHERE A.PLN_YR = SUBSTR(@[fcast_yrwk],1,4)
                                                                   AND   A.PLN_WK = SUBSTR(@[fcast_yrwk],5)) C
                    WHERE Y.YD_CD = B.FM_YD_CD
                    AND   B.FM_ETD_DT BETWEEN C.WK_ST_DT AND C.WK_END_DT+0.99999
                    GROUP BY B.CNTR_TPSZ_CD
                ) A
		#end
        ORDER BY DP_SEQ
    ) A    
) A			]]></sql>
			<params>
				<param name="fcast_yrwk" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
