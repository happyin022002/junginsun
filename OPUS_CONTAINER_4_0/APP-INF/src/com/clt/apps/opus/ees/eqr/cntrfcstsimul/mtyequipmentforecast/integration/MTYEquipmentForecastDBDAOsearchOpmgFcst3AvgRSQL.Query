<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MTYEquipmentForecastDBDAOsearchOpmgFcst3AvgRSQL">
			<desc><![CDATA[searchOpmgFcst3Avg]]></desc>
			<sql><![CDATA[
SELECT DECODE(A.WKY_SIM_TP_CD,'OF','OP','IF','MG','RO','Repo Out',WKY_SIM_TP_CD) WKY_SIM_TP_CD 
      ,A.DP_SEQ
      ,ROUND(AVG(D2_QTY)) D2_QTY
      ,ROUND(AVG(D4_QTY)) D4_QTY
      ,ROUND(AVG(D5_QTY)) D5_QTY
      ,ROUND(AVG(D7_QTY)) D7_QTY
      ,ROUND(AVG(R2_QTY)) R2_QTY
      ,ROUND(AVG(R5_QTY)) R5_QTY
      ,ROUND(AVG(R9_QTY)) R9_QTY
      ,ROUND(AVG(O2_QTY)) O2_QTY
      ,ROUND(AVG(S2_QTY)) S2_QTY
      ,ROUND(AVG(O4_QTY)) O4_QTY
      ,ROUND(AVG(S4_QTY)) S4_QTY
      ,ROUND(AVG(F2_QTY)) F2_QTY
      ,ROUND(AVG(A2_QTY)) A2_QTY
      ,ROUND(AVG(F4_QTY)) F4_QTY
      ,ROUND(AVG(A4_QTY)) A4_QTY
      ,ROUND(AVG(F5_QTY)) F5_QTY 
      ,ROUND(AVG(O5_QTY)) O5_QTY     
FROM
(                
    SELECT A.FCAST_YRWK
          ,A.WKY_SIM_TP_CD
          ,DECODE(A.WKY_SIM_TP_CD, 'OF', 1, 'IF', 2, 'RO', 3) DP_SEQ
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',CNTR_QTY,0)) D2_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',CNTR_QTY,0)) D4_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',CNTR_QTY,0)) D5_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',CNTR_QTY,0)) D7_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',CNTR_QTY,0)) R2_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',CNTR_QTY,0)) R5_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',CNTR_QTY,0)) R9_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',CNTR_QTY,0)) O2_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',CNTR_QTY,0)) S2_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',CNTR_QTY,0)) O4_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',CNTR_QTY,0)) S4_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',CNTR_QTY,0)) F2_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',CNTR_QTY,0)) A2_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',CNTR_QTY,0)) F4_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',CNTR_QTY,0)) A4_QTY
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',CNTR_QTY,0)) F5_QTY 
          ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',CNTR_QTY,0)) O5_QTY 
    FROM EQR_CTRL_MTY_WKY_SIM A
        ,(
            SELECT W4, W2
            FROM
                (
    				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	W4,
    				        LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	W3,
    						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	W2,
    						PLN_YR||PLN_WK										        W0
    				FROM	EQR_WK_PRD
    			)
    	    WHERE   W0  = @[repo_pln_yrwk] 	-- BALANCE REPO ID 입력값
      
         ) B
    WHERE A.FCAST_YRWK BETWEEN B.W4 AND B.W2
    AND   A.WKY_SIM_TP_CD IN ('OF', 'IF', 'RO') -- 하드코딩, OF : OP, IF : MG, RO : REPO OUT
    AND   A.CFM_FLG         = 'Y'               -- 하드코딩, 과거값
    AND   A.LOC_GRP_CD      = @[loc_grp_cd]     -- 변수처리
    AND   A.LOC_CD          = @[loc_cd]         -- 변수처리
--    AND   A.WKY_SIM_TP_CD   = 'OF'
    
    GROUP BY A.FCAST_YRWK
            ,A.WKY_SIM_TP_CD
) A    
GROUP BY A.WKY_SIM_TP_CD
        ,A.DP_SEQ     
ORDER BY A.DP_SEQ			]]></sql>
			<params>
				<param name="repo_pln_yrwk" type="12" value="" out="N"/>
				<param name="loc_grp_cd" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
