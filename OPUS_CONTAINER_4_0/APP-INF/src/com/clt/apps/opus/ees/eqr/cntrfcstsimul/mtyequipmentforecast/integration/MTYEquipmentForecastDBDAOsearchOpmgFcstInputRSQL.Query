<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MTYEquipmentForecastDBDAOsearchOpmgFcstInputRSQL">
			<desc><![CDATA[searchOpmgFcstInput]]></desc>
			<sql><![CDATA[
WITH DUMMY_WEEK AS
( 
    SELECT    W0, W1, W2, W3, W4, W5, W6, W7
           ,CASE WHEN W1-C0 >=0 THEN 'Y' ELSE 'N' END W1_F
           ,CASE WHEN W2-C0 >=0 THEN 'Y' ELSE 'N' END W2_F
           ,CASE WHEN W3-C0 >=0 THEN 'Y' ELSE 'N' END W3_F
           ,CASE WHEN W4-C0 >=0 THEN 'Y' ELSE 'N' END W4_F
           ,CASE WHEN W5-C0 >=0 THEN 'Y' ELSE 'N' END W5_F
           ,CASE WHEN W6-C0 >=0 THEN 'Y' ELSE 'N' END W6_F
           ,CASE WHEN W7-C0 >=0 THEN 'Y' ELSE 'N' END W7_F    
    FROM    
    (
        SELECT  LAG(PLN_YR||PLN_WK,4)        OVER (ORDER BY PLN_YR,PLN_WK)    W0,
                LAG(PLN_YR||PLN_WK,3)        OVER (ORDER BY PLN_YR,PLN_WK)    W1,
                LAG(PLN_YR||PLN_WK,2)        OVER (ORDER BY PLN_YR,PLN_WK)    W2,
                LAG(PLN_YR||PLN_WK,1)        OVER (ORDER BY PLN_YR,PLN_WK)    W3,
                PLN_YR||PLN_WK                                                W4,
                LEAD(PLN_YR||PLN_WK,1)        OVER (ORDER BY PLN_YR,PLN_WK)    W5,
                LEAD(PLN_YR||PLN_WK,2)        OVER (ORDER BY PLN_YR,PLN_WK)    W6,
                LEAD(PLN_YR||PLN_WK,3)        OVER (ORDER BY PLN_YR,PLN_WK)    W7,
                (SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT) C0 -- 오늘기준 EQR WEEK
        FROM    EQR_WK_PRD
    )
    WHERE   W4  = @[repo_pln_yrwk]     -- BALANCE REPO ID 입력값
)

SELECT A.DP_SEQ 
      ,A.TITLE
      ,A.MTY_BAL_TP_CD
      ,A.LOC_CD
      ,A.LOC_GRP_CD
      ,A.W1_WK    
      ,A.W2_WK    
      ,A.W3_WK    
      ,A.W4_WK    
      ,A.W5_WK    
      ,A.W6_WK    
      ,A.W7_WK  
      ,A.W1_F
      ,A.W2_F
      ,A.W3_F
      ,A.W4_F
      ,A.W5_F
      ,A.W6_F
      ,A.W7_F        
      ,NVL(B.W1_D2,0) W1_D2
      ,NVL(B.W1_D4,0) W1_D4
      ,NVL(B.W1_D5,0) W1_D5
      ,NVL(B.W1_D7,0) W1_D7
      ,NVL(B.W1_R2,0) W1_R2
      ,NVL(B.W1_R5,0) W1_R5
      ,NVL(B.W1_R9,0) W1_R9
      ,NVL(B.W1_O2,0) W1_O2
      ,NVL(B.W1_S2,0) W1_S2
      ,NVL(B.W1_O4,0) W1_O4
      ,NVL(B.W1_S4,0) W1_S4
      ,NVL(B.W1_F2,0) W1_F2
      ,NVL(B.W1_A2,0) W1_A2
      ,NVL(B.W1_F4,0) W1_F4
      ,NVL(B.W1_A4,0) W1_A4
      ,NVL(B.W1_F5,0) W1_F5
      ,NVL(B.W1_O5,0) W1_O5
      ,NVL(B.W2_D2,0) W2_D2
      ,NVL(B.W2_D4,0) W2_D4
      ,NVL(B.W2_D5,0) W2_D5
      ,NVL(B.W2_D7,0) W2_D7
      ,NVL(B.W2_R2,0) W2_R2
      ,NVL(B.W2_R5,0) W2_R5
      ,NVL(B.W2_R9,0) W2_R9
      ,NVL(B.W2_O2,0) W2_O2
      ,NVL(B.W2_S2,0) W2_S2
      ,NVL(B.W2_O4,0) W2_O4
      ,NVL(B.W2_S4,0) W2_S4
      ,NVL(B.W2_F2,0) W2_F2
      ,NVL(B.W2_A2,0) W2_A2
      ,NVL(B.W2_F4,0) W2_F4
      ,NVL(B.W2_A4,0) W2_A4
      ,NVL(B.W2_F5,0) W2_F5
      ,NVL(B.W2_O5,0) W2_O5               
      ,NVL(B.W3_D2,0) W3_D2
      ,NVL(B.W3_D4,0) W3_D4
      ,NVL(B.W3_D5,0) W3_D5
      ,NVL(B.W3_D7,0) W3_D7
      ,NVL(B.W3_R2,0) W3_R2
      ,NVL(B.W3_R5,0) W3_R5
      ,NVL(B.W3_R9,0) W3_R9
      ,NVL(B.W3_O2,0) W3_O2
      ,NVL(B.W3_S2,0) W3_S2
      ,NVL(B.W3_O4,0) W3_O4
      ,NVL(B.W3_S4,0) W3_S4
      ,NVL(B.W3_F2,0) W3_F2
      ,NVL(B.W3_A2,0) W3_A2
      ,NVL(B.W3_F4,0) W3_F4
      ,NVL(B.W3_A4,0) W3_A4
      ,NVL(B.W3_F5,0) W3_F5
      ,NVL(B.W3_O5,0) W3_O5
      ,NVL(B.W4_D2,0) W4_D2
      ,NVL(B.W4_D4,0) W4_D4
      ,NVL(B.W4_D5,0) W4_D5
      ,NVL(B.W4_D7,0) W4_D7
      ,NVL(B.W4_R2,0) W4_R2
      ,NVL(B.W4_R5,0) W4_R5
      ,NVL(B.W4_R9,0) W4_R9
      ,NVL(B.W4_O2,0) W4_O2
      ,NVL(B.W4_S2,0) W4_S2
      ,NVL(B.W4_O4,0) W4_O4
      ,NVL(B.W4_S4,0) W4_S4
      ,NVL(B.W4_F2,0) W4_F2
      ,NVL(B.W4_A2,0) W4_A2
      ,NVL(B.W4_F4,0) W4_F4
      ,NVL(B.W4_A4,0) W4_A4
      ,NVL(B.W4_F5,0) W4_F5
      ,NVL(B.W4_O5,0) W4_O5
      ,NVL(B.W5_D2,0) W5_D2
      ,NVL(B.W5_D4,0) W5_D4
      ,NVL(B.W5_D5,0) W5_D5
      ,NVL(B.W5_D7,0) W5_D7
      ,NVL(B.W5_R2,0) W5_R2
      ,NVL(B.W5_R5,0) W5_R5
      ,NVL(B.W5_R9,0) W5_R9
      ,NVL(B.W5_O2,0) W5_O2
      ,NVL(B.W5_S2,0) W5_S2
      ,NVL(B.W5_O4,0) W5_O4
      ,NVL(B.W5_S4,0) W5_S4
      ,NVL(B.W5_F2,0) W5_F2
      ,NVL(B.W5_A2,0) W5_A2
      ,NVL(B.W5_F4,0) W5_F4
      ,NVL(B.W5_A4,0) W5_A4
      ,NVL(B.W5_F5,0) W5_F5
      ,NVL(B.W5_O5,0) W5_O5
      ,NVL(B.W6_D2,0) W6_D2
      ,NVL(B.W6_D4,0) W6_D4
      ,NVL(B.W6_D5,0) W6_D5
      ,NVL(B.W6_D7,0) W6_D7
      ,NVL(B.W6_R2,0) W6_R2
      ,NVL(B.W6_R5,0) W6_R5
      ,NVL(B.W6_R9,0) W6_R9
      ,NVL(B.W6_O2,0) W6_O2
      ,NVL(B.W6_S2,0) W6_S2
      ,NVL(B.W6_O4,0) W6_O4
      ,NVL(B.W6_S4,0) W6_S4
      ,NVL(B.W6_F2,0) W6_F2
      ,NVL(B.W6_A2,0) W6_A2
      ,NVL(B.W6_F4,0) W6_F4
      ,NVL(B.W6_A4,0) W6_A4
      ,NVL(B.W6_F5,0) W6_F5
      ,NVL(B.W6_O5,0) W6_O5
      ,NVL(B.W7_D2,0) W7_D2
      ,NVL(B.W7_D4,0) W7_D4
      ,NVL(B.W7_D5,0) W7_D5
      ,NVL(B.W7_D7,0) W7_D7
      ,NVL(B.W7_R2,0) W7_R2
      ,NVL(B.W7_R5,0) W7_R5
      ,NVL(B.W7_R9,0) W7_R9
      ,NVL(B.W7_O2,0) W7_O2
      ,NVL(B.W7_S2,0) W7_S2
      ,NVL(B.W7_O4,0) W7_O4
      ,NVL(B.W7_S4,0) W7_S4
      ,NVL(B.W7_F2,0) W7_F2
      ,NVL(B.W7_A2,0) W7_A2
      ,NVL(B.W7_F4,0) W7_F4
      ,NVL(B.W7_A4,0) W7_A4
      ,NVL(B.W7_F5,0) W7_F5
      ,NVL(B.W7_O5,0) W7_O5             
FROM
(
    SELECT A.DP_SEQ
          ,A.TITLE
          ,A.MTY_BAL_TP_CD
          ,@[loc_cd]     LOC_CD
          ,@[loc_grp_cd] LOC_GRP_CD
          ,C.W1 W1_WK          
          ,C.W2 W2_WK
          ,C.W3 W3_WK
          ,C.W4 W4_WK
          ,C.W5 W5_WK
          ,C.W6 W6_WK
          ,C.W7 W7_WK
          ,C.W1_F
          ,C.W2_F
          ,C.W3_F
          ,C.W4_F
          ,C.W5_F
          ,C.W6_F
          ,C.W7_F          
    FROM 
    (
                  SELECT 1  DP_SEQ, 'Inventory'      TITLE, ''  MTY_BAL_TP_CD  FROM DUAL
        UNION ALL SELECT 2  DP_SEQ, 'MG FCST'        TITLE, '1' MTY_BAL_TP_CD  FROM DUAL
        UNION ALL SELECT 3  DP_SEQ, 'MG PFMC'        TITLE, ''  MTY_BAL_TP_CD  FROM DUAL
        UNION ALL SELECT 4  DP_SEQ, 'Repo In'        TITLE, ''  MTY_BAL_TP_CD  FROM DUAL
        UNION ALL SELECT 5  DP_SEQ, 'OW&On-hire'     TITLE, '6' MTY_BAL_TP_CD  FROM DUAL
        UNION ALL SELECT 6  DP_SEQ, '+Others'        TITLE, '2' MTY_BAL_TP_CD  FROM DUAL
        UNION ALL SELECT 7  DP_SEQ, 'OP FCST'        TITLE, '3' MTY_BAL_TP_CD  FROM DUAL
        UNION ALL SELECT 8  DP_SEQ, 'OP PFMC'        TITLE, ''  MTY_BAL_TP_CD  FROM DUAL
        UNION ALL SELECT 9  DP_SEQ, 'Repo Out'       TITLE, ''  MTY_BAL_TP_CD  FROM DUAL
        --UNION ALL SELECT 10 DP_SEQ, 'Balance(FCST)'  TITLE, ''  MTY_BAL_TP_CD  FROM DUAL
        --UNION ALL SELECT 11 DP_SEQ, 'Balance(PFMC)'  TITLE, ''  MTY_BAL_TP_CD  FROM DUAL
    ) A 
    ,DUMMY_WEEK C 
) A  
,(
    SELECT A.DP_SEQ
          ,SUM(DECODE(A.WEEK, C.W1, NVL(D2_QTY,0))) W1_D2 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(D4_QTY,0))) W1_D4 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(D5_QTY,0))) W1_D5 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(D7_QTY,0))) W1_D7 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(R2_QTY,0))) W1_R2 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(R5_QTY,0))) W1_R5 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(R9_QTY,0))) W1_R9 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(O2_QTY,0))) W1_O2 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(S2_QTY,0))) W1_S2 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(O4_QTY,0))) W1_O4 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(S4_QTY,0))) W1_S4 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(F2_QTY,0))) W1_F2 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(A2_QTY,0))) W1_A2 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(F4_QTY,0))) W1_F4 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(A4_QTY,0))) W1_A4 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(F5_QTY,0))) W1_F5 
          ,SUM(DECODE(A.WEEK, C.W1, NVL(O5_QTY,0))) W1_O5 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(D2_QTY,0))) W2_D2 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(D4_QTY,0))) W2_D4 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(D5_QTY,0))) W2_D5 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(D7_QTY,0))) W2_D7 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(R2_QTY,0))) W2_R2 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(R5_QTY,0))) W2_R5 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(R9_QTY,0))) W2_R9 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(O2_QTY,0))) W2_O2 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(S2_QTY,0))) W2_S2 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(O4_QTY,0))) W2_O4 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(S4_QTY,0))) W2_S4 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(F2_QTY,0))) W2_F2 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(A2_QTY,0))) W2_A2 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(F4_QTY,0))) W2_F4 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(A4_QTY,0))) W2_A4 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(F5_QTY,0))) W2_F5 
          ,SUM(DECODE(A.WEEK, C.W2, NVL(O5_QTY,0))) W2_O5                
          ,SUM(DECODE(A.WEEK, C.W3, NVL(D2_QTY,0))) W3_D2 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(D4_QTY,0))) W3_D4 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(D5_QTY,0))) W3_D5 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(D7_QTY,0))) W3_D7 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(R2_QTY,0))) W3_R2 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(R5_QTY,0))) W3_R5 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(R9_QTY,0))) W3_R9 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(O2_QTY,0))) W3_O2 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(S2_QTY,0))) W3_S2 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(O4_QTY,0))) W3_O4 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(S4_QTY,0))) W3_S4 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(F2_QTY,0))) W3_F2 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(A2_QTY,0))) W3_A2 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(F4_QTY,0))) W3_F4 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(A4_QTY,0))) W3_A4 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(F5_QTY,0))) W3_F5 
          ,SUM(DECODE(A.WEEK, C.W3, NVL(O5_QTY,0))) W3_O5 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(D2_QTY,0))) W4_D2 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(D4_QTY,0))) W4_D4 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(D5_QTY,0))) W4_D5 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(D7_QTY,0))) W4_D7 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(R2_QTY,0))) W4_R2 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(R5_QTY,0))) W4_R5 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(R9_QTY,0))) W4_R9 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(O2_QTY,0))) W4_O2 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(S2_QTY,0))) W4_S2 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(O4_QTY,0))) W4_O4 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(S4_QTY,0))) W4_S4 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(F2_QTY,0))) W4_F2 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(A2_QTY,0))) W4_A2 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(F4_QTY,0))) W4_F4 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(A4_QTY,0))) W4_A4 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(F5_QTY,0))) W4_F5 
          ,SUM(DECODE(A.WEEK, C.W4, NVL(O5_QTY,0))) W4_O5
          ,SUM(DECODE(A.WEEK, C.W5, NVL(D2_QTY,0))) W5_D2 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(D4_QTY,0))) W5_D4 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(D5_QTY,0))) W5_D5 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(D7_QTY,0))) W5_D7 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(R2_QTY,0))) W5_R2 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(R5_QTY,0))) W5_R5 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(R9_QTY,0))) W5_R9 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(O2_QTY,0))) W5_O2 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(S2_QTY,0))) W5_S2 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(O4_QTY,0))) W5_O4 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(S4_QTY,0))) W5_S4 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(F2_QTY,0))) W5_F2 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(A2_QTY,0))) W5_A2 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(F4_QTY,0))) W5_F4 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(A4_QTY,0))) W5_A4 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(F5_QTY,0))) W5_F5 
          ,SUM(DECODE(A.WEEK, C.W5, NVL(O5_QTY,0))) W5_O5 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(D2_QTY,0))) W6_D2 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(D4_QTY,0))) W6_D4 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(D5_QTY,0))) W6_D5 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(D7_QTY,0))) W6_D7 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(R2_QTY,0))) W6_R2 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(R5_QTY,0))) W6_R5 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(R9_QTY,0))) W6_R9 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(O2_QTY,0))) W6_O2 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(S2_QTY,0))) W6_S2 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(O4_QTY,0))) W6_O4 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(S4_QTY,0))) W6_S4 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(F2_QTY,0))) W6_F2 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(A2_QTY,0))) W6_A2 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(F4_QTY,0))) W6_F4 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(A4_QTY,0))) W6_A4 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(F5_QTY,0))) W6_F5 
          ,SUM(DECODE(A.WEEK, C.W6, NVL(O5_QTY,0))) W6_O5 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(D2_QTY,0))) W7_D2 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(D4_QTY,0))) W7_D4 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(D5_QTY,0))) W7_D5 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(D7_QTY,0))) W7_D7 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(R2_QTY,0))) W7_R2 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(R5_QTY,0))) W7_R5 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(R9_QTY,0))) W7_R9 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(O2_QTY,0))) W7_O2 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(S2_QTY,0))) W7_S2 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(O4_QTY,0))) W7_O4 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(S4_QTY,0))) W7_S4 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(F2_QTY,0))) W7_F2 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(A2_QTY,0))) W7_A2 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(F4_QTY,0))) W7_F4 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(A4_QTY,0))) W7_A4 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(F5_QTY,0))) W7_F5 
          ,SUM(DECODE(A.WEEK, C.W7, NVL(O5_QTY,0))) W7_O5                                                    
    FROM DUMMY_WEEK C,    
    (   
        -- INVENTORY ----------------------------------------------------------------------------
        SELECT 1 DP_SEQ
              ,A.BSE_DT WEEK                  
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',CNTR_QTY,0)) D2_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',CNTR_QTY,0)) D4_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',CNTR_QTY,0)) D5_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',CNTR_QTY,0)) D7_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',CNTR_QTY,0)) R2_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',CNTR_QTY,0)) R5_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',CNTR_QTY,0)) R9_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',CNTR_QTY,0)) O2_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',CNTR_QTY,0)) S2_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',CNTR_QTY,0)) O4_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',CNTR_QTY,0)) S4_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',CNTR_QTY,0)) F2_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',CNTR_QTY,0)) A2_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',CNTR_QTY,0)) F4_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',CNTR_QTY,0)) A4_QTY
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',CNTR_QTY,0)) F5_QTY 
              ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',CNTR_QTY,0)) O5_QTY 
        FROM  CIM_ETC_INVT A
             ,DUMMY_WEEK B
        WHERE A.CO_CD          = 'H'  -- 하드코딩
        AND   A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
        AND   A.INVT_USE_TP_CD = '1'  -- 하드코딩
        AND   A.BSE_DT         BETWEEN B.W1 AND B.W7  -- -3WEEK~+3WEEK
        AND   A.LOC_CD         = @[loc_cd]
        GROUP BY A.BSE_DT
        
        -- MG FCST ----------------------------------------------------------------------------
        UNION ALL
        SELECT 2 DP_SEQ
              ,A.FCAST_YRWK WEEK                  
              ,NVL(A.D2_FCAST_QTY,0) D2_QTY
              ,NVL(A.D4_FCAST_QTY,0) D4_QTY
              ,NVL(A.D5_FCAST_QTY,0) D5_QTY
              ,NVL(A.D7_FCAST_QTY,0) D7_QTY
              ,NVL(A.R2_FCAST_QTY,0) R2_QTY
              ,NVL(A.R5_FCAST_QTY,0) R5_QTY
              ,NVL(A.R9_FCAST_QTY,0) R9_QTY
              ,NVL(A.O2_FCAST_QTY,0) O2_QTY
              ,NVL(A.S2_FCAST_QTY,0) S2_QTY
              ,NVL(A.O4_FCAST_QTY,0) O4_QTY
              ,NVL(A.S4_FCAST_QTY,0) S4_QTY
              ,NVL(A.F2_FCAST_QTY,0) F2_QTY
              ,NVL(A.A2_FCAST_QTY,0) A2_QTY
              ,NVL(A.F4_FCAST_QTY,0) F4_QTY
              ,NVL(A.A4_FCAST_QTY,0) A4_QTY
              ,NVL(A.F5_FCAST_QTY,0) F5_QTY
              ,NVL(A.O5_FCAST_QTY,0) O5_QTY
        FROM  EQR_CTRL_MTY_BAL_RPT A
             ,DUMMY_WEEK B
        WHERE A.CO_CD          = 'H'
        AND   A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
        AND   A.LOC_CD         = @[loc_cd]        
        AND   A.MTY_BAL_TP_CD  = '1'  -- MG FCST
        AND   (
                    A.INP_YRWK = B.W3  -- CURRENT WEEK ~ +3WEEK
                 OR (A.INP_YRWK = B.W2 AND A.FCAST_YRWK = B.W3) -- -1WEEK
                 OR (A.INP_YRWK = B.W1 AND A.FCAST_YRWK = B.W2) -- -2WEEK
                 OR (A.INP_YRWK = B.W0 AND A.FCAST_YRWK = B.W1) -- -3WEEK                                                          
              )
        
        -- MG PFMC ----------------------------------------------------------------------------
        UNION ALL
        SELECT 3 DP_SEQ
              ,A.FCAST_YRWK WEEK 
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY) ,0)) D2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY) ,0)) D4_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY) ,0)) D5_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY) ,0)) D7_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY) ,0)) R2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY) ,0)) R5_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY) ,0)) R9_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY) ,0)) O2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY) ,0)) S2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY) ,0)) O4_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY) ,0)) S4_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY) ,0)) F2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY) ,0)) A2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY) ,0)) F4_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY) ,0)) A4_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY) ,0)) F5_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O5', A.CNTR_QTY) ,0)) O5_QTY              
        FROM EQR_CTRL_MTY_WKY_SIM A
            ,DUMMY_WEEK B
        WHERE A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
        AND   A.LOC_CD         = @[loc_cd]              
        AND   A.FCAST_YRWK < (
                                                SELECT PLN_YR||PLN_WK WEEK
                                                FROM EQR_WK_PRD
                                                WHERE WK_ST_DT  <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                                AND   WK_END_DT >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                              )  -- SYSDATE 현재주차
        AND   A.FCAST_YRWK  BETWEEN B.W1 AND B.W7 -- 화면최소주차                      
        AND   A.WKY_SIM_TP_CD = 'IF'  -- MG FCST  
        GROUP BY A.FCAST_YRWK        
       
                      
        -- REPO IN ---------------------------------------------------------------------------- 
        UNION ALL
        SELECT 4 DP_SEQ
              ,A.WEEK WEEK                  
              ,SUM(NVL(A.D2_QTY,0)) D2_QTY
              ,SUM(NVL(A.D4_QTY,0)) D4_QTY
              ,SUM(NVL(A.D5_QTY,0)) D5_QTY
              ,SUM(NVL(A.D7_QTY,0)) D7_QTY
              ,SUM(NVL(A.R2_QTY,0)) R2_QTY
              ,SUM(NVL(A.R5_QTY,0)) R5_QTY
              ,SUM(NVL(A.R9_QTY,0)) R9_QTY
              ,SUM(NVL(A.O2_QTY,0)) O2_QTY
              ,SUM(NVL(A.S2_QTY,0)) S2_QTY
              ,SUM(NVL(A.O4_QTY,0)) O4_QTY
              ,SUM(NVL(A.S4_QTY,0)) S4_QTY
              ,SUM(NVL(A.F2_QTY,0)) F2_QTY
              ,SUM(NVL(A.A2_QTY,0)) A2_QTY
              ,SUM(NVL(A.F4_QTY,0)) F4_QTY
              ,SUM(NVL(A.A4_QTY,0)) A4_QTY
              ,SUM(NVL(A.F5_QTY,0)) F5_QTY 
              ,SUM(NVL(A.O5_QTY,0)) O5_QTY 
       FROM
       (    
            SELECT ROW_NUMBER() OVER(PARTITION BY WEEK ORDER BY DP_SEQ ASC) RN
                  ,WEEK
                  ,D2_QTY
                  ,D4_QTY
                  ,D5_QTY
                  ,D7_QTY
                  ,R2_QTY
                  ,R5_QTY
                  ,R9_QTY
                  ,O2_QTY
                  ,S2_QTY
                  ,O4_QTY
                  ,S4_QTY
                  ,F2_QTY
                  ,A2_QTY
                  ,F4_QTY
                  ,A4_QTY
                  ,F5_QTY
                  ,O5_QTY  
            FROM
            (      

                -- 과거주차는 EQR_CTRL_MTY_WKY_SIM( RI ) 추출 (진짜과거주차)                
                SELECT 1 DP_SEQ
                      ,A.FCAST_YRWK WEEK 
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY) ,0)) D2_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY) ,0)) D4_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY) ,0)) D5_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY) ,0)) D7_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY) ,0)) R2_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY) ,0)) R5_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY) ,0)) R9_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY) ,0)) O2_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY) ,0)) S2_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY) ,0)) O4_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY) ,0)) S4_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY) ,0)) F2_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY) ,0)) A2_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY) ,0)) F4_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY) ,0)) A4_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY) ,0)) F5_QTY
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O5', A.CNTR_QTY) ,0)) O5_QTY    
                                      
                FROM EQR_CTRL_MTY_WKY_SIM A
                    ,DUMMY_WEEK B
                WHERE A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                AND   A.LOC_CD         = @[loc_cd]   
                AND   A.FCAST_YRWK < (
                                                    SELECT PLN_YR||PLN_WK WEEK
                                                    FROM EQR_WK_PRD
                                                    WHERE WK_ST_DT  <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                                    AND   WK_END_DT >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                      )  -- SYSDATE 현재주차                       
                AND   A.FCAST_YRWK BETWEEN B.W1 AND B.W3 -- 과거3개주차 자리                      
                AND   A.WKY_SIM_TP_CD  = 'RI'  -- REPO IN (VD만 해당)  
                GROUP BY A.FCAST_YRWK   
                
                -- -3W부터 +3W REPO IN SNAPSHOT
                UNION ALL
                SELECT 2 DP_SEQ
                      ,A.WEEK WEEK                  
                      ,SUM(NVL(A.D2_QTY,0)) D2_QTY
                      ,SUM(NVL(A.D4_QTY,0)) D4_QTY
                      ,SUM(NVL(A.D5_QTY,0)) D5_QTY
                      ,SUM(NVL(A.D7_QTY,0)) D7_QTY
                      ,SUM(NVL(A.R2_QTY,0)) R2_QTY
                      ,SUM(NVL(A.R5_QTY,0)) R5_QTY
                      ,SUM(NVL(A.R9_QTY,0)) R9_QTY
                      ,SUM(NVL(A.O2_QTY,0)) O2_QTY
                      ,SUM(NVL(A.S2_QTY,0)) S2_QTY
                      ,SUM(NVL(A.O4_QTY,0)) O4_QTY
                      ,SUM(NVL(A.S4_QTY,0)) S4_QTY
                      ,SUM(NVL(A.F2_QTY,0)) F2_QTY
                      ,SUM(NVL(A.A2_QTY,0)) A2_QTY
                      ,SUM(NVL(A.F4_QTY,0)) F4_QTY
                      ,SUM(NVL(A.A4_QTY,0)) A4_QTY
                      ,SUM(NVL(A.F5_QTY,0)) F5_QTY 
                      ,SUM(NVL(A.O5_QTY,0)) O5_QTY 
                   FROM
                   (
                    -- <-3W~-1W> -----------------------------------------------------------------------------------       
                    SELECT A.VSL_LANE_CD
                          ,A.VSL_CD
                          ,A.SKD_VOY_NO
                          ,A.SKD_DIR_CD
                          ,A.YD_CD
                          ,A.ETB_DT 
                          ,(
                              SELECT PLN_YR||PLN_WK 
                              FROM EQR_WK_PRD 
                              WHERE WK_ST_DT <= TO_CHAR(A.ETB_DT + B.ADD_DYS, 'YYYYMMDD')
                              AND   WK_END_DT >= TO_CHAR(A.ETB_DT + B.ADD_DYS, 'YYYYMMDD')
                           ) WEEK -- 가중치 적용 WEEK환산
                          ,NVL(A.D2_FCAST_QTY,0) D2_QTY
                          ,NVL(A.D4_FCAST_QTY,0) D4_QTY
                          ,NVL(A.D5_FCAST_QTY,0) D5_QTY
                          ,NVL(A.D7_FCAST_QTY,0) D7_QTY
                          ,NVL(A.R2_FCAST_QTY,0) R2_QTY
                          ,NVL(A.R5_FCAST_QTY,0) R5_QTY
                          ,NVL(A.R9_FCAST_QTY,0) R9_QTY
                          ,NVL(A.O2_FCAST_QTY,0) O2_QTY
                          ,NVL(A.S2_FCAST_QTY,0) S2_QTY
                          ,NVL(A.O4_FCAST_QTY,0) O4_QTY
                          ,NVL(A.S4_FCAST_QTY,0) S4_QTY
                          ,NVL(A.F2_FCAST_QTY,0) F2_QTY
                          ,NVL(A.A2_FCAST_QTY,0) A2_QTY
                          ,NVL(A.F4_FCAST_QTY,0) F4_QTY
                          ,NVL(A.A4_FCAST_QTY,0) A4_QTY
                          ,NVL(A.F5_FCAST_QTY,0) F5_QTY
                          ,NVL(A.O5_FCAST_QTY,0) O5_QTY
                    FROM EQR_CTRL_REPO_SNAP A
                        ,(
                             SELECT REPO_ADD_DYS AS ADD_DYS
                             FROM
                             (
                                 SELECT A.REPO_ADD_DYS
                                 FROM EQR_WK_PRD_ADD_DY A,
                                      (
                                          SELECT DISTINCT LCC_CD 
                                          FROM MDM_EQ_ORZ_CHT 
                                #if(${loc_grp_cd} == 'S')
                                          WHERE SCC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #elseif(${loc_grp_cd} == 'E')
                                             WHERE ECC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #elseif(${loc_grp_cd} == 'L')
                                             WHERE LCC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #end 

                                      ) B
                                 WHERE A.LCC_CD = B.LCC_CD
                                 UNION 
                                 SELECT 0 REPO_ADD_DYS FROM DUAL 
                                 ORDER BY REPO_ADD_DYS DESC  
                             )
                             WHERE ROWNUM=1     
                        ) B
                        ,(
                             SELECT C.YD_CD, A.SCC_CD
                             FROM MDM_EQ_ORZ_CHT A,MDM_LOCATION B,MDM_YARD C                         
                             
                        #if(${loc_grp_cd} == 'S')
                             WHERE A.SCC_CD = @[loc_cd]     -- E:ECC, L:LCC, S:SCC 
                        #elseif(${loc_grp_cd} == 'E')
                                WHERE A.ECC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC 
                        #elseif(${loc_grp_cd} == 'L')
                             WHERE A.LCC_CD = @[loc_cd]     -- E:ECC, L:LCC, S:SCC 
                        #end                                                   
                             AND   A.SCC_CD = B.SCC_CD
                             AND   B.LOC_CD = C.LOC_CD
                        ) C
                        ,DUMMY_WEEK D
                    WHERE A.ETB_DT >= (SELECT TO_DATE(WK_ST_DT,  'YYYYMMDD') -B.ADD_DYS           FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = D.W1) -- 1번째 week
                    AND   A.ETB_DT <= (SELECT TO_DATE(WK_END_DT, 'YYYYMMDD') -B.ADD_DYS +0.99999  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = D.W3) -- 3번째 week
                    AND   A.YD_CD = C.YD_CD    

                    -- <Current Week> ----------------------------------------------------------------------------
		#if(${curr_flag} =='T')      -- 입력주차 =현재주차
                    -- 입력주차 =현재주차 : RI 수량 - VD 수량 빼기(결과값이 0보다 작으면 0처리)     
                    UNION ALL

                    SELECT B.VSL_LANE_CD
                          ,B.VSL_CD
                          ,B.SKD_VOY_NO
                          ,B.SKD_DIR_CD
                          ,B.YD_CD 
                          ,B.ETB_DT    
                          ,D.W4     WEEK                
                           -- RI 수량 - VD 수량 빼기(결과값이 0보다 작으면 0처리)                                                                                     
                          ,CASE WHEN SUM(NVL(B.D2_QTY,0)-NVL(A.D2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D2_QTY,0)-NVL(A.D2_QTY,0)) END D2_QTY
                          ,CASE WHEN SUM(NVL(B.D4_QTY,0)-NVL(A.D4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D4_QTY,0)-NVL(A.D4_QTY,0)) END D4_QTY
                          ,CASE WHEN SUM(NVL(B.D5_QTY,0)-NVL(A.D5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D5_QTY,0)-NVL(A.D5_QTY,0)) END D5_QTY
                          ,CASE WHEN SUM(NVL(B.D7_QTY,0)-NVL(A.D7_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D7_QTY,0)-NVL(A.D7_QTY,0)) END D7_QTY
                          ,CASE WHEN SUM(NVL(B.R2_QTY,0)-NVL(A.R2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R2_QTY,0)-NVL(A.R2_QTY,0)) END R2_QTY
                          ,CASE WHEN SUM(NVL(B.R5_QTY,0)-NVL(A.R5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R5_QTY,0)-NVL(A.R5_QTY,0)) END R5_QTY
                          ,CASE WHEN SUM(NVL(B.R9_QTY,0)-NVL(A.R9_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R9_QTY,0)-NVL(A.R9_QTY,0)) END R9_QTY
                          ,CASE WHEN SUM(NVL(B.O2_QTY,0)-NVL(A.O2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O2_QTY,0)-NVL(A.O2_QTY,0)) END O2_QTY
                          ,CASE WHEN SUM(NVL(B.S2_QTY,0)-NVL(A.S2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.S2_QTY,0)-NVL(A.S2_QTY,0)) END S2_QTY
                          ,CASE WHEN SUM(NVL(B.O4_QTY,0)-NVL(A.O4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O4_QTY,0)-NVL(A.O4_QTY,0)) END O4_QTY
                          ,CASE WHEN SUM(NVL(B.S4_QTY,0)-NVL(A.S4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.S4_QTY,0)-NVL(A.S4_QTY,0)) END S4_QTY
                          ,CASE WHEN SUM(NVL(B.F2_QTY,0)-NVL(A.F2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F2_QTY,0)-NVL(A.F2_QTY,0)) END F2_QTY
                          ,CASE WHEN SUM(NVL(B.A2_QTY,0)-NVL(A.A2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.A2_QTY,0)-NVL(A.A2_QTY,0)) END A2_QTY
                          ,CASE WHEN SUM(NVL(B.F4_QTY,0)-NVL(A.F4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F4_QTY,0)-NVL(A.F4_QTY,0)) END F4_QTY
                          ,CASE WHEN SUM(NVL(B.A4_QTY,0)-NVL(A.A4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.A4_QTY,0)-NVL(A.A4_QTY,0)) END A4_QTY
                          ,CASE WHEN SUM(NVL(B.F5_QTY,0)-NVL(A.F5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F5_QTY,0)-NVL(A.F5_QTY,0)) END F5_QTY                                   
                          ,CASE WHEN SUM(NVL(B.O5_QTY,0)-NVL(A.O5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O5_QTY,0)-NVL(A.O5_QTY,0)) END O5_QTY    
				    FROM 
				    (
					-- VD 수량
                    SELECT A.VSL_LANE_CD
                          ,A.VSL_CD
                          ,A.SKD_VOY_NO
                          ,A.SKD_DIR_CD
                          ,A.YD_CD
                          ,A.ETD_DT ETB_DT
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY) ,0)) D2_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY) ,0)) D4_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY) ,0)) D5_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY) ,0)) D7_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY) ,0)) R2_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY) ,0)) R5_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY) ,0)) R9_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY) ,0)) O2_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY) ,0)) S2_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY) ,0)) O4_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY) ,0)) S4_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY) ,0)) F2_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY) ,0)) A2_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY) ,0)) F4_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY) ,0)) A4_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY) ,0)) F5_QTY
                          ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O5', A.CNTR_QTY) ,0)) O5_QTY  

                    FROM EQR_CTRL_BAL_RPT_DCHG_SNAP A
                        ,(
                             SELECT REPO_ADD_DYS AS ADD_DYS
                             FROM
                             (
                                 SELECT A.REPO_ADD_DYS
                                 FROM EQR_WK_PRD_ADD_DY A,
                                      (
                                          SELECT DISTINCT LCC_CD 
                                          FROM MDM_EQ_ORZ_CHT 
                                #if(${loc_grp_cd} == 'S')
                                          WHERE SCC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #elseif(${loc_grp_cd} == 'E')
                                             WHERE ECC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #elseif(${loc_grp_cd} == 'L')
                                             WHERE LCC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #end 

                                      ) B
                                 WHERE A.LCC_CD = B.LCC_CD
                                 UNION 
                                 SELECT 0 REPO_ADD_DYS FROM DUAL 
                                 ORDER BY REPO_ADD_DYS DESC  
                             )
                             WHERE ROWNUM=1     
                        ) B
                        ,(
                             SELECT C.YD_CD, A.SCC_CD
                             FROM MDM_EQ_ORZ_CHT A,MDM_LOCATION B,MDM_YARD C                         
                             
                        #if(${loc_grp_cd} == 'S')
                             WHERE A.SCC_CD = @[loc_cd]     -- E:ECC, L:LCC, S:SCC 
                        #elseif(${loc_grp_cd} == 'E')
                                WHERE A.ECC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC 
                        #elseif(${loc_grp_cd} == 'L')
                             WHERE A.LCC_CD = @[loc_cd]     -- E:ECC, L:LCC, S:SCC 
                        #end                                                   
                             AND   A.SCC_CD = B.SCC_CD
                             AND   B.LOC_CD = C.LOC_CD
                        ) C
                        ,DUMMY_WEEK D
                    WHERE A.ETD_DT >= (SELECT TO_DATE(WK_ST_DT,  'YYYYMMDD') -B.ADD_DYS           FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = D.W4) -- 4번째 week
                    AND   A.ETD_DT <= (SELECT TO_DATE(WK_END_DT, 'YYYYMMDD') -B.ADD_DYS +0.99999  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = D.W4) -- 4번째 week
                    AND   A.YD_CD = C.YD_CD  
                    GROUP BY A.VSL_LANE_CD
                            ,A.VSL_CD
                            ,A.SKD_VOY_NO
                            ,A.SKD_DIR_CD
                            ,A.YD_CD
                            ,A.ETD_DT 
				    ) A
				   ,(
                        -- RI수량
                        SELECT A.VSL_LANE_CD
                              ,A.VSL_CD
                              ,A.SKD_VOY_NO
                              ,A.SKD_DIR_CD
                              ,A.YD_CD
                              ,A.ETB_DT
                              ,NVL(A.D2_FCAST_QTY,0) D2_QTY
                              ,NVL(A.D4_FCAST_QTY,0) D4_QTY
                              ,NVL(A.D5_FCAST_QTY,0) D5_QTY
                              ,NVL(A.D7_FCAST_QTY,0) D7_QTY
                              ,NVL(A.R2_FCAST_QTY,0) R2_QTY
                              ,NVL(A.R5_FCAST_QTY,0) R5_QTY
                              ,NVL(A.R9_FCAST_QTY,0) R9_QTY
                              ,NVL(A.O2_FCAST_QTY,0) O2_QTY
                              ,NVL(A.S2_FCAST_QTY,0) S2_QTY
                              ,NVL(A.O4_FCAST_QTY,0) O4_QTY
                              ,NVL(A.S4_FCAST_QTY,0) S4_QTY
                              ,NVL(A.F2_FCAST_QTY,0) F2_QTY
                              ,NVL(A.A2_FCAST_QTY,0) A2_QTY
                              ,NVL(A.F4_FCAST_QTY,0) F4_QTY
                              ,NVL(A.A4_FCAST_QTY,0) A4_QTY
                              ,NVL(A.F5_FCAST_QTY,0) F5_QTY
                              ,NVL(A.O5_FCAST_QTY,0) O5_QTY
                        FROM EQR_CTRL_REPO_SNAP A
                            ,(
                                 SELECT REPO_ADD_DYS AS ADD_DYS
                                 FROM
                                 (
                                     SELECT A.REPO_ADD_DYS
                                     FROM EQR_WK_PRD_ADD_DY A,
                                          (
                                              SELECT DISTINCT LCC_CD 
                                              FROM MDM_EQ_ORZ_CHT 
                                    #if(${loc_grp_cd} == 'S')
                                              WHERE SCC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                    #elseif(${loc_grp_cd} == 'E')
                                                 WHERE ECC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                    #elseif(${loc_grp_cd} == 'L')
                                                 WHERE LCC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                    #end 
                            
                                          ) B
                                     WHERE A.LCC_CD = B.LCC_CD
                                     UNION 
                                     SELECT 0 REPO_ADD_DYS FROM DUAL 
                                     ORDER BY REPO_ADD_DYS DESC  
                                 )
                                 WHERE ROWNUM=1     
                            ) B
                            ,(
                                 SELECT C.YD_CD, A.SCC_CD
                                 FROM MDM_EQ_ORZ_CHT A,MDM_LOCATION B,MDM_YARD C                         
                                 
                            #if(${loc_grp_cd} == 'S')
                                 WHERE A.SCC_CD = @[loc_cd]     -- E:ECC, L:LCC, S:SCC 
                            #elseif(${loc_grp_cd} == 'E')
                                    WHERE A.ECC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC 
                            #elseif(${loc_grp_cd} == 'L')
                                 WHERE A.LCC_CD = @[loc_cd]     -- E:ECC, L:LCC, S:SCC 
                            #end                                                   
                                 AND   A.SCC_CD = B.SCC_CD
                                 AND   B.LOC_CD = C.LOC_CD
                            ) C
                            ,DUMMY_WEEK D
                        WHERE A.ETB_DT >= (SELECT TO_DATE(WK_ST_DT,  'YYYYMMDD') -B.ADD_DYS           FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = D.W4) -- 4번째 week
                        AND   A.ETB_DT <= (SELECT TO_DATE(WK_END_DT, 'YYYYMMDD') -B.ADD_DYS +0.99999  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = D.W4) -- 4번째 week
                        AND   A.YD_CD = C.YD_CD   
				    ) B
                    ,DUMMY_WEEK D 

                    WHERE  A.VSL_CD     (+) = B.VSL_CD
                    AND    A.SKD_VOY_NO (+) = B.SKD_VOY_NO
                    AND    A.SKD_DIR_CD (+) = B.SKD_DIR_CD
                    AND    A.VSL_LANE_CD(+) = B.VSL_LANE_CD
                    AND    A.YD_CD      (+) = B.YD_CD
                    
                    GROUP BY B.VSL_LANE_CD
                          ,B.VSL_CD
                          ,B.SKD_VOY_NO
                          ,B.SKD_DIR_CD
                          ,B.YD_CD 
                          ,B.ETB_DT
                          ,D.W4  

        #elseif(${curr_flag} =='F')  -- 입력주차<>현재주차
                    -- 입력주차<>현재주차 : RI 수량 (EQR_CTRL_REPO_SNAP 에서만 추출)

                    UNION ALL
                    SELECT A.VSL_LANE_CD
                          ,A.VSL_CD
                          ,A.SKD_VOY_NO
                          ,A.SKD_DIR_CD
                          ,A.YD_CD
                          ,A.ETB_DT    
                          ,(
                              SELECT PLN_YR||PLN_WK 
                              FROM EQR_WK_PRD 
                              WHERE WK_ST_DT <= TO_CHAR(A.ETB_DT + B.ADD_DYS, 'YYYYMMDD')
                              AND   WK_END_DT >= TO_CHAR(A.ETB_DT + B.ADD_DYS, 'YYYYMMDD')
                           ) WEEK -- 가중치 적용 WEEK환산
                          ,NVL(A.D2_FCAST_QTY,0) D2_QTY
                          ,NVL(A.D4_FCAST_QTY,0) D4_QTY
                          ,NVL(A.D5_FCAST_QTY,0) D5_QTY
                          ,NVL(A.D7_FCAST_QTY,0) D7_QTY
                          ,NVL(A.R2_FCAST_QTY,0) R2_QTY
                          ,NVL(A.R5_FCAST_QTY,0) R5_QTY
                          ,NVL(A.R9_FCAST_QTY,0) R9_QTY
                          ,NVL(A.O2_FCAST_QTY,0) O2_QTY
                          ,NVL(A.S2_FCAST_QTY,0) S2_QTY
                          ,NVL(A.O4_FCAST_QTY,0) O4_QTY
                          ,NVL(A.S4_FCAST_QTY,0) S4_QTY
                          ,NVL(A.F2_FCAST_QTY,0) F2_QTY
                          ,NVL(A.A2_FCAST_QTY,0) A2_QTY
                          ,NVL(A.F4_FCAST_QTY,0) F4_QTY
                          ,NVL(A.A4_FCAST_QTY,0) A4_QTY
                          ,NVL(A.F5_FCAST_QTY,0) F5_QTY
                          ,NVL(A.O5_FCAST_QTY,0) O5_QTY
                    FROM EQR_CTRL_REPO_SNAP A
                        ,(
                             SELECT REPO_ADD_DYS AS ADD_DYS
                             FROM
                             (
                                 SELECT A.REPO_ADD_DYS
                                 FROM EQR_WK_PRD_ADD_DY A,
                                      (
                                          SELECT DISTINCT LCC_CD 
                                          FROM MDM_EQ_ORZ_CHT 
                                #if(${loc_grp_cd} == 'S')
                                          WHERE SCC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #elseif(${loc_grp_cd} == 'E')
                                             WHERE ECC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #elseif(${loc_grp_cd} == 'L')
                                             WHERE LCC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #end 

                                      ) B
                                 WHERE A.LCC_CD = B.LCC_CD
                                 UNION 
                                 SELECT 0 REPO_ADD_DYS FROM DUAL 
                                 ORDER BY REPO_ADD_DYS DESC  
                             )
                             WHERE ROWNUM=1     
                        ) B
                        ,(
                             SELECT C.YD_CD, A.SCC_CD
                             FROM MDM_EQ_ORZ_CHT A,MDM_LOCATION B,MDM_YARD C                         
                             
                        #if(${loc_grp_cd} == 'S')
                             WHERE A.SCC_CD = @[loc_cd]     -- E:ECC, L:LCC, S:SCC 
                        #elseif(${loc_grp_cd} == 'E')
                                WHERE A.ECC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC 
                        #elseif(${loc_grp_cd} == 'L')
                             WHERE A.LCC_CD = @[loc_cd]     -- E:ECC, L:LCC, S:SCC 
                        #end                                                   
                             AND   A.SCC_CD = B.SCC_CD
                             AND   B.LOC_CD = C.LOC_CD
                        ) C
                        ,DUMMY_WEEK D
                    WHERE A.ETB_DT >= (SELECT TO_DATE(WK_ST_DT,  'YYYYMMDD') -B.ADD_DYS           FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = D.W4) -- 4번째 week
                    AND   A.ETB_DT <= (SELECT TO_DATE(WK_END_DT, 'YYYYMMDD') -B.ADD_DYS +0.99999  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = D.W4) -- 4번째 week
                    AND   A.YD_CD = C.YD_CD    
        #end

                    -- <1W~3W> -----------------------------------------------------------------------------------       
                    UNION ALL
                    SELECT A.VSL_LANE_CD
                          ,A.VSL_CD
                          ,A.SKD_VOY_NO
                          ,A.SKD_DIR_CD
                          ,A.YD_CD
                          ,A.ETB_DT  
                          ,(
                              SELECT PLN_YR||PLN_WK 
                              FROM EQR_WK_PRD 
                              WHERE WK_ST_DT <= TO_CHAR(A.ETB_DT + B.ADD_DYS, 'YYYYMMDD')
                              AND   WK_END_DT >= TO_CHAR(A.ETB_DT + B.ADD_DYS, 'YYYYMMDD')
                           ) WEEK -- 가중치 적용 WEEK환산
                          ,NVL(A.D2_FCAST_QTY,0) D2_QTY
                          ,NVL(A.D4_FCAST_QTY,0) D4_QTY
                          ,NVL(A.D5_FCAST_QTY,0) D5_QTY
                          ,NVL(A.D7_FCAST_QTY,0) D7_QTY
                          ,NVL(A.R2_FCAST_QTY,0) R2_QTY
                          ,NVL(A.R5_FCAST_QTY,0) R5_QTY
                          ,NVL(A.R9_FCAST_QTY,0) R9_QTY
                          ,NVL(A.O2_FCAST_QTY,0) O2_QTY
                          ,NVL(A.S2_FCAST_QTY,0) S2_QTY
                          ,NVL(A.O4_FCAST_QTY,0) O4_QTY
                          ,NVL(A.S4_FCAST_QTY,0) S4_QTY
                          ,NVL(A.F2_FCAST_QTY,0) F2_QTY
                          ,NVL(A.A2_FCAST_QTY,0) A2_QTY
                          ,NVL(A.F4_FCAST_QTY,0) F4_QTY
                          ,NVL(A.A4_FCAST_QTY,0) A4_QTY
                          ,NVL(A.F5_FCAST_QTY,0) F5_QTY
                          ,NVL(A.O5_FCAST_QTY,0) O5_QTY
                    FROM EQR_CTRL_REPO_SNAP A
                        ,(
                             SELECT REPO_ADD_DYS AS ADD_DYS
                             FROM
                             (
                                 SELECT A.REPO_ADD_DYS
                                 FROM EQR_WK_PRD_ADD_DY A,
                                      (
                                          SELECT DISTINCT LCC_CD 
                                          FROM MDM_EQ_ORZ_CHT 
                                #if(${loc_grp_cd} == 'S')
                                          WHERE SCC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #elseif(${loc_grp_cd} == 'E')
                                             WHERE ECC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #elseif(${loc_grp_cd} == 'L')
                                             WHERE LCC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                #end 

                                      ) B
                                 WHERE A.LCC_CD = B.LCC_CD
                                 UNION 
                                 SELECT 0 REPO_ADD_DYS FROM DUAL 
                                 ORDER BY REPO_ADD_DYS DESC  
                             )
                             WHERE ROWNUM=1     
                        ) B
                        ,(
                             SELECT C.YD_CD, A.SCC_CD
                             FROM MDM_EQ_ORZ_CHT A,MDM_LOCATION B,MDM_YARD C                         
                             
                        #if(${loc_grp_cd} == 'S')
                             WHERE A.SCC_CD = @[loc_cd]     -- E:ECC, L:LCC, S:SCC 
                        #elseif(${loc_grp_cd} == 'E')
                                WHERE A.ECC_CD = @[loc_cd]  -- E:ECC, L:LCC, S:SCC 
                        #elseif(${loc_grp_cd} == 'L')
                             WHERE A.LCC_CD = @[loc_cd]     -- E:ECC, L:LCC, S:SCC 
                        #end                                                   
                             AND   A.SCC_CD = B.SCC_CD
                             AND   B.LOC_CD = C.LOC_CD
                        ) C
                        ,DUMMY_WEEK D
                    WHERE A.ETB_DT >= (SELECT TO_DATE(WK_ST_DT,  'YYYYMMDD') -B.ADD_DYS           FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = D.W5) -- 5번째 week
                    AND   A.ETB_DT <= (SELECT TO_DATE(WK_END_DT, 'YYYYMMDD') -B.ADD_DYS +0.99999  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = D.W7) -- 7번째 week
                    AND   A.YD_CD = C.YD_CD    
                ) A
                
                GROUP BY A.WEEK
            )
        ) A
        WHERE RN=1 -- W3,W2,W1 자리에 SNAP REPO IN + 과거실적이 중첩되면 실적우선
        GROUP BY A.WEEK

        -- OW & On hire ---------------------------------------------------------------------------- 
        -- 과거주차는 EQR_CTRL_MTY_WKY_SIM 추출, 현재-미래는 EQR_CTRL_MTY_BAL_RPT
        
        UNION ALL       
        
        SELECT 5 DP_SEQ
              ,WEEK
              ,D2_QTY
              ,D4_QTY
              ,D5_QTY
              ,D7_QTY
              ,R2_QTY
              ,R5_QTY
              ,R9_QTY
              ,O2_QTY
              ,S2_QTY
              ,O4_QTY
              ,S4_QTY
              ,F2_QTY
              ,A2_QTY
              ,F4_QTY
              ,A4_QTY
              ,F5_QTY
              ,O5_QTY
        FROM
        (   
            -- 과거주차는 EQR_CTRL_MTY_WKY_SIM 추출 (진짜과거주차)                   
            SELECT A.FCAST_YRWK WEEK 
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY) ,0)) D2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY) ,0)) D4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY) ,0)) D5_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY) ,0)) D7_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY) ,0)) R2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY) ,0)) R5_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY) ,0)) R9_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY) ,0)) O2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY) ,0)) S2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY) ,0)) O4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY) ,0)) S4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY) ,0)) F2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY) ,0)) A2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY) ,0)) F4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY) ,0)) A4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY) ,0)) F5_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O5', A.CNTR_QTY) ,0)) O5_QTY    
                                  
            FROM EQR_CTRL_MTY_WKY_SIM A
                ,DUMMY_WEEK B
            WHERE A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
            AND   A.LOC_CD         = @[loc_cd]              
            AND   A.FCAST_YRWK < (
                                                SELECT PLN_YR||PLN_WK WEEK
                                                FROM EQR_WK_PRD
                                                WHERE WK_ST_DT  <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                                AND   WK_END_DT >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                  )  -- SYSDATE 현재주차                       
            AND   A.FCAST_YRWK BETWEEN B.W1 AND B.W7 -- 과거주차             
            AND   A.WKY_SIM_TP_CD  = 'OT'  -- OTHER(LT/ST/OW)  
            GROUP BY A.FCAST_YRWK   
            
            -- 현재-미래는 EQR_CTRL_MTY_BAL_RPT
            UNION ALL                     
            SELECT A.FCAST_YRWK WEEK                  
                  ,NVL(A.D2_FCAST_QTY,0) D2_QTY
                  ,NVL(A.D4_FCAST_QTY,0) D4_QTY
                  ,NVL(A.D5_FCAST_QTY,0) D5_QTY
                  ,NVL(A.D7_FCAST_QTY,0) D7_QTY
                  ,NVL(A.R2_FCAST_QTY,0) R2_QTY
                  ,NVL(A.R5_FCAST_QTY,0) R5_QTY
                  ,NVL(A.R9_FCAST_QTY,0) R9_QTY
                  ,NVL(A.O2_FCAST_QTY,0) O2_QTY
                  ,NVL(A.S2_FCAST_QTY,0) S2_QTY
                  ,NVL(A.O4_FCAST_QTY,0) O4_QTY
                  ,NVL(A.S4_FCAST_QTY,0) S4_QTY
                  ,NVL(A.F2_FCAST_QTY,0) F2_QTY
                  ,NVL(A.A2_FCAST_QTY,0) A2_QTY
                  ,NVL(A.F4_FCAST_QTY,0) F4_QTY
                  ,NVL(A.A4_FCAST_QTY,0) A4_QTY
                  ,NVL(A.F5_FCAST_QTY,0) F5_QTY
                  ,NVL(A.O5_FCAST_QTY,0) O5_QTY
            FROM  EQR_CTRL_MTY_BAL_RPT A
                 ,DUMMY_WEEK B
            WHERE A.CO_CD          = 'H'   -- 하드코딩
            AND   A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
            AND   A.LOC_CD         = @[loc_cd]       
            AND   A.MTY_BAL_TP_CD  = '6'   -- OW & On hire
            AND   (
                       A.INP_YRWK = B.W3  -- CURRENT WEEK ~ +3WEEK
                     OR (A.INP_YRWK = B.W2 AND A.FCAST_YRWK = B.W3 AND B.W3_F = 'Y') -- -1WEEK
                     OR (A.INP_YRWK = B.W1 AND A.FCAST_YRWK = B.W2 AND B.W2_F = 'Y') -- -2WEEK
                     OR (A.INP_YRWK = B.W0 AND A.FCAST_YRWK = B.W1 AND B.W1_F = 'Y') -- -3WEEK                                                         
                  )                  
        )    
        
        -- +OTHERS ---------------------------------------------------------------------------- 
        -- 과거주차는 EQR_CTRL_MTY_WKY_SIM 추출, 현재-미래는 EQR_CTRL_BAL_RPT_REPO_OUT
        
        UNION ALL       
        
        SELECT 6 DP_SEQ
              ,WEEK
              ,D2_QTY
              ,D4_QTY
              ,D5_QTY
              ,D7_QTY
              ,R2_QTY
              ,R5_QTY
              ,R9_QTY
              ,O2_QTY
              ,S2_QTY
              ,O4_QTY
              ,S4_QTY
              ,F2_QTY
              ,A2_QTY
              ,F4_QTY
              ,A4_QTY
              ,F5_QTY
              ,O5_QTY
        FROM
        (   
            -- 과거주차는 EQR_CTRL_MTY_WKY_SIM 추출 (진짜 과거)                
            SELECT A.FCAST_YRWK WEEK 
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY) ,0)) D2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY) ,0)) D4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY) ,0)) D5_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY) ,0)) D7_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY) ,0)) R2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY) ,0)) R5_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY) ,0)) R9_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY) ,0)) O2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY) ,0)) S2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY) ,0)) O4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY) ,0)) S4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY) ,0)) F2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY) ,0)) A2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY) ,0)) F4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY) ,0)) A4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY) ,0)) F5_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O5', A.CNTR_QTY) ,0)) O5_QTY    
                                  
            FROM EQR_CTRL_MTY_WKY_SIM A
                ,DUMMY_WEEK B
            WHERE A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
            AND   A.LOC_CD         = @[loc_cd]              
            AND   A.FCAST_YRWK < (
                                                SELECT PLN_YR||PLN_WK WEEK
                                                FROM EQR_WK_PRD
                                                WHERE WK_ST_DT  <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                                AND   WK_END_DT >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                              )  -- SYSDATE 현재주차
            AND   A.FCAST_YRWK BETWEEN B.W1 AND B.W3 -- 화면최소주차                    
            AND   A.WKY_SIM_TP_CD  = 'MR'  -- MR (+OTHERS)
            GROUP BY A.FCAST_YRWK 
            
            UNION ALL  
            
            -- 현재-미래는 EQR_CTRL_MTY_BAL_RPT_OTR
            SELECT A.FCAST_YRWK WEEK                  
                  ,SUM(NVL(A.D2_FCAST_QTY,0)) D2_QTY
                  ,SUM(NVL(A.D4_FCAST_QTY,0)) D4_QTY
                  ,SUM(NVL(A.D5_FCAST_QTY,0)) D5_QTY
                  ,SUM(NVL(A.D7_FCAST_QTY,0)) D7_QTY
                  ,SUM(NVL(A.R2_FCAST_QTY,0)) R2_QTY
                  ,SUM(NVL(A.R5_FCAST_QTY,0)) R5_QTY
                  ,SUM(NVL(A.R9_FCAST_QTY,0)) R9_QTY
                  ,SUM(NVL(A.O2_FCAST_QTY,0)) O2_QTY
                  ,SUM(NVL(A.S2_FCAST_QTY,0)) S2_QTY
                  ,SUM(NVL(A.O4_FCAST_QTY,0)) O4_QTY
                  ,SUM(NVL(A.S4_FCAST_QTY,0)) S4_QTY
                  ,SUM(NVL(A.F2_FCAST_QTY,0)) F2_QTY
                  ,SUM(NVL(A.A2_FCAST_QTY,0)) A2_QTY
                  ,SUM(NVL(A.F4_FCAST_QTY,0)) F4_QTY
                  ,SUM(NVL(A.A4_FCAST_QTY,0)) A4_QTY
                  ,SUM(NVL(A.F5_FCAST_QTY,0)) F5_QTY 
                  ,SUM(NVL(A.O5_FCAST_QTY,0)) O5_QTY 
            FROM  EQR_CTRL_MTY_BAL_RPT_OTR A
                 ,DUMMY_WEEK B
            WHERE A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
            AND   A.LOC_CD         = @[loc_cd]        
            AND   (
                        A.INP_YRWK = B.W3                         -- CURRENT WEEK ~ +3WEEK
                     OR (A.INP_YRWK = B.W2 AND A.FCAST_YRWK = B.W3 AND B.W3_F = 'Y') -- -1WEEK
                     OR (A.INP_YRWK = B.W1 AND A.FCAST_YRWK = B.W2 AND B.W2_F = 'Y') -- -2WEEK
                     OR (A.INP_YRWK = B.W0 AND A.FCAST_YRWK = B.W1 AND B.W1_F = 'Y') -- -3WEEK                                                      
                  )  
            GROUP BY A.FCAST_YRWK                       
        )                       
        
        -- OP FCST ---------------------------------------------------------------------------- 
        UNION ALL                     
        SELECT 7 DP_SEQ
              ,A.FCAST_YRWK WEEK                  
              ,NVL(A.D2_FCAST_QTY,0) D2_QTY
              ,NVL(A.D4_FCAST_QTY,0) D4_QTY
              ,NVL(A.D5_FCAST_QTY,0) D5_QTY
              ,NVL(A.D7_FCAST_QTY,0) D7_QTY
              ,NVL(A.R2_FCAST_QTY,0) R2_QTY
              ,NVL(A.R5_FCAST_QTY,0) R5_QTY
              ,NVL(A.R9_FCAST_QTY,0) R9_QTY
              ,NVL(A.O2_FCAST_QTY,0) O2_QTY
              ,NVL(A.S2_FCAST_QTY,0) S2_QTY
              ,NVL(A.O4_FCAST_QTY,0) O4_QTY
              ,NVL(A.S4_FCAST_QTY,0) S4_QTY
              ,NVL(A.F2_FCAST_QTY,0) F2_QTY
              ,NVL(A.A2_FCAST_QTY,0) A2_QTY
              ,NVL(A.F4_FCAST_QTY,0) F4_QTY
              ,NVL(A.A4_FCAST_QTY,0) A4_QTY
              ,NVL(A.F5_FCAST_QTY,0) F5_QTY
              ,NVL(A.O5_FCAST_QTY,0) O5_QTY
        FROM  EQR_CTRL_MTY_BAL_RPT A
             ,DUMMY_WEEK B
        WHERE A.CO_CD          = 'H'  -- 하드코딩
        AND   A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
        AND   A.LOC_CD         = @[loc_cd]        
        AND   A.MTY_BAL_TP_CD  = '3'  -- OP FCST
        AND   (
                    A.INP_YRWK = B.W3  -- CURRENT WEEK ~ +3WEEK
                 OR A.INP_YRWK = B.W2 AND A.FCAST_YRWK = B.W3 -- -1WEEK
                 OR A.INP_YRWK = B.W1 AND A.FCAST_YRWK = B.W2 -- -2WEEK
                 OR A.INP_YRWK = B.W0 AND A.FCAST_YRWK = B.W1 -- -3WEEK                                                          
              )      
              
        -- OP PFMC ----------------------------------------------------------------------------
        UNION ALL
        SELECT 8 DP_SEQ
              ,A.FCAST_YRWK WEEK 
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY) ,0)) D2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY) ,0)) D4_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY) ,0)) D5_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY) ,0)) D7_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY) ,0)) R2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY) ,0)) R5_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY) ,0)) R9_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY) ,0)) O2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY) ,0)) S2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY) ,0)) O4_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY) ,0)) S4_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY) ,0)) F2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY) ,0)) A2_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY) ,0)) F4_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY) ,0)) A4_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY) ,0)) F5_QTY
              ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O5', A.CNTR_QTY) ,0)) O5_QTY              
        FROM EQR_CTRL_MTY_WKY_SIM A
            ,DUMMY_WEEK B
        WHERE A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
        AND   A.LOC_CD         = @[loc_cd]              
        AND   A.FCAST_YRWK < (
                                                SELECT PLN_YR||PLN_WK WEEK
                                                FROM EQR_WK_PRD
                                                WHERE WK_ST_DT  <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                                AND   WK_END_DT >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                              )  -- SYSDATE 현재주차
        AND   A.FCAST_YRWK    BETWEEN B.W1 AND B.W7 -- 화면최소주차                      
        AND   A.WKY_SIM_TP_CD = 'OF'  -- MG FCST  
        GROUP BY A.FCAST_YRWK                      
                      
        -- REPO OUT ---------------------------------------------------------------------------- 
        -- 과거주차는 EQR_CTRL_MTY_WKY_SIM 추출, 현재-미래는 EQR_CTRL_BAL_RPT_REPO_OUT
        
        UNION ALL       
        
        SELECT 9 DP_SEQ
              ,WEEK
              ,D2_QTY
              ,D4_QTY
              ,D5_QTY
              ,D7_QTY
              ,R2_QTY
              ,R5_QTY
              ,R9_QTY
              ,O2_QTY
              ,S2_QTY
              ,O4_QTY
              ,S4_QTY
              ,F2_QTY
              ,A2_QTY
              ,F4_QTY
              ,A4_QTY
              ,F5_QTY
              ,O5_QTY
        FROM
        (   
            -- 과거주차는 EQR_CTRL_MTY_WKY_SIM 추출 (진짜 과거)                
            SELECT A.FCAST_YRWK WEEK 
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY) ,0)) D2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY) ,0)) D4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY) ,0)) D5_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY) ,0)) D7_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY) ,0)) R2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY) ,0)) R5_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY) ,0)) R9_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY) ,0)) O2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY) ,0)) S2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY) ,0)) O4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY) ,0)) S4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY) ,0)) F2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY) ,0)) A2_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY) ,0)) F4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY) ,0)) A4_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY) ,0)) F5_QTY
                  ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'O5', A.CNTR_QTY) ,0)) O5_QTY    
                                  
            FROM EQR_CTRL_MTY_WKY_SIM A
                ,DUMMY_WEEK B
            WHERE A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
            AND   A.LOC_CD         = @[loc_cd]              
            AND   A.FCAST_YRWK < (
                                                SELECT PLN_YR||PLN_WK WEEK
                                                FROM EQR_WK_PRD
                                                WHERE WK_ST_DT  <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                                AND   WK_END_DT >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                              )  -- SYSDATE 현재주차
            AND   A.FCAST_YRWK BETWEEN B.W1 AND B.W3 -- 화면최소주차                    
            AND   A.WKY_SIM_TP_CD  = 'RO'  -- REPO OUT
            GROUP BY A.FCAST_YRWK 
            
            UNION ALL  
            
            -- 현재-미래는 EQR_CTRL_BAL_RPT_REPO_OUT
            SELECT A.FCAST_YRWK WEEK                  
                  ,SUM(NVL(A.D2_FCAST_QTY,0)) D2_QTY
                  ,SUM(NVL(A.D4_FCAST_QTY,0)) D4_QTY
                  ,SUM(NVL(A.D5_FCAST_QTY,0)) D5_QTY
                  ,SUM(NVL(A.D7_FCAST_QTY,0)) D7_QTY
                  ,SUM(NVL(A.R2_FCAST_QTY,0)) R2_QTY
                  ,SUM(NVL(A.R5_FCAST_QTY,0)) R5_QTY
                  ,SUM(NVL(A.R9_FCAST_QTY,0)) R9_QTY
                  ,SUM(NVL(A.O2_FCAST_QTY,0)) O2_QTY
                  ,SUM(NVL(A.S2_FCAST_QTY,0)) S2_QTY
                  ,SUM(NVL(A.O4_FCAST_QTY,0)) O4_QTY
                  ,SUM(NVL(A.S4_FCAST_QTY,0)) S4_QTY
                  ,SUM(NVL(A.F2_FCAST_QTY,0)) F2_QTY
                  ,SUM(NVL(A.A2_FCAST_QTY,0)) A2_QTY
                  ,SUM(NVL(A.F4_FCAST_QTY,0)) F4_QTY
                  ,SUM(NVL(A.A4_FCAST_QTY,0)) A4_QTY
                  ,SUM(NVL(A.F5_FCAST_QTY,0)) F5_QTY 
                  ,SUM(NVL(A.O5_FCAST_QTY,0)) O5_QTY 
            FROM  EQR_CTRL_BAL_RPT_REPO_OUT A
                 ,DUMMY_WEEK B
            WHERE A.LOC_GRP_CD     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
            AND   A.LOC_CD         = @[loc_cd]        
            AND   (
                        A.INP_YRWK = B.W3                         -- CURRENT WEEK ~ +3WEEK
                     OR (A.INP_YRWK = B.W2 AND A.FCAST_YRWK = B.W3 AND B.W3_F = 'Y') -- -1WEEK
                     OR (A.INP_YRWK = B.W1 AND A.FCAST_YRWK = B.W2 AND B.W2_F = 'Y') -- -2WEEK
                     OR (A.INP_YRWK = B.W0 AND A.FCAST_YRWK = B.W1 AND B.W1_F = 'Y') -- -3WEEK                                                      
                  )  
            GROUP BY A.FCAST_YRWK                       
        )                       
              
    ) A        
    GROUP BY A.DP_SEQ                                          
) B   
WHERE A.DP_SEQ = B.DP_SEQ(+)     
ORDER BY A.DP_SEQ			]]></sql>
			<params>
				<param name="repo_pln_yrwk" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="loc_grp_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
