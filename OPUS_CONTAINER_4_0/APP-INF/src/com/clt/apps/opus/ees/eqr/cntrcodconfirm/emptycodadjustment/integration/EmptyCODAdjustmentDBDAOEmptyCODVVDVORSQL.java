/*=========================================================
*Copyright(c) 2014 CyberLogitec
*@FileName : EmptyCODAdjustmentDBDAOEmptyCODVVDVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2014.12.01
*@LastModifier : 
*@LastVersion : 1.0
* 2014.12.01 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.ees.eqr.cntrcodconfirm.emptycodadjustment.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class EmptyCODAdjustmentDBDAOEmptyCODVVDVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Retrieve cod vvd 
	  * </pre>
	  */
	public EmptyCODAdjustmentDBDAOEmptyCODVVDVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.ees.eqr.cntrcodconfirm.emptycodadjustment.integration").append("\n"); 
		query.append("FileName : EmptyCODAdjustmentDBDAOEmptyCODVVDVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("#if (${trade} == 'TPS' || ${trade} == 'AES' || ${trade} == 'EMS')" ).append("\n"); 
		query.append("WITH DIVISION AS " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("	SELECT	L2, L1, M0, R1, R2" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("				SELECT" ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1," ).append("\n"); 
		query.append("						PLN_YR||PLN_WK										        M0," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2" ).append("\n"); 
		query.append("				FROM	EQR_WK_PRD" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("	WHERE	M0	=	@[week]	" ).append("\n"); 
		query.append(")	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT WEEKDIVISION" ).append("\n"); 
		query.append("      ,WEEK" ).append("\n"); 
		query.append("      ,DIV" ).append("\n"); 
		query.append("      ,VVD" ).append("\n"); 
		query.append("      ,LANE" ).append("\n"); 
		query.append("      ,REMARKFLAG" ).append("\n"); 
		query.append("      ,DCLPTSQL" ).append("\n"); 
		query.append("      ,REMARK" ).append("\n"); 
		query.append("      ,CODCFMCTSCD" ).append("\n"); 
		query.append("      ,FIRSTETB" ).append("\n"); 
		query.append("      ,MNLINPFLG" ).append("\n"); 
		query.append("FROM " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT WEEKDIVISION" ).append("\n"); 
		query.append("      ,WEEK" ).append("\n"); 
		query.append("      ,DIV" ).append("\n"); 
		query.append("      ,VVD" ).append("\n"); 
		query.append("      ,LANE" ).append("\n"); 
		query.append("      ,REMARKFLAG" ).append("\n"); 
		query.append("      ,DCLPTSQL" ).append("\n"); 
		query.append("      ,REMARK" ).append("\n"); 
		query.append("      ,CODCFMCTSCD" ).append("\n"); 
		query.append("      ,FIRSTETB" ).append("\n"); 
		query.append("      ,MNLINPFLG" ).append("\n"); 
		query.append("      ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK  ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(       " ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )" ).append("\n"); 
		query.append("		INDEX ( ORG XPKVSK_VSL_PORT_SKD )" ).append("\n"); 
		query.append("		INDEX ( OCNT XPKMDM_COUNTRY )" ).append("\n"); 
		query.append("		INDEX ( OSCNT XPKMDM_SUBCONTINENT )" ).append("\n"); 
		query.append("		INDEX ( WEK XAK1EQR_WK_PRD ) " ).append("\n"); 
		query.append("		*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L2,	'1'," ).append("\n"); 
		query.append("										DIV.L1,	'2'," ).append("\n"); 
		query.append("										DIV.M0,	'3'," ).append("\n"); 
		query.append("										DIV.R1,	'4'," ).append("\n"); 
		query.append("										DIV.R2,	'5'," ).append("\n"); 
		query.append("												NULL) weekDivision," ).append("\n"); 
		query.append("												/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd," ).append("\n"); 
		query.append("		ORG.SLAN_CD						lane,	/*	LANE		*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	" ).append("\n"); 
		query.append("		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */" ).append("\n"); 
		query.append("		RMK.DIFF_RMK			remark," ).append("\n"); 
		query.append("		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("		DST.VPS_ETB_DT			firstetb," ).append("\n"); 
		query.append("		EVD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM	" ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT	" ).append("\n"); 
		query.append("					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */" ).append("\n"); 
		query.append("					VPS2.SLAN_CD							SLAN_CD     ," ).append("\n"); 
		query.append("					VPS2.VSL_CD								VSL_CD      ,			" ).append("\n"); 
		query.append("					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		" ).append("\n"); 
		query.append("					VPS2.SKD_DIR_CD							SKD_DIR_CD	, " ).append("\n"); 
		query.append("					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	," ).append("\n"); 
		query.append("					" ).append("\n"); 
		query.append("					VPS2.CLPT_SEQ							CLPT_SEQ    ,	" ).append("\n"); 
		query.append("					/*" ).append("\n"); 
		query.append("					VPS2.VPS_PORT_CD						VPS_PORT_CD ," ).append("\n"); 
		query.append("					*/" ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("						FROM    VSK_VSL_PORT_SKD    VPS1" ).append("\n"); 
		query.append("						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD" ).append("\n"); 
		query.append("						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO" ).append("\n"); 
		query.append("						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD" ).append("\n"); 
		query.append("						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("						AND     ROWNUM = 1" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("					)										FM_PKEY												" ).append("\n"); 
		query.append("			FROM	" ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("						SELECT	M2_START	START_DATE," ).append("\n"); 
		query.append("								P2_END 		END_DATE				" ).append("\n"); 
		query.append("						FROM	(" ).append("\n"); 
		query.append("									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ " ).append("\n"); 
		query.append("											LAG(WK_ST_DT,2)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START,                                             " ).append("\n"); 
		query.append("											PLN_YR||PLN_WK										CUR_WEEK," ).append("\n"); 
		query.append("											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                 " ).append("\n"); 
		query.append("									FROM	EQR_WK_PRD    " ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("						WHERE	CUR_WEEK	=	@[week]		" ).append("\n"); 
		query.append("					)					PERIOD	," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("					VSK_VSL_PORT_SKD	VPS2,	" ).append("\n"); 
		query.append("					MDM_COUNTRY			CNT2,	" ).append("\n"); 
		query.append("					MDM_SUBCONTINENT	SCNT2			" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')" ).append("\n"); 
		query.append("										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S'  /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */" ).append("\n"); 
		query.append("			AND		VPS2.CLPT_SEQ		<>	'1'" ).append("\n"); 
		query.append("			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD" ).append("\n"); 
		query.append("			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )		" ).append("\n"); 
		query.append("		)					DST		," ).append("\n"); 
		query.append("		VSK_VSL_PORT_SKD	ORG		," ).append("\n"); 
		query.append("		MDM_COUNTRY			OCNT	,	" ).append("\n"); 
		query.append("		MDM_SUBCONTINENT	OSCNT	," ).append("\n"); 
		query.append("		--MDM_DTL_REV_LANE	RLN		," ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("            SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ " ).append("\n"); 
		query.append("					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD" ).append("\n"); 
		query.append("            FROM	BSA_VVD_MST   -- 108 건" ).append("\n"); 
		query.append("			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'" ).append("\n"); 
		query.append("		)                   TRD     ," ).append("\n"); 
		query.append("		EQR_WK_PRD			WEK		," ).append("\n"); 
		query.append("		DIVISION            DIV     ," ).append("\n"); 
		query.append("		EQR_MTY_COD_VVD		EVD		," ).append("\n"); 
		query.append("		EQR_MTY_COD_RMK     RMK " ).append("\n"); 
		query.append("WHERE   ORG.VSL_CD			=	DST.VSL_CD" ).append("\n"); 
		query.append("AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO" ).append("\n"); 
		query.append("AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD" ).append("\n"); 
		query.append("AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)" ).append("\n"); 
		query.append("AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)" ).append("\n"); 
		query.append("AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD" ).append("\n"); 
		query.append("-- AND     OSCNT.CONTI_CD		<>    'A'  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND		ORG.SLAN_CD			=	TRD.LANE_CD" ).append("\n"); 
		query.append("AND	(" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		OR		" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )" ).append("\n"); 
		query.append("        OR" ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		OR " ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )" ).append("\n"); 
		query.append("		OR" ).append("\n"); 
		query.append("	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) " ).append("\n"); 
		query.append("		OR		" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("        OR" ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("		OR " ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("#if (${trade} != '')" ).append("\n"); 
		query.append("AND		TRD.TRD_CD			=		@[trade]		/* ________________ Parameter Trade Code */	" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') " ).append("\n"); 
		query.append("AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT" ).append("\n"); 
		query.append("							AND			WEK.WK_END_DT" ).append("\n"); 
		query.append("AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)" ).append("\n"); 
		query.append("AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)" ).append("\n"); 
		query.append("AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* To Get Arelady Simulated Data Without Vessel Schedule */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */" ).append("\n"); 
		query.append("        DISTINCT		" ).append("\n"); 
		query.append("		DECODE	( " ).append("\n"); 
		query.append("					VD.N1ST_ETB_YRWK , DV.L2, '1'," ).append("\n"); 
		query.append("					DV.L1, '2'," ).append("\n"); 
		query.append("					DV.M0, '3'," ).append("\n"); 
		query.append("					DV.R1, '4'," ).append("\n"); 
		query.append("					DV.R2, '5'," ).append("\n"); 
		query.append("					NULL" ).append("\n"); 
		query.append("				)									weekDivision,	/* WEEK_DIV */" ).append("\n"); 
		query.append("		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */" ).append("\n"); 
		query.append("		VD.COD_CFM_STS_CD							div			,	/* DIV   */" ).append("\n"); 
		query.append("		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   " ).append("\n"); 
		query.append("		VD.SLAN_CD									lane		,	/* LANE  */" ).append("\n"); 
		query.append("		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */" ).append("\n"); 
		query.append("		1 dclptsql," ).append("\n"); 
		query.append("		RMK.DIFF_RMK									remark		,	/* REMARK  */" ).append("\n"); 
		query.append("		'4'											codcfmctscd	,	/* WORK_FLAG (Manual Input)*/     /* <================================ 추가 */" ).append("\n"); 
		query.append("		VD.N1ST_ETB_YRWK							firstetb," ).append("\n"); 
		query.append("		VD.MNL_INP_FLG								mnlinpflg" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM    DIVISION            DV," ).append("\n"); 
		query.append("		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("WHERE	VD.N1ST_ETB_YRWK IN ( DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */" ).append("\n"); 
		query.append("AND		VD.VSL_CD			=	PT.VSL_CD  " ).append("\n"); 
		query.append("AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO " ).append("\n"); 
		query.append("AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD " ).append("\n"); 
		query.append("AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD " ).append("\n"); 
		query.append("AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */" ).append("\n"); 
		query.append("AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("WHERE RN=1 " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif (${trade} == 'IAS') " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT WEEKDIVISION" ).append("\n"); 
		query.append("      ,WEEK" ).append("\n"); 
		query.append("      ,DIV" ).append("\n"); 
		query.append("      ,VVD" ).append("\n"); 
		query.append("      ,LANE" ).append("\n"); 
		query.append("      ,REMARKFLAG" ).append("\n"); 
		query.append("      ,DCLPTSQL" ).append("\n"); 
		query.append("      ,REMARK" ).append("\n"); 
		query.append("      ,CODCFMCTSCD" ).append("\n"); 
		query.append("      ,FIRSTETB" ).append("\n"); 
		query.append("      ,MNLINPFLG" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT WEEKDIVISION" ).append("\n"); 
		query.append("      ,WEEK" ).append("\n"); 
		query.append("      ,DIV" ).append("\n"); 
		query.append("      ,VVD" ).append("\n"); 
		query.append("      ,LANE" ).append("\n"); 
		query.append("      ,REMARKFLAG" ).append("\n"); 
		query.append("      ,DCLPTSQL" ).append("\n"); 
		query.append("      ,REMARK" ).append("\n"); 
		query.append("      ,CODCFMCTSCD" ).append("\n"); 
		query.append("      ,FIRSTETB" ).append("\n"); 
		query.append("      ,MNLINPFLG" ).append("\n"); 
		query.append("      ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN 	" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(  " ).append("\n"); 
		query.append("SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		DECODE( VD.N1ST_ETB_YRWK	,	DV.L2,	'1'," ).append("\n"); 
		query.append("										DV.L1,	'2'," ).append("\n"); 
		query.append("										DV.M0,	'3'," ).append("\n"); 
		query.append("										DV.R1,	'4'," ).append("\n"); 
		query.append("										DV.R2,	'5'," ).append("\n"); 
		query.append("											NULL)	weekDivision,		/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/" ).append("\n"); 
		query.append("		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/" ).append("\n"); 
		query.append("		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			" ).append("\n"); 
		query.append("		VD.SLAN_CD									lane,				/*	LANE		*/" ).append("\n"); 
		query.append("		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/" ).append("\n"); 
		query.append("	--	1 dclptsql," ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("					VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("			FROM	VSK_VSL_PORT_SKD	VPS1," ).append("\n"); 
		query.append("			        MDM_COUNTRY         CNT,    " ).append("\n"); 
		query.append("					MDM_SUBCONTINENT    SCT   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              " ).append("\n"); 
		query.append("			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          " ).append("\n"); 
		query.append("			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD    " ).append("\n"); 
		query.append("			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )" ).append("\n"); 
		query.append("							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD" ).append("\n"); 
		query.append("            AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD" ).append("\n"); 
		query.append("			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                     /* Only Asisa Port */" ).append("\n"); 
		query.append("			AND		ROWNUM				=	1" ).append("\n"); 
		query.append("		)											dclptsql," ).append("\n"); 
		query.append("		RMK.DIFF_RMK								remark,				/*	REMARK		*/" ).append("\n"); 
		query.append("		" ).append("\n"); 
		query.append("		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("		'21001231'				firstetb," ).append("\n"); 
		query.append("		VD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("FROM	(		" ).append("\n"); 
		query.append("			SELECT	L2, L1, M0, R1, R2" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT  " ).append("\n"); 
		query.append("								LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2,                                             " ).append("\n"); 
		query.append("								LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1,                                             " ).append("\n"); 
		query.append("								PLN_YR||PLN_WK										        M0," ).append("\n"); 
		query.append("								LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1,                                             " ).append("\n"); 
		query.append("								LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2                                          " ).append("\n"); 
		query.append("						FROM	EQR_WK_PRD    " ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("			WHERE	M0	=	@[week]		/* ________________ Parameter Week */" ).append("\n"); 
		query.append("		)					DV," ).append("\n"); 
		query.append("		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("		EQR_MTY_COD_VVD		SV," ).append("\n"); 
		query.append("		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("WHERE	VD.N1ST_ETB_YRWK IN ( DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */" ).append("\n"); 
		query.append("--AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		*/" ).append("\n"); 
		query.append("AND		VD.VSL_CD			=	PT.VSL_CD		" ).append("\n"); 
		query.append("AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	" ).append("\n"); 
		query.append("AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	" ).append("\n"); 
		query.append("AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	" ).append("\n"); 
		query.append("AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("AND		VD.VSL_CD			=	SV.VSL_CD			(+)" ).append("\n"); 
		query.append("AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("AND		'S'					=	SV.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */" ).append("\n"); 
		query.append("AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("WHERE RN=1 " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WITH DIVISION AS " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("	SELECT	L2, L1, M0, R1, R2" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("				SELECT" ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1," ).append("\n"); 
		query.append("						PLN_YR||PLN_WK										        M0," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2" ).append("\n"); 
		query.append("				FROM	EQR_WK_PRD" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("	WHERE	M0	=	@[week]	" ).append("\n"); 
		query.append(")	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT WEEKDIVISION" ).append("\n"); 
		query.append("      ,WEEK" ).append("\n"); 
		query.append("      ,DIV" ).append("\n"); 
		query.append("      ,VVD" ).append("\n"); 
		query.append("      ,LANE" ).append("\n"); 
		query.append("      ,REMARKFLAG" ).append("\n"); 
		query.append("      ,DCLPTSQL" ).append("\n"); 
		query.append("      ,REMARK" ).append("\n"); 
		query.append("      ,CODCFMCTSCD" ).append("\n"); 
		query.append("      ,FIRSTETB" ).append("\n"); 
		query.append("      ,MNLINPFLG" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT WEEKDIVISION" ).append("\n"); 
		query.append("      ,WEEK" ).append("\n"); 
		query.append("      ,DIV" ).append("\n"); 
		query.append("      ,VVD" ).append("\n"); 
		query.append("      ,LANE" ).append("\n"); 
		query.append("      ,REMARKFLAG" ).append("\n"); 
		query.append("      ,DCLPTSQL" ).append("\n"); 
		query.append("      ,REMARK" ).append("\n"); 
		query.append("      ,CODCFMCTSCD" ).append("\n"); 
		query.append("      ,FIRSTETB" ).append("\n"); 
		query.append("      ,MNLINPFLG" ).append("\n"); 
		query.append("      ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(  " ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )" ).append("\n"); 
		query.append("		INDEX ( ORG XPKVSK_VSL_PORT_SKD )" ).append("\n"); 
		query.append("		INDEX ( OCNT XPKMDM_COUNTRY )" ).append("\n"); 
		query.append("		INDEX ( OSCNT XPKMDM_SUBCONTINENT )" ).append("\n"); 
		query.append("		INDEX ( WEK XAK1EQR_WK_PRD )" ).append("\n"); 
		query.append("		*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L2,	'1'," ).append("\n"); 
		query.append("										DIV.L1,	'2'," ).append("\n"); 
		query.append("										DIV.M0,	'3'," ).append("\n"); 
		query.append("										DIV.R1,	'4'," ).append("\n"); 
		query.append("										DIV.R2,	'5'," ).append("\n"); 
		query.append("												NULL) weekDivision," ).append("\n"); 
		query.append("												/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd," ).append("\n"); 
		query.append("		ORG.SLAN_CD						lane,	/*	LANE		*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	" ).append("\n"); 
		query.append("		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */" ).append("\n"); 
		query.append("		RMK.DIFF_RMK			remark," ).append("\n"); 
		query.append("		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("		DST.VPS_ETB_DT			firstetb," ).append("\n"); 
		query.append("		EVD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM	" ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT	" ).append("\n"); 
		query.append("					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */" ).append("\n"); 
		query.append("					VPS2.SLAN_CD							SLAN_CD     ," ).append("\n"); 
		query.append("					VPS2.VSL_CD								VSL_CD      ,			" ).append("\n"); 
		query.append("					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		" ).append("\n"); 
		query.append("					VPS2.SKD_DIR_CD							SKD_DIR_CD	, " ).append("\n"); 
		query.append("					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	," ).append("\n"); 
		query.append("					" ).append("\n"); 
		query.append("					VPS2.CLPT_SEQ							CLPT_SEQ    ,	" ).append("\n"); 
		query.append("					/*" ).append("\n"); 
		query.append("					VPS2.VPS_PORT_CD						VPS_PORT_CD ," ).append("\n"); 
		query.append("					*/" ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("						FROM    VSK_VSL_PORT_SKD    VPS1" ).append("\n"); 
		query.append("						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD" ).append("\n"); 
		query.append("						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO" ).append("\n"); 
		query.append("						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD" ).append("\n"); 
		query.append("						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("						AND     ROWNUM = 1" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("					)										FM_PKEY												" ).append("\n"); 
		query.append("			FROM	" ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("						SELECT	M2_START	START_DATE," ).append("\n"); 
		query.append("								P2_END 		END_DATE				" ).append("\n"); 
		query.append("						FROM	(" ).append("\n"); 
		query.append("									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ " ).append("\n"); 
		query.append("											LAG(WK_ST_DT,2)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START,                                             " ).append("\n"); 
		query.append("											PLN_YR||PLN_WK										CUR_WEEK," ).append("\n"); 
		query.append("											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                 " ).append("\n"); 
		query.append("									FROM	EQR_WK_PRD    " ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("						WHERE	CUR_WEEK	=	@[week]		" ).append("\n"); 
		query.append("					)					PERIOD	," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("					VSK_VSL_PORT_SKD	VPS2,	" ).append("\n"); 
		query.append("					MDM_COUNTRY			CNT2,	" ).append("\n"); 
		query.append("					MDM_SUBCONTINENT	SCNT2			" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')" ).append("\n"); 
		query.append("										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */" ).append("\n"); 
		query.append("			AND		VPS2.CLPT_SEQ		<>	'1'" ).append("\n"); 
		query.append("			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD" ).append("\n"); 
		query.append("			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    " ).append("\n"); 
		query.append("		" ).append("\n"); 
		query.append("		)					DST		," ).append("\n"); 
		query.append("		VSK_VSL_PORT_SKD	ORG		," ).append("\n"); 
		query.append("		MDM_COUNTRY			OCNT	,	" ).append("\n"); 
		query.append("		MDM_SUBCONTINENT	OSCNT	," ).append("\n"); 
		query.append("		--MDM_DTL_REV_LANE	RLN		," ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("            SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ " ).append("\n"); 
		query.append("					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD" ).append("\n"); 
		query.append("            FROM	BSA_VVD_MST   -- 108 건" ).append("\n"); 
		query.append("			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			" ).append("\n"); 
		query.append("		)                   TRD     ," ).append("\n"); 
		query.append("		EQR_WK_PRD			WEK		," ).append("\n"); 
		query.append("		DIVISION            DIV     ," ).append("\n"); 
		query.append("		EQR_MTY_COD_VVD		EVD		," ).append("\n"); 
		query.append("		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("WHERE   ORG.VSL_CD			=	DST.VSL_CD" ).append("\n"); 
		query.append("AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO" ).append("\n"); 
		query.append("AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD" ).append("\n"); 
		query.append("AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)" ).append("\n"); 
		query.append("AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)" ).append("\n"); 
		query.append("AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD" ).append("\n"); 
		query.append("-- AND     OSCNT.CONTI_CD		<>    'A'  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND		ORG.SLAN_CD			=	TRD.LANE_CD" ).append("\n"); 
		query.append("AND	(" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		OR		" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )" ).append("\n"); 
		query.append("        OR" ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		OR " ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )        " ).append("\n"); 
		query.append("		OR" ).append("\n"); 
		query.append("	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) " ).append("\n"); 
		query.append("		OR		" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("        OR" ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("		OR " ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("#if (${trade} != '')" ).append("\n"); 
		query.append("AND		TRD.TRD_CD			=		@[trade]		/* ________________ Parameter Trade Code */	" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') " ).append("\n"); 
		query.append("AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT" ).append("\n"); 
		query.append("							AND			WEK.WK_END_DT" ).append("\n"); 
		query.append("AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)" ).append("\n"); 
		query.append("AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)" ).append("\n"); 
		query.append("AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) " ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		DECODE( VD.N1ST_ETB_YRWK	,	DV.L2,	'1'," ).append("\n"); 
		query.append("										DV.L1,	'2'," ).append("\n"); 
		query.append("										DV.M0,	'3'," ).append("\n"); 
		query.append("										DV.R1,	'4'," ).append("\n"); 
		query.append("										DV.R2,	'5'," ).append("\n"); 
		query.append("											NULL)	weekDivision,		/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/" ).append("\n"); 
		query.append("		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/" ).append("\n"); 
		query.append("		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			" ).append("\n"); 
		query.append("		VD.SLAN_CD									lane,				/*	LANE		*/" ).append("\n"); 
		query.append("		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/" ).append("\n"); 
		query.append("	--	1 dclptsql," ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("					VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("			FROM	VSK_VSL_PORT_SKD	VPS1," ).append("\n"); 
		query.append("			        MDM_COUNTRY         CNT,    " ).append("\n"); 
		query.append("					MDM_SUBCONTINENT    SCT   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              " ).append("\n"); 
		query.append("			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          " ).append("\n"); 
		query.append("			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD" ).append("\n"); 
		query.append("			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    " ).append("\n"); 
		query.append("			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )" ).append("\n"); 
		query.append("							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD" ).append("\n"); 
		query.append("            AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD" ).append("\n"); 
		query.append("			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */" ).append("\n"); 
		query.append("			AND		ROWNUM				=	1" ).append("\n"); 
		query.append("		)											dclptsql," ).append("\n"); 
		query.append("		RMK.DIFF_RMK								remark,				/*	REMARK		*/" ).append("\n"); 
		query.append("		" ).append("\n"); 
		query.append("		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/" ).append("\n"); 
		query.append("		'21001231'				firstetb," ).append("\n"); 
		query.append("		VD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("FROM    DIVISION            DV," ).append("\n"); 
		query.append("		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("		EQR_MTY_COD_VVD		SV," ).append("\n"); 
		query.append("		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("WHERE	VD.N1ST_ETB_YRWK IN ( DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */" ).append("\n"); 
		query.append("--AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */" ).append("\n"); 
		query.append("AND		VD.VSL_CD			=	PT.VSL_CD		" ).append("\n"); 
		query.append("AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	" ).append("\n"); 
		query.append("AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	" ).append("\n"); 
		query.append("AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	" ).append("\n"); 
		query.append("AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("AND		VD.VSL_CD			=	SV.VSL_CD			(+)" ).append("\n"); 
		query.append("AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("AND		'S'					=	SV.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */" ).append("\n"); 
		query.append("AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* To Get Arelady Simulated Data Without Vessel Schedule */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */" ).append("\n"); 
		query.append("        DISTINCT		" ).append("\n"); 
		query.append("		DECODE	( " ).append("\n"); 
		query.append("					VD.N1ST_ETB_YRWK , DV.L2, '1'," ).append("\n"); 
		query.append("					DV.L1, '2'," ).append("\n"); 
		query.append("					DV.M0, '3'," ).append("\n"); 
		query.append("					DV.R1, '4'," ).append("\n"); 
		query.append("					DV.R2, '5'," ).append("\n"); 
		query.append("					NULL" ).append("\n"); 
		query.append("				)									weekDivision,	/* WEEK_DIV */" ).append("\n"); 
		query.append("		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */" ).append("\n"); 
		query.append("		VD.COD_CFM_STS_CD							div			,	/* DIV   */" ).append("\n"); 
		query.append("		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   " ).append("\n"); 
		query.append("		VD.SLAN_CD									lane		,	/* LANE  */" ).append("\n"); 
		query.append("		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */" ).append("\n"); 
		query.append("		1 dclptsql," ).append("\n"); 
		query.append("		RMK.DIFF_RMK									remark		,	/* REMARK  */" ).append("\n"); 
		query.append("		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("		VD.N1ST_ETB_YRWK							firstetb," ).append("\n"); 
		query.append("		VD.MNL_INP_FLG								mnlinpflg" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM    DIVISION            DV," ).append("\n"); 
		query.append("		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("WHERE	VD.N1ST_ETB_YRWK IN ( DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */" ).append("\n"); 
		query.append("AND		VD.VSL_CD			=	PT.VSL_CD  " ).append("\n"); 
		query.append("AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO " ).append("\n"); 
		query.append("AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD " ).append("\n"); 
		query.append("AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD " ).append("\n"); 
		query.append("AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */" ).append("\n"); 
		query.append("AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("WHERE RN=1 " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("ORDER BY weekDivision,lane,codcfmctscd,firstetb" ).append("\n"); 

	}
}