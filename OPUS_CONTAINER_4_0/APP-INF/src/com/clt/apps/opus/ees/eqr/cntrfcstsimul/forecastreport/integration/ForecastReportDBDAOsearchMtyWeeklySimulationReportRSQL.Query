<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ForecastReportDBDAOsearchMtyWeeklySimulationReportRSQL">
			<desc><![CDATA[weekly simulation 의 과거 주차 조회]]></desc>
			<sql><![CDATA[
SELECT A.LOC_CD
	  ,A.LOC_GRP_CD
	  ,A.CODE
  	  ,A.NAME
	  ,A.SORT
      ,A.TREE
      -- BA, SP 는 화면에서 계산, ST 는 LOC_CD 와 1대1 매치
#foreach( $key in ${arrweek})      
      ,DECODE(A.CODE,'BA','','SP','','ST',RTO.D2_RTO_$key,A.D2$key) D2$key
      ,DECODE(A.CODE,'BA','','SP','','ST',RTO.D4_RTO_$key,A.D4$key) D4$key
      ,DECODE(A.CODE,'BA','','SP','','ST',RTO.D5_RTO_$key,A.D5$key) D5$key
      ,DECODE(A.CODE,'BA','','SP','','ST',RTO.D7_RTO_$key,A.D7$key) D7$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.R2$key) R2$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.R5$key) R5$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.R9$key) R9$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.O2$key) O2$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.S2$key) S2$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.O4$key) O4$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.S4$key) S4$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.F2$key) F2$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.A2$key) A2$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.F4$key) F4$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.A4$key) A4$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.F5$key) F5$key
      ,DECODE(A.CODE,'BA','','SP','','ST','',A.O5$key) O5$key
#end      
	  ,A.ORI_LOC_CD
	  ,A.ORI_ORI_LOC_CD
	  ,A.ORI_ORI_ORI_LOC_CD
FROM 
(
    SELECT CASE WHEN LOC_CD IS NULL THEN 'TOTAL'
    			ELSE LOC_CD||'('||LOC_GRP_CD||')' END  LOC_CD
    	  ,LOC_GRP_CD
    	  ,CODE
      	  ,NAME
    	  ,SORT
          ,CASE WHEN LOC_CD IS NULL THEN NULL
    			ELSE '+' END TREE
    #foreach( $key in ${arrweek})      
          ,D2$key
          ,D4$key
          ,D5$key
          ,D7$key
          ,R2$key
          ,R5$key
          ,R9$key
          ,O2$key
          ,S2$key
          ,O4$key
          ,S4$key
          ,F2$key
          ,A2$key
          ,F4$key
          ,A4$key
          ,F5$key
          ,O5$key
    #end      
    	  ,@[condition_value] ORI_LOC_CD
    	  ,@[ori_loc_cd] ORI_ORI_LOC_CD
    	  ,@[ori_ori_loc_cd] ORI_ORI_ORI_LOC_CD
    FROM
    (
        --RCC : ALL일때 표현 (RCC : ALL)
    #if ( ${condition_value} == '' && ${present_flag} == 'L')
        SELECT A.RCC_CD LOC_CD
              ,'R' LOC_GRP_CD
              ,A.CODE
              ,A.NAME
              ,A.SORT
          #foreach( $key in ${arrweek})
               -- Balance, EQ Supply Ratio PFMC 경우 공란 
              ,NVL(SUM(A.D2$key),0) D2$key
              ,NVL(SUM(A.D4$key),0) D4$key
              ,NVL(SUM(A.D5$key),0) D5$key
              ,NVL(SUM(A.D7$key),0) D7$key
              ,NVL(SUM(A.R2$key),0) R2$key
              ,NVL(SUM(A.R5$key),0) R5$key
              ,NVL(SUM(A.R9$key),0) R9$key
              ,NVL(SUM(A.O2$key),0) O2$key
              ,NVL(SUM(A.O4$key),0) O4$key
              ,NVL(SUM(A.O5$key),0) O5$key
              ,NVL(SUM(A.S2$key),0) S2$key
              ,NVL(SUM(A.S4$key),0) S4$key
              ,NVL(SUM(A.F2$key),0) F2$key
              ,NVL(SUM(A.F4$key),0) F4$key
              ,NVL(SUM(A.F5$key),0) F5$key
              ,NVL(SUM(A.A2$key),0) A2$key
              ,NVL(SUM(A.A4$key),0) A4$key  
          #end      
        FROM
        (
    #end
        
            SELECT B.LOC_CD
                  ,(SELECT DISTINCT RCC_CD FROM MDM_EQ_ORZ_CHT X WHERE X.LCC_CD = B.LOC_CD) RCC_CD
                  ,B.LOC_GRP_CD
                  ,B.CODE
                  ,B.NAME
                  ,B.SORT
            #foreach( $key in ${arrweek})      
                  -- 가변쿼리        
                  ,NVL(SUM(A.D2$key),0) D2$key
                  ,NVL(SUM(A.D4$key),0) D4$key
                  ,NVL(SUM(A.D5$key),0) D5$key
                  ,NVL(SUM(A.D7$key),0) D7$key
                  ,NVL(SUM(A.R2$key),0) R2$key
                  ,NVL(SUM(A.R5$key),0) R5$key
                  ,NVL(SUM(A.R9$key),0) R9$key
                  ,NVL(SUM(A.O2$key),0) O2$key
                  ,NVL(SUM(A.O4$key),0) O4$key
                  ,NVL(SUM(A.O5$key),0) O5$key
                  ,NVL(SUM(A.S2$key),0) S2$key
                  ,NVL(SUM(A.S4$key),0) S4$key
                  ,NVL(SUM(A.F2$key),0) F2$key
                  ,NVL(SUM(A.F4$key),0) F4$key
                  ,NVL(SUM(A.F5$key),0) F5$key
                  ,NVL(SUM(A.A2$key),0) A2$key
                  ,NVL(SUM(A.A4$key),0) A4$key    
            #end
            FROM
            (
                SELECT A.LOC_CD
                      ,A.LOC_GRP_CD
                      ,A.WKY_SIM_TP_CD
            #foreach( $key in ${arrweek})          
                      -- 가변쿼리
                #if(${period} == 'W')
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'D2$key', A.CNTR_QTY),0)) D2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'D4$key', A.CNTR_QTY),0)) D4$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'D5$key', A.CNTR_QTY),0)) D5$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'D7$key', A.CNTR_QTY),0)) D7$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'R2$key', A.CNTR_QTY),0)) R2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'R5$key', A.CNTR_QTY),0)) R5$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'R9$key', A.CNTR_QTY),0)) R9$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'O2$key', A.CNTR_QTY),0)) O2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'O4$key', A.CNTR_QTY),0)) O4$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'O5$key', A.CNTR_QTY),0)) O5$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'S2$key', A.CNTR_QTY),0)) S2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'S4$key', A.CNTR_QTY),0)) S4$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'F2$key', A.CNTR_QTY),0)) F2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'F4$key', A.CNTR_QTY),0)) F4$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'F5$key', A.CNTR_QTY),0)) F5$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'A2$key', A.CNTR_QTY),0)) A2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.WEEK, 'A4$key', A.CNTR_QTY),0)) A4$key
                #elseif(${period} == 'M')
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'D2$key', A.CNTR_QTY),0)) D2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'D4$key', A.CNTR_QTY),0)) D4$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'D5$key', A.CNTR_QTY),0)) D5$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'D7$key', A.CNTR_QTY),0)) D7$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'R2$key', A.CNTR_QTY),0)) R2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'R5$key', A.CNTR_QTY),0)) R5$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'R9$key', A.CNTR_QTY),0)) R9$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'O2$key', A.CNTR_QTY),0)) O2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'O4$key', A.CNTR_QTY),0)) O4$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'O5$key', A.CNTR_QTY),0)) O5$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'S2$key', A.CNTR_QTY),0)) S2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'S4$key', A.CNTR_QTY),0)) S4$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'F2$key', A.CNTR_QTY),0)) F2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'F4$key', A.CNTR_QTY),0)) F4$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'F5$key', A.CNTR_QTY),0)) F5$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'A2$key', A.CNTR_QTY),0)) A2$key
                      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD||A.MONTH, 'A4$key', A.CNTR_QTY),0)) A4$key
                #end
            #end
                FROM
                (
                #if(${period} == 'W')
                    SELECT A.FCAST_YRWK WEEK
                #elseif(${period} == 'M')
                    SELECT C.PLN_YR||C.PLN_MON MONTH
                #end
                          ,A.LOC_CD
                          ,A.LOC_GRP_CD
                          ,DECODE(A.WKY_SIM_TP_CD,'MR','RI',A.WKY_SIM_TP_CD) WKY_SIM_TP_CD -- 2013.06.26 RepoIn은 EQR_CTRL_MTY_WKY_SIM 에서 VD+MR 데이터 조회 
                          ,A.CNTR_TPSZ_CD
                          ,A.CNTR_QTY     
                    FROM EQR_CTRL_MTY_WKY_SIM A
                        ,(
                         #if ( ${present_flag} == 'L') 
                             SELECT DISTINCT LCC_CD LOC_CD 
                         #elseif( ${present_flag} == 'E' )
                             SELECT DISTINCT ECC_CD LOC_CD
                         #else
                             SELECT DISTINCT SCC_CD LOC_CD  
                         #end                 
                             FROM MDM_EQ_ORZ_CHT 
                             WHERE RCC_CD IN ('CNSHA', 'HKHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩
                             AND  DELT_FLG = 'N'
            
                       #if( ${condition_value} != '' ) -- RCC : ALL 일대는 쿼리 감춤
                         #if(${condition_flag} == 'R')
                    		 AND   RCC_CD = @[condition_value]
            
                		 #elseif( ${condition_flag} == 'L' )
                             #if    ( ${condition_value} == 'CNSZP' )
                             AND   ECC_CD IN ('CNCWN','CNSHU','CNYIT')
                             #elseif( ${condition_value} == 'JPTYO' )
                             AND   ECC_CD IN ('JPTYO','JPYOK')
                             #elseif( ${condition_value} == 'JPOSA' )
                             AND   ECC_CD IN ('JPOSA','JPUKB','JPNGO')
                             #else
                             AND   LCC_CD = @[condition_value]
                             #end
            
                		 #elseif( ${condition_flag} == 'E')
                             #if    ( ${condition_value} == 'CNCWN' )
                             AND   SCC_CD = 'CNCWN'
                             #elseif( ${condition_value} == 'KRPUS' )
                             AND   SCC_CD = 'KRPUS'
                             #elseif( ${condition_value} == 'KRKAN' )
                             AND   SCC_CD = 'KRKAN'
                             #else
                    		 AND   ECC_CD = @[condition_value]        
                             #end 
            
                		 #else    --SCC
                    		 AND   SCC_CD = @[condition_value]    
                		 #end
                       #end
                           
                             -- 지점 office 검색범위 (CDO_EQ, 지역본부 OFFICE 는 아래조건을 제거함)
                         #if( ${level_cd} == '3' ) 
                             AND LCC_CD IN (
                                               SELECT LCC_CD
                                               FROM MDM_EQ_ORZ_CHT                         
                                               WHERE SCC_CD IN (                                     
                                                                   SELECT SCC_CD                      
                                                                   FROM MDM_LOCATION                  
                                                                   WHERE LOC_CD IN ( SELECT LOC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = @[ofc_cd] )                            
                                                               )      
                                           )
                         #end
            
            
                         ) B
                        ,EQR_WK_PRD C
                    WHERE A.FCAST_YRWK = C.PLN_YR||C.PLN_WK  
                    AND   A.CFM_FLG    = 'Y'  -- 배치를 통해 저장이 완료
                    #if(${period} == 'W')   
                    -- WEEK 일때  
                    AND   C.PLN_YR||C.PLN_WK BETWEEN @[fmdate] AND @[todate] 
                    #elseif(${period} == 'M')
                    -- MONTH 일때
                    AND   C.PLN_YR||C.PLN_MON BETWEEN @[fmdate] AND @[todate]   
                    #end             
                    AND   A.LOC_GRP_CD = @[present_flag]  
                    AND   A.LOC_CD     = B.LOC_CD
                ) A
             
                GROUP BY A.LOC_CD
                      ,A.LOC_GRP_CD
                      ,A.WKY_SIM_TP_CD 
            ) A
            ,(
                SELECT A.LOC_CD
                      ,B.CODE
                      ,B.NAME
                      ,B.SORT
                      ,@[present_flag] LOC_GRP_CD
                FROM      
                (
                  #if( ${present_flag} == 'L'  )  -- ALL
                    SELECT DISTINCT LCC_CD LOC_CD
                  #elseif( ${present_flag} == 'E' )   
                    SELECT DISTINCT ECC_CD LOC_CD  
                  #else  --SCC일때
                    SELECT DISTINCT SCC_CD LOC_CD   
                  #end       
                    FROM MDM_EQ_ORZ_CHT
                    WHERE RCC_CD IN ('CNSHA', 'HKHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩
                    AND  DELT_FLG = 'N'
                    -- 지점 office 검색범위 (CDO_EQ, 지역본부 OFFICE 는 아래조건을 제거함)
                  #if( ${level_cd} == '3' ) 
                    AND LCC_CD IN (
                                     SELECT LCC_CD
                                     FROM MDM_EQ_ORZ_CHT                         
                                     WHERE SCC_CD IN (                                     
                                                         SELECT SCC_CD                      
                                                         FROM MDM_LOCATION                  
                                                         WHERE LOC_CD IN ( SELECT LOC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = @[ofc_cd] )                            
                                                      )      
                                  )
                  #end        
                    
                       #if( ${condition_value} != '' ) -- RCC : ALL 일대는 쿼리 감춤
                         #if(${condition_flag} == 'R')
                    		 AND   RCC_CD = @[condition_value]
            
                		 #elseif( ${condition_flag} == 'L' )
                             #if    ( ${condition_value} == 'CNSZP' )
                             AND   ECC_CD IN ('CNCWN','CNSHU','CNYIT')
                             #elseif( ${condition_value} == 'JPTYO' )
                             AND   ECC_CD IN ('JPTYO','JPYOK')
                             #elseif( ${condition_value} == 'JPOSA' )
                             AND   ECC_CD IN ('JPOSA','JPUKB','JPNGO')
                             #else
                             AND   LCC_CD = @[condition_value]
                             #end
            
                		 #elseif( ${condition_flag} == 'E')
                             #if    ( ${condition_value} == 'CNCWN' )
                             AND   SCC_CD = 'CNCWN'
                             #elseif( ${condition_value} == 'KRPUS' )
                             AND   SCC_CD = 'KRPUS'
                             #elseif( ${condition_value} == 'KRKAN' )
                             AND   SCC_CD = 'KRKAN'
                             #else
                    		 AND   ECC_CD = @[condition_value]        
                             #end 
            
                		 #else    --SCC
                    		 AND   SCC_CD = @[condition_value]    
                		 #end
                       #end
                    
                ) A,
                (
                    SELECT 'IN' CODE, 'Inventory' NAME,       1 SORT FROM DUAL UNION ALL
                    SELECT 'RI' CODE, 'Reposition In' NAME,   2 SORT FROM DUAL UNION ALL
                    SELECT 'OT' CODE, 'Other(LT/ST/OW)' NAME, 3 SORT FROM DUAL UNION ALL
                    SELECT 'IF' CODE, 'MG Performance' NAME,  4 SORT FROM DUAL UNION ALL
                    SELECT 'OF' CODE, 'OP Performance' NAME,  5 SORT FROM DUAL UNION ALL
                    SELECT 'RO' CODE, 'Reposition Out' NAME,  6 SORT FROM DUAL UNION ALL
                    SELECT 'IC' CODE, 'IC' NAME,              7 SORT FROM DUAL UNION ALL  
                    SELECT 'BA' CODE, 'Balance' NAME,         8 SORT FROM DUAL UNION ALL
                    SELECT 'SP' CODE, 'EQ Supply Ratio (PFMC)'   NAME,   9 SORT FROM DUAL UNION ALL -- 2013.06.26
                    SELECT 'ST' CODE, 'EQ Supply Ratio (Target)' NAME,  10 SORT FROM DUAL           -- 2013.06.26         
                ) B
                ORDER BY LOC_CD,SORT
            ) B
            WHERE A.LOC_CD(+)        = B.LOC_CD
            AND   A.WKY_SIM_TP_CD(+) = B.CODE
            
            -- RCC : ALL일때 표현 (RCC : ALL)
            #if ( ${condition_value} == '' && ${present_flag} == 'L')  
            GROUP BY B.LOC_CD -- LOC CD 별 전체합
            #else
            GROUP BY ROLLUP(B.LOC_CD)
            #end
                  ,B.LOC_GRP_CD
                  ,B.CODE
                  ,B.NAME
                  ,B.SORT
            
            -- RCC : ALL일때 표현 (RCC : ALL)
    #if ( ${condition_value} == '' && ${present_flag} == 'L')        
        ) A
        GROUP BY ROLLUP(A.RCC_CD) -- RCC CD 별 전체합
                ,A.LOC_GRP_CD
                ,A.CODE
                ,A.NAME
                ,A.SORT
    #end      
        
        ORDER BY 1
                ,SORT
    )
) A,
(
    SELECT LOC_GRP_CD
          ,LOC_CD
    #foreach( $key in ${arrweek})      
          ,MAX(D2_RTO_$key) D2_RTO_$key
          ,MAX(D4_RTO_$key) D4_RTO_$key
          ,MAX(D5_RTO_$key) D5_RTO_$key
          ,MAX(D7_RTO_$key) D7_RTO_$key
    #end 
    FROM
    (
        SELECT WK
              ,MON
              ,LOC_GRP_CD
              ,LOC_CD
        #foreach( $key in ${arrweek})      
              ,DECODE(WK,$key,D2_SPL_RTO,D2_SPL_RTO,'') D2_RTO_$key
              ,DECODE(WK,$key,D2_SPL_RTO,D4_SPL_RTO,'') D4_RTO_$key
              ,DECODE(WK,$key,D2_SPL_RTO,D5_SPL_RTO,'') D5_RTO_$key
              ,DECODE(WK,$key,D2_SPL_RTO,D7_SPL_RTO,'') D7_RTO_$key
        #end 
        FROM
        (
            SELECT B.PLN_YR||B.PLN_WK WK
                  ,B.PLN_YR||B.PLN_MON MON
                  ,A.LOC_GRP_CD
                  ,A.LOC_CD
                  ,D2_SPL_RTO
                  ,D4_SPL_RTO
                  ,D5_SPL_RTO
                  ,D7_SPL_RTO
            FROM EQR_CTRL_SPL_RTO A
                ,EQR_WK_PRD B
            WHERE B.PLN_YR||B.PLN_WK BETWEEN A.FM_YRWK AND A.TO_YRWK
            AND   A.SPL_RTO_SEQ = (SELECT MAX(SPL_RTO_SEQ) FROM EQR_CTRL_SPL_RTO) -- 최대 SPL_RTO_SEQ 를 사용
        ) 
        #if(${period} == 'W')
        WHERE WK BETWEEN @[fmdate] AND @[todate] -- WEEK  일때
        #elseif(${period} == 'M')
        WHERE MON BETWEEN @[fmdate] AND @[todate] -- MONTH 일때
        #end
    )
    GROUP BY LOC_GRP_CD
            ,LOC_CD
) RTO
 
WHERE SUBSTR(A.LOC_CD,1,5) = RTO.LOC_CD(+)
AND   SUBSTR(A.LOC_CD,7,1) = RTO.LOC_GRP_CD(+)
ORDER BY CASE WHEN LOC_CD = 'TOTAL' THEN 2 ELSE 1 END
        ,1
        ,SORT			]]></sql>
			<params>
				<param name="condition_value" type="12" value="" out="N"/>
				<param name="ori_loc_cd" type="12" value="" out="N"/>
				<param name="ori_ori_loc_cd" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="fmdate" type="12" value="" out="N"/>
				<param name="todate" type="12" value="" out="N"/>
				<param name="present_flag" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
