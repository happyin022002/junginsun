<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChassisMgsetAgreementDBDAOSearchMGSAgreementLseRtDataRSQL">
			<desc><![CDATA[ChassisMgsetAgreementDB.SearchMGSAgreementLseRtData]]></desc>
			<sql><![CDATA[
SELECT
    NVL(SUM(EQ_TPSZ_CD1),0) AS EQ_TPSZ_CD1,
    NVL(SUM(EQ_TPSZ_CD2),0) AS EQ_TPSZ_CD2,
    NVL(SUM(EQ_TPSZ_CD3),0) AS EQ_TPSZ_CD3,
    NVL(SUM(EQ_TPSZ_CD4),0) AS EQ_TPSZ_CD4,
    NVL(SUM(EQ_TPSZ_CD5),0) AS EQ_TPSZ_CD5,
    NVL(SUM(EQ_TPSZ_CD6),0) AS EQ_TPSZ_CD6,
    NVL(SUM(EQ_TPSZ_CD7),0) AS EQ_TPSZ_CD7,
    NVL(SUM(EQ_TPSZ_CD8),0) AS EQ_TPSZ_CD8,
    NVL(SUM(EQ_TPSZ_CD9),0) AS EQ_TPSZ_CD9,
    NVL(SUM(EQ_TPSZ_CD10),0) AS EQ_TPSZ_CD10,
    NVL(SUM(EQ_TPSZ_CD11),0) AS EQ_TPSZ_CD11,
    NVL(SUM(EQ_TPSZ_CD12),0) AS EQ_TPSZ_CD12,
    NVL(SUM(EQ_TPSZ_CD13),0) AS EQ_TPSZ_CD13,
    NVL(SUM(EQ_TPSZ_CD14),0) AS EQ_TPSZ_CD14,
    NVL(SUM(EQ_TPSZ_CD15),0) AS EQ_TPSZ_CD15,
    NVL(SUM(EQ_TPSZ_CD16),0) AS EQ_TPSZ_CD16,
    NVL(SUM(EQ_TPSZ_CD17),0) AS EQ_TPSZ_CD17,
    NVL(SUM(EQ_TPSZ_CD18),0) AS EQ_TPSZ_CD18,
    NVL(SUM(EQ_TPSZ_CD19),0) AS EQ_TPSZ_CD19,
    NVL(SUM(EQ_TPSZ_CD20),0) AS EQ_TPSZ_CD20
FROM (
        SELECT
        Y.NO,
        CASE WHEN T1.DP_SEQ = '1' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD1,
        CASE WHEN T1.DP_SEQ = '2' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD2,
        CASE WHEN T1.DP_SEQ = '3' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD3,
        CASE WHEN T1.DP_SEQ = '4' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD4,
        CASE WHEN T1.DP_SEQ = '5' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD5,
        CASE WHEN T1.DP_SEQ = '6' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD6,
        CASE WHEN T1.DP_SEQ = '7' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD7,
        CASE WHEN T1.DP_SEQ = '8' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD8,
        CASE WHEN T1.DP_SEQ = '9' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD9,
        CASE WHEN T1.DP_SEQ = '10' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD10,
        CASE WHEN T1.DP_SEQ = '11' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD11,
        CASE WHEN T1.DP_SEQ = '12' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD12,
        CASE WHEN T1.DP_SEQ = '13' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD13,
        CASE WHEN T1.DP_SEQ = '14' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD14,
        CASE WHEN T1.DP_SEQ = '15' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD15,
        CASE WHEN T1.DP_SEQ = '16' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD16,
        CASE WHEN T1.DP_SEQ = '17' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD17,
        CASE WHEN T1.DP_SEQ = '18' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD18,
        CASE WHEN T1.DP_SEQ = '19' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD19,
        CASE WHEN T1.DP_SEQ = '20' THEN DECODE(Y.NO,'1',T1.MGST_BLDP_RT_AMT,'2',T1.MGST_LSE_FX_RT_AMT) END AS EQ_TPSZ_CD20
    FROM
        (
        SELECT  B.EQ_TPSZ_CD, 
                B.ONH_INIT_VAL_AMT,
				B.MGST_LSE_FX_RT_AMT,
				B.MGST_BLDP_RT_AMT,
				B.MGST_POTC_SCG_RT_AMT,
				B.MGST_PRTC_SCG_RT_AMT,G.DP_SEQ
		FROM    CGM_AGREEMENT A, CGM_AGMT_LSE_RT B,CGM_EQ_TP_SZ G
        WHERE   A.AGMT_OFC_CTY_CD = B.AGMT_OFC_CTY_CD
                AND A.AGMT_SEQ = B.AGMT_SEQ
                AND A.AGMT_VER_NO = B.AGMT_VER_NO
				AND B.EQ_TPSZ_CD = G.EQ_TPSZ_CD
                AND A.EQ_KND_CD = @[eq_knd_cd]
                AND A.AGMT_OFC_CTY_CD = @[agmt_ofc_cty_cd]
                AND A.AGMT_SEQ = @[agmt_seq]
				AND A.AGMT_VER_NO = @[agmt_ver_no]
        ) T1,
		(
			SELECT '1' AS NO FROM DUAL UNION SELECT	'2' AS NO FROM DUAL
		) Y
	) GROUP BY NO			]]></sql>
			<params>
				<param name="eq_knd_cd" type="12" value="" out="N"/>
				<param name="agmt_ofc_cty_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="2" value="" out="N"/>
				<param name="agmt_ver_no" type="2" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
