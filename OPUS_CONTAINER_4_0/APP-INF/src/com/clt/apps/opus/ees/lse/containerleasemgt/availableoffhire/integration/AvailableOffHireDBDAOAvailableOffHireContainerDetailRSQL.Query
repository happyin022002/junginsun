<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AvailableOffHireDBDAOAvailableOffHireContainerDetailRSQL">
			<desc><![CDATA[선택된 반납가능 대상 장비의 내역을 조회합니다.]]></desc>
			<sql><![CDATA[
WITH PARAM AS (
    SELECT  @[loc_case]       AS LOC_CASE,
            @[loc_tp]         AS LOC_TP,
            @[loc_cd]         AS LOC_CD,
            @[port_cd]        AS PORT_CD,
            @[slan_cd]        AS VSL_SLAN_CD,
            @[del_cd]         AS DEL_CD, 
            @[vvd_cd]         AS VVD_CD,
            @[estm_tp]        AS ESTM_TP, 
            REPLACE(@[str_estm_dt], '-', '')    AS STR_ESTM_DT,
            REPLACE(@[end_estm_dt], '-', '')    AS END_ESTM_DT,
            @[lstm_cd]        AS LSTM_CD,
            @[cntr_tpsz_cd]   AS CNTR_TPSZ_CD,
            @[cnmv_sts_cd]    AS CNMV_STS_CD,
            @[agmt_cty_cd]    AS AGMT_CTY_CD,
            @[agmt_seq]       AS AGMT_SEQ,
            @[vndr_seq]       AS VNDR_SEQ,
            @[used_dys]       AS USED_DYS,
            @[free_dys]       AS FREE_DYS,
            @[min_onh_dys_tp] AS MIN_ONH_DYS_TP
    FROM    DUAL    
), TEMP_DROP07 AS ( 
    SELECT  AGMT_CTY_CD, AGMT_SEQ, CNTR_NO, 1 AS AOFF_CNT
    FROM    LSE_AVAL_OFFH
    WHERE   OFFH_DUE_DT > TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -1)),'YYYYMMDD')                         
    AND     OFFH_STS_CD = 'C'
), TEMP_DROP09 AS (    
    SELECT  AGMT_CTY_CD, AGMT_SEQ, CNTR_NO, 1 AS AHOLD_CNT 
    FROM    LSE_AVAL_OFFH
    WHERE  (OFFH_DUE_DT > TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -1)), 'YYYYMMDD')
    OR      OFFH_DUE_DT IS NULL)
    AND     OFFH_STS_CD IN ('R','C')                            
), TEMP_DROP01 AS (
#if (${loc_case} == '0' || ${loc_case} == '1')
	SELECT  A.CNTR_NO, A.CNMV_YR, A.CNMV_ID_NO, A.CNMV_STS_CD AS MVMT_STS_CD,
            'N' AS OB_CNTR_FLG
            , CASE WHEN A.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN') THEN
                     DECODE(A.FULL_FLG, 'Y', NVL((SELECT MY.LOC_CD FROM MDM_YARD MY WHERE MY.YD_CD = D.MTY_RTN_YD_CD AND ROWNUM = 1), A.LOC_CD)
                                           , NVL((SELECT MY.LOC_CD FROM MDM_YARD MY WHERE MY.YD_CD = A.DEST_YD_CD AND ROWNUM = 1), A.LOC_CD)
                           )
                   ELSE
                     A.LOC_CD
              END AS SCC_CD
            , CASE WHEN A.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN') THEN
                     NVL(MST_LOC_FNC(SUBSTR(D.MTY_RTN_YD_CD, 1, 5), 'LCC'), A.LCC_CD)
                   ELSE
                     A.LCC_CD
              END  AS LCC_CD
            , CASE WHEN A.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN') THEN
                     NVL(MST_LOC_FNC(SUBSTR(D.MTY_RTN_YD_CD, 1, 5), 'RCC'), A.RCC_CD)
                   ELSE
                     A.RCC_CD
              END AS RCC_CD
            , A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, 
            A.AGMT_CTY_CD, A.AGMT_SEQ, A.LSTM_CD, A.CNTR_TPSZ_CD, NULL AS VSL_SLAN_CD,
            A.ONH_FREE_DYS, A.MIN_ONH_DYS, B.VNDR_SEQ, D.DEL_CD, D.POD_CD,
            A.CRNT_YD_CD, A.FULL_FLG, A.ONH_YD_CD, B.REF_NO,
            A.BKG_NO, A.CNMV_DT, D.DE_TERM_CD, A.ONH_DT, A.RF_MKR_SEQ, A.CNTR_AUTH_NO, D.MTY_RTN_YD_CD
    FROM    PARAM P,
            MST_CONTAINER A,
            LSE_AGREEMENT B,
            CIM_BOOKING_V D
    WHERE   1 = 1
    AND     A.FULL_FLG||TRIM(NVL2(D.BKG_NO, 'Y', 'N')) != 'YN'
    AND     A.AGMT_CTY_CD = B.AGMT_CTY_CD
    AND     A.AGMT_SEQ = B.AGMT_SEQ
    AND     A.BKG_NO = D.BKG_NO(+)
    AND     A.ACIAC_DIV_CD = 'A'
    AND     A.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN', 'MT')
#if (${rstr_usg_lbl} == '' && ${cntr_no} == '')
     AND     DECODE(A.LSTM_CD, 'ST', A.ONH_DT + NVL(A.MIN_ONH_DYS,0), A.ONH_DT ) < SYSDATE
     AND     DECODE(A.LSTM_CD, 'LT', B.LST_EXP_DT, SYSDATE -1) < SYSDATE
     AND     EXISTS ( SELECT 'X'
                           FROM LSE_AGMT_OFFH_PLC OP
                              , MDM_EQ_ORZ_CHT SUB
                              , MDM_LOCATION ML
                          WHERE A.AGMT_CTY_CD  = OP.AGMT_CTY_CD
                            AND A.AGMT_SEQ     = OP.AGMT_SEQ
                            AND A.CNTR_TPSZ_CD = OP.CNTR_TPSZ_CD                                                       
                            AND A.LSTM_CD      IN ('LT', 'ST')
                            AND CASE WHEN A.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN') THEN
                                          DECODE(A.FULL_FLG, 'Y', NVL((SELECT MY.LOC_CD FROM MDM_YARD MY WHERE MY.YD_CD = D.MTY_RTN_YD_CD AND ROWNUM = 1), A.LOC_CD)
                                                                , NVL((SELECT MY.LOC_CD FROM MDM_YARD MY WHERE MY.YD_CD = A.DEST_YD_CD AND ROWNUM = 1), A.LOC_CD)
                                                )
                                     ELSE
                                          A.LOC_CD
                                      END = ML.LOC_CD
                            AND ML.SCC_CD       = SUB.SCC_CD
                            AND DECODE (OP.EQ_LOC_TP_CD
                                          , 'AL', 'ALL'
                                          , 'CT', ML.CONTI_CD
                                          , 'ST', ML.SCONTI_CD
                                          , 'CN', ML.CNT_CD
                                          , 'RC', SUB.RCC_CD
                                          , 'LC', SUB.LCC_CD
                                          , 'EC', SUB.ECC_CD
                                          , 'SC', SUB.SCC_CD
                                          , 'LO', ML.LOC_CD
                                          , 'XXXXX') = OP.LOC_CD
                         UNION ALL
                         SELECT 'X'
                           FROM DUAL
                          WHERE A.LSTM_CD NOT IN ('LT', 'ST')
                       )
#end
    AND     A.LSTM_CD IN('OF','SI','MI','LT','ST')
#if (${rstr_usg_lbl} != '')
	AND	
	(
	A.RSTR_USG_TP_LBL_NM1 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM2 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM3 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM4 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM5 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM6 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM7 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM8 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM9 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM10 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM11 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	)
#end
#if (${cntr_no} != '')
	AND	A.CNTR_NO IN (
		              #foreach ($key IN ${cntr_no})
	            	       #if($velocityCount < $cntr_no.size())
	                	    '$key',
	                       #else
	                        '$key'
	                       #end
	                  #end			  
	                  )
#end	
#if (${port_cd} != '')
    AND     A.CNMV_STS_CD != 'MT'
    AND     A.BKG_NO = D.BKG_NO
    AND 	D.POD_CD = P.PORT_CD
#end
#if (${slan_cd} != '')
    AND     A.CNMV_STS_CD != 'MT'
    AND     A.BKG_NO = D.BKG_NO
    AND    	D.SLAN_CD = P.VSL_SLAN_CD						
#end
#if (${del_cd} != '')
    AND     A.CNMV_STS_CD != 'MT'
    AND     A.BKG_NO = D.BKG_NO
    AND     D.DEL_CD = P.DEL_CD
#end  
#if (${vvd_cd} != '')
    AND     A.CNMV_STS_CD     != 'MT'
    AND     A.BKG_NO           = D.BKG_NO
    AND     EXISTS ( SELECT 'X'
                      FROM CIM_BKG_VVD_V BV
                     WHERE D.BKG_NO = BV.BKG_NO
                       AND BV.VSL_CD           = SUBSTR(P.VVD_CD, 1, 4)                                                               -- VVD Code
                       AND BV.SKD_VOY_NO       = SUBSTR(P.VVD_CD, 5, 4)                                                               -- VVD Code
                       AND BV.SKD_DIR_CD       = SUBSTR(P.VVD_CD, 9, 1)                                                               -- VVD Code
                    )
#end
	#if (${loc_tp} == '0')
    AND CASE WHEN A.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN') THEN
                 DECODE(NVL(MST_LOC_FNC(SUBSTR(D.MTY_RTN_YD_CD, 1, 5), 'RCC'), A.RCC_CD)
                        , NVL(P.LOC_CD, NVL(MST_LOC_FNC(SUBSTR(D.MTY_RTN_YD_CD, 1, 5), 'RCC'), A.RCC_CD))
                        , 'Y', 'N')
            ELSE -- EN, MT, TN, TS, VL
                 DECODE(A.RCC_CD
                        , NVL(P.LOC_CD, A.RCC_CD)
                        , 'Y', 'N')
       END = 'Y'
	#elseif (${loc_tp} == '1')
    AND CASE WHEN A.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN') THEN
                 DECODE(NVL(MST_LOC_FNC(SUBSTR(D.MTY_RTN_YD_CD, 1, 5), 'LCC'), A.LCC_CD)
                        , NVL(P.LOC_CD, NVL(MST_LOC_FNC(SUBSTR(D.MTY_RTN_YD_CD, 1, 5), 'LCC'), A.LCC_CD))
                        , 'Y', 'N')
            ELSE -- EN, MT, TN, TS, VL
                 DECODE(A.LCC_CD
                        , NVL(P.LOC_CD, A.LCC_CD)
                        , 'Y', 'N')
       END = 'Y'
	#elseif (${loc_tp} == '2')
    AND CASE WHEN A.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN') THEN
                 DECODE( NVL(MST_LOC_FNC(SUBSTR(D.MTY_RTN_YD_CD, 1, 5), 'SCC'), A.SCC_CD)
                        , NVL(P.LOC_CD, NVL(MST_LOC_FNC(SUBSTR(D.MTY_RTN_YD_CD, 1, 5), 'SCC'), A.SCC_CD))
                        , 'Y', 'N')
            ELSE -- EN, MT, TN, TS, VL
                 DECODE(A.SCC_CD
                        , NVL(P.LOC_CD, A.SCC_CD)
                        , 'Y', 'N')
       END = 'Y'
	#elseif (${loc_tp} == '3')
    AND CASE WHEN A.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN') THEN
	             DECODE(NVL(D.MTY_RTN_YD_CD, A.CRNT_YD_CD)
                        , P.LOC_CD
                        , 'Y', 'N')
            ELSE -- EN, MT, TN, TS, VL
                 DECODE(A.CRNT_YD_CD, P.LOC_CD, 'Y', 'N')
        END = 'Y'
	#end          
	#if (${complex_pk2} != '')
	AND     A.AGMT_CTY_CD||A.AGMT_SEQ||A.VNDR_SEQ||A.LSTM_CD||A.CNTR_TPSZ_CD IN (
    	#foreach($key IN ${complex_pk2_seq})
        	#if($velocityCount < $complex_pk2_seq.size())
            	'$key',
	        #else
    	        '$key'
        	#end
	    #end
			)
	#end
#end      
#if (${loc_case} == '0')
    UNION ALL
#end      
#if (${loc_case} != '1')
    SELECT  A.CNTR_NO, A.CNMV_YR, A.CNMV_ID_NO, A.CNMV_STS_CD AS MVMT_STS_CD,
            'N' AS OB_CNTR_FLG
            , CASE WHEN A.CNMV_STS_CD IN ('TS', 'VL') THEN
                     --NVL(MST_LOC_FNC(SUBSTR(D.DEL_CD, 1, 5), 'SCC'), A.SCC_CD)
                     NVL(D.DEL_CD, A.LOC_CD)
                   ELSE
                     A.LOC_CD
              END AS SCC_CD
            , CASE WHEN A.CNMV_STS_CD IN ('TS', 'VL') THEN
                     NVL(MST_LOC_FNC(SUBSTR(D.DEL_CD, 1, 5), 'LCC'), A.LCC_CD)
                   ELSE
                     A.LCC_CD
              END  AS LCC_CD
            , CASE WHEN A.CNMV_STS_CD IN ('TS', 'VL') THEN
                     NVL(MST_LOC_FNC(SUBSTR(D.DEL_CD, 1, 5), 'RCC'), A.RCC_CD)
                   ELSE
                     A.RCC_CD
              END AS RCC_CD
            , A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, 
            A.AGMT_CTY_CD, A.AGMT_SEQ, A.LSTM_CD, A.CNTR_TPSZ_CD, C.VSL_SLAN_CD,
            A.ONH_FREE_DYS, A.MIN_ONH_DYS, B.VNDR_SEQ, D.DEL_CD, D.POD_CD,
            A.CRNT_YD_CD, A.FULL_FLG, A.ONH_YD_CD, B.REF_NO,
			A.BKG_NO, A.CNMV_DT, D.DE_TERM_CD, A.ONH_DT, A.RF_MKR_SEQ, A.CNTR_AUTH_NO, D.MTY_RTN_YD_CD
    FROM    PARAM P,
            MST_CONTAINER A,
            LSE_AGREEMENT B,
            VSK_VSL_SKD C,
            CIM_BOOKING_V D
    WHERE   1 = 1
    AND     A.FULL_FLG||TRIM(NVL2(D.BKG_NO, 'Y', 'N')) != 'YN'
    AND     A.AGMT_CTY_CD = B.AGMT_CTY_CD
    AND     A.AGMT_SEQ = B.AGMT_SEQ
    AND     A.LSTM_CD IN ('OF','SI','MI','LT','ST')
    AND     A.ACIAC_DIV_CD = 'A'
    AND     A.CNMV_STS_CD IN ('VL','TS')
#if (${rstr_usg_lbl} == '')
    AND     DECODE(A.LSTM_CD, 'ST', A.ONH_DT + NVL(A.MIN_ONH_DYS,0), A.ONH_DT ) < SYSDATE
    AND     DECODE(A.LSTM_CD, 'LT', B.LST_EXP_DT,SYSDATE -1) < SYSDATE
    AND     EXISTS ( SELECT 'X'
                           FROM LSE_AGMT_OFFH_PLC OP
                              , MDM_EQ_ORZ_CHT SUB
                              , MDM_LOCATION ML
                          WHERE A.AGMT_CTY_CD  = OP.AGMT_CTY_CD
                            AND A.AGMT_SEQ     = OP.AGMT_SEQ
                            AND A.CNTR_TPSZ_CD = OP.CNTR_TPSZ_CD                                                       
                            AND A.LSTM_CD      IN ('LT', 'ST')
                            AND CASE WHEN A.CNMV_STS_CD IN ('TS', 'VL') THEN
                                          NVL(D.DEL_CD, A.LOC_CD)
                                     ELSE
                                          A.LOC_CD
                                END = ML.LOC_CD
                            AND ML.SCC_CD       = SUB.SCC_CD
                            AND DECODE (OP.EQ_LOC_TP_CD
                                          , 'AL', 'ALL'
                                          , 'CT', ML.CONTI_CD
                                          , 'ST', ML.SCONTI_CD
                                          , 'CN', ML.CNT_CD
                                          , 'RC', SUB.RCC_CD
                                          , 'LC', SUB.LCC_CD
                                          , 'EC', SUB.ECC_CD
                                          , 'SC', SUB.SCC_CD
                                          , 'LO', ML.LOC_CD
                                          , 'XXXXX') = OP.LOC_CD
                         UNION ALL
                         SELECT 'X'
                           FROM DUAL
                          WHERE A.LSTM_CD NOT IN ('LT', 'ST')
                       )
#end
    AND     A.VSL_CD = C.VSL_CD
    AND     A.SKD_VOY_NO = C.SKD_VOY_NO
    AND     A.SKD_DIR_CD = C.SKD_DIR_CD
    AND     A.BKG_NO = D.BKG_NO(+)
#if (${rstr_usg_lbl} != '')
	AND	
	(
	A.RSTR_USG_TP_LBL_NM1 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM2 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM3 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM4 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM5 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM6 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM7 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM8 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM9 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM10 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	OR
	A.RSTR_USG_TP_LBL_NM11 IN (
			#foreach ($key IN ${labelvalue_list})
            	#if($velocityCount < $labelvalue_list.size())
                	'$key',
                #else
                    '$key'
                #end
            #end			  
       )
	)
#end
#if (${cntr_no} != '')
	AND	A.CNTR_NO IN (
		              #foreach ($key IN ${cntr_no})
	            	       #if($velocityCount < $cntr_no.size())
	                	    '$key',
	                       #else
	                        '$key'
	                       #end
	                  #end			  
	                  )
#end
#if (${port_cd} != '')
    AND     A.BKG_NO = D.BKG_NO
    AND 	D.POD_CD = P.PORT_CD
#end
#if (${slan_cd} != '')
    AND     A.BKG_NO = D.BKG_NO
    AND    	D.SLAN_CD = P.VSL_SLAN_CD						
#end
#if (${del_cd} != '')
    AND     A.BKG_NO = D.BKG_NO
    AND     D.DEL_CD = P.DEL_CD
#end  
#if (${vvd_cd} != '')
    AND     A.BKG_NO           = D.BKG_NO
    AND     EXISTS ( SELECT 'X'
                      FROM CIM_BKG_VVD_V BV
                     WHERE D.BKG_NO = BV.BKG_NO
                       AND BV.VSL_CD           = SUBSTR(P.VVD_CD, 1, 4)                                                               -- VVD Code
                       AND BV.SKD_VOY_NO       = SUBSTR(P.VVD_CD, 5, 4)                                                               -- VVD Code
                       AND BV.SKD_DIR_CD       = SUBSTR(P.VVD_CD, 9, 1)                                                               -- VVD Code
                    )
#end
	#if (${complex_pk2} != '')
	AND     A.AGMT_CTY_CD||A.AGMT_SEQ||A.VNDR_SEQ||A.LSTM_CD||A.CNTR_TPSZ_CD IN (
    	#foreach($key IN ${complex_pk2_seq})
        	#if($velocityCount < $complex_pk2_seq.size())
            	'$key',
	        #else
    	        '$key'
        	#end
	    #end
			)
	#end
#end	
), TEMP_DROP02 AS (
    SELECT  /*+ USE_NL( MC OD OH ) */
			MC.CNTR_NO AS CNTR_NO, 
			MNR_COMMON_PKG.MNR_GET_RPRCOST_FNC('U',  MC.CNTR_NO) AS MNR_COST
    FROM    TEMP_DROP07 MC,
			MNR_ORD_DTL OD,
            MNR_ORD_HDR OH 
    WHERE   MC.CNTR_NO = OD.EQ_NO
    AND     OD.MNR_ORD_OFC_CTY_CD = OH.MNR_ORD_OFC_CTY_CD
    AND     OD.MNR_ORD_SEQ = OH.MNR_ORD_SEQ
    GROUP BY MC.CNTR_NO    
), TEMP_DROP03 AS (
    SELECT  /*+ USE_NL( D A B C E ) ORDERED */
			DISTINCT B.BKG_NO, B.CNTR_NO, C.EVNT_OFC_CD 
    FROM    TEMP_DROP01 E,
            CIM_BKG_CNTR_V A,
            CIM_BOOKING_V D,        
            BKG_DO_CNTR B,
            BKG_DO_DTL C   
    WHERE   A.BKG_NO = B.BKG_NO(+)
    AND     A.CNTR_NO = B.CNTR_NO(+)
    AND     B.BKG_NO = C.BKG_NO(+)
    AND     B.RLSE_SEQ = C.RLSE_SEQ(+)
    AND     A.BKG_NO = D.BKG_NO
    AND     C.RLSE_STS_CD = 'R'
	AND		A.CNTR_NO = E.CNTR_NO    
) 
SELECT	SCC_CD, VNDR_SEQ, VNDR_ABBR_NM, VNDR_LGL_ENG_NM,
        AGMT_NO, AGMT_CTY_CD, AGMT_SEQ, LSTM_CD, REF_NO, CNTR_NO, 
        CNTR_TPSZ_CD, CRNT_YD_CD, OFF_HIRE_YARD, MTY_RTN_YD_CD,
        OFF_HIRE_DUE_DATE, FULL_FLG, MVMT_STS_CD, CNMV_DT,
		ONH_YD_CD, ONH_DT, MIN_ONH_DYS, ONH_FREE_DYS, USED_DAYS,
        MNR_COST, BKG_NO, BL_NO, POL_CD, POD_CD, DEL_CD, 
		EVNT_OFC_CD, POL_ETD_DT, POD_ETA_DT, VVD_CD, COMPLEX_PK,
	    CNEE_NM, STAY_DYS, HLG, YR_BLD, RF_UT_MKR, CNTR_AUTH_NO,RSTR_USG_LBL_TP,RSTR_USG_LBL_DESC  
FROM   (SELECT  /*+ USE_NL(A B C) */
				A.SCC_CD, A.VNDR_SEQ, B.VNDR_ABBR_NM, B.VNDR_LGL_ENG_NM,
                A.AGMT_CTY_CD||LPAD(A.AGMT_SEQ, 6,'0') AS AGMT_NO, 
                A.AGMT_CTY_CD, A.AGMT_SEQ, A.LSTM_CD, A.REF_NO, A.CNTR_NO, 
                A.CNTR_TPSZ_CD, A.CRNT_YD_CD, '' OFF_HIRE_YARD,
                TO_CHAR('', 'YYYYMMDD') AS OFF_HIRE_DUE_DATE,
                DECODE(A.FULL_FLG,'Y','F','M') AS FULL_FLG,
                A.MVMT_STS_CD, A.ONH_YD_CD, T9.CNTR_NO AS HOLD_NO,                          
                TO_CHAR(A.ONH_DT, 'YYYYMMDD') AS ONH_DT,
				TO_CHAR(A.CNMV_DT, 'YYYYMMDD') AS CNMV_DT,
                A.MIN_ONH_DYS, A.ONH_FREE_DYS, C9.MTY_RTN_YD_CD,
                ROUND(TRUNC(SYSDATE) - A.ONH_DT) + 1 AS USED_DAYS,
                T2.MNR_COST, A.BKG_NO, C9.BL_NO, C9.POL_CD,
                C9.POD_CD, C9.DEL_CD, T3.EVNT_OFC_CD, 
				TO_CHAR( NVL((
                    SELECT  /*+ INDEX (T1 XPKBKG_VVD) */
                            T2.VPS_ETD_DT
                    FROM    CIM_BKG_VVD_V T1, VSK_VSL_PORT_SKD T2
                    WHERE   1= 1
                    AND     T1.BKG_NO           = C9.BKG_NO
                    AND     T1.VSL_CD           = T2.VSL_CD      (+)
                    AND     T1.SKD_VOY_NO       = T2.SKD_VOY_NO  (+)
                    AND     T1.SKD_DIR_CD       = T2.SKD_DIR_CD  (+)
                    AND     T1.POL_CD           = T2.VPS_PORT_CD (+)
                    AND     T1.POL_CLPT_IND_SEQ = T2.CLPT_IND_SEQ(+)
                    AND     ROWNUM  = 1
                    ), C9.POL_ETD_DT), 'YYYYMMDD') AS POL_ETD_DT,
                TO_CHAR( NVL((
                    SELECT  /*+ INDEX_DESC (T1 XPKBKG_VVD) */
                            T2.VPS_ETA_DT
                    FROM    CIM_BKG_VVD_V T1, VSK_VSL_PORT_SKD T2
                    WHERE   1= 1
                    AND     T1.BKG_NO           = C9.BKG_NO
                    AND     T1.VSL_CD           = T2.VSL_CD      (+)
                    AND     T1.SKD_VOY_NO       = T2.SKD_VOY_NO  (+)
                    AND     T1.SKD_DIR_CD       = T2.SKD_DIR_CD  (+)
                    AND     T1.POD_CD           = T2.VPS_PORT_CD (+)
                    AND     T1.POD_CLPT_IND_SEQ = T2.CLPT_IND_SEQ(+)
                    AND     ROWNUM  = 1
                    ), C9.POD_ETA_DT), 'YYYYMMDD') AS POD_ETA_DT,
                (
                    SELECT  /*+ INDEX_DESC (T1 XPKBKG_VVD) */
                            T2.VSL_CD||T2.SKD_VOY_NO||T2.SKD_DIR_CD
                    FROM    CIM_BKG_VVD_V T1, VSK_VSL_PORT_SKD T2
                    WHERE   1= 1
                    AND     T1.BKG_NO           = C9.BKG_NO
                    AND     T1.VSL_CD           = T2.VSL_CD      (+)
                    AND     T1.SKD_VOY_NO       = T2.SKD_VOY_NO  (+)
                    AND     T1.SKD_DIR_CD       = T2.SKD_DIR_CD  (+)
                    AND     T1.POD_CD           = T2.VPS_PORT_CD (+)
                    AND     T1.POD_CLPT_IND_SEQ = T2.CLPT_IND_SEQ(+)
                    AND     ROWNUM  = 1
                    ) AS VVD_CD,
				A.SCC_CD||A.AGMT_CTY_CD||A.AGMT_SEQ||A.VNDR_SEQ||A.LSTM_CD||A.CNTR_TPSZ_CD AS COMPLEX_PK,
                (SELECT BC.CUST_NM 
                   FROM BKG_CUSTOMER BC 
                  WHERE 1=1 
                    AND BC.BKG_CUST_TP_CD = 'C' 
                    AND BC.BKG_NO = A.BKG_NO 
                    AND ROWNUM = 1) AS CNEE_NM,
                CEIL(SYSDATE - A.CNMV_DT) AS STAY_DYS,
                A.DE_TERM_CD AS HLG,
                TO_CHAR(A.ONH_DT, 'YYYY') AS YR_BLD,
                (SELECT MV.VNDR_LGL_ENG_NM 
                   FROM MDM_VENDOR MV 
                  WHERE 1=1 
                    AND MV.VNDR_SEQ = A.RF_MKR_SEQ 
                    AND ROWNUM = 1 ) AS RF_UT_MKR,
                A.CNTR_AUTH_NO AS CNTR_AUTH_NO,
				MST_COMMON_PKG.MST_RU_TP_GET_FNC(A.CNTR_NO) AS RSTR_USG_LBL_TP,
                MST_COMMON_PKG.MST_RU_VAL_GET_FNC(A.CNTR_NO) AS RSTR_USG_LBL_DESC
        FROM    PARAM P,
                CIM_BOOKING_V C9,
                TEMP_DROP07 T7,    
				TEMP_DROP09 T9,     
                TEMP_DROP02 T2,
                TEMP_DROP03 T3,
                MDM_VENDOR B, 
               (SELECT  C1.VNDR_SEQ, C1.AGMT_CTY_CD, C1.AGMT_SEQ, C1.REF_NO,
						C1.SCC_CD SCC_CD,						
                        C1.CNTR_NO, C1.LSTM_CD, C1.CNTR_TPSZ_CD, C1.CRNT_YD_CD,                
                        C1.FULL_FLG, C1.MVMT_STS_CD, C1.ONH_YD_CD,
                        C1.MIN_ONH_DYS, C1.ONH_FREE_DYS,
						C1.BKG_NO, C1.CNMV_DT, C1.DE_TERM_CD, C1.ONH_DT, C1.RF_MKR_SEQ, C1.CNTR_AUTH_NO                
                FROM    PARAM P,         
                        TEMP_DROP01 C1
                WHERE 1=1
                AND     C1.MVMT_STS_CD IN ('IC', 'ID', 'EN', 'TN', 'MT')
#if (${str_estm_dt} != '')
                AND EXISTS ( SELECT 'X'
                              FROM CIM_BKG_VVD_V BV,
                                   VSK_VSL_PORT_SKD C6
                             WHERE C1.BKG_NO           = BV.BKG_NO
                               AND BV.VSL_CD           = C6.VSL_CD
                               AND BV.SKD_VOY_NO       = C6.SKD_VOY_NO
                               AND BV.SKD_DIR_CD       = C6.SKD_DIR_CD
                               AND BV.POD_CD           = C6.VPS_PORT_CD
                               AND BV.POD_CLPT_IND_SEQ = C6.CLPT_IND_SEQ
   	#if (${estm_tp} == 'ETA')
                               AND     C6.VPS_ETA_DT BETWEEN TO_DATE(P.STR_ESTM_DT,'YYYYMMDD') AND TO_DATE(P.END_ESTM_DT,'YYYYMMDD') + 0.99999
   	#else
                               AND     C6.VPS_ETD_DT BETWEEN TO_DATE(P.STR_ESTM_DT,'YYYYMMDD') AND TO_DATE(P.END_ESTM_DT,'YYYYMMDD') + 0.99999
   	#end
                               AND NVL(C6.SKD_CNG_STS_CD,'N') <> 'S'
                            )                          
#end
#if (${vvd_cd} != '')
                AND     C1.VSL_CD||C1.SKD_VOY_NO||C1.SKD_DIR_CD = P.VVD_CD
#end
#if (${loc_tp} == '0')
		        AND     C1.RCC_CD = NVL(P.LOC_CD, C1.RCC_CD)
#elseif (${loc_tp} == '1')
   				AND     C1.LCC_CD = NVL(P.LOC_CD, C1.LCC_CD)
#elseif (${loc_tp} == '2')
       			AND     C1.SCC_CD = NVL(P.LOC_CD, C1.SCC_CD)
#elseif (${loc_tp} == '3')
	            AND     P.LOC_CD = CASE WHEN C1.MVMT_STS_CD = 'ID' THEN NVL(C1.MTY_RTN_YD_CD, C1.CRNT_YD_CD)
                                   ELSE  C1.CRNT_YD_CD
                                   END  
#end                                                                                             
                UNION ALL
                SELECT  /*+ USE_NL( C1 C6) */
                        DISTINCT C1.VNDR_SEQ, C1.AGMT_CTY_CD, C1.AGMT_SEQ, C1.REF_NO,
						C1.SCC_CD AS SCC_CD, 
                        C1.CNTR_NO, C1.LSTM_CD, C1.CNTR_TPSZ_CD, C1.CRNT_YD_CD,
                        C1.FULL_FLG, C1.MVMT_STS_CD, C1.ONH_YD_CD,
                        C1.MIN_ONH_DYS, C1.ONH_FREE_DYS, 
						C1.BKG_NO, C1.CNMV_DT, C1.DE_TERM_CD, C1.ONH_DT, C1.RF_MKR_SEQ, C1.CNTR_AUTH_NO                
                FROM    PARAM P,
                        CIM_BKG_VVD_V BV,
                        VSK_VSL_PORT_SKD C6,
                        TEMP_DROP01 C1
                WHERE   C1.VSL_CD           = BV.VSL_CD
                AND     C1.SKD_VOY_NO       = BV.SKD_VOY_NO
                AND     C1.SKD_DIR_CD       = BV.SKD_DIR_CD
                AND     C1.BKG_NO           = BV.BKG_NO
                AND     C1.CRNT_YD_CD       = BV.POL_YD_CD
                AND     BV.VSL_CD           = C6.VSL_CD
                AND     BV.SKD_VOY_NO       = C6.SKD_VOY_NO
                AND     BV.SKD_DIR_CD       = C6.SKD_DIR_CD
                AND     BV.POD_CD           = C6.VPS_PORT_CD
                AND     BV.POD_CLPT_IND_SEQ = C6.CLPT_IND_SEQ
                AND     NVL(C6.SKD_CNG_STS_CD,'N') <> 'S'
                AND     C1.MVMT_STS_CD IN('VL','TS') 
#if (${str_estm_dt} != '')
   	#if (${estm_tp} == 'ETA')
                AND     C6.VPS_ETA_DT BETWEEN TO_DATE(P.STR_ESTM_DT,'YYYYMMDD') AND TO_DATE(P.END_ESTM_DT,'YYYYMMDD') + 0.99999
   	#else
                AND     C6.VPS_ETD_DT BETWEEN TO_DATE(P.STR_ESTM_DT,'YYYYMMDD') AND TO_DATE(P.END_ESTM_DT,'YYYYMMDD') + 0.99999
   	#end
#end
#if (${vvd_cd} != '')
                AND     C1.VSL_CD||C1.SKD_VOY_NO||C1.SKD_DIR_CD = P.VVD_CD
#end
                ) A        
        WHERE   A.VNDR_SEQ = B.VNDR_SEQ
        AND     A.BKG_NO = C9.BKG_NO(+) 
        AND     A.CNTR_NO = T2.CNTR_NO(+)
        AND     A.BKG_NO = T3.BKG_NO(+)
        AND     A.CNTR_NO = T3.CNTR_NO(+)
        AND     A.AGMT_CTY_CD = T7.AGMT_CTY_CD(+)
        AND     A.AGMT_SEQ = T7.AGMT_SEQ(+)
        AND     A.CNTR_NO = T7.CNTR_NO(+)        
		AND     A.AGMT_CTY_CD = T9.AGMT_CTY_CD(+)
        AND     A.AGMT_SEQ = T9.AGMT_SEQ(+)
        AND     A.CNTR_NO = T9.CNTR_NO(+)        
#if (${lstm_cd} != '')
        AND     A.LSTM_CD IN (
    #foreach($key IN ${lstm_cd_seq})
        #if($velocityCount < $lstm_cd_seq.size())
            '$key',
        #else
            '$key'
        #end
    #end
                )
#end
#if (${cntr_tpsz_cd} != '')
        AND     A.CNTR_TPSZ_CD IN (
    #foreach($key IN ${cntr_tpsz_cd_seq})
        #if($velocityCount < $cntr_tpsz_cd_seq.size())
            '$key',
        #else
            '$key'
        #end
    #end
                )
#end                    
#if (${cnmv_sts_cd} != '')
        AND     A.MVMT_STS_CD IN (
    #foreach($key IN ${cnmv_sts_cd_seq})
        #if($velocityCount < $cnmv_sts_cd_seq.size())
            '$key',
        #else
            '$key'
        #end
    #end
                )
#end             
#if (${agmt_seq} != '')
        AND     A.AGMT_CTY_CD = P.AGMT_CTY_CD
        AND     A.AGMT_SEQ = P.AGMT_SEQ
#end
#if (${vndr_seq} != '')
        AND     A.VNDR_SEQ = P.VNDR_SEQ
#end
#if (${used_dys} != '')
        AND     SYSDATE - A.ONH_DT > P.USED_DYS
#end
#if (${free_dys} != '')
        AND     A.ONH_FREE_DYS > P.FREE_DYS
#end
	)
WHERE	1 = 1
AND     HOLD_NO IS NULL
#if (${complex_pk} != '')
AND     COMPLEX_PK IN (
    #foreach($key IN ${complex_pk_seq})
        #if($velocityCount < $complex_pk_seq.size())
            '$key',
        #else
            '$key'
        #end
    #end
		)
#end			]]></sql>
			<params>
				<param name="loc_case" type="12" value="" out="N"/>
				<param name="loc_tp" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="port_cd" type="12" value="" out="N"/>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="estm_tp" type="12" value="" out="N"/>
				<param name="str_estm_dt" type="12" value="" out="N"/>
				<param name="end_estm_dt" type="12" value="" out="N"/>
				<param name="lstm_cd" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd" type="12" value="" out="N"/>
				<param name="cnmv_sts_cd" type="12" value="" out="N"/>
				<param name="agmt_cty_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="2" value="" out="N"/>
				<param name="vndr_seq" type="2" value="" out="N"/>
				<param name="used_dys" type="2" value="" out="N"/>
				<param name="free_dys" type="2" value="" out="N"/>
				<param name="min_onh_dys_tp" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
