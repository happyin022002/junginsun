<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ForecastReportDBDAOsearchMtyRepoInDetailListRSQL">
			<desc><![CDATA[EES_EQR_1048에서 조회]]></desc>
			<sql><![CDATA[
-- EES_EQR_1048
-- 현재주에서는 하단에 출현
-- 미래주에서는 혼자 출현

--Path : com.hanjin.apps.alps.ees.eqr.cntrfcstsimul.forecastreport.integration
--FileName : ForecastReportDBDAOsearchMtyRepoInDetailListRSQL

WITH REPO_IN_RESULT AS (      
    -- REPO IN DETAIL(EES_EQR_1048에서 수기입력)
    -- 항상 조회됨(현재 + 미래)
    SELECT '1' CRE_SEQ -- 삭제가능
          ,LOC_CD YARD
          ,VSL_LANE_CD LANE
          ,VSL_CD||SKD_VOY_NO||SKD_DIR_CD VVD
          ,TO_CHAR(ETD_DT, 'YYYY-MM-DD') ETB
          ,SUBSTR(TO_CHAR(ETD_DT, 'DAY', 'NLS_DATE_LANGUAGE=ENGLISH'), 1,3) ETB_DAY      
          ,'' POD_CD  -- HIDDEN
          ,'' DIV     -- HIDDEN 
          ,RPT_SEQ    -- HIDDEN                                                       
          ,NVL(D2_FCAST_QTY,0) D2_QTY
          ,NVL(D4_FCAST_QTY,0) D4_QTY
          ,NVL(D5_FCAST_QTY,0) D5_QTY
          ,NVL(D7_FCAST_QTY,0) D7_QTY
          ,NVL(R2_FCAST_QTY,0) R2_QTY
          ,NVL(R5_FCAST_QTY,0) R5_QTY
          ,NVL(R9_FCAST_QTY,0) R9_QTY
          ,NVL(O2_FCAST_QTY,0) O2_QTY
          ,NVL(O4_FCAST_QTY,0) O4_QTY
          ,NVL(S2_FCAST_QTY,0) S2_QTY
          ,NVL(S4_FCAST_QTY,0) S4_QTY
          ,NVL(F2_FCAST_QTY,0) F2_QTY
          ,NVL(F4_FCAST_QTY,0) F4_QTY
          ,NVL(F5_FCAST_QTY,0) F5_QTY
          ,NVL(A2_FCAST_QTY,0) A2_QTY
          ,NVL(A4_FCAST_QTY,0) A4_QTY               
          ,DIFF_RMK REMARK       
    FROM EQR_CTRL_BAL_RPT_DCHG_MNL 
    WHERE ETD_DT BETWEEN TO_DATE(@[wk_st_dt], 'YYYYMMDD') AND TO_DATE(@[wk_end_dt], 'YYYYMMDD')+0.99999
    AND   LOC_CD IN (                        
                        SELECT LOC_CD FROM MDM_LOCATION 
                        WHERE SCC_CD IN ( 
                                           SELECT SCC_CD 
                                           FROM MDM_EQ_ORZ_CHT 
        								#if(${loc_grp_cd} == 'S')
                        				   WHERE SCC_CD = @[loc_cd]  -- IF GRP_CD=S
        								#elseif(${loc_grp_cd} == 'E')
                       					   WHERE ECC_CD = @[loc_cd]  -- IF GRP_CD=E
        								#elseif(${loc_grp_cd} == 'L')
                        				   WHERE LCC_CD = @[loc_cd]  -- IF GRP_CD=L
        								#end                                 
                                        )
                      )                  

       
   -- PLUS OTHER 추가 (S) ------------------

	UNION ALL    

          SELECT '0' CRE_SEQ -- 삭제불가능
          ,A.LOC_CD YARD
--        ,A.FCAST_YRWK WEEK
          ,NULL LANE
          ,NULL VVD
          ,NULL ETB
          ,NULL ETB_DAY
          ,NULL POD_CD
          ,NULL DIV
          ,NULL RPT_SEQ
          ,NVL(A.D2_FCAST_QTY,0) D2_QTY
          ,NVL(A.D4_FCAST_QTY,0) D4_QTY
          ,NVL(A.D5_FCAST_QTY,0) D5_QTY
          ,NVL(A.D7_FCAST_QTY,0) D7_QTY
          ,NVL(A.R2_FCAST_QTY,0) R2_QTY
          ,NVL(A.R5_FCAST_QTY,0) R5_QTY
          ,NVL(A.R9_FCAST_QTY,0) R9_QTY
          ,NVL(A.O2_FCAST_QTY,0) O2_QTY
          ,NVL(A.O4_FCAST_QTY,0) O4_QTY
          ,NVL(A.S2_FCAST_QTY,0) S2_QTY
          ,NVL(A.S4_FCAST_QTY,0) S4_QTY
          ,NVL(A.F2_FCAST_QTY,0) F2_QTY
          ,NVL(A.F4_FCAST_QTY,0) F4_QTY
          ,NVL(A.F5_FCAST_QTY,0) F5_QTY
          ,NVL(A.A2_FCAST_QTY,0) A2_QTY
          ,NVL(A.A4_FCAST_QTY,0) A4_QTY               
          ,NULL REMARK
          
         
                                          
                    FROM EQR_CTRL_MTY_BAL_RPT_OTR A       
                    WHERE A.INP_YRWK          = ( SELECT /*+ INDEX_DESC(A XPKEQR_WK_PRD) */ PLN_YR||PLN_WK
                                                    FROM EQR_WK_PRD A
                                                   WHERE PLN_YR||PLN_WK < @[fcast_yrwk] -- MAIN 화면과 동일한 로직 사용
                                                     AND ROWNUM = 1 )  -- +other는 -1WEEK가 곧 현재주차로 인식된다   -- '201328'
                    AND   A.FCAST_YRWK  = @[fcast_yrwk]                                                -- '201329'                    
                    AND   A.LOC_CD IN (                        
                                        SELECT LOC_CD FROM MDM_LOCATION 
                                        WHERE SCC_CD IN ( 
                                                            SELECT SCC_CD 
                                                            FROM MDM_EQ_ORZ_CHT 
                                        #if(${loc_grp_cd} == 'S')
                        				   WHERE SCC_CD = @[loc_cd]  -- IF GRP_CD=S
        								#elseif(${loc_grp_cd} == 'E')
                       					   WHERE ECC_CD = @[loc_cd]  -- IF GRP_CD=E
        								#elseif(${loc_grp_cd} == 'L')
                        				   WHERE LCC_CD = @[loc_cd]  -- IF GRP_CD=L
        								#end   
        								                )
                          )
                    AND   A.LOC_GRP_CD        = @[loc_grp_cd]
                    AND   A.MTY_BAL_OTR_TP_CD = 2 -- PLUS OTHER (REPO IN 에 포함)  

   -- PLUS OTHER 추가 (E) ------------------
    

    UNION ALL    

#if(${curr_flag} =='T')  -- 현재주차

    SELECT '0' CRE_SEQ -- 삭제불가능
          ,B.YD_CD YARD
          ,B.SLAN_CD LANE
          ,B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD VVD

          ,TO_CHAR(B.ETB_DT, 'YYYY-MM-DD') ETB
          ,SUBSTR(TO_CHAR(B.ETB_DT, 'DAY', 'NLS_DATE_LANGUAGE=ENGLISH'), 1,3) ETB_DAY      
          ,B.POD_CD  -- HIDDEN
          ,B.DIV     -- HIDDEN
          ,NULL RPT_SEQ    -- HIDDEN     
           -- RI 수량 - VD 수량 빼기(0 보다 작으면 0처리)                                                                 
          ,CASE WHEN SUM(NVL(B.D2_QTY,0)-NVL(A.D2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D2_QTY,0)-NVL(A.D2_QTY,0)) END D2_QTY
          ,CASE WHEN SUM(NVL(B.D4_QTY,0)-NVL(A.D4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D4_QTY,0)-NVL(A.D4_QTY,0)) END D4_QTY
          ,CASE WHEN SUM(NVL(B.D5_QTY,0)-NVL(A.D5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D5_QTY,0)-NVL(A.D5_QTY,0)) END D5_QTY
          ,CASE WHEN SUM(NVL(B.D7_QTY,0)-NVL(A.D7_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D7_QTY,0)-NVL(A.D7_QTY,0)) END D7_QTY
          ,CASE WHEN SUM(NVL(B.R2_QTY,0)-NVL(A.R2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R2_QTY,0)-NVL(A.R2_QTY,0)) END R2_QTY
          ,CASE WHEN SUM(NVL(B.R5_QTY,0)-NVL(A.R5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R5_QTY,0)-NVL(A.R5_QTY,0)) END R5_QTY
          ,CASE WHEN SUM(NVL(B.R9_QTY,0)-NVL(A.R9_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R9_QTY,0)-NVL(A.R9_QTY,0)) END R9_QTY
          ,CASE WHEN SUM(NVL(B.O2_QTY,0)-NVL(A.O2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O2_QTY,0)-NVL(A.O2_QTY,0)) END O2_QTY
          ,CASE WHEN SUM(NVL(B.O4_QTY,0)-NVL(A.O4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O4_QTY,0)-NVL(A.O4_QTY,0)) END O4_QTY
          ,CASE WHEN SUM(NVL(B.S2_QTY,0)-NVL(A.S2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.S2_QTY,0)-NVL(A.S2_QTY,0)) END S2_QTY
          ,CASE WHEN SUM(NVL(B.S4_QTY,0)-NVL(A.S4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.S4_QTY,0)-NVL(A.S4_QTY,0)) END S4_QTY
          ,CASE WHEN SUM(NVL(B.F2_QTY,0)-NVL(A.F2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F2_QTY,0)-NVL(A.F2_QTY,0)) END F2_QTY
          ,CASE WHEN SUM(NVL(B.F4_QTY,0)-NVL(A.F4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F4_QTY,0)-NVL(A.F4_QTY,0)) END F4_QTY
          ,CASE WHEN SUM(NVL(B.F5_QTY,0)-NVL(A.F5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F5_QTY,0)-NVL(A.F5_QTY,0)) END F5_QTY
          ,CASE WHEN SUM(NVL(B.A2_QTY,0)-NVL(A.A2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.A2_QTY,0)-NVL(A.A2_QTY,0)) END A2_QTY
          ,CASE WHEN SUM(NVL(B.A4_QTY,0)-NVL(A.A4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.A4_QTY,0)-NVL(A.A4_QTY,0)) END A4_QTY               
          ,B.REMARK
    FROM
    (   
        -- MVMT VD  
        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.VSL_LANE_CD 
              ,A.YD_CD
              ,A.ETD_DT ETB_DT
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY)),0) D2_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY)),0) D4_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY)),0) D5_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY)),0) D7_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY)),0) R2_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY)),0) R5_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY)),0) R9_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY)),0) O2_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY)),0) S2_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY)),0) O4_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY)),0) S4_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY)),0) F2_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY)),0) A2_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY)),0) F4_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY)),0) A4_QTY
              ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY)),0) F5_QTY

         
        FROM EQR_CTRL_BAL_RPT_DCHG_SNAP A                                               
        WHERE A.ETD_DT BETWEEN TO_DATE(@[wk_st_dt], 'YYYYMMDD') 
                       AND     TO_DATE((SELECT TO_CHAR(NEXT_DAY(SYSDATE, 2)-7, 'YYYYMMDD') FROM DUAL), 'YYYYMMDD')+0.99999  -- LCC별 시작일부터 이번주 월요일까지                        
		GROUP BY A.VSL_CD
                ,A.SKD_VOY_NO
                ,A.SKD_DIR_CD
                ,A.VSL_LANE_CD
                ,A.YD_CD
                ,A.ETD_DT

    ) A
   ,(
         SELECT A.YD_CD
               ,A.VSL_LANE_CD SLAN_CD
               ,A.VSL_CD
               ,A.SKD_VOY_NO
               ,A.SKD_DIR_CD
               ,A.ETB_DT
               ,(SELECT X.LOC_CD FROM MDM_YARD X WHERE X.YD_CD = A.YD_CD) POD_CD -- HIDDEN
               ,A.COD_CFM_DIV_CD DIV -- HIDDEN
               ,NVL(A.D2_FCAST_QTY,0) D2_QTY
               ,NVL(A.D4_FCAST_QTY,0) D4_QTY
               ,NVL(A.D5_FCAST_QTY,0) D5_QTY
               ,NVL(A.D7_FCAST_QTY,0) D7_QTY
               ,NVL(A.R2_FCAST_QTY,0) R2_QTY
               ,NVL(A.R5_FCAST_QTY,0) R5_QTY
               ,NVL(A.R9_FCAST_QTY,0) R9_QTY
               ,NVL(A.O2_FCAST_QTY,0) O2_QTY
               ,NVL(A.S2_FCAST_QTY,0) S2_QTY
               ,NVL(A.O4_FCAST_QTY,0) O4_QTY
               ,NVL(A.S4_FCAST_QTY,0) S4_QTY
               ,NVL(A.F2_FCAST_QTY,0) F2_QTY
               ,NVL(A.A2_FCAST_QTY,0) A2_QTY
               ,NVL(A.F4_FCAST_QTY,0) F4_QTY
               ,NVL(A.A4_FCAST_QTY,0) A4_QTY
               ,NVL(A.F5_FCAST_QTY,0) F5_QTY
               ,NVL(A.O5_FCAST_QTY,0) O5_QTY
               ,A.DIFF_RMK REMARK
         FROM EQR_CTRL_REPO_SNAP A
             ,(
                     SELECT REPO_ADD_DYS AS ADD_DYS
                     FROM
                     (
                         SELECT A.REPO_ADD_DYS
                         FROM EQR_WK_PRD_ADD_DY A,
                              (
                                  SELECT DISTINCT LCC_CD 
                                  FROM MDM_EQ_ORZ_CHT 
        #if(${loc_grp_cd} == 'S')
                                  WHERE SCC_CD = @[loc_cd]  -- IF GRP_CD=S
        #elseif(${loc_grp_cd} == 'E')
                                  WHERE ECC_CD = @[loc_cd]  -- IF GRP_CD=E
        #elseif(${loc_grp_cd} == 'L')
                                  WHERE LCC_CD = @[loc_cd]  -- IF GRP_CD=L
        #end                                                               
                               ) B
                         WHERE A.LCC_CD = B.LCC_CD
                         UNION 
                         SELECT 0 REPO_ADD_DYS FROM DUAL 
                         ORDER BY REPO_ADD_DYS DESC  
                     )
                     WHERE ROWNUM=1     
                ) B
                ,(
                     SELECT C.YD_CD, A.SCC_CD
                     FROM MDM_EQ_ORZ_CHT A,MDM_LOCATION B,MDM_YARD C                     
        #if(${loc_grp_cd} == 'S')
                     WHERE A.SCC_CD = @[loc_cd]  -- IF GRP_CD=S
        #elseif(${loc_grp_cd} == 'E')
                     WHERE A.ECC_CD = @[loc_cd]  -- IF GRP_CD=E
        #elseif(${loc_grp_cd} == 'L')
                     WHERE A.LCC_CD = @[loc_cd]  -- IF GRP_CD=L
        #end                                  
                     AND   A.SCC_CD = B.SCC_CD
                     AND   B.LOC_CD = C.LOC_CD
                ) C
         WHERE A.ETB_DT BETWEEN  TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999            
         AND   A.YD_CD = C.YD_CD                                                                                                                     

    ) B
    WHERE  A.VSL_CD     (+) = B.VSL_CD
    AND    A.SKD_VOY_NO (+) = B.SKD_VOY_NO
    AND    A.SKD_DIR_CD (+) = B.SKD_DIR_CD
    AND    A.VSL_LANE_CD(+) = B.SLAN_CD
    AND    A.YD_CD      (+) = B.YD_CD
    GROUP BY B.YD_CD 
            ,B.SLAN_CD 
            ,B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD             
            ,B.ETB_DT
            ,B.POD_CD  -- HIDDEN
            ,B.DIV     -- HIDDEN
            ,B.REMARK




#elseif(${curr_flag} =='F')  -- 미래주차

         SELECT '0' CRE_SEQ -- 삭제불가능
               ,A.YD_CD YARD
               ,A.VSL_LANE_CD LANE
               ,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD
               ,TO_CHAR(A.ETB_DT, 'YYYY-MM-DD') ETB
               ,SUBSTR(TO_CHAR(A.ETB_DT, 'DAY', 'NLS_DATE_LANGUAGE=ENGLISH'), 1,3) ETB_DAY   
               ,(SELECT X.LOC_CD FROM MDM_YARD X WHERE X.YD_CD = A.YD_CD) POD_CD -- HIDDEN
               ,A.COD_CFM_DIV_CD DIV -- HIDDEN
               ,NULL RPT_SEQ         -- HIDDEN
               ,NVL(A.D2_FCAST_QTY,0) D2_QTY
               ,NVL(A.D4_FCAST_QTY,0) D4_QTY
               ,NVL(A.D5_FCAST_QTY,0) D5_QTY
               ,NVL(A.D7_FCAST_QTY,0) D7_QTY
               ,NVL(A.R2_FCAST_QTY,0) R2_QTY
               ,NVL(A.R5_FCAST_QTY,0) R5_QTY
               ,NVL(A.R9_FCAST_QTY,0) R9_QTY
               ,NVL(A.O2_FCAST_QTY,0) O2_QTY
               ,NVL(A.O4_FCAST_QTY,0) O4_QTY                              
               ,NVL(A.S2_FCAST_QTY,0) S2_QTY
               ,NVL(A.S4_FCAST_QTY,0) S4_QTY               
               ,NVL(A.F2_FCAST_QTY,0) F2_QTY
               ,NVL(A.F4_FCAST_QTY,0) F4_QTY
               ,NVL(A.F5_FCAST_QTY,0) F5_QTY                              
               ,NVL(A.A2_FCAST_QTY,0) A2_QTY
               ,NVL(A.A4_FCAST_QTY,0) A4_QTY
               ,A.DIFF_RMK REMARK

         FROM EQR_CTRL_REPO_SNAP A
             ,(
                     SELECT REPO_ADD_DYS AS ADD_DYS
                     FROM
                     (
                         SELECT A.REPO_ADD_DYS
                         FROM EQR_WK_PRD_ADD_DY A,
                              (
                                  SELECT DISTINCT LCC_CD 
                                  FROM MDM_EQ_ORZ_CHT 
        #if(${loc_grp_cd} == 'S')
                                  WHERE SCC_CD = @[loc_cd]  -- IF GRP_CD=S
        #elseif(${loc_grp_cd} == 'E')
                                  WHERE ECC_CD = @[loc_cd]  -- IF GRP_CD=E
        #elseif(${loc_grp_cd} == 'L')
                                  WHERE LCC_CD = @[loc_cd]  -- IF GRP_CD=L
        #end                                                               
                              ) B
                         WHERE A.LCC_CD = B.LCC_CD
                         UNION 
                         SELECT 0 REPO_ADD_DYS FROM DUAL 
                         ORDER BY REPO_ADD_DYS DESC  
                     )
                     WHERE ROWNUM=1     
                ) B
                ,(
                     SELECT C.YD_CD, A.SCC_CD
                     FROM MDM_EQ_ORZ_CHT A,MDM_LOCATION B,MDM_YARD C                     
        #if(${loc_grp_cd} == 'S')
                     WHERE A.SCC_CD = @[loc_cd]  -- IF GRP_CD=S
        #elseif(${loc_grp_cd} == 'E')
                     WHERE A.ECC_CD = @[loc_cd]  -- IF GRP_CD=E
        #elseif(${loc_grp_cd} == 'L')
                     WHERE A.LCC_CD = @[loc_cd]  -- IF GRP_CD=L
        #end                                  
                     AND   A.SCC_CD = B.SCC_CD
                     AND   B.LOC_CD = C.LOC_CD
                ) C
         WHERE A.ETB_DT BETWEEN  TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999            
         AND   A.YD_CD = C.YD_CD                                                                                                                     

#end

)


SELECT CRE_SEQ
      ,LVL
      ,TO_YD_CD
      ,VSL_LANE_CD
      ,VVD
      ,TO_ETB_DT
      ,REPLACE(TO_ETB_DT, '-', '') TO_ETB_DT_ORG
      ,TO_ETB_DAY
      ,D2_FCAST_QTY
      ,D4_FCAST_QTY
      ,D5_FCAST_QTY
      ,D7_FCAST_QTY
      ,R2_FCAST_QTY
      ,R5_FCAST_QTY
      ,R9_FCAST_QTY
      ,O2_FCAST_QTY
      ,S2_FCAST_QTY
      ,O4_FCAST_QTY
      ,S4_FCAST_QTY
      ,F2_FCAST_QTY
      ,A2_FCAST_QTY
      ,F4_FCAST_QTY
      ,A4_FCAST_QTY
      ,F5_FCAST_QTY
      ,REMARK
	  ,WK_ST_DT
      ,WK_END_DT
      ,@[curr_flag] CURR_FLAG -- HIDDEN     
      ,DIV        -- HIDDEN     
      ,RPT_SEQ    -- HIDDEN     
FROM
(
    SELECT CRE_SEQ
          ,'000000'   LVL
          ,YARD		  TO_YD_CD
          ,LANE	      VSL_LANE_CD
          ,VVD
          ,ETB		  TO_ETB_DT
          ,ETB_DAY	  TO_ETB_DAY
          ,D2_QTY	  D2_FCAST_QTY
          ,D4_QTY	  D4_FCAST_QTY
          ,D5_QTY	  D5_FCAST_QTY
          ,D7_QTY	  D7_FCAST_QTY
          ,R2_QTY	  R2_FCAST_QTY 
          ,R5_QTY	  R5_FCAST_QTY
          ,R9_QTY	  R9_FCAST_QTY
          ,O2_QTY	  O2_FCAST_QTY
          ,S2_QTY	  S2_FCAST_QTY
          ,O4_QTY	  O4_FCAST_QTY
          ,S4_QTY	  S4_FCAST_QTY
          ,F2_QTY	  F2_FCAST_QTY
          ,A2_QTY	  A2_FCAST_QTY
          ,F4_QTY	  F4_FCAST_QTY
          ,A4_QTY	  A4_FCAST_QTY
          ,F5_QTY	  F5_FCAST_QTY
          ,REMARK	
    	  ,TO_CHAR(TO_DATE(@[wk_st_dt], 'YYYYMMDD'), 'YYYY/MM/DD') 	WK_ST_DT
          ,TO_CHAR(TO_DATE(@[wk_end_dt], 'YYYYMMDD'), 'YYYY/MM/DD')	WK_END_DT
          ,DIV
          ,RPT_SEQ    -- HIDDEN     
    FROM REPO_IN_RESULT       
    WHERE  (
               D2_QTY
              +D4_QTY
              +D5_QTY
              +D7_QTY
              +R2_QTY  
              +R5_QTY
              +R9_QTY
              +O2_QTY
              +S2_QTY
              +O4_QTY
              +S4_QTY
              +F2_QTY
              +A2_QTY
              +F4_QTY
              +A4_QTY
              +F5_QTY 
           ) > 0  -- 0보다 큰것만 수집
	
    UNION ALL
    -- TOTAL
    SELECT '0' CRE_SEQ
          ,'111111' LVL
          ,NULL TO_YD_CD
          ,NULL VSL_LANE_CD
          ,NULL VVD
          ,NULL TO_ETB_DT
          ,NULL TO_ETB_DAY
          ,SUM(D2_QTY) D2_FCAST_QTY
          ,SUM(D4_QTY) D4_FCAST_QTY
          ,SUM(D5_QTY) D5_FCAST_QTY
          ,SUM(D7_QTY) D7_FCAST_QTY
          ,SUM(R2_QTY) R2_FCAST_QTY  
          ,SUM(R5_QTY) R5_FCAST_QTY
          ,SUM(R9_QTY) R9_FCAST_QTY
          ,SUM(O2_QTY) O2_FCAST_QTY
          ,SUM(S2_QTY) S2_FCAST_QTY
          ,SUM(O4_QTY) O4_FCAST_QTY
          ,SUM(S4_QTY) S4_FCAST_QTY
          ,SUM(F2_QTY) F2_FCAST_QTY
          ,SUM(A2_QTY) A2_FCAST_QTY
          ,SUM(F4_QTY) F4_FCAST_QTY
          ,SUM(A4_QTY) A4_FCAST_QTY
          ,SUM(F5_QTY) F5_FCAST_QTY
          ,NULL REMARK
    	  ,TO_CHAR(TO_DATE(@[wk_st_dt], 'YYYYMMDD'), 'YYYY/MM/DD')	WK_ST_DT
          ,TO_CHAR(TO_DATE(@[wk_end_dt], 'YYYYMMDD'), 'YYYY/MM/DD')	WK_END_DT
          ,NULL DIV
          ,NULL RPT_SEQ    -- HIDDEN     
    FROM REPO_IN_RESULT 
    
) 
ORDER BY TO_ETB_DT, TO_YD_CD ASC			]]></sql>
			<params>
				<param name="wk_st_dt" type="12" value="" out="N"/>
				<param name="wk_end_dt" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="fcast_yrwk" type="12" value="" out="N"/>
				<param name="loc_grp_cd" type="12" value="" out="N"/>
				<param name="curr_flag" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
