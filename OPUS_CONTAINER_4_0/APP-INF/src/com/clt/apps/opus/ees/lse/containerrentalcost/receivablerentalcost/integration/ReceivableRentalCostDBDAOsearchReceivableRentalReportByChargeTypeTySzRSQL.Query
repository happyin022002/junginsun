<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ReceivableRentalCostDBDAOsearchReceivableRentalReportByChargeTypeTySzRSQL">
			<desc><![CDATA[Receivable Invoice 한 결과에 대하여 Charge Type , TP/SZ별로 실적을 조회
total 부분의 avaerage 로직 에러 수정(==> total amout / total vol)]]></desc>
			<sql><![CDATA[
WITH PARAM AS (
    SELECT 
            @[report_type]  AS REPORT_TYPE,
            @[period_stdt]  AS PERIOD_STDT,
            @[period_eddt]  AS PERIOD_EDDT,
            @[status]       AS STATUS,            
            @[receivable]   AS RECEIVABLE,
            @[agmt_cty_cd]  AS AGMT_CTY_CD,
            @[agmt_seq]     AS AGMT_SEQ,
            @[vndr_seq]     AS VNDR_SEQ,
            @[loc_tp]       AS LOC_TP,
            @[loc_cd]       AS LOC_CD
            
    FROM    DUAL
) , XXX AS (
SELECT
  AA.CHARGE_TYPE,
  AA.DIV ,  
  AA.G_TTL ,
  #foreach($key IN ${tysz})
     $key ,
  #end 
  AA.DIV_SEQ , 
  BB.DSP_SEQ
FROM(
SELECT
 CHARGE_TYPE,
 DECODE( DIV  , 1 ,'VOL' , 2 , 'AMT' , 3 , 'AVG' ) DIV ,  
  CASE  WHEN DIV = 3 THEN 
    DECODE(SUM(G_TTL) OVER (PARTITION BY CHARGE_TYPE ORDER BY CHARGE_TYPE, DIV ROWS BETWEEN 2 PRECEDING AND 2 PRECEDING), 0, 0, 
        ROUND( SUM(G_TTL) OVER (PARTITION BY CHARGE_TYPE    ORDER BY CHARGE_TYPE, DIV ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) /
               SUM(G_TTL) OVER (PARTITION BY CHARGE_TYPE   ORDER BY CHARGE_TYPE, DIV ROWS BETWEEN 2 PRECEDING AND 2 PRECEDING), 2))
   ELSE 
		G_TTL
   END AS G_TTL,
  #foreach($key IN ${tysz})
     $key ,
  #end 
  DIV DIV_SEQ 
FROM( SELECT
                LSE_RCV_CHG_TP_CD CHARGE_TYPE,  
                DIV,        

      #foreach($key IN ${tysz})
                SUM(DECODE(CNTR_TPSZ_CD, '$key', FF, 0)) $key ,
      #end            
	   #foreach($key IN ${tysz})
                SUM(DECODE(CNTR_TPSZ_CD, '$key', FF, 0)) +
      #end   
                0 G_TTL 
      FROM( SELECT
               V1.LSE_RCV_CHG_TP_CD,
               V1.CNTR_TPSZ_CD,
               V2.DIV_SEQ DIV,
               CASE V2.DIV_SEQ
                    WHEN 1 THEN NVL(V1.F1,0)
                    WHEN 2 THEN NVL(V1.F2,0)
                    WHEN 3 THEN NVL(V1.F3,0)                   
               END AS FF
            FROM
            (SELECT
                B.LSE_RCV_CHG_TP_CD ,     
                B.CNTR_TPSZ_CD ,   
                COUNT(DISTINCT(B.CNTR_NO)) F1 , 
                SUM(B.COST_AMT) F2 ,
                round( (SUM(B.COST_AMT)  / COUNT(DISTINCT(B.CNTR_NO))) * 100 ) / 100 F3
             FROM    LSE_RCV_RNTL_CHG A, LSE_RCV_RNTL_CHG_DTL B , PARAM P
             WHERE   A.COST_YRMON   = B.COST_YRMON
             AND     A.RCV_RNTL_SEQ = B.RCV_RNTL_SEQ
             AND     A.AGMT_CTY_CD  = B.AGMT_CTY_CD
             AND     A.AGMT_SEQ     = B.AGMT_SEQ
#if(${search_tp} == 'Cost')
  AND   A.QTY_YRMON BETWEEN P.PERIOD_STDT AND P.PERIOD_EDDT
#elseif(${search_tp} == 'Revenue')
  AND   A.COST_YRMON BETWEEN P.PERIOD_STDT AND P.PERIOD_EDDT 
#elseif(${search_tp} == 'Payment')
  AND	A.INV_NO IN (
	SELECT B1.INV_NO
		FROM    INV_AR_IF_MN INV,
       	(SELECT  LSE.INV_NO,LSE.SRC_IF_DT,LSE.SRC_IF_SEQ
        	FROM    LSE_RCV_RNTL_CHG LSE , PARAM P
        	WHERE   1 = 1
        	AND     LSE.COST_YRMON BETWEEN P.PERIOD_STDT AND P.PERIOD_EDDT 
        	GROUP BY LSE.INV_NO,LSE.SRC_IF_DT,LSE.SRC_IF_SEQ
        	) B1,BKG_OUTSTANDING BKG
	WHERE   B1.SRC_IF_SEQ = INV.SRC_IF_SEQ(+)
		AND     B1.SRC_IF_DT = INV.SRC_IF_DT(+)
		AND     B1.INV_NO IS NOT NULL
		AND     BKG.OTS_STL_FLG = 'Y'
        AND     INV.IF_SRC_CD = 'LSE'
		AND     INV.BL_SRC_NO = BKG.CLT_BL_NO(+)
		AND     INV.BL_SRC_NO = BKG.INV_NO(+)
	)
#end

             AND     A.CXL_FLG = 'N'            
             -- AND     B.FREE_DYS > 10
             AND     B.LSE_RCV_CHG_CRE_CD <> 'D'
#if (${receivable} == 'A' ) 
             AND     A.LSE_CNTR_CHG_STS_CD = 'I'               --Actual Amount경우 조건, Total Amount 인 경우 조건이 없어짐..
#end

#if (${agmt_seq} != '' ) 
             AND     A.AGMT_CTY_CD  = P.AGMT_CTY_CD
             AND     A.AGMT_SEQ     = P.AGMT_SEQ
#end

#if (${status} == 'SBO' ) 
             AND     B.LSTM_CD = 'SO'
#elseif (${status} == 'MUO' ) 
             AND     B.LSTM_CD = 'MO'
#end

#if (${vndr_seq} != '')
             AND A.VNDR_SEQ = P.VNDR_SEQ
#end

#if (${lstm_cd_str} != '')
    	    AND     B.LSTM_CD IN (
	        #foreach($key IN ${lstm_cd})
		        #if($velocityCount < $lstm_cd.size())
			        '$key',
		        #else
			        '$key'
		        #end
	        #end
				)
#end

#if (${cntr_tpsz_cd_str} != '')
            AND     B.CNTR_TPSZ_CD IN (
	        #foreach($key IN ${cntr_tpsz_cd})
		        #if($velocityCount < $cntr_tpsz_cd.size())
			        '$key',
		        #else
			        '$key'
		        #end
	        #end
				)
#end

#if (${charge_type_cd_str} != '')
  AND B.LSE_RCV_CHG_TP_CD IN (
	        #foreach($key IN ${charge_type_cd})
		        #if($velocityCount < $charge_type_cd.size())
			        '$key',
		        #else
			        '$key'
		        #end
	        #end
				)
#end

#if (${loc_cd} != '')
    
     #if (${loc_tp} == 'R')
            AND     B.OFFH_LOC_CD IN (SELECT RCC_CD FROM MDM_EQ_ORZ_CHT WHERE RCC_CD = P.LOC_CD)
     #elseif (${loc_tp} == 'L')
            AND     B.OFFH_LOC_CD IN (SELECT LCC_CD FROM MDM_EQ_ORZ_CHT WHERE LCC_CD = P.LOC_CD)
     #elseif (${loc_tp} == 'S')
            AND     B.OFFH_LOC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE SCC_CD = P.LOC_CD)
     #elseif (${loc_tp} == 'C')
            AND     SUBSTR(B.OFFH_LOC_CD, 0 , 2 ) = P.LOC_CD
     #end
#end

             GROUP BY B.LSE_RCV_CHG_TP_CD , B.CNTR_TPSZ_CD
            
) V1,
            ( SELECT 1 AS DIV_SEQ FROM DUAL
              UNION
              SELECT 2 AS DIV_SEQ FROM DUAL
              UNION
              SELECT 3 AS DIV_SEQ FROM DUAL) V2
         )   
      GROUP BY   LSE_RCV_CHG_TP_CD,  DIV )       
      ORDER BY   CHARGE_TYPE  ,  DIV_SEQ ) AA ,
( SELECT	 1 DSP_SEQ, 'PDM' CHARGE_TYPE FROM DUAL
UNION ALL
SELECT	 2 DSP_SEQ, 'PUC' CHARGE_TYPE FROM DUAL
UNION ALL
SELECT	 3 DSP_SEQ, 'PCR' CHARGE_TYPE FROM DUAL
UNION ALL
SELECT	 4 DSP_SEQ, 'LON' CHARGE_TYPE FROM DUAL
UNION ALL
SELECT	 5 DSP_SEQ, 'LOF' CHARGE_TYPE FROM DUAL
UNION ALL
SELECT	 6 DSP_SEQ, 'DOC' CHARGE_TYPE FROM DUAL
UNION ALL
SELECT	 7 DSP_SEQ, 'DCR' CHARGE_TYPE FROM DUAL
UNION ALL
SELECT	 8 DSP_SEQ, 'DIO' CHARGE_TYPE FROM DUAL
UNION ALL
SELECT	 9 DSP_SEQ, 'DPP' CHARGE_TYPE FROM DUAL
UNION ALL
SELECT	10 DSP_SEQ, 'CRD' CHARGE_TYPE FROM DUAL ) BB
WHERE AA.CHARGE_TYPE = BB.CHARGE_TYPE
ORDER BY BB.DSP_SEQ , AA.DIV_SEQ 



)
SELECT
   CHARGE_TYPE,
   DIV ,
  #foreach($key IN ${tysz})
   $key ,
  #end  
   G_TTL 
FROM XXX
UNION ALL
SELECT
  CHARGE_TYPE,
  DIV ,  
#foreach($key IN ${tysz})
   $key ,
  #end   
  G_TTL
FROM
( SELECT
   'G.TTL' CHARGE_TYPE,
   DIV ,
   #foreach($key IN ${tysz})
     SUM($key) $key ,
   #end
   SUM(G_TTL) G_TTL
  FROM XXX
  WHERE DIV_SEQ <> 3
  GROUP BY DIV , DIV_SEQ
  ORDER BY DIV_SEQ )
UNION ALL
SELECT
   'G.TTL' CHARGE_TYPE,
   'AVG' DIV ,      
  #foreach($key IN ${tysz})
   case when A.$key    > 0 AND V.$key    > 0 then round((A.$key    / V.$key   ) * 100 ) / 100  else 0 end $key ,   
  #end
   case when A.G_TTL > 0 AND V.G_TTL > 0 then round((A.G_TTL / V.G_TTL) * 100 ) / 100  else 0 end G_TTL   
FROM ( SELECT
          'G.TTL' CHARGE_TYPE,
         #foreach($key IN ${tysz})
          SUM($key)    $key,
         #end
          SUM(G_TTL) G_TTL
       FROM XXX 
       WHERE DIV = 'VOL'
       GROUP BY DIV , DIV_SEQ
       ORDER BY DIV_SEQ ) V , 
     ( SELECT
          'G.TTL' CHARGE_TYPE,          
         #foreach($key IN ${tysz})
          SUM($key) $key,
         #end
          SUM(G_TTL) G_TTL
       FROM XXX 
       WHERE DIV = 'AMT'
       GROUP BY DIV , DIV_SEQ
       ORDER BY DIV_SEQ ) A 
WHERE  V.CHARGE_TYPE = A.CHARGE_TYPE			]]></sql>
			<params>
				<param name="report_type" type="12" value="" out="N"/>
				<param name="period_stdt" type="12" value="" out="N"/>
				<param name="period_eddt" type="12" value="" out="N"/>
				<param name="status" type="12" value="" out="N"/>
				<param name="receivable" type="12" value="" out="N"/>
				<param name="agmt_cty_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="loc_tp" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
