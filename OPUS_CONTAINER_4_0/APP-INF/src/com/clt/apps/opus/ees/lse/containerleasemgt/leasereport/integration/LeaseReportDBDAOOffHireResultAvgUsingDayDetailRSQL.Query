<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="LeaseReportDBDAOOffHireResultAvgUsingDayDetailRSQL">
			<desc><![CDATA[임차장비별 사용실적에 대한 상세내역을 조회합니다.
]]></desc>
			<sql><![CDATA[
SELECT  ROW_SEQ
      , CNTR_NO
      , CNTR_TPSZ_CD
      , AGMT_NO
      , LSTM_CD
      , REF_NO
      , ON_HR_DT
      , ON_HR_YD_CD
      , RNTL_CHG_FREE_DYS
      , OFF_HR_DT
      , OFF_HR_YD_CD
--      , USED_DYS
      , DECODE(MST_COMMON_PKG.MST_HO_OFC_CHK_FNC(@[usr_ofc_cd])
 				,'Y',USED_DYS 
 				,'N','') AS USED_DYS
      , CRNT_YD_CD
      , CNMV_STS_CD
      , MT_DRAYAGE_COST
      , TERM_CHG_FLG
      , DII_FLG
      , IMDT_EXT_FLG
--      , PDM_AMT
 	  , DECODE(MST_COMMON_PKG.MST_HO_OFC_CHK_FNC(@[usr_ofc_cd])
 				,'Y',PDM_AMT 
 				,'N','') AS PDM_AMT
      , LON_AMT
      , PUC_AMT
      , PCR_AMT
      , LOF_AMT
      , MIN_OH_DAYS
      , DOC_AMT
      , DCR_AMT
      , ONH_DRAYAGE_COST
      , OFFH_DRAYAGE_COST
      , MNR_COST, DPP_AMT
 --     ,(NVL(PDM_AMT,0) + NVL(LON_AMT,0) + NVL(PUC_AMT,0) - NVL(PCR_AMT,0) 
--	  + NVL(LOF_AMT,0) + NVL(DOC_AMT,0) - NVL(DCR_AMT,0) + NVL(DPP_AMT,0) + NVL(MNR_COST,0) 
--	  + NVL(ONH_DRAYAGE_COST,0) + NVL(OFFH_DRAYAGE_COST,0)
--	  ) AS TTL_AMT 
      , DECODE(MST_COMMON_PKG.MST_HO_OFC_CHK_FNC(@[usr_ofc_cd])
 				,'Y',(NVL(PDM_AMT,0) + NVL(LON_AMT,0) + NVL(PUC_AMT,0) - NVL(PCR_AMT,0)+ NVL(LOF_AMT,0) + NVL(DOC_AMT,0) - NVL(DCR_AMT,0) + NVL(DPP_AMT,0) + NVL(MNR_COST,0) + NVL(ONH_DRAYAGE_COST,0) + NVL(OFFH_DRAYAGE_COST,0)) 
 				,'N','') AS TTL_AMT 
FROM   (SELECT  ROW_NUMBER() OVER(ORDER BY A.CNTR_NO) AS ROW_SEQ
              , A.CNTR_NO
              , A.CNTR_TPSZ_CD
              , A.LSTM_CD
              , C.REF_NO
              , A.AGMT_CTY_CD||LPAD(B.AGMT_SEQ, 6, '0') AS AGMT_NO               
              , CASE WHEN A.LSTM_CD IN('OW','LP','OL')
                THEN TO_CHAR(B.CNTR_STS_EVNT_DT,'YYYYMMDD') 
                ELSE TO_CHAR(B.CNTR_STS_EVNT_DT,'YYYYMMDD') 
                END AS ON_HR_DT
              , B.YD_CD AS ON_HR_YD_CD
              , B.RNTL_CHG_FREE_DYS
              , TO_CHAR(C.OFF_HR_DT,'YYYYMMDD') AS OFF_HR_DT
              , C.YD_CD AS OFF_HR_YD_CD
              , CASE WHEN A.LSTM_CD IN('OW','LP','OL')
                THEN 
                   TRUNC(NVL(C.OFF_HR_DT,TO_DATE(TO_CHAR(SYSDATE,'RRRR/MM/DD'),'RRRR/MM/DD')) - B.CNTR_STS_EVNT_DT - NVL(B.RNTL_CHG_FREE_DYS , 0)) + 1
                ELSE 
                   TRUNC(NVL(C.OFF_HR_DT,TO_DATE(TO_CHAR(SYSDATE,'RRRR/MM/DD'),'RRRR/MM/DD')) - B.CNTR_STS_EVNT_DT - NVL(B.RNTL_CHG_FREE_DYS , 0)) + 1
                END AS USED_DYS
              , A.CRNT_YD_CD
              , A.CNMV_STS_CD
              , 0 MT_DRAYAGE_COST
              , C.CNTR_LSTM_CNG_FLG AS TERM_CHG_FLG
              , C.DII_FLG
              , A.IMDT_EXT_FLG
              , B.CNTR_MIN_ONH_DYS AS MIN_OH_DAYS
              , NVL((TRUNC(NVL(C.OFF_HR_DT,TO_DATE(TO_CHAR(SYSDATE,'RRRR/MM/DD'),'RRRR/MM/DD')) - B.CNTR_STS_EVNT_DT - NVL(B.RNTL_CHG_FREE_DYS , 0)) + 1)
                     * MST_COMMON_PKG.MST_LSE_AGMT_RT_GET_FNC(B.AGMT_CTY_CD, B.AGMT_SEQ, 'PDM', A.CNTR_TPSZ_CD, B.YD_CD), 0) AS PDM_AMT
              , NVL(B.CNTR_LFT_CHG_AMT,0) AS LON_AMT
              , DECODE(SIGN(B.CNTR_PKUP_CHG_AMT),  1,  B.CNTR_PKUP_CHG_AMT, 0) AS PUC_AMT
              , DECODE(SIGN(B.CNTR_PKUP_CHG_AMT), -1, -B.CNTR_PKUP_CHG_AMT, 0) AS PCR_AMT
              , NVL(C.CNTR_LFT_CHG_AMT,0) AS LOF_AMT
              , DECODE(SIGN(C.CNTR_DRFF_CR_AMT),  1,  C.CNTR_DRFF_CR_AMT, 0) AS DOC_AMT
              , DECODE(SIGN(C.CNTR_DRFF_CR_AMT), -1, -C.CNTR_DRFF_CR_AMT, 0) AS DCR_AMT
              , (SELECT  /*+ SO INDEX_DESC(XPKTRS_TRSP_SVC_ORD) */ 
                         SO.NEGO_AMT
                 FROM    TRS_TRSP_SVC_ORD SO
                 WHERE   SO.EQ_NO                = A.CNTR_NO
                 AND     SO.TRSP_COST_DTL_MOD_CD = 'CN' 
                 AND     ROWNUM = 1
              ) AS ONH_DRAYAGE_COST
              ,(SELECT  /*+ SO INDEX_DESC(XPKTRS_TRSP_SVC_ORD) */ 
                        SO.NEGO_AMT
                FROM    TRS_TRSP_SVC_ORD SO
                WHERE   SO.EQ_NO                = A.CNTR_NO
                AND     SO.TRSP_COST_DTL_MOD_CD = 'CF' 
                AND     ROWNUM = 1
              ) AS OFFH_DRAYAGE_COST
              ,(SELECT  MNR_COMMON_PKG.MNR_GET_RPRCOST_FNC('U',  MC.CNTR_NO)
                FROM    MST_CONTAINER MC,
                        MNR_ORD_DTL   OD,
                        MNR_ORD_HDR   OH
                WHERE   MC.CNTR_NO            = OD.EQ_NO
                AND     MC.CNTR_NO            = A.CNTR_NO
                AND     OD.MNR_ORD_OFC_CTY_CD = OH.MNR_ORD_OFC_CTY_CD
                AND     OD.MNR_ORD_SEQ        = OH.MNR_ORD_SEQ
                GROUP BY MC.CNTR_NO
              ) AS MNR_COST
              ,(SELECT  RT.AGMT_CHG_VAL                                 
                FROM    LSE_AGMT_RT RT,        
                LSE_AGREEMENT AG
                WHERE   RT.AGMT_CTY_CD  = AG.AGMT_CTY_CD
                AND     RT.AGMT_SEQ     = AG.AGMT_SEQ                              
                AND     RT.CNTR_RNTL_CHG_TP_CD = 'DPPV'     
                AND     AG.DPP_TP_CD    = 'Y'
                AND     RT.AGMT_CTY_CD  = C.AGMT_CTY_CD
                AND     RT.AGMT_SEQ     = C.AGMT_SEQ
                AND     RT.CNTR_TPSZ_CD = A.CNTR_TPSZ_CD 
                AND     C.OFF_HR_DT BETWEEN C.STR_EVNT_DT AND C.END_EVNT_DT
                AND     ROWNUM = 1) AS DPP_AMT
		FROM    MST_CONTAINER A,
                MST_CNTR_STS_HIS B, 
               (SELECT  /*+ INDEX(A XAK4MST_CNTR_STS_HIS) */
						B.AGMT_CTY_CD, B.AGMT_SEQ, B.REF_NO, A.CNTR_NO,
                        A.YD_CD, A.CNTR_STS_EVNT_DT AS OFF_HR_DT,
                        A.PRNR_STS_SEQ, A.CNTR_LSTM_CNG_FLG,
                        DECODE(A.CNTR_STS_CD,'DIO','Y','N') AS DII_FLG,
                        A.CNTR_LFT_CHG_AMT, A.CNTR_DRFF_CR_AMT,
						P.STR_EVNT_DT, P.END_EVNT_DT, P.LSTM_CD, P.CNTR_TPSZ_CD, 
                        P.CNTR_USE_CO_CD, P.VNDR_SEQ, P.CO_CRE_FLG
                FROM   (SELECT  TO_DATE(@[str_evnt_dt],'YYYYMMDD') AS STR_EVNT_DT,
					            TO_DATE(@[end_evnt_dt],'YYYYMMDD') AS END_EVNT_DT,
					            @[lstm_cd]        AS LSTM_CD,
					            @[agmt_cty_cd]    AS AGMT_CTY_CD,
					            @[agmt_seq]       AS AGMT_SEQ,
					            @[cntr_tpsz_cd]   AS CNTR_TPSZ_CD,
					            @[cntr_use_co_cd] AS CNTR_USE_CO_CD,
					            @[vndr_seq]       AS VNDR_SEQ,
								@[co_cre_flg]    AS CO_CRE_FLG
					    FROM    DUAL) P,
						MST_CONTAINER C,
                        MST_CNTR_STS_HIS A,
                        LSE_AGREEMENT B
                WHERE   A.CNTR_NO      = C.CNTR_NO
				AND		A.AGMT_CTY_CD  = B.AGMT_CTY_CD
                AND     A.AGMT_SEQ     = B.AGMT_SEQ        
                AND     A.CNTR_STS_CD IN ('LSO','DIO')
                AND     A.CNTR_STS_EVNT_DT BETWEEN P.STR_EVNT_DT AND P.END_EVNT_DT
#if (${co_cre_flg} != '' )
				AND     A.CNTR_LSTM_CNG_FLG = P.CO_CRE_FLG
#end  
#if (${lstm_cd} != '')
    			AND     B.LSTM_CD IN (
	#foreach($key IN ${lstm_cd_seq})
		#if($velocityCount < $lstm_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
						)
#end
#if (${agmt_seq} != '' )
    			AND 	B.AGMT_CTY_CD = P.AGMT_CTY_CD       
    			AND 	B.AGMT_SEQ = P.AGMT_SEQ  
#end  
				) C, 
                MDM_CNTR_TP_SZ D
        WHERE   A.CNTR_NO = B.CNTR_NO
        AND     C.CNTR_NO = B.CNTR_NO
        AND     C.PRNR_STS_SEQ = B.CNTR_STS_SEQ
        AND     A.CNTR_TPSZ_CD = D.CNTR_TPSZ_CD
        AND     B.AGMT_SEQ <> 999990
		AND     A.CO_CRE_FLG = 'N'
#if (${cntr_use_co_cd} != '' )
		AND 	A.CNTR_USE_CO_CD = C.CNTR_USE_CO_CD
#end
#if (${vndr_seq} != '' ) 
		AND 	A.VNDR_SEQ = C.VNDR_SEQ
#end  
#if (${cntr_sts_cd} == '1' ) 
		AND     B.CNTR_STS_CD IN ('DII','LSI','OWN')
#elseif (${cntr_sts_cd} == '2')
		AND     B.CNTR_STS_CD IN ('LSI','OWN')
#elseif (${cntr_sts_cd} == '3')
		AND     B.CNTR_STS_CD = 'DII'
#end
#if (${cntr_tpsz_cd} != '')
		AND    	A.CNTR_TPSZ_CD IN (
	#foreach($key IN ${cntr_tpsz_cd_seq})
		#if($velocityCount < $cntr_tpsz_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
				)
#end
		)
#if (${startno} != '') 
WHERE 	ROW_SEQ BETWEEN @[startno] AND @[endno]
#end
ORDER BY CNTR_NO			]]></sql>
			<params>
				<param name="usr_ofc_cd" type="12" value="" out="N"/>
				<param name="str_evnt_dt" type="12" value="" out="N"/>
				<param name="end_evnt_dt" type="12" value="" out="N"/>
				<param name="lstm_cd" type="12" value="" out="N"/>
				<param name="agmt_cty_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="2" value="" out="N"/>
				<param name="cntr_tpsz_cd" type="12" value="" out="N"/>
				<param name="cntr_use_co_cd" type="12" value="" out="N"/>
				<param name="vndr_seq" type="2" value="" out="N"/>
				<param name="co_cre_flg" type="12" value="" out="N"/>
				<param name="startno" type="2" value="" out="N"/>
				<param name="endno" type="2" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
