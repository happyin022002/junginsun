<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="LongTxContainerMovementFinderDBDAOSearchEDIErrorSumListRSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
SELECT
#if (${data_radio} == 'RCC')
         RCC
#elseif (${data_radio} == 'CN')
         RCC
         ,CN
#elseif (${data_radio} == 'LCC')
         RCC
         ,CN
         ,LCC
#elseif (${data_radio} == 'LOC')
         RCC
         ,CN
         ,LCC
         ,LOC
#else
         RCC
         ,CN
         ,LCC
         ,LOC
         ,YARD
#end
         ,SUM (RMN_ERR_CNT) AS CORR_ERR
         ,CASE WHEN SUM (RMN_ERR_CNT) + SUM (RMN_IGNR_CNT) + SUM (RMN_OK_CNT) = 0 THEN 0 ELSE ROUND (SUM (RMN_ERR_CNT) / (SUM (RMN_ERR_CNT) + SUM (RMN_IGNR_CNT) + SUM (RMN_OK_CNT)) * 100, 1) END AS CORR_ERR_RATIO
         ,SUM (RMN_IGNR_CNT) AS CORR_IGNR
         ,CASE WHEN SUM (RMN_ERR_CNT) + SUM (RMN_IGNR_CNT) + SUM (RMN_OK_CNT) = 0 THEN 0 ELSE ROUND (SUM (RMN_IGNR_CNT) / (SUM (RMN_ERR_CNT) + SUM (RMN_IGNR_CNT) + SUM (RMN_OK_CNT)) * 100, 1) END AS CORR_IGNR_RATIO
         ,SUM (RMN_OK_CNT) AS CORR_OK
         ,CASE WHEN SUM (RMN_ERR_CNT) + SUM (RMN_IGNR_CNT) + SUM (RMN_OK_CNT) = 0 THEN 0 ELSE ROUND (SUM (RMN_OK_CNT) / (SUM (RMN_ERR_CNT) + SUM (RMN_IGNR_CNT) + SUM (RMN_OK_CNT)) * 100, 1) END AS CORR_OK_RATIO
         ,SUM (RMN_ERR_CNT) + SUM (RMN_IGNR_CNT) + SUM (RMN_OK_CNT) AS CORR_TTL
         ,SUM (SLVD_ERR_CNT) AS SLVD_ERR
         ,CASE WHEN SUM (TOTAL_CNT) - SUM (INIT_OK_CNT) - SUM (INIT_IGNR_CNT) = 0 THEN 0 ELSE ROUND (SUM (SLVD_ERR_CNT) / (SUM (TOTAL_CNT) - SUM (INIT_OK_CNT) - SUM (INIT_IGNR_CNT)) * 100, 1) END AS SLVD_ERR_RATIO
         ,SUM (SLVD_IGNR_CNT) AS SLVD_IGNR
         ,CASE WHEN SUM (INIT_IGNR_CNT) = 0 THEN 0 ELSE ROUND (SUM (SLVD_IGNR_CNT) / (SUM (INIT_IGNR_CNT)) * 100, 1) END AS SLVD_IGNR_RATIO
         ,SUM (SLVD_ERR_CNT) + SUM (SLVD_IGNR_CNT) AS SLVD_TTL
         ,CASE WHEN SUM (TOTAL_CNT) - SUM (INIT_OK_CNT) = 0 THEN 0 ELSE ROUND ((SUM (SLVD_ERR_CNT) + SUM (SLVD_IGNR_CNT)) / (SUM (TOTAL_CNT) - SUM (INIT_OK_CNT)) * 100, 1) END AS SLVD_TTL_RATIO
         ,SUM (TOTAL_CNT) - SUM (INIT_OK_CNT) - SUM (INIT_IGNR_CNT) AS INIT_ERR
         ,CASE WHEN SUM (TOTAL_CNT) = 0 THEN 0 ELSE ROUND ((SUM (TOTAL_CNT) - SUM (INIT_OK_CNT) - SUM (INIT_IGNR_CNT)) / SUM (TOTAL_CNT) * 100, 1) END AS INIT_ERR_RATIO
         ,SUM (INIT_IGNR_CNT) AS INIT_IGNR
         ,CASE WHEN SUM (TOTAL_CNT) = 0 THEN 0 ELSE ROUND (SUM (INIT_IGNR_CNT) / SUM (TOTAL_CNT) * 100, 1) END AS INIT_IGNR_RATIO
         ,SUM (INIT_OK_CNT) AS INIT_OK
         ,CASE WHEN SUM (TOTAL_CNT) = 0 THEN 0 ELSE ROUND (SUM (INIT_OK_CNT) / SUM (TOTAL_CNT) * 100, 1) END AS INIT_OK_RATIO
         ,SUM (TOTAL_CNT) as INIT_TTL
         ,@[p_date1] AS P_DATE1
         ,@[p_date2] AS P_DATE2
    FROM (SELECT /*+ ORDERED USE_NL(MSG ML ME) */
                 ME.RCC_CD AS RCC
                 ,SUBSTR (EVNT_YD_CD, 0, 2) AS CN
                 ,ME.LCC_CD AS LCC
                 ,SUBSTR (EVNT_YD_CD, 0, 5) AS LOC
                 ,EVNT_YD_CD AS YARD
                 ,INIT_OK_CNT
                 ,INIT_IGNR_CNT
                 ,TOTAL_CNT
                 ,SLVD_ERR_CNT
                 ,SLVD_IGNR_CNT
                 ,RMN_ERR_CNT
                 ,RMN_IGNR_CNT
                 ,RMN_OK_CNT
            FROM (
                  SELECT EVNT_YD_CD
                     	 ,SUM(CASE WHEN CRE_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '') THEN INIT_OK_CNT ELSE 0  END) AS INIT_OK_CNT
	                     ,SUM(CASE WHEN CRE_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '') THEN INIT_IGNR_CNT ELSE 0  END) AS INIT_IGNR_CNT
    	                 ,SUM(CASE WHEN CRE_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '') THEN TOTAL_CNT ELSE 0  END) AS TOTAL_CNT
                     #if (${slvd_cnt_dt} == 'S')
                	     ,SUM(CASE WHEN UPD_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '') THEN SLVD_ERR_CNT ELSE 0  END) AS SLVD_ERR_CNT
                    	 ,SUM(CASE WHEN UPD_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '') THEN SLVD_IGNR_CNT ELSE 0  END) AS SLVD_IGNR_CNT
                     #else
        	             ,SUM(CASE WHEN CRE_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '') THEN SLVD_ERR_CNT ELSE 0  END) AS SLVD_ERR_CNT
            	         ,SUM(CASE WHEN CRE_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '') THEN SLVD_IGNR_CNT ELSE 0  END) AS SLVD_IGNR_CNT
                     #end
	                     ,SUM(CASE WHEN CRE_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '') THEN RMN_ERR_CNT ELSE 0  END) AS RMN_ERR_CNT
    	                 ,SUM(CASE WHEN CRE_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '') THEN RMN_IGNR_CNT ELSE 0  END) AS RMN_IGNR_CNT
        	             ,SUM(CASE WHEN CRE_DT BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '') THEN RMN_OK_CNT ELSE 0  END) AS RMN_OK_CNT
            	    FROM 
                	     (SELECT MSG.EVNT_YD_CD
                            	 ,CEIL(MSG.IDX_CRE_LOCL_DT) AS CRE_DT
                                 #if (${slvd_cnt_dt} == 'S')
	                             ,CEIL(TO_CHAR(MSG.UPD_LOCL_DT, 'YYYYMMDD')) AS UPD_DT
                                 #end
    	                         ,COUNT(CASE WHEN RMK.MVMT_EDI_RSLT_CD = 'Y' THEN 1 END) AS INIT_OK_CNT
          	                     ,COUNT(CASE WHEN RMK.MVMT_EDI_RSLT_CD IN ('X', 'I') THEN 1 END) AS INIT_IGNR_CNT
               		             ,COUNT(CASE WHEN MSG.RTY_KNT = MSG.RTY_KNT THEN 1 END) AS TOTAL_CNT
                    	         ,COUNT(CASE WHEN MSG.MVMT_EDI_RSLT_CD IN ('D', 'Y') 
                                              AND RMK.MVMT_EDI_RSLT_CD = 'N' THEN 1 END) AS SLVD_ERR_CNT
                         		 ,COUNT(CASE WHEN MSG.MVMT_EDI_RSLT_CD IN ('D', 'Y')
                                              AND RMK.MVMT_EDI_RSLT_CD IN ('X', 'I') THEN 1 END) AS SLVD_IGNR_CNT
	                             ,COUNT(CASE WHEN MSG.MVMT_EDI_RSLT_CD = 'N' THEN 1 END) AS RMN_ERR_CNT
     	                         ,COUNT(CASE WHEN MSG.MVMT_EDI_RSLT_CD IN ('X','I') THEN 1 END) AS RMN_IGNR_CNT
          	                     ,COUNT(CASE WHEN MSG.MVMT_EDI_RSLT_CD = 'Y' THEN 1 END) AS RMN_OK_CNT
                     		FROM CTM_MVMT_EDI_MSG MSG, CTM_EDI_RSLT_RMK RMK
	                       WHERE MSG.MVMT_EDI_TP_CD = RMK.MVMT_EDI_TP_CD
      		                 AND MSG.MVMT_EDI_MSG_TP_ID = RMK.MVMT_EDI_MSG_TP_ID
               		         AND MSG.MVMT_EDI_MSG_AREA_CD = RMK.MVMT_EDI_MSG_AREA_CD
 		                     AND MSG.MVMT_EDI_MSG_YRMONDY = RMK.MVMT_EDI_MSG_YRMONDY
        		             AND MSG.MVMT_EDI_MSG_SEQ = RMK.MVMT_EDI_MSG_SEQ
                		     AND RMK.RTY_KNT = 0
        #if (${rcc_cd} == '' || ${rcc_cd} == 'ALL')
		                     AND MSG.MVMT_EDI_MSG_AREA_CD IN ('USA', 'SWA', 'KOR', 'EUR', 'CHN')
        #else
        		             AND MSG.MVMT_EDI_MSG_AREA_CD = (SELECT SYS_AREA_GRP_ID AS SVR_ID
                		                                       FROM COM_SYS_AREA_GRP_ID
                        		                              WHERE CNT_CD = SUBSTR (@[rcc_cd], 0, 2))
        #end
                             #if (${slvd_cnt_dt} == 'S')
                             AND (CEIL(MSG.IDX_CRE_LOCL_DT) BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '')
                                 OR CEIL(TO_CHAR(MSG.UPD_LOCL_DT, 'YYYYMMDD')) BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', ''))
                             #else
                             AND CEIL(MSG.IDX_CRE_LOCL_DT) BETWEEN REPLACE (@[p_date1], '-', '') AND REPLACE (@[p_date2], '-', '')
                             #end
        #if (${p_yard2} != '')
		                     AND MSG.EVNT_YD_CD = @[p_yard1]||@[p_yard2]
        #elseif (${p_yard1} != '')
        		             AND MSG.EVNT_YD_CD LIKE @[p_yard1]||'%'
        #end
                	       GROUP BY MSG.EVNT_YD_CD, CEIL(MSG.IDX_CRE_LOCL_DT)
                                 #if (${slvd_cnt_dt} == 'S')
                                    , CEIL(TO_CHAR(MSG.UPD_LOCL_DT, 'YYYYMMDD'))
                                 #end
                    	 )
                   GROUP BY EVNT_YD_CD
                 ) MSG
                 ,MDM_LOCATION ML
                 ,MDM_EQ_ORZ_CHT ME
           WHERE 1=1
#if (${rcc_cd} != '' && ${rcc_cd} != 'ALL')
             AND ME.RCC_CD = @[rcc_cd]
#end
#if (${lcc_cd} != '')
             AND ME.LCC_CD = @[lcc_cd]
#end
             AND ML.SCC_CD = ME.SCC_CD(+)
             AND SUBSTR (EVNT_YD_CD, 0, 5) = ML.LOC_CD(+)
         )
#if (${data_radio} == 'RCC')
   GROUP BY RCC
   ORDER BY RCC
#elseif (${data_radio} == 'CN')
   GROUP BY RCC, CN
   ORDER BY RCC, CN
#elseif (${data_radio} == 'LCC')
   GROUP BY RCC, CN, LCC
   ORDER BY RCC, CN, LCC
#elseif (${data_radio} == 'LOC')
   GROUP BY RCC, CN, LCC, LOC
   ORDER BY RCC, CN, LCC, LOC
#else
   GROUP BY RCC, CN, LCC, LOC, YARD
   ORDER BY RCC, CN, LCC, LOC, YARD
#end			]]></sql>
			<params>
				<param name="p_date1" type="12" value="" out="N"/>
				<param name="p_date2" type="12" value="" out="N"/>
				<param name="rcc_cd" type="12" value="" out="N"/>
				<param name="p_yard1" type="12" value="" out="N"/>
				<param name="p_yard2" type="12" value="" out="N"/>
				<param name="lcc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
