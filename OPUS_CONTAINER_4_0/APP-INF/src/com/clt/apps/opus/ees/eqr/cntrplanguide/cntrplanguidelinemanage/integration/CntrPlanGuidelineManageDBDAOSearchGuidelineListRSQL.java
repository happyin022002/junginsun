/*=========================================================
*Copyright(c) 2014 CyberLogitec
*@FileName : CntrPlanGuidelineManageDBDAOSearchGuidelineListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2014.01.02
*@LastModifier : 
*@LastVersion : 1.0
* 2014.01.02 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.ees.eqr.cntrplanguide.cntrplanguidelinemanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CntrPlanGuidelineManageDBDAOSearchGuidelineListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * SEARCH GUIDELNINE  LIST
	  * </pre>
	  */
	public CntrPlanGuidelineManageDBDAOSearchGuidelineListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane_direct",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_eta_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_cfm_flg",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("main_page",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_sub_loc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_eff_st_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_eff_end_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_loc_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.ees.eqr.cntrplanguide.cntrplanguidelinemanage.integration").append("\n"); 
		query.append("FileName : CntrPlanGuidelineManageDBDAOSearchGuidelineListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT M.TRD_CD" ).append("\n"); 
		query.append("      ,M.SUB_TRD_CD" ).append("\n"); 
		query.append("      ,M.VSL_LANE_CD" ).append("\n"); 
		query.append("      ,M.VVD" ).append("\n"); 
		query.append("      ,M.POL_CD" ).append("\n"); 
		query.append("      ,TO_CHAR(TO_DATE(M.EFF_ST_DT,'YYYYMMDD'),'MON-DD') ETA_DT" ).append("\n"); 
		query.append("      ,M.POD_CD" ).append("\n"); 
		query.append("      ,DECODE(M.D2_QTY,0,'',M.D2_QTY) D2_QTY" ).append("\n"); 
		query.append("      ,M.D2_UT" ).append("\n"); 
		query.append("      ,DECODE(M.D4_QTY,0,'',M.D4_QTY) D4_QTY" ).append("\n"); 
		query.append("      ,M.D4_UT" ).append("\n"); 
		query.append("      ,DECODE(M.D5_QTY,0,'',M.D5_QTY) D5_QTY" ).append("\n"); 
		query.append("      ,M.D5_UT" ).append("\n"); 
		query.append("      ,DECODE(M.D7_QTY,0,'',M.D7_QTY) D7_QTY" ).append("\n"); 
		query.append("      ,M.D7_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.R2_QTY,0,'',M.R2_QTY) R2_QTY" ).append("\n"); 
		query.append("	  ,M.R2_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.R5_QTY,0,'',M.R5_QTY) R5_QTY" ).append("\n"); 
		query.append("	  ,M.R5_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.R9_QTY,0,'',M.R9_QTY) R9_QTY" ).append("\n"); 
		query.append("	  ,M.R9_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.O2_QTY,0,'',M.O2_QTY) O2_QTY" ).append("\n"); 
		query.append("	  ,M.O2_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.O4_QTY,0,'',M.O4_QTY) O4_QTY" ).append("\n"); 
		query.append("	  ,M.O4_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.O5_QTY,0,'',M.O5_QTY) O5_QTY" ).append("\n"); 
		query.append("	  ,M.O5_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.S2_QTY,0,'',M.S2_QTY) S2_QTY" ).append("\n"); 
		query.append("	  ,M.S2_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.S4_QTY,0,'',M.S4_QTY) S4_QTY" ).append("\n"); 
		query.append("	  ,M.S4_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.F2_QTY,0,'',M.F2_QTY) F2_QTY" ).append("\n"); 
		query.append("	  ,M.F2_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.F4_QTY,0,'',M.F4_QTY) F4_QTY" ).append("\n"); 
		query.append("	  ,M.F4_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.F5_QTY,0,'',M.F5_QTY) F5_QTY" ).append("\n"); 
		query.append("	  ,M.F5_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.A2_QTY,0,'',M.A2_QTY) A2_QTY" ).append("\n"); 
		query.append("	  ,M.A2_UT" ).append("\n"); 
		query.append("	  ,DECODE(M.A4_QTY,0,'',M.A4_QTY) A4_QTY" ).append("\n"); 
		query.append("	  ,M.A4_UT" ).append("\n"); 
		query.append("      ,M.OLD_EFF_ST_DT" ).append("\n"); 
		query.append("	  -- SET GRID COLOR START --" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D2_QTY,0) <> NVL(M.OLD_D2_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D2_QTY,0) =  NVL(M.OLD_D2_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_D2_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D2_UT,' ') <> NVL(M.OLD_D2_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D2_UT,' ') =  NVL(M.OLD_D2_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_D2_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D4_QTY,0) <> NVL(M.OLD_D4_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D4_QTY,0) =  NVL(M.OLD_D4_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_D4_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D4_UT,' ') <> NVL(M.OLD_D4_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D4_UT,' ') =  NVL(M.OLD_D4_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_D4_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D5_QTY,0) <> NVL(M.OLD_D5_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D5_QTY,0) =  NVL(M.OLD_D5_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_D5_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D5_UT,' ') <> NVL(M.OLD_D5_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D5_UT,' ') =  NVL(M.OLD_D5_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_D5_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D7_QTY,0) <> NVL(M.OLD_D7_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D7_QTY,0) =  NVL(M.OLD_D7_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_D7_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D7_UT,' ') <> NVL(M.OLD_D7_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.D7_UT,' ') =  NVL(M.OLD_D7_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_D7_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R2_QTY,0) <> NVL(M.OLD_R2_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R2_QTY,0) =  NVL(M.OLD_R2_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_R2_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R2_UT,' ') <> NVL(M.OLD_R2_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R2_UT,' ') =  NVL(M.OLD_R2_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_R2_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R5_QTY,0) <> NVL(M.OLD_R5_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R5_QTY,0) =  NVL(M.OLD_R5_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_R5_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R5_UT,' ') <> NVL(M.OLD_R5_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R5_UT,' ') =  NVL(M.OLD_R5_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_R5_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R9_QTY,0) <> NVL(M.OLD_R9_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R9_QTY,0) =  NVL(M.OLD_R9_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_R9_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R9_UT,' ') <> NVL(M.OLD_R9_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.R9_UT,' ') =  NVL(M.OLD_R9_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_R9_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O2_QTY,0) <> NVL(M.OLD_O2_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O2_QTY,0) =  NVL(M.OLD_O2_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_O2_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O2_UT,' ') <> NVL(M.OLD_O2_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O2_UT,' ') =  NVL(M.OLD_O2_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_O2_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O4_QTY,0) <> NVL(M.OLD_O4_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O4_QTY,0) =  NVL(M.OLD_O4_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_O4_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O4_UT,' ') <> NVL(M.OLD_O4_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O4_UT,' ') =  NVL(M.OLD_O4_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_O4_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O5_QTY,0) <> NVL(M.OLD_O5_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O5_QTY,0) =  NVL(M.OLD_O5_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_O5_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O5_UT,' ') <> NVL(M.OLD_O5_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.O5_UT,' ') =  NVL(M.OLD_O5_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_O5_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.S2_QTY,0) <> NVL(M.OLD_S2_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.S2_QTY,0) =  NVL(M.OLD_S2_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_S2_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.S2_UT,' ') <> NVL(M.OLD_S2_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.S2_UT,' ') =  NVL(M.OLD_S2_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_S2_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.S4_QTY,0) <> NVL(M.OLD_S4_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.S4_QTY,0) =  NVL(M.OLD_S4_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_S4_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.S4_UT,' ') <> NVL(M.OLD_S4_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.S4_UT,' ') =  NVL(M.OLD_S4_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_S4_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F2_QTY,0) <> NVL(M.OLD_F2_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F2_QTY,0) =  NVL(M.OLD_F2_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_F2_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F2_UT,' ') <> NVL(M.OLD_F2_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F2_UT,' ') =  NVL(M.OLD_F2_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_F2_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F4_QTY,0) <> NVL(M.OLD_F4_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F4_QTY,0) =  NVL(M.OLD_F4_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_F4_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F4_UT,' ') <> NVL(M.OLD_F4_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F4_UT,' ') =  NVL(M.OLD_F4_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_F4_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F5_QTY,0) <> NVL(M.OLD_F5_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F5_QTY,0) =  NVL(M.OLD_F5_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_F5_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F5_UT,' ') <> NVL(M.OLD_F5_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.F5_UT,' ') =  NVL(M.OLD_F5_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_F5_UT	   " ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.A2_QTY,0) <> NVL(M.OLD_A2_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.A2_QTY,0) =  NVL(M.OLD_A2_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_A2_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.A2_UT,' ') <> NVL(M.OLD_A2_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.A2_UT,' ') =  NVL(M.OLD_A2_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_A2_UT" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.A4_QTY,0) <> NVL(M.OLD_A4_QTY,0) THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.A4_QTY,0) =  NVL(M.OLD_A4_QTY,0) THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_A4_QTY" ).append("\n"); 
		query.append("	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.A4_UT,' ') <> NVL(M.OLD_A4_UT,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.A4_UT,' ') =  NVL(M.OLD_A4_UT,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_A4_UT" ).append("\n"); 
		query.append("      ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'" ).append("\n"); 
		query.append("	        WHEN NVL(M.REPO_GLINE_RMK,' ') <> NVL(M.OLD_REPO_GLINE_RMK,' ') THEN 'D'" ).append("\n"); 
		query.append("	        WHEN NVL(M.REPO_GLINE_RMK,' ') =  NVL(M.OLD_REPO_GLINE_RMK,' ') THEN 'S'" ).append("\n"); 
		query.append("	   END AS OLD_REPO_GLINE_RMK" ).append("\n"); 
		query.append("	  -- SET GRID COLOR END --" ).append("\n"); 
		query.append("      ,NVL(M.REPO_GLINE_RMK,' ') REPO_GLINE_RMK " ).append("\n"); 
		query.append("      ,M.EFF_END_DT" ).append("\n"); 
		query.append("      ,(SELECT MAX(USR_NM) FROM COM_USER WHERE USR_ID = M.UPD_USR_ID)  UPD_USR_NM" ).append("\n"); 
		query.append("      ,M.UPD_DT" ).append("\n"); 
		query.append("      ,M.CFM_FLG" ).append("\n"); 
		query.append("      ,M.UPD_USR_ID   -- HIDDEN" ).append("\n"); 
		query.append("      ,M.EFF_ST_DT    -- HIDDEN" ).append("\n"); 
		query.append("      ,M.EQ_GLINE_SEQ -- HIDDEN" ).append("\n"); 
		query.append("      ,M.VSL_CD       -- HIDDEN" ).append("\n"); 
		query.append("      ,M.SKD_VOY_NO   -- HIDDEN" ).append("\n"); 
		query.append("      ,M.SKD_DIR_CD   -- HIDDEN" ).append("\n"); 
		query.append("      ,M.SORT_ID      -- HIDDEN" ).append("\n"); 
		query.append("      ,SKD.CLPT_SEQ" ).append("\n"); 
		query.append("  FROM ( -- GUIDELINE HEDER + LOADING(PRIORITY)" ).append("\n"); 
		query.append("		SELECT A.TRD_CD" ).append("\n"); 
		query.append("              ,A.SUB_TRD_CD" ).append("\n"); 
		query.append("              ,A.VSL_LANE_CD" ).append("\n"); 
		query.append("              ,A.VVD" ).append("\n"); 
		query.append("              ,A.POL_CD" ).append("\n"); 
		query.append("              ,A.EFF_ST_DT" ).append("\n"); 
		query.append("              ,A.POD_CD" ).append("\n"); 
		query.append("              ,'' D2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',A.PRIO_SEQ,''))) D2_UT" ).append("\n"); 
		query.append("              ,TO_NUMBER('')  D4_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',A.PRIO_SEQ,''))) D4_UT" ).append("\n"); 
		query.append("              ,''  D5_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',A.PRIO_SEQ,''))) D5_UT" ).append("\n"); 
		query.append("              ,''  D7_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',A.PRIO_SEQ,''))) D7_UT" ).append("\n"); 
		query.append("              ,'' R2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',A.PRIO_SEQ,''))) R2_UT" ).append("\n"); 
		query.append("              ,''  R5_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',A.PRIO_SEQ,''))) R5_UT" ).append("\n"); 
		query.append("              ,''  R9_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R9',A.PRIO_SEQ,''))) R9_UT" ).append("\n"); 
		query.append("              ,''  O2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',A.PRIO_SEQ,''))) O2_UT" ).append("\n"); 
		query.append("              ,''  O4_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',A.PRIO_SEQ,''))) O4_UT" ).append("\n"); 
		query.append("              ,''  O5_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O5',A.PRIO_SEQ,''))) O5_UT" ).append("\n"); 
		query.append("              ,''  S2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',A.PRIO_SEQ,''))) S2_UT" ).append("\n"); 
		query.append("              ,''  S4_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',A.PRIO_SEQ,''))) S4_UT" ).append("\n"); 
		query.append("              ,''  F2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',A.PRIO_SEQ,''))) F2_UT" ).append("\n"); 
		query.append("              ,''  F4_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',A.PRIO_SEQ,''))) F4_UT" ).append("\n"); 
		query.append("              ,''  F5_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',A.PRIO_SEQ,''))) F5_UT" ).append("\n"); 
		query.append("              ,''  A2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',A.PRIO_SEQ,''))) A2_UT" ).append("\n"); 
		query.append("              ,''  A4_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',A.PRIO_SEQ,''))) A4_UT" ).append("\n"); 
		query.append("			  ,MAX(OLD_EFF_ST_DT) OLD_EFF_ST_DT" ).append("\n"); 
		query.append("              ,'' OLD_D2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',A.OLD_PRIO_SEQ,''))) OLD_D2_UT             " ).append("\n"); 
		query.append("              ,''  OLD_D4_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',A.OLD_PRIO_SEQ,''))) OLD_D4_UT" ).append("\n"); 
		query.append("              ,''  OLD_D5_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',A.OLD_PRIO_SEQ,''))) OLD_D5_UT" ).append("\n"); 
		query.append("              ,'' OLD_D7_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',A.OLD_PRIO_SEQ,''))) OLD_D7_UT" ).append("\n"); 
		query.append("              ,'' OLD_R2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',A.OLD_PRIO_SEQ,''))) OLD_R2_UT" ).append("\n"); 
		query.append("              ,'' OLD_R5_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',A.OLD_PRIO_SEQ,''))) OLD_R5_UT" ).append("\n"); 
		query.append("              ,'' OLD_R9_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R9',A.OLD_PRIO_SEQ,''))) OLD_R9_UT" ).append("\n"); 
		query.append("              ,'' OLD_O2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',A.OLD_PRIO_SEQ,''))) OLD_O2_UT" ).append("\n"); 
		query.append("              ,'' OLD_O4_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',A.OLD_PRIO_SEQ,''))) OLD_O4_UT" ).append("\n"); 
		query.append("              ,'' OLD_O5_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O5',A.OLD_PRIO_SEQ,''))) OLD_O5_UT" ).append("\n"); 
		query.append("              ,'' OLD_S2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',A.OLD_PRIO_SEQ,''))) OLD_S2_UT" ).append("\n"); 
		query.append("              ,'' OLD_S4_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',A.OLD_PRIO_SEQ,''))) OLD_S4_UT" ).append("\n"); 
		query.append("              ,'' OLD_F2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',A.OLD_PRIO_SEQ,''))) OLD_F2_UT" ).append("\n"); 
		query.append("              ,'' OLD_F4_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',A.OLD_PRIO_SEQ,''))) OLD_F4_UT" ).append("\n"); 
		query.append("              ,'' OLD_F5_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',A.OLD_PRIO_SEQ,''))) OLD_F5_UT" ).append("\n"); 
		query.append("              ,'' OLD_A2_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',A.OLD_PRIO_SEQ,''))) OLD_A2_UT" ).append("\n"); 
		query.append("              ,'' OLD_A4_QTY" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',A.OLD_PRIO_SEQ,''))) OLD_A4_UT" ).append("\n"); 
		query.append("              ,A.REPO_GLINE_RMK" ).append("\n"); 
		query.append("              ,A.OLD_REPO_GLINE_RMK" ).append("\n"); 
		query.append("              ,A.EFF_END_DT" ).append("\n"); 
		query.append("              ,A.UPD_USR_ID" ).append("\n"); 
		query.append("              ,TO_CHAR(A.UPD_DT,'YYYY-MM-DD HH24:MI:SS') UPD_DT" ).append("\n"); 
		query.append("              ,A.CFM_FLG" ).append("\n"); 
		query.append("		      ,A.ORG_EQ_GLINE_SEQ" ).append("\n"); 
		query.append("              ,A.EQ_GLINE_SEQ -- HIDDEN" ).append("\n"); 
		query.append("              ,A.VSL_CD       -- HIDDEN" ).append("\n"); 
		query.append("              ,A.SKD_VOY_NO   -- HIDDEN" ).append("\n"); 
		query.append("              ,A.SKD_DIR_CD   -- HIDDEN" ).append("\n"); 
		query.append("              ,A.SORT_ID      -- HIDDEN" ).append("\n"); 
		query.append("          FROM ( SELECT HDR.TRD_CD" ).append("\n"); 
		query.append("                       ,HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                       ,HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                       ,HDR.VSL_CD || HDR.SKD_VOY_NO || HDR.SKD_DIR_CD VVD" ).append("\n"); 
		query.append("                       ,HDR.POL_CD" ).append("\n"); 
		query.append("                       ,HDR.EFF_ST_DT" ).append("\n"); 
		query.append("                       ,'Priority' POD_CD" ).append("\n"); 
		query.append("                       ,LODG.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                       ,LODG.PRIO_SEQ" ).append("\n"); 
		query.append("                       ,( SELECT EFF_ST_DT" ).append("\n"); 
		query.append("                            FROM EQR_CTRL_LODG_GLINE" ).append("\n"); 
		query.append("                           WHERE TRD_CD =  LODG.TRD_CD" ).append("\n"); 
		query.append("                             AND SUB_TRD_CD = LODG.SUB_TRD_CD" ).append("\n"); 
		query.append("                             AND VSL_LANE_CD = LODG.VSL_LANE_CD" ).append("\n"); 
		query.append("                             AND CNTR_TPSZ_CD = LODG.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                             AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)" ).append("\n"); 
		query.append("                                                   FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                                                  WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                                                    AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                                                    AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                                                    AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ)) OLD_EFF_ST_DT -- 전 차수 EFF_ST_DT" ).append("\n"); 
		query.append("                       ,( SELECT PRIO_SEQ" ).append("\n"); 
		query.append("                            FROM EQR_CTRL_LODG_GLINE" ).append("\n"); 
		query.append("                           WHERE TRD_CD =  LODG.TRD_CD" ).append("\n"); 
		query.append("                             AND SUB_TRD_CD = LODG.SUB_TRD_CD" ).append("\n"); 
		query.append("                             AND VSL_LANE_CD = LODG.VSL_LANE_CD" ).append("\n"); 
		query.append("                             AND CNTR_TPSZ_CD = LODG.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                             AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)" ).append("\n"); 
		query.append("                                                   FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                                                  WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                                                    AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                                                    AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                                                    AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ)) OLD_PRIO_SEQ --잔 차수 PRIO_SEQ" ).append("\n"); 
		query.append("                       ,HDR.REPO_GLINE_RMK" ).append("\n"); 
		query.append("                       ,(SELECT MAX(REPO_GLINE_RMK)" ).append("\n"); 
		query.append("                           FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                          WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                            AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                            AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) OLD_REPO_GLINE_RMK" ).append("\n"); 
		query.append("                       ,HDR.EFF_END_DT" ).append("\n"); 
		query.append("                       ,HDR.UPD_USR_ID" ).append("\n"); 
		query.append("                       ,HDR.UPD_DT " ).append("\n"); 
		query.append("                       ,HDR.CFM_FLG" ).append("\n"); 
		query.append("                       ,(SELECT MAX(EQ_GLINE_SEQ)" ).append("\n"); 
		query.append("                           FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                          WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                            AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                            AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) AS ORG_EQ_GLINE_SEQ" ).append("\n"); 
		query.append("                       ,HDR.EQ_GLINE_SEQ -- HIDDEN" ).append("\n"); 
		query.append("                       ,HDR.VSL_CD       -- HIDDEN" ).append("\n"); 
		query.append("                       ,HDR.SKD_VOY_NO   -- HIDDEN" ).append("\n"); 
		query.append("                       ,HDR.SKD_DIR_CD   -- HIDDEN" ).append("\n"); 
		query.append("                       ,'1' SORT_ID      -- HIDDEN" ).append("\n"); 
		query.append("                   FROM EQR_CTRL_GLINE_HDR HDR" ).append("\n"); 
		query.append("                       ,EQR_CTRL_LODG_GLINE LODG" ).append("\n"); 
		query.append("                  WHERE HDR.TRD_CD       = LODG.TRD_CD" ).append("\n"); 
		query.append("                    AND HDR.SUB_TRD_CD   = LODG.SUB_TRD_CD" ).append("\n"); 
		query.append("                    AND HDR.VSL_LANE_CD  = LODG.VSL_LANE_CD" ).append("\n"); 
		query.append("                    AND HDR.EQ_GLINE_SEQ = LODG.EQ_GLINE_SEQ" ).append("\n"); 
		query.append("            #if (${s_dt_tp_cd} == '1')" ).append("\n"); 
		query.append("				#if (${s_eta_dt} != '')" ).append("\n"); 
		query.append("					AND  ( HDR.EFF_ST_DT >= @[s_eta_dt] OR @[s_eta_dt] BETWEEN HDR.EFF_ST_DT AND HDR.EFF_END_DT)" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("			#elseif (${s_dt_tp_cd} == '2') " ).append("\n"); 
		query.append("				#if (${s_eff_st_dt} != '' && ${s_eff_end_dt} != '') " ).append("\n"); 
		query.append("  					AND (    @[s_eff_st_dt] BETWEEN  EFF_ST_DT AND EFF_END_DT" ).append("\n"); 
		query.append("						  OR @[s_eff_end_dt] BETWEEN  EFF_ST_DT AND EFF_END_DT" ).append("\n"); 
		query.append("					      OR ( HDR.EFF_ST_DT >=  @[s_eff_st_dt]  AND HDR.EFF_END_DT <= @[s_eff_end_dt])" ).append("\n"); 
		query.append("       					)" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${trade} != '')" ).append("\n"); 
		query.append("					AND HDR.TRD_CD IN (" ).append("\n"); 
		query.append("					#foreach($key IN ${arr_trd_cd})" ).append("\n"); 
		query.append("						#if($velocityCount < $arr_trd_cd.size())" ).append("\n"); 
		query.append("						'$key', " ).append("\n"); 
		query.append("						#else " ).append("\n"); 
		query.append("						'$key' " ).append("\n"); 
		query.append("						#end " ).append("\n"); 
		query.append("					#end " ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("			#end	" ).append("\n"); 
		query.append("			#if (${subtrade} != '')" ).append("\n"); 
		query.append("				AND (" ).append("\n"); 
		query.append("				#foreach($key IN ${arr_sub_trd_cd})" ).append("\n"); 
		query.append("					#if($velocityCount == 1 )" ).append("\n"); 
		query.append("						(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))" ).append("\n"); 
		query.append("					#else " ).append("\n"); 
		query.append("						OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))" ).append("\n"); 
		query.append("					#end " ).append("\n"); 
		query.append("				#end " ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${lane} != '') " ).append("\n"); 
		query.append("				AND (" ).append("\n"); 
		query.append("				#foreach($key IN ${arr_lane})" ).append("\n"); 
		query.append("					#if($velocityCount == 1 ) " ).append("\n"); 
		query.append("						(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))" ).append("\n"); 
		query.append("					#else " ).append("\n"); 
		query.append("						OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))" ).append("\n"); 
		query.append("					#end " ).append("\n"); 
		query.append("				#end " ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${lane_direct} != '') " ).append("\n"); 
		query.append("				AND HDR.VSL_LANE_CD = @[lane_direct]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				AND DECODE(UPPER(@[main_page]),'FALSE',NVL(HDR.CFM_FLG,'X'),DECODE(@[s_cfm_flg],null,'X','','X',NVL(HDR.CFM_FLG,'X'))) " ).append("\n"); 
		query.append("				  = DECODE(UPPER(@[main_page]),'FALSE','Y',DECODE(@[s_cfm_flg],null,'X','','X',@[s_cfm_flg]))" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${s_loc_cd} != '' || ${s_sub_loc_cd} != '')" ).append("\n"); 
		query.append("				AND POL_CD IN ( SELECT A.LOC_CD" ).append("\n"); 
		query.append("				                  FROM MDM_LOCATION A" ).append("\n"); 
		query.append("					                  ,MDM_EQ_ORZ_CHT B" ).append("\n"); 
		query.append("				                 WHERE A.SCC_CD        = B.SCC_CD" ).append("\n"); 
		query.append("							#if (${s_loc_cd} != '')" ).append("\n"); 
		query.append("					               AND B.RCC_CD        = @[s_loc_cd]" ).append("\n"); 
		query.append("							#end" ).append("\n"); 
		query.append("							#if (${s_sub_loc_cd} != '')" ).append("\n"); 
		query.append("					               AND B.LCC_CD        = @[s_sub_loc_cd]" ).append("\n"); 
		query.append("							#end" ).append("\n"); 
		query.append("					               AND A.CALL_PORT_FLG = 'Y'       -- 하드코딩" ).append("\n"); 
		query.append("					               AND A.DELT_FLG      = 'N'       -- 하드코딩" ).append("\n"); 
		query.append("              					)" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("				 ) A" ).append("\n"); 
		query.append("          GROUP BY A.TRD_CD" ).append("\n"); 
		query.append("                  ,A.SUB_TRD_CD" ).append("\n"); 
		query.append("                  ,A.VSL_LANE_CD" ).append("\n"); 
		query.append("                  ,A.VVD" ).append("\n"); 
		query.append("                  ,A.POL_CD" ).append("\n"); 
		query.append("                  ,A.EFF_ST_DT" ).append("\n"); 
		query.append("                  ,A.POD_CD" ).append("\n"); 
		query.append("                  ,A.REPO_GLINE_RMK" ).append("\n"); 
		query.append("                  ,A.EFF_END_DT" ).append("\n"); 
		query.append("                  ,A.UPD_USR_ID" ).append("\n"); 
		query.append("                  ,A.UPD_DT " ).append("\n"); 
		query.append("                  ,A.CFM_FLG" ).append("\n"); 
		query.append("                  ,A.EQ_GLINE_SEQ -- HIDDEN" ).append("\n"); 
		query.append("                  ,A.VSL_CD       -- HIDDEN" ).append("\n"); 
		query.append("                  ,A.SKD_VOY_NO   -- HIDDEN" ).append("\n"); 
		query.append("                  ,A.SKD_DIR_CD   -- HIDDEN" ).append("\n"); 
		query.append("                  ,A.SORT_ID      -- HIDDEN" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("		-- GUIDELINE LOADING(PECENT)+ DISCHARGE(POD)" ).append("\n"); 
		query.append("        SELECT A.TRD_CD    " ).append("\n"); 
		query.append("              ,A.SUB_TRD_CD" ).append("\n"); 
		query.append("              ,A.VSL_LANE_CD" ).append("\n"); 
		query.append("              ,A.VVD" ).append("\n"); 
		query.append("              ,A.POL_CD" ).append("\n"); 
		query.append("              ,A.EFF_ST_DT    " ).append("\n"); 
		query.append("              ,A.POD_CD" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',A.EQ_GLINE_VAL,''))) D2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D2',A.EQ_GLINE_TP_CD,'')) D2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',A.EQ_GLINE_VAL,''))) D4_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D4',A.EQ_GLINE_TP_CD,'')) D4_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',A.EQ_GLINE_VAL,''))) D5_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D5',A.EQ_GLINE_TP_CD,'')) D5_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',A.EQ_GLINE_VAL,''))) D7_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D7',A.EQ_GLINE_TP_CD,'')) D7_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',A.EQ_GLINE_VAL,''))) R2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R2',A.EQ_GLINE_TP_CD,'')) R2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',A.EQ_GLINE_VAL,''))) R5_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R5',A.EQ_GLINE_TP_CD,'')) R5_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R9',A.EQ_GLINE_VAL,''))) R9_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R9',A.EQ_GLINE_TP_CD,'')) R9_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',A.EQ_GLINE_VAL,''))) O2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O2',A.EQ_GLINE_TP_CD,'')) O2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',A.EQ_GLINE_VAL,''))) O4_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O4',A.EQ_GLINE_TP_CD,'')) O4_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O5',A.EQ_GLINE_VAL,''))) O5_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O5',A.EQ_GLINE_TP_CD,'')) O5_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',A.EQ_GLINE_VAL,''))) S2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'S2',A.EQ_GLINE_TP_CD,'')) S2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',A.EQ_GLINE_VAL,''))) S4_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'S4',A.EQ_GLINE_TP_CD,'')) S4_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',A.EQ_GLINE_VAL,''))) F2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F2',A.EQ_GLINE_TP_CD,'')) F2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',A.EQ_GLINE_VAL,''))) F4_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F4',A.EQ_GLINE_TP_CD,'')) F4_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',A.EQ_GLINE_VAL,''))) F5_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F5',A.EQ_GLINE_TP_CD,'')) F5_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',A.EQ_GLINE_VAL,''))) A2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'A2',A.EQ_GLINE_TP_CD,'')) A2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',A.EQ_GLINE_VAL,''))) A4_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'A4',A.EQ_GLINE_TP_CD,'')) A4_UT" ).append("\n"); 
		query.append("              ,MAX('') OLD_EFF_ST_DT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',A.OLD_EQ_GLINE_VAL,''))) OLD_D2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_D2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',A.OLD_EQ_GLINE_VAL,''))) OLD_D4_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D4',A.OLD_EQ_GLINE_TP_CD,'')) OLD_D4_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',A.OLD_EQ_GLINE_VAL,''))) OLD_D5_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D5',A.OLD_EQ_GLINE_TP_CD,'')) OLD_D5_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',A.OLD_EQ_GLINE_VAL,''))) OLD_D7_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D7',A.OLD_EQ_GLINE_TP_CD,'')) OLD_D7_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',A.OLD_EQ_GLINE_VAL,''))) OLD_R2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_R2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',A.OLD_EQ_GLINE_VAL,''))) OLD_R5_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R5',A.OLD_EQ_GLINE_TP_CD,'')) OLD_R5_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R9',A.OLD_EQ_GLINE_VAL,''))) OLD_R9_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R9',A.OLD_EQ_GLINE_TP_CD,'')) OLD_R9_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',A.OLD_EQ_GLINE_VAL,''))) OLD_O2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_O2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',A.OLD_EQ_GLINE_VAL,''))) OLD_O4_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O4',A.OLD_EQ_GLINE_TP_CD,'')) OLD_O4_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O5',A.OLD_EQ_GLINE_VAL,''))) OLD_O5_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O5',A.OLD_EQ_GLINE_TP_CD,'')) OLD_O5_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',A.OLD_EQ_GLINE_VAL,''))) OLD_S2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'S2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_S2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',A.OLD_EQ_GLINE_VAL,''))) OLD_S4_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'S4',A.OLD_EQ_GLINE_TP_CD,'')) OLD_S4_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',A.OLD_EQ_GLINE_VAL,''))) OLD_F2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_F2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',A.OLD_EQ_GLINE_VAL,''))) OLD_F4_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F4',A.OLD_EQ_GLINE_TP_CD,'')) OLD_F4_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',A.OLD_EQ_GLINE_VAL,''))) OLD_F5_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F5',A.OLD_EQ_GLINE_TP_CD,'')) OLD_F5_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',A.OLD_EQ_GLINE_VAL,''))) OLD_A2_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'A2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_A2_UT" ).append("\n"); 
		query.append("              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',A.OLD_EQ_GLINE_VAL,''))) OLD_A4_QTY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.CNTR_TPSZ_CD,'A4',A.OLD_EQ_GLINE_TP_CD,'')) OLD_A4_UT" ).append("\n"); 
		query.append("              ,A.REPO_GLINE_RMK" ).append("\n"); 
		query.append("              ,MAX(A.OLD_REPO_GLINE_RMK) OLD_REPO_GLINE_RMK" ).append("\n"); 
		query.append("              ,'' EFF_END_DT" ).append("\n"); 
		query.append("              ,'' UPD_USR_ID" ).append("\n"); 
		query.append("              ,TO_CHAR('') UPD_DT" ).append("\n"); 
		query.append("              ,A.CFM_FLG" ).append("\n"); 
		query.append("			  ,A.ORG_EQ_GLINE_SEQ -- HIDDEN" ).append("\n"); 
		query.append("              ,A.EQ_GLINE_SEQ -- HIDDEN" ).append("\n"); 
		query.append("              ,A.VSL_CD       -- HIDDEN" ).append("\n"); 
		query.append("              ,A.SKD_VOY_NO   -- HIDDEN" ).append("\n"); 
		query.append("              ,A.SKD_DIR_CD   -- HIDDEN" ).append("\n"); 
		query.append("              ,A.SORT_ID      -- HIDDEN" ).append("\n"); 
		query.append("          FROM ( -- LOADING GUIDELINE(PERCENT)" ).append("\n"); 
		query.append("				 SELECT HDR.TRD_CD" ).append("\n"); 
		query.append("                       ,HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                       ,HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                       ,HDR.VSL_CD || HDR.SKD_VOY_NO || HDR.SKD_DIR_CD VVD" ).append("\n"); 
		query.append("                       ,HDR.POL_CD" ).append("\n"); 
		query.append("                       ,HDR.EFF_ST_DT" ).append("\n"); 
		query.append("                       ,'%' POD_CD" ).append("\n"); 
		query.append("                       ,LODG.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                       ,LODG.EQ_GLINE_VAL " ).append("\n"); 
		query.append("                       ,(SELECT EQ_GLINE_VAL" ).append("\n"); 
		query.append("                           FROM EQR_CTRL_LODG_GLINE" ).append("\n"); 
		query.append("                          WHERE TRD_CD =  LODG.TRD_CD" ).append("\n"); 
		query.append("                            AND SUB_TRD_CD = LODG.SUB_TRD_CD" ).append("\n"); 
		query.append("                            AND VSL_LANE_CD = LODG.VSL_LANE_CD" ).append("\n"); 
		query.append("                            AND CNTR_TPSZ_CD = LODG.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                            AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)" ).append("\n"); 
		query.append("                                                  FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                                                 WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                                                   AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                                                   AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                                                   AND EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ)) OLD_EQ_GLINE_VAL --전차수 EQ_GLINE_VAL" ).append("\n"); 
		query.append("                       ,LODG.EQ_GLINE_TP_CD" ).append("\n"); 
		query.append("                       ,(SELECT EQ_GLINE_TP_CD" ).append("\n"); 
		query.append("                           FROM EQR_CTRL_LODG_GLINE" ).append("\n"); 
		query.append("                          WHERE TRD_CD =  LODG.TRD_CD" ).append("\n"); 
		query.append("                            AND SUB_TRD_CD = LODG.SUB_TRD_CD" ).append("\n"); 
		query.append("                            AND VSL_LANE_CD = LODG.VSL_LANE_CD" ).append("\n"); 
		query.append("                            AND CNTR_TPSZ_CD = LODG.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                            AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)" ).append("\n"); 
		query.append("                                                  FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                                                 WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                                                   AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                                                   AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                                                   AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ)) OLD_EQ_GLINE_TP_CD --전차수 EQ_GLINE_TP_CD" ).append("\n"); 
		query.append("                       ,HDR.REPO_GLINE_RMK" ).append("\n"); 
		query.append("                       ,(SELECT MAX(REPO_GLINE_RMK)" ).append("\n"); 
		query.append("                           FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                          WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                            AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                            AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) OLD_REPO_GLINE_RMK" ).append("\n"); 
		query.append("                       ,HDR.EFF_END_DT" ).append("\n"); 
		query.append("                       ,HDR.UPD_USR_ID" ).append("\n"); 
		query.append("                       ,HDR.UPD_DT" ).append("\n"); 
		query.append("                       ,HDR.CFM_FLG" ).append("\n"); 
		query.append("                       ,(SELECT MAX(EQ_GLINE_SEQ)" ).append("\n"); 
		query.append("                           FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                          WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                            AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                            AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) AS ORG_EQ_GLINE_SEQ" ).append("\n"); 
		query.append("                       ,HDR.EQ_GLINE_SEQ -- HIDDEN" ).append("\n"); 
		query.append("                       ,HDR.VSL_CD       -- HIDDEN" ).append("\n"); 
		query.append("                       ,HDR.SKD_VOY_NO   -- HIDDEN" ).append("\n"); 
		query.append("                       ,HDR.SKD_DIR_CD   -- HIDDEN" ).append("\n"); 
		query.append("                       ,'2' SORT_ID      -- HIDDEN" ).append("\n"); 
		query.append("                   FROM EQR_CTRL_GLINE_HDR HDR" ).append("\n"); 
		query.append("                       ,EQR_CTRL_LODG_GLINE LODG" ).append("\n"); 
		query.append("                  WHERE HDR.TRD_CD       = LODG.TRD_CD" ).append("\n"); 
		query.append("                    AND HDR.SUB_TRD_CD   = LODG.SUB_TRD_CD" ).append("\n"); 
		query.append("                    AND HDR.VSL_LANE_CD  = LODG.VSL_LANE_CD" ).append("\n"); 
		query.append("                    AND HDR.EQ_GLINE_SEQ = LODG.EQ_GLINE_SEQ" ).append("\n"); 
		query.append("			#if (${s_dt_tp_cd} == '1')" ).append("\n"); 
		query.append("				#if (${s_eta_dt} != '')" ).append("\n"); 
		query.append("					AND  ( HDR.EFF_ST_DT >= @[s_eta_dt] OR @[s_eta_dt] BETWEEN HDR.EFF_ST_DT AND HDR.EFF_END_DT)" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("			#elseif (${s_dt_tp_cd} == '2')" ).append("\n"); 
		query.append("				#if (${s_eff_st_dt} != '' && ${s_eff_end_dt} != '')" ).append("\n"); 
		query.append("  					AND (    @[s_eff_st_dt]  BETWEEN  EFF_ST_DT AND EFF_END_DT" ).append("\n"); 
		query.append("						  OR @[s_eff_end_dt] BETWEEN  EFF_ST_DT AND EFF_END_DT" ).append("\n"); 
		query.append("					      OR ( HDR.EFF_ST_DT >=  @[s_eff_st_dt]  AND HDR.EFF_END_DT <= @[s_eff_end_dt])" ).append("\n"); 
		query.append("       					)" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${trade} != '')" ).append("\n"); 
		query.append("					AND HDR.TRD_CD IN (" ).append("\n"); 
		query.append("					#foreach($key IN ${arr_trd_cd})" ).append("\n"); 
		query.append("						#if($velocityCount < $arr_trd_cd.size())" ).append("\n"); 
		query.append("						'$key'," ).append("\n"); 
		query.append("						#else " ).append("\n"); 
		query.append("						'$key'" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${subtrade} != '')" ).append("\n"); 
		query.append("				AND (" ).append("\n"); 
		query.append("				#foreach($key IN ${arr_sub_trd_cd})" ).append("\n"); 
		query.append("					#if($velocityCount == 1 )" ).append("\n"); 
		query.append("						(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))" ).append("\n"); 
		query.append("					#else " ).append("\n"); 
		query.append("						OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${lane} != '')" ).append("\n"); 
		query.append("				AND (" ).append("\n"); 
		query.append("					#foreach($key IN ${arr_lane})" ).append("\n"); 
		query.append("						#if($velocityCount == 1 ) " ).append("\n"); 
		query.append("							(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))" ).append("\n"); 
		query.append("						#else" ).append("\n"); 
		query.append("							OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${lane_direct} != '') " ).append("\n"); 
		query.append("				AND HDR.VSL_LANE_CD = @[lane_direct]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				AND DECODE(UPPER(@[main_page]),'FALSE',NVL(HDR.CFM_FLG,'X'),DECODE(@[s_cfm_flg],null,'X','','X',NVL(HDR.CFM_FLG,'X'))) " ).append("\n"); 
		query.append("				  = DECODE(UPPER(@[main_page]),'FALSE','Y',DECODE(@[s_cfm_flg],null,'X','','X',@[s_cfm_flg]))" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${s_loc_cd} != '' || ${s_sub_loc_cd} != '')" ).append("\n"); 
		query.append("					AND POL_CD IN ( SELECT A.LOC_CD" ).append("\n"); 
		query.append("					                  FROM MDM_LOCATION A" ).append("\n"); 
		query.append("						                  ,MDM_EQ_ORZ_CHT B" ).append("\n"); 
		query.append("					                 WHERE A.SCC_CD        = B.SCC_CD" ).append("\n"); 
		query.append("								#if (${s_loc_cd} != '')" ).append("\n"); 
		query.append("						               AND B.RCC_CD        = @[s_loc_cd]" ).append("\n"); 
		query.append("								#end" ).append("\n"); 
		query.append("								#if (${s_sub_loc_cd} != '')" ).append("\n"); 
		query.append("						               AND B.LCC_CD        = @[s_sub_loc_cd]" ).append("\n"); 
		query.append("								#end" ).append("\n"); 
		query.append("						               AND A.CALL_PORT_FLG = 'Y'       -- 하드코딩" ).append("\n"); 
		query.append("						               AND A.DELT_FLG      = 'N'       -- 하드코딩" ).append("\n"); 
		query.append("              						)" ).append("\n"); 
		query.append("			#end                   " ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                 -- DISCHARGING GUIDELINE(POD)" ).append("\n"); 
		query.append("                 SELECT HDR.TRD_CD" ).append("\n"); 
		query.append("                       ,HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                       ,HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                       ,HDR.VSL_CD || HDR.SKD_VOY_NO || HDR.SKD_DIR_CD VVD" ).append("\n"); 
		query.append("                       ,HDR.POL_CD" ).append("\n"); 
		query.append("                       ,HDR.EFF_ST_DT" ).append("\n"); 
		query.append("                       ,DCHG.POD_CD" ).append("\n"); 
		query.append("                       ,VAL.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                       ,VAL.EQ_GLINE_VAL" ).append("\n"); 
		query.append("                       ,(SELECT EQ_GLINE_VAL" ).append("\n"); 
		query.append("                           FROM EQR_CTRL_DCHG_GLINE_VAL" ).append("\n"); 
		query.append("                          WHERE TRD_CD =  VAL.TRD_CD" ).append("\n"); 
		query.append("                            AND SUB_TRD_CD = VAL.SUB_TRD_CD" ).append("\n"); 
		query.append("                            AND VSL_LANE_CD = VAL.VSL_LANE_CD" ).append("\n"); 
		query.append("                            AND CNTR_TPSZ_CD = VAL.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                            AND POD_CD = VAL.POD_CD" ).append("\n"); 
		query.append("                            AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)" ).append("\n"); 
		query.append("                                                  FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                                                 WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                                                   AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                                                   AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                                                   AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ)) OLD_EQ_GLINE_TP_CD --전 차수 EQ_GLINE_TP_CD" ).append("\n"); 
		query.append("                       ,VAL.EQ_GLINE_TP_CD" ).append("\n"); 
		query.append("                       ,(SELECT EQ_GLINE_TP_CD" ).append("\n"); 
		query.append("                           FROM EQR_CTRL_DCHG_GLINE_VAL" ).append("\n"); 
		query.append("                          WHERE TRD_CD =  VAL.TRD_CD" ).append("\n"); 
		query.append("                            AND SUB_TRD_CD = VAL.SUB_TRD_CD" ).append("\n"); 
		query.append("                            AND VSL_LANE_CD = VAL.VSL_LANE_CD" ).append("\n"); 
		query.append("                            AND CNTR_TPSZ_CD = VAL.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                            AND POD_CD = VAL.POD_CD" ).append("\n"); 
		query.append("                            AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)" ).append("\n"); 
		query.append("                                                  FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                                                 WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                                                   AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                                                   AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                                                   AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ))  OLD_EQ_GLINE_TP_CD --전 차수 EQ_GLINE_TP_CD" ).append("\n"); 
		query.append("                       ,HDR.REPO_GLINE_RMK " ).append("\n"); 
		query.append("                       ,(SELECT MAX(REPO_GLINE_RMK)" ).append("\n"); 
		query.append("                           FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                          WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                            AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                            AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) OLD_REPO_GLINE_RMK" ).append("\n"); 
		query.append("                       ,HDR.EFF_END_DT" ).append("\n"); 
		query.append("                       ,HDR.UPD_USR_ID" ).append("\n"); 
		query.append("                       ,HDR.UPD_DT" ).append("\n"); 
		query.append("                       ,HDR.CFM_FLG" ).append("\n"); 
		query.append("                       ,(SELECT MAX(EQ_GLINE_SEQ)" ).append("\n"); 
		query.append("                           FROM EQR_CTRL_GLINE_HDR" ).append("\n"); 
		query.append("                          WHERE TRD_CD = HDR.TRD_CD" ).append("\n"); 
		query.append("                            AND SUB_TRD_CD = HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                            AND VSL_LANE_CD = HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) AS ORG_EQ_GLINE_SEQ" ).append("\n"); 
		query.append("                       ,HDR.EQ_GLINE_SEQ -- HIDDEN" ).append("\n"); 
		query.append("                       ,HDR.VSL_CD       -- HIDDEN" ).append("\n"); 
		query.append("                       ,HDR.SKD_VOY_NO   -- HIDDEN" ).append("\n"); 
		query.append("                       ,HDR.SKD_DIR_CD   -- HIDDEN" ).append("\n"); 
		query.append("                       ,'3' SORT_ID      -- HIDDEN      " ).append("\n"); 
		query.append("                   FROM EQR_CTRL_GLINE_HDR HDR" ).append("\n"); 
		query.append("                       ,EQR_CTRL_DCHG_GLINE DCHG" ).append("\n"); 
		query.append("                       ,EQR_CTRL_DCHG_GLINE_VAL VAL" ).append("\n"); 
		query.append("                  WHERE HDR.TRD_CD        = DCHG.TRD_CD" ).append("\n"); 
		query.append("                    AND HDR.SUB_TRD_CD    = DCHG.SUB_TRD_CD" ).append("\n"); 
		query.append("                    AND HDR.VSL_LANE_CD   = DCHG.VSL_LANE_CD" ).append("\n"); 
		query.append("                    AND HDR.EQ_GLINE_SEQ  = DCHG.EQ_GLINE_SEQ" ).append("\n"); 
		query.append("                    AND DCHG.TRD_CD       = VAL.TRD_CD" ).append("\n"); 
		query.append("                    AND DCHG.SUB_TRD_CD   = VAL.SUB_TRD_CD" ).append("\n"); 
		query.append("                    AND DCHG.VSL_LANE_CD  = VAL.VSL_LANE_CD" ).append("\n"); 
		query.append("                    AND DCHG.EQ_GLINE_SEQ = VAL.EQ_GLINE_SEQ  " ).append("\n"); 
		query.append("                    AND DCHG.POD_CD       = VAL.POD_CD" ).append("\n"); 
		query.append("                    --AND NVL(HDR.CFM_FLG,'N') = 'Y'" ).append("\n"); 
		query.append("           	#if (${s_dt_tp_cd} == '1') " ).append("\n"); 
		query.append("				#if (${s_eta_dt} != '') " ).append("\n"); 
		query.append("					AND  ( HDR.EFF_ST_DT >= @[s_eta_dt] OR @[s_eta_dt] BETWEEN HDR.EFF_ST_DT AND HDR.EFF_END_DT)" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("			#elseif (${s_dt_tp_cd} == '2') " ).append("\n"); 
		query.append("				#if (${s_eff_st_dt} != '' && ${s_eff_end_dt} != '') " ).append("\n"); 
		query.append("  					AND (    @[s_eff_st_dt]  BETWEEN  EFF_ST_DT AND EFF_END_DT" ).append("\n"); 
		query.append("						  OR @[s_eff_end_dt] BETWEEN  EFF_ST_DT AND EFF_END_DT" ).append("\n"); 
		query.append("					      OR ( HDR.EFF_ST_DT >=  @[s_eff_st_dt]  AND HDR.EFF_END_DT <= @[s_eff_end_dt])" ).append("\n"); 
		query.append("       					)" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${trade} != '') " ).append("\n"); 
		query.append("					AND HDR.TRD_CD IN (" ).append("\n"); 
		query.append("					#foreach($key IN ${arr_trd_cd}) " ).append("\n"); 
		query.append("						#if($velocityCount < $arr_trd_cd.size()) " ).append("\n"); 
		query.append("						'$key', " ).append("\n"); 
		query.append("						#else " ).append("\n"); 
		query.append("						'$key' " ).append("\n"); 
		query.append("						#end " ).append("\n"); 
		query.append("					#end " ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("			#end	" ).append("\n"); 
		query.append("			#if (${subtrade} != '') " ).append("\n"); 
		query.append("				AND (" ).append("\n"); 
		query.append("				#foreach($key IN ${arr_sub_trd_cd}) " ).append("\n"); 
		query.append("					#if($velocityCount == 1 ) " ).append("\n"); 
		query.append("						(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))" ).append("\n"); 
		query.append("					#else " ).append("\n"); 
		query.append("						OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))" ).append("\n"); 
		query.append("					#end " ).append("\n"); 
		query.append("				#end " ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${lane} != '') " ).append("\n"); 
		query.append("				AND (" ).append("\n"); 
		query.append("				#foreach($key IN ${arr_lane}) " ).append("\n"); 
		query.append("					#if($velocityCount == 1 ) " ).append("\n"); 
		query.append("						(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))" ).append("\n"); 
		query.append("					#else " ).append("\n"); 
		query.append("						OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))" ).append("\n"); 
		query.append("					#end " ).append("\n"); 
		query.append("				#end " ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${lane_direct} != '') " ).append("\n"); 
		query.append("				AND HDR.VSL_LANE_CD = @[lane_direct]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				AND DECODE(UPPER(@[main_page]),'FALSE',NVL(HDR.CFM_FLG,'X'),DECODE(@[s_cfm_flg],null,'X','','X',NVL(HDR.CFM_FLG,'X'))) " ).append("\n"); 
		query.append("				  = DECODE(UPPER(@[main_page]),'FALSE','Y',DECODE(@[s_cfm_flg],null,'X','','X',@[s_cfm_flg]))" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${s_loc_cd} != '' || ${s_sub_loc_cd} != '') " ).append("\n"); 
		query.append("				AND POL_CD IN ( SELECT A.LOC_CD" ).append("\n"); 
		query.append("				                  FROM MDM_LOCATION A" ).append("\n"); 
		query.append("					                  ,MDM_EQ_ORZ_CHT B" ).append("\n"); 
		query.append("				                 WHERE A.SCC_CD        = B.SCC_CD" ).append("\n"); 
		query.append("							#if (${s_loc_cd} != '')" ).append("\n"); 
		query.append("					               AND B.RCC_CD        = @[s_loc_cd]" ).append("\n"); 
		query.append("							#end" ).append("\n"); 
		query.append("							#if (${s_sub_loc_cd} != '') " ).append("\n"); 
		query.append("					               AND B.LCC_CD        = @[s_sub_loc_cd]" ).append("\n"); 
		query.append("							#end" ).append("\n"); 
		query.append("					               AND A.CALL_PORT_FLG = 'Y'       -- 하드코딩" ).append("\n"); 
		query.append("					               AND A.DELT_FLG      = 'N'       -- 하드코딩" ).append("\n"); 
		query.append("              				)" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("					) A" ).append("\n"); 
		query.append("          GROUP BY A.TRD_CD" ).append("\n"); 
		query.append("                  ,A.SUB_TRD_CD" ).append("\n"); 
		query.append("                  ,A.VSL_LANE_CD" ).append("\n"); 
		query.append("                  ,A.VVD" ).append("\n"); 
		query.append("                  ,A.POL_CD" ).append("\n"); 
		query.append("                  ,A.EFF_ST_DT    " ).append("\n"); 
		query.append("                  ,A.POD_CD" ).append("\n"); 
		query.append("                  ,A.REPO_GLINE_RMK" ).append("\n"); 
		query.append("                  ,A.EFF_END_DT" ).append("\n"); 
		query.append("                  ,A.UPD_USR_ID " ).append("\n"); 
		query.append("                  ,A.UPD_DT " ).append("\n"); 
		query.append("                  ,A.CFM_FLG" ).append("\n"); 
		query.append("                  ,A.EQ_GLINE_SEQ 		-- HIDDEN" ).append("\n"); 
		query.append("                  ,A.ORG_EQ_GLINE_SEQ	-- HIDDEN" ).append("\n"); 
		query.append("                  ,A.VSL_CD       		-- HIDDEN" ).append("\n"); 
		query.append("                  ,A.SKD_VOY_NO   		-- HIDDEN" ).append("\n"); 
		query.append("                  ,A.SKD_DIR_CD   		-- HIDDEN" ).append("\n"); 
		query.append("                  ,A.SORT_ID      		-- HIDDEN" ).append("\n"); 
		query.append("        ) M" ).append("\n"); 
		query.append("       ,VSK_VSL_PORT_SKD SKD" ).append("\n"); 
		query.append("  WHERE M.VSL_CD = SKD.VSL_CD(+)" ).append("\n"); 
		query.append("    AND M.SKD_VOY_NO = SKD.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("    AND M.SKD_DIR_CD = SKD.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("    AND M.POD_CD =SKD.VPS_PORT_CD(+)" ).append("\n"); 
		query.append("    AND SKD.CLPT_IND_SEQ(+) = '1'" ).append("\n"); 
		query.append("  ORDER BY M.TRD_CD" ).append("\n"); 
		query.append("          ,M.SUB_TRD_CD" ).append("\n"); 
		query.append("          ,M.VSL_LANE_CD" ).append("\n"); 
		query.append("		  ,M.EQ_GLINE_SEQ" ).append("\n"); 
		query.append(" 		  ,M.EFF_ST_DT" ).append("\n"); 
		query.append("          ,M.VVD" ).append("\n"); 
		query.append("          ,M.POL_CD" ).append("\n"); 
		query.append("          ,M.SORT_ID" ).append("\n"); 
		query.append("          ,SKD.CLPT_SEQ" ).append("\n"); 

	}
}