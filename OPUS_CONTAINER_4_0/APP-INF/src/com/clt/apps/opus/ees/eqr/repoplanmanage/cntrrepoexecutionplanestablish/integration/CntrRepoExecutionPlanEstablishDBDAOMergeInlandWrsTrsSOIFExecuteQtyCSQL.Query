<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CntrRepoExecutionPlanEstablishDBDAOMergeInlandWrsTrsSOIFExecuteQtyCSQL">
			<desc><![CDATA[TRS에서 1개씩 S/O 입력되는 것중에 동일 ROUTE로 이동하는 것은 N개로 집합 WRS-->TRS--> EQR 로 전해진 SO IF EXECUTE 정보 qty 수정 혹은 입력]]></desc>
			<sql><![CDATA[
MERGE INTO EQR_INLND_TRSP_EXE_PLN_QTY I                      	
USING                                                       	
(                                                           	
    SELECT @[repo_pln_id] AS REPO_PLN_ID                                 	
          ,@[pln_yrwk] AS PLN_YRWK                                   	
          ,@[pln_seq] AS PLN_SEQ                                   	
          ,@[ref_id] AS REF_ID										
          ,@[cntr_tpsz_cd] AS CNTR_TPSZ_CD									
    FROM DUAL                                               	
) M                                                         	
ON                                                          	
(                                                           	
	    I.REPO_PLN_ID   = M.REPO_PLN_ID                     	 
	AND I.PLN_YRWK 		= M.PLN_YRWK                      	 
	AND I.PLN_SEQ 		= M.PLN_SEQ                          	
	AND I.REF_ID        = M.REF_ID                        	    
	AND I.CNTR_TPSZ_CD  = M.CNTR_TPSZ_CD                    	
)                                                           	
WHEN MATCHED THEN                                  			
    UPDATE SET 
		I.CNTR_QTY          = I.CNTR_QTY      + @[cntr_qty], 	        
    	I.TRSP_COST_AMT     = I.TRSP_COST_AMT + @[trsp_cost_amt] ,		    
    	I.UPD_USR_ID        = @[user_id],                   			
    	I.UPD_DT    	    = SYSDATE
WHEN NOT MATCHED THEN                                       	
    INSERT                                                  	
	(                                                       	
		I.EXE_RQST_DT
    ,	I.REPO_PLN_ID
    ,	I.PLN_YRWK
    ,	I.PLN_SEQ
    ,	I.REF_ID
    ,	I.CNTR_TPSZ_CD
    ,	I.CNTR_QTY
    ,	I.TRSP_COST_AMT
    ,	I.PLN_UC_AMT
    ,	I.FM_ECC_UC_AMT
    ,	I.TO_ECC_UC_AMT
    ,	I.CRE_USR_ID
    ,	I.CRE_DT
    ,	I.UPD_USR_ID
    ,	I.UPD_DT
    ) VALUES( 
    	SYSDATE
    ,	@[repo_pln_id]
    ,	@[pln_yrwk]
    ,	@[pln_seq]
    ,	@[ref_id]
    ,	@[cntr_tpsz_cd]
    ,	@[cntr_qty]
    ,	@[trsp_cost_amt]
    ,	@[pln_uc_amt]
    ,	@[fm_ecc_uc_amt]
    ,	@[to_ecc_uc_amt]
    ,	@[user_id]
    ,	SYSDATE
    ,	@[user_id]
    ,	SYSDATE
    )			]]></sql>
			<params>
				<param name="repo_pln_id" type="12" value="" out="N"/>
				<param name="pln_yrwk" type="12" value="" out="N"/>
				<param name="pln_seq" type="2" value="" out="N"/>
				<param name="ref_id" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd" type="12" value="" out="N"/>
				<param name="cntr_qty" type="2" value="" out="N"/>
				<param name="trsp_cost_amt" type="6" value="" out="N"/>
				<param name="user_id" type="12" value="" out="N"/>
				<param name="pln_uc_amt" type="6" value="" out="N"/>
				<param name="fm_ecc_uc_amt" type="6" value="" out="N"/>
				<param name="to_ecc_uc_amt" type="6" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
