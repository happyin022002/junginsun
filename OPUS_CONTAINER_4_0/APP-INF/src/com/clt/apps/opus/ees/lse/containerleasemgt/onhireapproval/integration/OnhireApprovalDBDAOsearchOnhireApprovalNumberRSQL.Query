<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OnhireApprovalDBDAOsearchOnhireApprovalNumberRSQL">
			<desc><![CDATA[LSE_ONH_APRO를 조회한다.
 Ref No. 추가]]></desc>
			<sql><![CDATA[
SELECT 
  SLST.AGMT_NO,
  SLST.AUTH_NO,
  SLST.LOC_CD,
  SLST.REF_NO,
  SLST.LSTM_CD,
  SLST.LESSOR,
  SLST.M_YEAR,
  SLST.FREE_DAY,
  SLST.P_UP_CHARGE ,
  SLST.P_UP_CREDIT ,
  SLST.MIN_ONH_DAYS ,
  SLST.DPP ,
  SLST.DPP_FREE_DAY ,
  SLST.APRO_RMK ,  
  LTRIM(TO_CHAR((
              #foreach($key IN ${tysz})
                 #set ($col_name= $key+'_OLD') 
                 #if($velocityCount < $tysz.size())                 
                    $col_name +
                 #else
                    $col_name
                 #end
              #end 
                 ),'999,999,999,990')) DIV_TOTAL_OLD ,  
  LTRIM(TO_CHAR((
              #foreach($key IN ${tysz})
                 #set ($col_name= $key+'_NEW')
                 #if($velocityCount < $tysz.size())                 
                    $col_name +
                 #else
                    $col_name
                 #end
              #end 
                ),'999,999,999,990')) DIV_TOTAL_NEW ,
 #foreach($key IN ${tysz})
      #set ($col_name1= $key+'_OLD')
      #set ($col_name2= $key+'_NEW')
      #set ($col_name3= $key+'_LON')
      LTRIM(TO_CHAR(SLST.$col_name1 ,'999,990')) $col_name1 ,
      LTRIM(TO_CHAR(SLST.$col_name2 ,'999,990')) $col_name2 ,
      LTRIM(TO_CHAR(SLST.$col_name3 ,'999,990')) $col_name3 ,
 #end      
      TO_CHAR(SLST.PKUP_FM_DT, 'yyyy-mm-dd') PKUP_FM_DT  ,
      TO_CHAR(SLST.PKUP_DUE_DT, 'yyyy-mm-dd') PKUP_DUE_DT  ,
	  TO_CHAR(SLST.PKUP_FM_DT, 'yyyy-mm-dd')||' ~ '||TO_CHAR(SLST.PKUP_DUE_DT, 'yyyy-mm-dd') AS AUTH_PERIOD ,	
      SLST.RETURN_LCC 
FROM (
    SELECT 
      Z.AGMT_NO AGMT_NO ,
      Z.AUTH_NO AUTH_NO,
      Z.LOC_CD LOC_CD,
      Z.REF_NO  AS REF_NO,
      Z.LSTM_CD LSTM_CD,
      Z.LESSOR LESSOR ,
      Z.M_YEAR M_YEAR ,
      Z.FREE_DAY FREE_DAY ,
      Z.P_UP_CHARGE P_UP_CHARGE ,
      Z.P_UP_CREDIT P_UP_CREDIT ,
      Z.MIN_ONH_DAYS MIN_ONH_DAYS ,
      Z.DPP DPP ,
      Z.DPP_FREE_DAY DPP_FREE_DAY ,
      Z.APRO_RMK APRO_RMK ,
 #foreach($key IN ${tysz})
      #set ($col_name1= $key+'_OLD')
      #set ($col_name2= $key+'_NEW')
      #set ($col_name3= $key+'_LON')
      SUM(DECODE(Z.TPSZ, '$key', OLD_VAN, 0)) $col_name1 ,
      SUM(DECODE(Z.TPSZ, '$key', NEW_VAN, 0)) $col_name2 ,
      SUM(DECODE(Z.TPSZ, '$key', L_ON,    0)) $col_name3 ,
 #end          
      Z.PKUP_FM_DT PKUP_FM_DT,
      Z.PKUP_DUE_DT PKUP_DUE_DT,
      Z.RETURN_LCC RETURN_LCC 
    FROM (
        SELECT 
          A.AUTH_NO,
          A.TPSZ,
          A.AGMT_NO,
		  A.AGMT_SEQ,
          A.VNDR_SEQ,
          A.LOC_CD,
          B.REF_NO,
          A.LSTM_CD,
          A.LESSOR,
          A.M_YEAR,
          A.FREE_DAY,
          A.P_UP_CHARGE,
          A.P_UP_CREDIT,
          A.MIN_ONH_DAYS,
          A.DPP,
          A.DPP_FREE_DAY,
          A.OLD_NEW_VAN NEW_VAN,
          B.OLD_NEW_VAN OLD_VAN,
          B.LFT_CHG_AMT L_ON,
          A.APRO_RMK,
		  A.PKUP_FM_DT,
          A.PKUP_DUE_DT,
          A.RETURN_LCC 
        FROM (
            SELECT B.CNTR_TPSZ_CD TPSZ,
              A.AGMT_CTY_CD ||  LTRIM(To_CHAR(A.AGMT_SEQ,'000000')) AGMT_NO,
			  A.AGMT_SEQ AGMT_SEQ,
              C.VNDR_SEQ AS VNDR_SEQ,
              A.ONH_LOC_CD AS LOC_CD,
              A.LSTM_CD,
              D.VNDR_ABBR_NM LESSOR,
              A.MFT_YR M_YEAR,
              A.FREE_DYS FREE_DAY,
              A.PKUP_CHG_AMT P_UP_CHARGE,
              A.PKUP_CHG_CR_AMT P_UP_CREDIT,
              A.MIN_ONH_DYS MIN_ONH_DAYS,
              A.DPP_CHG_AMT DPP,
              A.AUTH_DPP_FREE_DYS DPP_FREE_DAY,
              B.ONH_QTY OLD_NEW_VAN,
              A.APRO_RMK,
              A.PKUP_FM_DT,
              A.PKUP_DUE_DT,
              B.CNTR_ONH_AUTH_NO AUTH_NO,
              A.LOC_CD RETURN_LCC 
            FROM LSE_ONH_APRO A,
              LSE_ONH_APRO_QTY B,
              LSE_AGREEMENT C,
              MDM_VENDOR D
            WHERE A.CNTR_ONH_AUTH_NO = B.CNTR_ONH_AUTH_NO
              AND A.AGMT_CTY_CD = B.AGMT_CTY_CD
              AND A.AGMT_SEQ = B.AGMT_SEQ
              AND A.AGMT_CTY_CD = C.AGMT_CTY_CD
              AND A.AGMT_SEQ = C.AGMT_SEQ
              AND C.VNDR_SEQ = D.VNDR_SEQ
              AND B.NEW_VAN_TP_CD = 'N' 
              AND A.DELT_FLG = 'N'
#if (${period_stdt} != '' && ${period_eddt} != '')
              AND A.PKUP_DUE_DT >= TO_DATE(@[period_stdt], 'YYYY-MM')
			  AND A.PKUP_DUE_DT < ADD_MONTHS(TO_DATE(@[period_eddt], 'YYYY-MM'), 1)
#end
) A,
          ( 
            SELECT B.CNTR_TPSZ_CD TPSZ,
              A.AGMT_CTY_CD|| LTRIM(TO_CHAR(A.AGMT_SEQ, '000000')) AGMT_NO,
			  A.AGMT_SEQ AS AGMT_SEQ,
              C.VNDR_SEQ AS VNDR_SEQ,
              A.ONH_LOC_CD AS LOC_CD,
              C.REF_NO AS REF_NO,
              D.VNDR_ABBR_NM LESSOR,
              A.MFT_YR M_YEAR,
              A.FREE_DYS FREE_DAY,
              A.PKUP_CHG_AMT P_UP_CHARGE,
              A.PKUP_CHG_CR_AMT P_UP_CREDIT,
              A.MIN_ONH_DYS MIN_ONH_DAYS,
              A.DPP_CHG_AMT DPP,
              A.AUTH_DPP_FREE_DYS DPP_FREE_DAY,
              B.ONH_QTY OLD_NEW_VAN,
              B.LFT_CHG_AMT,
              APRO_RMK,
              B.CNTR_ONH_AUTH_NO AUTH_NO,
              A.LOC_CD RETURN_LCC 
            FROM LSE_ONH_APRO A,
              LSE_ONH_APRO_QTY B,
              LSE_AGREEMENT C,
              MDM_VENDOR D
            WHERE A.CNTR_ONH_AUTH_NO = B.CNTR_ONH_AUTH_NO
              AND A.AGMT_CTY_CD = B.AGMT_CTY_CD
              AND A.AGMT_SEQ = B.AGMT_SEQ
              AND A.AGMT_CTY_CD = C.AGMT_CTY_CD
              AND A.AGMT_SEQ = C.AGMT_SEQ
              AND C.VNDR_SEQ = D.VNDR_SEQ
              AND B.NEW_VAN_TP_CD = 'O'
              AND A.DELT_FLG = 'N') B
        WHERE A.TPSZ    = B.TPSZ
          AND A.AGMT_NO = B.AGMT_NO
          AND A.AUTH_NO = B.AUTH_NO
#if (${cntr_onh_auth_no} != '')
 	AND A.AUTH_NO = @[cntr_onh_auth_no]
#end
#if (${lstm_cd} != '')
 	AND A.LSTM_CD = @[lstm_cd]
#end
#if (${agmt_seq} != '')
 	AND B.AGMT_SEQ = @[agmt_seq]
#end
#if (${tpsz_cd} != '' )
        AND    A.TPSZ IN ( #foreach($key IN ${stpsz_cd})
            #if($velocityCount < $stpsz_cd.size())
                  '$key',
            #else
                   '$key'
            #end
         #end )
#end


#if (${vndr_seq} != '')
 	AND A.VNDR_SEQ = @[vndr_seq]
#end

#if (${type_chk} == 'O')
	#if (${usr_ofc_cd} != 'HQ')
		AND A.LSTM_CD IN ('OL','LT','ST','OF','SI','MI')
	#else
        AND A.LSTM_CD = 'MI'
    #end
#else
	#if (${usr_ofc_cd} != 'HQ')
		AND A.LSTM_CD IN ('SO','MO')
	#else
        AND A.LSTM_CD = 'MO'
    #end
#end
) Z
    GROUP BY Z.AUTH_NO , Z.AGMT_NO , Z.LOC_CD, Z.REF_NO , Z.LSTM_CD , Z.LESSOR , Z.M_YEAR , Z.FREE_DAY , Z.P_UP_CHARGE , Z.P_UP_CREDIT , Z.MIN_ONH_DAYS , Z.DPP , Z.DPP_FREE_DAY , Z.APRO_RMK , Z.PKUP_FM_DT, Z.PKUP_DUE_DT, Z.RETURN_LCC ) SLST			]]></sql>
			<params>
				<param name="period_stdt" type="12" value="" out="N"/>
				<param name="period_eddt" type="12" value="" out="N"/>
				<param name="cntr_onh_auth_no" type="12" value="" out="N"/>
				<param name="lstm_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
