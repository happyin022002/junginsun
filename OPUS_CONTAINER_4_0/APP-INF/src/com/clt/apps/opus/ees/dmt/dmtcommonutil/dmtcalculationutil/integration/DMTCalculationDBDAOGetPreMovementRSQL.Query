<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="DMTCalculationDBDAOGetPreMovementRSQL">
			<desc><![CDATA[getPreMovement]]></desc>
			<sql><![CDATA[
SELECT    PRE_BKG_NO
        , PRE_CNMV_YY
        , PRE_CNMV_SEQ
        , PRE_CNMV_SPLIT
        , PRE_CNMS_CD
        , PRE_ORG_YD_CD
        , PRE_CNMV_DT_TM
        , PRE_FULL_FLG
        , CASE WHEN CUR_MVMT_CNT = 0 AND PRE_OP_CNT = 1 AND PRE_VL_MT_CNT = 0 THEN
               /* CURRENT MVMT에 OP 가 없고, 이전 MVMT에 OP가 존재하고, 이전 MVMT CYCLE 내에 VL, MT가 없을 경우에 */
               /* 이전 OP 정보를 VL과 쌍을 만들어서  COMPLETE 할 수 있도록 한다.                                 */
                PRE_CNMV_CYC_NO - 1
            ELSE
                /* DEFALUT */
                PRE_CNMV_CYC_NO
          END                                   AS PRE_CNMV_CYC_NO
        , PRE_CNMV_CYC_NO                       AS BH_PRE_CNMV_CYC_NO -- (복화 운송(Backhauling)( ID-OC ) :  OC로 이전 ID Cycle No를 찾아 맵핑 )
FROM    (
        SELECT	/*+ INDEX_DESC( M XFN1CTM_MOVEMENT ) */
                M.BKG_NO            PRE_BKG_NO,
        		M.CNMV_YR			PRE_CNMV_YY,
        		M.CNMV_SEQ			PRE_CNMV_SEQ,
        		M.CNMV_SPLIT_NO		PRE_CNMV_SPLIT,
        		M.MVMT_STS_CD		PRE_CNMS_CD,
        		M.ORG_YD_CD			PRE_ORG_YD_CD,
        		TO_CHAR(M.CNMV_EVNT_DT, 'YYYYMMDDHH24MI') PRE_CNMV_DT_TM,
        		M.FCNTR_FLG			PRE_FULL_FLG,
        		M.CNMV_CYC_NO		PRE_CNMV_CYC_NO, 
                (
                    SELECT  COUNT(*)
                    FROM    CTM_MOVEMENT S
                    WHERE   S.CNTR_NO       = M.CNTR_NO
                    AND     S.CNMV_CYC_NO   = M.CNMV_CYC_NO
                    AND     S.MVMT_STS_CD   = 'OP'
                ) CUR_MVMT_CNT,
                (
                    SELECT  COUNT(*)
                    FROM    CTM_MOVEMENT S
                    WHERE   S.CNTR_NO       = M.CNTR_NO
                    AND     S.CNMV_CYC_NO   = M.CNMV_CYC_NO - 1
                    AND     S.MVMT_STS_CD   = 'OP'
                ) PRE_OP_CNT,
                (
                    SELECT  COUNT(*)
                    FROM    CTM_MOVEMENT S
                    WHERE   S.CNTR_NO       = M.CNTR_NO
                    AND     S.CNMV_CYC_NO   = M.CNMV_CYC_NO - 1
                    AND     S.MVMT_STS_CD   IN ( 'VL', 'MT')
                ) PRE_VL_MT_CNT,
                (
                    SELECT  COUNT(*)
                    FROM    CTM_MOVEMENT S
                    WHERE   S.CNTR_NO       = M.CNTR_NO
                    AND     S.CNMV_CYC_NO   = M.CNMV_CYC_NO - 1
                    AND     S.MVMT_STS_CD   NOT IN ( 'VL', 'MT')
                ) PRE_MVMT_NOT_VL_MT_CNT
        FROM   CTM_MOVEMENT   M
        WHERE  M.CNTR_NO        = @[cntr_no]
        AND     M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'FM0000')||M.CNMV_SPLIT_NO < @[cnmv_yy]||TO_CHAR(TO_NUMBER(@[cnmv_seq]),'FM0000')||@[cnmv_split]  
        AND     ROWNUM          = 1
        )
WHERE   1=1			]]></sql>
			<params>
				<param name="cntr_no" type="12" value="" out="N"/>
				<param name="cnmv_yy" type="12" value="" out="N"/>
				<param name="cnmv_seq" type="12" value="" out="N"/>
				<param name="cnmv_split" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
