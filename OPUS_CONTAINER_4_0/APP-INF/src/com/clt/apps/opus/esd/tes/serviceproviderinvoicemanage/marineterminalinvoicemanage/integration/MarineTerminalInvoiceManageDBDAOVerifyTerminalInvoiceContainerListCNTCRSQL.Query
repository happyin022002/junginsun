<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MarineTerminalInvoiceManageDBDAOVerifyTerminalInvoiceContainerListCNTCRSQL">
			<desc><![CDATA[VerifyTerminalInvoiceContainerListCNTC]]></desc>
			<sql><![CDATA[
SELECT  /*+ NO_QUERY_TRANSFORMATION */ A.CNTR_NO
			,A.CNTR_TPSZ_CD
			,A.CNTR_STY_CD
			,SUBSTR(A.VVD,1,4) VSL_CD
			,SUBSTR(A.VVD,5,4) SKD_VOY_NO
			,SUBSTR(A.VVD,9,1) SKD_DIR_CD
			,A.IO_BND_CD
			,@[atb_dt] ATB_DT
			,A.VNDR_SEQ
			,A.YD_CD
			,A.RCV_DT
			,A.WRK_DT
-- 데이타 정제 작업으로 인한 Logic 수정  - CNTR LIST DSCR_IND_CD에 CO값 코드 부정합 ( 2009-09-16 )
--			,A.DSCR_IND_CD
			,DECODE(A.DSCR_IND_CD, 'CO', '', A.DSCR_IND_CD ) DSCR_IND_CD 
			,DECODE(LENGTH(A.DSCR_IND_CD),3, SUBSTR(A.DSCR_IND_CD,3,1),'') DSCR_DTL_IND_CD
			,B.BKG_NO
			--,B.BKG_NO_SPLIT
			,NVL(B.BB_CGO_FLG,'N') BB_CGO_FLG
			,B.IPC         IOC_CD
			,B.LANE        LANE_CD
			,B.SUB_TRD_CD
			,B.LOCL_TS_IND_CD
			,B.RCVDE_TERM_IND_CD
			,DECODE(B.DCGO_CLSS_CD,null,'N',B.DCGO_CLSS_CD) DCGO_CLSS_CD
			,NVL(B.AWK_CGO_FLG,'N') AWK_CGO_FLG
			,NVL(B.RC_FLG,'N') RC_FLG
			,B.BL_NO
			--,B.BL_NO_CHK
			--,B.BL_NO_TP
			,DECODE(A.DSCR_IND_CD,'CO',B.RM,'DB',A.CNTR_RMK,'')      CNTR_RMK
			,B.TML_TRNS_MOD_CD
			,CASE WHEN SUBSTR(A.DSCR_IND_CD,0,2) IN  ('DD','NH','DB') THEN 'DC' ELSE 'CO' END VRFY_RSLT_IND_CD
			,CASE WHEN SUBSTR(A.DSCR_IND_CD,0,2) IN  ('DD','NH','DB') THEN ''   ELSE 'Y'  END CO_FLG
			,CASE WHEN SUBSTR(A.DSCR_IND_CD,0,2) IN  ('DD','NH','DB') THEN 'Y'  ELSE  ''  END DC_FLG
	FROM  ( SELECT P.CNTR_NO       CNTR_NO
				   ,C.CNTR_TPSZ_CD CNTR_TPSZ_CD
				   ,P.CNTR_STY_CD  CNTR_STY_CD
				   ,P.VVD_CD       VVD
				   ,P.VNDR_SEQ     VNDR_SEQ
				   ,P.YD_CD        YD_CD
				   ,P.RCV_DT       RCV_DT
				   ,P.WRK_DT       WRK_DT
				   ,P.IO_BND_CD    IO_BND_CD
				   ,P.TML_SO_TMP_SEQ TMP_SEQ
				   ,DB.CNTR_RMK
				   ,CASE WHEN LENGTH(DB.CNTR_RMK) > 1 THEN 'DB'
				   ELSE DECODE(( SELECT COUNT(*) -- 'Not in COM Souce' Check
								  FROM   CTM_MOVEMENT M, BKG_BOOKING B, MDM_LOCATION BR, MDM_LOCATION BD
								  WHERE   M.ORG_YD_CD  = P.YD_CD
								  AND    M.CNTR_NO        = P.CNTR_NO
								  AND    M.CNMV_EVNT_DT > TO_DATE(P.WRK_DT,'YYYYMMDD') - 7
								  AND    M.CNMV_EVNT_DT < TO_DATE(P.WRK_DT,'YYYYMMDD') + 7
								  AND    M.MVMT_STS_CD = DECODE(P.IO_BND_CD,'I','VD','VL')
								  AND    M.BKG_NO       = B.BKG_NO(+)
								  --AND    M.BKG_NO_SPLIT = B.BKG_NO_SPLIT(+)
								  AND    B.BKG_STS_CD IN ('F','W')
								  AND    B.POR_CD       = BR.LOC_CD(+)
								  AND    B.POD_CD       = BD.LOC_CD(+)
								   ),0,'NH',
								( SELECT DD FROM
									( SELECT M.FCNTR_FLG, P.CNTR_STY_CD,  M.OB_CNTR_FLG, P.IO_BND_CD, M.ORG_YD_CD, P.YD_CD,
											   DECODE(P.CNTR_STY_CD,DECODE(M.FCNTR_FLG,'Y','F','N','M',''),'CO','DDF') DD, P.CNTR_NO, P.TML_SO_SEQ
											   , P.TML_SO_TMP_SEQ, P.TML_SO_OFC_CTY_CD, MAX(B.BKG_NO)--, MAX(B.BKG_NO_SPLIT)
										FROM   CTM_MOVEMENT M, BKG_BOOKING B, BKG_DG_CGO D, MDM_LOCATION BR,
											   MDM_LOCATION BD, TES_FILE_IMP_TMP P
										WHERE  M.ORG_YD_CD  = P.YD_CD
										AND M.CNTR_NO        = P.CNTR_NO
										AND M.CNMV_EVNT_DT > TO_DATE(P.WRK_DT,'YYYYMMDD') - 7
										AND M.CNMV_EVNT_DT < TO_DATE(P.WRK_DT,'YYYYMMDD') + 7
										AND M.MVMT_STS_CD = DECODE(P.IO_BND_CD,'I','VD','VL')
										AND M.BKG_NO = B.BKG_NO(+)
										--AND M.BKG_NO_SPLIT = B.BKG_NO_SPLIT(+)
										AND B.BKG_STS_CD IN ('F','W')
										AND M.BKG_NO = D.BKG_NO(+)
										--AND M.BKG_NO_SPLIT = D.BKG_NO_SPLIT(+)
										AND M.CNTR_NO = D.CNTR_NO(+)
										AND M.CNTR_TPSZ_CD = D.CNTR_TPSZ_CD(+)
										AND B.POR_CD       = BR.LOC_CD(+)
										AND B.POD_CD       = BD.LOC_CD(+)
										AND P.TML_SO_OFC_CTY_CD= @[tml_so_ofc_cty_cd]
										AND P.TML_SO_SEQ       = @[tml_so_seq]
										GROUP BY M.FCNTR_FLG, P.CNTR_STY_CD,  M.OB_CNTR_FLG, P.IO_BND_CD, M.ORG_YD_CD,
											   P.YD_CD, DECODE(P.CNTR_STY_CD,DECODE(M.FCNTR_FLG,'Y','F','N','M',''),'CO','DDF'), P.CNTR_NO,
											   P.TML_SO_SEQ, P.TML_SO_TMP_SEQ, P.TML_SO_OFC_CTY_CD )
								  WHERE TML_SO_OFC_CTY_CD = P.TML_SO_OFC_CTY_CD
								  AND TML_SO_SEQ = P.TML_SO_SEQ
								  AND TML_SO_TMP_SEQ = P.TML_SO_TMP_SEQ
								  AND CNTR_NO = P.CNTR_NO ) )
				   END DSCR_IND_CD
			FROM  TES_FILE_IMP_TMP P,  MST_CONTAINER C,
				   (
                        SELECT   BB.CNTR_NO, 'Double billing Inv : '||MAX(BB.INV_NO) CNTR_RMK
                        FROM
                        (
                            SELECT A.COST_CODE, C.CNTR_NO 
                            FROM(
                                SELECT DISTINCT DECODE(1,0,C.LGS_COST_CD,DECODE(C.LGS_COST_CD,CD,TP,C.LGS_COST_CD)) COST_CODE
                                FROM ( SELECT COUNT(T.LGS_COST_CD) CNT,
                                     T.LGS_COST_CD TP,
                                     T.THRP_LGS_COST_CD CD,
                                     H.TML_AGMT_OFC_CTY_CD CTY,
                                     H.TML_AGMT_SEQ SEQ,
                                     H.TML_AGMT_VER_NO NO
                                    FROM   TES_TML_AGMT_HDR H, TES_TML_AGMT_THRP_COST T
                                    WHERE  H.YD_CD            = @[yd_cd]
                                    AND    H.VNDR_SEQ         = @[vndr_seq]
                                    AND    H.TML_AGMT_STS_CD = 'C'
                                    AND    H.DELT_FLG        = 'N'

                                    AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[atb_dt],'-') -- ATB Date([atb_dt]) ==> Marine Terminal Invoice
                                    AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[atb_dt],'-') -- ATB Date([atb_dt]) ==> Marine Terminal Invoice

                                    AND    H.TML_AGMT_VER_NO = ( SELECT MAX(M.TML_AGMT_VER_NO)
                                         FROM   TES_TML_AGMT_HDR M
                                         WHERE  M.YD_CD               = @[yd_cd]
                                         AND    M.VNDR_SEQ            = @[vndr_seq]
                                         AND    M.TML_AGMT_STS_CD     = 'C'
                                         AND    M.DELT_FLG            = 'N'

                                         AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[atb_dt],'-') -- ATB Date([atb_dt]) ==> Marine Terminal Invoice
                                         AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[atb_dt],'-')) -- ATB Date([atb_dt]) ==> Marine Terminal Invoice

                                    AND    H.TML_AGMT_OFC_CTY_CD = T.TML_AGMT_OFC_CTY_CD(+)
                                    AND    H.TML_AGMT_SEQ        = T.TML_AGMT_SEQ(+)
                                    AND    H.TML_AGMT_VER_NO     = T.TML_AGMT_VER_NO(+)
                                    GROUP BY H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
                                    T.LGS_COST_CD, T.THRP_LGS_COST_CD ) A, TES_TML_SO_COST C, TES_TML_AGMT_DTL D
                                WHERE  C.COST_CALC_MZD_CD = 'A'
                                AND    C.TML_AGMT_MGMT_CD = 'A'

                                AND    C.MRN_TML_FLG = 'Y'  -- Marine Terminal Invoice

                                AND    D.TML_AGMT_OFC_CTY_CD = A.CTY
                                AND    D.TML_AGMT_SEQ = A.SEQ
                                AND    D.TML_AGMT_VER_NO  = A.NO
                                AND    C.LGS_COST_CD = D.LGS_COST_CD
                                AND    DECODE(A.CNT,0,DECODE(SUBSTR(C.LGS_COST_CD,1,2),'TP','N','Y'),'Y') = 'Y' 
                                AND    D.THRP_COST_CD_FLG IS NULL
                            ) A,
                            (
                                SELECT ltrim(regexp_substr((select COST_CD_FTR_RMK
                                                              from tes_tml_so_hdr
                                                             where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]), '[^|]+', 1, level ) ,'|') as COST_CODE
                                 FROM dual
                                 connect by level<= ( length((select COST_CD_FTR_RMK
                                                                from tes_tml_so_hdr
                                                               where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]))+1 - length(replace((select COST_CD_FTR_RMK
                                                                                                                from tes_tml_so_hdr
                                                                                                               where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]), '|')) ) / length('|')
                            )B,
                            (
                                SELECT * FROM TES_FILE_IMP_TMP
                                WHERE 1=1
                                AND TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]
                                 AND    VVD_CD             = @[vvd]
     
                            ) C

#if (${cost_cd_ftr_rmk} == '') 
	WHERE A.COST_CODE=B.COST_CODE(+)
#else 
	WHERE A.COST_CODE=B.COST_CODE -- hdr정보에 데이터 있으면 inner 없음 outter
#end
                            
                        ) AA,
                        (
                        SELECT DISTINCT H.INV_NO, H.YD_CD, H.VNDR_SEQ, D.LGS_COST_CD, L.CNTR_NO
                         FROM   TES_TML_SO_HDR H, TES_TML_SO_DTL D, TES_TML_SO_CNTR_LIST L
                         WHERE  H.YD_CD             = @[yd_cd]
                         AND    H.VNDR_SEQ           = @[vndr_seq]
                         AND    H.TML_SO_OFC_CTY_CD   = D.TML_SO_OFC_CTY_CD
                         AND    H.TML_SO_SEQ          = D.TML_SO_SEQ
                         AND    H.TML_SO_OFC_CTY_CD   = L.TML_SO_OFC_CTY_CD
                         AND    H.TML_SO_SEQ          = L.TML_SO_SEQ
                         AND    L.VSL_CD             = SUBSTR(@[vvd],1,4)
                         AND    L.SKD_VOY_NO         = SUBSTR(@[vvd],5,4)
                         AND    L.SKD_DIR_CD         = SUBSTR(@[vvd],9,1)
                         AND    L.IO_BND_CD          = @[io_bnd_cd] -- ? hdr정보있는 값
                         AND    NVL(H.DELT_FLG,'N')   <> 'Y'
						 AND    H.TML_INV_TP_CD      = 'TM'
                         AND    D.CALC_TP_CD          = 'A'
                         AND    L.VRFY_RSLT_IND_CD    = 'CO'                         
                         AND   (DECODE(L.STV_RVIS_IND_FLG,'Y','','SV') LIKE SUBSTR(D.LGS_COST_CD,1,2)||'%' OR DECODE(L.TML_RVIS_IND_FLG,'Y','','TM') LIKE SUBSTR(D.LGS_COST_CD,1,2)||'%'
                                OR DECODE(L.RVIS_IND_FLG,'Y','','TP') LIKE SUBSTR(D.LGS_COST_CD,1,2)||'%' OR DECODE(L.CGO_RVIS_IND_FLG,'Y','','CG') LIKE SUBSTR(D.LGS_COST_CD,1,2)||'%'
                                )
                         AND    NVL(L.CNTR_TPSZ_CD,'N')  = NVL(D.CNTR_TPSZ_CD,'N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IO_BND_CD,'N'),'ON',NVL(L.IO_BND_CD,'N'),'OF','N','ST','N')
                             = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IO_BND_CD,'N'),'ON',NVL(D.IO_BND_CD,'N'),'OF','N','ST','N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IOC_CD,'N'),'ON',NVL(L.IOC_CD,'N'),'OF','N','ST','N')
                             = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IOC_CD,'N'),'ON',NVL(D.IOC_CD,'N'),'OF','N','ST','N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.LANE_CD,'N'),'ON',NVL(L.LANE_CD,'N'),'OF','N','ST','N')
                             = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.LANE_CD,'N'),'ON',NVL(D.LANE_CD,'N'),'OF','N','ST','N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',
                            DECODE(L.BB_CGO_FLG,'Y','BB',DECODE(L.LOCL_TS_IND_CD,'T',DECODE(L.CNTR_STY_CD,'F','TS','TM'),DECODE(L.CNTR_STY_CD,'F','FL','MT'))),
                            'ON',DECODE(L.CNTR_STY_CD,'F','F','M'),'OF',DECODE(L.CNTR_STY_CD,'F','FL','MT'),'ST',DECODE(L.LOCL_TS_IND_CD,'T','TS',DECODE(L.CNTR_STY_CD,'F','FL','MT')))
                             = DECODE(H.TML_INV_TP_CD,'TM',SUBSTR(D.LGS_COST_CD,5,2),'ON',SUBSTR(D.LGS_COST_CD,6,1),'OF',SUBSTR(D.LGS_COST_CD,5,2),
                            'ST',SUBSTR(D.LGS_COST_CD,5,2))
                         AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.DCGO_CLSS_CD,'N'),'ON',NVL(L.DCGO_CLSS_CD,'N'),'OF','N','ST','N')
                             = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.DCGO_IND_CD,'N'),'ON',NVL(D.DCGO_IND_CD,'N'),'OF','N','ST','N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',DECODE(D.TML_TRNS_MOD_CD,'','S','S','S',NVL(L.TML_TRNS_MOD_CD,'S')),'N')
                             = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.TML_TRNS_MOD_CD,'S'),'N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS','F','N'),'N')
                             = DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS',L.CNTR_STY_CD,'N'),'N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM','Y',L.VSL_CD) <> DECODE(H.TML_INV_TP_CD,'TM','N','CNTC')
                        ) BB
                        WHERE AA.CNTR_NO = BB.CNTR_NO
                        AND AA.COST_CODE = BB.LGS_COST_CD
                        group by BB.CNTR_NO
                    ) DB
			WHERE P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
			AND   P.TML_SO_SEQ        = @[tml_so_seq]
			AND   P.CNTR_NO           = DB.CNTR_NO(+)
			AND   P.CNTR_NO        = C.CNTR_NO(+)) A,
			(SELECT M.CNTR_NO CNTR_NO,
				   M.CNTR_TPSZ_CD TPSZ,
				   M.FCNTR_FLG FM,
				   DECODE(BR.CONTI_CD,BD.CONTI_CD,DECODE(BR.CNT_CD,BD.CNT_CD,'I','O'),'O') IPC, -- 20160218 IPC/OCN을 Domestic/International 개념으로 바꿈
				   V.SLAN_CD LANE,
				   O.SUB_TRD_CD,
				   B.BL_NO,
				   --B.BL_NO_TP,
				   --B.BL_NO_CHK,
				   B.RCV_TERM_CD||'/'||B.DE_TERM_CD RCVDE_TERM_IND_CD,
				   M.BKG_NO BKG_NO,
				   --M.BKG_NO_SPLIT BKG_NO_SPLIT,
				   NVL(SUBSTR(D.IMDG_CLSS_CD,1,1),'N') DCGO_CLSS_CD,
				   NVL(B.BB_CGO_FLG,'N') BB_CGO_FLG,
				   DECODE(NVL(A.OVR_VOID_SLT_QTY,0),0,'N','Y') AWK_CGO_FLG,
				   NVL(B.RC_FLG,'N') RC_FLG,
				   DECODE(NVL(B.BB_CGO_FLG,'N'),'Y','Break Bulk') RM,
				   CASE WHEN COUNT(FDR.FDR_POD_CD) > 0
						THEN DECODE(P.IO_BND_CD,'I',DECODE(V.POD_CD,B.POD_CD,DECODE(V.POL_CD,B.POL_CD,'L','T'),'T'),
												'O',DECODE(V.POL_CD,B.POL_CD,DECODE(V.POD_CD,B.POD_CD,'L','T'),'T'))
						ELSE 'L'
				   END LOCL_TS_IND_CD,
				   CASE WHEN COUNT(FDR.FDR_POD_CD) > 0
						THEN DECODE(V.VSL_PRE_PST_CD,'T','V',NULL,'O','','O',
												   DECODE(P.IO_BND_CD,'I',DECODE(V.POL_CD,F.FDR_POL_CD,'B','F'),
																		  DECODE(V.POD_CD,F.FDR_POD_CD,'B','F')))
						ELSE  'B'
				   END TML_TRNS_MOD_CD,
				   P.TML_SO_TMP_SEQ TMP_SEQ
			FROM TES_FILE_IMP_TMP P, CTM_MOVEMENT M, BKG_BOOKING B, BKG_VVD V, BKG_DG_CGO D,
				BKG_AWK_CGO A, TES_TML_SPCL_FDR F, TES_TML_SPCL_FDR FDR, MDM_LOCATION BR, MDM_LOCATION BD, COA_RGST_BKG O
			WHERE P.CNTR_NO = M.CNTR_NO
			AND P.YD_CD = M.ORG_YD_CD
			AND P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
			AND P.TML_SO_SEQ = @[tml_so_seq]
			AND M.MVMT_STS_CD = DECODE(P.IO_BND_CD,'I','VD','VL')
			AND M.CNMV_EVNT_DT > TO_DATE(P.WRK_DT,'YYYYMMDD') - 7
			AND M.CNMV_EVNT_DT < TO_DATE(P.WRK_DT,'YYYYMMDD') + 7
			AND M.BKG_NO = B.BKG_NO(+)
			--AND M.BKG_NO_SPLIT = B.BKG_NO_SPLIT(+)
			AND B.BKG_STS_CD IN ('F','W')
			AND M.BKG_NO = V.BKG_NO(+)
			--AND M.BKG_NO_SPLIT = V.BKG_NO_SPLIT(+)
			AND M.BKG_NO = D.BKG_NO(+)
			--AND M.BKG_NO_SPLIT = D.BKG_NO_SPLIT(+)
			AND M.CNTR_NO = D.CNTR_NO(+)
			AND M.CNTR_TPSZ_CD = D.CNTR_TPSZ_CD(+)
			AND M.BKG_NO = A.BKG_NO(+)
			--AND M.BKG_NO_SPLIT = A.BKG_NO_SPLIT(+)
			AND M.CNTR_NO = A.CNTR_NO(+)
			AND M.CNTR_TPSZ_CD = A.CNTR_TPSZ_CD(+)
            AND B.BKG_NO       = O.BKG_NO(+)
            AND B.SLAN_CD      = O.SLAN_CD(+)
            AND B.VSL_CD       = O.VSL_CD(+)
     	    AND B.SKD_VOY_NO   = O.SKD_VOY_NO(+)
            AND B.SKD_DIR_CD   = O.DIR_CD(+)
			--AND DECODE([io_bnd_cd],'I',V.POD_CD,V.POL_CD) = SUBSTR(P.YD_CD,1, 5)
            -- Location은 같으나 Yard가 틀린 BKG정보에 대해 verify가 통과되는 defect로 인해 위와 같이 수정함(2016.01.07)
			AND DECODE(@[io_bnd_cd],'I',V.POD_YD_CD,V.POL_YD_CD) = P.YD_CD
			AND V.POD_CD = F.FDR_POD_CD(+)
			AND V.POL_CD = F.FDR_POL_CD(+)
			AND DECODE(@[io_bnd_cd],'I',V.POD_CD,V.POL_CD) = DECODE(@[io_bnd_cd], 'I',FDR.FDR_POD_CD(+), FDR.FDR_POL_CD(+))
			AND B.POR_CD       = BR.LOC_CD(+)
			AND B.POD_CD       = BD.LOC_CD(+)
			GROUP BY M.CNTR_NO,V.VSL_PRE_PST_CD,V.VSL_SEQ,V.POD_CD,V.POL_CD,F.FDR_POD_CD,F.FDR_POL_CD,
					DECODE(P.IO_BND_CD,'I',DECODE(V.POD_CD,B.POD_CD,'L','T'),'O',DECODE(V.POL_CD,B.POL_CD,'L','T')),
					P.IO_BND_CD, V.VSL_PRE_PST_CD, M.CNTR_TPSZ_CD, M.FCNTR_FLG,DECODE(BR.CONTI_CD,BD.CONTI_CD,DECODE(BR.CNT_CD,BD.CNT_CD,'I','O'),'O'),
					V.SLAN_CD, O.SUB_TRD_CD, B.BL_NO, B.RCV_TERM_CD||'/'||B.DE_TERM_CD, M.BKG_NO ,--M.BKG_NO_SPLIT,
					D.IMDG_CLSS_CD, B.BB_CGO_FLG, A.OVR_VOID_SLT_QTY, B.RC_FLG, B.BB_CGO_FLG,B.POL_CD,
					B.POD_CD,P.TML_SO_TMP_SEQ )B
	WHERE A.CNTR_NO = B.CNTR_NO(+)
	AND   A.TMP_SEQ = B.TMP_SEQ(+)

#if (${all_tp} == 'N' and ${fm_tp_length} == '1') 
	AND     A.CNTR_STY_CD = @[fm_tp]
#else 
#end

#if (${all_tp} == 'N' and ${ts_tp_length} == '1') 
	AND     B.LOCL_TS_IND_CD = @[ts_tp]
#else 
#end			]]></sql>
			<params>
				<param name="atb_dt" type="12" value="" out="N"/>
				<param name="tml_so_ofc_cty_cd" type="12" value="" out="N"/>
				<param name="tml_so_seq" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="io_bnd_cd" type="12" value="" out="N"/>
				<param name="fm_tp" type="12" value="" out="N"/>
				<param name="ts_tp" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
