/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : StatusInquiryDBDAOSearchTPBStatusSummaryRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.03.04
*@LastModifier : 
*@LastVersion : 1.0
* 2015.03.04 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esd.tpb.statusinquiry.statusinquiry.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class StatusInquiryDBDAOSearchTPBStatusSummaryRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * SearchTPBStatusSummary
	  * </pre>
	  */
	public StatusInquiryDBDAOSearchTPBStatusSummaryRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_if_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_if_rhq_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_if_ctrl_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esd.tpb.statusinquiry.statusinquiry.integration").append("\n"); 
		query.append("FileName : StatusInquiryDBDAOSearchTPBStatusSummaryRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("#if (${s_status} == 'S')---- 1. By Status" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT o.rhq if_rhq_cd, o.ofc if_ofc_cd" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0) cnt_a, NVL(a.amt,0) amt_a" ).append("\n"); 
		query.append("      ,NVL(b.cnt,0) cnt_b, NVL(b.amt,0) amt_b" ).append("\n"); 
		query.append("      ,NVL(c.cnt,0) cnt_c, NVL(c.amt,0) amt_c" ).append("\n"); 
		query.append("      ,NVL(d.cnt,0) cnt_d, NVL(d.amt,0) amt_d" ).append("\n"); 
		query.append("      ,NVL(e.cnt,0) cnt_e, NVL(e.amt,0) amt_e" ).append("\n"); 
		query.append("      ,NVL(f.cnt,0) cnt_f, NVL(f.amt,0) amt_f" ).append("\n"); 
		query.append("      ,NVL(g.cnt,0) cnt_g, NVL(g.amt,0) amt_g" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0)+NVL(b.cnt,0)+NVL(c.cnt,0)+NVL(d.cnt,0)+NVL(e.cnt,0)+NVL(f.cnt,0)+NVL(g.cnt,0) cnt_tot" ).append("\n"); 
		query.append("      ,NVL(a.amt,0)+NVL(b.amt,0)+NVL(c.amt,0)+NVL(d.amt,0)+NVL(e.amt,0)+NVL(f.amt,0)+NVL(g.amt,0) amt_tot" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("          SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("            FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("           WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("        	 AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("        	 AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("        	 AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("       UNION ALL" ).append("\n"); 
		query.append("          SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("            FROM DUAL" ).append("\n"); 
		query.append("       ) o," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Initial Confirm. / O" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('O')" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) a," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Cancellation Invoice / M" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('M')" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) b," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- INV Issued / I, N" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('I','N')" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) c," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Bal. remained (ERP I/F) / L, A" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("			/* L(ERP I/F 되었으나 Balance Amount가 남아있는)상태도 종결로 처리함. */" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('A')" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) d," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- ADJ. Requested / R" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('R')" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y') " ).append("\n"); 
		query.append("             AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) e," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- ADJ. Rejected / J,K" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('J','K')" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y') " ).append("\n"); 
		query.append("             AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) f," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Collection Agency & Legal Action / Y" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('Y')" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) g" ).append("\n"); 
		query.append(" WHERE 1 = 1" ).append("\n"); 
		query.append("   AND o.rhq = a.rhq(+) AND o.ofc = a.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = b.rhq(+) AND o.ofc = b.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = c.rhq(+) AND o.ofc = c.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = d.rhq(+) AND o.ofc = d.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = e.rhq(+) AND o.ofc = e.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = f.rhq(+) AND o.ofc = f.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = g.rhq(+) AND o.ofc = g.ofc(+)" ).append("\n"); 
		query.append(" ORDER BY o.seq, o.rhq, o.ofc" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("#elseif (${s_status} == 'E') ---- 2. By Expense Type" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT o.rhq if_rhq_cd, o.ofc if_ofc_cd" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0) cnt_a, NVL(a.amt,0) amt_a" ).append("\n"); 
		query.append("      ,NVL(b.cnt,0) cnt_b, NVL(b.amt,0) amt_b" ).append("\n"); 
		query.append("      ,NVL(c.cnt,0) cnt_c, NVL(c.amt,0) amt_c" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0)+NVL(b.cnt,0)+NVL(c.cnt,0) cnt_tot" ).append("\n"); 
		query.append("      ,NVL(a.amt,0)+NVL(b.amt,0)+NVL(c.amt,0) amt_tot" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("          SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("            FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("           WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("        	 AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("        	 AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("        	 AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("       UNION ALL" ).append("\n"); 
		query.append("          SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("            FROM DUAL" ).append("\n"); 
		query.append("       ) o," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- TES" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y') /* 'L','A' close상태, 제외 */" ).append("\n"); 
		query.append("             AND a.n3pty_expn_tp_cd = 'TES'" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y') " ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) a," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- TRS" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')  /* 'L','A' close상태, 제외 */" ).append("\n"); 
		query.append("             AND a.n3pty_expn_tp_cd = 'TRS'" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y') " ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) b," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- MNR" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')  /* 'L','A' close상태, 제외 */" ).append("\n"); 
		query.append("             AND a.n3pty_expn_tp_cd = 'MNR'" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y') " ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) c" ).append("\n"); 
		query.append(" WHERE 1 = 1" ).append("\n"); 
		query.append("   AND o.rhq = a.rhq(+) AND o.ofc = a.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = b.rhq(+) AND o.ofc = b.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = c.rhq(+) AND o.ofc = c.ofc(+)" ).append("\n"); 
		query.append(" ORDER BY o.seq, o.rhq, o.ofc" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("#elseif (${s_status} == 'A') ---- 3. By Aging" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT o.rhq if_rhq_cd, o.ofc if_ofc_cd" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0) cnt_a, NVL(a.amt,0) amt_a" ).append("\n"); 
		query.append("      ,NVL(b.cnt,0) cnt_b, NVL(b.amt,0) amt_b" ).append("\n"); 
		query.append("      ,NVL(c.cnt,0) cnt_c, NVL(c.amt,0) amt_c" ).append("\n"); 
		query.append("      ,NVL(d.cnt,0) cnt_d, NVL(d.amt,0) amt_d" ).append("\n"); 
		query.append("      ,NVL(e.cnt,0) cnt_e, NVL(e.amt,0) amt_e" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0)+NVL(b.cnt,0)+NVL(c.cnt,0)+NVL(d.cnt,0)+NVL(e.cnt,0) cnt_tot" ).append("\n"); 
		query.append("      ,NVL(a.amt,0)+NVL(b.amt,0)+NVL(c.amt,0)+NVL(d.amt,0)+NVL(e.amt,0) amt_tot" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("          SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("            FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("           WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("        	 AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("        	 AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("        	 AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("       UNION ALL" ).append("\n"); 
		query.append("          SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("            FROM DUAL" ).append("\n"); 
		query.append("       ) o," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- in 30 days" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')                                                    -- 'L','A' close상태, 제외" ).append("\n"); 
		query.append("/*	2009-02-17 O Wan-Ki      1.6 Status Summary - Aging Overdue별 집계쿼리보완. */" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) <= '30'" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) a," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- 31~60 days" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')                                                    -- 'L','A' close상태, 제외" ).append("\n"); 
		query.append("/*	2009-02-17 O Wan-Ki      1.6 Status Summary - Aging Overdue별 집계쿼리보완. */" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) >= '31'" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) <= '60'" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) b," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- 61~90 days" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')                                                    -- 'L','A' close상태, 제외" ).append("\n"); 
		query.append("/*	2009-02-17 O Wan-Ki      1.6 Status Summary - Aging Overdue별 집계쿼리보완. */" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) >= '61'" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) <= '90'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) c," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- 91~180 days" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')                                                    -- 'L','A' close상태, 제외" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*	2009-02-17 O Wan-Ki      1.6 Status Summary - Aging Overdue별 집계쿼리보완. */" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) >= '91'" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) <= '180'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) d," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- over 180 days" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')                                                    -- 'L','A' close상태, 제외" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*	2009-02-17 O Wan-Ki      1.6 Status Summary - Aging Overdue별 집계쿼리보완. */" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) >= '181'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) e" ).append("\n"); 
		query.append(" WHERE 1 = 1" ).append("\n"); 
		query.append("   AND o.rhq = a.rhq(+) AND o.ofc = a.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = b.rhq(+) AND o.ofc = b.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = c.rhq(+) AND o.ofc = c.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = d.rhq(+) AND o.ofc = d.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = e.rhq(+) AND o.ofc = e.ofc(+)" ).append("\n"); 
		query.append(" ORDER BY o.seq, o.rhq, o.ofc" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("#elseif (${s_status} == 'C') ---- 4. Current Status" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT o.rhq if_rhq_cd, o.ofc if_ofc_cd" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0) cnt_a, NVL(a.amt,0) amt_a" ).append("\n"); 
		query.append("      ,NVL(b.cnt,0) cnt_b, NVL(b.amt,0) amt_b" ).append("\n"); 
		query.append("      ,NVL(c.cnt,0) cnt_c, NVL(c.amt,0) amt_c" ).append("\n"); 
		query.append("      ,NVL(d.cnt,0) cnt_d, NVL(d.amt,0) amt_d" ).append("\n"); 
		query.append("      ,NVL(e.cnt,0) cnt_e, NVL(e.amt,0) amt_e" ).append("\n"); 
		query.append("      ,NVL(b.cnt,0)+NVL(c.cnt,0)+NVL(d.cnt,0)+NVL(e.cnt,0) cnt_tot" ).append("\n"); 
		query.append("      ,NVL(b.amt,0)+NVL(c.amt,0)+NVL(d.amt,0)+NVL(e.amt,0) amt_tot" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("          SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("            FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("           WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("        	 AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("        	 AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("        	 AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("       UNION ALL" ).append("\n"); 
		query.append("          SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("            FROM DUAL" ).append("\n"); 
		query.append("       ) o," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Open" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m            " ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y') -- except L A" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) a," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Closed ERP I/F" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.clt_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(c.ots_sts_cre_dt,a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('E','L','A') -- add L A" ).append("\n"); 
		query.append("             AND ( a.adj_amt IS NULL OR a.adj_amt = 0 )" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) b," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Closed Write-Off" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.adj_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(c.ots_sts_cre_dt,a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m            " ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('E')" ).append("\n"); 
		query.append("             AND a.adj_amt != 0" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) c," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Closed ROC" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(c.ots_sts_cre_dt,a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('E')" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) d," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Process Close" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(c.ots_sts_cre_dt,a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT 0 seq, rhq_cd AS rhq, ofc_cd ofc" ).append("\n"); 
		query.append("                      FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                     WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                       AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                       AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                       AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                    SELECT 999 seq, '(TOTAL)' rhq, '(TOTAL)' ofc" ).append("\n"); 
		query.append("                      FROM DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('C')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                                SELECT ofc_cd ofc" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND n3pty_ctrl_ofc_cd = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND ofc_cd = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) e" ).append("\n"); 
		query.append(" WHERE 1 = 1" ).append("\n"); 
		query.append("   AND o.rhq = a.rhq(+) AND o.ofc = a.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = b.rhq(+) AND o.ofc = b.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = c.rhq(+) AND o.ofc = c.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = d.rhq(+) AND o.ofc = d.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = e.rhq(+) AND o.ofc = e.ofc(+)" ).append("\n"); 
		query.append(" ORDER BY o.seq, o.rhq, o.ofc" ).append("\n"); 
		query.append("#end" ).append("\n"); 

	}
}