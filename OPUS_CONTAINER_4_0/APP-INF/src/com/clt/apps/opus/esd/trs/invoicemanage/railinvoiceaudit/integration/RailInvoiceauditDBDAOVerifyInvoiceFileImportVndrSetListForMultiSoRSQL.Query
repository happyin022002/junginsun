<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RailInvoiceauditDBDAOVerifyInvoiceFileImportVndrSetListForMultiSoRSQL">
			<desc><![CDATA[RailInvoiceauditDBDAOVerifyInvoiceFileImportVndrSetListForMultiSo]]></desc>
			<sql><![CDATA[
SELECT  LISTAGG(INV_NO, ',') WITHIN GROUP(ORDER BY INV_NO) INV_NO     
FROM (
	SELECT																			 
	      Z.TRSP_SO_OFC_CTY_CD															 
	    , Z.TRSP_SO_SEQ																	 
	    , Z.RAIL_CMB_THRU_TP_CD															 
	    , Z.CGO_TP_CD																		 
	    , Z.CURR_CD																		 
	    , SUM(Z.BZC_AMT)					AS BZC_AMT									 
	    , SUM(Z.FUEL_SCG_AMT)				AS FUEL_SCG_AMT								 
	    , SUM(Z.OVR_WGT_SCG_AMT)			AS OVR_WGT_SCG_AMT							 
	    , SUM(Z.HZD_MTRL_SCG_AMT)			AS HZD_MTRL_SCG_AMT								 
        , 0								    AS ETC_ADD_AMT
	    , SUM(Z.NEGO_AMT)					AS NEGO_AMT									 
	    , CASE WHEN TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(Z.CURR_CD, SUM(TOT_AMT)) = TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(@[currency], @[invBilAmt]) THEN 'C'																	 
		   ELSE 'D'																	 
	      END AS TRSP_RAIL_INV_AUD_CD						 
	    , Z.RAIL_BIL_DT																	 
	    , Z.EQ_TPSZ_CD																	 
	    , Z.FM_NOD_CD																		 
	    , SUBSTR(Z.FM_NOD_CD, 1,5) 			AS FM_NOD_CD1								 
	    , SUBSTR(Z.FM_NOD_CD, 6,2) 			AS FM_NOD_CD2								 
	    , Z.TO_NOD_CD																		 
	    , SUBSTR(Z.TO_NOD_CD, 1,5) 			AS TO_NOD_CD1								 
	    , SUBSTR(Z.TO_NOD_CD, 6,2) 			AS TO_NOD_CD2			
        , 'NYK' 							AS TRSP_INV_CO_IND_CD								 
	    , 'F'   							AS TRSP_INV_TP_CD
		, INV_NO							 
	FROM																				 
	(																					 
	    SELECT																			 
		B.TRSP_SO_OFC_CTY_CD														 
		, B.TRSP_SO_SEQ																 
		, A.RAIL_CMB_THRU_TP_CD														 
		, A.CGO_TP_CD																	 
		, B.CURR_CD																	 
		, B.BZC_AMT																	 
		, B.FUEL_SCG_AMT																 
		, B.OVR_WGT_SCG_AMT															 
		, B.HZD_MTRL_SCG_AMT																 
		, B.ETC_ADD_AMT
		, B.NEGO_AMT																	 
		, NVL(B.BZC_AMT, 0) + NVL(B.FUEL_SCG_AMT, 0) + NVL(B.OVR_WGT_SCG_AMT, 0) + NVL(B.HZD_MTRL_SCG_AMT, 0) + NVL(B.ETC_ADD_AMT, 0)  AS TOT_AMT
		, TO_CHAR(A.LOCL_CRE_DT,'YYYYMMDD') AS RAIL_BIL_DT									 
		, A.EQ_NO																		 
		, A.EQ_TPSZ_CD																 
		, CASE WHEN A.RAIL_CMB_THRU_TP_CD IN('C2T','C2C','C3T') THEN					 
					    (
					       SELECT C.FM_NOD_CD
					       FROM  TRS_TRSP_RAIL_BIL_VNDR_SET C
					       WHERE C.TRSP_SO_OFC_CTY_CD = B.TRSP_SO_OFC_CTY_CD
						   AND   C.TRSP_SO_SEQ        = B.TRSP_SO_SEQ
						   AND   C.SUB_RAIL_SEQ       = 1
					    )
			   WHEN A.RAIL_CMB_THRU_TP_CD IN ('C3S') AND B.SUB_RAIL_SEQ IN (1, 2) THEN
						(
						   SELECT C.FM_NOD_CD
						   FROM  TRS_TRSP_RAIL_BIL_VNDR_SET C
						   WHERE C.TRSP_SO_OFC_CTY_CD = B.TRSP_SO_OFC_CTY_CD
						   AND   C.TRSP_SO_SEQ        = B.TRSP_SO_SEQ
						   AND   C.SUB_RAIL_SEQ       = 1
						)																			 
			   ELSE B.FM_NOD_CD															 
		      END FM_NOD_CD																 
		, CASE WHEN A.RAIL_CMB_THRU_TP_CD IN('C2T','C2C') THEN
						(
						   SELECT C.TO_NOD_CD															 
						   FROM	 TRS_TRSP_RAIL_BIL_VNDR_SET C										 
						   WHERE C.TRSP_SO_OFC_CTY_CD = B.TRSP_SO_OFC_CTY_CD						 
						   AND   C.TRSP_SO_SEQ        = B.TRSP_SO_SEQ							 
						   AND   C.SUB_RAIL_SEQ       = 2										 
						)																			 
			   WHEN A.RAIL_CMB_THRU_TP_CD IN('C3T') THEN																		 
						(
						   SELECT C.TO_NOD_CD															 
						   FROM	 TRS_TRSP_RAIL_BIL_VNDR_SET C									 
					       WHERE C.TRSP_SO_OFC_CTY_CD = B.TRSP_SO_OFC_CTY_CD					 
						   AND   C.TRSP_SO_SEQ        = B.TRSP_SO_SEQ					 
						   AND   C.SUB_RAIL_SEQ       = 3
						)																			 
			   WHEN A.RAIL_CMB_THRU_TP_CD IN('C3S')	AND B.SUB_RAIL_SEQ IN (1,2) THEN																		 
						(																			 
						   SELECT C.TO_NOD_CD
						   FROM	 TRS_TRSP_RAIL_BIL_VNDR_SET C										 
						   WHERE C.TRSP_SO_OFC_CTY_CD = B.TRSP_SO_OFC_CTY_CD						 
						   AND   C.TRSP_SO_SEQ        = B.TRSP_SO_SEQ							 
						   AND   C.SUB_RAIL_SEQ       = 2										 
						)																			 
			   ELSE B.TO_NOD_CD															 
		    END TO_NOD_CD,
			B.INV_NO																 
	FROM  TRS_TRSP_RAIL_BIL_ORD       A											 
	    , TRS_TRSP_RAIL_BIL_VNDR_SET  B											 
	WHERE   A.TRSP_SO_OFC_CTY_CD        = B.TRSP_SO_OFC_CTY_CD						 
	AND     A.TRSP_SO_SEQ               = B.TRSP_SO_SEQ								 
	AND     A.RAIL_CMB_THRU_TP_CD       IS NOT NULL									 
	AND     B.INV_VNDR_SEQ              IS NOT NULL										 
	AND		B.PAIR_VNDR_SEQ				= @[railRoadCode]											 
	AND     A.EQ_NO                     LIKE CASE WHEN LENGTH(@[cntr_no]) >= 10 THEN SUBSTR(@[cntr_no], 0, 10) || '%' END
	AND     A.TRSP_SO_STS_CD            IN ('I','C','R')								 
	AND     A.DELT_FLG                  ='N'
	AND     A.LOCL_CRE_DT BETWEEN TO_DATE(@[wblDt] || NVL2(@[wblDt], '000001', NULL),'YYYYMMDDHH24MISS')-7	AND TO_DATE(@[wblDt] || NVL2(@[wblDt], '235959', NULL),'YYYYMMDDHH24MISS')+3
	) Z																				 
	GROUP BY																			 
	    Z.TRSP_SO_OFC_CTY_CD															 
	,	Z.TRSP_SO_SEQ																	 
	,	Z.RAIL_CMB_THRU_TP_CD															 
	,	Z.CGO_TP_CD																		 
	,	Z.CURR_CD																		 
	,	Z.RAIL_BIL_DT																	 
	,	Z.EQ_NO																			 
	,	Z.EQ_TPSZ_CD																	 
	,	Z.FM_NOD_CD																		 
	,	Z.TO_NOD_CD
	,	Z.INV_NO
) 
WHERE FM_NOD_CD = NVL(@[fm_nod_cd], FM_NOD_CD)
AND   TO_NOD_CD = NVL(@[to_nod_cd], TO_NOD_CD)			]]></sql>
			<params>
				<param name="currency" type="12" value="" out="N"/>
				<param name="invBilAmt" type="12" value="" out="N"/>
				<param name="railRoadCode" type="12" value="" out="N"/>
				<param name="cntr_no" type="12" value="" out="N"/>
				<param name="wblDt" type="12" value="" out="N"/>
				<param name="fm_nod_cd" type="12" value="" out="N"/>
				<param name="to_nod_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
