<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="InlandRouteManageDBDAOUpdateInlandRoutAddItemsUSQL">
			<desc><![CDATA[UpdateInlandRoutAddItems]]></desc>
			<sql><![CDATA[
MERGE INTO PRD_INLND_ROUT_MST X
  USING 
(SELECT  ROUT_ORG_NOD_CD,ROUT_DEST_NOD_CD,ROUT_SEQ,PCTL_IO_BND_CD,FULL_RTN_YD_CD,FULL_PKUP_YD_CD,HUB_NOD_CD
 FROM ( 
      SELECT 
      S.ROUT_ORG_NOD_CD ,
      S.ROUT_DEST_NOD_CD ,
      S.PCTL_IO_BND_CD,
      S.ROUT_SEQ ,
      S.HUB_LOC_CD,
      DECODE(S.PCTL_IO_BND_CD,'O',US_O_HUB,'I',US_I_HUB) HUB_NOD_CD, 
      SUBSTRB( MIN( TO_CHAR(D.ROUT_DTL_SEQ, 'FM099')||D.LNK_DEST_NOD_CD ) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ), 4) FIRST_LNK_DEST_NOD_CD ,
      (CASE WHEN S.PCTL_IO_BND_CD IN ('O','B') AND N.NOD_TP_CD != 'Z' THEN S.ROUT_ORG_NOD_CD 
            WHEN S.PCTL_IO_BND_CD IN ('O','B') AND N.NOD_TP_CD = 'Z' AND D.FIRST_INLND_ROUT_CMB_FLG = 'N' THEN D.FIRST_LNK_DEST_NOD_CD 
            WHEN S.PCTL_IO_BND_CD IN ('O','B') AND N.NOD_TP_CD = 'Z' AND D.FIRST_INLND_ROUT_CMB_FLG = 'N' THEN D.FULL_RTN_CY_CD_Y 
            WHEN S.PCTL_IO_BND_CD IN ('O','B') AND N.NOD_TP_CD = 'Z' AND D.INLND_ROUT_CMB_FLG = 'Y' THEN D.FULL_RTN_CY_CD_Y 
      END ) FULL_RTN_YD_CD ,
      (CASE WHEN S.PCTL_IO_BND_CD IN ('I','B') AND M.NOD_TP_CD != 'Z' THEN S.ROUT_DEST_NOD_CD 
            WHEN S.PCTL_IO_BND_CD IN ('I','B') AND M.NOD_TP_CD = 'Z' AND D.FIRST_INLND_ROUT_CMB_FLG = 'N' THEN D.LAST_LNK_ORG_NOD_CD 
            WHEN S.PCTL_IO_BND_CD IN ('I','B') AND M.NOD_TP_CD = 'Z' AND D.FIRST_INLND_ROUT_CMB_FLG = 'N' THEN D.FULL_PKUP_YD_CD_Y 
            WHEN S.PCTL_IO_BND_CD IN ('I','B') AND M.NOD_TP_CD = 'Z' AND D.INLND_ROUT_CMB_FLG = 'Y' THEN D.FULL_PKUP_YD_CD_Y 
            END ) FULL_PKUP_YD_CD
    FROM PRD_INLND_ROUT_MST S ,
      (
        SELECT D.ROUT_ORG_NOD_CD ,
          D.ROUT_DEST_NOD_CD ,
          D.ROUT_SEQ ,
          D.LNK_ORG_NOD_CD ,
          D.LNK_DEST_NOD_CD ,
          D.ROUT_DTL_SEQ ,
          D.INLND_ROUT_CMB_FLG ,
          D.TRSP_MOD_CD ,
          ROW_NUMBER( ) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ
            ORDER BY D.ROUT_DTL_SEQ ) ROW_POS ,
          SUBSTRB( MIN( TO_CHAR(D.ROUT_DTL_SEQ, 'FM099')||NVL(D.INLND_ROUT_CMB_FLG, 'N') ) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ), 4) FIRST_INLND_ROUT_CMB_FLG ,
          SUBSTRB( MAX( TO_CHAR(D.ROUT_DTL_SEQ, 'FM099')||NVL(D.INLND_ROUT_CMB_FLG, 'N') ) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ), 4) LAST_INLND_ROUT_CMB_FLG ,
          SUBSTRB( MIN( TO_CHAR(D.ROUT_DTL_SEQ, 'FM099')||D.LNK_DEST_NOD_CD ) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ), 4) FIRST_LNK_DEST_NOD_CD ,
          SUBSTRB( MAX( (CASE WHEN D.INLND_ROUT_CMB_FLG = 'Y' THEN TO_CHAR(D.ROUT_DTL_SEQ, 'FM099')||D.LNK_DEST_NOD_CD END) ) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ), 4) FULL_RTN_CY_CD_Y ,
          SUBSTRB( MAX( TO_CHAR(D.ROUT_DTL_SEQ, 'FM099')||D.LNK_ORG_NOD_CD ) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ), 4) LAST_LNK_ORG_NOD_CD ,
          SUBSTRB( MIN( (CASE WHEN D.INLND_ROUT_CMB_FLG = 'Y' THEN TO_CHAR(D.ROUT_DTL_SEQ, 'FM099')||D.LNK_ORG_NOD_CD END) ) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ), 4) FULL_PKUP_YD_CD_Y ,
          
          SUBSTRB( MAX( (CASE WHEN SUBSTR(D.ROUT_ORG_NOD_CD,1,2) IN  ('US','CA','MX') AND D.TRSP_MOD_CD ='RD' THEN TO_CHAR(D.ROUT_DTL_SEQ, 'FM099')||D.LNK_DEST_NOD_CD END) ) 
                           OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ), 4) US_I_HUB ,
          SUBSTRB( MIN( (CASE WHEN SUBSTR(D.ROUT_ORG_NOD_CD,1,2) IN  ('US','CA','MX') AND D.TRSP_MOD_CD ='RD' THEN TO_CHAR(D.ROUT_DTL_SEQ, 'FM099')||D.LNK_ORG_NOD_CD END) ) 
                           OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ), 4) US_O_HUB ,
          
          MIN( D.TRSP_MOD_CD ) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ) MIN_TRSP_MOD_CD ,
          MAX( D.TRSP_MOD_CD ) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ) MAX_TRSP_MOD_CD ,
          MAX( DECODE(D.TRSP_MOD_CD, 'TD', 'TD')) OVER ( PARTITION BY D.ROUT_ORG_NOD_CD , D.ROUT_DEST_NOD_CD , D.ROUT_SEQ ) TD_TRSP_MOD_CD
          
        FROM PRD_INLND_ROUT_DTL D 
        ) D ,
      PRD_NODE N ,
      PRD_NODE M
    WHERE S.ROUT_ORG_NOD_CD = D.ROUT_ORG_NOD_CD(+)
      AND S.ROUT_DEST_NOD_CD = D.ROUT_DEST_NOD_CD(+)
      AND S.ROUT_SEQ = D.ROUT_SEQ(+)
      AND S.ROUT_ORG_NOD_CD = N.NOD_CD(+)
      AND S.ROUT_DEST_NOD_CD = M.NOD_CD(+)
      AND D.ROW_POS(+) = 1 
      AND S.ROUT_ORG_NOD_CD = @[i_rout_org_nod_cd]
      AND S.ROUT_DEST_NOD_CD = @[i_rout_dest_nod_cd]
      AND S.ROUT_SEQ = TO_NUMBER(@[i_rout_seq])
 ) 
) B
    ON (  X.ROUT_ORG_NOD_CD = B.ROUT_ORG_NOD_CD AND  X.ROUT_DEST_NOD_CD = B.ROUT_DEST_NOD_CD AND  X.ROUT_SEQ = B.ROUT_SEQ )
   WHEN MATCHED THEN
      UPDATE SET X.FULL_RTN_YD_CD = B.FULL_RTN_YD_CD,
                 X.FULL_PKUP_YD_CD =B.FULL_PKUP_YD_CD,
                 X.TRSP_MOD_CD     = @[trsp_mod_cd],
                 X.HUB_NOD_CD = SUBSTR(TRIM(B.HUB_NOD_CD||B.FULL_RTN_YD_CD||B.FULL_PKUP_YD_CD),1,7),
                 X.HUB_LOC_CD = SUBSTR(TRIM(B.HUB_NOD_CD||B.FULL_RTN_YD_CD||B.FULL_PKUP_YD_CD),1,5)			]]></sql>
			<params>
				<param name="i_rout_org_nod_cd" type="12" value="" out="N"/>
				<param name="i_rout_dest_nod_cd" type="12" value="" out="N"/>
				<param name="i_rout_seq" type="12" value="" out="N"/>
				<param name="trsp_mod_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
