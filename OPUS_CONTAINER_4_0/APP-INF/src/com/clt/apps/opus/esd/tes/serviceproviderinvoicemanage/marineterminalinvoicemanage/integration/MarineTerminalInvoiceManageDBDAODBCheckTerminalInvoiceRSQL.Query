<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MarineTerminalInvoiceManageDBDAODBCheckTerminalInvoiceRSQL">
			<desc><![CDATA[DBCheckTerminalInvoice]]></desc>
			<sql><![CDATA[
SELECT  MAX(BB.INV_NO) INV_NO, BB.CNTR_NO
FROM
(
    SELECT A.COST_CODE, C.CNTR_NO 
    FROM(
        SELECT DISTINCT DECODE(1,0,C.LGS_COST_CD,DECODE(C.LGS_COST_CD,CD,TP,C.LGS_COST_CD)) COST_CODE
        FROM ( SELECT COUNT(T.LGS_COST_CD) CNT,
             T.LGS_COST_CD TP,
             T.THRP_LGS_COST_CD CD,
             H.TML_AGMT_OFC_CTY_CD CTY,
             H.TML_AGMT_SEQ SEQ,
             H.TML_AGMT_VER_NO NO
            FROM   TES_TML_AGMT_HDR H, TES_TML_AGMT_THRP_COST T
            WHERE  H.YD_CD            = @[yd_cd]
            AND    H.VNDR_SEQ         = @[vndr_seq]
            AND    H.TML_AGMT_STS_CD = 'C'
            AND    H.DELT_FLG        = 'N'


#if (${agmt_ftr_inv_tp_cd} == 'MT') 
    AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[atb_dt],'-') -- ATB Date([atb_dt]) ==> Marine Terminal Invoice
    AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[atb_dt],'-') -- ATB Date([atb_dt]) ==> Marine Terminal Invoice

#elseif (${agmt_ftr_inv_tp_cd} == 'ST' || ${agmt_ftr_inv_tp_cd} == 'OS')
       AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
       AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

#elseif (${agmt_ftr_inv_tp_cd} == 'OT' || ${agmt_ftr_inv_tp_cd} == 'OFON' || ${agmt_ftr_inv_tp_cd} == 'OTOS')
       AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[to_prd_dt],'-') -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)
       AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[to_prd_dt],'-') -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)

#elseif (${agmt_ftr_inv_tp_cd} == 'ON')
    AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[min_wrk_dt],'-') -- Min Work Date([min_wrk_dt]) ==> OnDock Rail Invoice
    AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[min_wrk_dt],'-') -- Max Work Date([max_wrk_dt]) ==> OnDock Rail Invoice

#end


            AND    H.TML_AGMT_VER_NO = ( SELECT MAX(M.TML_AGMT_VER_NO)
                 FROM   TES_TML_AGMT_HDR M
                 WHERE  M.YD_CD               = @[yd_cd]
                 AND    M.VNDR_SEQ            = @[vndr_seq]
                 AND    M.TML_AGMT_STS_CD     = 'C'
                 AND    M.DELT_FLG            = 'N'


#if (${agmt_ftr_inv_tp_cd} == 'MT') 
            AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[atb_dt],'-') -- ATB Date([atb_dt]) ==> Marine Terminal Invoice
            AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[atb_dt],'-')) -- ATB Date([atb_dt]) ==> Marine Terminal Invoice

#elseif (${agmt_ftr_inv_tp_cd} == 'ST' || ${agmt_ftr_inv_tp_cd} == 'OS')
            AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
            AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-')) -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

#elseif (${agmt_ftr_inv_tp_cd} == 'OT' || ${agmt_ftr_inv_tp_cd} == 'OFON' || ${agmt_ftr_inv_tp_cd} == 'OTOS')
            AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[to_prd_dt],'-') -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)
            AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[to_prd_dt],'-')) -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)

#elseif (${agmt_ftr_inv_tp_cd} == 'ON')
            AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[min_wrk_dt],'-') -- Min Work Date([min_wrk_dt]) ==> OnDock Rail Invoice
            AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[min_wrk_dt],'-')) -- Max Work Date([max_wrk_dt]) ==> OnDock Rail Invoice
#else
			AND 1=2 )
#end

            AND    H.TML_AGMT_OFC_CTY_CD = T.TML_AGMT_OFC_CTY_CD(+)
            AND    H.TML_AGMT_SEQ        = T.TML_AGMT_SEQ(+)
            AND    H.TML_AGMT_VER_NO     = T.TML_AGMT_VER_NO(+)
            GROUP BY H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
            T.LGS_COST_CD, T.THRP_LGS_COST_CD ) A, TES_TML_SO_COST C, TES_TML_AGMT_DTL D
        WHERE  C.COST_CALC_MZD_CD = 'A'
        AND    C.TML_AGMT_MGMT_CD = 'A'

#if (${agmt_ftr_inv_tp_cd} == 'MT')
AND    C.MRN_TML_FLG = 'Y'  -- Marine Terminal Invoice

#elseif (${agmt_ftr_inv_tp_cd} == 'ON')
AND    C.ODCK_RAIL_CHG_FLG = 'Y' -- OnDock Rail Invoice

#elseif (${agmt_ftr_inv_tp_cd} == 'OT' || ${agmt_ftr_inv_tp_cd} == 'OTOS' )
AND    C.FDCK_CY_TML_FLG = 'Y' -- OFF Dock Terminal Invoice

#elseif (${agmt_ftr_inv_tp_cd} == 'OS')
AND    C.FDCK_CY_STO_FLG = 'Y' -- OFF Dock Storage Invoice

#elseif (${agmt_ftr_inv_tp_cd} == 'OFON')
AND    C.MRN_TML_FLG = 'Y' AND C.LGS_COST_CD LIKE 'TMND%'  -- OFF Dock 화면에서 ON Dock 비용계산시

#elseif (${agmt_ftr_inv_tp_cd} == 'ST')
AND    C.STO_INV_FLG = 'Y'  -- Marine Storage Invoice 

#end

        AND    D.TML_AGMT_OFC_CTY_CD = A.CTY
        AND    D.TML_AGMT_SEQ = A.SEQ
        AND    D.TML_AGMT_VER_NO  = A.NO
        AND    C.LGS_COST_CD = D.LGS_COST_CD
        AND    DECODE(A.CNT,0,DECODE(SUBSTR(C.LGS_COST_CD,1,2),'TP','N','Y'),'Y') = 'Y' 
        AND    D.THRP_COST_CD_FLG IS NULL

--OTOS이면 OS용
#if (${agmt_ftr_inv_tp_cd} == 'OTOS') 

UNION ALL

    SELECT DISTINCT DECODE(1,0,C.LGS_COST_CD,DECODE(C.LGS_COST_CD,CD,TP,C.LGS_COST_CD)) COST_CODE
    FROM ( SELECT COUNT(T.LGS_COST_CD) CNT,
         T.LGS_COST_CD TP,
         T.THRP_LGS_COST_CD CD,
         H.TML_AGMT_OFC_CTY_CD CTY,
         H.TML_AGMT_SEQ SEQ,
         H.TML_AGMT_VER_NO NO
        FROM   TES_TML_AGMT_HDR H, TES_TML_AGMT_THRP_COST T
        WHERE  H.YD_CD            = @[yd_cd]
        AND    H.VNDR_SEQ         = @[vndr_seq]
        AND    H.TML_AGMT_STS_CD = 'C'
        AND    H.DELT_FLG        = 'N'

        AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
        AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

        AND    H.TML_AGMT_VER_NO = ( SELECT MAX(M.TML_AGMT_VER_NO)
             FROM   TES_TML_AGMT_HDR M
             WHERE  M.YD_CD               = @[yd_cd]
             AND    M.VNDR_SEQ            = @[vndr_seq]
             AND    M.TML_AGMT_STS_CD     = 'C'
             AND    M.DELT_FLG            = 'N'

             AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
             AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-')) -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

        AND    H.TML_AGMT_OFC_CTY_CD = T.TML_AGMT_OFC_CTY_CD(+)
        AND    H.TML_AGMT_SEQ        = T.TML_AGMT_SEQ(+)
        AND    H.TML_AGMT_VER_NO     = T.TML_AGMT_VER_NO(+)
        GROUP BY H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
        T.LGS_COST_CD, T.THRP_LGS_COST_CD ) A, TES_TML_SO_COST C, TES_TML_AGMT_DTL D
    WHERE  C.COST_CALC_MZD_CD = 'A'
    AND    C.TML_AGMT_MGMT_CD = 'A'

    AND    C.FDCK_CY_STO_FLG = 'Y' -- OFF Dock Storage Invoice
    AND    D.TML_AGMT_OFC_CTY_CD = A.CTY
    AND    D.TML_AGMT_SEQ = A.SEQ
    AND    D.TML_AGMT_VER_NO  = A.NO
    AND    C.LGS_COST_CD = D.LGS_COST_CD
    AND    DECODE(A.CNT,0,DECODE(SUBSTR(C.LGS_COST_CD,1,2),'TP','N','Y'),'Y') = 'Y' 
    AND    D.THRP_COST_CD_FLG IS NULL
#end

    ) A,
    (
        SELECT ltrim(regexp_substr((select COST_CD_FTR_RMK
                                      from tes_tml_so_hdr
                                     where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]), '[^|]+', 1, level ) ,'|') as COST_CODE
         FROM dual
         connect by level<= ( length((select COST_CD_FTR_RMK
                                        from tes_tml_so_hdr
                                       where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]))+1 - length(replace((select COST_CD_FTR_RMK
                                                                                        from tes_tml_so_hdr
                                                                                       where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]), '|')) ) / length('|')
    )B,
    (
        SELECT * FROM TES_TML_SO_CNTR_LIST
        WHERE 1=1
        AND TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]

#if (${agmt_ftr_inv_tp_cd} == 'MT')
         AND    VSL_CD             = SUBSTR(@[vvd],1,4)
         AND    SKD_VOY_NO         = SUBSTR(@[vvd],5,4)
         AND    SKD_DIR_CD         = SUBSTR(@[vvd],9,1)
#end

    ) C

#if (${cost_cd_ftr_rmk} == '') 
	WHERE A.COST_CODE=B.COST_CODE(+)
#else 
	WHERE A.COST_CODE=B.COST_CODE -- hdr정보에 데이터 있으면 inner 없음 outter
#end

) AA,
(
SELECT DISTINCT H.INV_NO, H.YD_CD, H.VNDR_SEQ, D.LGS_COST_CD, L.CNTR_NO
 FROM   TES_TML_SO_HDR H, TES_TML_SO_DTL D, TES_TML_SO_CNTR_LIST L
 WHERE  H.YD_CD             = @[yd_cd]
 AND    H.VNDR_SEQ           = @[vndr_seq]
 AND    H.TML_SO_OFC_CTY_CD   = D.TML_SO_OFC_CTY_CD
 AND    H.TML_SO_SEQ          = D.TML_SO_SEQ
 AND    H.TML_SO_OFC_CTY_CD   = L.TML_SO_OFC_CTY_CD
 AND    H.TML_SO_SEQ          = L.TML_SO_SEQ

#if (${agmt_ftr_inv_tp_cd} == 'MT')
 AND    L.VSL_CD             = SUBSTR(@[vvd],1,4)
 AND    L.SKD_VOY_NO         = SUBSTR(@[vvd],5,4)
 AND    L.SKD_DIR_CD         = SUBSTR(@[vvd],9,1)
 AND    L.IO_BND_CD          = @[io_bnd_cd] -- ? hdr정보있는 값
 AND    H.TML_INV_TP_CD      = 'TM'
 AND   (DECODE(L.STV_RVIS_IND_FLG,'Y','','SV') LIKE SUBSTR(D.LGS_COST_CD,1,2)||'%' OR DECODE(L.TML_RVIS_IND_FLG,'Y','','TM') LIKE SUBSTR(D.LGS_COST_CD,1,2)||'%'
 		OR DECODE(L.RVIS_IND_FLG,'Y','','TP') LIKE SUBSTR(D.LGS_COST_CD,1,2)||'%' OR DECODE(L.CGO_RVIS_IND_FLG,'Y','','CG') LIKE SUBSTR(D.LGS_COST_CD,1,2)||'%'
 		)

#elseif (${agmt_ftr_inv_tp_cd} == 'ON')
AND    H.TML_INV_TP_CD      = 'ON' -- OnDock Rail Invoice

#elseif (${agmt_ftr_inv_tp_cd} == 'OT' || ${agmt_ftr_inv_tp_cd} == 'OTOS' || ${agmt_ftr_inv_tp_cd} == 'OS' || ${agmt_ftr_inv_tp_cd} == 'OFON' )
AND    H.TML_INV_TP_CD      = 'OF'-- OFF Dock
AND    H.TML_INV_RJCT_STS_CD <> 'RJ' 

#elseif (${agmt_ftr_inv_tp_cd} == 'ST')
AND    H.TML_INV_TP_CD      = 'ST'
AND    H.TML_INV_RJCT_STS_CD <> 'RJ'
#end

 AND    NVL(H.DELT_FLG,'N')   <> 'Y'
 AND    D.CALC_TP_CD          = 'A'
 AND    L.VRFY_RSLT_IND_CD    = 'CO'
 AND    NVL(L.CNTR_TPSZ_CD,'N')  = NVL(D.CNTR_TPSZ_CD,'N')
 AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IO_BND_CD,'N'),'ON',NVL(L.IO_BND_CD,'N'),'OF','N','ST','N')
     = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IO_BND_CD,'N'),'ON',NVL(D.IO_BND_CD,'N'),'OF','N','ST','N')
 AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IOC_CD,'N'),'ON',NVL(L.IOC_CD,'N'),'OF','N','ST','N')
     = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IOC_CD,'N'),'ON',NVL(D.IOC_CD,'N'),'OF','N','ST','N')
 AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.LANE_CD,'N'),'ON',NVL(L.LANE_CD,'N'),'OF','N','ST','N')
     = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.LANE_CD,'N'),'ON',NVL(D.LANE_CD,'N'),'OF','N','ST','N')
 AND    DECODE(H.TML_INV_TP_CD,'TM',
    DECODE(L.BB_CGO_FLG,'Y','BB',DECODE(L.LOCL_TS_IND_CD,'T',DECODE(L.CNTR_STY_CD,'F','TS','TM'),DECODE(L.CNTR_STY_CD,'F','FL','MT'))),
    'ON',DECODE(L.CNTR_STY_CD,'F','F','M'),'OF',DECODE(L.CNTR_STY_CD,'F','FL','MT'),'ST',DECODE(L.LOCL_TS_IND_CD,'T','TS',DECODE(L.CNTR_STY_CD,'F','FL','MT')))
     = DECODE(H.TML_INV_TP_CD,'TM',SUBSTR(D.LGS_COST_CD,5,2),'ON',SUBSTR(D.LGS_COST_CD,6,1),'OF',SUBSTR(D.LGS_COST_CD,5,2),
    'ST',SUBSTR(D.LGS_COST_CD,5,2))
 AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.DCGO_CLSS_CD,'N'),'ON',NVL(L.DCGO_CLSS_CD,'N'),'OF','N','ST','N')
     = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.DCGO_IND_CD,'N'),'ON',NVL(D.DCGO_IND_CD,'N'),'OF','N','ST','N')
 AND    DECODE(H.TML_INV_TP_CD,'TM',DECODE(D.TML_TRNS_MOD_CD,'','S','S','S',NVL(L.TML_TRNS_MOD_CD,'S')),'N')
     = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.TML_TRNS_MOD_CD,'S'),'N')
 AND    DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS','F','N'),'N')
     = DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS',L.CNTR_STY_CD,'N'),'N')

#if (${agmt_ftr_inv_tp_cd} == 'MT') 
 AND    DECODE(H.TML_INV_TP_CD,'TM','Y',L.VSL_CD) <> DECODE(H.TML_INV_TP_CD,'TM','N','CNTC')
#end

) BB
WHERE AA.CNTR_NO = BB.CNTR_NO
AND AA.COST_CODE = BB.LGS_COST_CD
GROUP BY BB.CNTR_NO			]]></sql>
			<params>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="atb_dt" type="12" value="" out="N"/>
				<param name="fm_prd_dt" type="12" value="" out="N"/>
				<param name="to_prd_dt" type="12" value="" out="N"/>
				<param name="min_wrk_dt" type="12" value="" out="N"/>
				<param name="tml_so_ofc_cty_cd" type="12" value="" out="N"/>
				<param name="tml_so_seq" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="io_bnd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
