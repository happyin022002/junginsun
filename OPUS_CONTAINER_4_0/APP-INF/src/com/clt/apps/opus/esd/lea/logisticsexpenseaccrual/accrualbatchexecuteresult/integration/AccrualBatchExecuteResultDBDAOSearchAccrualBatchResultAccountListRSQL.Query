<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccrualBatchExecuteResultDBDAOSearchAccrualBatchResultAccountListRSQL">
			<desc><![CDATA[결산 결과에 대해 Account code(계정코드) 별로 조회한다.]]></desc>
			<sql><![CDATA[
SELECT  B.EXE_YRMON
    ,	B.REV_YRMON
    ,	A.ACCL_AUTO_CD
    ,	A.ACCT_CD
    ,	A.ACCT_CD_NM
    ,	NVL(B.ESTM_COST_AMT,0) 			ESTM_COST_AMT
    ,	NVL(B.PRE_ACT_COST_AMT,0) 		PRE_ACT_COST_AMT
    ,	NVL(B.PST_ACT_COST_AMT,0) 		PST_ACT_COST_AMT
    ,	CASE  WHEN A.ACCL_AUTO_CD = 'A' THEN (NVL(B.PST_ACT_COST_AMT,0) - NVL(B.PRE_ACT_COST_AMT,0))
                ELSE  0
        END    DIFF_ACT_COST_AMT
    ,	CASE  WHEN A.ACCL_AUTO_CD = 'A' THEN DECODE(NVL(B.ESTM_COST_AMT,0),0,0,(NVL(B.PST_ACT_COST_AMT,0)/NVL(B.ESTM_COST_AMT,0)*100))
                ELSE  0
        END ACT_COST_RATIO
    ,	NVL(B.ACCL_COST_AMT,0)  		ACCL_COST_AMT
    ,	CASE  WHEN A.ACCL_AUTO_CD = 'A' THEN (NVL(B.PST_ACT_COST_AMT,0)+NVL(B.ACCL_COST_AMT,0))
                ELSE  (NVL(B.PRE_ACT_COST_AMT,0)+NVL(B.ACCL_COST_AMT,0))
        END  										CONFIRMED_COST_AMT
    ,	(NVL(B.PST_ACT_COST_AMT,0) + NVL(B.ACCL_COST_AMT,0)-NVL(B.ESTM_COST_AMT,0)) 	DIFF_COST_AMT
    ,	C.MNL_INP_FLG
    ,	C.ERP_IF_FLG
    ,	TO_CHAR(C.ERP_IF_DT,'YYYYMMDD')   ERP_IF_DT
FROM    (	SELECT 	DISTINCT(ACCT_CD)   ACCT_CD
                ,	ACCT_NM ACCT_CD_NM
                ,	ACCL_AUTO_CD
            FROM	LEA_LGS_COST
            WHERE	ACCL_AUTO_CD IS NOT NULL
            UNION ALL
            SELECT 	DISTINCT(OTR_CRR_ACCT_CD) ACCT_CD
                ,	OTR_CRR_ACCT_NM ACCT_CD_NM
                ,   'M' ACCL_AUTO_CD
            FROM	LEA_LGS_COST                                                         	
            WHERE	ACCL_AUTO_CD IS NOT NULL
            AND 	OTR_CRR_ACCT_CD IS NOT NULL
        ) A
    ,	LEA_ACCT_COST_AMT B
    ,	LEA_ACCL_COND_ITM C
WHERE   A.ACCT_CD          			= B.ACCT_CD
AND     A.ACCL_AUTO_CD     			= B.ACCL_AUTO_CD

#if (${f_acct_type_a} == '1' || ${f_acct_type_m} == '1' || ${f_acct_type_t} == '1') 
	AND    (             		
#end

#if (${f_acct_type_a} == '1' && ${f_acct_type_m} != '1' && ${f_acct_type_t} != '1')
	A.ACCL_AUTO_CD     = 'A'  
#elseif ( ${f_acct_type_a} != '1' && ${f_acct_type_m} == '1' && ${f_acct_type_t} != '1')
    A.ACCL_AUTO_CD     = 'M' 
#elseif ( ${f_acct_type_a} != '1' && ${f_acct_type_m} != '1' && ${f_acct_type_t} == '1')
    A.ACCL_AUTO_CD     = 'T'  
#elseif ( ${f_acct_type_a} == '1' && ${f_acct_type_m} == '1' && ${f_acct_type_t} != '1')  		
	A.ACCL_AUTO_CD     = 'A'  OR A.ACCL_AUTO_CD     = 'M' 
#elseif ( ${f_acct_type_a} == '1' && ${f_acct_type_m} != '1' && ${f_acct_type_t} == '1')  		
	A.ACCL_AUTO_CD     = 'A'  OR A.ACCL_AUTO_CD     = 'T' 
#elseif ( ${f_acct_type_a} != '1' && ${f_acct_type_m} == '1' && ${f_acct_type_t} == '1')  		
	A.ACCL_AUTO_CD     = 'M'  OR A.ACCL_AUTO_CD     = 'T'   
#elseif ( ${f_acct_type_a} == '1' && ${f_acct_type_m} == '1' && ${f_acct_type_t} == '1')  		
	A.ACCL_AUTO_CD    IN ( 'A','M','T')     		
#end

#if (${f_acct_type_a} == '1' || ${f_acct_type_m} == '1' || ${f_acct_type_t} == '1') 
	)            		
#end

#if (${f_acct_type_a} != '1' && ${f_acct_type_m} != '1' && ${f_acct_type_t} != '1') 
	AND    A.ACCL_AUTO_CD NOT IN ( 'A','M','T')        		
#end


AND     B.EXE_YRMON     = C.EXE_YRMON(+)
AND     B.EXE_YRMON     = REPLACE(@[frm_exe_yrmon],'-')
AND     B.REV_YRMON     >= REPLACE(@[frm_rev_yrmon_from],'-')
AND     B.REV_YRMON     <= REPLACE(@[frm_rev_yrmon_to],'-')
ORDER BY 	B.EXE_YRMON
		,	B.REV_YRMON
		,	A.ACCL_AUTO_CD
		,	A.ACCT_CD
		,	A.ACCT_CD_NM			]]></sql>
			<params>
				<param name="frm_exe_yrmon" type="12" value="200901" out="N"/>
				<param name="frm_rev_yrmon_from" type="12" value="200901" out="N"/>
				<param name="frm_rev_yrmon_to" type="12" value="200901" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
