<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ProductCatalogCreateDBDAOGetCargoReturnTimeRSQL">
			<desc><![CDATA[Rail Export Cargo Available Return Time 개발]]></desc>
			<sql><![CDATA[
SELECT TO_CHAR((CASE
         WHEN FULL_RTN_YD_CD IS NOT NULL AND HUB_NOD_CD IS NOT NULL AND FULL_RTN_YD_CD = HUB_NOD_CD THEN
          NVL(PRD_GET_INLND_CCT_FNC(PCTL_NO), TRUNC(POL_ETA - (SUM_HRS - LAST_DWELL + START_DWELL) / 24))
         WHEN FULL_RTN_YD_CD IS NOT NULL AND HUB_NOD_CD IS NOT NULL AND FULL_RTN_YD_CD <> HUB_NOD_CD THEN
          NVL(PRD_GET_INLND_CCT_FNC(PCTL_NO) - ((TT + 6) / 24), (TRUNC(POL_ETA - (SUM_HRS - LAST_DWELL + START_DWELL) / 24)))
       END), 'YYYYMMDD') CUT_OFF
      
       ----Rail Receiving to date 
       ----- full retrun cy 와 같은 경우 : Inland cct date
       ----- full return cy 와 다른 경우 : full return cy dwell ( 6시간) + full return에서 rail ramp 까지 transit time
 --     , (CASE
 --        WHEN FULL_RTN_YD_CD IS NOT NULL AND HUB_NOD_CD IS NOT NULL AND FULL_RTN_YD_CD = HUB_NOD_CD THEN
 --         NVL(PRD_GET_INLND_CCT_FNC(PCTL_NO), TRUNC(POL_ETA - (SUM_HRS - LAST_DWELL + START_DWELL) / 24))
 --        WHEN FULL_RTN_YD_CD IS NOT NULL AND HUB_NOD_CD IS NOT NULL AND FULL_RTN_YD_CD <> HUB_NOD_CD THEN
 --         NVL(PRD_GET_INLND_CCT_FNC(PCTL_NO)- ((TT + 6) / 24), (TRUNC(POL_ETA - (SUM_HRS - LAST_DWELL + START_DWELL) / 24)) )
 --      END) - NVL('', 3) RTN_TIME
----Rail receiving from date 
----- Rail Receiving to date - dem free date ( 없으면 default 3일)
  FROM (
        
        SELECT M.PCTL_NO
               ,M.POL_CD
               ,IM.FULL_RTN_YD_CD
               ,IM.HUB_NOD_CD
               ,NVL((SELECT 'Y' FROM PRD_PROD_CTL_QTY Q WHERE Q.PCTL_NO = M.PCTL_NO AND Q.CNTR_TPSZ_CD LIKE 'R%' AND ROWNUM = 1) ,'N') RF_FLG
               ,(SELECT MIN(TRUNC(VPS_ETA_DT)) - 1 --ETA 날짜는 제외하고, 그 전날을 기준으로 산출
                   FROM PRD_PROD_CTL_ROUT_DTL E, VSK_VSL_PORT_SKD V
                  WHERE E.PCTL_NO = M.PCTL_NO
                    AND E.ORG_NOD_CD LIKE M.POL_CD || '%'
                    AND E.NOD_LNK_DIV_CD = 'L'
                    AND E.TRSP_MOD_CD = 'VD' -- 미주는 Feeder 없음
                    AND E.VSL_CD = V.VSL_CD
                    AND E.SKD_VOY_NO = V.SKD_VOY_NO
                    AND E.SKD_DIR_CD = V.SKD_DIR_CD
                    AND E.ORG_NOD_CD = V.YD_CD
                    AND NVL(V.PORT_SKD_STS_CD, 'X') <> 'S') POL_ETA
               ,MAX((CASE
                      WHEN D.PCTL_SEQ = (SELECT MIN(PCTL_SEQ)
                                           FROM PRD_PROD_CTL_ROUT_DTL D2
                                          WHERE D2.PCTL_IO_BND_CD = 'O'
                                            AND D2.TRSP_MOD_CD = 'RD'
                                            AND D2.PCTL_NO = M.PCTL_NO) THEN
                       (SELECT DECODE(NVL(M.PRM_CUST_FLG, 'N')
                                     ,'Y'
                                     ,DECODE((SELECT 'Y'
                                               FROM PRD_PROD_CTL_QTY Q
                                              WHERE Q.PCTL_NO = M.PCTL_NO
                                                AND Q.CNTR_TPSZ_CD LIKE 'R%'
                                                AND ROWNUM = 1)
                                            ,'Y'
                                            ,NVL(RF_MIN_DWLL_HRS, 24)
                                            ,NVL(DRY_MIN_DWLL_HRS, 24))
                                     ,DECODE((SELECT 'Y'
                                               FROM PRD_PROD_CTL_QTY Q
                                              WHERE Q.PCTL_NO = M.PCTL_NO
                                                AND Q.CNTR_TPSZ_CD LIKE 'R%'
                                                AND ROWNUM = 1)
                                            ,'Y'
                                            ,NVL(RF_AVG_DWLL_HRS, 24)
                                            ,NVL(DRY_AVG_DWLL_HRS, 24)))
                          FROM MDM_YARD
                         WHERE YD_CD = D.ORG_NOD_CD)
                      ELSE
                       0
                    END)) * 0.5 START_DWELL
               , --RD 시작 Node의 D.well Time의 1/2
                --//       포함 되어 있는 Rail Ramp Dwell Range 만큼 조기 반입 결과 초래 ,Inland Rail Ramp Dwell 의 1/2 값 반영
                MAX((CASE
                      WHEN D.PCTL_SEQ = (SELECT max(PCTL_SEQ)
                                           FROM PRD_PROD_CTL_ROUT_DTL D2
                                          WHERE D2.PCTL_IO_BND_CD = 'O'
                                            AND D2.NOD_LNK_DIV_CD = 'L'
                                            AND D2.PCTL_NO = M.PCTL_NO) AND D.TRSP_MOD_CD = 'TD' THEN
                       (SELECT DECODE(NVL(M.PRM_CUST_FLG, 'N')
                                     ,'Y'
                                     ,DECODE((SELECT 'Y'
                                               FROM PRD_PROD_CTL_QTY Q
                                              WHERE Q.PCTL_NO = M.PCTL_NO
                                                AND Q.CNTR_TPSZ_CD LIKE 'R%'
                                                AND ROWNUM = 1)
                                            ,'Y'
                                            ,NVL(RF_MIN_DWLL_HRS, 24)
                                            ,NVL(DRY_MIN_DWLL_HRS, 24))
                                     ,DECODE((SELECT 'Y'
                                               FROM PRD_PROD_CTL_QTY Q
                                              WHERE Q.PCTL_NO = M.PCTL_NO
                                                AND Q.CNTR_TPSZ_CD LIKE 'R%'
                                                AND ROWNUM = 1)
                                            ,'Y'
                                            ,NVL(RF_AVG_DWLL_HRS, 24)
                                            ,NVL(DRY_AVG_DWLL_HRS, 24)))
                          FROM MDM_YARD
                         WHERE YD_CD = D.ORG_NOD_CD)
                      ELSE
                       0
                    END)) LAST_DWELL
               , --마지막 구간이 TD이면, 그 구간 시작 Node의 D.well Time : 마지막 구간이 TD일때만 적용
                SUM((CASE
                      WHEN D.NOD_LNK_DIV_CD = 'N' THEN
                       (SELECT DECODE(NVL(M.PRM_CUST_FLG, 'N')
                                     ,'Y'
                                     ,DECODE((SELECT 'Y'
                                               FROM PRD_PROD_CTL_QTY Q
                                              WHERE Q.PCTL_NO = M.PCTL_NO
                                                AND Q.CNTR_TPSZ_CD LIKE 'R%'
                                                AND ROWNUM = 1)
                                            ,'Y'
                                            ,NVL(RF_MIN_DWLL_HRS, 24)
                                            ,NVL(DRY_MIN_DWLL_HRS, 24))
                                     ,DECODE((SELECT 'Y'
                                               FROM PRD_PROD_CTL_QTY Q
                                              WHERE Q.PCTL_NO = M.PCTL_NO
                                                AND Q.CNTR_TPSZ_CD LIKE 'R%'
                                                AND ROWNUM = 1)
                                            ,'Y'
                                            ,NVL(RF_AVG_DWLL_HRS, 24)
                                            ,NVL(DRY_AVG_DWLL_HRS, 24)))
                          FROM MDM_YARD
                         WHERE YD_CD = D.ORG_NOD_CD)
                      ELSE
                       TZ_DWLL_TM_HRS
                    END)) SUM_HRS
               , --RD 시작 Node의 ~ Hub Node까지의 T.Time + Hub Node의 D.well Time + Hub Node ~ POL 까지의 T.Time
                MAX((SELECT L.TZTM_HRS
                      FROM PRD_INLND_EACH_LNK L
                     WHERE L.LNK_ORG_NOD_CD = IM.FULL_RTN_YD_CD
                       AND L.LNK_DEST_NOD_CD = IM.HUB_NOD_CD
                       AND L.TRSP_MOD_CD = 'TD'
                       AND IM.ROUT_ORG_NOD_CD = D.ROUT_ORG_NOD_CD
                       AND IM.ROUT_DEST_NOD_CD = D.ROUT_DEST_NOD_CD
                       AND IM.ROUT_SEQ = D.ROUT_SEQ)) TT
          FROM PRD_PROD_CTL_ROUT_DTL D, PRD_PROD_CTL_MST M, PRD_INLND_ROUT_MST IM
         WHERE M.PCTL_NO = @[pctl_no]
           AND M.PCTL_NO = D.PCTL_NO
           AND IM.ROUT_ORG_NOD_CD = D.ROUT_ORG_NOD_CD
           AND IM.ROUT_DEST_NOD_CD = D.ROUT_DEST_NOD_CD
           AND IM.ROUT_SEQ = D.ROUT_SEQ
           AND D.PCTL_IO_BND_CD = 'O'
           AND (M.POL_CD LIKE 'US%' OR M.POL_CD LIKE 'CA%')
           AND D.PCTL_SEQ BETWEEN (SELECT MIN(PCTL_SEQ) FROM PRD_PROD_CTL_ROUT_DTL D2 WHERE D2.PCTL_IO_BND_CD = 'O' AND D2.TRSP_MOD_CD = 'RD' AND D2.PCTL_NO = M.PCTL_NO)
           AND (SELECT MAX(PCTL_SEQ) FROM PRD_PROD_CTL_ROUT_DTL D2 WHERE D2.PCTL_IO_BND_CD = 'O' AND D2.NOD_LNK_DIV_CD = 'L' AND D2.PCTL_NO = M.PCTL_NO)
         GROUP BY M.PCTL_NO, M.POL_CD, IM.FULL_RTN_YD_CD, IM.HUB_NOD_CD        
        )			]]></sql>
			<params>
				<param name="pctl_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
