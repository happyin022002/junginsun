<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ProductCatalogCreateDBDAOCreateBkgSplitMapCntrCSQL">
			<desc><![CDATA[Container 번호가 있는 SPLIT의 경우 처리 (다른 BKG이 Container를 가져갔을 경우 C로 생성한다.)
2011.04.04 mgpark 한 세션중에 bkg_no가 2회 이상 호출되는 경우, 데이터가 다중 생성되는 것을 방지하기 위한 로직 추가]]></desc>
			<sql><![CDATA[
MERGE INTO PRD_BKG_COP_MAP T
USING (
    SELECT DECODE(COP_OP_TP_CD, 'X', ROWID, NULL) ROW_ID
         , CASE WHEN COP_OP_TP_CD = 'X' THEN PCTL_NO
                ELSE NVL((SELECT PCTL_NO FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no]) , PCTL_NO)
           END AS PCTL_NO  -- KEY
         , @[bkg_no] BKG_NO   -- KEY
         , CASE WHEN COP_OP_TP_CD = 'X' THEN COP_NO
                ELSE SCE_NEW_COP_NO_FNC (@[bkg_ofc])
           END AS COP_NO   -- KEY
         , @[mapg_seq] COP_MAPG_SEQ -- KEY
         , CRNT_FLG
         , CNTR_NO
         , CNTR_TPSZ_CD
         , DECODE(COP_OP_TP_CD, 'X', DECODE(BKG_NO, @[bkg_no], 'N', 'B'), 'C') COP_OP_TP_CD -- N변경없음, B BKG_NO변경, C 신규
         , BKG_OP_RMK
         , OB_ITCHG_CTNT
         , IB_ITCHG_CTNT
         , OCN_ITCHG_CTNT
         , MTY_PKUP_YD_CD
         , MTY_RTN_YD_CD
         , POR_NOD_CD
         , POL_NOD_CD
         , BKG_RCV_TERM_CD
         , BKG_DE_TERM_CD
         , DECODE(COP_OP_TP_CD, 'X', OB_TRO_FLG, 'N') OB_TRO_FLG -- 신규는 초기화
         , DECODE(COP_OP_TP_CD, 'X', IB_TRO_FLG, 'N') IB_TRO_FLG -- 신규는 초기화
         , COP_PATT_ORD_NO
         , DECODE(COP_OP_TP_CD, 'X', COP_SO_KNT, 0) COP_SO_KNT -- 신규는 초기화
         , CRE_USR_ID
         , CRE_DT
         , UPD_USR_ID
         , UPD_DT
    FROM PRD_BKG_COP_MAP
    WHERE BKG_NO IN 
           ( SELECT COLUMN_VALUE AS BKG_NO 
               FROM TABLE(SELECT BKG_SPLIT_FNC(@[bkg_no_list], ',') BKG_NO_TBL_STR FROM DUAL ))
    AND CRNT_FLG = 'Y'
    AND COP_OP_TP_CD in ('X', 'N', 'B')
    AND INSTR(@[cntr_lst], CNTR_NO) > 0
    AND 0 = (SELECT COUNT(1) -- 2011.04.04 mgpark 한 세션중에 bkg_no가 2회 이상 호출되는 경우, 데이터가 다중 생성되는 것을 방지하기 위한 로직
               FROM PRD_BKG_COP_MAP
              WHERE CRNT_FLG = 'Y'
                AND COP_OP_TP_CD in ('N', 'B')
                AND BKG_NO = @[bkg_no]
                AND CNTR_NO <> 'COMU0000000'
                AND ROWNUM = 1
             )
) S
ON ( T.ROWID  = S.ROW_ID )
WHEN MATCHED THEN
UPDATE SET
        T.BKG_NO = S.BKG_NO
      , T.COP_OP_TP_CD = S.COP_OP_TP_CD
      , T.COP_MAPG_SEQ = S.COP_MAPG_SEQ
      , T.UPD_USR_ID   = 'SYSTEM1_U'
      , T.UPD_DT       = SYSDATE
WHEN NOT MATCHED THEN
INSERT (PCTL_NO, BKG_NO, COP_NO, COP_MAPG_SEQ
      , CRNT_FLG, CNTR_NO, CNTR_TPSZ_CD, COP_OP_TP_CD, BKG_OP_RMK, OB_ITCHG_CTNT
      , IB_ITCHG_CTNT, OCN_ITCHG_CTNT, MTY_PKUP_YD_CD, MTY_RTN_YD_CD, POR_NOD_CD
      , POL_NOD_CD, BKG_RCV_TERM_CD, BKG_DE_TERM_CD, OB_TRO_FLG, IB_TRO_FLG
      , COP_PATT_ORD_NO, COP_SO_KNT, CRE_USR_ID, CRE_DT, UPD_USR_ID
      , UPD_DT
 )
VALUES ( S.PCTL_NO, S.BKG_NO, S.COP_NO, S.COP_MAPG_SEQ
      , S.CRNT_FLG , S.CNTR_NO, S.CNTR_TPSZ_CD, S.COP_OP_TP_CD, S.BKG_OP_RMK, S.OB_ITCHG_CTNT
      , S.IB_ITCHG_CTNT, S.OCN_ITCHG_CTNT, S.MTY_PKUP_YD_CD, S.MTY_RTN_YD_CD, S.POR_NOD_CD
      , S.POL_NOD_CD, S.BKG_RCV_TERM_CD, S.BKG_DE_TERM_CD, S.OB_TRO_FLG, S.IB_TRO_FLG
      , S.COP_PATT_ORD_NO, S.COP_SO_KNT, S.CRE_USR_ID, S.CRE_DT, 'SYSTEM1_C'
      , SYSDATE 
)			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="bkg_ofc" type="12" value="" out="N"/>
				<param name="mapg_seq" type="12" value="" out="N"/>
				<param name="bkg_no_list" type="12" value="" out="N"/>
				<param name="cntr_lst" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
