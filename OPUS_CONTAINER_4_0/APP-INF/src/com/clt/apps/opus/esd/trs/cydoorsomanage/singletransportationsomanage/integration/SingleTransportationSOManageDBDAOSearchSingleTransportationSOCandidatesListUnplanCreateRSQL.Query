<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SingleTransportationSOManageDBDAOSearchSingleTransportationSOCandidatesListUnplanCreateRSQL">
			<desc><![CDATA[Unplaned S/O Candidate 선정]]></desc>
			<sql><![CDATA[
SELECT 
     CTRL_OFC_CD, COP_NO, EQ_NO, EQ_TPSZ_CD, COST_ACT_GRP_SEQ, COST_ACT_GRP_CD, VNDR_SEQ, TRSP_CRR_MOD_CD
   , FM_NOD_CD, FM_NOD_YARD, TO_NOD_CD, TO_NOD_YARD, VIA_NOD_CD, VIA_NOD_YARD, DOR_NOD_CD, DOR_NOD_YARD
   , TRSP_BND_CD, RAIL_CMB_THRU_TP_CD, CUST_CNT_CD, CUST_SEQ, SC_NO, RFA_NO, TRSP_SO_STS_CD, MST_LCL_CD
   , FM_LOC_CONTI_CD, BKG_NO, BKG_RCVDE_TERM_CD, BL_NO, BKG_CGO_TP_CD, CGO_TP_CD
   , TRUNKVVD, SLAN_CD, POR_CD, POL_CD, POD_CD, DEL_CD, CMDT_CD, TRSP_COST_DTL_MOD_CD
   , UPLN_SO_FLG, TRSP_SO_STS_NM, TRO_SEQ, TRO_SUB_SEQ
   , TO_CHAR(NVL((SELECT  DECODE(AA.TRSP_COST_DTL_MOD_CD, 'CY', DECODE(NVL(ACT_STS_MAPG_CD,'XX'), 'OP', ACT_DT, ESTM_DT), ESTM_DT)
                FROM   SCE_COP_DTL
                WHERE  COP_NO = AA.COP_NO
                AND    ACT_CD LIKE '_'||NVL(AA.TRSP_BND_CD, 'T')||SUBSTR(SUBSTR(AA.COST_ACT_GRP_CD,3), 1, 1)||'_D_'
                AND    NOD_CD = AA.N1ST_NOD_CD
                AND    ROWNUM = 1), AA.N1ST_NOD_PLN_DT), 'YYYYMMDDHH24MISS') N1ST_NOD_PLN_DT
   , DOR_ARR_DT
 FROM ( 
   SELECT   
   NVL(@[ctrl_ofc_cd], B.CTRL_OFC_CD) CTRL_OFC_CD
 , A.COP_NO                    
 , NVL(A.CNTR_NO, ' ') EQ_NO 
 , A.CNTR_TPSZ_CD  AS EQ_TPSZ_CD            
 , B.COST_ACT_GRP_SEQ          
 , B.COST_ACT_GRP_CD 
 , B.N1ST_VNDR_SEQ AS VNDR_SEQ            
 , 'TD' TRSP_CRR_MOD_CD
 , B.N1ST_NOD_CD
 , SUBSTR(B.N1ST_NOD_CD,1,5)  FM_NOD_CD 
 , SUBSTR(B.N1ST_NOD_CD,6)    FM_NOD_YARD 
 , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') TO_NOD_CD    
 , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') TO_NOD_YARD  
 , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('VIA', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') VIA_NOD_CD   
 , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('VIA', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') VIA_NOD_YARD 
 , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') DOR_NOD_CD   
 , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') DOR_NOD_YARD 
 , B.PCTL_IO_BND_CD AS TRSP_BND_CD             
 , B.INLND_ROUT_INV_BIL_PATT_CD  AS RAIL_CMB_THRU_TP_CD
 , '' CUST_CNT_CD
 , 0 CUST_SEQ
 , C.SC_NO                       
 , C.RFA_NO                      
 , B.TRSP_SO_STS_CD 
 , DECODE(A.MST_COP_NO, A.COP_NO, 'P', 'X')   MST_LCL_CD
 , @[ui_conti_cd] AS FM_LOC_CONTI_CD        
 , A.BKG_NO                      
 , B.N1ST_NOD_PLN_DT
 , DECODE(B.PCTL_IO_BND_CD, 'I',C.DE_TERM_CD, 'O',C.RCV_TERM_CD, '')   BKG_RCVDE_TERM_CD 
 , C.BL_NO 
 , C.BKG_CGO_TP_CD     
 , 'F' CGO_TP_CD     
 , (C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD) TRUNKVVD 
 , C.SLAN_CD           
 , C.POR_CD POR_CD     
 , C.POL_CD POL_CD     
 , C.POD_CD POD_CD     
 , C.DEL_CD DEL_CD     
 , C.CMDT_CD           
 , B.DOR_ARR_DT        
#if (${cydoor_div} == 'DR')
 , DECODE(B.PCTL_COST_MOD_CD,'C','DR','Z','DR','DR') TRSP_COST_DTL_MOD_CD 
#else
 , DECODE(B.PCTL_COST_MOD_CD,'C','CY','Z','DR','') TRSP_COST_DTL_MOD_CD 
#end
 , DECODE(B.PCTL_COST_MOD_CD, '', 'Y', '') UPLN_SO_FLG 
 , COMMCODE_PKG.GET_COMDTL_NAME_FNC('CD00286',B.TRSP_SO_STS_CD)            TRSP_SO_STS_NM
#if (${cydoor_div} == 'DR')
 , SUBSTR(TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(A.COP_NO, B.PCTL_IO_BND_CD, @[ui_conti_cd]), 1, INSTR(TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(A.COP_NO, B.PCTL_IO_BND_CD, @[ui_conti_cd]), '$', 1, 1) - 1) AS TRO_SEQ
 , SUBSTR(TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(A.COP_NO, B.PCTL_IO_BND_CD, @[ui_conti_cd]), INSTR(TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(A.COP_NO, B.PCTL_IO_BND_CD, @[ui_conti_cd]), '$', 1, 1) + 1) AS TRO_SUB_SEQ  
#else
 , '' TRO_SEQ
 , '' TRO_SUB_SEQ
#end  
 FROM SCE_COP_HDR A 
, PRD_PROD_CTL_ACT_GRP_DTL B 
, BKG_BOOKING C 
 WHERE A.PCTL_NO=B.PCTL_NO
 AND A.BKG_NO = C.BKG_NO
 AND B.PCTL_COST_MOD_CD = 'X' 
#if (${cydoor_div} != 'DR')
AND A.CNTR_NO <> 'COMU0000000' 
#end
 AND B.COST_ACT_GRP_TP_CD  = 'N'
-- From Node의 Location으로 조회
#if (${frmnode} != '')
    AND SUBSTR(B.N1ST_NOD_CD,1,5) = @[frmnode]
#end

-- From Node의 Yard로 조회 
#if (${frmnodeyard} != '')
    AND SUBSTR(B.N1ST_NOD_CD,6) = @[frmnodeyard]
#end

-- Multi From Node로 조회
#if ($arr_fmnode.size() > 0) 
    AND B.N1ST_NOD_CD in (
    #foreach( ${key} in ${arr_fmnode}) 
	    #if($velocityCount < $arr_fmnode.size()) 
	        '$key', 
	    #else 
            '$key' 
	    #end 
    #end
    )
#end

-- Port로 조회 
#if (${portio} == 'I')
    AND C.POD_CD = @[portcd]
#elseif (${portio} == 'O')
    AND C.POL_CD = @[portcd]
#end

-- Booking no로 조회
#if ($arr_bkgno.size() > 0) 
    AND A.BKG_NO in (
    #foreach( ${key} in ${arr_bkgno}) 
	    #if($velocityCount < $arr_bkgno.size()) 
	        '$key', 
	    #else 
            '$key' 
	    #end 
    #end
    )
#end

-- BL NO로 조회
#if ($arr_billno.size() > 0) 
    AND C.BL_NO in (
    #foreach( ${key} in ${arr_billno}) 
      #if($velocityCount < $arr_billno.size()) 
        '$key', 
      #else 
        '$key' 
      #end 
    #end
    )
#end

-- Container no로 조회
#if ($arr_cntrno.size() > 0) 
    AND A.CNTR_NO in (
    #foreach( ${key} in ${arr_cntrno}) 
      #if($velocityCount < $arr_cntrno.size()) 
        '$key', 
      #else 
        '$key' 
      #end 
    #end
  )
#end

-- Trunk VVD로 조회 
#if ($arr_trunkvvd.size() > 0) 
    AND (C.VSL_CD,C.SKD_VOY_NO,C.SKD_DIR_CD) in (
    #foreach( ${key} in ${arr_trunkvvd}) 
      #if($velocityCount < $arr_trunkvvd.size()) 
        (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1)),
      #else 
        (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1))
      #end 
    #end
	)
#end
	AND C.VSL_CD <> 'COXX'

-- Contract No로 조회 
#if (${contract_no} != '' )
    #if (${contract_tp_cd} == 'S' )
        AND C.SC_NO IN (@[contract_no])
    #else
        AND C.RFA_NO IN (@[contract_no])
    #end
#end

 ) AA WHERE 1=1
#if (${cydoor_div} == 'DR')
   	  AND ( (FM_LOC_CONTI_CD = 'M' AND TRSP_BND_CD = 'O' AND TRO_SEQ IS NOT NULL) 
         OR (FM_LOC_CONTI_CD = 'M' AND TRSP_BND_CD = 'I' AND EQ_NO <> 'COMU0000000')
		 OR (FM_LOC_CONTI_CD = 'E' AND TRO_SEQ IS NOT NULL) 
		 OR (FM_LOC_CONTI_CD = 'A')
	  )
#else
   	  AND ( (FM_LOC_CONTI_CD = 'M' AND TRSP_BND_CD = 'O' AND TRO_SEQ IS NULL)
         OR (FM_LOC_CONTI_CD = 'M' AND TRSP_BND_CD = 'I' AND EQ_NO <> 'COMU0000000')
		 OR (FM_LOC_CONTI_CD = 'E' AND TRO_SEQ IS NULL) 
		 OR (FM_LOC_CONTI_CD = 'A')
	  )
#end

#if($arr_ecc_cd.size() > 0)
      AND CASE
            WHEN AA.TRSP_BND_CD = 'I'
            THEN (
                  SELECT ECC_CD
                    FROM MDM_EQ_ORZ_CHT
                   WHERE SCC_CD = (SELECT SCC_CD
                                     FROM MDM_LOCATION
                                    WHERE LOC_CD = AA.TO_NOD_CD)
                     AND ROWNUM = 1
                 )
            ELSE (
                  SELECT ECC_CD
                    FROM MDM_EQ_ORZ_CHT
                   WHERE SCC_CD = (SELECT SCC_CD
                                     FROM MDM_LOCATION
                                    WHERE LOC_CD = AA.FM_NOD_CD)
                     AND ROWNUM = 1
                 )
          END IN (
          #foreach($code IN ${arr_ecc_cd})
              #if($velocityCount == 1)
                   '$code'
              #else
                  ,'$code'
              #end
          #end
      )
#end

#if($eq_tpsz_cd.size() > 0)
AND AA.EQ_TPSZ_CD IN (
    #foreach($code IN ${eq_tpsz_cd})
        #if($velocityCount == 1)
             '$code'
        #else
            ,'$code'
        #end
    #end
)
#end			]]></sql>
			<params>
				<param name="ctrl_ofc_cd" type="12" value="" out="N"/>
				<param name="ui_conti_cd" type="12" value="" out="N"/>
				<param name="frmnode" type="12" value="" out="N"/>
				<param name="frmnodeyard" type="12" value="" out="N"/>
				<param name="portcd" type="12" value="" out="N"/>
				<param name="contract_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
