<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AgreementCorrectionDBDAOSearchCorrScgAgmtRSQL">
			<desc><![CDATA[Agreement Surcharge Rate정보 조회]]></desc>
			<sql><![CDATA[
#if (${grid_flg} != 'Y')
SELECT 'Surcharge'
     , 'Cost Mode'
     , 'Trans Mode'
     , 'Bound'
     , 'Cargo Type'
     , 'Cargo Nature'
     , 'Customer Code'
     , 'Commodity GroupCode'
     , 'RailService Type'
     , 'From'
     , 'To'
     , 'AllRoute'
     , 'Loc'
     , 'Node'
     , 'Loc'
     , 'Node'
     , 'Loc'
     , 'Node'
     , 'Loc'
     , 'Node'
     , 'Fixed Ratio Div'
     , 'Currency'
     , 'One Way'
     , 'Round Trip'
     , 'ALAL'
#if (${fm_eq_knd_cd} == 'U')
     , 'DAL'
     , 'RAL'
     , 'AAL'
     , 'FAL'
     , 'TAL'
     , 'SAL'
     , 'OAL'
     , 'PAL'
#end
#if (${fm_eq_knd_cd} == 'Z')
     , 'SFAL'
     , 'SLAL'
     , 'TAAL'
     , 'GNAL'
     , 'EGAL'
#end
#if (${fm_eq_knd_cd} != 'G')
     , 'AL2'
     , 'AL4'
     , 'AL5'
#end
#if (${fm_eq_knd_cd} == 'U')
     , 'AL7'
     , 'AL9'
     , 'D2'
     , 'D4'
     , 'D5'
     , 'D7'
     , 'R2'
     , 'R4'
     , 'R5'
     , 'R7'
     , 'A2'
     , 'A4'
     , 'F2'
     , 'F4'
     , 'F5'
     , 'T2'
     , 'T4'
     , 'S2'
     , 'S4'
     , 'O2'
     , 'O4'
     , 'P2'
     , 'P4'
#end
#if (${fm_eq_knd_cd} == 'Z')
     , 'AL8'
     , 'SF2'
     , 'SF4'
     , 'SL2'
     , 'TA2'
     , 'GN4'
     , 'GN5'
     , 'EG5'
     , 'EG8'
     , 'ZT4'
     , 'CB4'
#end
#if (${fm_eq_knd_cd} == 'G')
     , 'CG'
     , 'UG'
#end
     , 'Weight Tier'
     , 'UOM'
     , 'COA'
     , 'UDU'
     , 'UDU2'
  FROM DUAL
 UNION ALL
#end
SELECT TRSP_SCG_CD
     , COM_SCG_APLY_FLG
     , WO_APLY_FLG
     , TRSP_COST_MOD_CD
     , AGMT_TRSP_TP_CD
     , TRSP_BND_CD
     , CGO_TP_CD
     , SPCL_CGO_CNTR_TP_CD
     , CUST_CD
     , CMDT_GRP_CD
     , RAIL_SVC_TP_CD
     , EFF_FM_DT
     , EFF_TO_DT
     , AGMT_ROUT_ALL_FLG
     , FM_NOD_CD
     , FM_NOD_YD
     , VIA_NOD_CD
     , VIA_NOD_YD
     , DOR_NOD_CD
     , DOR_NOD_YD
     , TO_NOD_CD
     , TO_NOD_YD
     , AGMT_SCG_RT_DIV_CD
     , CURR_CD
     , TO_CHAR(TRSP_ONE_WY_RT) AS TRSP_ONE_WY_RT
     , TO_CHAR(TRSP_RND_RT) AS TRSP_RND_RT
     , EQ_ALAL
#if (${fm_eq_knd_cd} == 'U')
     , EQ_DAL
     , EQ_RAL
     , EQ_AAL
     , EQ_FAL
     , EQ_TAL
     , EQ_SAL
     , EQ_OAL
     , EQ_PAL
#end
#if (${fm_eq_knd_cd} == 'Z')
     , EQ_SFAL
     , EQ_SLAL
     , EQ_TAAL
     , EQ_GNAL
     , EQ_EGAL
#end
#if (${fm_eq_knd_cd} != 'G')
     , EQ_AL2
     , EQ_AL4
     , EQ_AL5
#end
#if (${fm_eq_knd_cd} == 'U')
     , EQ_AL7
     , EQ_AL9
     , EQ_D2
     , EQ_D4
     , EQ_D5
     , EQ_D7
     , EQ_R2
     , EQ_R4
     , EQ_R5
     , EQ_R7
     , EQ_A2
     , EQ_A4
     , EQ_F2
     , EQ_F4
     , EQ_F5
     , EQ_T2
     , EQ_T4
     , EQ_S2
     , EQ_S4
     , EQ_O2
     , EQ_O4
     , EQ_P2
     , EQ_P4
#end
#if (${fm_eq_knd_cd} == 'Z')
     , EQ_AL8
     , EQ_SF2
     , EQ_SF4
     , EQ_SL2
     , EQ_TA2
     , EQ_GN4
     , EQ_GN5
     , EQ_EG5
     , EQ_EG8
     , EQ_ZT4
     , EQ_CB4
#end
#if (${fm_eq_knd_cd} == 'G')
     , EQ_CG
     , EQ_UG
#end
     , TO_WGT
     , WGT_MEAS_UT_CD
     , AGMT_COST_FLG
     , USR_DEF_RMK
     , USR_DEF_RMK AS AFT_USR_DEF_RMK
#if (${grid_flg} == 'Y')
     , CK_VF
     , NUM
     , TRSP_AGMT_RT_TP_CD
     , EQ_D3
     , EQ_D8
     , EQ_D9
     , EQ_DW
     , EQ_DX
     , ALL_TP_CD
     , TRSP_AGMT_OFC_CTY_CD
     , TRSP_AGMT_SEQ
     , TRSP_AGMT_RT_TP_SER_NO
     , TRSP_AGMT_SCG_NOD_SEQ
     , TRSP_AGMT_SCG_RT_SEQ
#end

     , EQ_ALAL_RT_SEQ
#if (${fm_eq_knd_cd} == 'U')
     , EQ_DAL_RT_SEQ
     , EQ_RAL_RT_SEQ
     , EQ_AAL_RT_SEQ
     , EQ_FAL_RT_SEQ
     , EQ_TAL_RT_SEQ
     , EQ_SAL_RT_SEQ
     , EQ_OAL_RT_SEQ
     , EQ_PAL_RT_SEQ
#end
#if (${fm_eq_knd_cd} == 'Z')
     , EQ_SFAL_RT_SEQ
     , EQ_SLAL_RT_SEQ
     , EQ_TAAL_RT_SEQ
     , EQ_GNAL_RT_SEQ
     , EQ_EGAL_RT_SEQ
#end
#if (${fm_eq_knd_cd} != 'G')
     , EQ_AL2_RT_SEQ
     , EQ_AL4_RT_SEQ
     , EQ_AL5_RT_SEQ
#end
#if (${fm_eq_knd_cd} == 'U')
     , EQ_AL7_RT_SEQ
     , EQ_AL9_RT_SEQ
     , EQ_D2_RT_SEQ
     , EQ_D4_RT_SEQ
     , EQ_D5_RT_SEQ
     , EQ_D7_RT_SEQ
     , EQ_R2_RT_SEQ
     , EQ_R4_RT_SEQ
     , EQ_R5_RT_SEQ
     , EQ_R7_RT_SEQ
     , EQ_A2_RT_SEQ
     , EQ_A4_RT_SEQ
     , EQ_F2_RT_SEQ
     , EQ_F4_RT_SEQ
     , EQ_F5_RT_SEQ
     , EQ_T2_RT_SEQ
     , EQ_T4_RT_SEQ
     , EQ_S2_RT_SEQ
     , EQ_S4_RT_SEQ
     , EQ_O2_RT_SEQ
     , EQ_O4_RT_SEQ
     , EQ_P2_RT_SEQ
     , EQ_P4_RT_SEQ
#end
#if (${fm_eq_knd_cd} == 'Z')
     , EQ_AL8_RT_SEQ
     , EQ_SF2_RT_SEQ
     , EQ_SF4_RT_SEQ
     , EQ_SL2_RT_SEQ
     , EQ_TA2_RT_SEQ
     , EQ_GN4_RT_SEQ
     , EQ_GN5_RT_SEQ
     , EQ_EG5_RT_SEQ
     , EQ_EG8_RT_SEQ
     , EQ_ZT4_RT_SEQ
     , EQ_CB4_RT_SEQ
#end
#if (${fm_eq_knd_cd} == 'G')
     , EQ_CG_RT_SEQ
     , EQ_UG_RT_SEQ
#end
#if (${grid_flg} == 'Y')
     , EQ_D3_RT_SEQ
     , EQ_D8_RT_SEQ
     , EQ_D9_RT_SEQ
     , EQ_DW_RT_SEQ
     , EQ_DX_RT_SEQ
#end
     , EQ_XXXX_RT_SEQ
  FROM (
        SELECT ROWNUM NUM, X.*
          FROM (
                SELECT C.TRSP_AGMT_RT_TP_CD,
                       C.TRSP_COST_MOD_CD,
                       C.AGMT_TRSP_TP_CD,
                       DECODE(C.TRSP_BND_CD, '0', NULL, C.TRSP_BND_CD) AS TRSP_BND_CD,
                       DECODE(C.CGO_TP_CD, '0', NULL, C.CGO_TP_CD) CGO_TP_CD,
                       DECODE(C.SPCL_CGO_CNTR_TP_CD, '00', NULL, C.SPCL_CGO_CNTR_TP_CD) AS SPCL_CGO_CNTR_TP_CD,
                       DECODE(C.CUST_CNT_CD || C.CUST_SEQ,
                              'XX0',
                              NULL,
                              C.CUST_CNT_CD || C.CUST_SEQ) CUST_CD,
                       DECODE(C.CMDT_GRP_CD, 'XXXX', NULL, C.CMDT_GRP_CD) CMDT_GRP_CD,
                       DECODE(C.RAIL_SVC_TP_CD, '00', NULL, C.RAIL_SVC_TP_CD) RAIL_SVC_TP_CD,
                       D.TRSP_SCG_CD,
                       E.COM_SCG_APLY_FLG,
                       E.WO_APLY_FLG,
                       D.AGMT_ROUT_ALL_FLG,
                       DECODE(SUBSTR(D.FM_NOD_CD, 1, 5),
                              '00000',
                              NULL,
                              SUBSTR(D.FM_NOD_CD, 1, 5)) AS FM_NOD_CD,
                       DECODE(SUBSTR(D.FM_NOD_CD, 6), '00', NULL, SUBSTR(D.FM_NOD_CD, 6)) AS FM_NOD_YD,
                       DECODE(SUBSTR(D.VIA_NOD_CD, 1, 5),
                              '00000',
                              NULL,
                              SUBSTR(D.VIA_NOD_CD, 1, 5)) AS VIA_NOD_CD,
                       DECODE(SUBSTR(D.VIA_NOD_CD, 6), '00', NULL, SUBSTR(D.VIA_NOD_CD, 6)) AS VIA_NOD_YD,
                       DECODE(SUBSTR(D.DOR_NOD_CD, 1, 5),
                              '00000',
                              NULL,
                              SUBSTR(D.DOR_NOD_CD, 1, 5)) AS DOR_NOD_CD,
                       DECODE(SUBSTR(D.DOR_NOD_CD, 6), '00', NULL, SUBSTR(D.DOR_NOD_CD, 6)) AS DOR_NOD_YD,
                       DECODE(SUBSTR(D.TO_NOD_CD, 1, 5),
                              '00000',
                              NULL,
                              SUBSTR(D.TO_NOD_CD, 1, 5)) AS TO_NOD_CD,
                       DECODE(SUBSTR(D.TO_NOD_CD, 6), '00', NULL, SUBSTR(D.TO_NOD_CD, 6)) AS TO_NOD_YD,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D2', 'Y')) EQ_D2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D3', 'Y')) EQ_D3,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D4', 'Y')) EQ_D4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D5', 'Y')) EQ_D5,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D7', 'Y')) EQ_D7,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D8', 'Y')) EQ_D8,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D9', 'Y')) EQ_D9,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'DW', 'Y')) EQ_DW,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'DX', 'Y')) EQ_DX,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R2', 'Y')) EQ_R2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R4', 'Y')) EQ_R4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R5', 'Y')) EQ_R5,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R7', 'Y')) EQ_R7,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'A2', 'Y')) EQ_A2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'A4', 'Y')) EQ_A4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'F2', 'Y')) EQ_F2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'F4', 'Y')) EQ_F4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'F5', 'Y')) EQ_F5,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'T2', 'Y')) EQ_T2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'T4', 'Y')) EQ_T4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'S2', 'Y')) EQ_S2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'S4', 'Y')) EQ_S4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'O2', 'Y')) EQ_O2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'O4', 'Y')) EQ_O4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'P2', 'Y')) EQ_P2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'P4', 'Y')) EQ_P4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SF2', 'Y')) EQ_SF2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SF4', 'Y')) EQ_SF4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SL2', 'Y')) EQ_SL2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'TA2', 'Y')) EQ_TA2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'GN4', 'Y')) EQ_GN4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'GN5', 'Y')) EQ_GN5,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'EG5', 'Y')) EQ_EG5,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'EG8', 'Y')) EQ_EG8,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'ZT4', 'Y')) EQ_ZT4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'CB4', 'Y')) EQ_CB4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'CG', 'Y')) EQ_CG,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'UG', 'Y')) EQ_UG,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'ALAL', 'Y')) EQ_ALAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'DAL', 'Y')) EQ_DAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'RAL', 'Y')) EQ_RAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AAL', 'Y')) EQ_AAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'FAL', 'Y')) EQ_FAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'TAL', 'Y')) EQ_TAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SAL', 'Y')) EQ_SAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'OAL', 'Y')) EQ_OAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'PAL', 'Y')) EQ_PAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL2', 'Y')) EQ_AL2,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL4', 'Y')) EQ_AL4,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL5', 'Y')) EQ_AL5,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL7', 'Y')) EQ_AL7,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL8', 'Y')) EQ_AL8,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL9', 'Y')) EQ_AL9,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SFAL', 'Y')) EQ_SFAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SLAL', 'Y')) EQ_SLAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'TAAL', 'Y')) EQ_TAAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'GNAL', 'Y')) EQ_GNAL,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'EGAL', 'Y')) EQ_EGAL,
					   ----------------------------------------------------------
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_D2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D3', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_D3_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_D4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D5', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_D5_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D7', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_D7_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D8', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_D8_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D9', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_D9_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'DW', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_DW_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'DX', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_DX_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_R2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_R4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R5', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_R5_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R7', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_R7_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'A2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_A2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'A4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_A4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'F2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_F2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'F4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_F4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'F5', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_F5_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'T2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_T2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'T4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_T4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'S2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_S2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'S4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_S4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'O2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_O2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'O4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_O4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'P2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_P2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'P4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_P4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SF2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_SF2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SF4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_SF4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SL2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_SL2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'TA2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_TA2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'GN4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_GN4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'GN5', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_GN5_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'EG5', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_EG5_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'EG8', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_EG8_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'ZT4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_ZT4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'CB4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_CB4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'CG', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_CG_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'UG', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_UG_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'ALAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_ALAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'DAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_DAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'RAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_RAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_AAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'FAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_FAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'TAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_TAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_SAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'OAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_OAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'PAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_PAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL2', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_AL2_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL4', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_AL4_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL5', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_AL5_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL7', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_AL7_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL8', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_AL8_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL9', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_AL9_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SFAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_SFAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SLAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_SLAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'TAAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_TAAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'GNAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_GNAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'EGAL', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_EGAL_RT_SEQ,
                       MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'XXXX', E.TRSP_AGMT_SCG_RT_SEQ)) EQ_XXXX_RT_SEQ,
                       ----------------------------------------------------------
                       DECODE(E.CURR_CD, 'XXX', NULL, E.CURR_CD) CURR_CD,
                       E.TRSP_ONE_WY_RT,
                       E.TRSP_RND_RT,
                       DECODE(E.TO_WGT, '0', NULL, E.TO_WGT) TO_WGT,
                       DECODE(E.WGT_MEAS_UT_CD, 'XXX', NULL, E.WGT_MEAS_UT_CD) WGT_MEAS_UT_CD,
                       TO_CHAR(E.EFF_FM_DT, 'YYYYMMDD') AS EFF_FM_DT,
                       TO_CHAR(E.EFF_TO_DT, 'YYYYMMDD') AS EFF_TO_DT,
                       '0' AS CK_VF,
                       CASE
                         WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD, 1, 2) = 'AL' THEN
                          1
                         WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD, 2, 2) = 'AL' THEN
                          1
                         WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD, 3, 2) = 'AL' THEN
                          1
                         ELSE
                          0
                       END ALL_TP_CD,
                       E.AGMT_SCG_RT_DIV_CD,
                       E.TRSP_AGMT_OFC_CTY_CD,
                       E.TRSP_AGMT_SEQ,
                       E.TRSP_AGMT_RT_TP_SER_NO,
                       E.TRSP_AGMT_SCG_NOD_SEQ,
                       MAX(E.TRSP_AGMT_SCG_RT_SEQ) AS TRSP_AGMT_SCG_RT_SEQ,
                       MAX(E.TRSP_AGMT_SCG_RT_SEQ) AS TRSP_AGMT_RT_SEQ,
                       E.USR_DEF_RMK,
                       E.AGMT_COST_FLG AS AGMT_COST_FLG
                  FROM TRS_AGMT_HDR     A,
                       TRS_AGMT_RT_TP   C,
                       TRS_AGMT_SCG_NOD D,
                       TRS_AGMT_SCG_RT  E,
                       (SELECT INTG_CD_VAL_CTNT,
                               INTG_CD_VAL_DP_SEQ
                          FROM COM_INTG_CD_DTL
                         WHERE INTG_CD_ID = 'CD30002') F -- 2015.01.26    Hyungwook Choi
                 WHERE A.TRSP_AGMT_OFC_CTY_CD   = C.TRSP_AGMT_OFC_CTY_CD
                   AND A.TRSP_AGMT_SEQ          = C.TRSP_AGMT_SEQ
                   AND C.TRSP_AGMT_OFC_CTY_CD   = D.TRSP_AGMT_OFC_CTY_CD
                   AND C.TRSP_AGMT_SEQ          = D.TRSP_AGMT_SEQ
                   AND C.TRSP_AGMT_RT_TP_SER_NO = D.TRSP_AGMT_RT_TP_SER_NO
                   AND D.TRSP_AGMT_OFC_CTY_CD   = E.TRSP_AGMT_OFC_CTY_CD
                   AND D.TRSP_AGMT_SEQ          = E.TRSP_AGMT_SEQ
                   AND D.TRSP_AGMT_RT_TP_SER_NO = E.TRSP_AGMT_RT_TP_SER_NO
                   AND D.TRSP_AGMT_SCG_NOD_SEQ  = E.TRSP_AGMT_SCG_NOD_SEQ
                   AND D.TRSP_SCG_CD            = F.INTG_CD_VAL_CTNT(+)
                   AND A.TRSP_AGMT_OFC_CTY_CD   = SUBSTR(@[fm_agmtno], 1, 3)
                   AND A.TRSP_AGMT_SEQ          = SUBSTR(@[fm_agmtno], 4)
#if (${fm_trsp_agmt_rt_tp_ser_no} != '' )
                   AND C.TRSP_AGMT_RT_TP_SER_NO = @[fm_trsp_agmt_rt_tp_ser_no]
#end
#if (${fm_effective_agmt} != 'A' )
                   AND (SELECT TO_CHAR(GLOBALDATE_PKG.TIME_LOCAL_OFC_FNC(A.CTRT_OFC_CD),'YYYYMMDD') FROM DUAL) BETWEEN TO_CHAR(E.EFF_FM_DT,'YYYYMMDD') AND TO_CHAR(E.EFF_TO_DT,'YYYYMMDD')
#end
#if (${fm_eq_knd_cd} != '' )
                   AND E.EQ_KND_CD = @[fm_eq_knd_cd]
#end
                 GROUP BY F.INTG_CD_VAL_CTNT,
                          F.INTG_CD_VAL_DP_SEQ,
                          C.TRSP_AGMT_RT_TP_CD,
                          C.TRSP_COST_MOD_CD,
                          C.AGMT_TRSP_TP_CD,
                          C.TRSP_BND_CD,
                          C.CGO_TP_CD,
                          C.SPCL_CGO_CNTR_TP_CD,
                          E.COM_SCG_APLY_FLG,
                          E.WO_APLY_FLG,
                          C.CUST_NOMI_TRKR_FLG,
                          C.CUST_CNT_CD || C.CUST_SEQ,
                          C.CMDT_GRP_CD,
                          C.RAIL_SVC_TP_CD,
                          D.TRSP_SCG_CD,
                          D.AGMT_ROUT_ALL_FLG,
                          SUBSTR(D.FM_NOD_CD, 1, 5),
                          SUBSTR(D.FM_NOD_CD, 6),
                          SUBSTR(D.VIA_NOD_CD, 1, 5),
                          SUBSTR(D.VIA_NOD_CD, 6),
                          SUBSTR(D.DOR_NOD_CD, 1, 5),
                          SUBSTR(D.DOR_NOD_CD, 6),
                          SUBSTR(D.TO_NOD_CD, 1, 5),
                          SUBSTR(D.TO_NOD_CD, 6),
                          D.TRSP_AGMT_OFC_CTY_CD,
                          D.TRSP_AGMT_SEQ,
                          D.TRSP_AGMT_RT_TP_SER_NO,
                          D.TRSP_AGMT_SCG_NOD_SEQ,
                          E.CURR_CD,
                          E.TRSP_ONE_WY_RT,
                          E.TRSP_RND_RT,
                          E.TO_WGT,
                          E.WGT_MEAS_UT_CD,
                          TO_CHAR(E.EFF_FM_DT, 'YYYYMMDD'),
                          TO_CHAR(E.EFF_TO_DT, 'YYYYMMDD'),
                          CASE
                            WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD, 1, 2) = 'AL' THEN
                             1
                            WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD, 2, 2) = 'AL' THEN
                             1
                            WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD, 3, 2) = 'AL' THEN
                             1
                            ELSE
                             0
                          END,
                          AGMT_SCG_RT_DIV_CD,
                          E.TRSP_AGMT_OFC_CTY_CD,
                          E.TRSP_AGMT_SEQ,
                          E.TRSP_AGMT_RT_TP_SER_NO,
                          E.TRSP_AGMT_SCG_NOD_SEQ,
                          E.USR_DEF_RMK,
                          E.AGMT_COST_FLG
                 ORDER BY D.TRSP_AGMT_OFC_CTY_CD,
                          D.TRSP_AGMT_SEQ,
                          F.INTG_CD_VAL_DP_SEQ,
                          C.CGO_TP_CD,
                          C.CUST_NOMI_TRKR_FLG,
                          C.CUST_CNT_CD || CUST_SEQ,
                          C.TRSP_COST_MOD_CD,
                          C.AGMT_TRSP_TP_CD,
                          C.CMDT_GRP_CD,
                          C.RAIL_SVC_TP_CD,
                          SUBSTR(D.FM_NOD_CD, 1, 5),
                          SUBSTR(D.FM_NOD_CD, 6),
                          SUBSTR(D.VIA_NOD_CD, 1, 5),
                          SUBSTR(D.VIA_NOD_CD, 6),
                          SUBSTR(D.DOR_NOD_CD, 1, 5),
                          SUBSTR(D.DOR_NOD_CD, 6),
                          SUBSTR(D.TO_NOD_CD, 1, 5),
                          SUBSTR(D.TO_NOD_CD, 6),
                          E.CURR_CD,
                          E.TRSP_ONE_WY_RT,
                          E.TRSP_RND_RT,
                          E.TO_WGT,
                          E.WGT_MEAS_UT_CD,
                          TO_CHAR(E.EFF_FM_DT, 'YYYYMMDD'),
                          TO_CHAR(E.EFF_TO_DT, 'YYYYMMDD'),
                          CASE
                            WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD, 1, 2) = 'AL' THEN
                             1
                            WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD, 2, 2) = 'AL' THEN
                             1
                            WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD, 3, 2) = 'AL' THEN
                             1
                            ELSE
                             0
                          END
               ) X
       ) XX
#if (${grid_flg} == 'Y')
 WHERE NUM BETWEEN 1 + ((@[cur_page_cnt]-1)*@[page_size]) AND (@[cur_page_cnt]*@[page_size])
#end			]]></sql>
			<params>
				<param name="fm_agmtno" type="12" value="" out="N"/>
				<param name="fm_trsp_agmt_rt_tp_ser_no" type="12" value="" out="N"/>
				<param name="fm_eq_knd_cd" type="12" value="" out="N"/>
				<param name="cur_page_cnt" type="12" value="" out="N"/>
				<param name="page_size" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
