<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RailSoManageDBDAOSearch09RailSoManageRSQL">
			<desc><![CDATA[US Rail Empty SO 대상 상세조회 SQL]]></desc>
			<sql><![CDATA[
#set(${refId}=${refId})
#set(${eqTpSzCd}=${eqTpSzCd})


#foreach(${key} IN ${arrNo})
#if($velocityCount == 1)	

SELECT
    X.REPO_PLN_ID, 
    X.PLN_YRWK, 
    X.REF_ID, 
    X.REF_SEQ, 
    X.REPO_PURP_RMK, 
    X.VSL_LANE_CD SLAN_CD, 
	DECODE(X.SO_IF_DIV_CD, 'O', 'CN', 'F', 'CF', 'ER') TRSP_MTY_COST_MOD_CD, 
	'M' CGO_TP_CD, 
	DECODE(X.SO_IF_DIV_CD, 'O', 'On-Hire', 'F', 'Off-Hire', 'Empty Repo') TRSP_COST_DTL_MOD_NAME, 
	X.CNTR_NO EQ_NO, 
	X.CNTR_TPSZ_CD EQ_TPSZ_CD, 
	SUBSTR(X.FM_YD_CD, 1, 5) FM_NOD_CD, 
	SUBSTR(X.FM_YD_CD, 6) FM_NOD_YARD, 
	SUBSTR(X.TO_YD_CD, 1, 5) TO_NOD_CD, 
	SUBSTR(X.TO_YD_CD, 6) TO_NOD_YARD, 
	(CTMM.CTRT_OFC_CTY_CD||CTMM.CTRT_SEQ) LESSOR, 
	Y.LSTM_CD, 
	Y.IMDT_EXT_FLG, 
	Y.OWNR_CO_CD OWNR_CO_CD, 
	Y.CNTR_USE_CO_CD EQ_USED, 
	Y.CNMV_STS_CD MOVEMENT_STS, 
	Y.CRNT_YD_CD CREATION_YARD, 
	TO_CHAR(Y.CNMV_DT, 'YYYYMMDD') EVENT_DATE, 
	X.SO_RQST_DT TRSP_MTY_RQST_DT, 
	X.VSL_CD, 
	X.SKD_VOY_NO, 
	X.SKD_DIR_CD, 
	'' INTER_RMK, 
	'' SPCL_INSTR_RMK, 
	'' TRSP_SO_OFC_CTY_CD, 
	'' CRE_USR_ID, 
	'' UPD_USR_ID, 
	Z.RAIL_CMB_THRU_TP_CD, 
	Z.ROUT_ORG_NOD_CD, 
	Z.ROUT_DEST_NOD_CD, 
	Z.ROUT_SEQ, Z.ROUT_PLN_CD, 
	Z.INLND_ROUT_RMK, 
	NVL(Z.ROUT_DTL_SEQ, 0) ROUT_DTL_SEQ,
    SUBSTR(Z.REF_NO, 1, LENGTH(Z.REF_NO)-2) REF_NO,
   (SELECT CASE WHEN MIN(ORD.CRE_DT) + 15 >= SYSDATE THEN  'Y' END
	  FROM TRS_TRSP_RAIL_BIL_ORD ORD
	 WHERE ((ORD.EQ_NO = X.CNTR_NO AND ORD.CGO_TP_CD = 'F' AND ORD.TRSP_BND_CD = 'O') OR (ORD.EQ_NO = X.CNTR_NO AND ORD.CGO_TP_CD = 'M'))
		 AND NVL(ORD.DELT_FLG, 'N') = 'N'
		) OLD_DATA
FROM 
    EQR_REPO_EXE_SO_IF X, 
    MST_CONTAINER Y, 
    CTM_MOVEMENT CTMM,
    ( 
    	SELECT 
    		A.REPO_PLN_ID, 
    		A.PLN_YRWK, 
    		A.REF_ID, 
    		A.REF_SEQ, 
    		A.REPO_PURP_RMK, 
    		A.VSL_LANE_CD SLAN_CD, 
    		A.SO_IF_DIV_CD TRSP_MTY_COST_MOD_CD, 
    		DECODE(A.SO_IF_DIV_CD, 'O', 'On-Hire', 'F', 'Off-Hire', 'Empty Repo') TRSP_COST_DTL_MOD_NAME, 
    		A.CNTR_NO EQ_NO, 
    		A.CNTR_TPSZ_CD EQ_TPSZ_CD, 
    		SUBSTR(A.FM_YD_CD, 1, 5) FM_NOD_CD, 
    		SUBSTR(A.FM_YD_CD, 6) FM_NOD_YARD, 
    		SUBSTR(A.TO_YD_CD, 1, 5) TO_NOD_CD, 
    		SUBSTR(A.TO_YD_CD, 6) TO_NOD_YARD, 
    		(CTM.CTRT_OFC_CTY_CD||CTM.CTRT_SEQ) LESSOR, 
    		B.LSTM_CD, 
    		B.IMDT_EXT_FLG, 
    		B.OWNR_CO_CD OWNR_CO_CD, 
    		B.CNTR_USE_CO_CD EQ_USED, 
    		B.CNMV_STS_CD MOVEMENT_STS, 
    		B.CRNT_YD_CD CREATION_YARD, 
    		TO_CHAR(B.CNMV_DT, 'YYYYMMDD') EVENT_DATE, 
    		A.SO_RQST_DT TRSP_MTY_RQST_DT, 
    		A.VSL_CD, 
    		A.SKD_VOY_NO, 
    		A.SKD_DIR_CD, 
    		MST.INLND_ROUT_INV_BIL_PATT_CD RAIL_CMB_THRU_TP_CD, 
    		MST.ROUT_ORG_NOD_CD, 
    		MST.ROUT_DEST_NOD_CD, 
    		MST.ROUT_SEQ, 
    		MST.ROUT_PLN_CD, 
    		MST.INLND_ROUT_RMK, 
    		DECODE(COUNT(DTL.ROUT_DTL_SEQ), 
    		SUBSTR(MST.INLND_ROUT_INV_BIL_PATT_CD, 2, 1), 
    		SUBSTR(MST.INLND_ROUT_INV_BIL_PATT_CD, 2, 1), '0') ROUT_DTL_SEQ,
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 1, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 2, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 3, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 4, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 5, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 6, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 7, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 8, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) REF_NO
    	FROM 
    	   EQR_REPO_EXE_SO_IF A, 
    	   MST_CONTAINER B, 
    	   PRD_INLND_ROUT_MST MST, 
    	   PRD_INLND_ROUT_DTL DTL,
    	   CTM_MOVEMENT CTM,
        	(
        		SELECT 
        			C.ROUT_ORG_NOD_CD, 
        			C.ROUT_DEST_NOD_CD, 
        			C.ROUT_SEQ, 
        			C.PRIO_SEQ 
        		FROM 
            		( 
            			SELECT 
            				MIN(A.PRIO_SEQ) OVER (PARTITION BY A.ROUT_ORG_NOD_CD, A.ROUT_DEST_NOD_CD) MIN_CNT, 
            				A.ROUT_ORG_NOD_CD, 
            				A.ROUT_DEST_NOD_CD, 
            				A.ROUT_SEQ, A.PRIO_SEQ 
            			FROM
            			     PRD_INLND_ROUT_MST A, 
                			( 
                				SELECT 
                					CNT, 
                					ROUT_ORG_NOD_CD, 
                					ROUT_DEST_NOD_CD, 
                					ROUT_SEQ, TRSP_MOD_CD 
                				FROM 
                    				( 
                    					SELECT 
                    						COUNT(ROUT_SEQ) OVER (PARTITION BY ROUT_ORG_NOD_CD,  ROUT_DEST_NOD_CD, ROUT_SEQ) CNT, 
                    						ROUT_ORG_NOD_CD, 
                    						ROUT_DEST_NOD_CD,
                    						ROUT_SEQ, TRSP_MOD_CD 
                    					FROM 
                    					   PRD_INLND_ROUT_DTL DTL 
                    					WHERE EXISTS 
                    					       (SELECT 'X' FROM EQR_REPO_EXE_SO_IF A 
                            					WHERE A.FM_YD_CD = DTL.ROUT_ORG_NOD_CD 
                            					AND   A.TO_YD_CD = DTL.ROUT_DEST_NOD_CD 
                            					AND   A.TRSP_SO_STS_CD = 'P' 
                            					AND   A.EQ_CTRL_OFC_CD = @[sctrlOfcCd]
                            					AND   A.REF_ID = ${refId.get($key)}
                            					AND   A.CNTR_TPSZ_CD = ${eqTpSzCd.get($key)}
                            					AND   A.TRSP_MOD_CD = 'R' 
                            					) 
                    					AND   TRSP_MOD_CD = 'RD' 
                    					GROUP BY 
                    					   ROUT_ORG_NOD_CD, 
                    					   ROUT_DEST_NOD_CD, 
                    					   ROUT_SEQ, TRSP_MOD_CD 
                    				) 
                				WHERE CNT = 1 
                				AND   TRSP_MOD_CD='RD' 
                			) B 
            			WHERE A.ROUT_ORG_NOD_CD = B.ROUT_ORG_NOD_CD 
            			AND   A.ROUT_DEST_NOD_CD= B.ROUT_DEST_NOD_CD 
            			AND   A.ROUT_SEQ        = B.ROUT_SEQ 
            			AND   NVL(A.DELT_FLG,'N') <> 'Y' 			  
            			AND   A.PCTL_IO_BND_CD  = 'M' 
            		) C 
        		WHERE C.MIN_CNT = C.PRIO_SEQ 
        	) CHK_MST,
           MDM_LOCATION LOC,
           TRS_AGMT_HDR AGMT
    	WHERE A.CNTR_NO = B.CNTR_NO(+) 
    	AND   MST.ROUT_ORG_NOD_CD = CHK_MST.ROUT_ORG_NOD_CD 
    	AND   MST.ROUT_DEST_NOD_CD = CHK_MST.ROUT_DEST_NOD_CD 
    	AND   MST.ROUT_SEQ = CHK_MST.ROUT_SEQ 
    	AND   B.CNTR_NO = CTM.CNTR_NO(+) 
    	AND   B.CNMV_YR = CTM.CNMV_YR(+) 
    	AND   B.CNMV_ID_NO = CTM.CNMV_ID_NO(+) 
    	AND   NVL(MST.DELT_FLG,'N') <> 'Y' 			  
    	AND   DTL.TRSP_MOD_CD='RD' 
    	AND   A.WO_EXE_FLG = 'N' 
    	AND   A.WO_RQST_FLG = 'Y' 
    	AND   A.TRSP_SO_STS_CD = 'P' 
    	AND   A.EQ_CTRL_OFC_CD = @[sctrlOfcCd]
    	AND   A.REF_ID = ${refId.get($key)}
    	AND   A.FM_YD_CD = DTL.ROUT_ORG_NOD_CD 
    	AND   A.TO_YD_CD = DTL.ROUT_DEST_NOD_CD 
    	AND   A.CNTR_TPSZ_CD = ${eqTpSzCd.get($key)}
    	AND   A.CO_CD = 'H' 
    	AND   MST.ROUT_ORG_NOD_CD = DTL.ROUT_ORG_NOD_CD(+) 
    	AND   MST.ROUT_DEST_NOD_CD = DTL.ROUT_DEST_NOD_CD(+) 
    	AND   MST.ROUT_SEQ = DTL.ROUT_SEQ(+) 
    	AND   MST.PCTL_IO_BND_CD  = 'M' 
        AND   SUBSTR(A.FM_YD_CD, 1, 5) = LOC.LOC_CD
		AND   DTL.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD(+)
		AND   DTL.TRSP_AGMT_SEQ =AGMT.TRSP_AGMT_SEQ(+)
        AND   EXISTS (SELECT 1 FROM MDM_COUNTRY CNTY WHERE CNTY.CNT_CD IN('US', 'CA') AND LOC.CONTI_CD = 'M' AND A.TRSP_MOD_CD = 'R' AND LOC.CNT_CD = CNTY.CNT_CD)
    	GROUP BY 
    	   A.REPO_PLN_ID, 
    	   A.PLN_YRWK, 
    	   A.REF_ID, 
    	   A.REF_SEQ, 
    	   A.REPO_PURP_RMK, 
    	   A.VSL_LANE_CD, 
    	   A.SO_IF_DIV_CD, 
    	   A.CNTR_NO, 
    	   A.CNTR_TPSZ_CD, 
    	   A.FM_YD_CD, 
    	   A.TO_YD_CD, 
    	   CTM.CTRT_OFC_CTY_CD, 
    	   CTM.CTRT_SEQ, 
    	   B.LSTM_CD, 
    	   B.IMDT_EXT_FLG, 
    	   B.OWNR_CO_CD, 
    	   B.CNTR_USE_CO_CD, 
    	   B.CNMV_STS_CD, 
    	   B.CRNT_YD_CD, 
    	   B.CNMV_DT, 
    	   A.SO_RQST_DT, 
    	   A.VSL_CD, 
    	   A.SKD_VOY_NO, 
    	   A.SKD_DIR_CD, 
    	   MST.INLND_ROUT_INV_BIL_PATT_CD, 
    	   MST.ROUT_ORG_NOD_CD, 
    	   MST.ROUT_DEST_NOD_CD, 
    	   MST.ROUT_SEQ, 
    	   MST.ROUT_PLN_CD, 
    	   MST.INLND_ROUT_RMK 
    ) Z 
WHERE X.WO_EXE_FLG = 'N' 
AND   X.WO_RQST_FLG = 'Y' 
AND   X.TRSP_SO_STS_CD = 'P' 
AND   X.CO_CD = 'H' 
AND   X.EQ_CTRL_OFC_CD = @[sctrlOfcCd]
AND   X.REF_ID = ${refId.get($key)}
AND   X.CNTR_TPSZ_CD = ${eqTpSzCd.get($key)}
AND   X.CNTR_NO = Y.CNTR_NO(+) 
AND   X.REPO_PLN_ID = Z.REPO_PLN_ID(+) 
AND   X.PLN_YRWK = Z.PLN_YRWK(+) 
AND   X.REF_ID = Z.REF_ID(+) 
AND   X.REF_SEQ = Z.REF_SEQ(+)
AND   Y.CNTR_NO = CTMM.CNTR_NO(+) 
AND   Y.CNMV_YR = CTMM.CNMV_YR(+) 
AND   Y.CNMV_ID_NO = CTMM.CNMV_ID_NO(+) 

#else	

UNION ALL
SELECT
    X.REPO_PLN_ID, 
    X.PLN_YRWK, 
    X.REF_ID, 
    X.REF_SEQ, 
    X.REPO_PURP_RMK, 
    X.VSL_LANE_CD SLAN_CD, 
	X.SO_IF_DIV_CD TRSP_MTY_COST_MOD_CD, 
	'M' CGO_TP_CD, 
	DECODE(X.SO_IF_DIV_CD, 'O', 'On-Hire', 'F', 'Off-Hire', 'Empty Repo') TRSP_COST_DTL_MOD_NAME, 
	X.CNTR_NO EQ_NO, 
	X.CNTR_TPSZ_CD EQ_TPSZ_CD, 
	SUBSTR(X.FM_YD_CD, 1, 5) FM_NOD_CD, 
	SUBSTR(X.FM_YD_CD, 6) FM_NOD_YARD, 
	SUBSTR(X.TO_YD_CD, 1, 5) TO_NOD_CD, 
	SUBSTR(X.TO_YD_CD, 6) TO_NOD_YARD, 
	(CTMM.CTRT_OFC_CTY_CD||CTMM.CTRT_SEQ) LESSOR, 
	Y.LSTM_CD, 
	Y.IMDT_EXT_FLG, 
	Y.OWNR_CO_CD OWNR_CO_CD, 
	Y.CNTR_USE_CO_CD EQ_USED, 
	Y.CNMV_STS_CD MOVEMENT_STS, 
	Y.CRNT_YD_CD CREATION_YARD, 
	TO_CHAR(Y.CNMV_DT, 'YYYYMMDD') EVENT_DATE, 
	X.SO_RQST_DT TRSP_MTY_RQST_DT, 
	X.VSL_CD, 
	X.SKD_VOY_NO, 
	X.SKD_DIR_CD, 
	'' INTER_RMK, 
	'' SPCL_INSTR_RMK, 
	'' TRSP_SO_OFC_CTY_CD, 
	'' CRE_USR_ID, 
	'' UPD_USR_ID, 
	Z.RAIL_CMB_THRU_TP_CD, 
	Z.ROUT_ORG_NOD_CD, 
	Z.ROUT_DEST_NOD_CD, 
	Z.ROUT_SEQ, Z.ROUT_PLN_CD, 
	Z.INLND_ROUT_RMK, 
	NVL(Z.ROUT_DTL_SEQ, 0) ROUT_DTL_SEQ,
    SUBSTR(Z.REF_NO, 1, LENGTH(Z.REF_NO)-2) AGMT_REF_NO,
   (SELECT CASE WHEN MIN(ORD.CRE_DT) + 15 >= SYSDATE THEN  'Y' END
	  FROM TRS_TRSP_RAIL_BIL_ORD ORD
	 WHERE ((ORD.EQ_NO = X.CNTR_NO AND ORD.CGO_TP_CD = 'F' AND ORD.TRSP_BND_CD = 'O') OR (ORD.EQ_NO = X.CNTR_NO AND ORD.CGO_TP_CD = 'M'))
		 AND NVL(ORD.DELT_FLG, 'N') = 'N'
		) OLD_DATA
FROM 
    EQR_REPO_EXE_SO_IF X, 
    MST_CONTAINER Y, 
    CTM_MOVEMENT CTMM,
    ( 
    	SELECT 
    		A.REPO_PLN_ID, 
    		A.PLN_YRWK, 
    		A.REF_ID, 
    		A.REF_SEQ, 
    		A.REPO_PURP_RMK, 
    		A.VSL_LANE_CD SLAN_CD, 
    		A.SO_IF_DIV_CD TRSP_MTY_COST_MOD_CD, 
    		DECODE(A.SO_IF_DIV_CD, 'O', 'On-Hire', 'F', 'Off-Hire', 'Empty Repo') TRSP_COST_DTL_MOD_NAME, 
    		A.CNTR_NO EQ_NO, 
    		A.CNTR_TPSZ_CD EQ_TPSZ_CD, 
    		SUBSTR(A.FM_YD_CD, 1, 5) FM_NOD_CD, 
    		SUBSTR(A.FM_YD_CD, 6) FM_NOD_YARD, 
    		SUBSTR(A.TO_YD_CD, 1, 5) TO_NOD_CD, 
    		SUBSTR(A.TO_YD_CD, 6) TO_NOD_YARD, 
    		(CTM.CTRT_OFC_CTY_CD||CTM.CTRT_SEQ) LESSOR, 
    		B.LSTM_CD, 
    		B.IMDT_EXT_FLG, 
    		B.OWNR_CO_CD OWNR_CO_CD, 
    		B.CNTR_USE_CO_CD EQ_USED, 
    		B.CNMV_STS_CD MOVEMENT_STS, 
    		B.CRNT_YD_CD CREATION_YARD, 
    		TO_CHAR(B.CNMV_DT, 'YYYYMMDD') EVENT_DATE, 
    		A.SO_RQST_DT TRSP_MTY_RQST_DT, 
    		A.VSL_CD, 
    		A.SKD_VOY_NO, 
    		A.SKD_DIR_CD, 
    		MST.INLND_ROUT_INV_BIL_PATT_CD RAIL_CMB_THRU_TP_CD, 
    		MST.ROUT_ORG_NOD_CD, 
    		MST.ROUT_DEST_NOD_CD, 
    		MST.ROUT_SEQ, 
    		MST.ROUT_PLN_CD, 
    		MST.INLND_ROUT_RMK, 
    		DECODE(COUNT(DTL.ROUT_DTL_SEQ), 
    		SUBSTR(MST.INLND_ROUT_INV_BIL_PATT_CD, 2, 1), 
    		SUBSTR(MST.INLND_ROUT_INV_BIL_PATT_CD, 2, 1), '0') ROUT_DTL_SEQ,
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 1, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 2, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 3, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 4, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 5, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 6, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 7, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
            MAX( DECODE( DTL.TRSP_MOD_CD, 'RD', DECODE( DTL.ROUT_DTL_SEQ, 8, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) REF_NO
    	FROM 
    	   EQR_REPO_EXE_SO_IF A, 
    	   MST_CONTAINER B, 
    	   PRD_INLND_ROUT_MST MST, 
    	   PRD_INLND_ROUT_DTL DTL,
    	   CTM_MOVEMENT CTM, 
        	(
        		SELECT 
        			C.ROUT_ORG_NOD_CD, 
        			C.ROUT_DEST_NOD_CD, 
        			C.ROUT_SEQ, 
        			C.PRIO_SEQ 
        		FROM 
            		( 
            			SELECT 
            				MIN(A.PRIO_SEQ) OVER (PARTITION BY A.ROUT_ORG_NOD_CD, A.ROUT_DEST_NOD_CD) MIN_CNT, 
            				A.ROUT_ORG_NOD_CD, 
            				A.ROUT_DEST_NOD_CD, 
            				A.ROUT_SEQ, A.PRIO_SEQ 
            			FROM
            			     PRD_INLND_ROUT_MST A, 
                			( 
                				SELECT 
                					CNT, 
                					ROUT_ORG_NOD_CD, 
                					ROUT_DEST_NOD_CD, 
                					ROUT_SEQ, TRSP_MOD_CD 
                				FROM 
                    				( 
                    					SELECT 
                    						COUNT(ROUT_SEQ) OVER (PARTITION BY ROUT_ORG_NOD_CD,  ROUT_DEST_NOD_CD, ROUT_SEQ) CNT, 
                    						ROUT_ORG_NOD_CD, 
                    						ROUT_DEST_NOD_CD,
                    						ROUT_SEQ, TRSP_MOD_CD 
                    					FROM 
                    					   PRD_INLND_ROUT_DTL DTL 
                    					WHERE EXISTS 
                    					       (SELECT 'X' FROM EQR_REPO_EXE_SO_IF A 
                            					WHERE A.FM_YD_CD = DTL.ROUT_ORG_NOD_CD 
                            					AND   A.TO_YD_CD = DTL.ROUT_DEST_NOD_CD 
                            					AND   A.TRSP_SO_STS_CD = 'P' 
                            					AND   A.EQ_CTRL_OFC_CD = @[sctrlOfcCd]
                            					AND   A.REF_ID = ${refId.get($key)}
                            					AND   A.CNTR_TPSZ_CD = ${eqTpSzCd.get($key)}
                            					AND   A.TRSP_MOD_CD = 'R' 
                            					) 
                    					AND   TRSP_MOD_CD = 'RD' 
                    					GROUP BY 
                    					   ROUT_ORG_NOD_CD, 
                    					   ROUT_DEST_NOD_CD, 
                    					   ROUT_SEQ, TRSP_MOD_CD 
                    				) 
                				WHERE CNT = 1 
                				AND   TRSP_MOD_CD='RD' 
                			) B 
            			WHERE A.ROUT_ORG_NOD_CD = B.ROUT_ORG_NOD_CD 
            			AND   A.ROUT_DEST_NOD_CD= B.ROUT_DEST_NOD_CD 
            			AND   A.ROUT_SEQ        = B.ROUT_SEQ 
            			AND   NVL(A.DELT_FLG,'N') <> 'Y' 			  
            			AND   A.PCTL_IO_BND_CD  = 'M' 
            		) C 
        		WHERE C.MIN_CNT = C.PRIO_SEQ 
        	) CHK_MST,
           MDM_LOCATION LOC,
           TRS_AGMT_HDR AGMT
    	WHERE A.CNTR_NO = B.CNTR_NO(+) 
    	AND   MST.ROUT_ORG_NOD_CD = CHK_MST.ROUT_ORG_NOD_CD 
    	AND   MST.ROUT_DEST_NOD_CD = CHK_MST.ROUT_DEST_NOD_CD 
    	AND   MST.ROUT_SEQ = CHK_MST.ROUT_SEQ 
    	AND   B.CNTR_NO = CTM.CNTR_NO(+) 
    	AND   B.CNMV_YR = CTM.CNMV_YR(+) 
    	AND   B.CNMV_ID_NO = CTM.CNMV_ID_NO(+) 
    	AND   NVL(MST.DELT_FLG,'N') <> 'Y' 			  
    	AND   DTL.TRSP_MOD_CD='RD' 
    	AND   A.WO_EXE_FLG = 'N' 
    	AND   A.WO_RQST_FLG = 'Y' 
    	AND   A.TRSP_SO_STS_CD = 'P' 
    	AND   A.EQ_CTRL_OFC_CD = @[sctrlOfcCd]
    	AND   A.REF_ID = ${refId.get($key)}
    	AND   A.FM_YD_CD = DTL.ROUT_ORG_NOD_CD 
    	AND   A.TO_YD_CD = DTL.ROUT_DEST_NOD_CD 
    	AND   A.CNTR_TPSZ_CD = ${eqTpSzCd.get($key)}
    	AND   A.CO_CD = 'H' 
    	AND   MST.ROUT_ORG_NOD_CD = DTL.ROUT_ORG_NOD_CD(+) 
    	AND   MST.ROUT_DEST_NOD_CD = DTL.ROUT_DEST_NOD_CD(+) 
    	AND   MST.ROUT_SEQ = DTL.ROUT_SEQ(+) 
    	AND   MST.PCTL_IO_BND_CD  = 'M' 
        AND   SUBSTR(A.FM_YD_CD, 1, 5) = LOC.LOC_CD
        AND   DTL.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD(+)
        AND   DTL.TRSP_AGMT_SEQ =AGMT.TRSP_AGMT_SEQ(+)
        AND   EXISTS (SELECT 1 FROM MDM_COUNTRY CNTY WHERE CNTY.CNT_CD IN('US', 'CA') AND LOC.CONTI_CD = 'M' AND A.TRSP_MOD_CD = 'R' AND LOC.CNT_CD = CNTY.CNT_CD)
        GROUP BY 
    	   A.REPO_PLN_ID, 
    	   A.PLN_YRWK, 
    	   A.REF_ID, 
    	   A.REF_SEQ, 
    	   A.REPO_PURP_RMK, 
    	   A.VSL_LANE_CD, 
    	   A.SO_IF_DIV_CD, 
    	   A.CNTR_NO, 
    	   A.CNTR_TPSZ_CD, 
    	   A.FM_YD_CD, 
    	   A.TO_YD_CD, 
    	   CTM.CTRT_OFC_CTY_CD, 
    	   CTM.CTRT_SEQ, 
    	   B.LSTM_CD, 
    	   B.IMDT_EXT_FLG, 
    	   B.OWNR_CO_CD, 
    	   B.CNTR_USE_CO_CD, 
    	   B.CNMV_STS_CD, 
    	   B.CRNT_YD_CD, 
    	   B.CNMV_DT, 
    	   A.SO_RQST_DT, 
    	   A.VSL_CD, 
    	   A.SKD_VOY_NO, 
    	   A.SKD_DIR_CD, 
    	   MST.INLND_ROUT_INV_BIL_PATT_CD, 
    	   MST.ROUT_ORG_NOD_CD, 
    	   MST.ROUT_DEST_NOD_CD, 
    	   MST.ROUT_SEQ, 
    	   MST.ROUT_PLN_CD, 
    	   MST.INLND_ROUT_RMK 
    ) Z 
WHERE X.WO_EXE_FLG = 'N' 
AND   X.WO_RQST_FLG = 'Y' 
AND   X.TRSP_SO_STS_CD = 'P' 
AND   X.CO_CD = 'H' 
AND   X.EQ_CTRL_OFC_CD = @[sctrlOfcCd]
AND   X.REF_ID = ${refId.get($key)}
AND   X.CNTR_TPSZ_CD = ${eqTpSzCd.get($key)}
AND   X.CNTR_NO = Y.CNTR_NO(+) 
AND   X.REPO_PLN_ID = Z.REPO_PLN_ID(+) 
AND   X.PLN_YRWK = Z.PLN_YRWK(+) 
AND   X.REF_ID = Z.REF_ID(+) 
AND   X.REF_SEQ = Z.REF_SEQ(+)
AND   Y.CNTR_NO = CTMM.CNTR_NO(+)
AND   Y.CNMV_YR = CTMM.CNMV_YR(+)
AND   Y.CNMV_ID_NO = CTMM.CNMV_ID_NO(+)

#end 
#end			]]></sql>
			<params>
				<param name="sctrlOfcCd" type="12" value=" " out="N"/>
			</params>
		</query>
	</querys>
</sqls>
