/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : PrdCreateManageDBDAOUpdateActivityGroupIncludePatternUSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.08.31
*@LastModifier : 
*@LastVersion : 1.0
* 2016.08.31 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esd.prd.common.prdcreate.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class PrdCreateManageDBDAOUpdateActivityGroupIncludePatternUSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * updateActivityGroupIncludePattern
	  * </pre>
	  */
	public PrdCreateManageDBDAOUpdateActivityGroupIncludePatternUSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("io_bnd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("hd_pctl_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pattern_str",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ib_tro_flg",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ob_tro_flg",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esd.prd.common.prdcreate.integration").append("\n"); 
		query.append("FileName : PrdCreateManageDBDAOUpdateActivityGroupIncludePatternUSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("MERGE INTO PRD_PROD_CTL_ACT_GRP_DTL T" ).append("\n"); 
		query.append("USING (" ).append("\n"); 
		query.append("	SELECT ZZ.PCTL_NO, ZZ.AG_SEQ, ARR_ST_DT, DOR_ARR_DT,LST_NOD_ARR_DT" ).append("\n"); 
		query.append("	  FROM (" ).append("\n"); 
		query.append("		  SELECT PCTL_NO," ).append("\n"); 
		query.append("			(CASE WHEN BND_RK NOT IN (NVL(GROUP_MIN_DIFF,0),NVL(GROUP_MAX_DIFF,0))  AND NVL(GROUP_MIN_DIFF,0) > 0  THEN DECODE(BND_RK,1,DECODE(PCTL_IO_BND_CD2,'T',400,'I',600,GROUP_MIN_SEQ - ((GROUP_MIN_DIFF -BND_RK) * GROUP_MIN)),GROUP_MIN_SEQ - ((GROUP_MIN_DIFF -BND_RK) * GROUP_MIN))      " ).append("\n"); 
		query.append("				  WHEN BND_RK NOT IN (NVL(GROUP_MIN_DIFF,0),NVL(GROUP_MAX_DIFF,0))  AND GROUP_MAX_DIFF > 0		THEN GROUP_MAX_SEQ + ((BND_RK-GROUP_MAX_DIFF) * 10)" ).append("\n"); 
		query.append("				  WHEN BND_RK = GROUP_MIN_DIFF AND GROUP_MIN_DIFF > 0 											THEN GROUP_MIN_SEQ" ).append("\n"); 
		query.append("				  WHEN BND_RK = GROUP_MAX_DIFF AND GROUP_MAX_DIFF > 0 											THEN GROUP_MAX_SEQ" ).append("\n"); 
		query.append("				  WHEN COST_ACT_GRP_CD = 'COMN' 					  											THEN 990" ).append("\n"); 
		query.append("				  WHEN BND_RK =1 AND GROUP_MIN_DIFF IS NULL AND GROUP_MAX_DIFF IS NULL AND PCTL_IO_BND_CD2 ='T'	THEN 400" ).append("\n"); 
		query.append("				  WHEN BND_RK =1 AND GROUP_MIN_DIFF IS NULL AND GROUP_MAX_DIFF IS NULL AND PCTL_IO_BND_CD2 ='I'	THEN 600" ).append("\n"); 
		query.append("				  ELSE BND_RK * 10  - DECODE(PCTL_IO_BND_CD2,'T',10,'I',10,0) + DECODE(PCTL_IO_BND_CD2,'T',400,'I',600,0)" ).append("\n"); 
		query.append("			END) AG_SEQ," ).append("\n"); 
		query.append("		  COST_ACT_GRP_CD,COST_ACT_GRP_TP_CD," ).append("\n"); 
		query.append("		  decode( PCTL_IO_BND_CD,'C',nvl(ARR_ST_DT,TO_DATE('197708080000', 'YYYYMMDDHH24MI')), ARR_ST_DT) ARR_ST_DT," ).append("\n"); 
		query.append("		  DOR_ARR_DT,LST_NOD_ARR_DT" ).append("\n"); 
		query.append("		  FROM (" ).append("\n"); 
		query.append("			  SELECT" ).append("\n"); 
		query.append("			  PCTL_NO,PCTL_SEQ,BND_RK,PCTL_IO_BND_CD2," ).append("\n"); 
		query.append("			  TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				  DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("				   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL)) XX2," ).append("\n"); 
		query.append("			  FIRST_VALUE(BND_RK*TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				  DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("				   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL))" ).append("\n"); 
		query.append("				  /TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				  DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("				   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL)) IGNORE NULLS )" ).append("\n"); 
		query.append("			OVER (PARTITION BY PCTL_NO, PCTL_IO_BND_CD2 ORDER BY PCTL_SEQ ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)" ).append("\n"); 
		query.append("			  GROUP_MIN_DIFF," ).append("\n"); 
		query.append("			  LAST_VALUE(BND_RK*TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				  DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("				   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL))" ).append("\n"); 
		query.append("				  /TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				  DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("				   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL)) IGNORE NULLS )" ).append("\n"); 
		query.append("			OVER (PARTITION BY PCTL_NO, PCTL_IO_BND_CD2 ORDER BY PCTL_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)" ).append("\n"); 
		query.append("			  GROUP_MAX_DIFF," ).append("\n"); 
		query.append("			  FIRST_VALUE(TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				  DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("				   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL)) IGNORE NULLS)" ).append("\n"); 
		query.append("			OVER (PARTITION BY PCTL_NO, PCTL_IO_BND_CD2 ORDER BY PCTL_SEQ ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)" ).append("\n"); 
		query.append("			  GROUP_MIN_SEQ," ).append("\n"); 
		query.append("			  LAST_VALUE(TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				  DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("				   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL)) IGNORE NULLS)" ).append("\n"); 
		query.append("			OVER (PARTITION BY PCTL_NO, PCTL_IO_BND_CD2 ORDER BY PCTL_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)" ).append("\n"); 
		query.append("			  GROUP_MAX_SEQ," ).append("\n"); 
		query.append("			  (CASE WHEN FIRST_VALUE(TRUNC(DECODE(MOD(TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("					   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL)),100),0,100," ).append("\n"); 
		query.append("				 MOD(TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("					   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL)),100))/DECODE(BND_RK,1,1,BND_RK-1) ) IGNORE NULLS )" ).append("\n"); 
		query.append("				  OVER (PARTITION BY PCTL_NO, PCTL_IO_BND_CD2 ORDER BY PCTL_SEQ ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) > 10" ).append("\n"); 
		query.append("				   THEN 10" ).append("\n"); 
		query.append("				  ELSE FIRST_VALUE(TRUNC((DECODE(MOD(TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("					   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL)),100),0,100," ).append("\n"); 
		query.append("				 MOD(TO_NUMBER(REGEXP_REPLACE(SUBSTR(@[pattern_str]," ).append("\n"); 
		query.append("				DECODE(INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK),0,NULL," ).append("\n"); 
		query.append("					   INSTR(REGEXP_REPLACE(@[pattern_str],'-...-','-XXX-'),REGEXP_REPLACE(SO_PLN_STR,'-...-','-XXX-'),1,SO_PLN_RK)) +13,3),'.-.',NULL)),100))/DECODE(BND_RK,1,1,BND_RK-1))/2 ) IGNORE NULLS )" ).append("\n"); 
		query.append("					 OVER (PARTITION BY PCTL_NO, PCTL_IO_BND_CD2 ORDER BY PCTL_SEQ ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)" ).append("\n"); 
		query.append("			  END) GROUP_MIN," ).append("\n"); 
		query.append("			  COST_ACT_GRP_CD,COST_ACT_GRP_TP_CD," ).append("\n"); 
		query.append("			  VSL_SLAN_CD,CTL_OFFICE,PCTL_COST_MOD_CD,PCTL_IO_BND_CD," ).append("\n"); 
		query.append("			  ORG_NOD_CD,ORG_NOD_TP_CD,ARR_ST_DT,DOR_ARR_DT,LST_NOD_ARR_DT,N2ND_NOD_CD,N3RD_NOD_CD,N4TH_NOD_CD,TRSP_MOD_CD," ).append("\n"); 
		query.append("			  N1ST_LNK_DIST,N1ST_LNK_DIST_UT_CD,N2ND_LNK_DIST,N2ND_LNK_DIST_UT_CD,N3RD_LNK_DIST,N3RD_LNK_DIST_UT_CD," ).append("\n"); 
		query.append("			  N1ST_VNDR_SEQ,N2ND_VNDR_SEQ,N3RD_VNDR_SEQ,INLND_ROUT_INV_BIL_PATT_CD,N1ST_RD_CRR_CD,N2ND_RD_CRR_CD,N3RD_RD_CRR_CD," ).append("\n"); 
		query.append("			  PRE_NOD_CD,PRE_VNDR_SEQ,NXT_NOD_CD,NXT_VNDR_SEQ,TRSP_SO_STS_CD,ROUT_ORG_NOD_CD,ROUT_DEST_NOD_CD,ROUT_SEQ," ).append("\n"); 
		query.append("			  INV_BIL_PATT_DIV_FLG,INLND_ROUT_INCL_STTL_FLG,N1ST_AGMT_SEQ,N2ND_AGMT_SEQ,N3RD_AGMT_SEQ,N1ST_AGMT_REF_NO,N2ND_AGMT_REF_NO,N3RD_AGMT_REF_NO," ).append("\n"); 
		query.append("			  N1ST_TRSP_AGMT_OFC_CTY_CD,N2ND_TRSP_AGMT_OFC_CTY_CD,N3RD_TRSP_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("			  FROM (" ).append("\n"); 
		query.append("			SELECT" ).append("\n"); 
		query.append("			T.PCTL_NO,PCTL_SEQ," ).append("\n"); 
		query.append("			ROW_NUMBER() OVER ( PARTITION BY PCTL_NO, PCTL_IO_BND_CD2 ORDER BY PCTL_SEQ) bnd_rk," ).append("\n"); 
		query.append("			(CASE WHEN COST_ACT_GRP_TP_CD = 'L' AND SUBSTR(COST_ACT_GRP_CD,1,2) = 'OD' THEN" ).append("\n"); 
		query.append("					N2ND_NOD_CD||" ).append("\n"); 
		query.append("					DECODE(N3RD_NOD_CD,NULL,NULL,'-'||DECODE(SUBSTR(TRSP_MOD_CD,2,1),'D',TRSP_MOD_CD,SUBSTR(TRSP_MOD_CD,2,1)||'D')||'-Y-'||'XXX-'||" ).append("\n"); 
		query.append("					N3RD_NOD_CD||" ).append("\n"); 
		query.append("					DECODE(N4TH_NOD_CD,NULL,NULL,'-'||DECODE(SUBSTR(TRSP_MOD_CD,2,1),'D',TRSP_MOD_CD,SUBSTR(TRSP_MOD_CD,2,1)||'D')||'-Y-'||'XXX-'||" ).append("\n"); 
		query.append("					N4TH_NOD_CD)) " ).append("\n"); 
		query.append("				  WHEN COST_ACT_GRP_TP_CD = 'L' AND SUBSTR(COST_ACT_GRP_CD,1,2) = 'ID' THEN" ).append("\n"); 
		query.append("					ORG_NOD_CD||'-'||SUBSTR(TRSP_MOD_CD,1,1)||'D'||'-'||DECODE(N4TH_NOD_CD,NULL,'N','Y')||'-'||'XXX-'||" ).append("\n"); 
		query.append("					N2ND_NOD_CD||" ).append("\n"); 
		query.append("					DECODE(N4TH_NOD_CD,NULL,NULL,'-'||DECODE(SUBSTR(TRSP_MOD_CD,2,1),'D',TRSP_MOD_CD,SUBSTR(TRSP_MOD_CD,2,1)||'D')||'-Y-'||'XXX-'||" ).append("\n"); 
		query.append("					N3RD_NOD_CD )" ).append("\n"); 
		query.append("				  WHEN COST_ACT_GRP_TP_CD = 'L' AND SUBSTR(COST_ACT_GRP_CD,1,2) NOT IN ('OD','ID','DM','VS')" ).append("\n"); 
		query.append("			   THEN ORG_NOD_CD||'-'||SUBSTR(TRSP_MOD_CD,1,1)||'D'||'-'||DECODE(N3RD_NOD_CD,NULL,'N','Y')||'-'||'XXX-'||" ).append("\n"); 
		query.append("					N2ND_NOD_CD||" ).append("\n"); 
		query.append("					DECODE(N3RD_NOD_CD,NULL,NULL,'-'||DECODE(SUBSTR(TRSP_MOD_CD,2,1),'D',TRSP_MOD_CD,SUBSTR(TRSP_MOD_CD,2,1)||'D')||'-Y-'||'XXX-'||" ).append("\n"); 
		query.append("					N3RD_NOD_CD||" ).append("\n"); 
		query.append("					DECODE(N4TH_NOD_CD,NULL,NULL,'-'||DECODE(SUBSTR(TRSP_MOD_CD,2,1),'D',TRSP_MOD_CD,SUBSTR(TRSP_MOD_CD,2,1)||'D')||'-Y-'||'XXX-'||" ).append("\n"); 
		query.append("					N4TH_NOD_CD ))" ).append("\n"); 
		query.append("			END) SO_PLN_STR," ).append("\n"); 
		query.append("			(CASE WHEN COST_ACT_GRP_TP_CD = 'L' AND SUBSTR(COST_ACT_GRP_CD,1,2) = 'OD'" ).append("\n"); 
		query.append("				   THEN" ).append("\n"); 
		query.append("			   RANK() OVER (PARTITION BY PCTL_NO, PCTL_IO_BND_CD2," ).append("\n"); 
		query.append("					N2ND_NOD_CD||'-'||SUBSTR(TRSP_MOD_CD,1,1)||'D'||'-'||DECODE(N4TH_NOD_CD,NULL,'N','Y')||'-'||'XXX-'||" ).append("\n"); 
		query.append("					N3RD_NOD_CD||" ).append("\n"); 
		query.append("					DECODE(N4TH_NOD_CD,NULL,NULL,'-'||DECODE(SUBSTR(TRSP_MOD_CD,2,1),'D',TRSP_MOD_CD,SUBSTR(TRSP_MOD_CD,2,1)||'D')||'-Y-'||'XXX-'||" ).append("\n"); 
		query.append("					N4TH_NOD_CD )  ORDER BY PCTL_SEQ" ).append("\n"); 
		query.append("					NULLS LAST  )" ).append("\n"); 
		query.append("				  WHEN COST_ACT_GRP_TP_CD = 'L' AND SUBSTR(COST_ACT_GRP_CD,1,2) = 'ID'" ).append("\n"); 
		query.append("				   THEN" ).append("\n"); 
		query.append("			   RANK() OVER (PARTITION BY PCTL_NO, PCTL_IO_BND_CD2," ).append("\n"); 
		query.append("					ORG_NOD_CD||'-'||SUBSTR(TRSP_MOD_CD,1,1)||'D'||'-'||DECODE(N4TH_NOD_CD,NULL,'N','Y')||'-'||'XXX-'||" ).append("\n"); 
		query.append("					N2ND_NOD_CD||" ).append("\n"); 
		query.append("					DECODE(N4TH_NOD_CD,NULL,NULL,'-'||DECODE(SUBSTR(TRSP_MOD_CD,2,1),'D',TRSP_MOD_CD,SUBSTR(TRSP_MOD_CD,2,1)||'D')||'-Y-'||'XXX-'||" ).append("\n"); 
		query.append("					N3RD_NOD_CD  )  ORDER BY PCTL_SEQ" ).append("\n"); 
		query.append("					NULLS LAST  )" ).append("\n"); 
		query.append("				  WHEN COST_ACT_GRP_TP_CD = 'L' AND SUBSTR(COST_ACT_GRP_CD,1,2) NOT IN ('OD','ID','DM','VS')" ).append("\n"); 
		query.append("			   THEN" ).append("\n"); 
		query.append("			   RANK() OVER (PARTITION BY PCTL_NO, PCTL_IO_BND_CD2," ).append("\n"); 
		query.append("			   ORG_NOD_CD||'-'||SUBSTR(TRSP_MOD_CD,1,1)||'D'||'-'||DECODE(N3RD_NOD_CD,NULL,'N','Y')||'-'||'XXX-'||" ).append("\n"); 
		query.append("					N2ND_NOD_CD||" ).append("\n"); 
		query.append("					DECODE(N3RD_NOD_CD,NULL,NULL,'-'||DECODE(SUBSTR(TRSP_MOD_CD,2,1),'D',TRSP_MOD_CD,SUBSTR(TRSP_MOD_CD,2,1)||'D')||'-Y-'||'XXX-'||" ).append("\n"); 
		query.append("					N3RD_NOD_CD||" ).append("\n"); 
		query.append("					DECODE(N4TH_NOD_CD,NULL,NULL,'-'||DECODE(SUBSTR(TRSP_MOD_CD,2,1),'D',TRSP_MOD_CD,SUBSTR(TRSP_MOD_CD,2,1)||'D')||'-Y-'||'XXX-'||" ).append("\n"); 
		query.append("					N4TH_NOD_CD )) ORDER BY PCTL_SEQ" ).append("\n"); 
		query.append("					 NULLS LAST  )" ).append("\n"); 
		query.append("			END) SO_PLN_RK," ).append("\n"); 
		query.append("			T.COST_ACT_GRP_CD, T.COST_ACT_GRP_TP_CD, T.VSL_SLAN_CD, T.CTL_OFFICE, T.PCTL_COST_MOD_CD, T.PCTL_IO_BND_CD," ).append("\n"); 
		query.append("			T.ORG_NOD_CD, T.ORG_NOD_TP_CD, T.ARR_ST_DT,T.DOR_ARR_DT, T.LST_NOD_ARR_DT, T.N2ND_NOD_CD, T.N3RD_NOD_CD, T.N4TH_NOD_CD, T.TRSP_MOD_CD," ).append("\n"); 
		query.append("			T.N1ST_LNK_DIST, T.N1ST_LNK_DIST_UT_CD, T.N2ND_LNK_DIST, T.N2ND_LNK_DIST_UT_CD, T.N3RD_LNK_DIST, T.N3RD_LNK_DIST_UT_CD," ).append("\n"); 
		query.append("			T.N1ST_VNDR_SEQ, T.N2ND_VNDR_SEQ, T.N3RD_VNDR_SEQ, T.INLND_ROUT_INV_BIL_PATT_CD, T.N1ST_RD_CRR_CD, T.N2ND_RD_CRR_CD, T.N3RD_RD_CRR_CD," ).append("\n"); 
		query.append("			T.PRE_NOD_CD, T.PRE_VNDR_SEQ, T.NXT_NOD_CD, T.NXT_VNDR_SEQ," ).append("\n"); 
		query.append("			T.TRSP_SO_STS_CD, T.ROUT_ORG_NOD_CD, T.ROUT_DEST_NOD_CD, T.ROUT_SEQ, PCTL_IO_BND_CD2," ).append("\n"); 
		query.append("			DECODE(" ).append("\n"); 
		query.append("					SUBSTR(T.INLND_ROUT_INV_BIL_PATT_CD,2,1),'1'," ).append("\n"); 
		query.append("					DECODE(" ).append("\n"); 
		query.append("							(SELECT COUNT(*) CNT FROM PRD_INLND_ROUT_DTL WHERE ROUT_ORG_NOD_CD = T.ROUT_ORG_NOD_CD AND ROUT_DEST_NOD_CD = T.ROUT_DEST_NOD_CD AND ROUT_SEQ = T.ROUT_SEQ AND TRSP_MOD_CD = 'RD'" ).append("\n"); 
		query.append("								GROUP BY ROUT_ORG_NOD_CD,ROUT_DEST_NOD_CD,ROUT_SEQ)" ).append("\n"); 
		query.append("							,1,'N','Y')," ).append("\n"); 
		query.append("				'N')" ).append("\n"); 
		query.append("			INV_BIL_PATT_DIV_FLG," ).append("\n"); 
		query.append("			T.INLND_ROUT_INCL_STTL_FLG, T.N1ST_AGMT_SEQ, T.N2ND_AGMT_SEQ, T.N3RD_AGMT_SEQ, T.N1ST_AGMT_REF_NO, T.N2ND_AGMT_REF_NO,T. N3RD_AGMT_REF_NO," ).append("\n"); 
		query.append("			T.N1ST_TRSP_AGMT_OFC_CTY_CD, T.N2ND_TRSP_AGMT_OFC_CTY_CD, T.N3RD_TRSP_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("			FROM" ).append("\n"); 
		query.append("			(" ).append("\n"); 
		query.append("				SELECT" ).append("\n"); 
		query.append("				A.PCTL_NO, A.PCTL_SEQ," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				  WHEN PCTL_IO_BND_CD2='T' AND TRSP_MOD_CD='WD' AND LEAD(COST_ACT_GRP_CD) OVER (PARTITION BY PCTL_NO,SUBSTR(ORG_NOD_CD,1,5) ORDER BY PCTL_NO,PCTL_SEQ) ='NTST'" ).append("\n"); 
		query.append("										   AND LAG(COST_ACT_GRP_CD) OVER (PARTITION BY PCTL_NO,SUBSTR(ORG_NOD_CD,1,5) ORDER BY PCTL_NO,PCTL_SEQ) ='NTST'" ).append("\n"); 
		query.append("					THEN 'TYWD'" ).append("\n"); 
		query.append("				  ELSE COST_ACT_GRP_CD" ).append("\n"); 
		query.append("				END  COST_ACT_GRP_CD," ).append("\n"); 
		query.append("				A.COST_ACT_GRP_TP_CD, A.VSL_SLAN_CD," ).append("\n"); 
		query.append("				A.CTL_OFFICE, A.PCTL_COST_MOD_CD, A.PCTL_IO_BND_CD, A.PCTL_IO_BND_CD2, A.ORG_NOD_CD," ).append("\n"); 
		query.append("				A.ORG_NOD_TP_CD, A.ARR_ST_DT,A.DOR_ARR_DT, A.LST_NOD_ARR_DT,  A.N2ND_NOD_CD, A.N3RD_NOD_CD, A.N4TH_NOD_CD," ).append("\n"); 
		query.append("				A.TRSP_MOD_CD, A.N1ST_LNK_DIST, A.N1ST_LNK_DIST_UT_CD, A.N2ND_LNK_DIST, A.N2ND_LNK_DIST_UT_CD," ).append("\n"); 
		query.append("				A.N3RD_LNK_DIST, A.N3RD_LNK_DIST_UT_CD, A.N1ST_VNDR_SEQ, A.N2ND_VNDR_SEQ, A.N3RD_VNDR_SEQ," ).append("\n"); 
		query.append("				A.INLND_ROUT_INV_BIL_PATT_CD, A.N1ST_RD_CRR_CD, A.N2ND_RD_CRR_CD, A.N3RD_RD_CRR_CD," ).append("\n"); 
		query.append("				A.PRE_NOD_CD, A.PRE_VNDR_SEQ, A.NXT_NOD_CD," ).append("\n"); 
		query.append("				A.NXT_VNDR_SEQ," ).append("\n"); 
		query.append("				DECODE(SUBSTR(A.COST_ACT_GRP_CD,1,1),'D','U','V','U',DECODE(A.COST_ACT_GRP_TP_CD,'N','U','P')) TRSP_SO_STS_CD,            " ).append("\n"); 
		query.append("				A.ROUT_ORG_NOD_CD, A.ROUT_DEST_NOD_CD, A.ROUT_SEQ," ).append("\n"); 
		query.append("				A.INLND_ROUT_INCL_STTL_FLG,A.N1ST_AGMT_SEQ, A.N2ND_AGMT_SEQ, A.N3RD_AGMT_SEQ, A.N1ST_AGMT_REF_NO, A.N2ND_AGMT_REF_NO,A.N3RD_AGMT_REF_NO," ).append("\n"); 
		query.append("				A.N1ST_TRSP_AGMT_OFC_CTY_CD, A.N2ND_TRSP_AGMT_OFC_CTY_CD, A.N3RD_TRSP_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("				FROM" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("			  SELECT" ).append("\n"); 
		query.append("			  PCTL_NO, PCTL_SEQ," ).append("\n"); 
		query.append("			  CASE" ).append("\n"); 
		query.append("				  WHEN cnt > 2 and RNK <>1 AND COST_ACT_GRP_CD ='NTST' AND RNK +1 = (LEAD(RNK) OVER(PARTITION BY COST_ACT_GRP_CD, SUBSTR(ORG_NOD_CD,1,5) ORDER BY PCTL_SEQ )) THEN 'NTSY'" ).append("\n"); 
		query.append("				  ELSE COST_ACT_GRP_CD" ).append("\n"); 
		query.append("			  END" ).append("\n"); 
		query.append("			  COST_ACT_GRP_CD, COST_ACT_GRP_TP_CD, VSL_SLAN_CD, CTL_OFFICE, PCTL_COST_MOD_CD," ).append("\n"); 
		query.append("			  PCTL_IO_BND_CD,	PCTL_IO_BND_CD2, ORG_NOD_CD, ORG_NOD_TP_CD,	ARR_ST_DT,DOR_ARR_DT, LST_NOD_ARR_DT,  N2ND_NOD_CD, N3RD_NOD_CD, N4TH_NOD_CD," ).append("\n"); 
		query.append("			  TRSP_MOD_CD, N1ST_LNK_DIST, N1ST_LNK_DIST_UT_CD, N2ND_LNK_DIST, N2ND_LNK_DIST_UT_CD, N3RD_LNK_DIST," ).append("\n"); 
		query.append("			  N3RD_LNK_DIST_UT_CD, N1ST_VNDR_SEQ, N2ND_VNDR_SEQ, N3RD_VNDR_SEQ, N1ST_RD_CRR_CD, N2ND_RD_CRR_CD, N3RD_RD_CRR_CD," ).append("\n"); 
		query.append("			  INLND_ROUT_INV_BIL_PATT_CD, PRE_NOD_CD, PRE_VNDR_SEQ, NXT_NOD_CD," ).append("\n"); 
		query.append("			  NXT_VNDR_SEQ, TRSP_SO_STS_CD, ROUT_ORG_NOD_CD, ROUT_DEST_NOD_CD, ROUT_SEQ, INLND_ROUT_INCL_STTL_FLG, N1ST_AGMT_SEQ," ).append("\n"); 
		query.append("			  N2ND_AGMT_SEQ, N3RD_AGMT_SEQ, N1ST_AGMT_REF_NO, N2ND_AGMT_REF_NO, N3RD_AGMT_REF_NO, N1ST_TRSP_AGMT_OFC_CTY_CD," ).append("\n"); 
		query.append("			  N2ND_TRSP_AGMT_OFC_CTY_CD, N3RD_TRSP_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("			  from (" ).append("\n"); 
		query.append("				SELECT" ).append("\n"); 
		query.append("				  D.PCTL_NO," ).append("\n"); 
		query.append("				  D.PCTL_SEQ," ).append("\n"); 
		query.append("				  COUNT(*) OVER(  PARTITION BY COST_ACT_GRP_CD, SUBSTR(ORG_NOD_CD,1,5)) CNT," ).append("\n"); 
		query.append("				  RANK() OVER(  PARTITION BY COST_ACT_GRP_CD, SUBSTR(ORG_NOD_CD,1,5) ORDER BY PCTL_SEQ) RNK," ).append("\n"); 
		query.append("				  (CASE" ).append("\n"); 
		query.append("					  WHEN (D.PCTL_IO_BND_CD = 'O') AND (D.ORG_NOD_TP_CD='M') AND (M.COST_ACT_GRP_CD <> 'NOBS') " ).append("\n"); 
		query.append("							AND D.PCTL_SEQ <> (SELECT PCTL_SEQ FROM PRD_PROD_CTL_ROUT_DTL DD  " ).append("\n"); 
		query.append("													WHERE PCTL_SEQ = (SELECT MAX(PCTL_SEQ) FROM PRD_PROD_CTL_ROUT_DTL WHERE PCTL_IO_BND_CD='O' AND NOD_LNK_DIV_CD='N' AND PCTL_NO = DD.PCTL_NO)" ).append("\n"); 
		query.append("													AND PCTL_NO = D.PCTL_NO) " ).append("\n"); 
		query.append("							AND NVL(D.MTY_YD_FLG,'N') <>'Y' THEN 'NOBY'" ).append("\n"); 
		query.append("					  WHEN (D.PCTL_IO_BND_CD = 'I') AND (D.ORG_NOD_TP_CD='M') AND (M.COST_ACT_GRP_CD <> 'NIBS')" ).append("\n"); 
		query.append("							AND D.PCTL_SEQ <> (SELECT PCTL_SEQ FROM PRD_PROD_CTL_ROUT_DTL DD" ).append("\n"); 
		query.append("													WHERE	PCTL_SEQ = (SELECT MIN(PCTL_SEQ) FROM PRD_PROD_CTL_ROUT_DTL	WHERE PCTL_IO_BND_CD='I' AND NOD_LNK_DIV_CD='N'	AND PCTL_NO = DD.PCTL_NO)" ).append("\n"); 
		query.append("													AND PCTL_NO = D.PCTL_NO) " ).append("\n"); 
		query.append("							AND NVL(D.MTY_YD_FLG,'N') <>'Y' THEN 'NIBY'" ).append("\n"); 
		query.append("					  ELSE M.COST_ACT_GRP_CD" ).append("\n"); 
		query.append("				  END) COST_ACT_GRP_CD," ).append("\n"); 
		query.append("				  M.COST_ACT_GRP_TP_CD," ).append("\n"); 
		query.append("				  D.VSL_SLAN_CD ," ).append("\n"); 
		query.append("					 (CASE" ).append("\n"); 
		query.append("						WHEN ORG_NOD_TP_CD = 'Z' THEN (SELECT OFC_CD FROM MDM_YARD WHERE YD_CD = (SELECT REP_YD_CD FROM MDM_ZONE WHERE ZN_CD = ORG_NOD_CD))" ).append("\n"); 
		query.append("						ELSE (SELECT OFC_CD FROM MDM_YARD WHERE YD_CD = ORG_NOD_CD)" ).append("\n"); 
		query.append("				   END) CTL_OFFICE," ).append("\n"); 
		query.append("				  'X' PCTL_COST_MOD_CD," ).append("\n"); 
		query.append("				  D.PCTL_IO_BND_CD," ).append("\n"); 
		query.append("				  D.PCTL_IO_BND_CD PCTL_IO_BND_CD2," ).append("\n"); 
		query.append("				  D.ORG_NOD_CD," ).append("\n"); 
		query.append("				  D.ORG_NOD_TP_CD," ).append("\n"); 
		query.append("				  D.ARR_ST_DT," ).append("\n"); 
		query.append("				  NULL DOR_ARR_DT," ).append("\n"); 
		query.append("				  NULL LST_NOD_ARR_DT," ).append("\n"); 
		query.append("				  D.DEST_NOD_CD N2ND_NOD_CD," ).append("\n"); 
		query.append("				  '' N3RD_NOD_CD," ).append("\n"); 
		query.append("				  '' N4TH_NOD_CD," ).append("\n"); 
		query.append("				  '' TRSP_MOD_CD," ).append("\n"); 
		query.append("				  NULL N1ST_LNK_DIST," ).append("\n"); 
		query.append("				  '' N1ST_LNK_DIST_UT_CD," ).append("\n"); 
		query.append("				  NULL N2ND_LNK_DIST," ).append("\n"); 
		query.append("				  '' N2ND_LNK_DIST_UT_CD," ).append("\n"); 
		query.append("				  NULL N3RD_LNK_DIST," ).append("\n"); 
		query.append("				  '' N3RD_LNK_DIST_UT_CD," ).append("\n"); 
		query.append("				  D.N1ST_VNDR_SEQ," ).append("\n"); 
		query.append("				  D.N2ND_VNDR_SEQ," ).append("\n"); 
		query.append("				  D.N3RD_VNDR_SEQ," ).append("\n"); 
		query.append("				  '' N1ST_RD_CRR_CD,'' N2ND_RD_CRR_CD,'' N3RD_RD_CRR_CD," ).append("\n"); 
		query.append("				  '' INLND_ROUT_INV_BIL_PATT_CD," ).append("\n"); 
		query.append("				  LAG(D.ORG_NOD_CD,1) OVER (PARTITION BY D.PCTL_NO ORDER BY D.PCTL_SEQ) PRE_NOD_CD," ).append("\n"); 
		query.append("				  (SELECT DISTINCT N1ST_VNDR_SEQ FROM PRD_PROD_CTL_ROUT_DTL WHERE PCTL_NO = D.PCTL_NO AND DEST_NOD_CD = D.ORG_NOD_CD AND NOD_LNK_DIV_CD ='L' AND D.NOD_LNK_DIV_CD ='L') PRE_VNDR_SEQ," ).append("\n"); 
		query.append("				  LEAD(D.ORG_NOD_CD,1) OVER (PARTITION BY D.PCTL_NO ORDER BY D.PCTL_SEQ) NXT_NOD_CD," ).append("\n"); 
		query.append("				  DECODE( M.COST_ACT_GRP_CD, 'NIBC','', (SELECT  N1ST_VNDR_SEQ FROM PRD_PROD_CTL_ROUT_DTL WHERE PCTL_NO = D.PCTL_NO AND ORG_NOD_CD = D.ORG_NOD_CD AND NOD_LNK_DIV_CD ='L' AND D.NOD_LNK_DIV_CD ='L' ) ) NXT_VNDR_SEQ," ).append("\n"); 
		query.append("				  'U' TRSP_SO_STS_CD,                                " ).append("\n"); 
		query.append("				  D.ROUT_ORG_NOD_CD," ).append("\n"); 
		query.append("				  D.ROUT_DEST_NOD_CD," ).append("\n"); 
		query.append("				  D.ROUT_SEQ," ).append("\n"); 
		query.append("				  NULL INLND_ROUT_INCL_STTL_FLG," ).append("\n"); 
		query.append("				  NULL N1ST_AGMT_SEQ," ).append("\n"); 
		query.append("				  NULL N2ND_AGMT_SEQ," ).append("\n"); 
		query.append("				  NULL N3RD_AGMT_SEQ," ).append("\n"); 
		query.append("				  NULL N1ST_AGMT_REF_NO," ).append("\n"); 
		query.append("				  NULL N2ND_AGMT_REF_NO," ).append("\n"); 
		query.append("				  NULL N3RD_AGMT_REF_NO," ).append("\n"); 
		query.append("				  NULL N1ST_TRSP_AGMT_OFC_CTY_CD," ).append("\n"); 
		query.append("				  NULL N2ND_TRSP_AGMT_OFC_CTY_CD," ).append("\n"); 
		query.append("				  NULL N3RD_TRSP_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("				FROM    PRD_PROD_CTL_ROUT_DTL D,PRD_COST_ACT_GRP_MAPG M, PRD_PROD_CTL_MST MST" ).append("\n"); 
		query.append("				WHERE" ).append("\n"); 
		query.append("				  D.NOD_LNK_DIV_CD ='N'" ).append("\n"); 
		query.append("				  AND M.N1ST_NOD_TP_CD =" ).append("\n"); 
		query.append("				  ( DECODE( D.PCTL_SEQ, 1, DECODE(M.PCTL_IO_BND_CD,'O',DECODE(MST.BKG_RCV_TERM_CD,'S','S','Y'),D.ORG_NOD_TP_CD), 3, DECODE(M.PCTL_IO_BND_CD,'O',DECODE(MST.BKG_RCV_TERM_CD,'F','N'," ).append("\n"); 
		query.append("								DECODE(D.PCTL_SEQ, (SELECT MAX(PCTL_SEQ) FROM PRD_PROD_CTL_ROUT_DTL WHERE PCTL_IO_BND_CD='O' AND PCTL_NO=D.PCTL_NO),'M', D.ORG_NOD_TP_CD))," ).append("\n"); 
		query.append("						D.ORG_NOD_TP_CD)," ).append("\n"); 
		query.append("						(SELECT MAX(PCTL_SEQ)-2 FROM PRD_PROD_CTL_ROUT_DTL WHERE PCTL_NO=D.PCTL_NO)," ).append("\n"); 
		query.append("						DECODE(M.PCTL_IO_BND_CD,'I',DECODE(MST.BKG_DE_TERM_CD,'F','N'," ).append("\n"); 
		query.append("							DECODE(D.PCTL_SEQ," ).append("\n"); 
		query.append("							(SELECT MIN(PCTL_SEQ)" ).append("\n"); 
		query.append("							 FROM PRD_PROD_CTL_ROUT_DTL" ).append("\n"); 
		query.append("							 WHERE PCTL_IO_BND_CD='I' AND PCTL_NO=D.PCTL_NO),'M'," ).append("\n"); 
		query.append("							D.ORG_NOD_TP_CD))," ).append("\n"); 
		query.append("						D.ORG_NOD_TP_CD)," ).append("\n"); 
		query.append("						(SELECT MAX(PCTL_SEQ) FROM PRD_PROD_CTL_ROUT_DTL WHERE PCTL_NO=D.PCTL_NO )," ).append("\n"); 
		query.append("						DECODE(M.PCTL_IO_BND_CD,'I',DECODE(MST.BKG_DE_TERM_CD,'S','S','Y'),D.ORG_NOD_TP_CD)," ).append("\n"); 
		query.append("						(SELECT MAX(PCTL_SEQ) FROM PRD_PROD_CTL_ROUT_DTL WHERE PCTL_IO_BND_CD='O' AND PCTL_NO=D.PCTL_NO),'M'," ).append("\n"); 
		query.append("						(SELECT MIN(PCTL_SEQ) FROM PRD_PROD_CTL_ROUT_DTL WHERE PCTL_IO_BND_CD='I' AND PCTL_NO=D.PCTL_NO),'M'," ).append("\n"); 
		query.append("						DECODE(M.PCTL_IO_BND_CD,'T','M',D.ORG_NOD_TP_CD)" ).append("\n"); 
		query.append("							 )" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				  AND M.PCTL_IO_BND_CD = DECODE(" ).append("\n"); 
		query.append("						D.PCTL_SEQ, 3, DECODE(D.PCTL_IO_BND_CD,'O',DECODE(MST.BKG_RCV_TERM_CD,'F','N',D.PCTL_IO_BND_CD),D.PCTL_IO_BND_CD)," ).append("\n"); 
		query.append("							 (SELECT MAX(PCTL_SEQ)-2 FROM PRD_PROD_CTL_ROUT_DTL WHERE PCTL_NO=D.PCTL_NO)," ).append("\n"); 
		query.append("							 DECODE(D.PCTL_IO_BND_CD,'I',DECODE(MST.BKG_DE_TERM_CD,'F','N',D.PCTL_IO_BND_CD),D.PCTL_IO_BND_CD)," ).append("\n"); 
		query.append("							 D.PCTL_IO_BND_CD)" ).append("\n"); 
		query.append("				  AND D.NOD_LNK_DIV_CD = M.COST_ACT_GRP_TP_CD" ).append("\n"); 
		query.append("				  AND DECODE(SUBSTR(M.COST_ACT_GRP_CD,4,1),'C','Y','N') = NVL(D.MTY_YD_FLG,'N')" ).append("\n"); 
		query.append("				  AND D.PCTL_IO_BND_CD = DECODE(@[io_bnd_cd],'A',D.PCTL_IO_BND_CD,@[io_bnd_cd])" ).append("\n"); 
		query.append("				  AND D.PCTL_NO = MST.PCTL_NO" ).append("\n"); 
		query.append("				  AND MST.PCTL_NO LIKE @[hd_pctl_no]" ).append("\n"); 
		query.append("			  )" ).append("\n"); 
		query.append("			  UNION ALL" ).append("\n"); 
		query.append("			  SELECT" ).append("\n"); 
		query.append("			  S.PCTL_NO," ).append("\n"); 
		query.append("			  S.PCTL_SEQ," ).append("\n"); 
		query.append("			  (CASE" ).append("\n"); 
		query.append("				  WHEN S.INLND_ROUT_INCL_STTL_FLG='Y' AND SUBSTR(G.COST_ACT_GRP_CD,2,3)='YTD' AND" ).append("\n"); 
		query.append("				(SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD=N1ST_NOD_CD) = DECODE(S.PCTL_IO_BND_CD2,'O','R','I','M') AND" ).append("\n"); 
		query.append("				(SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD=N2ND_NOD_CD) = DECODE(S.PCTL_IO_BND_CD2,'O','M','I','R') AND N3RD_NOD_CD IS NULL THEN 'DMLK'" ).append("\n"); 
		query.append("				  ELSE G.COST_ACT_GRP_CD" ).append("\n"); 
		query.append("			  END) COST_ACT_GRP_CD," ).append("\n"); 
		query.append("			  G.COST_ACT_GRP_TP_CD," ).append("\n"); 
		query.append("			  S.VSL_SLAN_CD ,  " ).append("\n"); 
		query.append("      		  DECODE( DECODE(SUBSTR(G.COST_ACT_GRP_CD,3,2),'RD', DECODE(NVL(S.US_CHK,'N'),'Y','X','')), '',                " ).append("\n"); 
		query.append("    			NVL((CASE" ).append("\n"); 
		query.append("    					WHEN S.N4TH_NOD_CD IS NOT NULL THEN" ).append("\n"); 
		query.append("    						(   SELECT CTRL_OFC_CD FROM TRS_TRSP_OFC_EXPT_RULE" ).append("\n"); 
		query.append("    							WHERE" ).append("\n"); 
		query.append("    							TRIM(FM_NOD_CD) = DECODE(LENGTH(TRIM(FM_NOD_CD)),2,SUBSTR(S.N1ST_NOD_CD,1,2),5,SUBSTR(S.N1ST_NOD_CD,1,5),7,S.N1ST_NOD_CD)" ).append("\n"); 
		query.append("    							AND TRIM(VIA_NOD_CD) = DECODE(LENGTH(TRIM(VIA_NOD_CD)),	2,SUBSTR(DECODE(S.PCTL_IO_BND_CD2,'O',S.N3RD_NOD_CD,S.N2ND_NOD_CD),1,2)," ).append("\n"); 
		query.append("    																	   				5,SUBSTR(DECODE(S.PCTL_IO_BND_CD2,'O',S.N3RD_NOD_CD,S.N2ND_NOD_CD),1,5)," ).append("\n"); 
		query.append("    																	   				7,DECODE(S.PCTL_IO_BND_CD2,'O',S.N3RD_NOD_CD,S.N2ND_NOD_CD))" ).append("\n"); 
		query.append("    							AND TRIM(DOR_NOD_CD) = DECODE(LENGTH(TRIM(DOR_NOD_CD)),	2,SUBSTR(DECODE(S.PCTL_IO_BND_CD2,'O',S.N2ND_NOD_CD,S.N3RD_NOD_CD),1,2)," ).append("\n"); 
		query.append("    																	   				5,SUBSTR(DECODE(S.PCTL_IO_BND_CD2,'O',S.N2ND_NOD_CD,S.N3RD_NOD_CD),1,5)," ).append("\n"); 
		query.append("    																	   				7,DECODE(S.PCTL_IO_BND_CD2,'O',S.N2ND_NOD_CD,S.N3RD_NOD_CD))" ).append("\n"); 
		query.append("    							AND TRIM(TO_NOD_CD) = DECODE(LENGTH(TRIM(TO_NOD_CD)),	2,SUBSTR(S.N4TH_NOD_CD,1,2)," ).append("\n"); 
		query.append("																						5,SUBSTR(S.N4TH_NOD_CD,1,5)," ).append("\n"); 
		query.append("																						7,S.N4TH_NOD_CD)" ).append("\n"); 
		query.append("    							AND NVL(DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("    							AND CGO_TP_CD	= 'F'" ).append("\n"); 
		query.append("    							AND TRSP_COST_DTL_MOD_CD = (CASE WHEN S.N1ST_NOD_TP_CD = 'Z' OR S.N2ND_NOD_TP_CD ='Z' OR S.N3RD_NOD_TP_CD = 'Z' OR S.N4TH_NOD_TP_CD = 'Z' THEN 'DR' ELSE 'CY' END )" ).append("\n"); 
		query.append("    							AND TRSP_CRR_MOD_CD  = (CASE" ).append("\n"); 
		query.append("															WHEN S.N1ST_TRSP_MOD_CD = S.N2ND_TRSP_MOD_CD AND S.N1ST_TRSP_MOD_CD = S.N3RD_TRSP_MOD_CD THEN DECODE(S.N1ST_TRSP_MOD_CD,'N','',S.N1ST_TRSP_MOD_CD)" ).append("\n"); 
		query.append("															WHEN S.N3RD_TRSP_MOD_CD <> 'N' THEN DECODE(S.N1ST_TRSP_MOD_CD,S.N2ND_TRSP_MOD_CD, SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N3RD_TRSP_MOD_CD,1,1), SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N2ND_TRSP_MOD_CD,1,1))" ).append("\n"); 
		query.append("															WHEN S.N2ND_TRSP_MOD_CD <> 'N' THEN DECODE(S.N1ST_TRSP_MOD_CD,S.N2ND_TRSP_MOD_CD,S.N1ST_TRSP_MOD_CD, SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N2ND_TRSP_MOD_CD,1,1))" ).append("\n"); 
		query.append("															ELSE S.N1ST_TRSP_MOD_CD" ).append("\n"); 
		query.append("														  END )" ).append("\n"); 
		query.append("    							AND ROWNUM = 1)" ).append("\n"); 
		query.append("    					WHEN S.N3RD_NOD_CD IS NOT NULL THEN" ).append("\n"); 
		query.append("    						(   SELECT CTRL_OFC_CD FROM TRS_TRSP_OFC_EXPT_RULE" ).append("\n"); 
		query.append("    							WHERE" ).append("\n"); 
		query.append("    							TRIM(FM_NOD_CD) = DECODE(LENGTH(TRIM(FM_NOD_CD)),2,SUBSTR(S.N1ST_NOD_CD,1,2),5,SUBSTR(S.N1ST_NOD_CD,1,5),7,S.N1ST_NOD_CD)" ).append("\n"); 
		query.append("    							AND DECODE(SUBSTR(G.COST_ACT_GRP_CD,2,1),'D',TRIM(DOR_NOD_CD),TRIM(VIA_NOD_CD)) =" ).append("\n"); 
		query.append("    								DECODE(LENGTH(DECODE(SUBSTR(G.COST_ACT_GRP_CD,2,1),'D',TRIM(DOR_NOD_CD),TRIM(VIA_NOD_CD)))," ).append("\n"); 
		query.append("    									   2,SUBSTR(S.N2ND_NOD_CD,1,2),5,SUBSTR(S.N2ND_NOD_CD,1,5),7,S.N2ND_NOD_CD)" ).append("\n"); 
		query.append("    							AND DECODE(SUBSTR(G.COST_ACT_GRP_CD,2,1),'D',TRIM(VIA_NOD_CD),TRIM(DOR_NOD_CD)) IS NULL" ).append("\n"); 
		query.append("    							AND TRIM(TO_NOD_CD) = DECODE(LENGTH(TRIM(TO_NOD_CD)),2,SUBSTR(S.N3RD_NOD_CD,1,2),5,SUBSTR(S.N3RD_NOD_CD,1,5),7,S.N3RD_NOD_CD)" ).append("\n"); 
		query.append("    							AND NVL(DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("    							AND CGO_TP_CD	= 'F'" ).append("\n"); 
		query.append("    							AND TRSP_COST_DTL_MOD_CD = (CASE WHEN S.N1ST_NOD_TP_CD = 'Z' OR S.N2ND_NOD_TP_CD ='Z' OR S.N3RD_NOD_TP_CD = 'Z' OR S.N4TH_NOD_TP_CD = 'Z' THEN 'DR' ELSE 'CY' END )" ).append("\n"); 
		query.append("    							AND TRSP_CRR_MOD_CD = (CASE" ).append("\n"); 
		query.append("															WHEN S.N1ST_TRSP_MOD_CD = S.N2ND_TRSP_MOD_CD AND S.N1ST_TRSP_MOD_CD = S.N3RD_TRSP_MOD_CD THEN DECODE(S.N1ST_TRSP_MOD_CD,'N','',S.N1ST_TRSP_MOD_CD)" ).append("\n"); 
		query.append("															WHEN S.N3RD_TRSP_MOD_CD <> 'N' THEN DECODE(S.N1ST_TRSP_MOD_CD,S.N2ND_TRSP_MOD_CD, SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N3RD_TRSP_MOD_CD,1,1), SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N2ND_TRSP_MOD_CD,1,1))" ).append("\n"); 
		query.append("															WHEN S.N2ND_TRSP_MOD_CD <> 'N' THEN DECODE(S.N1ST_TRSP_MOD_CD,S.N2ND_TRSP_MOD_CD,S.N1ST_TRSP_MOD_CD, SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N2ND_TRSP_MOD_CD,1,1))" ).append("\n"); 
		query.append("															ELSE S.N1ST_TRSP_MOD_CD" ).append("\n"); 
		query.append("														  END )" ).append("\n"); 
		query.append("    							AND ROWNUM = 1" ).append("\n"); 
		query.append("    					   )" ).append("\n"); 
		query.append("    					ELSE" ).append("\n"); 
		query.append("    						(   SELECT CTRL_OFC_CD FROM TRS_TRSP_OFC_EXPT_RULE" ).append("\n"); 
		query.append("    							WHERE" ).append("\n"); 
		query.append("    							TRIM(FM_NOD_CD) = DECODE(LENGTH(TRIM(FM_NOD_CD)),2,SUBSTR(S.N1ST_NOD_CD,1,2),5,SUBSTR(S.N1ST_NOD_CD,1,5),7,S.N1ST_NOD_CD)" ).append("\n"); 
		query.append("    							AND TRIM(TO_NOD_CD) = DECODE(LENGTH(TRIM(TO_NOD_CD)),2,SUBSTR(S.N2ND_NOD_CD,1,2),5,SUBSTR(S.N2ND_NOD_CD,1,5),7,S.N2ND_NOD_CD)" ).append("\n"); 
		query.append("    							AND TRIM(VIA_NOD_CD) IS NULL" ).append("\n"); 
		query.append("    							AND TRIM(DOR_NOD_CD) IS NULL" ).append("\n"); 
		query.append("    							AND NVL(DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("    							AND CGO_TP_CD	= 'F'" ).append("\n"); 
		query.append("    							AND TRSP_COST_DTL_MOD_CD = (CASE WHEN S.N1ST_NOD_TP_CD = 'Z' OR S.N2ND_NOD_TP_CD ='Z' OR S.N3RD_NOD_TP_CD = 'Z' OR S.N4TH_NOD_TP_CD = 'Z' THEN 'DR' ELSE 'CY' END )" ).append("\n"); 
		query.append("    							AND TRSP_CRR_MOD_CD = (CASE" ).append("\n"); 
		query.append("															WHEN S.N1ST_TRSP_MOD_CD = S.N2ND_TRSP_MOD_CD AND S.N1ST_TRSP_MOD_CD = S.N3RD_TRSP_MOD_CD THEN DECODE(S.N1ST_TRSP_MOD_CD,'N','',S.N1ST_TRSP_MOD_CD)" ).append("\n"); 
		query.append("															WHEN S.N3RD_TRSP_MOD_CD <> 'N' THEN DECODE(S.N1ST_TRSP_MOD_CD,S.N2ND_TRSP_MOD_CD, SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N3RD_TRSP_MOD_CD,1,1), SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N2ND_TRSP_MOD_CD,1,1))" ).append("\n"); 
		query.append("															WHEN S.N2ND_TRSP_MOD_CD <> 'N' THEN DECODE(S.N1ST_TRSP_MOD_CD,S.N2ND_TRSP_MOD_CD,S.N1ST_TRSP_MOD_CD, SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N2ND_TRSP_MOD_CD,1,1))" ).append("\n"); 
		query.append("															ELSE S.N1ST_TRSP_MOD_CD" ).append("\n"); 
		query.append("														  END )" ).append("\n"); 
		query.append("    							AND ROWNUM = 1" ).append("\n"); 
		query.append("    						)" ).append("\n"); 
		query.append("    				END)" ).append("\n"); 
		query.append("    				   ,(CASE" ).append("\n"); 
		query.append("    						WHEN DECODE(SUBSTR(G.COST_ACT_GRP_CD,1,2),'OD',S.N2ND_NOD_TP_CD,S.N1ST_NOD_TP_CD) = 'Z' THEN" ).append("\n"); 
		query.append("    							(SELECT OFC_CD FROM MDM_YARD WHERE YD_CD = (SELECT REP_YD_CD FROM MDM_ZONE WHERE ZN_CD = DECODE(SUBSTR(G.COST_ACT_GRP_CD,1,2),'OD',S.N2ND_NOD_CD,S.N1ST_NOD_CD)))" ).append("\n"); 
		query.append("    						ELSE" ).append("\n"); 
		query.append("    							(SELECT OFC_CD FROM MDM_YARD WHERE YD_CD = DECODE(SUBSTR(G.COST_ACT_GRP_CD,1,2),'OD',S.N2ND_NOD_CD,S.N1ST_NOD_CD))" ).append("\n"); 
		query.append("    				   END)" ).append("\n"); 
		query.append("    			)," ).append("\n"); 
		query.append("    			 'CHIBB' " ).append("\n"); 
		query.append("    			)CTL_OFFICE,			  " ).append("\n"); 
		query.append("			  (CASE" ).append("\n"); 
		query.append("				 WHEN S.N1ST_NOD_TP_CD = 'Z' OR S.N2ND_NOD_TP_CD ='Z' OR S.N3RD_NOD_TP_CD = 'Z' OR S.N4TH_NOD_TP_CD = 'Z' THEN 'Z'" ).append("\n"); 
		query.append("				 ELSE 'C'" ).append("\n"); 
		query.append("			  END ) PCTL_COST_MOD_CD," ).append("\n"); 
		query.append("			  S.PCTL_IO_BND_CD," ).append("\n"); 
		query.append("			  S.PCTL_IO_BND_CD2," ).append("\n"); 
		query.append("			  S.N1ST_NOD_CD," ).append("\n"); 
		query.append("			  S.N1ST_NOD_TP_CD," ).append("\n"); 
		query.append("			  S.ARR_ST_DT," ).append("\n"); 
		query.append("			  S.DOR_ARR_DT," ).append("\n"); 
		query.append("			  S.LST_NOD_ARR_DT," ).append("\n"); 
		query.append("			  S.N2ND_NOD_CD," ).append("\n"); 
		query.append("			  S.N3RD_NOD_CD," ).append("\n"); 
		query.append("			  S.N4TH_NOD_CD," ).append("\n"); 
		query.append("			  (CASE WHEN S.N1ST_TRSP_MOD_CD = S.N2ND_TRSP_MOD_CD AND S.N1ST_TRSP_MOD_CD = S.N3RD_TRSP_MOD_CD THEN	DECODE(S.N1ST_TRSP_MOD_CD,'N','',S.N1ST_TRSP_MOD_CD)" ).append("\n"); 
		query.append("					WHEN S.N3RD_TRSP_MOD_CD <> 'N' THEN DECODE(S.N1ST_TRSP_MOD_CD,S.N2ND_TRSP_MOD_CD, SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N3RD_TRSP_MOD_CD,1,1), SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N2ND_TRSP_MOD_CD,1,1))" ).append("\n"); 
		query.append("					WHEN S.N2ND_TRSP_MOD_CD <> 'N' THEN DECODE(S.N1ST_TRSP_MOD_CD,S.N2ND_TRSP_MOD_CD,S.N1ST_TRSP_MOD_CD, SUBSTR(S.N1ST_TRSP_MOD_CD,1,1)||SUBSTR(S.N2ND_TRSP_MOD_CD,1,1))" ).append("\n"); 
		query.append("					ELSE S.N1ST_TRSP_MOD_CD" ).append("\n"); 
		query.append("			  END ) TRSP_MOD_CD," ).append("\n"); 
		query.append("			  (SELECT L.LNK_DIST FROM PRD_INLND_EACH_LNK L WHERE LNK_ORG_NOD_CD = S.N1ST_NOD_CD AND LNK_DEST_NOD_CD =S.N2ND_NOD_CD AND TRSP_MOD_CD = S.N1ST_TRSP_MOD_CD ) N1ST_LNK_DIST," ).append("\n"); 
		query.append("			  (SELECT L.DIST_UT_CD FROM PRD_INLND_EACH_LNK L WHERE LNK_ORG_NOD_CD = S.N1ST_NOD_CD AND LNK_DEST_NOD_CD =S.N2ND_NOD_CD AND TRSP_MOD_CD = S.N1ST_TRSP_MOD_CD ) N1ST_LNK_DIST_UT_CD," ).append("\n"); 
		query.append("			  (SELECT L.LNK_DIST FROM PRD_INLND_EACH_LNK L WHERE LNK_ORG_NOD_CD = S.N2ND_NOD_CD AND LNK_DEST_NOD_CD =S.N3RD_NOD_CD AND TRSP_MOD_CD = S.N2ND_TRSP_MOD_CD ) N2ND_LNK_DIST," ).append("\n"); 
		query.append("			  (SELECT L.DIST_UT_CD FROM PRD_INLND_EACH_LNK L WHERE LNK_ORG_NOD_CD = S.N2ND_NOD_CD AND LNK_DEST_NOD_CD =S.N3RD_NOD_CD AND TRSP_MOD_CD = S.N2ND_TRSP_MOD_CD ) N2ND_LNK_DIST_UT_CD," ).append("\n"); 
		query.append("			  (SELECT L.LNK_DIST FROM PRD_INLND_EACH_LNK L  WHERE LNK_ORG_NOD_CD = S.N3RD_NOD_CD AND LNK_DEST_NOD_CD =S.N4TH_NOD_CD AND TRSP_MOD_CD = S.N3RD_TRSP_MOD_CD ) N3RD_LNK_DIST," ).append("\n"); 
		query.append("			  (SELECT L.DIST_UT_CD FROM PRD_INLND_EACH_LNK L WHERE LNK_ORG_NOD_CD = S.N3RD_NOD_CD AND LNK_DEST_NOD_CD =S.N4TH_NOD_CD  AND TRSP_MOD_CD = S.N3RD_TRSP_MOD_CD ) N3RD_DIST_UT_CD," ).append("\n"); 
		query.append("			  S.N1ST_VNDR_SEQ," ).append("\n"); 
		query.append("			  S.N2ND_VNDR_SEQ," ).append("\n"); 
		query.append("			  S.N3RD_VNDR_SEQ," ).append("\n"); 
		query.append("			  S.N1ST_RD_CRR_CD," ).append("\n"); 
		query.append("			  S.N2ND_RD_CRR_CD," ).append("\n"); 
		query.append("			  S.N3RD_RD_CRR_CD," ).append("\n"); 
		query.append("			  DECODE(SUBSTR(G.COST_ACT_GRP_CD,3,2),'RD',S.INLND_ROUT_INV_BIL_PATT_CD,'') INLND_ROUT_INV_BIL_PATT_CD," ).append("\n"); 
		query.append("			  '' ," ).append("\n"); 
		query.append("			  NULL ," ).append("\n"); 
		query.append("			  '' ," ).append("\n"); 
		query.append("			  NULL ," ).append("\n"); 
		query.append("			  'U' TRSP_SO_STS_CD ," ).append("\n"); 
		query.append("			  S.ROUT_ORG_NOD_CD," ).append("\n"); 
		query.append("			  S.ROUT_DEST_NOD_CD," ).append("\n"); 
		query.append("			  S.ROUT_SEQ," ).append("\n"); 
		query.append("			  S.INLND_ROUT_INCL_STTL_FLG," ).append("\n"); 
		query.append("			  S.N1ST_AGMT_SEQ," ).append("\n"); 
		query.append("			  S.N2ND_AGMT_SEQ," ).append("\n"); 
		query.append("			  S.N3RD_AGMT_SEQ," ).append("\n"); 
		query.append("			  S.N1ST_AGMT_REF_NO," ).append("\n"); 
		query.append("			  S.N2ND_AGMT_REF_NO," ).append("\n"); 
		query.append("			  S.N3RD_AGMT_REF_NO," ).append("\n"); 
		query.append("			  S.N1ST_TRSP_AGMT_OFC_CTY_CD," ).append("\n"); 
		query.append("			  S.N2ND_TRSP_AGMT_OFC_CTY_CD," ).append("\n"); 
		query.append("			  S.N3RD_TRSP_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("			  FROM" ).append("\n"); 
		query.append("			  (" ).append("\n"); 
		query.append("				  SELECT D.PCTL_NO," ).append("\n"); 
		query.append("				  MAX(TRIM(CT.US_CHK)) US_CHK," ).append("\n"); 
		query.append("				  MAX(TRIM(CT.INLND_ROUT_INV_BIL_PATT_CD)) INLND_ROUT_INV_BIL_PATT_CD," ).append("\n"); 
		query.append("				  DECODE(CT.CNT,0,'N',99,'N',D.PCTL_IO_BND_CD) PCTL_IO_BND_CD," ).append("\n"); 
		query.append("				  MAX(D.PCTL_IO_BND_CD) PCTL_IO_BND_CD2," ).append("\n"); 
		query.append("				  MIN(CT.PCTL_SEQ) PCTL_SEQ," ).append("\n"); 
		query.append("				  MAX(CT.PCTL_SEQ) MX_PCTL_SEQ," ).append("\n"); 
		query.append("				  CT.CNT," ).append("\n"); 
		query.append("				  MIN(DECODE(RK, 1, D.ORG_NOD_CD)) N1ST_NOD_CD," ).append("\n"); 
		query.append("				  DECODE(CT.CNT,0,'N',99,'N',MAX(DECODE(RK, 1, D.ORG_NOD_TP_CD)) ) N1ST_NOD_TP_CD," ).append("\n"); 
		query.append("				  DECODE(CT.CNT,0,'N',99,'N',NVL(MAX(DECODE(RK, 1, D.TRSP_MOD_CD)),'N')) N1ST_TRSP_MOD_CD," ).append("\n"); 
		query.append("				  MAX(DECODE(RK, 1, D.ARR_ST_DT)) ARR_ST_DT," ).append("\n"); 
		query.append("				  MAX(DECODE(D.DEST_NOD_TP_CD,'Z', D.DEP_FSH_DT)) DOR_ARR_DT," ).append("\n"); 
		query.append("				  MAX(D.DEP_FSH_DT) LST_NOD_ARR_DT," ).append("\n"); 
		query.append("				  MAX(DECODE(RK, 2, D.ORG_NOD_CD, 1, D.DEST_NOD_CD)) N2ND_NOD_CD," ).append("\n"); 
		query.append("				  DECODE(CT.CNT,0,'N',99,'N',MAX(DECODE(RK, 2, D.ORG_NOD_TP_CD, 1, D.DEST_NOD_TP_CD)) ) N2ND_NOD_TP_CD," ).append("\n"); 
		query.append("				  DECODE(CT.CNT,0,'N',99,'N',NVL(MAX(DECODE(RK, 2, D.TRSP_MOD_CD)),'N')) N2ND_TRSP_MOD_CD," ).append("\n"); 
		query.append("				  MAX(DECODE(RK, 3, D.ORG_NOD_CD, 2, D.DEST_NOD_CD)) N3RD_NOD_CD," ).append("\n"); 
		query.append("				  DECODE(CT.CNT,0,'N',99,'N',MAX(DECODE(RK, 3, D.ORG_NOD_TP_CD, 2, D.DEST_NOD_TP_CD)) ) N3RD_NOD_TP_CD," ).append("\n"); 
		query.append("				  DECODE(CT.CNT,0,'N',99,'N',NVL(MAX(DECODE(RK, 3, D.TRSP_MOD_CD)),'N')) N3RD_TRSP_MOD_CD," ).append("\n"); 
		query.append("				  DECODE(CT.CNT,0,'N',99,'N',MAX(DECODE(RK, 4, D.ORG_NOD_TP_CD, 3, D.DEST_NOD_TP_CD)) ) N4TH_NOD_TP_CD," ).append("\n"); 
		query.append("				  MAX(DECODE(RK, 3, D.DEST_NOD_CD)) N4TH_NOD_CD," ).append("\n"); 
		query.append("				  D.VSL_SLAN_CD," ).append("\n"); 
		query.append("				  MAX(DECODE(RK, 1, D.N1ST_VNDR_SEQ)) N1ST_VNDR_SEQ," ).append("\n"); 
		query.append("				  MAX(DECODE(RK, 2, D.N1ST_VNDR_SEQ)) N2ND_VNDR_SEQ," ).append("\n"); 
		query.append("				  MAX(DECODE(RK, 3, D.N1ST_VNDR_SEQ)) N3RD_VNDR_SEQ," ).append("\n"); 
		query.append("				  MAX(DECODE(D.TRSP_MOD_CD,'RD', DECODE(RK,1,D.RAIL_CRR_TP_CD))) N1ST_RD_CRR_CD," ).append("\n"); 
		query.append("				  MAX(DECODE(D.TRSP_MOD_CD,'RD', DECODE(RK,2,D.RAIL_CRR_TP_CD))) N2ND_RD_CRR_CD," ).append("\n"); 
		query.append("				  MAX(DECODE(D.TRSP_MOD_CD,'RD', DECODE(RK,3,D.RAIL_CRR_TP_CD))) N3RD_RD_CRR_CD," ).append("\n"); 
		query.append("				  D.ROUT_ORG_NOD_CD," ).append("\n"); 
		query.append("				  D.ROUT_DEST_NOD_CD," ).append("\n"); 
		query.append("				  D.ROUT_SEQ ," ).append("\n"); 
		query.append("				  MIN(CT.T_VVD_SEQ) T_VVD_SEQ," ).append("\n"); 
		query.append("				  (CASE	WHEN MIN(CT.T_VVD_SEQ) > MIN(CT.PCTL_SEQ) THEN -1" ).append("\n"); 
		query.append("						WHEN MIN(CT.T_VVD_SEQ) = MIN(CT.PCTL_SEQ) THEN 0" ).append("\n"); 
		query.append("						ELSE 1" ).append("\n"); 
		query.append("				  END) IS_PRE_VVD," ).append("\n"); 
		query.append("				  MAX(DECODE(RK,1,TRIM(D.TRSP_AGMT_SEQ))) N1ST_AGMT_SEQ," ).append("\n"); 
		query.append("				  MAX(DECODE(RK,2,TRIM(D.TRSP_AGMT_SEQ))) N2ND_AGMT_SEQ," ).append("\n"); 
		query.append("				  MAX(DECODE(RK,3,TRIM(D.TRSP_AGMT_SEQ))) N3RD_AGMT_SEQ," ).append("\n"); 
		query.append("				  MAX(DECODE(RK,1,TRIM(D.AGMT_REF_NO))) N1ST_AGMT_REF_NO," ).append("\n"); 
		query.append("				  MAX(DECODE(RK,2,TRIM(D.AGMT_REF_NO))) N2ND_AGMT_REF_NO," ).append("\n"); 
		query.append("				  MAX(DECODE(RK,3,TRIM(D.AGMT_REF_NO))) N3RD_AGMT_REF_NO," ).append("\n"); 
		query.append("				  MAX(D.INLND_ROUT_INCL_STTL_FLG) INLND_ROUT_INCL_STTL_FLG," ).append("\n"); 
		query.append("				  MAX(DECODE(RK,1,TRIM(D.TRSP_AGMT_OFC_CTY_CD))) N1ST_TRSP_AGMT_OFC_CTY_CD," ).append("\n"); 
		query.append("				  MAX(DECODE(RK,2,TRIM(D.TRSP_AGMT_OFC_CTY_CD))) N2ND_TRSP_AGMT_OFC_CTY_CD," ).append("\n"); 
		query.append("				  MAX(DECODE(RK,3,TRIM(D.TRSP_AGMT_OFC_CTY_CD))) N3RD_TRSP_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("				  FROM PRD_PROD_CTL_ROUT_DTL D," ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("						SELECT M2.PCTL_NO," ).append("\n"); 
		query.append("						M2.PCTL_SEQ," ).append("\n"); 
		query.append("						RANK() OVER ( PARTITION BY M2.PCTL_NO, M2.CNT ORDER BY M2.PCTL_NO, M2.PCTL_SEQ) RK," ).append("\n"); 
		query.append("						M2.PCTL_IO_BND_CD," ).append("\n"); 
		query.append("						M2.N1ST_VNDR_SEQ," ).append("\n"); 
		query.append("						M2.CNT," ).append("\n"); 
		query.append("						M2.T_VVD_SEQ," ).append("\n"); 
		query.append("						M2.INLND_ROUT_INV_BIL_PATT_CD," ).append("\n"); 
		query.append("						M2.US_CHK" ).append("\n"); 
		query.append("						FROM" ).append("\n"); 
		query.append("						(" ).append("\n"); 
		query.append("							SELECT" ).append("\n"); 
		query.append("							PCTL_NO, PCTL_SEQ, RK, PCTL_IO_BND_CD, N1ST_VNDR_SEQ, N2ND_VNDR_SEQ, N3RD_VNDR_SEQ," ).append("\n"); 
		query.append("							T_VVD_SEQ, INLND_ROUT_INV_BIL_PATT_CD,INLND_ROUT_CMB_FLG, D_TERM, US_CHK, CNT2," ).append("\n"); 
		query.append("							(" ).append("\n"); 
		query.append("							 CASE" ).append("\n"); 
		query.append("								  WHEN CNT2 = 0  AND (R_TERM = 'D' OR SUBSTR(PCTL_NO,1,1) ='O' OR NVL(@[ob_tro_flg],'N') = 'Y' ) THEN LEAD(CNT2) OVER (PARTITION BY PCTL_NO ORDER BY PCTL_SEQ)" ).append("\n"); 
		query.append("								  WHEN CNT2 = 99 AND (D_TERM = 'D' OR SUBSTR(PCTL_NO,1,1) ='I' OR NVL(@[ib_tro_flg],'N') = 'Y' ) THEN LAG(CNT2) OVER (PARTITION BY PCTL_NO ORDER BY PCTL_SEQ)" ).append("\n"); 
		query.append("								  ELSE CNT2" ).append("\n"); 
		query.append("							 END" ).append("\n"); 
		query.append("							) CNT" ).append("\n"); 
		query.append("							FROM" ).append("\n"); 
		query.append("							(" ).append("\n"); 
		query.append("						  SELECT" ).append("\n"); 
		query.append("						  M.PCTL_NO," ).append("\n"); 
		query.append("						  M.PCTL_SEQ," ).append("\n"); 
		query.append("						  TRIM(M.INLND_ROUT_INV_BIL_PATT_CD) INLND_ROUT_INV_BIL_PATT_CD," ).append("\n"); 
		query.append("						  M.INLND_ROUT_CMB_FLG," ).append("\n"); 
		query.append("						  (CASE" ).append("\n"); 
		query.append("							  WHEN TRIM(M.INLND_ROUT_INV_BIL_PATT_CD) IS NOT NULL THEN" ).append("\n"); 
		query.append("							  (	RANK() OVER ( PARTITION BY M.PCTL_NO, M.INLND_ROUT_INV_BIL_PATT_CD, DECODE(M.INLND_ROUT_CMB_FLG,'Y',M.PCTL_NO,M.PCTL_SEQ) ORDER BY M.PCTL_NO, M.PCTL_SEQ) )" ).append("\n"); 
		query.append("							  ELSE" ).append("\n"); 
		query.append("							  ( RANK() OVER ( PARTITION BY M.PCTL_NO, M.PCTL_IO_BND_CD, M.N1ST_VNDR_SEQ, DECODE(M.INLND_ROUT_CMB_FLG,'Y',M.PCTL_NO,PCTL_SEQ) ORDER BY M.PCTL_NO, M.PCTL_SEQ))" ).append("\n"); 
		query.append("						  END) RK," ).append("\n"); 
		query.append("						  M.PCTL_IO_BND_CD," ).append("\n"); 
		query.append("						  M.N1ST_VNDR_SEQ ," ).append("\n"); 
		query.append("						  M.N2ND_VNDR_SEQ ," ).append("\n"); 
		query.append("						  M.N3RD_VNDR_SEQ ," ).append("\n"); 
		query.append("						  PRD_GET_TLANE_FNC(M.PCTL_NO,'SEQ') T_VVD_SEQ, " ).append("\n"); 
		query.append("						  (CASE" ).append("\n"); 
		query.append("							  WHEN  (M.PCTL_SEQ =2) AND (M.PCTL_IO_BND_CD='O') THEN 0" ).append("\n"); 
		query.append("							  WHEN  M.PCTL_SEQ = (" ).append("\n"); 
		query.append("							SELECT MAX(PCTL_SEQ) FROM PRD_PROD_CTL_ROUT_DTL" ).append("\n"); 
		query.append("							WHERE NOD_LNK_DIV_CD ='L' AND PCTL_NO = M.PCTL_NO) AND (M.PCTL_IO_BND_CD='I') THEN 99" ).append("\n"); 
		query.append("							 ELSE (SELECT COUNT(DISTINCT PCTL_NO|| '_' ||" ).append("\n"); 
		query.append("									CASE WHEN TRIM(X.INLND_ROUT_INV_BIL_PATT_CD) IS NOT NULL AND INLND_ROUT_CMB_FLG = 'Y' THEN X.INLND_ROUT_INV_BIL_PATT_CD || '_Y'" ).append("\n"); 
		query.append("								   WHEN TRIM(X.INLND_ROUT_INV_BIL_PATT_CD) IS NOT NULL THEN X.INLND_ROUT_INV_BIL_PATT_CD || '_' || X.PCTL_SEQ" ).append("\n"); 
		query.append("								   WHEN  X.INLND_ROUT_CMB_FLG = 'Y' THEN TO_CHAR(X.N1ST_VNDR_SEQ)" ).append("\n"); 
		query.append("								   ELSE '_' || TO_CHAR(PCTL_SEQ)" ).append("\n"); 
		query.append("								   END)" ).append("\n"); 
		query.append("							  FROM PRD_PROD_CTL_ROUT_DTL X                                      " ).append("\n"); 
		query.append("							 WHERE X.PCTL_NO = M.PCTL_NO " ).append("\n"); 
		query.append("							   AND M.PCTL_SEQ >= X.PCTL_SEQ                              " ).append("\n"); 
		query.append("							   AND M.NOD_LNK_DIV_CD ='L' " ).append("\n"); 
		query.append("							   AND X.NOD_LNK_DIV_CD ='L')" ).append("\n"); 
		query.append("						  END" ).append("\n"); 
		query.append("						  ) CNT2," ).append("\n"); 
		query.append("						  MST.BKG_RCV_TERM_CD R_TERM," ).append("\n"); 
		query.append("						  MST.BKG_DE_TERM_CD D_TERM," ).append("\n"); 
		query.append("						   CASE WHEN M.PCTL_IO_BND_CD = 'I' AND  SUBSTR(MST.POD_CD, 1, 2) = 'US' AND SUBSTR(M.ORG_NOD_CD, 1, 2) = 'CA' AND M.TRSP_MOD_CD = 'RD'  THEN 'N'" ).append("\n"); 
		query.append("								WHEN M.PCTL_IO_BND_CD = 'I' AND  SUBSTR(MST.POD_CD, 1, 2) = 'CA' AND SUBSTR(M.ORG_NOD_CD, 1, 2) = 'US' AND M.TRSP_MOD_CD = 'RD'  THEN 'Y'" ).append("\n"); 
		query.append("								WHEN M.PCTL_IO_BND_CD = 'I' AND  SUBSTR(MST.POD_CD, 1, 2) = 'US' THEN 'Y'  " ).append("\n"); 
		query.append("								WHEN M.PCTL_IO_BND_CD = 'O' AND  SUBSTR(MST.POL_CD, 1, 2) = 'US' AND SUBSTR(M.ORG_NOD_CD, 1, 2) = 'CA' AND M.TRSP_MOD_CD = 'RD'  THEN 'N'" ).append("\n"); 
		query.append("								WHEN M.PCTL_IO_BND_CD = 'O' AND  SUBSTR(MST.POL_CD, 1, 2) = 'CA' AND SUBSTR(M.ORG_NOD_CD, 1, 2) = 'US' AND M.TRSP_MOD_CD = 'RD'  THEN 'Y'" ).append("\n"); 
		query.append("								WHEN M.PCTL_IO_BND_CD = 'O' AND  SUBSTR(MST.POL_CD, 1, 2) = 'US' THEN 'Y'   " ).append("\n"); 
		query.append("								ELSE 'N' " ).append("\n"); 
		query.append("						   END  US_CHK" ).append("\n"); 
		query.append("						  FROM PRD_PROD_CTL_ROUT_DTL M, PRD_PROD_CTL_MST MST" ).append("\n"); 
		query.append("						  WHERE M.NOD_LNK_DIV_CD ='L'" ).append("\n"); 
		query.append("						  AND M.PCTL_IO_BND_CD = DECODE(@[io_bnd_cd],'A',M.PCTL_IO_BND_CD,@[io_bnd_cd])" ).append("\n"); 
		query.append("						  AND M.PCTL_NO = MST.PCTL_NO" ).append("\n"); 
		query.append("						  AND MST.PCTL_NO = @[hd_pctl_no]" ).append("\n"); 
		query.append("						  ORDER BY 1,2" ).append("\n"); 
		query.append("							)" ).append("\n"); 
		query.append("						) M2" ).append("\n"); 
		query.append("						ORDER BY 1, 2" ).append("\n"); 
		query.append("				  ) CT" ).append("\n"); 
		query.append("				  WHERE D.NOD_LNK_DIV_CD ='L'" ).append("\n"); 
		query.append("				  AND D.PCTL_NO = CT.PCTL_NO" ).append("\n"); 
		query.append("				  AND D.PCTL_SEQ = CT.PCTL_SEQ" ).append("\n"); 
		query.append("				  AND D.PCTL_IO_BND_CD = CT.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("				  GROUP BY D.PCTL_NO, D.PCTL_IO_BND_CD, CT.CNT,D.VSL_SLAN_CD,D.ROUT_ORG_NOD_CD," ).append("\n"); 
		query.append("				  D.ROUT_DEST_NOD_CD,D.ROUT_SEQ" ).append("\n"); 
		query.append("				  ORDER BY 1, 2 DESC" ).append("\n"); 
		query.append("			  ) S," ).append("\n"); 
		query.append("			  PRD_COST_ACT_GRP_MAPG G" ).append("\n"); 
		query.append("			  WHERE S.PCTL_IO_BND_CD = G.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("			  AND S.N1ST_NOD_TP_CD = G.N1ST_NOD_TP_CD" ).append("\n"); 
		query.append("			  AND NVL(S.N2ND_NOD_TP_CD, 'N') =G.N2ND_NOD_TP_CD" ).append("\n"); 
		query.append("			  AND NVL(S.N3RD_NOD_TP_CD, 'N') =G.N3RD_NOD_TP_CD" ).append("\n"); 
		query.append("			  AND NVL(S.N4TH_NOD_TP_CD, 'N') =G.N4TH_NOD_TP_CD" ).append("\n"); 
		query.append("			  AND S.N1ST_TRSP_MOD_CD = G.N1ST_TRSP_MOD_CD" ).append("\n"); 
		query.append("			  AND NVL(S.N2ND_TRSP_MOD_CD, 'N') = G.N2ND_TRSP_MOD_CD" ).append("\n"); 
		query.append("			  AND NVL(S.N3RD_TRSP_MOD_CD, 'N') = G.N3RD_TRSP_MOD_CD" ).append("\n"); 
		query.append("			  AND G.COST_ACT_GRP_TP_CD ='L'" ).append("\n"); 
		query.append("			  AND G.COST_ACT_GRP_CD LIKE DECODE(S.PCTL_IO_BND_CD, 'T', DECODE(S.N1ST_TRSP_MOD_CD,'WD',DECODE(S.IS_PRE_VVD,-1,'PR%',0,'TR%','PO%'), G.COST_ACT_GRP_CD), G.COST_ACT_GRP_CD)" ).append("\n"); 
		query.append("			  UNION ALL" ).append("\n"); 
		query.append("			  SELECT" ).append("\n"); 
		query.append("			  PCTL_NO, MAX(PCTL_SEQ) PCTL_SEQ, 'COMN' COST_ACT_GRP_CD,'N' COST_ACT_GRP_TP_CD,'' VSL_SLAN_CD,'' CTL_OFFICE,'X' PCTL_COST_MOD_CD,'C' PCTL_IO_BND_CD,'C' PCTL_IO_BND_CD2,'' N1ST_NOD_CD ,'' N1ST_NOD_TP_CD," ).append("\n"); 
		query.append("			  NULL ARR_ST_DT,NULL DOR_ARR_DT, NULL LST_NOD_ARR_DT, '' N2ND_NOD_CD,'' N3RD_NOD_CD,'' N4TH_NOD_CD,NULL TRSP_MOD_CD,NULL N1ST_LNK_DIST, NULL N1ST_LNK_DIST_UT_CD, NULL N2ND_LNK_DIST,NULL N2ND_LNK_DIST_UT_CD," ).append("\n"); 
		query.append("			  NULL N3RD_LNK_DIST,NULL N3RD_DIST_UT_CD,NULL N1ST_VNDR_SEQ, NULL N2ND_VNDR_SEQ, NULL N3RD_VNDR_SEQ,NULL N1ST_RD_CRR_CD, NULL N2ND_RD_CRR_CD,NULL N3RD_RD_CRR_CD, NULL INLND_ROUT_INV_BIL_PATT_CD," ).append("\n"); 
		query.append("			  '',NULL,'',NULL,'U' TRSP_SO_STS_CD,NULL ROUT_ORG_NOD_CD,NULL ROUT_DEST_NOD_CD,NULL ROUT_SEQ,NULL INLND_ROUT_INCL_STTL_FLG,NULL N1ST_AGMT_SEQ, NULL N2ND_AGMT_SEQ,NULL N3RD_AGMT_SEQ, NULL N1ST_AGMT_REF_NO," ).append("\n"); 
		query.append("			  NULL N2ND_AGMT_REF_NO, NULL N3RD_AGMT_REF_NO,NULL N1ST_TRSP_AGMT_OFC_CTY_CD, NULL N2ND_TRSP_AGMT_OFC_CTY_CD,NULL N3RD_TRSP_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("			  FROM PRD_PROD_CTL_ROUT_DTL" ).append("\n"); 
		query.append("			  WHERE PCTL_NO = @[hd_pctl_no]" ).append("\n"); 
		query.append("			  GROUP BY PCTL_NO" ).append("\n"); 
		query.append("			  ) A" ).append("\n"); 
		query.append("			  ORDER BY 1,2 ASC" ).append("\n"); 
		query.append("			) T" ).append("\n"); 
		query.append("			ORDER BY 1,2 ASC" ).append("\n"); 
		query.append("		   ) ORDER BY PCTL_NO,PCTL_SEQ" ).append("\n"); 
		query.append("		  ) ORDER BY 1,2" ).append("\n"); 
		query.append("		) ZZ" ).append("\n"); 
		query.append("	  WHERE ZZ.PCTL_NO = @[hd_pctl_no]" ).append("\n"); 
		query.append(" ) T1" ).append("\n"); 
		query.append(" ON (T.PCTL_NO = T1.PCTL_NO AND T.COST_ACT_GRP_SEQ = T1.AG_SEQ AND T.PCTL_NO = @[hd_pctl_no])" ).append("\n"); 
		query.append(" WHEN MATCHED THEN " ).append("\n"); 
		query.append("    UPDATE SET 	T.N1ST_NOD_PLN_DT = T1.ARR_ST_DT" ).append("\n"); 
		query.append("			   ,T.DOR_ARR_DT = T1.DOR_ARR_DT" ).append("\n"); 
		query.append("			   ,T.LST_NOD_ARR_DT = T1.LST_NOD_ARR_DT" ).append("\n"); 

	}
}