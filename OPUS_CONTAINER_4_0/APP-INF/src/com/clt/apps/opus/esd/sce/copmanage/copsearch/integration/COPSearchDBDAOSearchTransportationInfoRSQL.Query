<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="COPSearchDBDAOSearchTransportationInfoRSQL">
			<desc><![CDATA[SearchTransportationInfo]]></desc>
			<sql><![CDATA[
SELECT  cop_no
      , cop_dtl_seq
      , rail_rcv_coff_fm_dt
      , act_cd
      , act_nm
      , vvd
      , nod_cd
      , pln_date
      , pln_time
      , estm_date
      , estm_time
      , act_date
      , act_time
      , act_rcv_tp_Cd
      , expt_info 
      ,NVL(CASE WHEN INSTR(expt_info, '#') > 0 THEN SUBSTR(expt_info, 1, INSTR(expt_info, '#')-1) 
            ELSE expt_info 
       END, '-1') AS cop_expt_no

     , nvl(CASE WHEN INSTR(expt_info, '#') > 0 THEN 
                 CASE WHEN INSTR(SUBSTR(expt_info, INSTR(expt_info, '#')+1, LENGTH(expt_info)-INSTR(expt_info, '#')+1), '#') > 0 
                      THEN SUBSTR(expt_info, INSTR(expt_info, '#')+1, INSTR(substr(expt_info, INSTR(expt_info, '#')+1, LENGTH(expt_info)-INSTR(expt_info, '#')+1), '#')-1)
                      ELSE SUBSTR(expt_info, INSTR(expt_info, '#')+1, LENGTH(expt_info)-INSTR(expt_info, '#')+1)
                 END
            ELSE ''
        END, '-1') AS cop_expt_sts 
      , CASE WHEN INSTR(expt_info, '#') > 0 THEN 
                  CASE WHEN INSTR(substr(expt_info, INSTR(expt_info, '#')+1, LENGTH(expt_info)-INSTR(expt_info, '#')+1), '#') > 0 
                       THEN SUBSTR(expt_info, INSTR(expt_info, '#')+1+ INSTR(substr(expt_info, INSTR(expt_info, '#')+1, LENGTH(expt_info)-INSTR(expt_info, '#')+1), '#')
                            ,1)
                       ELSE ''
                  END
             ELSE ''
      END AS cop_expt_tp_cd 
     ,act_sts_cd
  FROM(
        SELECT scd.cop_no
             , scd.cop_dtl_seq
             --, to_char(rail_rcv_coff_fm_dt,'YYYY-MM-DD') ||
             --  NVL2(rail_rcv_coff_to_dt, ' ~ ', '') || to_char(rail_rcv_coff_to_dt,'YYYY-MM-DD') AS rail_rcv_coff_fm_dt 
             , clz.rail_rcv_coff_fm_dt  || NVL2(clz.rail_rcv_coff_to_dt, ' ~ ', '') || clz.rail_rcv_coff_to_dt AS rail_rcv_coff_fm_dt
             , MIN(scd.act_cd) act_cd
             , MIN(ma.act_nm)||max(decode(NVL(scd.ACT_STS_MAPG_CD,'a'),'a','',DECODE(scd.ACT_RCV_TP_CD , 1 ,'    ('||NVL(scd.ACT_STS_MAPG_CD,'')||')','' ))) act_nm
             , (scd.VSL_CD || scd.SKD_VOY_NO || scd.SKD_DIR_CD) vvd 
             , MIN(scd.nod_cd) nod_cd 
             , MIN(TO_CHAR(scd.pln_dt,'yyyy-MM-dd')) pln_date 
             , MIN(TO_CHAR(scd.pln_dt,'hh24:mi')) pln_time 
             , MIN(TO_CHAR(scd.estm_dt,'yyyy-MM-dd')) estm_date 
             , MIN(TO_CHAR(scd.estm_dt,'hh24:mi')) estm_time 
             , MIN(TO_CHAR(scd.act_dt,'yyyy-MM-dd')) act_date 
             , MIN(TO_CHAR(scd.act_dt,'hh24:mi')) act_time
             , NVL2(COA_GET_CD_NM_FNC('CD00141',MIN(SCD.ACT_RCV_TP_CD)), COA_GET_CD_NM_FNC('CD00141',MIN(SCD.ACT_RCV_TP_CD))
                                                                         || DECODE(NVL(SCD.EDI_MSG_TP_CD,''),'','','('||SCD.EDI_MSG_TP_CD||')')  
                                                                         ||(DECODE(MIN(SCD.ACT_RCV_TP_CD),'4','('||MIN(SCD.UPD_USR_ID)||')'))
                                                                       , '' ) AS ACT_RCV_TP_CD 
             , MAX(DECODE(sce.cop_expt_sts_cd,'X','',sce.cop_expt_no) || '#' || DECODE(sce.cop_expt_sts_cd,'X','',sce.cop_expt_sts_cd) || '#' || DECODE(sce.cop_expt_sts_cd,'X','',sce.cop_expt_tp_cd)) expt_info 
             , act_sts_cd
          FROM sce_cop_hdr sch, 
              (SELECT cop_no, '' AS cop_grp_seq
                    , cop_dtl_seq
                    , act_cd
                    , act_sts_mapg_cd
                    , act_rcv_tp_cd
                    , vsl_cd
                    , skd_voy_no
                    , skd_dir_cd
                    , nod_cd
                    -- Plan시간을 30분단위, 00단위 표시 변경 
                    ,(CASE WHEN TO_CHAR(pln_dt,'mi') >= '01' AND TO_CHAR(pln_dt,'mi') <= '30' 
                                THEN pln_dt + NUMTODSINTERVAL(30 - TO_NUMBER(TO_CHAR(pln_dt,'mi')), 'MINUTE') 
                           WHEN TO_CHAR(pln_dt,'mi') >= '31' AND TO_CHAR(pln_dt,'mi') <= '59' 
                                THEN pln_dt + NUMTODSINTERVAL(60 - TO_NUMBER(TO_CHAR(pln_dt,'mi')),'MINUTE') 
                           ELSE pln_dt 
                      END) pln_dt  
                     -- Plan시간을 30분단위, 00단위 표시 변경 
                    ,(CASE WHEN TO_CHAR(estm_dt,'mi') >= '01' AND TO_CHAR(estm_dt,'mi') <= '30' 
                                THEN estm_dt + NUMTODSINTERVAL(30 - TO_NUMBER(TO_CHAR(estm_dt,'mi')), 'MINUTE') 
                           WHEN TO_CHAR(estm_dt,'mi') >= '31' AND TO_CHAR(estm_dt,'mi') <= '59' 
                                THEN estm_dt + NUMTODSINTERVAL(60 - TO_NUMBER(TO_CHAR(estm_dt,'mi')),'MINUTE') 
                           ELSE estm_dt 
                      END) estm_dt  
                    , act_dt
                    , edi_msg_tp_cd
                    , upd_usr_id 
                    , act_sts_cd
                FROM sce_cop_dtl 
               WHERE cop_no   = @[cop_no]
               ) scd, 
               sce_expt_mst sce,
               mdm_activity ma,
                (select BKG_NO,
                MAX(decode (clz_tp_cd, 'F', TO_CHAR(NVL(MNL_SET_DT, SYS_SET_DT), 'YYYY-MM-DD'), '')) AS RAIL_RCV_COFF_FM_DT ,
                MAX(decode (clz_tp_cd, 'O', TO_CHAR(NVL(MNL_SET_DT, SYS_SET_DT), 'YYYY-MM-DD'), '')) AS RAIL_RCV_COFF_TO_DT
                from bkg_clz_tm
                where bkg_no = @[bkg_no]
                and clz_tp_cd in ('F','O')
                GROUP BY BKG_NO) clz
         WHERE sch.cop_no       = scd.cop_no 
           AND scd.cop_no       = sce.cop_no(+)
         --AND scd.cop_grp_seq  = sce.cop_grp_seq(+)
           AND scd.cop_dtl_seq  = sce.cop_dtl_seq(+)
           AND scd.act_cd       = ma.act_cd 
           AND sch.bkg_no       = clz.bkg_no(+)
           AND sch.cop_no       = @[cop_no]
           AND sch.bkg_no       = @[bkg_no]
         GROUP BY scd.cop_no, scd.cop_grp_seq, scd.cop_dtl_seq,scd.VSL_CD,scd.SKD_VOY_NO,scd.SKD_DIR_CD,scd.EDI_MSG_TP_CD,clz.rail_rcv_coff_fm_dt,clz.rail_rcv_coff_to_dt,act_sts_cd
         ORDER BY scd.cop_no, scd.cop_grp_seq, scd.cop_dtl_seq
    )			]]></sql>
			<params>
				<param name="cop_no" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
