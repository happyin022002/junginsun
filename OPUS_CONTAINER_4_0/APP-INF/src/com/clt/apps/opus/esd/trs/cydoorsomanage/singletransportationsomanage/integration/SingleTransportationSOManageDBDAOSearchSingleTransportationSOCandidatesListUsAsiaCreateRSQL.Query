<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SingleTransportationSOManageDBDAOSearchSingleTransportationSOCandidatesListUsAsiaCreateRSQL">
			<desc><![CDATA[SearchSingleTransportationSOCandidatesListUsAsiaCreate]]></desc>
			<sql><![CDATA[
SELECT
/*+ NO_EXPAND */
 CTRL_OFC_CD
,COP_NO
,EQ_NO
,CNTR_TPSZ_CD AS EQ_TPSZ_CD
,COST_ACT_GRP_SEQ
,COST_ACT_GRP_CD
,N1ST_VNDR_SEQ AS VNDR_SEQ
,TRSP_CRR_MOD_CD
,FM_NOD_CD
,FM_NOD_YARD
,TO_NOD_CD
,TO_NOD_YARD
,VIA_NOD_CD
,VIA_NOD_YARD
,DOR_NOD_CD
,DOR_NOD_YARD
,CASE WHEN FM_TS_IND = 'T' OR TO_TS_IND = 'T' THEN 'T'
      WHEN PCTL_IO_BND_CD = 'T'	THEN ''
      ELSE PCTL_IO_BND_CD
 END TRSP_BND_CD
,TRNS_RQST_OFC_CD
,TRNS_RQST_USR_ID
,TRNS_RQST_RSN
,INLND_ROUT_INV_BIL_PATT_CD AS RAIL_CMB_THRU_TP_CD
,SC_NO
,RFA_NO
,INTER_RMK
,TRSP_SO_STS_CD
,MST_LCL_CD
,FM_LOC_CONTI_CD
,BKG_NO
,BKG_RCVDE_TERM_CD
,BL_NO
,BKG_CGO_TP_CD
,CGO_TP_CD
,TRUNKVVD
,SLAN_CD
,POR_CD
,POL_CD
,POD_CD
,DEL_CD
,CMDT_CD
,TO_CHAR(N1ST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') N1ST_NOD_PLN_DT
,TO_CHAR(LST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') LST_NOD_PLN_DT
,TO_CHAR(DOR_NOD_PLN_DT, 'YYYYMMDDHH24MISS') DOR_NOD_PLN_DT
,TRSP_COST_DTL_MOD_CD
,UPLN_SO_FLG
,TRSP_SO_STS_NM
,RAIL_CRE_DT
,RAIL_TO_NOD_CD
,POD_CONTI_CD
,DECODE(TRSP_COST_DTL_MOD_CD, 'DR', SUBSTR(TRO_SEQ, 1, INSTR(TRO_SEQ, '$', 1, 1) - 1)) AS TRO_SEQ
,DECODE(TRSP_COST_DTL_MOD_CD, 'DR', SUBSTR(TRO_SEQ, INSTR(TRO_SEQ, '$', 1, 1) + 1)) AS TRO_SUB_SEQ
FROM (
    SELECT
    -- WHERE 조건에 따른 INDEX 설정 
    #if ($arr_bkgno.size() > 0)
        /*+ INDEX (A XAK1SCE_COP_HDR) */
    #elseif ($arr_cntrno.size() > 0)
        /*+ INDEX (A XAK9SCE_COP_HDR) ORDERED */
    #elseif ($arr_billno.size() > 0)
        /*+ LEADING(C) INDEX (C XUK1BKG_BOOKING) */
    #elseif ($arr_trunkvvd.size() > 0)
        /*+ LEADING(C) INDEX (C XAK2BKG_BOOKING ) */
    #elseif (${contract_no} != '' )
        /*+ LEADING(C) */
    #elseif (${frm_plandate} != '')
        #if (${dateCondition} == 'P')
           
        #elseif (${dateCondition} == 'D')
            /*+ INDEX (A XAK13SCE_COP_HDR ) */
        #elseif (${dateCondition} == 'R')
            /*+ LEADING(B_RAIL_IDX) USE_NL(B_RAIL_IDX RAIL B A C) */
        #end
    #end

      B.CTRL_OFC_CD
    , A.COP_NO 
    , NVL(A.CNTR_NO, ' ') EQ_NO
    , A.CNTR_TPSZ_CD     
    , B.COST_ACT_GRP_SEQ     
    , B.COST_ACT_GRP_CD       
    , B.N1ST_VNDR_SEQ        
    , SUBSTR(B.COST_ACT_GRP_CD,3) TRSP_CRR_MOD_CD
    , SUBSTR(B.N1ST_NOD_CD,1,5)  FM_NOD_CD
    , SUBSTR(B.N1ST_NOD_CD,6)    FM_NOD_YARD
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') TO_NOD_CD    
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') TO_NOD_YARD  
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('VIA', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') VIA_NOD_CD   
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('VIA', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') VIA_NOD_YARD 
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') DOR_NOD_CD   
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') DOR_NOD_YARD 
    , B.PCTL_IO_BND_CD              
    , B.TRNS_RQST_OFC_CD            
    , B.TRNS_RQST_USR_ID            
    , B.TRNS_RQST_RSN               
    , B.INLND_ROUT_INV_BIL_PATT_CD                   
    , C.SC_NO                       
    , C.RFA_NO                      
    , NVL2(B.DELT_USR_ID, 'Candidate Delete :'||B.DELT_USR_ID, '') || NVL2(B.DELT_DT, ' / '||TO_CHAR(B.DELT_DT,'YYYYMMDDHH24MISS'), '') INTER_RMK     
    , B.TRSP_SO_STS_CD 
    , DECODE(A.MST_COP_NO, A.COP_NO, 'P', 'X')   MST_LCL_CD 
    , @[ui_conti_cd] AS FM_LOC_CONTI_CD
    , A.BKG_NO                      
    , DECODE(B.PCTL_IO_BND_CD, 'I',C.DE_TERM_CD, 'O',C.RCV_TERM_CD, '')   BKG_RCVDE_TERM_CD 
    , C.BL_NO 
    , C.BKG_CGO_TP_CD     
    , 'F' CGO_TP_CD     
    , (C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD) TRUNKVVD 
    , C.SLAN_CD           
    , C.POR_CD POR_CD     
    , C.POL_CD POL_CD     
    , C.POD_CD POD_CD     
    , C.DEL_CD DEL_CD     
    , C.CMDT_CD  
    --, TO_CHAR(B.N1ST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') N1ST_NOD_PLN_DT
    , NVL((SELECT  DECODE(DECODE(B.PCTL_COST_MOD_CD,'C','CY','Z','DR',''), 'CY', DECODE(NVL(ACT_STS_MAPG_CD,'XX'), 'OP', ACT_DT, ESTM_DT), ESTM_DT)
                    FROM   SCE_COP_DTL
                    WHERE  COP_NO = A.COP_NO
                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1)||'_D_'
                    AND    NOD_CD = B.N1ST_NOD_CD
                    AND    ROWNUM = 1), B.N1ST_NOD_PLN_DT) N1ST_NOD_PLN_DT

    --, TO_CHAR(B.LST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') AS LST_NOD_PLN_DT
    , NVL((SELECT   ESTM_DT
                    FROM   SCE_COP_DTL
                    WHERE  COP_NO = A.COP_NO
                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1)||'_A_'
                    AND    NOD_CD = TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, NULL)
                    AND    ROWNUM = 1), B.LST_NOD_PLN_DT) LST_NOD_PLN_DT

--    , TO_CHAR(NVL(DECODE(B.PCTL_IO_BND_CD, 'I', A.CFM_APNT_DT, 'O', A.CFM_OB_DOR_ARR_DT),B.DOR_ARR_DT), 'YYYYMMDDHH24MISS') AS DOR_NOD_PLN_DT
    , NVL((SELECT  NVL((SELECT DOR_ARR_DT
                            FROM BKG_TRO_DTL
                           WHERE BKG_NO = D.COP_NO
                             AND IO_BND_CD = B.PCTL_IO_BND_CD
                             AND RTN_TRO_FLG = 'N'
                             AND TRO_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 1)
                             AND TRO_SUB_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 2)
                             AND @[ui_conti_cd] = 'M'
                             AND ROWNUM = 1
                          UNION ALL
                          SELECT ARR_DT
                            FROM BKG_EUR_TRO_DTL
                           WHERE BKG_NO = D.COP_NO
                             AND IO_BND_CD = B.PCTL_IO_BND_CD
                             AND TRO_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 1)
                             AND TRO_SUB_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 2)
                             AND @[ui_conti_cd] <> 'M'
                             AND ROWNUM = 1
					), D.ESTM_DT)
                    FROM   SCE_COP_DTL D
                    WHERE  COP_NO = A.COP_NO
                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1) ||'___'
                    AND    NOD_CD = TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, NULL)
                    AND    ROWNUM = 1), NVL(DECODE(B.PCTL_IO_BND_CD, 'I', A.CFM_APNT_DT, 'O', A.CFM_OB_DOR_ARR_DT),B.DOR_ARR_DT)) DOR_NOD_PLN_DT

    , DECODE(B.PCTL_COST_MOD_CD,'C','CY','Z','DR','') TRSP_COST_DTL_MOD_CD 
    , DECODE(B.PCTL_COST_MOD_CD, '', 'Y', '') UPLN_SO_FLG
    , (SELECT SUBSTR(COMMCODE_PKG.GET_COMDTL_NAME_FNC('CD00286', B.TRSP_SO_STS_CD), 1, 64) FROM DUAL) TRSP_SO_STS_NM

    #if (${frm_plandate} != '' )
        #if (${dateCondition} == 'R' )
            , TO_CHAR(RAIL.LOCL_CRE_DT, 'YYYYMMDDHH24MISS') RAIL_CRE_DT
            , RAIL.TO_NOD_CD RAIL_TO_NOD_CD
        #else
            , NULL RAIL_CRE_DT
            , NULL RAIL_TO_NOD_CD
        #end
    #else
        , NULL RAIL_CRE_DT
        , NULL RAIL_TO_NOD_CD
    #end

    #if (${cydoor_div} == 'DR' )
          -- 함수로 처리하지 않을 경우 plan이 원하는 대로 나오지 않아 함수로 처리
        , TRS_CYDOOR_COMM_PKG.GET_CONTI_CD(C.POD_CD) POD_CONTI_CD -- OUTTER JOIN 밖에서 조회조건으로만 사용
        ,(SELECT #if (${ui_conti_cd} == 'E' )
                   TO_CHAR(X.TRO_SEQ)
                 #else
                   'existence'
                 #end
            FROM TRS_TRSP_SVC_ORD X
           WHERE X.COP_NO                = B.COP_NO
             AND X.TRSP_COST_DTL_MOD_CD  = 'DR'
             AND X.TRSP_BND_CD           = B.PCTL_IO_BND_CD
             AND NVL(X.DELT_FLG, 'N')    = 'N'
             AND ROWNUM = 1
         ) DUP_CHK
    #else
        , NULL POD_CONTI_CD
        , NULL DUP_CHK
    #end
    , TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, @[ui_conti_cd]) TRO_SEQ
    ,(SELECT DECODE(SUBSTR(DTL.ACT_CD, 2, 2) || SUBSTR(DTL.ACT_CD, 5, 2), 'TWDO', 'T', '')
        FROM SCE_COP_DTL DTL
       WHERE DTL.COP_NO = A.COP_NO
         AND DTL.NOD_CD = B.N1ST_NOD_CD
         AND SUBSTR(DTL.ACT_CD, 2, 2) = 'TW'
         AND SUBSTR(DTL.ACT_CD, 5, 2) = 'DO'
         AND ROWNUM =1 ) FM_TS_IND
    ,(SELECT DECODE(SUBSTR(DTL.ACT_CD, 2, 2) || SUBSTR(DTL.ACT_CD, 5, 2), 'TWAD', 'T', '')
        FROM SCE_COP_DTL DTL
       WHERE DTL.COP_NO = A.COP_NO
         AND DTL.NOD_CD = B.N2ND_NOD_CD
         AND SUBSTR(DTL.ACT_CD, 2, 2) = 'TW'
         AND SUBSTR(DTL.ACT_CD, 5, 2) = 'AD'
         AND ROWNUM =1 ) TO_TS_IND
    FROM SCE_COP_HDR A 
       , SCE_PLN_SO_LIST B 
       , BKG_BOOKING C 
    -- US RAIL Creation date로 조회시 table scan을 하지않고 index scan을 할 수 할 수 있도록 rowid를 사용하여 sql 작성
    #if (${frm_plandate} != '' )
        #if (${dateCondition} == 'R' )
            ,( 
            SELECT B_RAIL_IDX.COP_NO, 
                    (SELECT /*+ INDEX(RAIL XAK16TRS_TRSP_RAIL_BIL_ORD ) */ 
                            RAIL.ROWID 
                       FROM TRS_TRSP_RAIL_BIL_ORD RAIL 
                      WHERE B_RAIL_IDX.COP_NO = RAIL.COP_NO 
                        AND RAIL.LOCL_CRE_DT BETWEEN TO_DATE(@[frm_plandate]||'000000','YYYYMMDDHH24MISS') AND TO_DATE(@[to_plandate]||'235959','YYYYMMDDHH24MISS') 
						            AND RAIL.TO_NOD_CD = B_RAIL_IDX.N1ST_NOD_CD
                        AND ROWNUM <= 1 ) AS RAIL_ROWID 
              FROM  SCE_PLN_SO_LIST B_RAIL_IDX 
             WHERE 1 = 1

             #if ($arr_so_office.size() > 0) 
                 AND B_RAIL_IDX.CTRL_OFC_CD in (
                 #foreach( ${key} in ${arr_so_office}) 
                   #if($velocityCount < $arr_so_office.size()) 
                     '$key', 
                   #else 
                     '$key' 
                   #end 
                 #end
                 )
             #end

            -- Provision 체크여부 체크일 경우 'UD' (첫번째)
            #if (${TroUnConfirmDoor} == 'UD' )
                 AND B_RAIL_IDX.TRSP_SO_STS_CD IN ('P', 'N')
            #else
                 AND B_RAIL_IDX.TRSP_SO_STS_CD = 'P'
            #end
            
            -- CY , DOOR 구분
            #if (${cydoor_div} == 'DR' )
                 AND B_RAIL_IDX.PCTL_COST_MOD_CD = 'Z'
            #else
                 AND B_RAIL_IDX.PCTL_COST_MOD_CD <> 'Z'
            #end
            ) B_RAIL_IDX
            ,TRS_TRSP_RAIL_BIL_ORD RAIL
        #end
    #end

    WHERE A.COP_NO = B.COP_NO
      AND A.COP_STS_CD <> 'M'
      AND A.COP_STS_CD <> 'O'
      AND A.COP_STS_CD <> 'X'
    #if (${frm_plandate} != '' )
        #if (${dateCondition} == 'D' )
            AND A.CFM_APNT_DT BETWEEN TO_DATE(@[frm_plandate],'YYYYMMDD') AND TO_DATE(@[to_plandate],'YYYYMMDD')+0.99999
        #end
    #end

      AND A.BKG_NO = C.BKG_NO
      AND NVL2(@[stop_off_flg], NVL2(C.STOP_OFF_LOC_CD, 'Y', 'N'), 'X') =  NVL(@[stop_off_flg], 'X')

    #if ($arr_so_office.size() > 0) 
        AND B.CTRL_OFC_CD in (
        #foreach( ${key} in ${arr_so_office}) 
          #if($velocityCount < $arr_so_office.size()) 
            '$key', 
          #else 
            '$key' 
          #end 
        #end
        )
    #end

    #if (${TroUnConfirmDoor} == 'UD' )
        -- Provision 체크여부 체크일 경우 'UD' (첫번째)
        AND B.TRSP_SO_STS_CD IN ('P', 'N')
    #else
        AND B.TRSP_SO_STS_CD = 'P'
    #end

    #if (${cydoor_div} == 'DR' )
        -- CY , DOOR 구분 
        AND B.PCTL_COST_MOD_CD = 'Z'
    #else
        AND B.PCTL_COST_MOD_CD = 'C'
    #end

    #if (${frm_plandate} != '' )
        -- Date 구분에 따라 기간별 조회를 한다.
        #if (${dateCondition} == 'P' )
            AND B.N1ST_NOD_PLN_DT BETWEEN TO_DATE(@[frm_plandate],'YYYYMMDD') AND TO_DATE(@[to_plandate],'YYYYMMDD')+0.99999
        #elseif (${dateCondition} == 'R' ) --테이블 스캔을 피하고 index를 원하는 대로 태우기 위하여 B_RAIL_IDX 라는 alias로 SCE_PLN_SO_LIST 를 한번 더 사용하였다.
            AND B.COP_NO    = B_RAIL_IDX.COP_NO
            AND RAIL.ROWID = B_RAIL_IDX.RAIL_ROWID 
            AND RAIL_ROWID IS NOT NULL 
        #end
    #end

    #if ($arr_bkgno.size() > 0) 
        -- Booking no로 조회
        AND A.BKG_NO in (
        #foreach( ${key} in ${arr_bkgno}) 
          #if($velocityCount < $arr_bkgno.size()) 
            '$key', 
          #else 
            '$key' 
          #end 
        #end
        )
    #end

    #if ($arr_billno.size() > 0) 
        -- BL NO로 조회
        AND C.BL_NO in (
        #foreach( ${key} in ${arr_billno}) 
          #if($velocityCount < $arr_billno.size()) 
            '$key', 
          #else 
            '$key' 
          #end 
        #end
        )
    #end

    #if ($arr_cntrno.size() > 0) 
        -- Container no로 조회
        AND A.CNTR_NO in (
        #foreach( ${key} in ${arr_cntrno}) 
          #if($velocityCount < $arr_cntrno.size()) 
            '$key', 
          #else 
            '$key' 
          #end 
        #end
      )
    #end

    #if ($arr_trunkvvd.size() > 0) 
        -- Trunk VVD로 조회 
        AND (C.VSL_CD,C.SKD_VOY_NO,C.SKD_DIR_CD) in (
        #foreach( ${key} in ${arr_trunkvvd}) 
          #if($velocityCount < $arr_trunkvvd.size()) 
            (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1)),
          #else 
            (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1))
          #end 
        #end
    )
    #end
		AND C.VSL_CD <> 'COXX'

    #if (${contract_no} != '' )
        -- Contract No로 조회 
        #if (${contract_tp_cd} == 'S' )
            AND C.SC_NO IN (@[contract_no])
        #else
            AND C.RFA_NO IN (@[contract_no])
        #end
    #end

    #if (${bound} != 'ALL')
        -- Bound로 조회
        AND B.PCTL_IO_BND_CD = @[bound]
    #end

    #if (${transmode} != 'ALL')
        -- Trans Mode로 조회
        AND SUBSTR(B.COST_ACT_GRP_CD, 3) = @[transmode]
    #end

    #if (${ui_conti_cd} == 'M' )
        -- Mexico는 미주 US RAIL에서 조회하지 않고 CY/DOOR에서 조회한다. (INLND_ROUT_INV_BIL_PATT_CD 값은 미주 Rail만 존재한다.)
        AND B.INLND_ROUT_INV_BIL_PATT_CD IS NULL
        --AND NOT EXISTS (SELECT 1 FROM MDM_COUNTRY WHERE CNT_CD != 'MX' AND MDM_LOC_FM.CONTI_CD ='M' AND B.TRSP_MOD_CD = 'RD' AND MDM_LOC_FM.CNT_CD = CNT_CD)
    #end

    #if ($arrCopSeq.size() > 0) 
        -- Trunk VVD로 조회 
        AND (B.COP_NO, B.COST_ACT_GRP_SEQ) in (
        #foreach( ${key} in ${arrCopSeq}) 
          #if($velocityCount < $arrCopSeq.size()) 
            (SUBSTR('$key', 1, INSTR('$key', '$', 1, 1) -1), SUBSTR('$key', INSTR('$key', '$', 1, 1)+1, LENGTH('$key'))),
          #else 
            (SUBSTR('$key', 1, INSTR('$key', '$', 1, 1) -1), SUBSTR('$key', INSTR('$key', '$', 1, 1)+1, LENGTH('$key')))
          #end 
        #end
    )
    #end

	-- Port로 조회 
	#if (${portio} == 'I')
  		AND C.POD_CD = @[portcd]
	#elseif (${portio} == 'O')
		AND C.POL_CD = @[portcd]
	#end

) AA WHERE 1=1
AND AA.MST_LCL_CD = 'P'
#if (${costmode} == 'CY')
    -- Cost Mode로 조회 
    AND (SUBSTR(AA.COST_ACT_GRP_CD, 2, 1) = 'Y' OR AA.COST_ACT_GRP_CD in ('POWD', 'PRWD')) 
    AND AA.FM_NOD_CD <> AA.TO_NOD_CD
#elseif (${costmode} == 'DR')
    AND SUBSTR(AA.COST_ACT_GRP_CD, 2, 1) = 'D'
#elseif (${costmode} == 'LS')
    AND SUBSTR(AA.COST_ACT_GRP_CD, 1, 2) IN ('IY', 'OY') AND AA.FM_NOD_CD = AA.TO_NOD_CD
#elseif (${costmode} == 'TS')
    AND SUBSTR(AA.COST_ACT_GRP_CD, 1, 1) IN ('T', 'P')   AND AA.FM_NOD_CD = AA.TO_NOD_CD
#end

#if (${frmnode} != '')
    -- From Node의 Location으로 조회
    AND AA.FM_NOD_CD = @[frmnode]
#end

#if (${frmnodeyard} != '')
    -- From Node의 Yard로 조회 
    AND AA.FM_NOD_YARD = @[frmnodeyard]
#end

-- Multi From Node로 조회
#if ($arr_fmnode.size() > 0) 
    AND AA.FM_NOD_CD||AA.FM_NOD_YARD in (
    #foreach( ${key} in ${arr_fmnode}) 
	    #if($velocityCount < $arr_fmnode.size()) 
	        '$key', 
	    #else 
            '$key' 
	    #end 
    #end
    )
#end

#if (${vianode} != '')
    -- Via Node의 Location으로 조회 
    AND AA.VIA_NOD_CD = @[vianode]
#end
 
#if (${vianodeyard} != '')
    -- Via Node의 Yard로 조회
    AND AA.VIA_NOD_YARD = @[vianodeyard]
#end

#if (${tonode} != '')
    -- To Node의 Location으로 조회
    AND AA.TO_NOD_CD = @[tonode]
#end

#if (${tonodeyard} != '')
    -- To Node의 Yard로 조회
    AND AA.TO_NOD_YARD = @[tonodeyard]
#end

-- Multi To Node로 조회
#if ($arr_tonode.size() > 0) 
    AND AA.TO_NOD_CD||AA.TO_NOD_YARD in (
    #foreach( ${key} in ${arr_tonode}) 
	    #if($velocityCount < $arr_tonode.size()) 
	        '$key', 
	    #else 
            '$key' 
	    #end 
    #end
    )
#end

#if (${dorloc} != '')
    -- Door Node의 Location으로 조회
    AND AA.DOR_NOD_CD = @[dorloc]
#end

#if (${dorlocyard} != '')
    -- Door Node의 Yard로 조회 
    AND AA.DOR_NOD_YARD = @[dorlocyard]
#end

#if ($arr_feeder_vvd.size() > 0) 
    -- Feeder VVD로 조회
    #if (${feeder_vvd_tp} == 'I' )
        AND TRS_CYDOOR_COMM_PKG.GET_BKG_VVD(@[feeder_vvd_tp], AA.BKG_NO, AA.FM_NOD_CD) IN (
        #foreach( ${key} in ${arr_feeder_vvd}) 
          #if($velocityCount < $arr_feeder_vvd.size())
                '$key',  
          #else 
            '$key'
          #end 
        #end
    #elseif (${feeder_vvd_tp} == 'O' )
        AND TRS_CYDOOR_COMM_PKG.GET_BKG_VVD(@[feeder_vvd_tp], AA.BKG_NO, DECODE(AA.PCTL_IO_BND_CD,'O',AA.TO_NOD_CD,AA.FM_NOD_CD)) IN (
        #foreach( ${key} in ${arr_feeder_vvd}) 
          #if($velocityCount < $arr_feeder_vvd.size())
                '$key',  
          #else 
            '$key'
          #end 
        #end
    #elseif (${feeder_vvd_tp} == 'A' )
        AND 
        ((
        TRS_CYDOOR_COMM_PKG.GET_BKG_VVD('I', AA.BKG_NO, AA.FM_NOD_CD) IN (
        #foreach( ${key} in ${arr_feeder_vvd}) 
          #if($velocityCount < $arr_feeder_vvd.size())
                '$key',  
          #else 
            '$key'
          #end 
        #end
        )) OR (
        TRS_CYDOOR_COMM_PKG.GET_BKG_VVD('O', AA.BKG_NO, DECODE(AA.PCTL_IO_BND_CD,'O',AA.TO_NOD_CD,AA.FM_NOD_CD)) IN (
        #foreach( ${key} in ${arr_feeder_vvd}) 
          #if($velocityCount < $arr_feeder_vvd.size())
                '$key',  
          #else 
            '$key'
          #end 
        #end        
        ))
    #end
    )
#end

#if (${TroUnConfirmDoor} == 'UD')
    -- Provision 체크여부 체크일 경우 'UD' (두번째)
    AND ((AA.TRSP_COST_DTL_MOD_CD = 'CY' AND AA.EQ_NO <> 'COMU0000000')  OR (AA.TRSP_COST_DTL_MOD_CD = 'DR'))
    AND TRO_SEQ IS NULL
#else
    AND (
          (AA.TRSP_COST_DTL_MOD_CD = 'CY' AND DECODE(@[ui_conti_cd], 'A', DECODE(AA.PCTL_IO_BND_CD, 'O', '00000000000', 'T', '00000000000', AA.EQ_NO), AA.EQ_NO) <> 'COMU0000000')  OR 
          (AA.PCTL_IO_BND_CD = 'I' AND (AA.TRSP_COST_DTL_MOD_CD = 'DR' AND (AA.TRO_SEQ IS NOT NULL OR (AA.PCTL_IO_BND_CD = 'I' AND AA.POD_CONTI_CD = 'M') OR AA.FM_LOC_CONTI_CD = 'A')) AND AA.EQ_NO <> 'COMU0000000') OR
          (AA.PCTL_IO_BND_CD = 'O' AND (AA.TRSP_COST_DTL_MOD_CD = 'DR' AND (AA.TRO_SEQ IS NOT NULL OR (AA.PCTL_IO_BND_CD = 'I' AND AA.POD_CONTI_CD = 'M') OR AA.FM_LOC_CONTI_CD = 'A')))
        )
#end

#if ($arr_zip_code.size() > 0) 
    AND (SELECT DTL.DOR_PST_NO
           FROM BKG_TRO DTL
          WHERE DTL.BKG_NO      = AA.BKG_NO
            AND DTL.IO_BND_CD   = AA.PCTL_IO_BND_CD
            AND DTL.TRO_SEQ     = TO_NUMBER(SUBSTR(AA.TRO_SEQ, 1, INSTR(AA.TRO_SEQ, '$', 1, 1) - 1))
            ) IN (
            #foreach( ${key} in ${arr_zip_code}) 
              #if($velocityCount < $arr_zip_code.size())
                    '$key',  
              #else 
                '$key'
              #end 
            #end
        )
#end

#if (${cydoor_div} == 'DR' )
    #if (${ui_conti_cd} == 'E' )
      AND (AA.DUP_CHK IS NULL OR SUBSTR(TRO_SEQ, 1, INSTR(TRO_SEQ, '$', 1, 1) - 1) <> AA.DUP_CHK)
    #else
      AND AA.DUP_CHK IS NULL
    #end
#end

#if (${dateCondition} == 'D')
---------------------------------------------------------
-- DOOR DATE로 조회시에는 UNION을 붙인다.
---------------------------------------------------------
UNION
SELECT
/*+ NO_EXPAND */
 CTRL_OFC_CD
,COP_NO
,EQ_NO
,CNTR_TPSZ_CD AS EQ_TPSZ_CD
,COST_ACT_GRP_SEQ
,COST_ACT_GRP_CD
,N1ST_VNDR_SEQ AS VNDR_SEQ
,TRSP_CRR_MOD_CD
,FM_NOD_CD
,FM_NOD_YARD
,TO_NOD_CD
,TO_NOD_YARD
,VIA_NOD_CD
,VIA_NOD_YARD
,DOR_NOD_CD
,DOR_NOD_YARD
,DECODE(TS_IND, 'T', 'T', DECODE(PCTL_IO_BND_CD, 'T', '', PCTL_IO_BND_CD)) AS TRSP_BND_CD
,TRNS_RQST_OFC_CD
,TRNS_RQST_USR_ID
,TRNS_RQST_RSN
,INLND_ROUT_INV_BIL_PATT_CD AS RAIL_CMB_THRU_TP_CD
,SC_NO
,RFA_NO
,INTER_RMK
,TRSP_SO_STS_CD
,MST_LCL_CD
,FM_LOC_CONTI_CD
,BKG_NO
,BKG_RCVDE_TERM_CD
,BL_NO
,BKG_CGO_TP_CD
,CGO_TP_CD
,TRUNKVVD
,SLAN_CD
,POR_CD
,POL_CD
,POD_CD
,DEL_CD
,CMDT_CD
,TO_CHAR(N1ST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') N1ST_NOD_PLN_DT
,TO_CHAR(LST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') LST_NOD_PLN_DT
,TO_CHAR(DOR_NOD_PLN_DT, 'YYYYMMDDHH24MISS') DOR_NOD_PLN_DT
,TRSP_COST_DTL_MOD_CD
,UPLN_SO_FLG
,TRSP_SO_STS_NM
,RAIL_CRE_DT
,RAIL_TO_NOD_CD
,POD_CONTI_CD
,DECODE(TRSP_COST_DTL_MOD_CD, 'DR', SUBSTR(TRO_SEQ, 1, INSTR(TRO_SEQ, '$', 1, 1) - 1)) AS TRO_SEQ
,DECODE(TRSP_COST_DTL_MOD_CD, 'DR', SUBSTR(TRO_SEQ, INSTR(TRO_SEQ, '$', 1, 1) + 1)) AS TRO_SUB_SEQ
FROM (
    SELECT
    -- WHERE 조건에 따른 INDEX 설정 
    #if ($arr_bkgno.size() > 0)
        /*+ INDEX (A XAK1SCE_COP_HDR) */
    #elseif ($arr_cntrno.size() > 0)
        /*+ INDEX (A XAK9SCE_COP_HDR) ORDERED */
    #elseif ($arr_billno.size() > 0)
        /*+ LEADING(C) INDEX (C XUK1BKG_BOOKING) */
    #elseif ($arr_trunkvvd.size() > 0)
        /*+ LEADING(C) INDEX (C XAK2BKG_BOOKING ) */
    #elseif (${contract_no} != '' )
        /*+ LEADING(C) */
    #elseif (${frm_plandate} != '')
        #if (${dateCondition} == 'P')
           
        #elseif (${dateCondition} == 'D')
            /*+ INDEX (A XAK7SCE_COP_HDR ) */
        #elseif (${dateCondition} == 'R')
            /*+ LEADING(B_RAIL_IDX) USE_NL(B_RAIL_IDX RAIL B A C) */
        #end
    #end

      B.CTRL_OFC_CD
    , A.COP_NO 
    , NVL(A.CNTR_NO, ' ') EQ_NO
    , A.CNTR_TPSZ_CD     
    , B.COST_ACT_GRP_SEQ     
    , B.COST_ACT_GRP_CD       
    , B.N1ST_VNDR_SEQ        
    , SUBSTR(B.COST_ACT_GRP_CD,3) TRSP_CRR_MOD_CD
    , SUBSTR(B.N1ST_NOD_CD,1,5)  FM_NOD_CD
    , SUBSTR(B.N1ST_NOD_CD,6)    FM_NOD_YARD
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') TO_NOD_CD    
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') TO_NOD_YARD  
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('VIA', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') VIA_NOD_CD   
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('VIA', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') VIA_NOD_YARD 
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') DOR_NOD_CD   
    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') DOR_NOD_YARD 
    , B.PCTL_IO_BND_CD              
    , B.TRNS_RQST_OFC_CD            
    , B.TRNS_RQST_USR_ID            
    , B.TRNS_RQST_RSN               
    , B.INLND_ROUT_INV_BIL_PATT_CD                   
    , C.SC_NO                       
    , C.RFA_NO                      
    , NVL2(B.DELT_USR_ID, 'Candidate Delete :'||B.DELT_USR_ID, '') || NVL2(B.DELT_DT, ' / '||TO_CHAR(B.DELT_DT,'YYYYMMDDHH24MISS'), '') INTER_RMK     
    , B.TRSP_SO_STS_CD 
    , DECODE(A.MST_COP_NO, A.COP_NO, 'P', 'X')   MST_LCL_CD 
    , @[ui_conti_cd] AS FM_LOC_CONTI_CD
    , A.BKG_NO                      
    , DECODE(B.PCTL_IO_BND_CD, 'I',C.DE_TERM_CD, 'O',C.RCV_TERM_CD, '')   BKG_RCVDE_TERM_CD 
    , C.BL_NO 
    , C.BKG_CGO_TP_CD     
    , 'F' CGO_TP_CD     
    , (C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD) TRUNKVVD 
    , C.SLAN_CD           
    , C.POR_CD POR_CD     
    , C.POL_CD POL_CD     
    , C.POD_CD POD_CD     
    , C.DEL_CD DEL_CD     
    , C.CMDT_CD   
    --, TO_CHAR(B.N1ST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') N1ST_NOD_PLN_DT
    , NVL((SELECT  DECODE(DECODE(B.PCTL_COST_MOD_CD,'C','CY','Z','DR',''), 'CY', DECODE(NVL(ACT_STS_MAPG_CD,'XX'), 'OP', ACT_DT, ESTM_DT), ESTM_DT)
                    FROM   SCE_COP_DTL
                    WHERE  COP_NO = A.COP_NO
                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1)||'_D_'
                    AND    NOD_CD = B.N1ST_NOD_CD
                    AND    ROWNUM = 1), B.N1ST_NOD_PLN_DT) N1ST_NOD_PLN_DT

    --, TO_CHAR(B.LST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') AS LST_NOD_PLN_DT
    , NVL((SELECT  ESTM_DT
                    FROM   SCE_COP_DTL
                    WHERE  COP_NO = A.COP_NO
                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1)||'_A_'
                    AND    NOD_CD = TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE')
                    AND    ROWNUM = 1), B.LST_NOD_PLN_DT) LST_NOD_PLN_DT

--    , TO_CHAR(NVL(DECODE(B.PCTL_IO_BND_CD, 'I', A.CFM_APNT_DT, 'O', A.CFM_OB_DOR_ARR_DT),B.DOR_ARR_DT), 'YYYYMMDDHH24MISS') AS DOR_NOD_PLN_DT
    , NVL((SELECT  NVL((SELECT DOR_ARR_DT
                            FROM BKG_TRO_DTL
                           WHERE BKG_NO = D.COP_NO
                             AND IO_BND_CD = B.PCTL_IO_BND_CD
                             AND RTN_TRO_FLG = 'N'
                             AND TRO_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 1)
                             AND TRO_SUB_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 2)
                             AND @[ui_conti_cd] = 'M'
							 AND ROWNUM = 1
                          UNION ALL
                          SELECT ARR_DT
                            FROM BKG_EUR_TRO_DTL
                           WHERE BKG_NO = D.COP_NO
                             AND IO_BND_CD = B.PCTL_IO_BND_CD
                             AND TRO_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 1)
                             AND TRO_SUB_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 2)
                             AND @[ui_conti_cd] <> 'M'
							 AND ROWNUM = 1
						), D.ESTM_DT)
                    FROM   SCE_COP_DTL D
                    WHERE  COP_NO = A.COP_NO
                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1)||'___'
                    AND    NOD_CD = TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE')
                    AND    ROWNUM = 1), NVL(DECODE(B.PCTL_IO_BND_CD, 'I', A.CFM_APNT_DT, 'O', A.CFM_OB_DOR_ARR_DT),B.DOR_ARR_DT)) DOR_NOD_PLN_DT
    , DECODE(B.PCTL_COST_MOD_CD,'C','CY','Z','DR','') TRSP_COST_DTL_MOD_CD 
    , DECODE(B.PCTL_COST_MOD_CD, '', 'Y', '') UPLN_SO_FLG  -- PCTL_COST_MOD_CD 가 NULL 인 경우는 Unplaned S/O만 해당되므로 Planed는 모두 ''
    , (SELECT SUBSTR(COMMCODE_PKG.GET_COMDTL_NAME_FNC('CD00286', B.TRSP_SO_STS_CD), 1, 64) FROM DUAL) TRSP_SO_STS_NM  -- DUAL 테이블을 사용하면 동일한 데이타는 한번만 조회하게 된다. SUBSTR을 사용하지 않았을 경우 기본 4000byte를 사용하게 된다.

    #if (${frm_plandate} != '' )
        #if (${dateCondition} == 'R' )
            , TO_CHAR(RAIL.LOCL_CRE_DT, 'YYYYMMDDHH24MISS') RAIL_CRE_DT
            , RAIL.TO_NOD_CD RAIL_TO_NOD_CD
        #else
            , NULL RAIL_CRE_DT
            , NULL RAIL_TO_NOD_CD
        #end
    #else
        , NULL RAIL_CRE_DT
        , NULL RAIL_TO_NOD_CD
    #end

    #if (${cydoor_div} == 'DR' )
          -- 함수로 처리하지 않을 경우 plan이 원하는 대로 나오지 않아 함수로 처리
        , TRS_CYDOOR_COMM_PKG.GET_CONTI_CD(C.POD_CD) POD_CONTI_CD -- OUTTER JOIN 밖에서 조회조건으로만 사용
        ,(SELECT #if (${ui_conti_cd} == 'E' )
                   TO_CHAR(X.TRO_SEQ)
                 #else
                   'existence'
                 #end
            FROM TRS_TRSP_SVC_ORD X
           WHERE X.COP_NO                = B.COP_NO
             AND X.TRSP_COST_DTL_MOD_CD  = 'DR'
             AND X.TRSP_BND_CD           = B.PCTL_IO_BND_CD
             AND NVL(X.DELT_FLG, 'N')    = 'N'
             AND ROWNUM = 1
         ) DUP_CHK
    #else
        , NULL POD_CONTI_CD
        , NULL DUP_CHK
    #end
    , TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, @[ui_conti_cd]) TRO_SEQ
    ,(SELECT DECODE(SUBSTR(DTL.ACT_CD, 2, 2) || SUBSTR(DTL.ACT_CD, 5, 2), 'TWDO', 'T', '')
    	FROM SCE_COP_DTL DTL
       WHERE DTL.COP_NO = A.COP_NO
       	AND DTL.NOD_CD = B.N1ST_NOD_CD
        AND SUBSTR(DTL.ACT_CD, 2, 2) = 'TW'
        AND SUBSTR(DTL.ACT_CD, 5, 2) = 'DO'
        AND ROWNUM =1 
	  ) TS_IND
    FROM SCE_COP_HDR A 
       , SCE_PLN_SO_LIST B 
       , BKG_BOOKING C 
    -- US RAIL Creation date로 조회시 table scan을 하지않고 index scan을 할 수 할 수 있도록 rowid를 사용하여 sql 작성
    #if (${frm_plandate} != '' )
        #if (${dateCondition} == 'R' )
            ,( 
            SELECT B_RAIL_IDX.COP_NO, 
                    (SELECT /*+ INDEX(RAIL XAK16TRS_TRSP_RAIL_BIL_ORD ) */ 
                            RAIL.ROWID 
                       FROM TRS_TRSP_RAIL_BIL_ORD RAIL 
                      WHERE B_RAIL_IDX.COP_NO = RAIL.COP_NO 
                        AND RAIL.LOCL_CRE_DT BETWEEN TO_DATE(@[frm_plandate]||'000000','YYYYMMDDHH24MISS') AND TO_DATE(@[to_plandate]||'235959','YYYYMMDDHH24MISS') 
						            AND RAIL.TO_NOD_CD = B_RAIL_IDX.N1ST_NOD_CD
                        AND ROWNUM <= 1 ) AS RAIL_ROWID 
              FROM  SCE_PLN_SO_LIST B_RAIL_IDX 
             WHERE 1 = 1

             #if ($arr_so_office.size() > 0) 
                 AND B_RAIL_IDX.CTRL_OFC_CD in (
                 #foreach( ${key} in ${arr_so_office}) 
                   #if($velocityCount < $arr_so_office.size()) 
                     '$key', 
                   #else 
                     '$key' 
                   #end 
                 #end
                 )
             #end

            -- Provision 체크여부 체크일 경우 'UD' (첫번째)
            #if (${TroUnConfirmDoor} == 'UD' )
                 AND B_RAIL_IDX.TRSP_SO_STS_CD IN ('P', 'N')
            #else
                 AND B_RAIL_IDX.TRSP_SO_STS_CD = 'P'
            #end
            
            -- CY , DOOR 구분
            #if (${cydoor_div} == 'DR' )
                 AND B_RAIL_IDX.PCTL_COST_MOD_CD = 'Z'
            #else
                 AND B_RAIL_IDX.PCTL_COST_MOD_CD <> 'Z'
            #end
            ) B_RAIL_IDX
            ,TRS_TRSP_RAIL_BIL_ORD RAIL
        #end
    #end

    WHERE A.COP_NO = B.COP_NO
      AND A.COP_STS_CD <> 'M'
      AND A.COP_STS_CD <> 'O'
      AND A.COP_STS_CD <> 'X'
    #if (${frm_plandate} != '' )
        #if (${dateCondition} == 'D' )
            AND A.CFM_OB_DOR_ARR_DT BETWEEN TO_DATE(@[frm_plandate],'YYYYMMDD') AND TO_DATE(@[to_plandate],'YYYYMMDD')+0.99999
        #end
    #end

      AND A.BKG_NO = C.BKG_NO
	  AND NVL2(@[stop_off_flg], NVL2(C.STOP_OFF_LOC_CD, 'Y', 'N'), 'X') = NVL(@[stop_off_flg], 'X')

    #if ($arr_so_office.size() > 0) 
        AND B.CTRL_OFC_CD in (
        #foreach( ${key} in ${arr_so_office}) 
          #if($velocityCount < $arr_so_office.size()) 
            '$key', 
          #else 
            '$key' 
          #end 
        #end
        )
    #end

    #if (${TroUnConfirmDoor} == 'UD' )
        -- Provision 체크여부 체크일 경우 'UD' (첫번째)
        AND B.TRSP_SO_STS_CD IN ('P', 'N')
    #else
        AND B.TRSP_SO_STS_CD = 'P'
    #end

    #if (${cydoor_div} == 'DR' )
        -- CY , DOOR 구분 
        AND B.PCTL_COST_MOD_CD = 'Z'
    #else
        AND B.PCTL_COST_MOD_CD = 'C'
    #end

    #if (${frm_plandate} != '' )
        -- Date 구분에 따라 기간별 조회를 한다.
        #if (${dateCondition} == 'P' )
            AND B.N1ST_NOD_PLN_DT BETWEEN TO_DATE(@[frm_plandate],'YYYYMMDD') AND TO_DATE(@[to_plandate],'YYYYMMDD')+0.99999
        #elseif (${dateCondition} == 'R' ) --테이블 스캔을 피하고 index를 원하는 대로 태우기 위하여 B_RAIL_IDX 라는 alias로 SCE_PLN_SO_LIST 를 한번 더 사용하였다.
            AND B.COP_NO    = B_RAIL_IDX.COP_NO
            AND RAIL.ROWID = B_RAIL_IDX.RAIL_ROWID 
            AND RAIL_ROWID IS NOT NULL 
        #end
    #end

    #if ($arr_bkgno.size() > 0) 
        -- Booking no로 조회
        AND A.BKG_NO in (
        #foreach( ${key} in ${arr_bkgno}) 
          #if($velocityCount < $arr_bkgno.size()) 
            '$key', 
          #else 
            '$key' 
          #end 
        #end
        )
    #end

    #if ($arr_billno.size() > 0) 
        -- BL NO로 조회
        AND C.BL_NO in (
        #foreach( ${key} in ${arr_billno}) 
          #if($velocityCount < $arr_billno.size()) 
            '$key', 
          #else 
            '$key' 
          #end 
        #end
        )
    #end

    #if ($arr_cntrno.size() > 0) 
        -- Container no로 조회
        AND A.CNTR_NO in (
        #foreach( ${key} in ${arr_cntrno}) 
          #if($velocityCount < $arr_cntrno.size()) 
            '$key', 
          #else 
            '$key' 
          #end 
        #end
      )
    #end

    #if ($arr_trunkvvd.size() > 0) 
        -- Trunk VVD로 조회 
        AND (C.VSL_CD,C.SKD_VOY_NO,C.SKD_DIR_CD) in (
        #foreach( ${key} in ${arr_trunkvvd}) 
          #if($velocityCount < $arr_trunkvvd.size()) 
            (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1)),
          #else 
            (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1))
          #end 
        #end
    )
    #end
		AND C.VSL_CD <> 'COXX'
    #if (${contract_no} != '' )
        -- Contract No로 조회 
        #if (${contract_tp_cd} == 'S' )
            AND C.SC_NO IN (@[contract_no])
        #else
            AND C.RFA_NO IN (@[contract_no])
        #end
    #end

    #if (${bound} != 'ALL' )
        -- Bound로 조회
        AND B.PCTL_IO_BND_CD = @[bound]
    #end

    #if (${transmode} != 'ALL' )
        -- Trans Mode로 조회
        AND SUBSTR(B.COST_ACT_GRP_CD, 3) = @[transmode]
    #end

    #if (${ui_conti_cd} == 'M' )
        -- Mexico는 미주 US RAIL에서 조회하지 않고 CY/DOOR에서 조회한다. (INLND_ROUT_INV_BIL_PATT_CD 값은 미주 Rail만 존재한다.)
        AND B.INLND_ROUT_INV_BIL_PATT_CD IS NULL
        --AND NOT EXISTS (SELECT 1 FROM MDM_COUNTRY WHERE CNT_CD != 'MX' AND MDM_LOC_FM.CONTI_CD ='M' AND B.TRSP_MOD_CD = 'RD' AND MDM_LOC_FM.CNT_CD = CNT_CD)
    #end

	-- Port로 조회 
	#if (${portio} == 'I')
  		AND C.POD_CD = @[portcd]
	#elseif (${portio} == 'O')
		AND C.POL_CD = @[portcd]
	#end

) AA WHERE 1=1
AND AA.MST_LCL_CD = 'P'
#if (${costmode} == 'CY')
    -- Cost Mode로 조회 
    AND (SUBSTR(AA.COST_ACT_GRP_CD, 2, 1) = 'Y' OR AA.COST_ACT_GRP_CD in ('POWD', 'PRWD')) 
    AND AA.FM_NOD_CD <> AA.TO_NOD_CD
#elseif (${costmode} == 'DR')
    AND SUBSTR(AA.COST_ACT_GRP_CD, 2, 1) = 'D'
#elseif (${costmode} == 'LS')
    AND SUBSTR(AA.COST_ACT_GRP_CD, 1, 2) IN ('IY', 'OY') AND AA.FM_NOD_CD = AA.TO_NOD_CD
#elseif (${costmode} == 'TS')
    AND SUBSTR(AA.COST_ACT_GRP_CD, 1, 1) IN ('T', 'P')   AND AA.FM_NOD_CD = AA.TO_NOD_CD
#end

#if (${frmnode} != '')
    -- From Node의 Location으로 조회
    AND AA.FM_NOD_CD = @[frmnode]
#end

#if (${frmnodeyard} != '')
    -- From Node의 Yard로 조회 
    AND AA.FM_NOD_YARD = @[frmnodeyard]
#end

-- Multi From Node로 조회
#if ($arr_fmnode.size() > 0) 
    AND AA.FM_NOD_CD||AA.FM_NOD_YARD in (
    #foreach( ${key} in ${arr_fmnode}) 
	    #if($velocityCount < $arr_fmnode.size()) 
	        '$key', 
	    #else 
            '$key' 
	    #end 
    #end
    )
#end

#if (${vianode} != '')
    -- Via Node의 Location으로 조회 
    AND AA.VIA_NOD_CD = @[vianode]
#end
 
#if (${vianodeyard} != '')
    -- Via Node의 Yard로 조회
    AND AA.VIA_NOD_YARD = @[vianodeyard]
#end

#if (${tonode} != '')
    -- To Node의 Location으로 조회
    AND AA.TO_NOD_CD = @[tonode]
#end

#if (${tonodeyard} != '')
    -- To Node의 Yard로 조회
    AND AA.TO_NOD_YARD = @[tonodeyard]
#end

-- Multi To Node로 조회
#if ($arr_tonode.size() > 0) 
    AND AA.TO_NOD_CD||AA.TO_NOD_YARD in (
    #foreach( ${key} in ${arr_tonode}) 
	    #if($velocityCount < $arr_tonode.size()) 
	        '$key', 
	    #else 
            '$key' 
	    #end 
    #end
    )
#end

#if (${dorloc} != '')
    -- Door Node의 Location으로 조회
    AND AA.DOR_NOD_CD = @[dorloc]
#end

#if (${dorlocyard} != '')
    -- Door Node의 Yard로 조회 
    AND AA.DOR_NOD_YARD = @[dorlocyard]
#end

#if ($arr_feeder_vvd.size() > 0) 
    -- Feeder VVD로 조회
    #if (${feeder_vvd_tp} == 'I' )
        AND TRS_CYDOOR_COMM_PKG.GET_BKG_VVD(@[feeder_vvd_tp], AA.BKG_NO, AA.FM_NOD_CD) IN (
        #foreach( ${key} in ${arr_feeder_vvd}) 
          #if($velocityCount < $arr_feeder_vvd.size())
                '$key',  
          #else 
            '$key'
          #end 
        #end
    #elseif (${feeder_vvd_tp} == 'O' )
        AND TRS_CYDOOR_COMM_PKG.GET_BKG_VVD(@[feeder_vvd_tp], AA.BKG_NO, DECODE(AA.PCTL_IO_BND_CD,'O',AA.TO_NOD_CD,AA.FM_NOD_CD)) IN (
        #foreach( ${key} in ${arr_feeder_vvd}) 
          #if($velocityCount < $arr_feeder_vvd.size())
                '$key',  
          #else 
            '$key'
          #end 
        #end
    #elseif (${feeder_vvd_tp} == 'A' )
        AND 
        ((
        TRS_CYDOOR_COMM_PKG.GET_BKG_VVD('I', AA.BKG_NO, AA.FM_NOD_CD) IN (
        #foreach( ${key} in ${arr_feeder_vvd}) 
          #if($velocityCount < $arr_feeder_vvd.size())
                '$key',  
          #else 
            '$key'
          #end 
        #end
        )) OR (
        TRS_CYDOOR_COMM_PKG.GET_BKG_VVD('O', AA.BKG_NO, DECODE(AA.PCTL_IO_BND_CD,'O',AA.TO_NOD_CD,AA.FM_NOD_CD)) IN (
        #foreach( ${key} in ${arr_feeder_vvd}) 
          #if($velocityCount < $arr_feeder_vvd.size())
                '$key',  
          #else 
            '$key'
          #end 
        #end        
        ))
    #end
    )
#end

#if (${TroUnConfirmDoor} == 'UD')
    -- Provision 체크여부 체크일 경우 'UD' (두번째)
    AND ((AA.TRSP_COST_DTL_MOD_CD = 'CY' AND AA.EQ_NO <> 'COMU0000000')  OR (AA.TRSP_COST_DTL_MOD_CD = 'DR'))
--    AND TRO_SEQ IS NULL
    AND DECODE(AA.TRSP_COST_DTL_MOD_CD, 'DR', SUBSTR(AA.TRO_SEQ, 1, INSTR(AA.TRO_SEQ, '$', 1, 1) - 1)) IS NULL
#else
    AND (
          (AA.TRSP_COST_DTL_MOD_CD = 'CY' AND DECODE(@[ui_conti_cd], 'A', DECODE(AA.PCTL_IO_BND_CD, 'O', '00000000000', 'T', '00000000000', AA.EQ_NO), AA.EQ_NO) <> 'COMU0000000' ) OR 
          (AA.PCTL_IO_BND_CD = 'I' AND (AA.TRSP_COST_DTL_MOD_CD = 'DR' AND (AA.TRO_SEQ IS NOT NULL OR (AA.PCTL_IO_BND_CD = 'I' AND AA.POD_CONTI_CD = 'M') OR AA.FM_LOC_CONTI_CD = 'A')) AND AA.EQ_NO <> 'COMU0000000') OR
          (AA.PCTL_IO_BND_CD = 'O' AND (AA.TRSP_COST_DTL_MOD_CD = 'DR' AND (AA.TRO_SEQ IS NOT NULL OR (AA.PCTL_IO_BND_CD = 'I' AND AA.POD_CONTI_CD = 'M') OR AA.FM_LOC_CONTI_CD = 'A')))
        )
#end

#if ($arr_zip_code.size() > 0) 
    AND (SELECT DTL.DOR_PST_NO
           FROM BKG_TRO DTL
          WHERE DTL.BKG_NO      = AA.BKG_NO
            AND DTL.IO_BND_CD   = AA.PCTL_IO_BND_CD
            AND DTL.TRO_SEQ     = TO_NUMBER(SUBSTR(AA.TRO_SEQ, 1, INSTR(AA.TRO_SEQ, '$', 1, 1) - 1))
           ) IN (
            #foreach( ${key} in ${arr_zip_code}) 
              #if($velocityCount < $arr_zip_code.size())
                    '$key',  
              #else 
                '$key'
              #end 
            #end
        )
#end

#if (${cydoor_div} == 'DR' )
    #if (${ui_conti_cd} == 'E' )
      AND (AA.DUP_CHK IS NULL OR SUBSTR(TRO_SEQ, 1, INSTR(TRO_SEQ, '$', 1, 1) - 1) <> AA.DUP_CHK)
    #else
      AND AA.DUP_CHK IS NULL
    #end
#end

#end			]]></sql>
			<params>
				<param name="ui_conti_cd" type="12" value="" out="N"/>
				<param name="frm_plandate" type="12" value="" out="N"/>
				<param name="to_plandate" type="12" value="" out="N"/>
				<param name="stop_off_flg" type="12" value="" out="N"/>
				<param name="contract_no" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="transmode" type="12" value="" out="N"/>
				<param name="portcd" type="12" value="" out="N"/>
				<param name="frmnode" type="12" value="" out="N"/>
				<param name="frmnodeyard" type="12" value="" out="N"/>
				<param name="vianode" type="12" value="" out="N"/>
				<param name="vianodeyard" type="12" value="" out="N"/>
				<param name="tonode" type="12" value="" out="N"/>
				<param name="tonodeyard" type="12" value="" out="N"/>
				<param name="dorloc" type="12" value="" out="N"/>
				<param name="dorlocyard" type="12" value="" out="N"/>
				<param name="feeder_vvd_tp" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
