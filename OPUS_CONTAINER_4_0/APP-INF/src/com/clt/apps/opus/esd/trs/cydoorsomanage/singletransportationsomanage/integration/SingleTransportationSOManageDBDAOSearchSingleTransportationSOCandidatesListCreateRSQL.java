/*=========================================================
*Copyright(c) 2017 CyberLogitec
*@FileName : SingleTransportationSOManageDBDAOSearchSingleTransportationSOCandidatesListCreateRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.01.20
*@LastModifier : 박찬우
*@LastVersion : 1.0
* 2017.01.20 박찬우
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esd.trs.cydoorsomanage.singletransportationsomanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author Chanwoo Park
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SingleTransportationSOManageDBDAOSearchSingleTransportationSOCandidatesListCreateRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Temp Table에 입력할 Planed S/O 대상 조회
	  * </pre>
	  */
	public SingleTransportationSOManageDBDAOSearchSingleTransportationSOCandidatesListCreateRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("feeder_vvd_tp",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("to_plandate",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vianodeyard",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("tonode",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("contract_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("portcd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frmnode",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("transmode",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vianode",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_plandate",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frmnodeyard",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("dorloc",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("tonodeyard",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ui_conti_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("dorlocyard",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esd.trs.cydoorsomanage.singletransportationsomanage.integration").append("\n"); 
		query.append("FileName : SingleTransportationSOManageDBDAOSearchSingleTransportationSOCandidatesListCreateRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT" ).append("\n"); 
		query.append("/*+ NO_EXPAND */" ).append("\n"); 
		query.append(" CTRL_OFC_CD" ).append("\n"); 
		query.append(",COP_NO" ).append("\n"); 
		query.append(",EQ_NO" ).append("\n"); 
		query.append(",CNTR_TPSZ_CD AS EQ_TPSZ_CD" ).append("\n"); 
		query.append(",COST_ACT_GRP_SEQ" ).append("\n"); 
		query.append(",COST_ACT_GRP_CD" ).append("\n"); 
		query.append(",N1ST_VNDR_SEQ AS VNDR_SEQ" ).append("\n"); 
		query.append(",TRSP_CRR_MOD_CD" ).append("\n"); 
		query.append(",FM_NOD_CD" ).append("\n"); 
		query.append(",FM_NOD_YARD" ).append("\n"); 
		query.append(",TO_NOD_CD" ).append("\n"); 
		query.append(",TO_NOD_YARD" ).append("\n"); 
		query.append(",VIA_NOD_CD" ).append("\n"); 
		query.append(",VIA_NOD_YARD" ).append("\n"); 
		query.append(",DOR_NOD_CD" ).append("\n"); 
		query.append(",DOR_NOD_YARD" ).append("\n"); 
		query.append(",CASE WHEN FM_TS_IND = 'T' OR TO_TS_IND = 'T'	THEN 'T'" ).append("\n"); 
		query.append("      WHEN PCTL_IO_BND_CD = 'T'					THEN ''" ).append("\n"); 
		query.append("      ELSE PCTL_IO_BND_CD" ).append("\n"); 
		query.append(" END TRSP_BND_CD" ).append("\n"); 
		query.append(",TRNS_RQST_OFC_CD" ).append("\n"); 
		query.append(",TRNS_RQST_USR_ID" ).append("\n"); 
		query.append(",TRNS_RQST_RSN" ).append("\n"); 
		query.append(",INLND_ROUT_INV_BIL_PATT_CD AS RAIL_CMB_THRU_TP_CD" ).append("\n"); 
		query.append(",SC_NO" ).append("\n"); 
		query.append(",RFA_NO" ).append("\n"); 
		query.append(",INTER_RMK" ).append("\n"); 
		query.append(",TRSP_SO_STS_CD" ).append("\n"); 
		query.append(",MST_LCL_CD" ).append("\n"); 
		query.append(",FM_LOC_CONTI_CD" ).append("\n"); 
		query.append(",BKG_NO" ).append("\n"); 
		query.append(",BKG_RCVDE_TERM_CD" ).append("\n"); 
		query.append(",BL_NO" ).append("\n"); 
		query.append(",BKG_CGO_TP_CD" ).append("\n"); 
		query.append(",CGO_TP_CD" ).append("\n"); 
		query.append(",TRUNKVVD" ).append("\n"); 
		query.append(",SLAN_CD" ).append("\n"); 
		query.append(",POR_CD" ).append("\n"); 
		query.append(",POL_CD" ).append("\n"); 
		query.append(",POD_CD" ).append("\n"); 
		query.append(",DEL_CD" ).append("\n"); 
		query.append(",CMDT_CD" ).append("\n"); 
		query.append(",TO_CHAR(N1ST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') N1ST_NOD_PLN_DT" ).append("\n"); 
		query.append(",TO_CHAR(LST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') LST_NOD_PLN_DT" ).append("\n"); 
		query.append(",TO_CHAR(DOR_NOD_PLN_DT, 'YYYYMMDDHH24MISS') DOR_NOD_PLN_DT" ).append("\n"); 
		query.append(",TRSP_COST_DTL_MOD_CD" ).append("\n"); 
		query.append(",UPLN_SO_FLG" ).append("\n"); 
		query.append(",TRSP_SO_STS_NM" ).append("\n"); 
		query.append(",RAIL_CRE_DT" ).append("\n"); 
		query.append(",RAIL_TO_NOD_CD" ).append("\n"); 
		query.append(",POD_CONTI_CD" ).append("\n"); 
		query.append(",DECODE(TRSP_COST_DTL_MOD_CD, 'DR', SUBSTR(TRO_SEQ, 1, INSTR(TRO_SEQ, '$', 1, 1) - 1)) AS TRO_SEQ" ).append("\n"); 
		query.append(",DECODE(TRSP_COST_DTL_MOD_CD, 'DR', SUBSTR(TRO_SEQ, INSTR(TRO_SEQ, '$', 1, 1) + 1)) AS TRO_SUB_SEQ" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("    SELECT" ).append("\n"); 
		query.append("    -- WHERE 조건에 따른 INDEX 설정 " ).append("\n"); 
		query.append("    #if ($arr_bkgno.size() > 0)" ).append("\n"); 
		query.append("        /*+ INDEX (A XAK1SCE_COP_HDR) */" ).append("\n"); 
		query.append("    #elseif ($arr_cntrno.size() > 0)" ).append("\n"); 
		query.append("        /*+ INDEX (A XAK9SCE_COP_HDR) ORDERED */" ).append("\n"); 
		query.append("    #elseif ($arr_billno.size() > 0)" ).append("\n"); 
		query.append("        /*+ LEADING(C) INDEX (C XUK1BKG_BOOKING) */" ).append("\n"); 
		query.append("    #elseif ($arr_trunkvvd.size() > 0)" ).append("\n"); 
		query.append("        /*+ LEADING(C) INDEX (C XAK2BKG_BOOKING ) */" ).append("\n"); 
		query.append("    #elseif (${contract_no} != '' )" ).append("\n"); 
		query.append("        /*+ LEADING(C) */" ).append("\n"); 
		query.append("    #elseif (${frm_plandate} != '')" ).append("\n"); 
		query.append("        #if (${dateCondition} == 'P')" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("        #elseif (${dateCondition} == 'D')" ).append("\n"); 
		query.append("            /*+ INDEX (A XAK13SCE_COP_HDR ) */" ).append("\n"); 
		query.append("        #elseif (${dateCondition} == 'R')" ).append("\n"); 
		query.append("            /*+ LEADING(B_RAIL_IDX) USE_NL(B_RAIL_IDX RAIL B A C) */" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      B.CTRL_OFC_CD" ).append("\n"); 
		query.append("    , A.COP_NO " ).append("\n"); 
		query.append("    , NVL(A.CNTR_NO, ' ') EQ_NO" ).append("\n"); 
		query.append("    , A.CNTR_TPSZ_CD     " ).append("\n"); 
		query.append("    , B.COST_ACT_GRP_SEQ     " ).append("\n"); 
		query.append("    , B.COST_ACT_GRP_CD       " ).append("\n"); 
		query.append("    , B.N1ST_VNDR_SEQ        " ).append("\n"); 
		query.append("    , SUBSTR(B.COST_ACT_GRP_CD,3) TRSP_CRR_MOD_CD" ).append("\n"); 
		query.append("    , SUBSTR(B.N1ST_NOD_CD,1,5)  FM_NOD_CD" ).append("\n"); 
		query.append("    , SUBSTR(B.N1ST_NOD_CD,6)    FM_NOD_YARD" ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') TO_NOD_CD    " ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') TO_NOD_YARD  " ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('VIA', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') VIA_NOD_CD   " ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('VIA', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') VIA_NOD_YARD " ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') DOR_NOD_CD   " ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') DOR_NOD_YARD " ).append("\n"); 
		query.append("    , B.PCTL_IO_BND_CD              " ).append("\n"); 
		query.append("    , B.TRNS_RQST_OFC_CD            " ).append("\n"); 
		query.append("    , B.TRNS_RQST_USR_ID            " ).append("\n"); 
		query.append("    , B.TRNS_RQST_RSN               " ).append("\n"); 
		query.append("    , B.INLND_ROUT_INV_BIL_PATT_CD                   " ).append("\n"); 
		query.append("    , C.SC_NO                       " ).append("\n"); 
		query.append("    , C.RFA_NO                      " ).append("\n"); 
		query.append("    , NVL2(B.DELT_USR_ID, 'Candidate Delete :'||B.DELT_USR_ID, '') || NVL2(B.DELT_DT, ' / '||TO_CHAR(B.DELT_DT,'YYYYMMDDHH24MISS'), '') INTER_RMK     " ).append("\n"); 
		query.append("    , B.TRSP_SO_STS_CD " ).append("\n"); 
		query.append("    , DECODE(A.MST_COP_NO, A.COP_NO, 'P', 'X')   MST_LCL_CD " ).append("\n"); 
		query.append("    , @[ui_conti_cd] AS FM_LOC_CONTI_CD" ).append("\n"); 
		query.append("    , A.BKG_NO" ).append("\n"); 
		query.append("    , DECODE(B.PCTL_IO_BND_CD, 'I',C.DE_TERM_CD, 'O',C.RCV_TERM_CD, '')   BKG_RCVDE_TERM_CD " ).append("\n"); 
		query.append("    , C.BL_NO " ).append("\n"); 
		query.append("    , C.BKG_CGO_TP_CD     " ).append("\n"); 
		query.append("    , 'F' CGO_TP_CD     " ).append("\n"); 
		query.append("    , (C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD) TRUNKVVD " ).append("\n"); 
		query.append("    , C.SLAN_CD           " ).append("\n"); 
		query.append("    , C.POR_CD POR_CD     " ).append("\n"); 
		query.append("    , C.POL_CD POL_CD     " ).append("\n"); 
		query.append("    , C.POD_CD POD_CD     " ).append("\n"); 
		query.append("    , C.DEL_CD DEL_CD     " ).append("\n"); 
		query.append("    , C.CMDT_CD " ).append("\n"); 
		query.append("--    , TO_CHAR(B.N1ST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') N1ST_NOD_PLN_DT" ).append("\n"); 
		query.append("    , NVL((SELECT  DECODE(DECODE(B.PCTL_COST_MOD_CD,'C','CY','Z','DR',''), 'CY', DECODE(NVL(ACT_STS_MAPG_CD,'XX'), 'OP', ACT_DT, ESTM_DT), ESTM_DT)" ).append("\n"); 
		query.append("                    FROM   SCE_COP_DTL" ).append("\n"); 
		query.append("                    WHERE  COP_NO = A.COP_NO" ).append("\n"); 
		query.append("                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1)||'_D_'" ).append("\n"); 
		query.append("                    AND    NOD_CD = B.N1ST_NOD_CD" ).append("\n"); 
		query.append("                    AND    ROWNUM = 1), B.N1ST_NOD_PLN_DT) N1ST_NOD_PLN_DT " ).append("\n"); 
		query.append("--    , TO_CHAR(B.LST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') AS LST_NOD_PLN_DT" ).append("\n"); 
		query.append("    , NVL((SELECT  ESTM_DT" ).append("\n"); 
		query.append("                    FROM   SCE_COP_DTL" ).append("\n"); 
		query.append("                    WHERE  COP_NO = A.COP_NO" ).append("\n"); 
		query.append("                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1)||'_A_'" ).append("\n"); 
		query.append("                    AND    NOD_CD = TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, NULL)" ).append("\n"); 
		query.append("                    AND    ROWNUM = 1), B.LST_NOD_PLN_DT) LST_NOD_PLN_DT" ).append("\n"); 
		query.append("--    , TO_CHAR(NVL(DECODE(B.PCTL_IO_BND_CD, 'I', A.CFM_APNT_DT, 'O', A.CFM_OB_DOR_ARR_DT),B.DOR_ARR_DT), 'YYYYMMDDHH24MISS') AS DOR_NOD_PLN_DT" ).append("\n"); 
		query.append("    , NVL((SELECT  NVL((SELECT DOR_ARR_DT" ).append("\n"); 
		query.append("                            FROM BKG_TRO_DTL" ).append("\n"); 
		query.append("                           WHERE BKG_NO = D.COP_NO" ).append("\n"); 
		query.append("                             AND IO_BND_CD = B.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("                             AND RTN_TRO_FLG = 'N'" ).append("\n"); 
		query.append("                             AND TRO_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 1)" ).append("\n"); 
		query.append("                             AND TRO_SUB_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 2)" ).append("\n"); 
		query.append("                             AND @[ui_conti_cd] = 'M'" ).append("\n"); 
		query.append("                             AND ROWNUM = 1" ).append("\n"); 
		query.append("                          UNION ALL" ).append("\n"); 
		query.append("                          SELECT ARR_DT" ).append("\n"); 
		query.append("                            FROM BKG_EUR_TRO_DTL" ).append("\n"); 
		query.append("                           WHERE BKG_NO = D.COP_NO" ).append("\n"); 
		query.append("                             AND IO_BND_CD = B.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("                             AND TRO_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 1)" ).append("\n"); 
		query.append("                             AND TRO_SUB_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 2)" ).append("\n"); 
		query.append("                             AND @[ui_conti_cd] <> 'M'" ).append("\n"); 
		query.append("                             AND ROWNUM = 1" ).append("\n"); 
		query.append("					), D.ESTM_DT)" ).append("\n"); 
		query.append("                    FROM   SCE_COP_DTL D" ).append("\n"); 
		query.append("                    WHERE  COP_NO = A.COP_NO" ).append("\n"); 
		query.append("                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1) ||'___'" ).append("\n"); 
		query.append("                    AND    NOD_CD = TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, NULL)" ).append("\n"); 
		query.append("                    AND    ROWNUM = 1), NVL(DECODE(B.PCTL_IO_BND_CD, 'I', A.CFM_APNT_DT, 'O', A.CFM_OB_DOR_ARR_DT),B.DOR_ARR_DT)) DOR_NOD_PLN_DT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    , DECODE(B.PCTL_COST_MOD_CD,'C','CY','Z','DR','') TRSP_COST_DTL_MOD_CD " ).append("\n"); 
		query.append("    , DECODE(B.PCTL_COST_MOD_CD, '', 'Y', '') UPLN_SO_FLG  -- PCTL_COST_MOD_CD 가 NULL 인 경우는 Unplaned S/O만 해당되므로 Planed는 모두 ''" ).append("\n"); 
		query.append("    , (SELECT SUBSTR(COMMCODE_PKG.GET_COMDTL_NAME_FNC('CD00286', B.TRSP_SO_STS_CD), 1, 64) FROM DUAL) TRSP_SO_STS_NM  -- DUAL 테이블을 사용하면 동일한 데이타는 한번만 조회하게 된다. SUBSTR을 사용하지 않았을 경우 기본 4000byte를 사용하게 된다." ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${frm_plandate} != '' )" ).append("\n"); 
		query.append("        #if (${dateCondition} == 'R' )" ).append("\n"); 
		query.append("            , TO_CHAR(RAIL.LOCL_CRE_DT, 'YYYYMMDDHH24MISS') RAIL_CRE_DT" ).append("\n"); 
		query.append("            , RAIL.TO_NOD_CD RAIL_TO_NOD_CD" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("            , NULL RAIL_CRE_DT" ).append("\n"); 
		query.append("            , NULL RAIL_TO_NOD_CD" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("        , NULL RAIL_CRE_DT" ).append("\n"); 
		query.append("        , NULL RAIL_TO_NOD_CD" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${cydoor_div} == 'DR' )" ).append("\n"); 
		query.append("          -- 함수로 처리하지 않을 경우 plan이 원하는 대로 나오지 않아 함수로 처리" ).append("\n"); 
		query.append("        , TRS_CYDOOR_COMM_PKG.GET_CONTI_CD(C.POD_CD) POD_CONTI_CD -- OUTTER JOIN 밖에서 조회조건으로만 사용" ).append("\n"); 
		query.append("        ,(SELECT #if (${ui_conti_cd} == 'E' )" ).append("\n"); 
		query.append("                   TO_CHAR(X.TRO_SEQ)" ).append("\n"); 
		query.append("                 #else" ).append("\n"); 
		query.append("                   'existence'" ).append("\n"); 
		query.append("                 #end" ).append("\n"); 
		query.append("            FROM TRS_TRSP_SVC_ORD X" ).append("\n"); 
		query.append("           WHERE X.COP_NO                = B.COP_NO" ).append("\n"); 
		query.append("             AND X.TRSP_COST_DTL_MOD_CD  = 'DR'" ).append("\n"); 
		query.append("             AND X.TRSP_BND_CD           = B.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("             AND NVL(X.DELT_FLG, 'N')    = 'N'" ).append("\n"); 
		query.append("             AND ROWNUM = 1" ).append("\n"); 
		query.append("         ) DUP_CHK" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("        , NULL POD_CONTI_CD" ).append("\n"); 
		query.append("        , NULL DUP_CHK" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, @[ui_conti_cd]) TRO_SEQ" ).append("\n"); 
		query.append("    ,CASE" ).append("\n"); 
		query.append("       WHEN (SELECT COUNT(SL.COP_NO)" ).append("\n"); 
		query.append("               FROM SCE_PLN_SO_LIST SL" ).append("\n"); 
		query.append("              WHERE SL.COP_NO = B.COP_NO" ).append("\n"); 
		query.append("                AND SL.PCTL_IO_BND_CD = B.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("                AND SL.PCTL_COST_MOD_CD = 'Z') > 0 AND B.PCTL_IO_BND_CD = 'O' THEN" ).append("\n"); 
		query.append("        DECODE(SUBSTR(TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'E'), 1, INSTR(TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'E'), '$', 1, 1) - 1), NULL, 'N', 'Y')" ).append("\n"); 
		query.append("       ELSE 'XX'" ).append("\n"); 
		query.append("     END CNTR_CFM_FLG" ).append("\n"); 
		query.append("    ,(SELECT DECODE(SUBSTR(DTL.ACT_CD, 2, 2) || SUBSTR(DTL.ACT_CD, 5, 2), 'TWDO', 'T', '')" ).append("\n"); 
		query.append("        FROM SCE_COP_DTL DTL" ).append("\n"); 
		query.append("       WHERE DTL.COP_NO = A.COP_NO" ).append("\n"); 
		query.append("         AND DTL.NOD_CD = B.N1ST_NOD_CD" ).append("\n"); 
		query.append("         AND SUBSTR(DTL.ACT_CD, 2, 2) = 'TW'" ).append("\n"); 
		query.append("         AND SUBSTR(DTL.ACT_CD, 5, 2) = 'DO'" ).append("\n"); 
		query.append("         AND ROWNUM =1 ) FM_TS_IND" ).append("\n"); 
		query.append("    ,(SELECT DECODE(SUBSTR(DTL.ACT_CD, 2, 2) || SUBSTR(DTL.ACT_CD, 5, 2), 'TWAD', 'T', '')" ).append("\n"); 
		query.append("        FROM SCE_COP_DTL DTL" ).append("\n"); 
		query.append("       WHERE DTL.COP_NO = A.COP_NO" ).append("\n"); 
		query.append("         AND DTL.NOD_CD = B.N2ND_NOD_CD" ).append("\n"); 
		query.append("         AND SUBSTR(DTL.ACT_CD, 2, 2) = 'TW'" ).append("\n"); 
		query.append("         AND SUBSTR(DTL.ACT_CD, 5, 2) = 'AD'" ).append("\n"); 
		query.append("         AND ROWNUM =1 ) TO_TS_IND" ).append("\n"); 
		query.append("    FROM SCE_COP_HDR A " ).append("\n"); 
		query.append("       , SCE_PLN_SO_LIST B " ).append("\n"); 
		query.append("       , BKG_BOOKING C " ).append("\n"); 
		query.append("    -- US RAIL Creation date로 조회시 table scan을 하지않고 index scan을 할 수 할 수 있도록 rowid를 사용하여 sql 작성" ).append("\n"); 
		query.append("    #if (${frm_plandate} != '' )" ).append("\n"); 
		query.append("        #if (${dateCondition} == 'R' )" ).append("\n"); 
		query.append("            ,( " ).append("\n"); 
		query.append("            SELECT B_RAIL_IDX.COP_NO, " ).append("\n"); 
		query.append("                    (SELECT /*+ INDEX(RAIL XAK16TRS_TRSP_RAIL_BIL_ORD ) */ " ).append("\n"); 
		query.append("                            RAIL.ROWID " ).append("\n"); 
		query.append("                       FROM TRS_TRSP_RAIL_BIL_ORD RAIL " ).append("\n"); 
		query.append("                      WHERE B_RAIL_IDX.COP_NO = RAIL.COP_NO " ).append("\n"); 
		query.append("                        AND RAIL.LOCL_CRE_DT BETWEEN TO_DATE(@[frm_plandate]||'000000','YYYYMMDDHH24MISS') AND TO_DATE(@[to_plandate]||'235959','YYYYMMDDHH24MISS') " ).append("\n"); 
		query.append("                        AND RAIL.TO_NOD_CD = B_RAIL_IDX.N1ST_NOD_CD" ).append("\n"); 
		query.append("                        AND ROWNUM <= 1 ) AS RAIL_ROWID " ).append("\n"); 
		query.append("              FROM  SCE_PLN_SO_LIST B_RAIL_IDX " ).append("\n"); 
		query.append("             WHERE 1 = 1" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("             #if ($arr_so_office.size() > 0) " ).append("\n"); 
		query.append("                 AND B_RAIL_IDX.CTRL_OFC_CD in (" ).append("\n"); 
		query.append("                 #foreach( ${key} in ${arr_so_office}) " ).append("\n"); 
		query.append("                   #if($velocityCount < $arr_so_office.size()) " ).append("\n"); 
		query.append("                     '$key', " ).append("\n"); 
		query.append("                   #else " ).append("\n"); 
		query.append("                     '$key' " ).append("\n"); 
		query.append("                   #end " ).append("\n"); 
		query.append("                 #end" ).append("\n"); 
		query.append("                 )" ).append("\n"); 
		query.append("             #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("            -- Provision 체크여부 체크일 경우 'UD' (첫번째)" ).append("\n"); 
		query.append("            #if (${TroUnConfirmDoor} == 'UD' )" ).append("\n"); 
		query.append("                 AND B_RAIL_IDX.TRSP_SO_STS_CD IN ('P', 'N')" ).append("\n"); 
		query.append("            #else" ).append("\n"); 
		query.append("                 AND B_RAIL_IDX.TRSP_SO_STS_CD = 'P'" ).append("\n"); 
		query.append("            #end" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            -- CY , DOOR 구분" ).append("\n"); 
		query.append("            #if (${cydoor_div} == 'DR' )" ).append("\n"); 
		query.append("                 AND B_RAIL_IDX.PCTL_COST_MOD_CD = 'Z'" ).append("\n"); 
		query.append("            #else" ).append("\n"); 
		query.append("                 AND B_RAIL_IDX.PCTL_COST_MOD_CD <> 'Z'" ).append("\n"); 
		query.append("            #end" ).append("\n"); 
		query.append("            ) B_RAIL_IDX" ).append("\n"); 
		query.append("            ,TRS_TRSP_RAIL_BIL_ORD RAIL" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    WHERE A.COP_NO = B.COP_NO" ).append("\n"); 
		query.append("      AND A.COP_STS_CD <> 'M'" ).append("\n"); 
		query.append("      AND A.COP_STS_CD <> 'O'" ).append("\n"); 
		query.append("      AND A.COP_STS_CD <> 'X'" ).append("\n"); 
		query.append("    #if (${frm_plandate} != '' )" ).append("\n"); 
		query.append("        #if (${dateCondition} == 'D' )" ).append("\n"); 
		query.append("            AND A.CFM_APNT_DT BETWEEN TO_DATE(@[frm_plandate],'YYYYMMDD') AND TO_DATE(@[to_plandate],'YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      AND A.BKG_NO = C.BKG_NO" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arr_so_office.size() > 0) " ).append("\n"); 
		query.append("        AND B.CTRL_OFC_CD in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_so_office}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_so_office.size()) " ).append("\n"); 
		query.append("            '$key', " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${TroUnConfirmDoor} == 'UD' )" ).append("\n"); 
		query.append("        -- Provision 체크여부 체크일 경우 'UD' (첫번째)" ).append("\n"); 
		query.append("        AND B.TRSP_SO_STS_CD IN ('P', 'N')" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("        AND B.TRSP_SO_STS_CD = 'P'" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${cydoor_div} == 'DR' )" ).append("\n"); 
		query.append("        -- CY , DOOR 구분 " ).append("\n"); 
		query.append("        AND B.PCTL_COST_MOD_CD = 'Z'" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("        AND B.PCTL_COST_MOD_CD = 'C'" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${frm_plandate} != '' )" ).append("\n"); 
		query.append("        -- Date 구분에 따라 기간별 조회를 한다." ).append("\n"); 
		query.append("        #if (${dateCondition} == 'P' )" ).append("\n"); 
		query.append("            AND B.N1ST_NOD_PLN_DT BETWEEN TO_DATE(@[frm_plandate],'YYYYMMDD') AND TO_DATE(@[to_plandate],'YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("        #elseif (${dateCondition} == 'R' ) --테이블 스캔을 피하고 index를 원하는 대로 태우기 위하여 B_RAIL_IDX 라는 alias로 SCE_PLN_SO_LIST 를 한번 더 사용하였다." ).append("\n"); 
		query.append("            AND B.COP_NO    = B_RAIL_IDX.COP_NO" ).append("\n"); 
		query.append("            AND RAIL.ROWID = B_RAIL_IDX.RAIL_ROWID " ).append("\n"); 
		query.append("            AND RAIL_ROWID IS NOT NULL " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arr_bkgno.size() > 0) " ).append("\n"); 
		query.append("        -- Booking no로 조회" ).append("\n"); 
		query.append("        AND A.BKG_NO in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_bkgno}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_bkgno.size()) " ).append("\n"); 
		query.append("            '$key', " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arr_billno.size() > 0) " ).append("\n"); 
		query.append("        -- BL NO로 조회" ).append("\n"); 
		query.append("        AND C.BL_NO in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_billno}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_billno.size()) " ).append("\n"); 
		query.append("            '$key', " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arr_cntrno.size() > 0) " ).append("\n"); 
		query.append("        -- Container no로 조회" ).append("\n"); 
		query.append("        AND A.CNTR_NO in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_cntrno}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_cntrno.size()) " ).append("\n"); 
		query.append("            '$key', " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arr_trunkvvd.size() > 0) " ).append("\n"); 
		query.append("        -- Trunk VVD로 조회 " ).append("\n"); 
		query.append("        AND (C.VSL_CD,C.SKD_VOY_NO,C.SKD_DIR_CD) in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_trunkvvd}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_trunkvvd.size()) " ).append("\n"); 
		query.append("            (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1))," ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1))" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("		AND C.VSL_CD <> 'COXX'" ).append("\n"); 
		query.append("    #if (${contract_no} != '' )" ).append("\n"); 
		query.append("        -- Contract No로 조회 " ).append("\n"); 
		query.append("        #if (${contract_tp_cd} == 'S' )" ).append("\n"); 
		query.append("            AND C.SC_NO IN (@[contract_no])" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("            AND C.RFA_NO IN (@[contract_no])" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${bound} != 'ALL')" ).append("\n"); 
		query.append("        -- Bound로 조회" ).append("\n"); 
		query.append("        AND B.PCTL_IO_BND_CD = @[bound]" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${transmode} != 'ALL')" ).append("\n"); 
		query.append("        -- Trans Mode로 조회" ).append("\n"); 
		query.append("        AND SUBSTR(B.COST_ACT_GRP_CD, 3) = @[transmode]" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${ui_conti_cd} == 'M' )" ).append("\n"); 
		query.append("        -- Mexico는 미주 US RAIL에서 조회하지 않고 CY/DOOR에서 조회한다. (INLND_ROUT_INV_BIL_PATT_CD 값은 미주 Rail만 존재한다.)" ).append("\n"); 
		query.append("        AND B.INLND_ROUT_INV_BIL_PATT_CD IS NULL" ).append("\n"); 
		query.append("        --AND NOT EXISTS (SELECT 1 FROM MDM_COUNTRY WHERE CNT_CD != 'MX' AND MDM_LOC_FM.CONTI_CD ='M' AND B.TRSP_MOD_CD = 'RD' AND MDM_LOC_FM.CNT_CD = CNT_CD)" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arrCopSeq.size() > 0) " ).append("\n"); 
		query.append("        -- Trunk VVD로 조회 " ).append("\n"); 
		query.append("        AND (B.COP_NO, B.COST_ACT_GRP_SEQ) in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arrCopSeq}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arrCopSeq.size()) " ).append("\n"); 
		query.append("            (SUBSTR('$key', 1, INSTR('$key', '$', 1, 1) -1), SUBSTR('$key', INSTR('$key', '$', 1, 1)+1, LENGTH('$key')))," ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            (SUBSTR('$key', 1, INSTR('$key', '$', 1, 1) -1), SUBSTR('$key', INSTR('$key', '$', 1, 1)+1, LENGTH('$key')))" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	-- Port로 조회 " ).append("\n"); 
		query.append("	#if (${portio} == 'I')" ).append("\n"); 
		query.append("  		AND C.POD_CD = @[portcd]" ).append("\n"); 
		query.append("	#elseif (${portio} == 'O')" ).append("\n"); 
		query.append("		AND C.POL_CD = @[portcd]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") AA WHERE 1=1" ).append("\n"); 
		query.append("AND AA.MST_LCL_CD = 'P'" ).append("\n"); 
		query.append("#if (${costmode} == 'CY')" ).append("\n"); 
		query.append("    -- Cost Mode로 조회 " ).append("\n"); 
		query.append("    AND (SUBSTR(AA.COST_ACT_GRP_CD, 2, 1) = 'Y' OR AA.COST_ACT_GRP_CD in ('POWD', 'PRWD')) " ).append("\n"); 
		query.append("    AND AA.FM_NOD_CD <> AA.TO_NOD_CD" ).append("\n"); 
		query.append("#elseif (${costmode} == 'DR')" ).append("\n"); 
		query.append("    AND SUBSTR(AA.COST_ACT_GRP_CD, 2, 1) = 'D'" ).append("\n"); 
		query.append("#elseif (${costmode} == 'LS')" ).append("\n"); 
		query.append("    AND SUBSTR(AA.COST_ACT_GRP_CD, 1, 2) IN ('IY', 'OY') AND AA.FM_NOD_CD = AA.TO_NOD_CD" ).append("\n"); 
		query.append("#elseif (${costmode} == 'TS')" ).append("\n"); 
		query.append("    AND SUBSTR(AA.COST_ACT_GRP_CD, 1, 1) IN ('T', 'P')   AND AA.FM_NOD_CD = AA.TO_NOD_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${frmnode} != '')" ).append("\n"); 
		query.append("    -- From Node의 Location으로 조회" ).append("\n"); 
		query.append("    AND AA.FM_NOD_CD = @[frmnode]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${frmnodeyard} != '')" ).append("\n"); 
		query.append("    -- From Node의 Yard로 조회 " ).append("\n"); 
		query.append("    AND AA.FM_NOD_YARD = @[frmnodeyard]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- Multi From Node로 조회" ).append("\n"); 
		query.append("#if ($arr_fmnode.size() > 0) " ).append("\n"); 
		query.append("    AND AA.FM_NOD_CD||AA.FM_NOD_YARD in (" ).append("\n"); 
		query.append("    #foreach( ${key} in ${arr_fmnode}) " ).append("\n"); 
		query.append("	    #if($velocityCount < $arr_fmnode.size()) " ).append("\n"); 
		query.append("	        '$key', " ).append("\n"); 
		query.append("	    #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("	    #end " ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${vianode} != '')" ).append("\n"); 
		query.append("    -- Via Node의 Location으로 조회 " ).append("\n"); 
		query.append("    AND AA.VIA_NOD_CD = @[vianode]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("#if (${vianodeyard} != '')" ).append("\n"); 
		query.append("    -- Via Node의 Yard로 조회" ).append("\n"); 
		query.append("    AND AA.VIA_NOD_YARD = @[vianodeyard]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${tonode} != '')" ).append("\n"); 
		query.append("    -- To Node의 Location으로 조회" ).append("\n"); 
		query.append("    AND AA.TO_NOD_CD = @[tonode]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${tonodeyard} != '')" ).append("\n"); 
		query.append("    -- To Node의 Yard로 조회" ).append("\n"); 
		query.append("    AND AA.TO_NOD_YARD = @[tonodeyard]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- Multi To Node로 조회" ).append("\n"); 
		query.append("#if ($arr_tonode.size() > 0) " ).append("\n"); 
		query.append("    AND AA.TO_NOD_CD||AA.TO_NOD_YARD in (" ).append("\n"); 
		query.append("    #foreach( ${key} in ${arr_tonode}) " ).append("\n"); 
		query.append("	    #if($velocityCount < $arr_tonode.size()) " ).append("\n"); 
		query.append("	        '$key', " ).append("\n"); 
		query.append("	    #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("	    #end " ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${dorloc} != '')" ).append("\n"); 
		query.append("    -- Door Node의 Location으로 조회" ).append("\n"); 
		query.append("    AND AA.DOR_NOD_CD = @[dorloc]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${dorlocyard} != '')" ).append("\n"); 
		query.append("    -- Door Node의 Yard로 조회 " ).append("\n"); 
		query.append("    AND AA.DOR_NOD_YARD = @[dorlocyard]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if ($arr_feeder_vvd.size() > 0) " ).append("\n"); 
		query.append("    -- Feeder VVD로 조회" ).append("\n"); 
		query.append("    #if (${feeder_vvd_tp} == 'I' )" ).append("\n"); 
		query.append("        AND TRS_CYDOOR_COMM_PKG.GET_BKG_VVD(@[feeder_vvd_tp], AA.BKG_NO, AA.FM_NOD_CD) IN (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_feeder_vvd}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_feeder_vvd.size())" ).append("\n"); 
		query.append("                '$key',  " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key'" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #elseif (${feeder_vvd_tp} == 'O' )" ).append("\n"); 
		query.append("        AND TRS_CYDOOR_COMM_PKG.GET_BKG_VVD(@[feeder_vvd_tp], AA.BKG_NO, DECODE(AA.PCTL_IO_BND_CD,'O',AA.TO_NOD_CD,AA.FM_NOD_CD)) IN (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_feeder_vvd}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_feeder_vvd.size())" ).append("\n"); 
		query.append("                '$key',  " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key'" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #elseif (${feeder_vvd_tp} == 'A' )" ).append("\n"); 
		query.append("        AND " ).append("\n"); 
		query.append("        ((" ).append("\n"); 
		query.append("        TRS_CYDOOR_COMM_PKG.GET_BKG_VVD('I', AA.BKG_NO, AA.FM_NOD_CD) IN (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_feeder_vvd}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_feeder_vvd.size())" ).append("\n"); 
		query.append("                '$key',  " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key'" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        )) OR (" ).append("\n"); 
		query.append("        TRS_CYDOOR_COMM_PKG.GET_BKG_VVD('O', AA.BKG_NO, DECODE(AA.PCTL_IO_BND_CD,'O',AA.TO_NOD_CD,AA.FM_NOD_CD)) IN (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_feeder_vvd}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_feeder_vvd.size())" ).append("\n"); 
		query.append("                '$key',  " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key'" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end        " ).append("\n"); 
		query.append("        ))" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if($arr_ecc_cd.size() > 0)" ).append("\n"); 
		query.append("AND CASE" ).append("\n"); 
		query.append("      WHEN AA.PCTL_IO_BND_CD = 'I'" ).append("\n"); 
		query.append("      THEN (" ).append("\n"); 
		query.append("            SELECT ECC_CD" ).append("\n"); 
		query.append("              FROM MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("             WHERE SCC_CD = (SELECT SCC_CD" ).append("\n"); 
		query.append("                               FROM MDM_LOCATION" ).append("\n"); 
		query.append("                              WHERE LOC_CD = AA.TO_NOD_CD)" ).append("\n"); 
		query.append("               AND ROWNUM = 1" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("      ELSE (" ).append("\n"); 
		query.append("            SELECT ECC_CD" ).append("\n"); 
		query.append("              FROM MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("             WHERE SCC_CD = (SELECT SCC_CD" ).append("\n"); 
		query.append("                               FROM MDM_LOCATION" ).append("\n"); 
		query.append("                              WHERE LOC_CD = AA.FM_NOD_CD)" ).append("\n"); 
		query.append("               AND ROWNUM = 1" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("    END IN (" ).append("\n"); 
		query.append("    #foreach($code IN ${arr_ecc_cd})" ).append("\n"); 
		query.append("        #if($velocityCount == 1)" ).append("\n"); 
		query.append("             '$code'" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("            ,'$code'" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if($eq_tpsz_cd.size() > 0)" ).append("\n"); 
		query.append("AND AA.CNTR_TPSZ_CD IN (" ).append("\n"); 
		query.append("    #foreach($code IN ${eq_tpsz_cd})" ).append("\n"); 
		query.append("        #if($velocityCount == 1)" ).append("\n"); 
		query.append("             '$code'" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("            ,'$code'" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${TroUnConfirmDoor} == 'UD')" ).append("\n"); 
		query.append("    -- Provision 체크여부 체크일 경우 'UD' (두번째)" ).append("\n"); 
		query.append("   AND ((AA.TRSP_COST_DTL_MOD_CD = 'DR') OR (AA.TRSP_COST_DTL_MOD_CD = 'CY' AND CNTR_CFM_FLG = 'N'))" ).append("\n"); 
		query.append("   AND DECODE(AA.TRSP_COST_DTL_MOD_CD, 'DR', SUBSTR(AA.TRO_SEQ, 1, INSTR(AA.TRO_SEQ, '$', 1, 1) - 1)) IS NULL" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("    AND ((AA.TRSP_COST_DTL_MOD_CD = 'CY' AND CNTR_CFM_FLG = 'XX' AND DECODE(AA.PCTL_IO_BND_CD, 'O', '00000000000', 'T', '00000000000', AA.EQ_NO) <> 'COMU0000000')" ).append("\n"); 
		query.append("		OR (AA.TRSP_COST_DTL_MOD_CD = 'CY' AND CNTR_CFM_FLG = 'Y')			" ).append("\n"); 
		query.append("		OR (AA.PCTL_IO_BND_CD = 'I' AND (AA.TRSP_COST_DTL_MOD_CD = 'DR' AND (AA.TRO_SEQ IS NOT NULL OR (AA.PCTL_IO_BND_CD = 'I' AND AA.POD_CONTI_CD = 'M') OR AA.FM_LOC_CONTI_CD = 'A')) AND AA.EQ_NO <> 'COMU0000000') " ).append("\n"); 
		query.append("		OR (AA.PCTL_IO_BND_CD = 'O' AND (AA.TRSP_COST_DTL_MOD_CD = 'DR' AND (AA.TRO_SEQ IS NOT NULL OR (AA.PCTL_IO_BND_CD = 'I' AND AA.POD_CONTI_CD = 'M') OR AA.FM_LOC_CONTI_CD = 'A')))" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if ($arr_zip_code.size() > 0) " ).append("\n"); 
		query.append("    AND (SELECT DTL.DOR_ZIP_ID" ).append("\n"); 
		query.append("           FROM BKG_EUR_TRO_DTL DTL" ).append("\n"); 
		query.append("          WHERE DTL.BKG_NO      = AA.BKG_NO" ).append("\n"); 
		query.append("            AND DTL.IO_BND_CD   = AA.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("            AND DTL.TRO_SEQ     = TO_NUMBER(SUBSTR(AA.TRO_SEQ, 1, INSTR(AA.TRO_SEQ, '$', 1, 1) - 1))" ).append("\n"); 
		query.append("            AND DTL.TRO_SUB_SEQ = 1 ) IN (" ).append("\n"); 
		query.append("            #foreach( ${key} in ${arr_zip_code}) " ).append("\n"); 
		query.append("              #if($velocityCount < $arr_zip_code.size())" ).append("\n"); 
		query.append("                    '$key',  " ).append("\n"); 
		query.append("              #else " ).append("\n"); 
		query.append("                '$key'" ).append("\n"); 
		query.append("              #end " ).append("\n"); 
		query.append("            #end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${cydoor_div} == 'DR' )" ).append("\n"); 
		query.append("    #if (${ui_conti_cd} == 'E' )" ).append("\n"); 
		query.append("      AND (AA.DUP_CHK IS NULL OR SUBSTR(TRO_SEQ, 1, INSTR(TRO_SEQ, '$', 1, 1) - 1) <> AA.DUP_CHK)" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("      AND AA.DUP_CHK IS NULL" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${dateCondition} == 'D')" ).append("\n"); 
		query.append("---------------------------------------------------------" ).append("\n"); 
		query.append("-- DOOR DATE로 조회시에는 UNION을 붙인다." ).append("\n"); 
		query.append("---------------------------------------------------------" ).append("\n"); 
		query.append("UNION" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("/*+ NO_EXPAND */" ).append("\n"); 
		query.append(" CTRL_OFC_CD" ).append("\n"); 
		query.append(",COP_NO" ).append("\n"); 
		query.append(",EQ_NO" ).append("\n"); 
		query.append(",CNTR_TPSZ_CD AS EQ_TPSZ_CD" ).append("\n"); 
		query.append(",COST_ACT_GRP_SEQ" ).append("\n"); 
		query.append(",COST_ACT_GRP_CD" ).append("\n"); 
		query.append(",N1ST_VNDR_SEQ AS VNDR_SEQ" ).append("\n"); 
		query.append(",TRSP_CRR_MOD_CD" ).append("\n"); 
		query.append(",FM_NOD_CD" ).append("\n"); 
		query.append(",FM_NOD_YARD" ).append("\n"); 
		query.append(",TO_NOD_CD" ).append("\n"); 
		query.append(",TO_NOD_YARD" ).append("\n"); 
		query.append(",VIA_NOD_CD" ).append("\n"); 
		query.append(",VIA_NOD_YARD" ).append("\n"); 
		query.append(",DOR_NOD_CD" ).append("\n"); 
		query.append(",DOR_NOD_YARD" ).append("\n"); 
		query.append("--,DECODE(COST_ACT_GRP_CD, 'TRWD', '', PCTL_IO_BND_CD) AS TRSP_BND_CD" ).append("\n"); 
		query.append(",DECODE(TS_IND, 'T', 'T', DECODE(PCTL_IO_BND_CD, 'T', '', PCTL_IO_BND_CD)) AS TRSP_BND_CD" ).append("\n"); 
		query.append(",TRNS_RQST_OFC_CD" ).append("\n"); 
		query.append(",TRNS_RQST_USR_ID" ).append("\n"); 
		query.append(",TRNS_RQST_RSN" ).append("\n"); 
		query.append(",INLND_ROUT_INV_BIL_PATT_CD AS RAIL_CMB_THRU_TP_CD" ).append("\n"); 
		query.append(",SC_NO" ).append("\n"); 
		query.append(",RFA_NO" ).append("\n"); 
		query.append(",INTER_RMK" ).append("\n"); 
		query.append(",TRSP_SO_STS_CD" ).append("\n"); 
		query.append(",MST_LCL_CD" ).append("\n"); 
		query.append(",FM_LOC_CONTI_CD" ).append("\n"); 
		query.append(",BKG_NO" ).append("\n"); 
		query.append(",BKG_RCVDE_TERM_CD" ).append("\n"); 
		query.append(",BL_NO" ).append("\n"); 
		query.append(",BKG_CGO_TP_CD" ).append("\n"); 
		query.append(",CGO_TP_CD" ).append("\n"); 
		query.append(",TRUNKVVD" ).append("\n"); 
		query.append(",SLAN_CD" ).append("\n"); 
		query.append(",POR_CD" ).append("\n"); 
		query.append(",POL_CD" ).append("\n"); 
		query.append(",POD_CD" ).append("\n"); 
		query.append(",DEL_CD" ).append("\n"); 
		query.append(",CMDT_CD" ).append("\n"); 
		query.append(",TO_CHAR(N1ST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') N1ST_NOD_PLN_DT" ).append("\n"); 
		query.append(",TO_CHAR(LST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') LST_NOD_PLN_DT" ).append("\n"); 
		query.append(",TO_CHAR(DOR_NOD_PLN_DT, 'YYYYMMDDHH24MISS') DOR_NOD_PLN_DT" ).append("\n"); 
		query.append(",TRSP_COST_DTL_MOD_CD" ).append("\n"); 
		query.append(",UPLN_SO_FLG" ).append("\n"); 
		query.append(",TRSP_SO_STS_NM" ).append("\n"); 
		query.append(",RAIL_CRE_DT" ).append("\n"); 
		query.append(",RAIL_TO_NOD_CD" ).append("\n"); 
		query.append(",POD_CONTI_CD" ).append("\n"); 
		query.append(",DECODE(TRSP_COST_DTL_MOD_CD, 'DR', SUBSTR(TRO_SEQ, 1, INSTR(TRO_SEQ, '$', 1, 1) - 1)) AS TRO_SEQ" ).append("\n"); 
		query.append(",DECODE(TRSP_COST_DTL_MOD_CD, 'DR', SUBSTR(TRO_SEQ, INSTR(TRO_SEQ, '$', 1, 1) + 1)) AS TRO_SUB_SEQ" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("    SELECT" ).append("\n"); 
		query.append("    -- WHERE 조건에 따른 INDEX 설정 " ).append("\n"); 
		query.append("    #if ($arr_bkgno.size() > 0)" ).append("\n"); 
		query.append("        /*+ INDEX (A XAK1SCE_COP_HDR) */" ).append("\n"); 
		query.append("    #elseif ($arr_cntrno.size() > 0)" ).append("\n"); 
		query.append("        /*+ INDEX (A XAK9SCE_COP_HDR) ORDERED */" ).append("\n"); 
		query.append("    #elseif ($arr_billno.size() > 0)" ).append("\n"); 
		query.append("        /*+ LEADING(C) INDEX (C XUK1BKG_BOOKING) */" ).append("\n"); 
		query.append("    #elseif ($arr_trunkvvd.size() > 0)" ).append("\n"); 
		query.append("        /*+ LEADING(C) INDEX (C XAK2BKG_BOOKING ) */" ).append("\n"); 
		query.append("    #elseif (${contract_no} != '' )" ).append("\n"); 
		query.append("        /*+ LEADING(C) */" ).append("\n"); 
		query.append("    #elseif (${frm_plandate} != '')" ).append("\n"); 
		query.append("        #if (${dateCondition} == 'P')" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("        #elseif (${dateCondition} == 'D')" ).append("\n"); 
		query.append("            /*+ INDEX (A XAK7SCE_COP_HDR ) */" ).append("\n"); 
		query.append("        #elseif (${dateCondition} == 'R')" ).append("\n"); 
		query.append("            /*+ LEADING(B_RAIL_IDX) USE_NL(B_RAIL_IDX RAIL B A C) */" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      B.CTRL_OFC_CD" ).append("\n"); 
		query.append("    , A.COP_NO " ).append("\n"); 
		query.append("    , NVL(A.CNTR_NO, ' ') EQ_NO" ).append("\n"); 
		query.append("    , A.CNTR_TPSZ_CD     " ).append("\n"); 
		query.append("    , B.COST_ACT_GRP_SEQ     " ).append("\n"); 
		query.append("    , B.COST_ACT_GRP_CD       " ).append("\n"); 
		query.append("    , B.N1ST_VNDR_SEQ        " ).append("\n"); 
		query.append("    , SUBSTR(B.COST_ACT_GRP_CD,3) TRSP_CRR_MOD_CD" ).append("\n"); 
		query.append("    , SUBSTR(B.N1ST_NOD_CD,1,5)  FM_NOD_CD" ).append("\n"); 
		query.append("    , SUBSTR(B.N1ST_NOD_CD,6)    FM_NOD_YARD" ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') TO_NOD_CD    " ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') TO_NOD_YARD  " ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('VIA', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') VIA_NOD_CD   " ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('VIA', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') VIA_NOD_YARD " ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE') DOR_NOD_CD   " ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'YARD') DOR_NOD_YARD " ).append("\n"); 
		query.append("    , B.PCTL_IO_BND_CD              " ).append("\n"); 
		query.append("    , B.TRNS_RQST_OFC_CD            " ).append("\n"); 
		query.append("    , B.TRNS_RQST_USR_ID            " ).append("\n"); 
		query.append("    , B.TRNS_RQST_RSN               " ).append("\n"); 
		query.append("    , B.INLND_ROUT_INV_BIL_PATT_CD                   " ).append("\n"); 
		query.append("    , C.SC_NO                       " ).append("\n"); 
		query.append("    , C.RFA_NO                      " ).append("\n"); 
		query.append("    , NVL2(B.DELT_USR_ID, 'Candidate Delete :'||B.DELT_USR_ID, '') || NVL2(B.DELT_DT, ' / '||TO_CHAR(B.DELT_DT,'YYYYMMDDHH24MISS'), '') INTER_RMK     " ).append("\n"); 
		query.append("    , B.TRSP_SO_STS_CD " ).append("\n"); 
		query.append("    , DECODE(A.MST_COP_NO, A.COP_NO, 'P', 'X')   MST_LCL_CD " ).append("\n"); 
		query.append("    , @[ui_conti_cd] AS FM_LOC_CONTI_CD" ).append("\n"); 
		query.append("    , A.BKG_NO                      " ).append("\n"); 
		query.append("    , DECODE(B.PCTL_IO_BND_CD, 'I',C.DE_TERM_CD, 'O',C.RCV_TERM_CD, '')   BKG_RCVDE_TERM_CD " ).append("\n"); 
		query.append("    , C.BL_NO " ).append("\n"); 
		query.append("    , C.BKG_CGO_TP_CD     " ).append("\n"); 
		query.append("    , 'F' CGO_TP_CD     " ).append("\n"); 
		query.append("    , (C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD) TRUNKVVD " ).append("\n"); 
		query.append("    , C.SLAN_CD           " ).append("\n"); 
		query.append("    , C.POR_CD POR_CD     " ).append("\n"); 
		query.append("    , C.POL_CD POL_CD     " ).append("\n"); 
		query.append("    , C.POD_CD POD_CD     " ).append("\n"); 
		query.append("    , C.DEL_CD DEL_CD     " ).append("\n"); 
		query.append("    , C.CMDT_CD" ).append("\n"); 
		query.append("--    , TO_CHAR(B.N1ST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') N1ST_NOD_PLN_DT " ).append("\n"); 
		query.append("    , NVL((SELECT  DECODE(DECODE(B.PCTL_COST_MOD_CD,'C','CY','Z','DR',''), 'CY', DECODE(NVL(ACT_STS_MAPG_CD,'XX'), 'OP', ACT_DT, ESTM_DT), ESTM_DT)" ).append("\n"); 
		query.append("                    FROM   SCE_COP_DTL" ).append("\n"); 
		query.append("                    WHERE  COP_NO = A.COP_NO" ).append("\n"); 
		query.append("                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1)||'_D_'" ).append("\n"); 
		query.append("                    AND    NOD_CD = B.N1ST_NOD_CD" ).append("\n"); 
		query.append("                    AND    ROWNUM = 1), B.N1ST_NOD_PLN_DT) N1ST_NOD_PLN_DT " ).append("\n"); 
		query.append("--    , TO_CHAR(B.LST_NOD_PLN_DT, 'YYYYMMDDHH24MISS') AS LST_NOD_PLN_DT " ).append("\n"); 
		query.append("    , NVL((SELECT  ESTM_DT" ).append("\n"); 
		query.append("                    FROM   SCE_COP_DTL" ).append("\n"); 
		query.append("                    WHERE  COP_NO = A.COP_NO" ).append("\n"); 
		query.append("                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1)||'_A_'" ).append("\n"); 
		query.append("                    AND    NOD_CD = TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('TO' , B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE')" ).append("\n"); 
		query.append("                    AND    ROWNUM = 1), B.LST_NOD_PLN_DT) LST_NOD_PLN_DT        " ).append("\n"); 
		query.append("--    , TO_CHAR(NVL(DECODE(B.PCTL_IO_BND_CD, 'I', A.CFM_APNT_DT, 'O', A.CFM_OB_DOR_ARR_DT),B.DOR_ARR_DT), 'YYYYMMDDHH24MISS') AS DOR_NOD_PLN_DT" ).append("\n"); 
		query.append("    , NVL((SELECT  NVL((SELECT DOR_ARR_DT" ).append("\n"); 
		query.append("                            FROM BKG_TRO_DTL" ).append("\n"); 
		query.append("                           WHERE BKG_NO = D.COP_NO" ).append("\n"); 
		query.append("                             AND IO_BND_CD = B.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("                             AND RTN_TRO_FLG = 'N'" ).append("\n"); 
		query.append("                             AND TRO_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 1)" ).append("\n"); 
		query.append("                             AND TRO_SUB_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 2)" ).append("\n"); 
		query.append("                             AND @[ui_conti_cd] = 'M'" ).append("\n"); 
		query.append("							 AND ROWNUM = 1" ).append("\n"); 
		query.append("                          UNION ALL" ).append("\n"); 
		query.append("                          SELECT ARR_DT" ).append("\n"); 
		query.append("                            FROM BKG_EUR_TRO_DTL" ).append("\n"); 
		query.append("                           WHERE BKG_NO = D.COP_NO" ).append("\n"); 
		query.append("                             AND IO_BND_CD = B.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("                             AND TRO_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 1)" ).append("\n"); 
		query.append("                             AND TRO_SUB_SEQ = REGEXP_SUBSTR( DECODE(B.PCTL_COST_MOD_CD,'Z', TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'M')), '[^$]', 1, 2)" ).append("\n"); 
		query.append("                             AND @[ui_conti_cd] <> 'M'" ).append("\n"); 
		query.append("							 AND ROWNUM = 1" ).append("\n"); 
		query.append("						), D.ESTM_DT)" ).append("\n"); 
		query.append("                    FROM   SCE_COP_DTL D" ).append("\n"); 
		query.append("                    WHERE  COP_NO = A.COP_NO" ).append("\n"); 
		query.append("                    AND    ACT_CD LIKE '_'||NVL(B.PCTL_IO_BND_CD, 'T')||SUBSTR(B.COST_ACT_GRP_CD,3, 1)||'___'" ).append("\n"); 
		query.append("                    AND    NOD_CD = TRS_CYDOOR_COMM_PKG.GET_SO_NODE_FNC('DOR', B.PCTL_IO_BND_CD, B.PCTL_COST_MOD_CD, B.N1ST_NOD_CD, B.N2ND_NOD_CD, B.N3RD_NOD_CD, B.N4TH_NOD_CD, 'NODE')" ).append("\n"); 
		query.append("                    AND    ROWNUM = 1), NVL(DECODE(B.PCTL_IO_BND_CD, 'I', A.CFM_APNT_DT, 'O', A.CFM_OB_DOR_ARR_DT),B.DOR_ARR_DT)) DOR_NOD_PLN_DT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    , DECODE(B.PCTL_COST_MOD_CD,'C','CY','Z','DR','') TRSP_COST_DTL_MOD_CD " ).append("\n"); 
		query.append("    , DECODE(B.PCTL_COST_MOD_CD, '', 'Y', '') UPLN_SO_FLG  -- PCTL_COST_MOD_CD 가 NULL 인 경우는 Unplaned S/O만 해당되므로 Planed는 모두 ''" ).append("\n"); 
		query.append("    , (SELECT SUBSTR(COMMCODE_PKG.GET_COMDTL_NAME_FNC('CD00286', B.TRSP_SO_STS_CD), 1, 64) FROM DUAL) TRSP_SO_STS_NM  -- DUAL 테이블을 사용하면 동일한 데이타는 한번만 조회하게 된다. SUBSTR을 사용하지 않았을 경우 기본 4000byte를 사용하게 된다." ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${frm_plandate} != '' )" ).append("\n"); 
		query.append("        #if (${dateCondition} == 'R' )" ).append("\n"); 
		query.append("            , TO_CHAR(RAIL.LOCL_CRE_DT, 'YYYYMMDDHH24MISS') RAIL_CRE_DT" ).append("\n"); 
		query.append("            , RAIL.TO_NOD_CD RAIL_TO_NOD_CD" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("            , NULL RAIL_CRE_DT" ).append("\n"); 
		query.append("            , NULL RAIL_TO_NOD_CD" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("        , NULL RAIL_CRE_DT" ).append("\n"); 
		query.append("        , NULL RAIL_TO_NOD_CD" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${cydoor_div} == 'DR' )" ).append("\n"); 
		query.append("          -- 함수로 처리하지 않을 경우 plan이 원하는 대로 나오지 않아 함수로 처리" ).append("\n"); 
		query.append("        , TRS_CYDOOR_COMM_PKG.GET_CONTI_CD(C.POD_CD) POD_CONTI_CD -- OUTTER JOIN 밖에서 조회조건으로만 사용" ).append("\n"); 
		query.append("        ,(SELECT #if (${ui_conti_cd} == 'E' )" ).append("\n"); 
		query.append("                   TO_CHAR(X.TRO_SEQ)" ).append("\n"); 
		query.append("                 #else" ).append("\n"); 
		query.append("                   'existence'" ).append("\n"); 
		query.append("                 #end" ).append("\n"); 
		query.append("            FROM TRS_TRSP_SVC_ORD X" ).append("\n"); 
		query.append("           WHERE X.COP_NO                = B.COP_NO" ).append("\n"); 
		query.append("             AND X.TRSP_COST_DTL_MOD_CD  = 'DR'" ).append("\n"); 
		query.append("             AND X.TRSP_BND_CD           = B.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("             AND NVL(X.DELT_FLG, 'N')    = 'N'" ).append("\n"); 
		query.append("             AND ROWNUM = 1" ).append("\n"); 
		query.append("         ) DUP_CHK" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("        , NULL POD_CONTI_CD" ).append("\n"); 
		query.append("        , NULL DUP_CHK" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    , TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, @[ui_conti_cd]) TRO_SEQ" ).append("\n"); 
		query.append("    ,CASE" ).append("\n"); 
		query.append("       WHEN (SELECT COUNT(SL.COP_NO)" ).append("\n"); 
		query.append("               FROM SCE_PLN_SO_LIST SL" ).append("\n"); 
		query.append("              WHERE SL.COP_NO = B.COP_NO" ).append("\n"); 
		query.append("                AND SL.PCTL_IO_BND_CD = B.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("                AND SL.PCTL_COST_MOD_CD = 'Z') > 0 AND B.PCTL_IO_BND_CD = 'O'  THEN" ).append("\n"); 
		query.append("        DECODE(SUBSTR(TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'E'), 1, INSTR(TRS_CYDOOR_COMM_PKG.GET_TRO_MAPG(B.COP_NO, B.PCTL_IO_BND_CD, 'E'), '$', 1, 1) - 1), NULL, 'N', 'Y')" ).append("\n"); 
		query.append("       ELSE 'XX'" ).append("\n"); 
		query.append("     END CNTR_CFM_FLG" ).append("\n"); 
		query.append("    ,(SELECT DECODE(SUBSTR(DTL.ACT_CD, 2, 2) || SUBSTR(DTL.ACT_CD, 5, 2), 'TWDO', 'T', '')" ).append("\n"); 
		query.append("        FROM SCE_COP_DTL DTL" ).append("\n"); 
		query.append("       WHERE DTL.COP_NO = A.COP_NO" ).append("\n"); 
		query.append("         AND DTL.NOD_CD = B.N1ST_NOD_CD" ).append("\n"); 
		query.append("         AND SUBSTR(DTL.ACT_CD, 2, 2) = 'TW'" ).append("\n"); 
		query.append("         AND SUBSTR(DTL.ACT_CD, 5, 2) = 'DO'" ).append("\n"); 
		query.append("         AND ROWNUM =1 ) TS_IND" ).append("\n"); 
		query.append("    FROM SCE_COP_HDR A " ).append("\n"); 
		query.append("       , SCE_PLN_SO_LIST B " ).append("\n"); 
		query.append("       , BKG_BOOKING C " ).append("\n"); 
		query.append("    -- US RAIL Creation date로 조회시 table scan을 하지않고 index scan을 할 수 할 수 있도록 rowid를 사용하여 sql 작성" ).append("\n"); 
		query.append("    #if (${frm_plandate} != '' )" ).append("\n"); 
		query.append("        #if (${dateCondition} == 'R' )" ).append("\n"); 
		query.append("            ,( " ).append("\n"); 
		query.append("            SELECT B_RAIL_IDX.COP_NO, " ).append("\n"); 
		query.append("                    (SELECT /*+ INDEX(RAIL XAK16TRS_TRSP_RAIL_BIL_ORD ) */ " ).append("\n"); 
		query.append("                            RAIL.ROWID " ).append("\n"); 
		query.append("                       FROM TRS_TRSP_RAIL_BIL_ORD RAIL " ).append("\n"); 
		query.append("                      WHERE B_RAIL_IDX.COP_NO = RAIL.COP_NO " ).append("\n"); 
		query.append("                        AND RAIL.LOCL_CRE_DT BETWEEN TO_DATE(@[frm_plandate]||'000000','YYYYMMDDHH24MISS') AND TO_DATE(@[to_plandate]||'235959','YYYYMMDDHH24MISS') " ).append("\n"); 
		query.append("                        AND RAIL.TO_NOD_CD = B_RAIL_IDX.N1ST_NOD_CD" ).append("\n"); 
		query.append("                        AND ROWNUM <= 1 ) AS RAIL_ROWID " ).append("\n"); 
		query.append("              FROM  SCE_PLN_SO_LIST B_RAIL_IDX " ).append("\n"); 
		query.append("             WHERE 1 = 1" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("             #if ($arr_so_office.size() > 0) " ).append("\n"); 
		query.append("                 AND B_RAIL_IDX.CTRL_OFC_CD in (" ).append("\n"); 
		query.append("                 #foreach( ${key} in ${arr_so_office}) " ).append("\n"); 
		query.append("                   #if($velocityCount < $arr_so_office.size()) " ).append("\n"); 
		query.append("                     '$key', " ).append("\n"); 
		query.append("                   #else " ).append("\n"); 
		query.append("                     '$key' " ).append("\n"); 
		query.append("                   #end " ).append("\n"); 
		query.append("                 #end" ).append("\n"); 
		query.append("                 )" ).append("\n"); 
		query.append("             #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("            -- Provision 체크여부 체크일 경우 'UD' (첫번째)" ).append("\n"); 
		query.append("            #if (${TroUnConfirmDoor} == 'UD' )" ).append("\n"); 
		query.append("                 AND B_RAIL_IDX.TRSP_SO_STS_CD IN ('P', 'N')" ).append("\n"); 
		query.append("            #else" ).append("\n"); 
		query.append("                 AND B_RAIL_IDX.TRSP_SO_STS_CD = 'P'" ).append("\n"); 
		query.append("            #end" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            -- CY , DOOR 구분" ).append("\n"); 
		query.append("            #if (${cydoor_div} == 'DR' )" ).append("\n"); 
		query.append("                 AND B_RAIL_IDX.PCTL_COST_MOD_CD = 'Z'" ).append("\n"); 
		query.append("            #else" ).append("\n"); 
		query.append("                 AND B_RAIL_IDX.PCTL_COST_MOD_CD <> 'Z'" ).append("\n"); 
		query.append("            #end" ).append("\n"); 
		query.append("            ) B_RAIL_IDX" ).append("\n"); 
		query.append("            ,TRS_TRSP_RAIL_BIL_ORD RAIL" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    WHERE A.COP_NO = B.COP_NO" ).append("\n"); 
		query.append("      AND A.COP_STS_CD <> 'M'" ).append("\n"); 
		query.append("      AND A.COP_STS_CD <> 'O'" ).append("\n"); 
		query.append("      AND A.COP_STS_CD <> 'X'" ).append("\n"); 
		query.append("    #if (${frm_plandate} != '' )" ).append("\n"); 
		query.append("        #if (${dateCondition} == 'D' )" ).append("\n"); 
		query.append("            AND A.CFM_OB_DOR_ARR_DT BETWEEN TO_DATE(@[frm_plandate],'YYYYMMDD') AND TO_DATE(@[to_plandate],'YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      AND A.BKG_NO = C.BKG_NO" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arr_so_office.size() > 0) " ).append("\n"); 
		query.append("        AND B.CTRL_OFC_CD in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_so_office}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_so_office.size()) " ).append("\n"); 
		query.append("            '$key', " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${TroUnConfirmDoor} == 'UD' )" ).append("\n"); 
		query.append("        -- Provision 체크여부 체크일 경우 'UD' (첫번째)" ).append("\n"); 
		query.append("        AND B.TRSP_SO_STS_CD IN ('P', 'N')" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("        AND B.TRSP_SO_STS_CD = 'P'" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${cydoor_div} == 'DR' )" ).append("\n"); 
		query.append("        -- CY , DOOR 구분 " ).append("\n"); 
		query.append("        AND B.PCTL_COST_MOD_CD = 'Z'" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("        AND B.PCTL_COST_MOD_CD = 'C'" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${frm_plandate} != '' )" ).append("\n"); 
		query.append("        -- Date 구분에 따라 기간별 조회를 한다." ).append("\n"); 
		query.append("        #if (${dateCondition} == 'P' )" ).append("\n"); 
		query.append("            AND B.N1ST_NOD_PLN_DT BETWEEN TO_DATE(@[frm_plandate],'YYYYMMDD') AND TO_DATE(@[to_plandate],'YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("        #elseif (${dateCondition} == 'R' ) --테이블 스캔을 피하고 index를 원하는 대로 태우기 위하여 B_RAIL_IDX 라는 alias로 SCE_PLN_SO_LIST 를 한번 더 사용하였다." ).append("\n"); 
		query.append("            AND B.COP_NO    = B_RAIL_IDX.COP_NO" ).append("\n"); 
		query.append("            AND RAIL.ROWID = B_RAIL_IDX.RAIL_ROWID " ).append("\n"); 
		query.append("            AND RAIL_ROWID IS NOT NULL " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arr_bkgno.size() > 0) " ).append("\n"); 
		query.append("        -- Booking no로 조회" ).append("\n"); 
		query.append("        AND A.BKG_NO in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_bkgno}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_bkgno.size()) " ).append("\n"); 
		query.append("            '$key', " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arr_billno.size() > 0) " ).append("\n"); 
		query.append("        -- BL NO로 조회" ).append("\n"); 
		query.append("        AND C.BL_NO in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_billno}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_billno.size()) " ).append("\n"); 
		query.append("            '$key', " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arr_cntrno.size() > 0) " ).append("\n"); 
		query.append("        -- Container no로 조회" ).append("\n"); 
		query.append("        AND A.CNTR_NO in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_cntrno}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_cntrno.size()) " ).append("\n"); 
		query.append("            '$key', " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if ($arr_trunkvvd.size() > 0) " ).append("\n"); 
		query.append("        -- Trunk VVD로 조회 " ).append("\n"); 
		query.append("        AND (C.VSL_CD,C.SKD_VOY_NO,C.SKD_DIR_CD) in (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_trunkvvd}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_trunkvvd.size()) " ).append("\n"); 
		query.append("            (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1))," ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1))" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("		AND C.VSL_CD <> 'COXX'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${contract_no} != '' )" ).append("\n"); 
		query.append("        -- Contract No로 조회 " ).append("\n"); 
		query.append("        #if (${contract_tp_cd} == 'S' )" ).append("\n"); 
		query.append("            AND C.SC_NO IN (@[contract_no])" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("            AND C.RFA_NO IN (@[contract_no])" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${bound} != 'ALL' )" ).append("\n"); 
		query.append("        -- Bound로 조회" ).append("\n"); 
		query.append("        AND B.PCTL_IO_BND_CD = @[bound]" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${transmode} != 'ALL' )" ).append("\n"); 
		query.append("        -- Trans Mode로 조회" ).append("\n"); 
		query.append("        AND SUBSTR(B.COST_ACT_GRP_CD, 3) = @[transmode]" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${ui_conti_cd} == 'M' )" ).append("\n"); 
		query.append("        -- Mexico는 미주 US RAIL에서 조회하지 않고 CY/DOOR에서 조회한다. (INLND_ROUT_INV_BIL_PATT_CD 값은 미주 Rail만 존재한다.)" ).append("\n"); 
		query.append("        AND B.INLND_ROUT_INV_BIL_PATT_CD IS NULL" ).append("\n"); 
		query.append("        --AND NOT EXISTS (SELECT 1 FROM MDM_COUNTRY WHERE CNT_CD != 'MX' AND MDM_LOC_FM.CONTI_CD ='M' AND B.TRSP_MOD_CD = 'RD' AND MDM_LOC_FM.CNT_CD = CNT_CD)" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	-- Port로 조회 " ).append("\n"); 
		query.append("	#if (${portio} == 'I')" ).append("\n"); 
		query.append("  		AND C.POD_CD = @[portcd]" ).append("\n"); 
		query.append("	#elseif (${portio} == 'O')" ).append("\n"); 
		query.append("		AND C.POL_CD = @[portcd]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") AA WHERE 1=1" ).append("\n"); 
		query.append("AND AA.MST_LCL_CD = 'P'" ).append("\n"); 
		query.append("#if (${costmode} == 'CY')" ).append("\n"); 
		query.append("    -- Cost Mode로 조회 " ).append("\n"); 
		query.append("    AND (SUBSTR(AA.COST_ACT_GRP_CD, 2, 1) = 'Y' OR AA.COST_ACT_GRP_CD in ('POWD', 'PRWD')) " ).append("\n"); 
		query.append("    AND AA.FM_NOD_CD <> AA.TO_NOD_CD" ).append("\n"); 
		query.append("#elseif (${costmode} == 'DR')" ).append("\n"); 
		query.append("    AND SUBSTR(AA.COST_ACT_GRP_CD, 2, 1) = 'D'" ).append("\n"); 
		query.append("#elseif (${costmode} == 'LS')" ).append("\n"); 
		query.append("    AND SUBSTR(AA.COST_ACT_GRP_CD, 1, 2) IN ('IY', 'OY') AND AA.FM_NOD_CD = AA.TO_NOD_CD" ).append("\n"); 
		query.append("#elseif (${costmode} == 'TS')" ).append("\n"); 
		query.append("    AND SUBSTR(AA.COST_ACT_GRP_CD, 1, 1) IN ('T', 'P')   AND AA.FM_NOD_CD = AA.TO_NOD_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${frmnode} != '')" ).append("\n"); 
		query.append("    -- From Node의 Location으로 조회" ).append("\n"); 
		query.append("    AND AA.FM_NOD_CD = @[frmnode]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${frmnodeyard} != '')" ).append("\n"); 
		query.append("    -- From Node의 Yard로 조회 " ).append("\n"); 
		query.append("    AND AA.FM_NOD_YARD = @[frmnodeyard]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- Multi From Node로 조회" ).append("\n"); 
		query.append("#if ($arr_fmnode.size() > 0) " ).append("\n"); 
		query.append("    AND AA.FM_NOD_CD||AA.FM_NOD_YARD in (" ).append("\n"); 
		query.append("    #foreach( ${key} in ${arr_fmnode}) " ).append("\n"); 
		query.append("	    #if($velocityCount < $arr_fmnode.size()) " ).append("\n"); 
		query.append("	        '$key', " ).append("\n"); 
		query.append("	    #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("	    #end " ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${vianode} != '')" ).append("\n"); 
		query.append("    -- Via Node의 Location으로 조회 " ).append("\n"); 
		query.append("    AND AA.VIA_NOD_CD = @[vianode]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("#if (${vianodeyard} != '')" ).append("\n"); 
		query.append("    -- Via Node의 Yard로 조회" ).append("\n"); 
		query.append("    AND AA.VIA_NOD_YARD = @[vianodeyard]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${tonode} != '')" ).append("\n"); 
		query.append("    -- To Node의 Location으로 조회" ).append("\n"); 
		query.append("    AND AA.TO_NOD_CD = @[tonode]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${tonodeyard} != '')" ).append("\n"); 
		query.append("    -- To Node의 Yard로 조회" ).append("\n"); 
		query.append("    AND AA.TO_NOD_YARD = @[tonodeyard]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- Multi To Node로 조회" ).append("\n"); 
		query.append("#if ($arr_tonode.size() > 0) " ).append("\n"); 
		query.append("    AND AA.TO_NOD_CD||AA.TO_NOD_YARD in (" ).append("\n"); 
		query.append("    #foreach( ${key} in ${arr_tonode}) " ).append("\n"); 
		query.append("	    #if($velocityCount < $arr_tonode.size()) " ).append("\n"); 
		query.append("	        '$key', " ).append("\n"); 
		query.append("	    #else " ).append("\n"); 
		query.append("            '$key' " ).append("\n"); 
		query.append("	    #end " ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${dorloc} != '')" ).append("\n"); 
		query.append("    -- Door Node의 Location으로 조회" ).append("\n"); 
		query.append("    AND AA.DOR_NOD_CD = @[dorloc]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${dorlocyard} != '')" ).append("\n"); 
		query.append("    -- Door Node의 Yard로 조회 " ).append("\n"); 
		query.append("    AND AA.DOR_NOD_YARD = @[dorlocyard]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if ($arr_feeder_vvd.size() > 0) " ).append("\n"); 
		query.append("    -- Feeder VVD로 조회" ).append("\n"); 
		query.append("    #if (${feeder_vvd_tp} == 'I' )" ).append("\n"); 
		query.append("        AND TRS_CYDOOR_COMM_PKG.GET_BKG_VVD(@[feeder_vvd_tp], AA.BKG_NO, AA.FM_NOD_CD) IN (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_feeder_vvd}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_feeder_vvd.size())" ).append("\n"); 
		query.append("                '$key',  " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key'" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #elseif (${feeder_vvd_tp} == 'O' )" ).append("\n"); 
		query.append("        AND TRS_CYDOOR_COMM_PKG.GET_BKG_VVD(@[feeder_vvd_tp], AA.BKG_NO, DECODE(AA.PCTL_IO_BND_CD,'O',AA.TO_NOD_CD,AA.FM_NOD_CD)) IN (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_feeder_vvd}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_feeder_vvd.size())" ).append("\n"); 
		query.append("                '$key',  " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key'" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #elseif (${feeder_vvd_tp} == 'A' )" ).append("\n"); 
		query.append("        AND " ).append("\n"); 
		query.append("        ((" ).append("\n"); 
		query.append("        TRS_CYDOOR_COMM_PKG.GET_BKG_VVD('I', AA.BKG_NO, AA.FM_NOD_CD) IN (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_feeder_vvd}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_feeder_vvd.size())" ).append("\n"); 
		query.append("                '$key',  " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key'" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        )) OR (" ).append("\n"); 
		query.append("        TRS_CYDOOR_COMM_PKG.GET_BKG_VVD('O', AA.BKG_NO, DECODE(AA.PCTL_IO_BND_CD,'O',AA.TO_NOD_CD,AA.FM_NOD_CD)) IN (" ).append("\n"); 
		query.append("        #foreach( ${key} in ${arr_feeder_vvd}) " ).append("\n"); 
		query.append("          #if($velocityCount < $arr_feeder_vvd.size())" ).append("\n"); 
		query.append("                '$key',  " ).append("\n"); 
		query.append("          #else " ).append("\n"); 
		query.append("            '$key'" ).append("\n"); 
		query.append("          #end " ).append("\n"); 
		query.append("        #end        " ).append("\n"); 
		query.append("        ))" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if($arr_ecc_cd.size() > 0)" ).append("\n"); 
		query.append("AND CASE" ).append("\n"); 
		query.append("      WHEN AA.PCTL_IO_BND_CD = 'I'" ).append("\n"); 
		query.append("      THEN (" ).append("\n"); 
		query.append("            SELECT ECC_CD" ).append("\n"); 
		query.append("              FROM MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("             WHERE SCC_CD = (SELECT SCC_CD" ).append("\n"); 
		query.append("                               FROM MDM_LOCATION" ).append("\n"); 
		query.append("                              WHERE LOC_CD = AA.TO_NOD_CD)" ).append("\n"); 
		query.append("               AND ROWNUM = 1" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("      ELSE (" ).append("\n"); 
		query.append("            SELECT ECC_CD" ).append("\n"); 
		query.append("              FROM MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("             WHERE SCC_CD = (SELECT SCC_CD" ).append("\n"); 
		query.append("                               FROM MDM_LOCATION" ).append("\n"); 
		query.append("                              WHERE LOC_CD = AA.FM_NOD_CD)" ).append("\n"); 
		query.append("               AND ROWNUM = 1" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("    END IN (" ).append("\n"); 
		query.append("    #foreach($code IN ${arr_ecc_cd})" ).append("\n"); 
		query.append("        #if($velocityCount == 1)" ).append("\n"); 
		query.append("             '$code'" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("            ,'$code'" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if($eq_tpsz_cd.size() > 0)" ).append("\n"); 
		query.append("AND AA.CNTR_TPSZ_CD IN (" ).append("\n"); 
		query.append("    #foreach($code IN ${eq_tpsz_cd})" ).append("\n"); 
		query.append("        #if($velocityCount == 1)" ).append("\n"); 
		query.append("             '$code'" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("            ,'$code'" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${TroUnConfirmDoor} == 'UD')" ).append("\n"); 
		query.append("    -- Provision 체크여부 체크일 경우 'UD' (두번째)" ).append("\n"); 
		query.append("   AND ((AA.TRSP_COST_DTL_MOD_CD = 'DR') " ).append("\n"); 
		query.append("       -- OR (AA.TRSP_COST_DTL_MOD_CD = 'CY' AND CNTR_CFM_FLG = 'N' AND AA.EQ_NO <> 'COMU0000000')" ).append("\n"); 
		query.append("	    OR (AA.TRSP_COST_DTL_MOD_CD = 'CY' AND CNTR_CFM_FLG = 'N')" ).append("\n"); 
		query.append("	   )" ).append("\n"); 
		query.append("   AND TRO_SEQ IS NULL" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("    AND (    (AA.TRSP_COST_DTL_MOD_CD = 'CY' AND CNTR_CFM_FLG = 'XX' AND DECODE(AA.PCTL_IO_BND_CD, 'O', '00000000000', 'T', '00000000000', AA.EQ_NO) <> 'COMU0000000')" ).append("\n"); 
		query.append("		  OR (AA.TRSP_COST_DTL_MOD_CD = 'CY' AND CNTR_CFM_FLG = 'Y')			" ).append("\n"); 
		query.append("		  OR (AA.PCTL_IO_BND_CD = 'I' AND (AA.TRSP_COST_DTL_MOD_CD = 'DR' AND (AA.TRO_SEQ IS NOT NULL OR (AA.PCTL_IO_BND_CD = 'I' AND AA.POD_CONTI_CD = 'M') OR AA.FM_LOC_CONTI_CD = 'A')) AND AA.EQ_NO <> 'COMU0000000') " ).append("\n"); 
		query.append("		  OR (AA.PCTL_IO_BND_CD = 'O' AND (AA.TRSP_COST_DTL_MOD_CD = 'DR' AND (AA.TRO_SEQ IS NOT NULL OR (AA.PCTL_IO_BND_CD = 'I' AND AA.POD_CONTI_CD = 'M') OR AA.FM_LOC_CONTI_CD = 'A')))" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if ($arr_zip_code.size() > 0) " ).append("\n"); 
		query.append("    AND (SELECT DTL.DOR_ZIP_ID" ).append("\n"); 
		query.append("           FROM BKG_EUR_TRO_DTL DTL" ).append("\n"); 
		query.append("          WHERE DTL.BKG_NO      = AA.BKG_NO" ).append("\n"); 
		query.append("            AND DTL.IO_BND_CD   = AA.PCTL_IO_BND_CD" ).append("\n"); 
		query.append("            AND DTL.TRO_SEQ     = TO_NUMBER(SUBSTR(AA.TRO_SEQ, 1, INSTR(AA.TRO_SEQ, '$', 1, 1) - 1))" ).append("\n"); 
		query.append("            AND DTL.TRO_SUB_SEQ = 1 ) IN (" ).append("\n"); 
		query.append("            #foreach( ${key} in ${arr_zip_code}) " ).append("\n"); 
		query.append("              #if($velocityCount < $arr_zip_code.size())" ).append("\n"); 
		query.append("                    '$key',  " ).append("\n"); 
		query.append("              #else " ).append("\n"); 
		query.append("                '$key'" ).append("\n"); 
		query.append("              #end " ).append("\n"); 
		query.append("            #end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${cydoor_div} == 'DR' )" ).append("\n"); 
		query.append("    #if (${ui_conti_cd} == 'E' )" ).append("\n"); 
		query.append("      AND (AA.DUP_CHK IS NULL OR SUBSTR(TRO_SEQ, 1, INSTR(TRO_SEQ, '$', 1, 1) - 1) <> AA.DUP_CHK)" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("      AND AA.DUP_CHK IS NULL" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 

	}
}