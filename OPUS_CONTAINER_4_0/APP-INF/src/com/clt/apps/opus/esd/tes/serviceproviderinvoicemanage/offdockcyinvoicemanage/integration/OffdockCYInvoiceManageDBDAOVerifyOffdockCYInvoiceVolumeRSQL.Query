<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OffdockCYInvoiceManageDBDAOVerifyOffdockCYInvoiceVolumeRSQL">
			<desc><![CDATA[VerifyOffdockCYInvoiceVolume]]></desc>
			<sql><![CDATA[
SELECT 'I' IBFLAG, X.*
 FROM ( SELECT DENSE_RANK() OVER (PARTITION BY Z.TML_SO_TMP_SEQ, Z.CNTR_NO ORDER BY Z.GT_IN_DT_DIFF ASC) DIFF_RANK,
               Z.AWK_CGO_FLG, NVL(DECODE(Z.RC_FLG,'Y','Y','N'),'N') RC_FLG,
               Z.CNTR_NO, Z.CNTR_TPSZ_CD, TO_CHAR(Z.INV_GATE_IN_DT,'YYYYMMDDHH24MI') INV_GATE_IN_DT, TO_CHAR(Z.INV_GATE_OUT_DT,'YYYYMMDDHH24MI') INV_GATE_OUT_DT, 
               TO_CHAR(Z.MVMT_GATE_IN_DT,'YYYYMMDDHH24MI') MVMT_GATE_IN_DT,
               TO_CHAR(Z.MVMT_GATE_OUT_DT,'YYYYMMDDHH24MI') MVMT_GATE_OUT_DT,
               TRUNC(Z.MVMT_GATE_IN_DT  - Z.INV_GATE_IN_DT) GATE_IN_TD_DYS, 
               TRUNC(Z.MVMT_GATE_OUT_DT - Z.INV_GATE_OUT_DT) GATE_OUT_TD_DYS,
               TRUNC(Z.MVMT_GATE_OUT_DT - Z.MVMT_GATE_IN_DT) MVMT_STAY_DYS,
               TRUNC(Z.INV_GATE_OUT_DT - Z.INV_GATE_IN_DT) INV_STAY_DYS,
               TRUNC((Z.MVMT_GATE_OUT_DT - Z.MVMT_GATE_IN_DT)) -
               TRUNC(Z.INV_GATE_OUT_DT - Z.INV_GATE_IN_DT) STAY_DIFF_DYS,
               Z.CNTR_STY_CD, Z.IO_BND_CD, Z.LOCL_TS_IND_CD, Z.DCGO_CLSS_CD, Z.BB_CGO_FLG,
               Z.DSCR_IND_CD, REPLACE(Z.BKG_NO,'OSCAR') BKG_NO, Z.BL_NO, Z.BL_NO_TP, Z.VSL_CD, Z.SKD_VOY_NO, Z.SKD_DIR_CD,
               CASE WHEN Z.DSCR_IND_CD IN ('DT','DE','DS','DP','HO','PD','NH','DB','DF','NN') THEN 'DC'
                    ELSE 'CO'
               END VRFY_RSLT_IND_CD,
               CASE WHEN Z.DSCR_IND_CD IS NULL THEN 'Y'
                    ELSE ''
               END CO_FLG,
               CASE WHEN Z.DSCR_IND_CD IS NOT NULL THEN 'Y'
                    ELSE ''
               END DC_FLG,
  /* 2008-05-08: 김기영 부장님의 요청으로 Double Billing의 조건에 FM_PRD_DT ~ TO_PRD_DT와 겹치는 Invoice만 대상으로 변경한다.   */
               CASE WHEN Z.DSCR_IND_CD = 'DB' THEN
                     (
                     
                        SELECT 'Double billing Inv : '||INV_NO
                        FROM
                        (
                            SELECT   BB.CNTR_NO, BB.CNTR_STY_CD, MAX(BB.INV_NO) INV_NO
                            FROM
                            (
                                SELECT A.COST_CODE, C.CNTR_NO 
                                FROM(

                                    SELECT DISTINCT DECODE(1,0,C.LGS_COST_CD,DECODE(C.LGS_COST_CD,CD,TP,C.LGS_COST_CD)) COST_CODE
                                    FROM ( SELECT COUNT(T.LGS_COST_CD) CNT,
                                         T.LGS_COST_CD TP,
                                         T.THRP_LGS_COST_CD CD,
                                         H.TML_AGMT_OFC_CTY_CD CTY,
                                         H.TML_AGMT_SEQ SEQ,
                                         H.TML_AGMT_VER_NO NO
                                        FROM   TES_TML_AGMT_HDR H, TES_TML_AGMT_THRP_COST T
                                        WHERE  H.YD_CD            = @[yd_cd]
                                        AND    H.VNDR_SEQ         = @[vndr_seq]
                                        AND    H.TML_AGMT_STS_CD = 'C'
                                        AND    H.DELT_FLG        = 'N'


                                    #if (${agmt_ftr_inv_tp_cd} == 'OS')
                                           AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
                                           AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

                                    #elseif (${agmt_ftr_inv_tp_cd} == 'OT' || ${agmt_ftr_inv_tp_cd} == 'OFON' || ${agmt_ftr_inv_tp_cd} == 'OTOS')
                                           AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[to_prd_dt],'-') -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)
                                           AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[to_prd_dt],'-') -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)

                                    #end

                                        AND    H.TML_AGMT_VER_NO = ( SELECT MAX(M.TML_AGMT_VER_NO)
                                             FROM   TES_TML_AGMT_HDR M
                                             WHERE  M.YD_CD               = @[yd_cd]
                                             AND    M.VNDR_SEQ            = @[vndr_seq]
                                             AND    M.TML_AGMT_STS_CD     = 'C'
                                             AND    M.DELT_FLG            = 'N'

                                    #if (${agmt_ftr_inv_tp_cd} == 'OS')
                                                AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
                                                AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-')) -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

                                    #elseif (${agmt_ftr_inv_tp_cd} == 'OT' || ${agmt_ftr_inv_tp_cd} == 'OFON' || ${agmt_ftr_inv_tp_cd} == 'OTOS')
                                                AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[to_prd_dt],'-') -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)
                                                AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[to_prd_dt],'-')) -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)

                                    #else
                                                AND 1=2 )
                                    #end

                                        AND    H.TML_AGMT_OFC_CTY_CD = T.TML_AGMT_OFC_CTY_CD(+)
                                        AND    H.TML_AGMT_SEQ        = T.TML_AGMT_SEQ(+)
                                        AND    H.TML_AGMT_VER_NO     = T.TML_AGMT_VER_NO(+)
                                        GROUP BY H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
                                        T.LGS_COST_CD, T.THRP_LGS_COST_CD ) A, TES_TML_SO_COST C, TES_TML_AGMT_DTL D
                                    WHERE  C.COST_CALC_MZD_CD = 'A'
                                    AND    C.TML_AGMT_MGMT_CD = 'A'


                                    #if (${agmt_ftr_inv_tp_cd} == 'OT' || ${agmt_ftr_inv_tp_cd} == 'OTOS' )
                                    AND    C.FDCK_CY_TML_FLG = 'Y' -- OFF Dock Terminal Invoice

                                    #elseif (${agmt_ftr_inv_tp_cd} == 'OS')
                                    AND    C.FDCK_CY_STO_FLG = 'Y' -- OFF Dock Storage Invoice

                                    #elseif (${agmt_ftr_inv_tp_cd} == 'OFON')
                                    AND    C.MRN_TML_FLG = 'Y' AND C.LGS_COST_CD LIKE 'TMND%'  -- OFF Dock 화면에서 ON Dock 비용계산시

                                    #end

                                    AND    D.TML_AGMT_OFC_CTY_CD = A.CTY
                                    AND    D.TML_AGMT_SEQ = A.SEQ
                                    AND    D.TML_AGMT_VER_NO  = A.NO
                                    AND    C.LGS_COST_CD = D.LGS_COST_CD
                                    AND    DECODE(A.CNT,0,DECODE(SUBSTR(C.LGS_COST_CD,1,2),'TP','N','Y'),'Y') = 'Y' 
                                    AND    D.THRP_COST_CD_FLG IS NULL

                        --OTOS이면 OS용
                        #if (${agmt_ftr_inv_tp_cd} == 'OTOS') 
                                   UNION ALL

                                    SELECT DISTINCT DECODE(1,0,C.LGS_COST_CD,DECODE(C.LGS_COST_CD,CD,TP,C.LGS_COST_CD)) COST_CODE
                                    FROM ( SELECT COUNT(T.LGS_COST_CD) CNT,
                                         T.LGS_COST_CD TP,
                                         T.THRP_LGS_COST_CD CD,
                                         H.TML_AGMT_OFC_CTY_CD CTY,
                                         H.TML_AGMT_SEQ SEQ,
                                         H.TML_AGMT_VER_NO NO
                                        FROM   TES_TML_AGMT_HDR H, TES_TML_AGMT_THRP_COST T
                                        WHERE  H.YD_CD            = @[yd_cd]
                                        AND    H.VNDR_SEQ         = @[vndr_seq]
                                        AND    H.TML_AGMT_STS_CD = 'C'
                                        AND    H.DELT_FLG        = 'N'

                                        AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
                                        AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

                                        AND    H.TML_AGMT_VER_NO = ( SELECT MAX(M.TML_AGMT_VER_NO)
                                             FROM   TES_TML_AGMT_HDR M
                                             WHERE  M.YD_CD               = @[yd_cd]
                                             AND    M.VNDR_SEQ            = @[vndr_seq]
                                             AND    M.TML_AGMT_STS_CD     = 'C'
                                             AND    M.DELT_FLG            = 'N'

                                             AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
                                             AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-')) -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

                                        AND    H.TML_AGMT_OFC_CTY_CD = T.TML_AGMT_OFC_CTY_CD(+)
                                        AND    H.TML_AGMT_SEQ        = T.TML_AGMT_SEQ(+)
                                        AND    H.TML_AGMT_VER_NO     = T.TML_AGMT_VER_NO(+)
                                        GROUP BY H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
                                        T.LGS_COST_CD, T.THRP_LGS_COST_CD ) A, TES_TML_SO_COST C, TES_TML_AGMT_DTL D
                                    WHERE  C.COST_CALC_MZD_CD = 'A'
                                    AND    C.TML_AGMT_MGMT_CD = 'A'

                                    AND    C.FDCK_CY_STO_FLG = 'Y' -- OFF Dock Storage Invoice
                                    AND    D.TML_AGMT_OFC_CTY_CD = A.CTY
                                    AND    D.TML_AGMT_SEQ = A.SEQ
                                    AND    D.TML_AGMT_VER_NO  = A.NO
                                    AND    C.LGS_COST_CD = D.LGS_COST_CD
                                    AND    DECODE(A.CNT,0,DECODE(SUBSTR(C.LGS_COST_CD,1,2),'TP','N','Y'),'Y') = 'Y' 
                                    AND    D.THRP_COST_CD_FLG IS NULL
                            #end


                                ) A,
                                (
                                    SELECT ltrim(regexp_substr((select COST_CD_FTR_RMK
                                                                  from tes_tml_so_hdr
                                                                 where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]), '[^|]+', 1, level ) ,'|') as COST_CODE
                                     FROM dual
                                     connect by level<= ( length((select COST_CD_FTR_RMK
                                                                    from tes_tml_so_hdr
                                                                   where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]))+1 - length(replace((select COST_CD_FTR_RMK
                                                                                                                    from tes_tml_so_hdr
                                                                                                                   where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]), '|')) ) / length('|')
                                )B,
                                (
                                    SELECT * FROM TES_FILE_IMP_TMP
                                    WHERE 1=1
                                    AND TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]
         
                                ) C

    #if (${cost_cd_ftr_rmk} == '') 
        WHERE A.COST_CODE=B.COST_CODE(+)
    #else 
        WHERE A.COST_CODE=B.COST_CODE -- hdr정보에 데이터 있으면 inner 없음 outter
    #end
                                
                            ) AA,
                            (SELECT DISTINCT H.INV_NO
                                           , H.YD_CD
                                           , H.VNDR_SEQ
                                           ,
                                             (SELECT LGS_COST_CD
                                               FROM TES_TML_SO_DTL D
                                              WHERE 1=1
                                                    AND H.TML_SO_OFC_CTY_CD = D.TML_SO_OFC_CTY_CD
                                                    AND H.TML_SO_SEQ = D.TML_SO_SEQ
                                                    AND D.CALC_TP_CD = 'A'
                                                    AND NVL(L.CNTR_TPSZ_CD,'N') = NVL(D.CNTR_TPSZ_CD,'N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IO_BND_CD,'N'),'ON',NVL(L.IO_BND_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IO_BND_CD,'N'),'ON',NVL(D.IO_BND_CD,'N'),'OF','N','ST','N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IOC_CD,'N'),'ON',NVL(L.IOC_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IOC_CD,'N'),'ON',NVL(D.IOC_CD,'N'),'OF','N','ST','N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.LANE_CD,'N'),'ON',NVL(L.LANE_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.LANE_CD,'N'),'ON',NVL(D.LANE_CD,'N'),'OF','N','ST','N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM', DECODE(L.BB_CGO_FLG,'Y','BB',DECODE(L.LOCL_TS_IND_CD,'T',DECODE(L.CNTR_STY_CD,'F','TS','TM'),DECODE(L.CNTR_STY_CD,'F','FL','MT'))), 'ON',DECODE(L.CNTR_STY_CD,'F','F','M'),'OF',DECODE(L.CNTR_STY_CD,'F','FL','MT'),'ST',DECODE(L.LOCL_TS_IND_CD,'T','TS',DECODE(L.CNTR_STY_CD,'F','FL','MT'))) = DECODE(H.TML_INV_TP_CD,'TM',SUBSTR(D.LGS_COST_CD,5,2),'ON',SUBSTR(D.LGS_COST_CD,6,1),'OF',SUBSTR(D.LGS_COST_CD,5,2), 'ST',SUBSTR(D.LGS_COST_CD,5,2))
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.DCGO_CLSS_CD,'N'),'ON',NVL(L.DCGO_CLSS_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.DCGO_IND_CD,'N'),'ON',NVL(D.DCGO_IND_CD,'N'),'OF','N','ST','N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',DECODE(D.TML_TRNS_MOD_CD,'','S','S','S',NVL(L.TML_TRNS_MOD_CD,'S')),'N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.TML_TRNS_MOD_CD,'S'),'N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS','F','N'),'N') = DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS',L.CNTR_STY_CD,'N'),'N')
                                                    AND ROWNUM = 1
                                             ) AS LGS_COST_CD
                                           , L.CNTR_NO
                                           , L.CNTR_STY_CD
                                        FROM TES_TML_SO_HDR H
                                           , TES_TML_SO_CNTR_LIST L
                                       WHERE H.YD_CD = @[yd_cd]
                                             AND H.VNDR_SEQ = @[vndr_seq]
                                             AND H.TML_SO_OFC_CTY_CD = L.TML_SO_OFC_CTY_CD
                                             AND H.TML_SO_SEQ = L.TML_SO_SEQ
                                             AND NVL(H.DELT_FLG,'N') <> 'Y'
                                             AND L.VRFY_RSLT_IND_CD = 'CO'
                                             AND H.TML_INV_TP_CD = 'OF'
                                             AND H.TML_INV_RJCT_STS_CD <> 'RJ'
                                             AND EXISTS
                                             (SELECT '1'
                                               FROM TES_TML_SO_DTL D
                                              WHERE 1=1
                                                    AND H.TML_SO_OFC_CTY_CD = D.TML_SO_OFC_CTY_CD
                                                    AND H.TML_SO_SEQ = D.TML_SO_SEQ
                                                    AND D.CALC_TP_CD = 'A'
                                                    AND NVL(L.CNTR_TPSZ_CD,'N') = NVL(D.CNTR_TPSZ_CD,'N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IO_BND_CD,'N'),'ON',NVL(L.IO_BND_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IO_BND_CD,'N'),'ON',NVL(D.IO_BND_CD,'N'),'OF','N','ST','N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IOC_CD,'N'),'ON',NVL(L.IOC_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IOC_CD,'N'),'ON',NVL(D.IOC_CD,'N'),'OF','N','ST','N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.LANE_CD,'N'),'ON',NVL(L.LANE_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.LANE_CD,'N'),'ON',NVL(D.LANE_CD,'N'),'OF','N','ST','N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM', DECODE(L.BB_CGO_FLG,'Y','BB',DECODE(L.LOCL_TS_IND_CD,'T',DECODE(L.CNTR_STY_CD,'F','TS','TM'),DECODE(L.CNTR_STY_CD,'F','FL','MT'))), 'ON',DECODE(L.CNTR_STY_CD,'F','F','M'),'OF',DECODE(L.CNTR_STY_CD,'F','FL','MT'),'ST',DECODE(L.LOCL_TS_IND_CD,'T','TS',DECODE(L.CNTR_STY_CD,'F','FL','MT'))) = DECODE(H.TML_INV_TP_CD,'TM',SUBSTR(D.LGS_COST_CD,5,2),'ON',SUBSTR(D.LGS_COST_CD,6,1),'OF',SUBSTR(D.LGS_COST_CD,5,2), 'ST',SUBSTR(D.LGS_COST_CD,5,2))
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.DCGO_CLSS_CD,'N'),'ON',NVL(L.DCGO_CLSS_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.DCGO_IND_CD,'N'),'ON',NVL(D.DCGO_IND_CD,'N'),'OF','N','ST','N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',DECODE(D.TML_TRNS_MOD_CD,'','S','S','S',NVL(L.TML_TRNS_MOD_CD,'S')),'N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.TML_TRNS_MOD_CD,'S'),'N')
                                                    AND DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS','F','N'),'N') = DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS',L.CNTR_STY_CD,'N'),'N')
                                             )
                                     ) BB
                            WHERE AA.CNTR_NO = BB.CNTR_NO
                            AND AA.COST_CODE = BB.LGS_COST_CD
                            group by BB.CNTR_NO, BB.CNTR_STY_CD
                        )
                        WHERE ROWNUM =1 AND CNTR_NO = Z.CNTR_NO
                      
                      )
                   WHEN Z.BKG_NO = 'OSCAR' THEN 'This is OSCAR BKG'
                   ELSE ''
               END CNTR_RMK, Z.TML_TRNS_MOD_CD
        FROM ( SELECT ORG.CNTR_NO, MC.CNTR_TPSZ_CD CNTR_TPSZ_CD, ORG.INV_GATE_IN_DT, ORG.INV_GATE_OUT_DT, NVL(CALC.AWK_CGO_FLG,'N') AWK_CGO_FLG, NVL(CALC.RC_FLG,'N') RC_FLG,
                      CASE
                           WHEN DB2.CNTR_NO IS NOT NULL THEN 'DB'
                           WHEN CALC.CNTR_NO IS NULL AND CALC.CNTR_TP IS NULL THEN 'NN'
                           --WHEN CALC.CNTR_STY_CD = 'F' AND CALC.BKG_NO IS NULL THEN 'NH'
                           WHEN ORG.CNTR_STY_CD = 'F' AND CALC.CNTR_STY_CD IS NULL THEN 'NH'
#if (${tml_calc_ind_cd} != '' and ${tml_calc_ind_cd}=='TP') 
       WHEN TO_CHAR(CALC.MVMT_GATE_OUT_DT,'YYYYMMDD')-ORG.TO_PRD_DT > 0 THEN 'PD'
#end
                           --WHEN ABS(CALC.MVMT_GATE_IN_DT-ORG.INV_GATE_IN_DT) >= 2 OR ABS(CALC.MVMT_GATE_OUT_DT-ORG.INV_GATE_OUT_DT) >=2  THEN 'DD'
						   --WHEN ABS(CALC.MVMT_GATE_IN_DT-ORG.INV_GATE_IN_DT) > 0 OR ABS(NVL(CALC.MVMT_GATE_OUT_DT,TO_DATE('99991231 0000','yyyymmdd hh24mi'))-ORG.INV_GATE_OUT_DT) > 0 then 'DD' -- YYYYMMDD까지 일치하면 통과로 수정.시간, 초까지 맞을 필요없음 2016.01.18
                             WHEN ABS(TO_CHAR(CALC.MVMT_GATE_IN_DT,'YYYYMMDD')-TO_CHAR(ORG.INV_GATE_IN_DT,'YYYYMMDD')) >= 1 AND ABS(NVL(TO_CHAR(CALC.MVMT_GATE_OUT_DT,'YYYYMMDD'),TO_CHAR(TO_DATE('99991231 0000','yyyymmdd hh24mi'),'YYYYMMDD'))-TO_CHAR(ORG.INV_GATE_OUT_DT,'YYYYMMDD')) >= 1 
                             THEN 'DT'
                             WHEN ABS(TO_CHAR(CALC.MVMT_GATE_IN_DT,'YYYYMMDD')-TO_CHAR(ORG.INV_GATE_IN_DT,'YYYYMMDD')) >= 1 
                             THEN 'DE'
                             WHEN ABS(NVL(TO_CHAR(CALC.MVMT_GATE_OUT_DT,'YYYYMMDD'),TO_CHAR(TO_DATE('99991231 0000','yyyymmdd hh24mi'),'YYYYMMDD'))-TO_CHAR(ORG.INV_GATE_OUT_DT,'YYYYMMDD')) >= 1 
                             THEN 'DS'
                           ELSE ''
                      END DSCR_IND_CD, ORG.TML_SO_TMP_SEQ,
                      ORG.YD_CD, ORG.VNDR_SEQ, ORG.RCV_DT,  --// 2007-07-09 DB INV_NO 출력으로 추가합니다
                      CALC.MVMT_GATE_IN_DT, CALC.MVMT_GATE_OUT_DT, ORG.CNTR_STY_CD, CALC.IO_BND_CD, CALC.LOCL_TS_IND_CD, CALC.DCGO_CLSS_CD, CALC. BB_CGO_FLG,
                      CALC.BKG_NO, CALC.BL_NO, CALC.BL_NO_TP, CALC.VSL_CD, CALC.SKD_VOY_NO, CALC.SKD_DIR_CD,
                      ABS(ORG.INV_GATE_IN_DT - CALC.MVMT_GATE_IN_DT) GT_IN_DT_DIFF,
                      ABS(ORG.INV_GATE_OUT_DT - CALC.MVMT_GATE_OUT_DT) GT_OUT_DT_DIFF,
                      CALC.TML_TRNS_MOD_CD
               FROM   ( SELECT L.CNTR_TPSZ_CD2,
                               L.CNTR_NO, L.CNTR_TP, L.MVMT_GATE_IN_DT, L.MVMT_GATE_OUT_DT,
                               L.BKG_NO,
                               L.BL_NO,
                               L.BL_NO_TP,
                               L.VSL_CD,
                               L.SKD_VOY_NO,
                               L.SKD_DIR_CD,
                               L.CNTR_STY_CD,
                               L.IO_BND_CD,
                               L.LOCL_TS_IND_CD,
                               L.DCGO_CLSS_CD,
                               L.BB_CGO_FLG,
                               L.AWK_CGO_FLG,
                               L.RC_FLG,
                               L.TML_SO_TMP_SEQ,
                               DECODE(DECODE(L.PCTL_IO_BND_CD,'T',DECODE(R.TRSP_MOD_CD||O.TRSP_MOD_CD,
											'WDVD','T', 'VDWD','T', 'WDWD','T','VDVD','T', DECODE(L.CNTR_STY_CD,'M','L','L')),'L'),
									                          'L', DECODE(L.CNTR_STY_CD, 'F',DECODE(L.IO_BND_CD, 'O',DECODE(R.TRSP_MOD_CD,'TD','T','RD','R','WD','B','T'),
																		                     DECODE(RL,0,DECODE(TR,'RD','R','WD','B','TD','T','T'),'R')),
													                                     'M',DECODE(O.TRSP_MOD_CD,'TD','T','RD','R','WD','B','T'),'T'),
									 VSL_TP) TML_TRNS_MOD_CD
                    FROM (SELECT DISTINCT C.CNTR_TPSZ_CD CNTR_TPSZ_CD2,
                               M.CNTR_NO, M.CNTR_TP, M.MVMT_GATE_IN_DT, M.MVMT_GATE_OUT_DT,
                               --NVL(MIN(C.BKG_NO),'OSCAR') BKG_NO,
                               --DECODE(M.BKG_NO,'OSCAR','OSCAR',MIN(C.BKG_NO)) BKG_NO,
                               DECODE(M.BKG_NO,'OSCAR','OSCAR',DECODE(B.BKG_STS_CD,'X',B.TO_BKG_NO,MIN(C.BKG_NO))) BKG_NO, -- 20161110 split후 cancel bkg이 CSR생성시 SAC_TRUNK_VVD_TRD_FNC에서 문제 발생하여 TO_BKG_NO보도록 수정함.
                               --MIN(B.BL_NO) BL_NO,
                               DECODE(B.BKG_STS_CD,'X',B.TO_BKG_NO,MIN(B.BL_NO)) BL_NO,
                               MIN(B.BL_NO_TP) BL_NO_TP,
                               B.VSL_CD,
                               B.SKD_VOY_NO,
                               B.SKD_DIR_CD,
                               DECODE(B.BKG_CGO_TP_CD,'F','F','B','F','R','R',NULL,NULL,'M') CNTR_STY_CD,
                               DECODE(L.CONTI_CD,BR.CONTI_CD,'O','I') IO_BND_CD,
                               --DECODE(NVL(B.PRE_RLY_PORT_CD,NVL(PST_RLY_PORT_CD,'L')),'L','L','T') LOCL_TS_IND_CD,
                               DECODE(G.PCTL_IO_BND_CD,'T','T','L') LOCL_TS_IND_CD,
                               MIN(NVL(SUBSTR(D.IMDG_CLSS_CD,1,1),'N')) DCGO_CLSS_CD,
                               NVL(C.BB_CGO_FLG,'N') BB_CGO_FLG,
                               NVL(C.AWK_CGO_FLG,'N') AWK_CGO_FLG,
                               NVL(C.RC_FLG,'N') RC_FLG,
                               M.TML_SO_TMP_SEQ,   
                               DECODE((SELECT CRR_CD FROM MDM_VSL_CNTR  WHERE VSL_CD = B.VSL_CD),'NYK','V','F') VSL_TP,
                               ( SELECT MIN(TRSP_CRR_MOD_CD)
									FROM   TRS_TRSP_SVC_ORD
									WHERE  ( FM_NOD_CD = M.YD_CD OR TO_NOD_CD = M.YD_CD )
									AND    EQ_NO = M.CNTR_NO
									AND    NVL(DELT_FLG,'N') <> 'Y'
--									AND    CRE_DT < P.ATB_DT + 15 
									) TR,
								  ( SELECT COUNT(*)
									FROM   TRS_TRSP_RAIL_BIL_ORD
									WHERE  ( FM_NOD_CD = M.YD_CD OR TO_NOD_CD = M.YD_CD )
									AND    EQ_NO = M.CNTR_NO
									AND    NVL(DELT_FLG,'N') <> 'Y'
--									AND    CRE_DT < P.ATB_DT + 15 
									) RL,
                               MIN(G.PCTL_NO)       COP_NO,   --chooga                          
                               MIN(( SELECT  MAX(PCTL_SEQ)
								  FROM    SCE_COP_HDR HD, PRD_PROD_CTL_ROUT_DTL GD
								  WHERE   H.CNTR_NO         = HD.CNTR_NO
								  AND     H.BKG_NO          = HD.BKG_NO
								  AND     HD.PCTL_NO         = GD.PCTL_NO
								  AND     GD.NOD_LNK_DIV_CD = 'L'
								  AND     GD.PCTL_SEQ < G.PCTL_SEQ )) R_SEQ, --chooga
						       MAX(( SELECT MIN(PCTL_SEQ)
								  FROM    SCE_COP_HDR OD, PRD_PROD_CTL_ROUT_DTL OG
								  WHERE   OD.CNTR_NO        = H.CNTR_NO
								  AND     OD.BKG_NO         = H.BKG_NO
								  AND     OD.PCTL_NO         = OG.PCTL_NO
								  AND     OG.NOD_LNK_DIV_CD = 'L'
								  AND     OG.PCTL_SEQ > G.PCTL_SEQ )) O_SEQ, --chooga
							   MAX((SELECT NVL(X.PCTL_IO_BND_CD,'') PCTL_IO_BND_CD
                                FROM PRD_PROD_CTL_ROUT_DTL X
                                WHERE 1=1
                                AND X.PCTL_NO = G.PCTL_NO
                                AND X.PCTL_SEQ = ( SELECT 
                                                        CASE
                                                        WHEN ORG_NOD_CD = @[yd_cd]
                                                        THEN PCTL_SEQ-1
                                                        WHEN DEST_NOD_CD = @[yd_cd] 
                                                        THEN PCTL_SEQ+1
                                                        END CUR_PCTL_SEQ
                                                    FROM PRD_PROD_CTL_ROUT_DTL X
                                                    WHERE 1=1
                                                    AND X.PCTL_NO = G.PCTL_NO
                                                    AND X.VSL_CD = B.VSL_CD
                                                    AND X.SKD_VOY_NO = B.SKD_VOY_NO
                                                    AND X.SKD_DIR_CD = B.SKD_DIR_CD
                                                    AND ROWNUM = 1 ))) PCTL_IO_BND_CD --chooga
                        FROM   ( SELECT	MIO.CNTR_NO CNTR_NO,
                                        MIO.CNMV_SEQ CNMV_SEQ,
                                	    MIO.CNTR_TP,
                                	    MIO.CNTR_TPSZ_CD,
                                	CASE WHEN MIO.MVMT_STS_CD||MIO.NEXT_MVMT_STS IN ('MTZZ', 'OCZZ', 'ICZZ', 'TSZZ')
                                	    THEN MIO.CNMV_EVNT_DT 
                                	    ELSE MIO.PREV_EVNT_DT
                                	END MVMT_GATE_IN_DT,
                                   CASE	WHEN MIO.MVMT_STS_CD||MIO.NEXT_MVMT_STS IN ('MTZZ', 'OCZZ', 'ICZZ', 'TSZZ')
                                		THEN NULL
                                		ELSE MIO.CNMV_EVNT_DT
                                   END MVMT_GATE_OUT_DT,
                                	MIO.CNTR_STY_CD,
                                	MIO.CNMV_CYC_NO CYC,
                                	MIO.TML_SO_TMP_SEQ,
                                	MIO.YD_CD,
                                	--MIO.BKG_NO
                                    CASE WHEN LENGTH(MIO.BKG_NO) = 10 
                                	     THEN 'OSCAR'  
                                	ELSE MIO.BKG_NO
                                	END BKG_NO
                                FROM (SELECT PREV_MVMT_STS,MVMT_STS_CD,NEXT_MVMT_STS,
#if (${tml_calc_ind_cd} == 'TP')    
                                       PREV_EVNT_DT,
                                       CNMV_EVNT_DT,                                                
#else
                                	   NVL(PREV_EVNT_DT,CNMV_EVNT_DT) PREV_EVNT_DT,
                                       --NVL(PREV_EVNT_DT,TO_DATE([fm_prd_dt], 'YYYY-MM-DD')) PREV_EVNT_DT,
                                	   NVL(CNMV_EVNT_DT,TO_DATE(@[to_prd_dt], 'YYYY-MM-DD')) CNMV_EVNT_DT,
#end
                                       NEXT_EVNT_DT,
                                       CNTR_NO,CNMV_YR,CNMV_SEQ,CNTR_STY_CD,TML_SO_TMP_SEQ,YD_CD,BKG_NO,CNMV_SPLIT_NO,MVMT_FM,CNTR_TP,CNTR_TPSZ_CD,CNMV_CYC_NO 
                                FROM	(
                                  SELECT M.PREV_MVMT_STS,
                                         M.MVMT_STS_CD,
                                  		-- GATE OUT이 없고 GATE IN만 있는 경우 조건 추가. 
                                 		 DECODE(M.NEXT_MVMT_STS,'',DECODE((SELECT MVMT_STS_CD FROM CTM_MOVEMENT WHERE CNTR_NO = M.CNTR_NO AND CNMV_EVNT_DT > M.CNMV_EVNT_DT  AND ROWNUM=1),'','ZZ',(SELECT MVMT_STS_CD FROM CTM_MOVEMENT WHERE CNTR_NO = M.CNTR_NO AND CNMV_EVNT_DT > M.CNMV_EVNT_DT AND ROWNUM=1)),M.NEXT_MVMT_STS) NEXT_MVMT_STS, 
                                 		 M.PREV_EVNT_DT,
                                		 M.CNMV_EVNT_DT,
                                  		 M.NEXT_EVNT_DT,
                                 		 M.CNTR_NO,
                                 		 M.CNMV_YR,
                                 		 M.CNMV_SEQ,
                                 		 M.CNTR_STY_CD,
                                 		 M.TML_SO_TMP_SEQ,
                                 		 M.YD_CD,
                                 		 M.BKG_NO,
                                 		 M.CNMV_SPLIT_NO,
                                 		 M.MVMT_FM,
                                 		 M.CNTR_TP,
                                 		 M.CNTR_TPSZ_CD,
                                 		 M.CNMV_CYC_NO
                                FROM (SELECT M2.PREV_MVMT_STS,
                                       M2.MVMT_STS_CD,
                                       M2.NEXT_MVMT_STS,
                                       M2.PREV_EVNT_DT,
                                       M2.CNMV_EVNT_DT,
                                       M2.NEXT_EVNT_DT,
                                       M2.CNTR_NO,
                                       M2.CNMV_YR,
                                       M2.CNMV_SEQ,
                                       M2.CNTR_STY_CD,
                                       P2.TML_SO_TMP_SEQ,
                                       M2.YD_CD,
                                       M2.BKG_NO,
                                       M2.CNMV_SPLIT_NO,
                                       M2.MVMT_FM,
                                       M2.CNTR_TP,
                                       M2.CNTR_TPSZ_CD,
                                       M2.CNMV_CYC_NO
                                FROM 
                                  (SELECT --M.PREV_MVMT_STS,
                                         DECODE(M.PREV_MVMT_STS,'',DECODE((SELECT MVMT_STS_CD FROM CTM_MOVEMENT WHERE CNTR_NO = M.CNTR_NO AND CNMV_EVNT_DT < M.CNMV_EVNT_DT AND ORG_YD_CD = M.YD_CD AND ROWNUM=1),'','WW',(SELECT MVMT_STS_CD FROM CTM_MOVEMENT WHERE CNTR_NO = M.CNTR_NO AND CNMV_EVNT_DT < M.CNMV_EVNT_DT AND ORG_YD_CD = M.YD_CD AND ROWNUM=1)),M.PREV_MVMT_STS) PREV_MVMT_STS,
                                         M.MVMT_STS_CD,
                                 		 DECODE(M.NEXT_MVMT_STS,'',DECODE((SELECT MVMT_STS_CD FROM CTM_MOVEMENT WHERE CNTR_NO = M.CNTR_NO AND CNMV_EVNT_DT > M.CNMV_EVNT_DT  AND ROWNUM=1),'','ZZ',(SELECT MVMT_STS_CD FROM CTM_MOVEMENT WHERE CNTR_NO = M.CNTR_NO AND CNMV_EVNT_DT > M.CNMV_EVNT_DT AND ROWNUM=1)),M.NEXT_MVMT_STS) NEXT_MVMT_STS, 
                                 		 M.PREV_EVNT_DT,
                                		 M.CNMV_EVNT_DT,
                                  		 M.NEXT_EVNT_DT,
                                 		 M.CNTR_NO,
                                 		 M.CNMV_YR,
                                 		 M.CNMV_SEQ,
                                 		 M.CNTR_STY_CD,
                                 		 M.YD_CD,
                                 		 --NVL(M.BKG_NO,M.BKG_NO2) AS BKG_NO,
                                         COALESCE(M.BKG_NO,M.BKG_NO2,(SELECT BKG_NO FROM CTM_MOVEMENT WHERE CNTR_NO = M.CNTR_NO AND YD_CD = M.YD_CD AND (CNMV_EVNT_DT = M.CNMV_EVNT_DT OR CNMV_EVNT_DT = M.PREV_EVNT_DT) AND BKG_NO IS NOT NULL AND ROWNUM=1)) AS BKG_NO,
                                 		 M.CNMV_SPLIT_NO,
                                 		 M.MVMT_FM,
                                 		 M.CNTR_TP,
                                 		 M.CNTR_TPSZ_CD,
                                 		 M.CNMV_CYC_NO
                                FROM (
                                		SELECT  /*+ ORDERED */LAG(M.MVMT_STS_CD)  OVER (PARTITION BY M.CNTR_NO ORDER BY M.CNTR_NO, M.CNMV_EVNT_DT, M.CNMV_SEQ, M.CNMV_SPLIT_NO) PREV_MVMT_STS,
                                				M.MVMT_STS_CD,
                                				LEAD(M.MVMT_STS_CD) OVER (PARTITION BY M.CNTR_NO ORDER BY M.CNTR_NO, M.CNMV_EVNT_DT, M.CNMV_SEQ, M.CNMV_SPLIT_NO) NEXT_MVMT_STS,
                                				LAG(M.CNMV_EVNT_DT) OVER (PARTITION BY M.CNTR_NO ORDER BY M.CNTR_NO, M.CNMV_EVNT_DT, M.CNMV_SEQ, M.CNMV_SPLIT_NO) PREV_EVNT_DT,  
                                				M.CNMV_EVNT_DT,
                                				LEAD(M.CNMV_EVNT_DT)OVER (PARTITION BY M.CNTR_NO ORDER BY M.CNTR_NO, M.CNMV_EVNT_DT, M.CNMV_SEQ, M.CNMV_SPLIT_NO) NEXT_EVNT_DT,
                                				M.CNTR_NO,
                                				M.CNMV_YR,
                                				M.CNMV_SEQ,
                                				P.CNTR_STY_CD,                      
                                				P.YD_CD,
                                				(SELECT TO_BKG_NO FROM BKG_BOOKING WHERE BKG_NO = M.BKG_NO AND BKG_STS_CD = 'X') BKG_NO,
                                				M.BKG_NO AS BKG_NO2,
                                				M.CNMV_SPLIT_NO,
                                				DECODE(M.FCNTR_FLG, 'N', 'M', 'F') MVMT_FM,
                                				M.CNTR_TPSZ_CD CNTR_TP,
                                				P.CNTR_TPSZ_CD,
                                				M.CNMV_CYC_NO
                                       FROM TES_FILE_IMP_TMP P, CTM_MOVEMENT M
                                      WHERE P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
                                        AND P.TML_SO_SEQ = @[tml_so_seq]
                                  		AND M.CNMV_EVNT_DT BETWEEN (TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD')-730) AND (TO_DATE(@[to_prd_dt], 'YYYY-MM-DD')+730)+ 0.99999421
                                  		AND M.CNTR_NO = P.CNTR_NO
                                  		AND M.ORG_YD_CD = P.YD_CD
                                        --AND NVL(M.MVMT_CRE_TP_CD, 'N') <> 'C'
                                	ORDER BY M.CNTR_NO, M.CNMV_EVNT_DT, M.CNMV_SEQ ASC, M.CNMV_SPLIT_NO ) M )M2, TES_FILE_IMP_TMP P2
                                	WHERE M2.CNTR_NO = P2.CNTR_NO
                                	AND M2.CNTR_STY_CD = P2.CNTR_STY_CD
                                	--AND (TO_CHAR(M2.PREV_EVNT_DT,'YYYYMMDD') = TO_CHAR(P2.INV_GATE_IN_DT,'YYYYMMDD') OR TO_CHAR(M2.PREV_EVNT_DT,'YYYYMMDD') = TO_CHAR(P2.INV_GATE_OUT_DT,'YYYYMMDD'))
                                    --AND (NVL(TO_CHAR(M2.PREV_EVNT_DT,'YYYYMMDD'),TO_CHAR(M2.CNMV_EVNT_DT,'YYYYMMDD')) = TO_CHAR(P2.INV_GATE_IN_DT,'YYYYMMDD') OR NVL(TO_CHAR(M2.PREV_EVNT_DT,'YYYYMMDD'),TO_CHAR(M2.CNMV_EVNT_DT,'YYYYMMDD')) = TO_CHAR(P2.INV_GATE_OUT_DT,'YYYYMMDD'))
                                    AND (TO_CHAR(M2.PREV_EVNT_DT,'YYYYMMDD') = TO_CHAR(P2.INV_GATE_IN_DT,'YYYYMMDD') OR TO_CHAR(M2.CNMV_EVNT_DT,'YYYYMMDD') = TO_CHAR(P2.INV_GATE_IN_DT,'YYYYMMDD') OR TO_CHAR(M2.PREV_EVNT_DT,'YYYYMMDD') = TO_CHAR(P2.INV_GATE_OUT_DT,'YYYYMMDD') OR TO_CHAR(M2.CNMV_EVNT_DT,'YYYYMMDD') = TO_CHAR(P2.INV_GATE_OUT_DT,'YYYYMMDD'))
                                	ORDER BY M2.CNTR_NO, M2.PREV_EVNT_DT, M2.CNMV_SEQ, M2.CNMV_SPLIT_NO) M )) MIO
#if (${tml_calc_ind_cd} == 'TP') 
                                    WHERE	(MIO.PREV_MVMT_STS||MIO.MVMT_STS_CD IN ('MTOP','MTVL','MTID','MTTN','MTEN','MTXX',
                                		                        	              'OCOP','OCVL','OCID','OCTN','OCEN','OCXX',
                                	                            	              'ICOP','ICVL','ICID','ICTN','ICEN','ICXX',
                                				               	                  'TSOP','TSVL','TSID','TSTN','TSEN','TSXX')
                                    AND		MIO.CNMV_EVNT_DT BETWEEN (TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD')) AND (TO_DATE(@[to_prd_dt], 'YYYY-MM-DD'))+ 0.99999421)
#else
                                    WHERE	((MIO.PREV_MVMT_STS||MIO.MVMT_STS_CD IN ('MTOP','MTVL','MTID','MTTN','MTEN','MTXX',
                                	                        	              'OCOP','OCVL','OCID','OCTN','OCEN','OCXX',
                                                            	              'ICOP','ICVL','ICID','ICTN','ICEN','ICXX',
                                			               	                  'TSOP','TSVL','TSID','TSTN','TSEN','TSXX')
                                		-- GATE OUT이 없고 GATE IN만 있는 경우 조건 추가 
                                		OR (MIO.MVMT_STS_CD || MIO.NEXT_MVMT_STS IN ('MTZZ', 'OCZZ', 'ICZZ', 'TSZZ')) )
                                		AND		(MIO.PREV_EVNT_DT >= TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD'))
                                		AND		(MIO.CNMV_EVNT_DT <= TO_DATE(@[to_prd_dt], 'YYYY-MM-DD')+ 0.99999421))
                                        OR		((MIO.PREV_MVMT_STS||MIO.MVMT_STS_CD IN ('MTOP','MTVL','MTID','MTTN','MTEN','MTXX',
                                	                        	              'OCOP','OCVL','OCID','OCTN','OCEN','OCXX',
                                                            	              'ICOP','ICVL','ICID','ICTN','ICEN','ICXX',
                                			               	                  'TSOP','TSVL','TSID','TSTN','TSEN','TSXX')
                                		OR (MIO.MVMT_STS_CD || MIO.NEXT_MVMT_STS IN ('MTZZ', 'OCZZ', 'ICZZ', 'TSZZ')) )
                                		AND		(MIO.PREV_EVNT_DT < TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD'))
                                		AND		(MIO.CNMV_EVNT_DT BETWEEN (TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD')) AND (TO_DATE(@[to_prd_dt], 'YYYY-MM-DD'))+ 0.99999421))
                                        OR		((MIO.PREV_MVMT_STS||MIO.MVMT_STS_CD IN ('MTOP','MTVL','MTID','MTTN','MTEN','MTXX',
                                	                        	              'OCOP','OCVL','OCID','OCTN','OCEN','OCXX',
                                                            	              'ICOP','ICVL','ICID','ICTN','ICEN','ICXX',
                                			               	                  'TSOP','TSVL','TSID','TSTN','TSEN','TSXX')
                                		OR (MIO.MVMT_STS_CD || MIO.NEXT_MVMT_STS IN ('MTZZ', 'OCZZ', 'ICZZ', 'TSZZ')) )
                                		AND		(MIO.PREV_EVNT_DT BETWEEN (TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD')) AND (TO_DATE(@[to_prd_dt], 'YYYY-MM-DD'))+ 0.99999421)
                                		AND		(MIO.CNMV_EVNT_DT > TO_DATE(@[to_prd_dt], 'YYYY-MM-DD')))
                                        OR		((MIO.PREV_MVMT_STS||MIO.MVMT_STS_CD IN ('MTOP','MTVL','MTID','MTTN','MTEN','MTXX',
                                	                        	              'OCOP','OCVL','OCID','OCTN','OCEN','OCXX',
                                                            	              'ICOP','ICVL','ICID','ICTN','ICEN','ICXX',
                                			               	                  'TSOP','TSVL','TSID','TSTN','TSEN','TSXX')
                                		OR (MIO.MVMT_STS_CD || MIO.NEXT_MVMT_STS IN ('MTZZ', 'OCZZ', 'ICZZ', 'TSZZ')) )
                                		AND		(MIO.PREV_EVNT_DT < TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD'))
                                		AND		(MIO.CNMV_EVNT_DT > TO_DATE(@[to_prd_dt], 'YYYY-MM-DD')))
                                        OR		((MIO.PREV_MVMT_STS||MIO.MVMT_STS_CD IN ('MTOP','MTVL','MTID','MTTN','MTEN','MTXX',
                                	                        	              'OCOP','OCVL','OCID','OCTN','OCEN','OCXX',
                                                            	              'ICOP','ICVL','ICID','ICTN','ICEN','ICXX',
                                			               	                  'TSOP','TSVL','TSID','TSTN','TSEN','TSXX')
                                		OR (MIO.MVMT_STS_CD || MIO.NEXT_MVMT_STS IN ('MTZZ', 'OCZZ', 'ICZZ', 'TSZZ')) )
                                		AND		(MIO.NEXT_EVNT_DT IS NULL)
                                		AND		(MIO.CNMV_EVNT_DT < TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD')))
#end
                                        ) M,
                               BKG_CONTAINER C, BKG_BOOKING B, BKG_DG_CGO D, 
                               MDM_LOCATION L, MDM_LOCATION BR, SCE_COP_HDR H, PRD_PROD_CTL_ROUT_DTL G 
                        WHERE  M.CNTR_NO        = C.CNTR_NO(+)
                        AND    M.CYC            = C.CNMV_CYC_NO(+)
                        --AND  SUBSTR(M.BKG_NO,1,10) = SUBSTR(C.BKG_NO(+),1,10) --20161012 split booking가져올 수 있도록 10자리만 비교함. xinyi 요청
                        --AND  DECODE(B.BKG_STS_CD,'X',SUBSTR(M.BKG_NO,1,10),M.BKG_NO) = DECODE(B.BKG_STS_CD,'X',SUBSTR(C.BKG_NO,1,10),C.BKG_NO)
                        AND    M.BKG_NO = C.BKG_NO(+)
                        AND    C.BKG_NO         = B.BKG_NO(+)
                        AND    B.BKG_NO         = D.BKG_NO(+)
                        AND    M.CNTR_NO        = H.CNTR_NO(+) 
						AND    M.BKG_NO         = H.BKG_NO(+) 
						AND    H.COP_STS_CD(+) <> 'X' 
						AND    H.PCTL_NO              = G.PCTL_NO(+)
						AND    G.NOD_LNK_DIV_CD(+)   = 'N' 
						AND    SUBSTR(G.ORG_NOD_CD(+),1,5)   = SUBSTR(@[yd_cd],1,5)  
                        AND    L.LOC_CD         = SUBSTR(M.YD_CD,1,5)
                        AND    B.POR_CD         = BR.LOC_CD(+)
                        GROUP BY C.CNTR_TPSZ_CD, M.CNTR_NO, M.CNTR_TP, M.MVMT_GATE_IN_DT, M.MVMT_GATE_OUT_DT,
                                  B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD,
                                 DECODE(B.BKG_CGO_TP_CD,'F','F','B','F','R','R',NULL,NULL,'M'),
                                 DECODE(L.CONTI_CD,BR.CONTI_CD,'O','I'),
                                 --DECODE(NVL(B.PRE_RLY_PORT_CD,NVL(PST_RLY_PORT_CD,'L')),'L','L','T'),
                                 NVL(C.BB_CGO_FLG,'N'), B.BKG_STS_CD, B.TO_BKG_NO,
                                 NVL(C.AWK_CGO_FLG,'N'), NVL(C.RC_FLG,'N'), M.TML_SO_TMP_SEQ,M.YD_CD,M.BKG_NO,DECODE(G.PCTL_IO_BND_CD,'T','T','L'))L, PRD_PROD_CTL_ROUT_DTL R, PRD_PROD_CTL_ROUT_DTL O
			         WHERE  L.COP_NO              = R.PCTL_NO(+)
			         AND    R.NOD_LNK_DIV_CD(+)   = 'L'
			         AND    L.R_SEQ               = R.PCTL_SEQ(+)
			         AND    L.COP_NO              = O.PCTL_NO(+)
			         AND    O.NOD_LNK_DIV_CD(+)   = 'L'
			         AND    L.O_SEQ               = O.PCTL_SEQ(+)) CALC,
                        ( SELECT CNTR_NO, CNTR_TPSZ_CD, INV_GATE_IN_DT, INV_GATE_OUT_DT, CNTR_STY_CD, TML_SO_TMP_SEQ,
                                 YD_CD, VNDR_SEQ, RCV_DT, TO_PRD_DT
                          FROM   TES_FILE_IMP_TMP
                          WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
                          AND    TML_SO_SEQ = @[tml_so_seq] ) ORG
                          , MST_CONTAINER MC
						  , (
                                SELECT CNTR_NO
                                FROM
                                (
                                    SELECT   BB.CNTR_NO, BB.CNTR_STY_CD, MAX(BB.INV_NO) INV_NO
                                    FROM
                                    (
                                        SELECT A.COST_CODE, C.CNTR_NO 
                                        FROM(

                                            SELECT DECODE(1,0,C.LGS_COST_CD,DECODE(C.LGS_COST_CD,CD,TP,C.LGS_COST_CD)) COST_CODE
                                            FROM ( SELECT COUNT(T.LGS_COST_CD) CNT,
                                                 T.LGS_COST_CD TP,
                                                 T.THRP_LGS_COST_CD CD,
                                                 H.TML_AGMT_OFC_CTY_CD CTY,
                                                 H.TML_AGMT_SEQ SEQ,
                                                 H.TML_AGMT_VER_NO NO
                                                FROM   TES_TML_AGMT_HDR H, TES_TML_AGMT_THRP_COST T
                                                WHERE  H.YD_CD            = @[yd_cd]
                                                AND    H.VNDR_SEQ         = @[vndr_seq]
                                                AND    H.TML_AGMT_STS_CD = 'C'
                                                AND    H.DELT_FLG        = 'N'


                                            #if (${agmt_ftr_inv_tp_cd} == 'OS')
                                                   AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
                                                   AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

                                            #elseif (${agmt_ftr_inv_tp_cd} == 'OT' || ${agmt_ftr_inv_tp_cd} == 'OFON' || ${agmt_ftr_inv_tp_cd} == 'OTOS')
                                                   AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[to_prd_dt],'-') -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)
                                                   AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[to_prd_dt],'-') -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)

                                            #end

                                                AND    H.TML_AGMT_VER_NO = ( SELECT MAX(M.TML_AGMT_VER_NO)
                                                     FROM   TES_TML_AGMT_HDR M
                                                     WHERE  M.YD_CD               = @[yd_cd]
                                                     AND    M.VNDR_SEQ            = @[vndr_seq]
                                                     AND    M.TML_AGMT_STS_CD     = 'C'
                                                     AND    M.DELT_FLG            = 'N'

                                            #if (${agmt_ftr_inv_tp_cd} == 'OS')
                                                        AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
                                                        AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-')) -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

                                            #elseif (${agmt_ftr_inv_tp_cd} == 'OT' || ${agmt_ftr_inv_tp_cd} == 'OFON' || ${agmt_ftr_inv_tp_cd} == 'OTOS')
                                                        AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[to_prd_dt],'-') -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)
                                                        AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[to_prd_dt],'-')) -- To Period Date([to_prd_dt]) ==> OFF Dock Terminal Invoice (ON Dock 비용계산시)

                                            #else
                                                        AND 1=2 )
                                            #end

                                                AND    H.TML_AGMT_OFC_CTY_CD = T.TML_AGMT_OFC_CTY_CD(+)
                                                AND    H.TML_AGMT_SEQ        = T.TML_AGMT_SEQ(+)
                                                AND    H.TML_AGMT_VER_NO     = T.TML_AGMT_VER_NO(+)
                                                GROUP BY H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
                                                T.LGS_COST_CD, T.THRP_LGS_COST_CD ) A, TES_TML_SO_COST C, TES_TML_AGMT_DTL D
                                            WHERE  C.COST_CALC_MZD_CD = 'A'
                                            AND    C.TML_AGMT_MGMT_CD = 'A'


                                            #if (${agmt_ftr_inv_tp_cd} == 'OT' || ${agmt_ftr_inv_tp_cd} == 'OTOS' )
                                            AND    C.FDCK_CY_TML_FLG = 'Y' -- OFF Dock Terminal Invoice

                                            #elseif (${agmt_ftr_inv_tp_cd} == 'OS')
                                            AND    C.FDCK_CY_STO_FLG = 'Y' -- OFF Dock Storage Invoice

                                            #elseif (${agmt_ftr_inv_tp_cd} == 'OFON')
                                            AND    C.MRN_TML_FLG = 'Y' AND C.LGS_COST_CD LIKE 'TMND%'  -- OFF Dock 화면에서 ON Dock 비용계산시

                                            #end

                                            AND    D.TML_AGMT_OFC_CTY_CD = A.CTY
                                            AND    D.TML_AGMT_SEQ = A.SEQ
                                            AND    D.TML_AGMT_VER_NO  = A.NO
                                            AND    C.LGS_COST_CD = D.LGS_COST_CD
                                            AND    DECODE(A.CNT,0,DECODE(SUBSTR(C.LGS_COST_CD,1,2),'TP','N','Y'),'Y') = 'Y' 
                                            AND    D.THRP_COST_CD_FLG IS NULL
											GROUP BY DECODE(1,0,C.LGS_COST_CD,DECODE(C.LGS_COST_CD,CD,TP,C.LGS_COST_CD))

                                --OTOS이면 OS용
                                #if (${agmt_ftr_inv_tp_cd} == 'OTOS') 
                                           UNION ALL

                                            SELECT DECODE(1,0,C.LGS_COST_CD,DECODE(C.LGS_COST_CD,CD,TP,C.LGS_COST_CD)) COST_CODE
                                            FROM ( SELECT COUNT(T.LGS_COST_CD) CNT,
                                                 T.LGS_COST_CD TP,
                                                 T.THRP_LGS_COST_CD CD,
                                                 H.TML_AGMT_OFC_CTY_CD CTY,
                                                 H.TML_AGMT_SEQ SEQ,
                                                 H.TML_AGMT_VER_NO NO
                                                FROM   TES_TML_AGMT_HDR H, TES_TML_AGMT_THRP_COST T
                                                WHERE  H.YD_CD            = @[yd_cd]
                                                AND    H.VNDR_SEQ         = @[vndr_seq]
                                                AND    H.TML_AGMT_STS_CD = 'C'
                                                AND    H.DELT_FLG        = 'N'

                                                AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
                                                AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

                                                AND    H.TML_AGMT_VER_NO = ( SELECT MAX(M.TML_AGMT_VER_NO)
                                                     FROM   TES_TML_AGMT_HDR M
                                                     WHERE  M.YD_CD               = @[yd_cd]
                                                     AND    M.VNDR_SEQ            = @[vndr_seq]
                                                     AND    M.TML_AGMT_STS_CD     = 'C'
                                                     AND    M.DELT_FLG            = 'N'

                                                     AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[fm_prd_dt],'-') -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 
                                                     AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[fm_prd_dt],'-')) -- From Period Date([fm_prd_dt]) ==> Marine Storage/OFF Dock Sotrage Invoice 

                                                AND    H.TML_AGMT_OFC_CTY_CD = T.TML_AGMT_OFC_CTY_CD(+)
                                                AND    H.TML_AGMT_SEQ        = T.TML_AGMT_SEQ(+)
                                                AND    H.TML_AGMT_VER_NO     = T.TML_AGMT_VER_NO(+)
                                                GROUP BY H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
                                                T.LGS_COST_CD, T.THRP_LGS_COST_CD ) A, TES_TML_SO_COST C, TES_TML_AGMT_DTL D
                                            WHERE  C.COST_CALC_MZD_CD = 'A'
                                            AND    C.TML_AGMT_MGMT_CD = 'A'

                                            AND    C.FDCK_CY_STO_FLG = 'Y' -- OFF Dock Storage Invoice
                                            AND    D.TML_AGMT_OFC_CTY_CD = A.CTY
                                            AND    D.TML_AGMT_SEQ = A.SEQ
                                            AND    D.TML_AGMT_VER_NO  = A.NO
                                            AND    C.LGS_COST_CD = D.LGS_COST_CD
                                            AND    DECODE(A.CNT,0,DECODE(SUBSTR(C.LGS_COST_CD,1,2),'TP','N','Y'),'Y') = 'Y' 
                                            AND    D.THRP_COST_CD_FLG IS NULL
											GROUP BY DECODE(1,0,C.LGS_COST_CD,DECODE(C.LGS_COST_CD,CD,TP,C.LGS_COST_CD))
                                    #end


                                        ) A,
                                        (
                                            SELECT ltrim(regexp_substr((select COST_CD_FTR_RMK
                                                                          from tes_tml_so_hdr
                                                                         where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]), '[^|]+', 1, level ) ,'|') as COST_CODE
                                             FROM dual
                                             connect by level<= ( length((select COST_CD_FTR_RMK
                                                                            from tes_tml_so_hdr
                                                                           where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]))+1 - length(replace((select COST_CD_FTR_RMK
                                                                                                                            from tes_tml_so_hdr
                                                                                                                           where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]), '|')) ) / length('|')
                                        )B,
                                        (
                                            SELECT CNTR_NO FROM TES_FILE_IMP_TMP
                                            WHERE 1=1
                                            AND TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]
                 
                                        ) C

            #if (${cost_cd_ftr_rmk} == '') 
                WHERE A.COST_CODE=B.COST_CODE(+)
            #else 
                WHERE A.COST_CODE=B.COST_CODE -- hdr정보에 데이터 있으면 inner 없음 outter
            #end
                                        
                                    ) AA,
                                    	(SELECT HDR.INV_NO
                                               , HDR.YD_CD
                                               , HDR.VNDR_SEQ
                                               , HDR.LGS_COST_CD
                                               , HDR.CNTR_NO
                                               , HDR.CNTR_STY_CD
                                            FROM
                                                 (SELECT DISTINCT CNTR_NO
                                                   FROM TES_FILE_IMP_TMP
                                                  WHERE 1=1
                                                        AND TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd]
                                                        AND TML_SO_SEQ=@[tml_so_seq]
                                                 ) CNTR
                                               ,
                                                 (SELECT DISTINCT H.INV_NO
                                                      , H.YD_CD
                                                      , H.VNDR_SEQ
                                                      ,
                                                        (SELECT LGS_COST_CD
                                                          FROM TES_TML_SO_DTL D
                                                         WHERE 1=1
                                                               AND H.TML_SO_OFC_CTY_CD = D.TML_SO_OFC_CTY_CD
                                                               AND H.TML_SO_SEQ = D.TML_SO_SEQ
                                                               AND D.CALC_TP_CD = 'A'
                                                               AND NVL(L.CNTR_TPSZ_CD,'N') = NVL(D.CNTR_TPSZ_CD,'N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IO_BND_CD,'N'),'ON',NVL(L.IO_BND_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IO_BND_CD,'N'),'ON',NVL(D.IO_BND_CD,'N'),'OF','N','ST','N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IOC_CD,'N'),'ON',NVL(L.IOC_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IOC_CD,'N'),'ON',NVL(D.IOC_CD,'N'),'OF','N','ST','N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.LANE_CD,'N'),'ON',NVL(L.LANE_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.LANE_CD,'N'),'ON',NVL(D.LANE_CD,'N'),'OF','N','ST','N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM', DECODE(L.BB_CGO_FLG,'Y','BB',DECODE(L.LOCL_TS_IND_CD,'T',DECODE(L.CNTR_STY_CD,'F','TS','TM'),DECODE(L.CNTR_STY_CD,'F','FL','MT'))), 'ON',DECODE(L.CNTR_STY_CD,'F','F','M'),'OF',DECODE(L.CNTR_STY_CD,'F','FL','MT'),'ST',DECODE(L.LOCL_TS_IND_CD,'T','TS',DECODE(L.CNTR_STY_CD,'F','FL','MT'))) = DECODE(H.TML_INV_TP_CD,'TM',SUBSTR(D.LGS_COST_CD,5,2),'ON',SUBSTR(D.LGS_COST_CD,6,1),'OF',SUBSTR(D.LGS_COST_CD,5,2), 'ST',SUBSTR(D.LGS_COST_CD,5,2))
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.DCGO_CLSS_CD,'N'),'ON',NVL(L.DCGO_CLSS_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.DCGO_IND_CD,'N'),'ON',NVL(D.DCGO_IND_CD,'N'),'OF','N','ST','N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',DECODE(D.TML_TRNS_MOD_CD,'','S','S','S',NVL(L.TML_TRNS_MOD_CD,'S')),'N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.TML_TRNS_MOD_CD,'S'),'N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS','F','N'),'N') = DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS',L.CNTR_STY_CD,'N'),'N')
                                                               AND ROWNUM = 1
                                                        ) AS LGS_COST_CD
                                                      , L.CNTR_NO
                                                      , L.CNTR_STY_CD
                                                   FROM TES_TML_SO_HDR H
                                                      , TES_TML_SO_CNTR_LIST L
                                                  WHERE H.YD_CD = @[yd_cd]
                                                        AND H.VNDR_SEQ = @[vndr_seq]
                                                        AND H.TML_SO_OFC_CTY_CD = L.TML_SO_OFC_CTY_CD
                                                        AND H.TML_SO_SEQ = L.TML_SO_SEQ
                                                        AND NVL(H.DELT_FLG,'N') <> 'Y'
                                                        AND L.VRFY_RSLT_IND_CD = 'CO'
                                                        AND H.TML_INV_TP_CD = 'OF'
                                                        AND H.TML_INV_RJCT_STS_CD <> 'RJ'
                                                        AND
                                                        (TO_DATE(H.FM_PRD_DT,'YYYYMMDD') BETWEEN TO_DATE(REPLACE(@[fm_prd_dt],'-'),'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt],'-'),'YYYYMMDD')
                                                         OR TO_DATE(H.TO_PRD_DT,'YYYYMMDD') BETWEEN TO_DATE(REPLACE(@[fm_prd_dt],'-'),'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt],'-'),'YYYYMMDD'))
                                                        AND EXISTS
                                                        (SELECT '1'
                                                          FROM TES_TML_SO_DTL D
                                                         WHERE 1=1
                                                               AND H.TML_SO_OFC_CTY_CD = D.TML_SO_OFC_CTY_CD
                                                               AND H.TML_SO_SEQ = D.TML_SO_SEQ
                                                               AND D.CALC_TP_CD = 'A'
                                                               AND NVL(L.CNTR_TPSZ_CD,'N') = NVL(D.CNTR_TPSZ_CD,'N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IO_BND_CD,'N'),'ON',NVL(L.IO_BND_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IO_BND_CD,'N'),'ON',NVL(D.IO_BND_CD,'N'),'OF','N','ST','N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IOC_CD,'N'),'ON',NVL(L.IOC_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IOC_CD,'N'),'ON',NVL(D.IOC_CD,'N'),'OF','N','ST','N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.LANE_CD,'N'),'ON',NVL(L.LANE_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.LANE_CD,'N'),'ON',NVL(D.LANE_CD,'N'),'OF','N','ST','N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM', DECODE(L.BB_CGO_FLG,'Y','BB',DECODE(L.LOCL_TS_IND_CD,'T',DECODE(L.CNTR_STY_CD,'F','TS','TM'),DECODE(L.CNTR_STY_CD,'F','FL','MT'))), 'ON',DECODE(L.CNTR_STY_CD,'F','F','M'),'OF',DECODE(L.CNTR_STY_CD,'F','FL','MT'),'ST',DECODE(L.LOCL_TS_IND_CD,'T','TS',DECODE(L.CNTR_STY_CD,'F','FL','MT'))) = DECODE(H.TML_INV_TP_CD,'TM',SUBSTR(D.LGS_COST_CD,5,2),'ON',SUBSTR(D.LGS_COST_CD,6,1),'OF',SUBSTR(D.LGS_COST_CD,5,2), 'ST',SUBSTR(D.LGS_COST_CD,5,2))
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',NVL(L.DCGO_CLSS_CD,'N'),'ON',NVL(L.DCGO_CLSS_CD,'N'),'OF','N','ST','N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.DCGO_IND_CD,'N'),'ON',NVL(D.DCGO_IND_CD,'N'),'OF','N','ST','N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',DECODE(D.TML_TRNS_MOD_CD,'','S','S','S',NVL(L.TML_TRNS_MOD_CD,'S')),'N') = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.TML_TRNS_MOD_CD,'S'),'N')
                                                               AND DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS','F','N'),'N') = DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS',L.CNTR_STY_CD,'N'),'N')
                                                        )
                                                 ) HDR
                                           WHERE 1=1
                                                 AND HDR.CNTR_NO = CNTR.CNTR_NO
                                           GROUP BY HDR.INV_NO
                                               , HDR.YD_CD
                                               , HDR.VNDR_SEQ
                                               , HDR.LGS_COST_CD
                                               , HDR.CNTR_NO
                                               , HDR.CNTR_STY_CD
                                      ) BB
                                    WHERE AA.CNTR_NO = BB.CNTR_NO
                                    AND AA.COST_CODE = BB.LGS_COST_CD
                                    group by BB.CNTR_NO, BB.CNTR_STY_CD
                                )                                 
                               ) DB2
        WHERE ORG.CNTR_NO        = CALC.CNTR_NO(+)
        AND   ORG.CNTR_NO        = MC.CNTR_NO(+)
        AND   ORG.CNTR_NO        = DB2.CNTR_NO(+)
        AND   ORG.TML_SO_TMP_SEQ = CALC.TML_SO_TMP_SEQ(+) ) Z ) X
        WHERE DIFF_RANK = 1			]]></sql>
			<params>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="fm_prd_dt" type="12" value="" out="N"/>
				<param name="to_prd_dt" type="12" value="" out="N"/>
				<param name="tml_so_ofc_cty_cd" type="12" value="" out="N"/>
				<param name="tml_so_seq" type="2" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
