<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SingleTransportationSOManageDBDAOSearchSingleTransportationSOListRSQL">
			<desc><![CDATA[CY&DOOR S/O Correction 조회]]></desc>
			<sql><![CDATA[
SELECT  AAA.REPO_PLN_ID
      , AAA.PLN_YRWK
      , AAA.REF_ID
      , AAA.REF_SEQ
      , AAA.TRSP_SO_CMB_TP_CD
      , (AAA.TRSP_SO_OFC_CTY_CD||AAA.TRSP_SO_SEQ)   AS TRSP_SO_OFC_SEQ
	  , AAA.TRSP_SO_STS_CD
      , AAA.COP_NO
      , AAA.TRSP_SO_SEQ
      , AAA.COST_ACT_GRP_SEQ
      , AAA.EQ_NO
	  , AAA.EQ_NO BEFORE_EQ_NO
      , AAA.EQ_TPSZ_CD
      , AAA.ORG_EQ_TPSZ_CD
      , (AAA.TRSP_WO_OFC_CTY_CD||AAA.TRSP_WO_SEQ)   AS TRSP_WO_OFC_SEQ
	  , AAA.TRSP_WO_OFC_CTY_CD
	  , AAA.TRSP_WO_SEQ
      , AAA.CNTR_SLT_NO
      , AAA.COST_ACT_GRP_CD
      , AAA.VNDR_SEQ
      , AAA.TRSP_COST_DTL_MOD_CD
      , AAA.TRSP_CRR_MOD_CD
      , AAA.FM_NOD_CD
      , AAA.FM_NOD_YARD
	  , AAA.FM_NOD_CD_NM
      , AAA.TO_NOD_CD
      , AAA.TO_NOD_YARD
	  , AAA.TO_NOD_CD_NM
      , AAA.VIA_NOD_CD
      , AAA.VIA_NOD_YARD
	  , AAA.VIA_NOD_CD_NM
      , AAA.DOR_NOD_CD
      , AAA.DOR_NOD_YARD
	  , AAA.DOR_NOD_CD_NM	  
      , '' FM_NOD_CD2
      , '' FM_NOD_YARD2
      , '' TO_NOD_CD2
      , '' TO_NOD_YARD2
      , '' VIA_NOD_CD2
      , '' VIA_NOD_YARD2
      , '' DOR_NOD_CD2
      , '' DOR_NOD_YARD2
      , AAA.BKG_NO
      , AAA.BL_NO
      , AAA.CONTI_CD
      , SUBSTR(AAA.CNEE_CUST_INFO,1,2)                  AS CNEE_CUST_CNT_CD
      , TO_NUMBER(DECODE(SUBSTR(AAA.CNEE_CUST_INFO,3,8), 999999, '', TRIM(SUBSTR(AAA.CNEE_CUST_INFO,3,8)))) AS CNEE_CUST_SEQ
      , SUBSTR(AAA.CNEE_CUST_INFO,11,500)               AS CNEE_CUST_NM
      , SUBSTR(AAA.SHPR_CUST_INFO,1,2)                  AS SHPR_CUST_CNT_CD
      , TO_NUMBER(DECODE(SUBSTR(AAA.SHPR_CUST_INFO,3,8), 999999, '', TRIM(SUBSTR(AAA.SHPR_CUST_INFO,3,8)))) AS SHPR_CUST_SEQ
      , SUBSTR(AAA.SHPR_CUST_INFO,11,500)               AS SHPR_CUST_NM
      , AAA.NTFY_CUST_NM
      , AAA.N1ST_NOD_PLN_DT
      , AAA.N1ST_NOD_PLN_DT_HMS
      , AAA.LST_NOD_PLN_DT
      , AAA.LST_NOD_PLN_DT_HMS
      , AAA.DOR_NOD_PLN_DT
      , AAA.DOR_NOD_PLN_DT_HMS
      , AAA.TRSP_BND_CD
      , AAA.CUST_NOMI_TRKR_FLG
      , AAA.TRSP_SO_CMB_SEQ
      , AAA.CGO_TP_CD
      , AAA.CNTR_WGT
      , AAA.WGT_MEAS_UT_CD
      , AAA.CMDT_CD
      , AAA.CNTR_KGS_WGT
      , AAA.CNTR_LBS_WGT
      , AAA.TRUNKVVD
      , AAA.CUST_CNT_CD
      , AAA.ACT_CUST_CD
      , AAA.DOR_DE_ADDR
      , AAA.MLT_STOP_DE_FLG
      , AAA.DOR_SVC_TP_CD
      , AAA.DOR_SVC_TP_CD AS DOR_SVC_TP_CD2
      , DECODE(AAA.INTER_RMK_CHK, '', '', 'Y') INTER_RMK
      , AAA.CRE_USR_ID
      , AAA.TRSP_SO_OFC_CTY_CD
      , AAA.IB_VVD_CD
      , AAA.OB_VVD_CD
      , AAA.SPCL_INSTR_RMK
      , AAA.BKG_RCVDE_TERM_CD
      , AAA.SLAN_CD
      , AAA.POR_CD
      , AAA.POL_CD
      , AAA.POD_CD
      , AAA.DEL_CD
      , AAA.CRE_OFC_CD
      , AAA.SPCL_CGO_CNTR_TP_CD
      , NVL(REGEXP_SUBSTR(AAA.FOC, '[^|]+', 1, 1), 'N') AS CGOR_FRT_PAY_IND_FLG
      , NVL(REGEXP_SUBSTR(AAA.FOC, '[^|]+', 1, 2), 'N') AS CGOR_ORG_BL_RCVR_IND_FLG
      , NVL(REGEXP_SUBSTR(AAA.FOC, '[^|]+', 1, 3), 'N') AS CGOR_CSTMS_ACPT_RE_IND_FLG
      , AAA.IBD_CSTMS_CLR_LOC_CD
      , AAA.OWNR_CO_CD
      , SUBSTR(AAA.MST_CNTR, 1, 1) AS IMDT_EXT_FLG
      , SUBSTR(AAA.MST_CNTR, 2)    AS LSTM_CD
      , AAA.LST_LOC_CD
      , '' LSTM_EXP_FLG
      , AAA.SEALNO
      , AAA.SEALNO2
      , TRIM(REGEXP_SUBSTR(PKGCODE_NOOFPKG, '[^$]+', 1, 1)) AS PKGCODE
      , TRIM(REGEXP_SUBSTR(PKGCODE_NOOFPKG, '[^$]+', 1, 2)) AS NOOFPKG
      , TRS_COMMON_PKG.GET_CONV_WGT_TO_KGS_FNC(TRIM(REGEXP_SUBSTR(PKGCODE_NOOFPKG, '[^$]+',1, 3)), TRIM(REGEXP_SUBSTR(PKGCODE_NOOFPKG, '[^$]+',1, 4))) AS VGM_KGS_WGT
      , TRS_COMMON_PKG.GET_CONV_WGT_TO_LBS_FNC(TRIM(REGEXP_SUBSTR(PKGCODE_NOOFPKG, '[^$]+',1, 3)), TRIM(REGEXP_SUBSTR(PKGCODE_NOOFPKG, '[^$]+',1, 4))) AS VGM_LBS_WGT
      , AAA.SC_NO
      , AAA.RFANO
      , AAA.TRSP_COST_DTL_MOD_SEP
      , TRIM(SUBSTR(TRO_CNFM,1,3))   AS DCGO_SEQ
      , TRIM(SUBSTR(TRO_CNFM,4,3))   AS RC_SEQ
      , TRIM(SUBSTR(TRO_CNFM,7,3))   AS AWK_CGO_SEQ
      , TRIM(SUBSTR(TRO_CNFM,10,50)) AS CUSTOMSCLEARANCENO
      , DECODE(TRIM(SUBSTR(TRO_CNFM,10,50)),NULL,'','Y') CUSTOMSCLEARANCE
      , DECODE(AAA.CONTI_CD, 'E', TRIM(SUBSTR(TRO_CNFM,60)), MDM_CO_CMDT_NM) CMDT_NAME
      , REGEXP_SUBSTR(AAA.PKUP_INFO, '[^^]+', 1, 1) AS CNTR_PKUP_NO
      , SUBSTR(REGEXP_SUBSTR(AAA.PKUP_INFO, '[^^]+', 1, 3), 1, INSTR(REGEXP_SUBSTR(AAA.PKUP_INFO, '[^^]+', 1, 3), ' ') - 1) AS AVAL_DT
      , SUBSTR(REGEXP_SUBSTR(AAA.PKUP_INFO, '[^^]+', 1, 3), INSTR(REGEXP_SUBSTR(AAA.PKUP_INFO, '[^^]+', 1, 3), ' ') + 1) AS AVAL_DT_HMS
      , SUBSTR(REGEXP_SUBSTR(AAA.PKUP_INFO, '[^^]+', 1, 4), 1, INSTR(REGEXP_SUBSTR(AAA.PKUP_INFO, '[^^]+', 1, 3), ' ') - 1) AS LST_FREE_DT
      , SUBSTR(REGEXP_SUBSTR(AAA.PKUP_INFO, '[^^]+', 1, 4), INSTR(REGEXP_SUBSTR(AAA.PKUP_INFO, '[^^]+', 1, 3), ' ') + 1) AS LST_FREE_DT_HMS
      , AAA.TRO_CNFM
      , AAA.TRO_SEQ
      , AAA.BKG_QTY
      , '' TRSP_RQST_BKG_FLG
      , AAA.SUB_EQ_TPSZ_CD
      , AAA.CNTR_SUB_FLG
      , AAA.FCTRY_NM
      , AAA.CNTC_PSON_NM
      , AAA.CNTC_PSON_PHN_NO
      , AAA.CNTC_PSON_FAX_NO
      , AAA.DOR_PST_CD
      , AAA.TRO_CFM_OFC_CD
      , AAA.TRO_CFM_USR_ID
      , TO_CHAR(AAA.TRO_CFM_UPD_DT, 'YYYYMMDD')  AS  TRO_CFM_UPD_DT1
      , TO_CHAR(AAA.TRO_CFM_UPD_DT, 'HH24MISS')  AS  TRO_CFM_UPD_DT2
      , AAA.TRO_LOD_REF_NO
      , AAA.BKG_STS_CD
      , AAA.REV_CURR_CD
      , AAA.TRSP_RQST_ORD_REV_AMT
      , '' TRSP_CRR_MOD_CD2
      , '' LSE_CNTR_FLG
      , AAA.RPLN_UMCH_FLG
      , SUBSTR(AAA.RQST_INFO, 1, INSTR(AAA.RQST_INFO, '^', 1, 1) -1) AS TRNS_RQST_OFC_CD
      , SUBSTR(AAA.RQST_INFO, INSTR(AAA.RQST_INFO, '^', 1, 1) + 1, INSTR(AAA.RQST_INFO, '^', 1, 2) - INSTR(AAA.RQST_INFO, '^', 1, 1) - 1) AS TRNS_RQST_USR_ID
      , SUBSTR(AAA.RQST_INFO, INSTR(AAA.RQST_INFO, '^', 1, 2) + 1, INSTR(AAA.RQST_INFO, '^', 1, 3) - INSTR(AAA.RQST_INFO, '^', 1, 2) - 1) AS TRNS_RQST_RSN
      , AAA.CNMV_STS_CD
      , AAA.CRNT_YD_CD
      , AAA.CNMV_DT
	  , AAA.CNG_IND_FLG
	  , AAA.CNG_IND_FLG	AS CNG_IND_FLG_IMG
      , AAA.BKG_STS_CD_NM
  FROM (
    SELECT (SELECT  RPAD(NVL(TO_CHAR(DCGO_SEQ), ' '), 3, ' ')
                  ||RPAD(NVL(TO_CHAR(RC_SEQ), ' '), 3, ' ')
                  ||RPAD(NVL(TO_CHAR(AWK_CGO_SEQ), ' '), 3, ' ')
                  ||RPAD(NVL(CSTMS_CLR_NO, ' '), 50, ' ')
                  ||NVL(REP_CMDT_DESC, ' ')
              FROM BKG_EUR_TRO
             WHERE BKG_NO    = AA.BKG_NO
               AND IO_BND_CD = AA.TRSP_BND_CD
               AND TRO_SEQ   = AA.TRO_SEQ) TRO_HD
           ,DECODE(AA.TRSP_COST_DTL_MOD_CD, 'DOOR', DECODE(AA.TRO_SEQ, NULL, 'N', 'Y'), NULL) AS TRO_CNFM
           ,( SELECT  SC.TRNS_RQST_OFC_CD
                  || '^' ||SC.TRNS_RQST_USR_ID
                  || '^' ||SC.TRNS_RQST_RSN
                  || '^'
              FROM SCE_PLN_SO_LIST SC
             WHERE SC.COP_NO = AA.COP_NO
               AND SC.COST_ACT_GRP_SEQ = AA.COST_ACT_GRP_SEQ
            ) RQST_INFO
           ,AA.*
      FROM (
            SELECT
                  A.REPO_PLN_ID
                , A.CONTI_CD
                , A.PLN_YRWK
                , A.REF_ID
                , A.REF_SEQ
                , A.TRSP_SO_CMB_TP_CD
				, A.TRSP_SO_STS_CD
                , A.COP_NO
                , A.TRSP_SO_SEQ
                , A.TRSP_WO_OFC_CTY_CD
                , A.TRSP_WO_SEQ
                , A.CNTR_SLT_NO
                , A.CNTR_KGS_WGT
                , A.CNTR_LBS_WGT
                , A.COST_ACT_GRP_SEQ
                , A.EQ_NO
                , A.EQ_TPSZ_CD
                , A.ORG_EQ_TPSZ_CD
                , A.COST_ACT_GRP_CD
                , A.VNDR_SEQ
                , DECODE(A.TRSP_COST_DTL_MOD_CD, 'CY', 'CY', 'DR', 'DOOR', 'CY') TRSP_COST_DTL_MOD_CD
                , A.TRSP_COST_DTL_MOD_CD TRSP_COST_DTL_MOD_SEP
                , A.TRSP_CRR_MOD_CD
                , SUBSTR(A.FM_NOD_CD,1,5) FM_NOD_CD
                , SUBSTR(A.FM_NOD_CD,6,2) FM_NOD_YARD
				, DECODE(LENGTH(A.FM_NOD_CD), 7, TRS_COMMON_PKG.GET_YD_CD_NM_FNC(A.FM_NOD_CD), 5, (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = A.FM_NOD_CD)) FM_NOD_CD_NM
                , SUBSTR(A.TO_NOD_CD,1,5) TO_NOD_CD
                , SUBSTR(A.TO_NOD_CD,6,2) TO_NOD_YARD
				, DECODE(LENGTH(A.TO_NOD_CD), 7, TRS_COMMON_PKG.GET_YD_CD_NM_FNC(A.TO_NOD_CD), 5, (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = A.TO_NOD_CD)) TO_NOD_CD_NM
                , SUBSTR(A.VIA_NOD_CD,1,5) VIA_NOD_CD
                , SUBSTR(A.VIA_NOD_CD,6,2) VIA_NOD_YARD
				, DECODE(LENGTH(A.VIA_NOD_CD), 7, TRS_COMMON_PKG.GET_YD_CD_NM_FNC(A.VIA_NOD_CD), 5, (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = A.VIA_NOD_CD)) VIA_NOD_CD_NM
                , SUBSTR(A.DOR_NOD_CD,1,5) DOR_NOD_CD
                , SUBSTR(A.DOR_NOD_CD,6,2) DOR_NOD_YARD
				, DECODE(LENGTH(A.DOR_NOD_CD), 7, (SELECT ZN_NM FROM MDM_ZONE WHERE ZN_CD = A.DOR_NOD_CD), 5, (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = A.DOR_NOD_CD)) AS DOR_NOD_CD_NM		
                , A.BKG_NO BKG_NO
                , A.BL_NO
                , TO_CHAR(A.N1ST_NOD_PLN_DT, 'YYYYMMDD')   N1ST_NOD_PLN_DT
                , TO_CHAR(A.N1ST_NOD_PLN_DT, 'HH24:MI:SS') N1ST_NOD_PLN_DT_HMS
                , TO_CHAR(A.LST_NOD_PLN_DT, 'YYYYMMDD')    LST_NOD_PLN_DT
                , TO_CHAR(A.LST_NOD_PLN_DT, 'HH24:MI:SS')  LST_NOD_PLN_DT_HMS
                , TO_CHAR(A.DOR_NOD_PLN_DT, 'YYYYMMDD')    DOR_NOD_PLN_DT
                , TO_CHAR(A.DOR_NOD_PLN_DT, 'HH24:MI:SS')  DOR_NOD_PLN_DT_HMS
                , A.TRSP_BND_CD
                , A.CUST_NOMI_TRKR_FLG                     CUST_NOMI_TRKR_FLG
                , (A.CUST_CNT_CD||A.CUST_SEQ)              CUST_CNT_CD
                , (A.ACT_CUST_CNT_CD||A.ACT_CUST_SEQ)      ACT_CUST_CD
                , A.ACT_CUST_CNT_CD
                , A.ACT_CUST_SEQ
                , A.ACT_CUST_ADDR_SEQ
                , A.TRSP_SO_CMB_SEQ
                , A.CGO_TP_CD
                , A.CNTR_WGT
                , A.WGT_MEAS_UT_CD
                , A.CMDT_CD
                , (A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD) TRUNKVVD
                , A.DOR_DE_ADDR
                , A.MLT_STOP_DE_FLG
                , A.DOR_SVC_TP_CD
                , (SELECT MAX(RMK.BKG_NO) FROM TRS_INTER_RMK RMK WHERE RMK.BKG_NO = A.BKG_NO AND NVL(RMK.EQ_NO, 'X') = NVL2(RMK.EQ_NO, A.EQ_NO, 'X')  AND NVL(RMK.DELT_FLG, 'N') = 'N') AS INTER_RMK_CHK
                , A.CRE_USR_ID
                , A.UPD_USR_ID
                , A.TRSP_SO_OFC_CTY_CD
                , A.IB_VVD_CD
                , A.OB_VVD_CD
                , REPLACE(A.SPCL_INSTR_RMK, CHR(13)||CHR(10), ' ') SPCL_INSTR_RMK
                , A.BKG_RCVDE_TERM_CD
                , A.SLAN_CD
                , A.POR_CD
                , A.POL_CD
                , A.POD_CD
                , A.DEL_CD
                , A.CRE_OFC_CD
                , A.SPCL_CGO_CNTR_TP_CD
                , A.IBD_CSTMS_CLR_LOC_CD
                , A.OWNR_CO_CD
                , A.LST_LOC_CD
                , B.SC_NO SC_NO
                ,CASE WHEN A.TRSP_BND_CD = 'O' AND A.CONTI_CD = 'M' AND A.TRSP_COST_DTL_MOD_CD <> 'DR' THEN 
                    (SELECT PKUP_EDI_322_NO || '^^^'
                     FROM (SELECT  /*+ INDEX (G XAK4EDI_322_MSG) */  G.BKG_EDI_322_NO
                            ,G.EQ_NO
                            ,G.DEST_LOC_NM
                            ,G.PKUP_EDI_322_NO
                            ,ROW_NUMBER() OVER(partition BY G.EQ_NO, G.BKG_EDI_322_NO, G.DEST_LOC_NM order by G.EVNT_DT DESC, G.EQ_NO DESC, G.EDI_322_STS_CD DESC) RK
                          FROM EDI_322_MSG G) P1
                    WHERE P1.BKG_EDI_322_NO = A.BKG_NO
                      AND P1.EQ_NO = A.EQ_NO
                      AND P1.DEST_LOC_NM = A.FM_NOD_CD
                      AND P1.RK = 1
                      AND ROWNUM=1
                    )
                  ELSE (SELECT TRS_GET_PKUP_NO_FNC(A.BKG_NO, A.EQ_NO, '', '', '', A.FM_NOD_CD) FROM DUAL)  
                 END PKUP_INFO
                , A.SUB_EQ_TPSZ_CD
                , A.CNTR_SUB_FLG
                , A.FCTRY_NM
                , A.CNTC_PSON_NM
                , A.CNTC_PSON_PHN_NO
                , A.CNTC_PSON_FAX_NO
                , A.DOR_PST_CD
                , A.TRO_CFM_OFC_CD
                , A.TRO_CFM_USR_ID
                , A.TRO_CFM_UPD_DT
                , A.TRO_LOD_REF_NO
                , A.REV_CURR_CD
                , A.TRSP_RQST_ORD_REV_AMT
                , B.MTY_BKG_STS_CD AS BKG_STS_CD
                , B.RFA_NO AS RFANO
                ,(SELECT PCK_TP_CD || '$' || PCK_QTY || '$' || NVL(VGM_WGT_UT_CD, 'KGS') || '$' || NVL(VGM_WGT, 0)
                    FROM BKG_CONTAINER
                   WHERE BKG_NO  = A.BKG_NO
                     AND CNTR_NO = A.EQ_NO) AS PKGCODE_NOOFPKG
                ,(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO  = A.BKG_NO AND CNTR_NO = A.EQ_NO AND CNTR_SEAL_SEQ = 1) AS SEALNO
                ,(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO  = A.BKG_NO AND CNTR_NO = A.EQ_NO AND CNTR_SEAL_SEQ = 2) AS SEALNO2
                , (SELECT TRO_SEQ
                     FROM SCE_TRO_MAPG
                    WHERE COP_NO        = A.COP_NO
                      AND IO_BND_CD     = A.TRSP_BND_CD
                      AND AREA_CONTI_CD = A.CONTI_CD) AS TRO_SEQ
                , (SELECT CMDT_NM
                     FROM MDM_COMMODITY
                    WHERE CMDT_CD = A.CMDT_CD) AS MDM_CO_CMDT_NM
                , (SELECT LPAD(NVL(BC.CUST_CNT_CD, ' '), 2, ' ') || LPAD(TO_CHAR(NVL(BC.CUST_SEQ, 999999)), 8, ' ') || BC.CUST_NM
                     FROM BKG_CUSTOMER BC
                    WHERE BC.BKG_NO = A.BKG_NO
                      AND BC.BKG_CUST_TP_CD = 'C')    CNEE_CUST_INFO
                , (SELECT LPAD(NVL(BC.CUST_CNT_CD, ' '), 2, ' ') || LPAD(TO_CHAR(NVL(BC.CUST_SEQ, 999999)), 8, ' ') || BC.CUST_NM
                     FROM BKG_CUSTOMER BC
                    WHERE BC.BKG_NO = A.BKG_NO
                      AND BC.BKG_CUST_TP_CD = 'S')    SHPR_CUST_INFO
                , (SELECT BC.CUST_NM
                     FROM BKG_CUSTOMER BC
                    WHERE BC.BKG_NO = A.BKG_NO
                      AND BC.BKG_CUST_TP_CD = 'N')    NTFY_CUST_NM
                , (SELECT NVL(FRT_CLT_FLG, 'N') || '|' || NVL(OBL_RDEM_FLG, 'N') || '|' || DECODE(CSTMS_CLR_CD, 'Y', 'Y', 'N')
                  FROM BKG_CGO_RLSE
                 WHERE BL_NO = A.BL_NO) FOC
                , (SELECT NVL(IMDT_EXT_FLG, ' ')||NVL(LSTM_CD, ' ')
                     FROM MST_CONTAINER
                    WHERE CNTR_NO  = A.EQ_NO) MST_CNTR
                , (SELECT LISTAGG(DECODE(NVL(QTY.EQ_SUBST_CGO_QTY, 0), 0, QTY.CNTR_TPSZ_CD
                          ||' '||QTY.OP_CNTR_QTY, QTY.CNTR_TPSZ_CD||' '||QTY.OP_CNTR_QTY
                          ||'-SUB '||QTY.EQ_SUBST_CNTR_TPSZ_CD||' '||QTY.EQ_SUBST_CGO_QTY
                          ), ', ') WITHIN GROUP (ORDER BY QTY.BKG_NO)
                     FROM BKG_QUANTITY QTY
                    WHERE QTY.BKG_NO = A.BKG_NO
                  ) BKG_QTY
                , A.RPLN_UMCH_FLG
                , MST.CNMV_STS_CD AS CNMV_STS_CD
                , MST.CRNT_YD_CD AS CRNT_YD_CD
                , TO_CHAR(MST.CNMV_DT, 'YYYY-MM-DD HH24:MI') AS CNMV_DT
				, NVL((SELECT CNG_IND_FLG FROM TRS_TRSP_SVC_ORD_CNG ZZ WHERE ZZ.TRSP_SO_OFC_CTY_CD= A.TRSP_SO_OFC_CTY_CD AND ZZ.TRSP_SO_SEQ = A.TRSP_SO_SEQ AND ZZ.TRSP_SO_SUB_SEQ = 1 AND ZZ.BKG_NO = A.BKG_NO), 'N') CNG_IND_FLG
                , DECODE(A.CGO_TP_CD, 'F', DECODE(B.BKG_STS_CD, 'W', INTG.INTG_CD_VAL_DESC)) BKG_STS_CD_NM
         FROM  TRS_TRSP_SVC_ORD            A
              ,BKG_BOOKING                 B
              ,MST_CONTAINER			   MST
              ,COM_INTG_CD_DTL			   INTG
              #if (${frm_plandate} != '' && ${dateCondition} == 'W')
                 ,TRS_TRSP_WRK_ORD C
              #end
        WHERE  A.BKG_NO        = B.BKG_NO
        AND    A.EQ_NO			 = MST.CNTR_NO(+)
      #if(${cnmv_sts_cd} != '')
        AND MST.CNMV_STS_CD = @[cnmv_sts_cd] 
      #end
        AND    A.CRE_OFC_CD      = @[form_usr_ofc_cd]
              #if (${frm_plandate} != '' && ${to_plandate} != '' )
                  #if (${dateCondition} == 'S')
                      AND A.LOCL_CRE_DT BETWEEN TO_DATE(@[frm_plandate], 'YYYYMMDD') AND TO_DATE(@[to_plandate], 'YYYYMMDD')+0.99999
                  #elseif (${dateCondition} == 'P')
                      AND A.N1ST_NOD_PLN_DT BETWEEN TO_DATE(@[frm_plandate], 'YYYYMMDD') AND TO_DATE(@[to_plandate], 'YYYYMMDD')+0.99999
                  #elseif (${dateCondition} == 'D')
                      AND A.DOR_NOD_PLN_DT BETWEEN TO_DATE(@[frm_plandate], 'YYYYMMDD') AND TO_DATE(@[to_plandate], 'YYYYMMDD')+0.99999
                  #elseif (${dateCondition} == 'W')
                      AND A.TRSP_WO_OFC_CTY_CD 					= C.TRSP_WO_OFC_CTY_CD
                      AND A.TRSP_WO_SEQ        					= C.TRSP_WO_SEQ
                      AND C.LOCL_CRE_DT BETWEEN TO_DATE(@[frm_plandate], 'YYYYMMDD') AND TO_DATE(@[to_plandate], 'YYYYMMDD')+0.99999
                  #end
              #end
        AND  A.DELT_FLG        = 'N'
        AND  A.TRSP_SO_TP_CD   = 'Y'

        #if (${svc_provider} != '')
            AND A.VNDR_SEQ  = @[svc_provider]
        #end

        #if (${bound} != 'ALL')
            AND A.TRSP_BND_CD  = @[bound]
        #end

        #if (${transmode} != 'ALL')
            AND A.TRSP_CRR_MOD_CD  = @[transmode]
        #end

        #if (${costmode} != 'ALL')
            AND A.TRSP_COST_DTL_MOD_CD  = @[costmode]
        #end

        #if (${frmnode} != '')
            AND A.FM_NOD_CD LIKE @[frmnode] ||'%'
        #end
		-- Multi From Node로 조회
		#if ($arr_fmnode.size() > 0) 
		    AND A.FM_NOD_CD in (
		    #foreach( ${key} in ${arr_fmnode}) 
			    #if($velocityCount < $arr_fmnode.size()) 
			        '$key', 
			    #else 
		            '$key' 
			    #end 
		    #end
		    )
		#end
        #if (${vianode} != '')
            AND A.VIA_NOD_CD LIKE @[vianode] ||'%'
        #end
        #if (${tonode} != '')
            AND A.TO_NOD_CD LIKE @[tonode] ||'%'
        #end
		-- Multi To Node로 조회
		#if ($arr_tonode.size() > 0) 
		    AND A.TO_NOD_CD in (
		    #foreach( ${key} in ${arr_tonode}) 
			    #if($velocityCount < $arr_tonode.size()) 
			        '$key', 
			    #else 
		            '$key' 
			    #end 
		    #end
		    )
		#end
		-- Port로 조회 
		#if (${portio} == 'I')
	  		AND B.POD_CD = @[portcd]
		#elseif (${portio} == 'O')
			AND B.POL_CD = @[portcd]
		#end
        #if (${dorloc} != '')
            AND A.DOR_NOD_CD LIKE @[dorloc] ||'%'
        #end

        #if (${rad_wo_issued} == 'YES')
           AND A.TRSP_SO_STS_CD = 'I' 
        #else
           AND A.TRSP_SO_STS_CD IN ('C', 'R')
        #end

        #if ($arr_bkgno.size() > 0) 
            AND A.BKG_NO in (
            #foreach( ${key} in ${arr_bkgno}) 
	            #if($velocityCount < $arr_bkgno.size()) 
		            '$key', 
	            #else 
		            '$key' 
	            #end 
            #end
		    )
        #end

        #if ($arr_billno.size() > 0) 
            AND A.BL_NO in (
            #foreach( ${key} in ${arr_billno}) 
	            #if($velocityCount < $arr_billno.size()) 
		            '$key', 
	            #else 
		            '$key' 
	            #end 
            #end
		    )
        #end

        #if ($arr_cntrno.size() > 0) 
            AND A.EQ_NO in (
            #foreach( ${key} in ${arr_cntrno}) 
	            #if($velocityCount < $arr_cntrno.size()) 
		            '$key', 
	            #else 
		            '$key' 
	            #end 
            #end
		    )
        #end

        #if ($arr_trunkvvd.size() > 0) 
            AND (A.VSL_CD,A.SKD_VOY_NO,A.SKD_DIR_CD) in (
            #foreach( ${key} in ${arr_trunkvvd}) 
	            #if($velocityCount < $arr_trunkvvd.size()) 
		            (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1)),
	            #else 
		            (SUBSTR('$key',1,4),SUBSTR('$key',5,4),SUBSTR('$key',9,1))
	            #end 
            #end
		    )
        #end

        #if ($arr_so_no.size() > 0) 
            AND (A.TRSP_SO_OFC_CTY_CD, A.TRSP_SO_SEQ) in (
            #foreach( ${key} in ${arr_so_no}) 
	            #if($velocityCount < $arr_so_no.size()) 
		            (SUBSTR('$key',1,3),SUBSTR('$key',4)),
	            #else 
		            (SUBSTR('$key',1,3),SUBSTR('$key',4))
	            #end 
            #end
		    )
        #end

        #if ($arr_wo_no.size() > 0) 
            AND (A.TRSP_WO_OFC_CTY_CD, A.TRSP_WO_SEQ) in (
            #foreach( ${key} in ${arr_wo_no}) 
	            #if($velocityCount < $arr_wo_no.size()) 
		            (SUBSTR('$key',1,3),SUBSTR('$key',4)),
	            #else 
		            (SUBSTR('$key',1,3),SUBSTR('$key',4))
	            #end 
            #end
		    )
        #end

        #if ($arr_zip_code.size() > 0) 
            AND A.DOR_PST_CD in (
            #foreach( ${key} in ${arr_zip_code}) 
	            #if($velocityCount < $arr_zip_code.size()) 
		            '$key', 
	            #else 
		            '$key' 
	            #end 
            #end
		    )
        #end

        #if ($arr_cntr_slt_no.size() > 0) 
            AND A.CNTR_SLT_NO in (
            #foreach( ${key} in ${arr_cntr_slt_no}) 
	            #if($velocityCount < $arr_cntr_slt_no.size()) 
		            '$key', 
	            #else 
		            '$key' 
	            #end 
            #end
		    )
        #end
            AND B.BKG_STS_CD = INTG.INTG_CD_VAL_CTNT(+)
            AND INTG.INTG_CD_ID(+) = 'CD00769'
     ) AA
 ) AAA			]]></sql>
			<params>
				<param name="cnmv_sts_cd" type="12" value="" out="N"/>
				<param name="form_usr_ofc_cd" type="12" value="" out="N"/>
				<param name="frm_plandate" type="12" value="20080520" out="N"/>
				<param name="to_plandate" type="12" value="20080603" out="N"/>
				<param name="svc_provider" type="12" value="1" out="N"/>
				<param name="bound" type="12" value="1" out="N"/>
				<param name="transmode" type="12" value="1" out="N"/>
				<param name="costmode" type="12" value="1" out="N"/>
				<param name="frmnode" type="12" value="1" out="N"/>
				<param name="vianode" type="12" value="1" out="N"/>
				<param name="tonode" type="12" value="1" out="N"/>
				<param name="portcd" type="12" value="" out="N"/>
				<param name="dorloc" type="12" value="1" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
