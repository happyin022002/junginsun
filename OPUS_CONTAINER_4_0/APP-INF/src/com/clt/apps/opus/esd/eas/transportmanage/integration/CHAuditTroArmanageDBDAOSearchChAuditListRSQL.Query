<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CHAuditTroArmanageDBDAOSearchChAuditListRSQL">
			<desc><![CDATA[searchChAuditList SELECT]]></desc>
			<sql><![CDATA[
SELECT 
A.BKG_NO,
A.BL_NO,
A.por_cd,
A.pol_cd,
A.pod_cd,
A.del_cd,
A.SC_NO,
A.RFA_NO,
A.CNTR_QTY,
A.BND,
A.term,
A.TRO_OFC,
A.TRO_LOC,
A.tro_qty,
A.tro_amt,
A.inv_amt,
A.ar_rev,
A.rev_exp,
A.cct_ofc,
A.ex_rate,
A.TRO_ID,
A.SO_OFC,
A.SO_ID,
A.rating_ofc,
A.rating_id,
A.sts,
A.EUR_TRNS_TP_CD,
A.rmk_ctnt
FROM (
SELECT 
TRO.BKG_NO,
TRO.BL_NO,
TRO.por_cd,
TRO.pol_cd,
TRO.pod_cd,
TRO.del_cd,
NVL(AR_INV.sc_no,'-') SC_NO,
NVL(AR_INV.rfa_no,'-') RFA_NO,
TRO.CNTR_QTY,
TRSO.IO_BND_CD BND,
TRSO.BKG_RCVDE_TERM_CD term,
TRO.TRO_OFC,
TRO.LOC_CD TRO_LOC,
TRSO.QTY tro_qty,
--TRO.tro_rev tro_amt,
TRSO.TRSO_REV tro_amt,
TRSO.inv_amt inv_amt,
case when AR_INV.ar_rev < 0 then 0 else AR_INV.ar_rev end ar_rev,
case when AR_INV.ar_rev < 0 then 0 - TRSO.inv_amt else AR_INV.ar_rev - TRSO.inv_amt end rev_exp,
AR_INV.CLT_OFC_CD cct_ofc,
TRSO.ex_rate,
TRO.TRO_ID,
TRSO.SO_OFC,
TRSO.SO_ID,
AR_INV.AR_OFC_CD rating_ofc,
AR_INV.rating_id,
TRO.bkg_sts_cd sts,
TRO.EUR_TRNS_TP_CD, -- trm_type
DECODE((SELECT 'Y' FROM TRS_EXPN_AUD_RMK RMK WHERE RMK.BKG_NO = TRSO.BKG_NO AND RMK.EAS_EXPN_TP_CD = 'CA' AND RMK.RMK_CTNT_SEQ = 1),'Y','Yes','No') rmk_ctnt
FROM 
/********* SO 부분 ************/
(SELECT
TRO.BKG_NO, TRO.IO_BND_CD, 
SUM(DECODE(SO.TRSP_SO_TP_CD,'Y',1,0)) QTY,
MAX(SO.CRE_OFC_CD) SO_OFC,
MAX(SO.CRE_USR_ID) SO_ID,
MAX(a.usd_locl_xch_rt) ex_rate,
MAX(SO.BKG_RCVDE_TERM_CD) BKG_RCVDE_TERM_CD,
round(SUM(trs_common_pkg.GET_CONVERSION_EUR_AMT_FNC( 'USD', round( (SO.inv_bzc_amt + SO.inv_etc_add_amt)/ a.usd_locl_xch_rt , 2), to_char(SO.cre_dt, 'YYYYMM' ) )), 2) INV_AMT,
SUM(TRO.tro_rev) TRSO_REV
FROM TRS_TRSP_SVC_ORD SO,gl_mon_xch_rt a,
------------ 조회옵션으로 BKG 한정 ----------
(SELECT BKG_NO,IO_BND_CD,TRO_SEQ,
round(SUM(trs_common_pkg.GET_CONVERSION_EUR_AMT_FNC( 'USD', round( (NVL(TRO.TRNS_REV_AMT,0)+NVL(TRO.NMF_TRNS_REV_AMT,0))/ B.usd_locl_xch_rt , 2) , to_char(NVL(tro.cre_dt,TRO.UPD_DT), 'YYYYMM' ))), 2)  tro_rev
FROM BKG_EUR_TRO TRO, gl_mon_xch_rt B
WHERE 1=1
#if( ${data_type} != '' && ${data_type} == 'TRO')
	#if( ( ${str_fromsodate} != '' && ${str_fromsodate} != 'YYYYMMDD' ) && ( ${str_tosodate} != '' && ${str_tosodate} != 'YYYYMMDD' ) )
    	AND TRO.CRE_DT >= TO_DATE(@[str_fromsodate],'YYYYMMDD')
    	AND TRO.CRE_DT <= TO_DATE(@[str_tosodate],'YYYYMMDD')
	#end
AND TRO.cre_ofc_cd in (
#foreach(${key} IN ${arrCreOfcCd})
    #if($velocityCount == 1)
    '${key}'
    	#else
	    , '${key}'
    	#end
	#end
	)
#end
#if( ${str_bkgno} != '' )
AND   TRO.bkg_no       = @[str_bkgno]
#end
#if( ${str_blno} != '' )
AND   TRO.bkg_no  IN ( select bkg_no from bkg_booking where BL_NO = @[str_blno])
#end
#if( ${str_s_bnd} == 'I' )
and TRO.IO_BND_CD = 'I'
#end 
#if( ${str_s_bnd} == 'O' )
and TRO.IO_BND_CD = 'O'
#end    
#if( ${str_vvdno} != '' )
AND   TRO.bkg_no  IN ( SELECT SO.BKG_NO 
                        FROM TRS_TRSP_SVC_ORD SO 
                        WHERE SO.VSL_CD = SUBSTR(@[str_vvdno],0,4)
                        AND SO.SKD_VOY_NO = SUBSTR(@[str_vvdno],5,4)
                        AND SO.SKD_DIR_CD = SUBSTR(@[str_vvdno],9,1)
                      )
#end 
AND TRO.HLG_TP_CD = 'C'
AND NVL(TRO.CXL_FLG,'N') = 'N'
AND B.acct_xch_rt_lvl = 1  --- TRO 환율 적용
AND B.curr_cd = nvl(DECODE(tro.curr_cd,'   ','',tro.curr_cd), 'EUR')
AND B.acct_xch_rt_yrmon = to_char(tro.cre_dt, 'YYYYMM' )
GROUP BY BKG_NO,IO_BND_CD,TRO_SEQ) TRO
---------------------------------------------
WHERE 1=1
AND SO.BKG_NO = TRO.BKG_NO
AND SO.TRSP_BND_CD = TRO.IO_BND_CD
AND SO.TRO_SEQ = TRO.TRO_SEQ
and SO.trsp_cost_dtl_mod_cd IN('DR','CY')
AND NVL(SO.DELT_FLG,'N') = 'N'
and a.acct_xch_rt_lvl = 1  --- SO 환율 적용
and a.curr_cd = SO.inv_curr_cd 
and a.acct_xch_rt_yrmon = to_char(SO.cre_dt, 'YYYYMM' )
GROUP BY  TRO.BKG_NO, TRO.IO_BND_CD) TRSO,
/********* TRO 부분 ************/
(SELECT  
TRO.BKG_NO, TRO.IO_BND_CD,
--COUNT(TRO.TRO_SEQ) CNTR_QTY,
(SELECT COUNT(*) FROM BKG_CONTAINER CN WHERE CN.BKG_NO = TRO.BKG_NO) CNTR_QTY,
MAX(BKG.bl_no) BL_NO,
MAX(BKG.bkg_sts_cd) bkg_sts_cd,
MAX(BKG.por_cd) por_cd,
MAX(BKG.pol_cd) pol_cd,
MAX(BKG.pod_cd) pod_cd,
MAX(BKG.del_cd) del_cd,
MAX(BKG.DE_TERM_CD) DE_TERM_CD,
MAX(tro.cre_ofc_cd) tro_ofc,
MAX(tro.upd_usr_id) tro_id,
MAX(tro.EUR_TRNS_TP_CD) EUR_TRNS_TP_CD,
MAX(troa.LOC_CD) LOC_CD,
round(SUM(trs_common_pkg.GET_CONVERSION_EUR_AMT_FNC( 'USD', round( (NVL(TRO.TRNS_REV_AMT,0)+NVL(TRO.NMF_TRNS_REV_AMT,0))/ B.usd_locl_xch_rt , 2) , to_char(NVL(tro.cre_dt,TRO.UPD_DT), 'YYYYMM' ))), 2)  tro_rev
FROM BKG_EUR_TRO TRO, BKG_EUR_TRO_DTL TROA, bkg_booking BKG, gl_mon_xch_rt B
WHERE 1=1
------------ 조회옵션으로 BKG 한정 ----------
#if( ${data_type} != '' && ${data_type} == 'TRO')
	#if( ( ${str_fromsodate} != '' && ${str_fromsodate} != 'YYYYMMDD' ) && ( ${str_tosodate} != '' && ${str_tosodate} != 'YYYYMMDD' ) )
    	AND TRO.CRE_DT >= TO_DATE(@[str_fromsodate],'YYYYMMDD')
    	AND TRO.CRE_DT <= TO_DATE(@[str_tosodate],'YYYYMMDD')
	#end
AND TRO.cre_ofc_cd in (
#foreach(${key} IN ${arrCreOfcCd})
    #if($velocityCount == 1)
    '${key}'
    	#else
	    , '${key}'
    	#end
	#end
	)
#end
#if( ${str_bkgno} != '' )
AND   TRO.bkg_no       = @[str_bkgno]
#end
#if( ${str_blno} != '' )
AND   TRO.bkg_no  IN ( select bkg_no from bkg_booking where BL_NO = @[str_blno])
#end    
#if( ${str_s_bnd} == 'I' )
and TRO.IO_BND_CD = 'I'
#end 
#if( ${str_s_bnd} == 'O' )
and TRO.IO_BND_CD = 'O'
#end
#if( ${str_vvdno} != '' )
AND   TRO.bkg_no  IN ( SELECT SO.BKG_NO 
                        FROM TRS_TRSP_SVC_ORD SO 
                        WHERE SO.VSL_CD = SUBSTR(@[str_vvdno],0,4)
                        AND SO.SKD_VOY_NO = SUBSTR(@[str_vvdno],5,4)
                        AND SO.SKD_DIR_CD = SUBSTR(@[str_vvdno],9,1)
                      )
#end  
AND TRO.HLG_TP_CD = 'C'
AND NVL(TRO.CXL_FLG,'N') = 'N'
---------------------------------------------
AND TRO.BKG_NO = BKG.BKG_NO
AND TROA.bkg_no = TRO.bkg_no
and TROA.io_bnd_cd = TRO.io_bnd_cd
and TROA.tro_seq = TRO.tro_seq
and TROA.tro_sub_seq = 1
AND B.acct_xch_rt_lvl = 1  --- TRO 환율 적용
AND B.curr_cd = nvl(DECODE(tro.curr_cd,'   ','',tro.curr_cd), 'EUR')
AND B.acct_xch_rt_yrmon = to_char(tro.cre_dt, 'YYYYMM' )
GROUP BY  TRO.BKG_NO, TRO.IO_BND_CD ) TRO,
/********* AR INV 부분 ************/
(SELECT 
TRO.BKG_NO, TRO.IO_BND_CD,
MAX(BR.CLT_OFC_CD) CLT_OFC_CD,
MAX(AR_MN.sc_no) sc_no,
MAX(AR_MN.rfa_no) rfa_no,
case when TRO.IO_BND_CD = 'O'
then round( sum( trs_common_pkg.GET_CONVERSION_EUR_AMT_FNC( 'USD', round( decode( AR_CHG.CHG_CD, 'OIH', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'MSC', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'WHC', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'OAR', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'LWS', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'HWS', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'PCS', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'WJC', AR_CHG.CHG_AMT/c.usd_locl_xch_rt , 0 ) , 2), to_char(AR_MN.CRE_DT, 'YYYYMM' ) ) ), 2)
else round( sum( trs_common_pkg.GET_CONVERSION_EUR_AMT_FNC( 'USD', round( decode( AR_CHG.CHG_CD, 'DIH', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'MSC', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'WHC', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'DDC', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'DIC', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'DAR', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'LWS', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'HWS', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'PCS', AR_CHG.CHG_AMT/c.usd_locl_xch_rt ,
'WJC', AR_CHG.CHG_AMT/c.usd_locl_xch_rt , 0 ) , 2), to_char(AR_MN.CRE_DT, 'YYYYMM' ) ) ), 2)
end ar_rev,
MIN(AR_MN.AR_OFC_CD) AR_OFC_CD,
MAX(AR_MN.ACT_CUST_CNT_CD||AR_MN.ACT_CUST_SEQ) rating_id
FROM INV_AR_MN AR_MN, INV_AR_CHG AR_CHG, BKG_RATE BR,gl_mon_xch_rt C,
------------ 조회옵션으로 BKG 한정 ----------
(SELECT BKG_NO,IO_BND_CD
FROM BKG_EUR_TRO TRO
WHERE 1=1
#if( ${data_type} != '' && ${data_type} == 'TRO')
	#if( ( ${str_fromsodate} != '' && ${str_fromsodate} != 'YYYYMMDD' ) && ( ${str_tosodate} != '' && ${str_tosodate} != 'YYYYMMDD' ) )
    	AND TRO.CRE_DT >= TO_DATE(@[str_fromsodate],'YYYYMMDD')
    	AND TRO.CRE_DT <= TO_DATE(@[str_tosodate],'YYYYMMDD')
	#end
AND TRO.cre_ofc_cd in (
#foreach(${key} IN ${arrCreOfcCd})
    #if($velocityCount == 1)
    '${key}'
    	#else
	    , '${key}'
    	#end
	#end
	)
#end
#if( ${str_bkgno} != '' )
AND   TRO.bkg_no       = @[str_bkgno]
#end
#if( ${str_blno} != '' )
AND   TRO.bkg_no  IN ( select bkg_no from bkg_booking where BL_NO = @[str_blno])
#end    
#if( ${str_s_bnd} == 'I' )
and TRO.IO_BND_CD = 'I'
#end 
#if( ${str_s_bnd} == 'O' )
and TRO.IO_BND_CD = 'O'
#end
#if( ${str_vvdno} != '' )
AND   TRO.bkg_no  IN ( SELECT SO.BKG_NO 
                        FROM TRS_TRSP_SVC_ORD SO 
                        WHERE SO.VSL_CD = SUBSTR(@[str_vvdno],0,4)
                        AND SO.SKD_VOY_NO = SUBSTR(@[str_vvdno],5,4)
                        AND SO.SKD_DIR_CD = SUBSTR(@[str_vvdno],9,1)
                      )
#end    
AND TRO.HLG_TP_CD = 'C'
AND NVL(TRO.CXL_FLG,'N') = 'N'
GROUP BY BKG_NO,IO_BND_CD) TRO
---------------------------------------------
WHERE 1=1
AND AR_MN.AR_IF_NO = AR_CHG.AR_IF_NO
AND AR_MN.IO_BND_CD = TRO.IO_BND_CD
AND AR_MN.INV_DELT_DIV_CD <> 'Y'
AND TRO.BKG_NO = BR.BKG_NO(+)
AND TRO.BKG_NO = AR_MN.BKG_NO
and c.acct_xch_rt_lvl = 1
and c.curr_cd = AR_CHG.CURR_CD --환율.
and c.acct_xch_rt_yrmon = to_char(AR_MN.CRE_DT, 'YYYYMM') -- 환율 적용 월
GROUP BY  TRO.BKG_NO, TRO.IO_BND_CD ) AR_INV

WHERE 1=1
AND TRO.BKG_NO = TRSO.BKG_NO
AND TRO.BKG_NO = AR_INV.BKG_NO
AND TRO.IO_BND_CD = TRSO.IO_BND_CD
AND TRO.IO_BND_CD = AR_INV.IO_BND_CD
) A
where 1=1
#if( ${str_s_type} == 'M' )
and (a.tro_rev - ar_rev > -10 and a.tro_rev - ar_rev < 10 )
#end
#if( ${str_s_type} == 'U' )
and (a.tro_rev - ar_rev < -10 or a.tro_rev - ar_rev > 10  )
#end 
#if( ${str_s_bnd} == 'I' )
and a.bnd = 'I'
#end 
#if( ${str_s_bnd} == 'O' )
and a.bnd = 'O'
#end
#if( ${str_dtltype} == 'OI-1' )
and a.sts in( 'X', 'A')  --O.1
#end
#if( ${str_dtltype} == 'OI-6' )
and a.EUR_TRNS_TP_CD ='FR'  and a.sts not in( 'X', 'A')  --O.6
#end
#if( ${str_dtltype} == 'OI-2' )
    #if( ${str_s_bnd} == 'I' )
    and a.pod_cd = a.del_cd 
    #elseif( ${str_s_bnd} == 'O' )
    and a.por_cd = a.pol_cd 
    #elseif( ${str_s_bnd} == 'A' )
    and ((a.pod_cd = a.del_cd and a.bnd = 'I' ) or (a.por_cd = a.pol_cd and a.bnd = 'O'))
    #end
    and a.term='Y' and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A')  --O.2
#end
#if( ${str_dtltype} == 'OI-3' )
    #if( ${str_s_bnd} == 'I' )
    and  a.pod_cd = a.del_cd and a.pod_cd <> a.tro_loc
    #elseif( ${str_s_bnd} == 'O' )
    and a.por_cd = a.pol_cd and a.pol_cd <> a.tro_loc
    #elseif( ${str_s_bnd} == 'A' )
    and ((a.pod_cd = a.del_cd and a.pod_cd <> a.tro_loc and a.bnd = 'I') 
		or (a.por_cd = a.pol_cd and a.pol_cd <> a.tro_loc and a.bnd = 'O'))
    #end
    and a.term='D'and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A')   --O.3
#end
#if( ${str_dtltype} == 'OI-4' )
    #if( ${str_s_bnd} == 'I' )
    and  a.pod_cd <> a.del_cd and a.pod_cd <> a.tro_loc and a.del_cd <> a.tro_loc
    #elseif( ${str_s_bnd} == 'O' )
    and a.por_cd <> a.pol_cd and a.por_cd <> a.tro_loc and a.pol_cd <> a.tro_loc 
    #elseif( ${str_s_bnd} == 'A' )
    and ((a.pod_cd <> a.del_cd and a.pod_cd <> a.tro_loc and a.del_cd <> a.tro_loc  and a.bnd = 'I')
    or (a.por_cd <> a.pol_cd and a.por_cd <> a.tro_loc and a.pol_cd <> a.tro_loc  and a.bnd = 'O'))
    #end
    and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A')  --I.4
#end
#if( ${str_dtltype} == 'OI-5' )
    #if( ${str_s_bnd} == 'I' )
    and ( a.sts in( 'X', 'A')   --I.1
    or ( a.pod_cd = a.del_cd and a.term='Y' and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') ) --I.2
    or ( a.pod_cd = a.del_cd and a.term='D' and a.pod_cd <> a.tro_loc and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') ) --I.3
    or ( a.pod_cd <> a.del_cd and a.pod_cd <> a.tro_loc and a.del_cd <> a.tro_loc and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') ) --I.4
    or ( a.EUR_TRNS_TP_CD ='FR' and a.sts not in( 'X', 'A')   )) --I.6
    #elseif( ${str_s_bnd} == 'O' )
    and (a.sts in( 'X', 'A')    --O.1
    or ( a.por_cd = a.pol_cd and a.term='Y' and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') ) --O.2
    or ( a.por_cd = a.pol_cd and a.term='D' and a.pol_cd <> a.tro_loc and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A')  ) --O.3
    or ( a.por_cd <> a.pol_cd and a.por_cd <> a.tro_loc and a.pol_cd <> a.tro_loc and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') ) --O.4
    or ( a.EUR_TRNS_TP_CD ='FR'  and a.sts not in( 'X', 'A')  )) --O.6
    #elseif( ${str_s_bnd} == 'A' )
    and ( a.sts in( 'X', 'A')   --I.1
    or ( a.pod_cd = a.del_cd and a.term='Y' and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') and a.bnd = 'I') --I.2
    or ( a.por_cd = a.pol_cd and a.term='Y' and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') and a.bnd = 'O') --O.2
    or ( a.pod_cd = a.del_cd and a.term='D' and a.pod_cd <> a.tro_loc and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') and a.bnd = 'I') --I.3
    or ( a.por_cd = a.pol_cd and a.term='D' and a.pol_cd <> a.tro_loc and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') and a.bnd = 'O') --O.3
    or ( a.pod_cd <> a.del_cd and a.pod_cd <> a.tro_loc and a.del_cd <> a.tro_loc and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') and a.bnd = 'I') --I.4
    or ( a.por_cd <> a.pol_cd and a.por_cd <> a.tro_loc and a.pol_cd <> a.tro_loc and a.ar_rev - a.inv_amt < 0  and a.sts not in( 'X', 'A') and a.bnd = 'O') --O.4
    or ( a.EUR_TRNS_TP_CD ='FR' and a.sts not in( 'X', 'A')   )) --I.6
    #end
#end			]]></sql>
			<params>
				<param name="str_fromsodate" type="12" value="" out="N"/>
				<param name="str_tosodate" type="12" value="" out="N"/>
				<param name="str_bkgno" type="12" value="" out="N"/>
				<param name="str_blno" type="12" value="" out="N"/>
				<param name="str_vvdno" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
