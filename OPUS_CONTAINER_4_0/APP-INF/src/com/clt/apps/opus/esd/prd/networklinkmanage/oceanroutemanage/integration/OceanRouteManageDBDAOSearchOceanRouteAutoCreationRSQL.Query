<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OceanRouteManageDBDAOSearchOceanRouteAutoCreationRSQL">
			<desc><![CDATA[SearchOceanRouteAutoCreation]]></desc>
			<sql><![CDATA[
SELECT ST,        
			     @[pol_port_cd] ORG_LOC_CD,          
			     @[pod_port_cd] DEST_LOC_CD,          
			     POL1,      
			     POD1,       
			     LANE1,       
			     DIR1, 
			     FDR_FLG1, 
			     SVC_TP1, 
			     POL2, 
			     POD2, 
			     LANE2, 
			     DIR2, 
			     FDR_FLG2, 
			     SVC_TP2, 
			     POL3, 
			     POD3, 
			     LANE3, 
			     DIR3, 
			     FDR_FLG3, 
			     SVC_TP3, 
			     POL4, 
			     POD4, 
			     LANE4, 
			     DIR4, 
			     FDR_FLG4, 
			     SVC_TP4, 
			     PRIO,       
			     decode(tg.upd_ind_cd, '',RMK, tg.ocn_rout_usr_rmk ) RMK,         
			     TOT_TT,    
			     ltrim(to_char(trunc((TOT_TT)/24),'00'))||ltrim(to_char(mod((TOT_TT),24  ),'00')) FMT_TOT_TT ,  
			     TT1,  
			     TT2,  
			     TT3,  
			     TT4,  
			     TOT_ST,  
			     ltrim(to_char(trunc((TOT_ST)/24),'00'))||ltrim(to_char(mod((TOT_ST),24  ),'00')) FMT_TOT_ST ,  
			     ST1,  
			     ST2,  
			     ST3,  
			     TS_IND,     
			     FDR_USD,     
			     POD1ETB,   
			     POL2ETB,     
			     POD2ETB,     
			     POL3ETB,     
			     POD3ETB,     
			     POL4ETB,   
			     LINK_COUNT,
				'N' BKG_IND , 
			 	DECODE(TG.ORG_LOC_CD, NULL, 'N', 'Y') TG_EXIST, 
				0 BKG_CNT , 
				 nvl(tg.upd_ind_cd,'S') upd_ind_cd           
			 FROM ( 
			    
			 	SELECT 'A' ST,                     
			 	       A.FM_PORT_CD   POL1,       
			 	       A.TO_PORT_CD   POD1,      
			 	       A.VSL_SLAN_CD  LANE1,    
			 	       A.SKD_DIR_CD   DIR1, 
			 	       'N'            FDR_FLG1, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = A.VSL_SLAN_CD) SVC_TP1, 
			 	       NULL           POL2, 
			 	       NULL           POD2, 
			 	       NULL           LANE2, 
			 	       NULL           DIR2, 
			 	       NULL           FDR_FLG2, 
			 	       NULL           SVC_TP2, 
			 	       NULL           POL3, 
			 	       NULL           POD3, 
			 	       NULL           LANE3, 
			 	       NULL           DIR3, 
			 	       NULL           FDR_FLG3, 
			 	       NULL           SVC_TP3, 
			 	       NULL           POL4, 
			 	       NULL           POD4, 
			 	       NULL           LANE4, 
			 	       NULL           DIR4, 
			 	       NULL           FDR_FLG4, 
			 	       NULL           SVC_TP4, 
			 	       1              PRIO,       
			 	       NULL           RMK,       
			 	       A.TZTM_HRS     TOT_TT,   
			 	       A.TZTM_HRS     TT1,  
			 	       0              TT2,  
			 	       0              TT3,  
			 	       0              TT4,  
			 	       0              TOT_ST,  
			 	       0              ST1,  
			 	       0              ST2,  
			 	       0              ST3,  
			 	       'D'            TS_IND,   
			 	       'N'            FDR_USD,  
			 		   A.TO_PORT_ETB_DY_CD POD1ETB, 
			 		   NULL           POL2ETB,    
			 		   NULL           POD2ETB,    
			 		   NULL           POL3ETB,   
			 		   NULL           POD3ETB,  
			 		   NULL           POL4ETB,   
			 		   1              LINK_COUNT    
			 	FROM PRD_PF_TZ_TM A 
			 	WHERE A.FM_PORT_CD   = @[pol_port_cd] 
			 	AND   A.TO_PORT_CD   = @[pod_port_cd] 
			     AND   A.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%'  
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE A.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND A.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND A.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND A.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') 
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE A.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) 
                 AND A.DELT_FLG <> 'Y'
		
			     UNION ALL        
			 	SELECT 'B' ST,                    
			 	       A.FM_PORT_CD   POL1,      
			 	       A.TO_PORT_CD   POD1,      
			 	       A.VSL_SLAN_CD  LANE1,   
			 	       A.SKD_DIR_CD   DIR1, 
			 	       'N'            FDR_FLG1, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = A.VSL_SLAN_CD) SVC_TP1, 
			 	       B.FM_PORT_CD   POL2, 
			 	       B.TO_PORT_CD   POD2, 
			 	       B.VSL_SLAN_CD  LANE2, 
			 	       B.SKD_DIR_CD   DIR2, 
			 	       'N'            FDR_FLG2, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = B.VSL_SLAN_CD) SVC_TP2, 
			 	       NULL           POL3, 
			 	       NULL           POD3, 
			 	       NULL           LANE3, 
			 	       NULL           DIR3, 
			 	       NULL           FDR_FLG3, 
			 	       NULL           SVC_TP3, 
			 	       NULL           POL4, 
			 	       NULL           POD4, 
			 	       NULL           LANE4, 
			 	       NULL           DIR4, 
			 	       NULL           FDR_FLG4, 
			 	       NULL           SVC_TP4, 
			 	       2              PRIO,      
			 	       NULL           RMK,       
			 	       (A.TZTM_HRS + B.TZTM_HRS)     TOT_TT,   
			 	       A.TZTM_HRS     TT1,  
			 	       B.TZTM_HRS     TT2,  
			 	       0              TT3,  
			 	       0              TT4,  
			 	       DECODE(  
			                 DECODE(A.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(B.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24              TOT_ST,  
			 	       DECODE(  
			                 DECODE(A.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(B.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24              ST1,  
			 	       0              ST2,  
			 	       0              ST3,  
			 	       'T'            TS_IND,   
			 	       'N'            FDR_USD, 
			 		   A.TO_PORT_ETB_DY_CD POD1ETB,  
			 		   B.FM_PORT_ETB_DY_CD POL2ETB, 
			 		   B.TO_PORT_ETB_DY_CD POD2ETB, 
			 		   NULL           POL3ETB,     
			 		   NULL           POD3ETB,     
			 		   NULL           POL4ETB,     
			 		   2              LINK_COUNT     
			 	FROM PRD_PF_TZ_TM A, PRD_PF_TZ_TM B 
			 	WHERE A.TO_PORT_CD   = B.FM_PORT_CD 
			 	AND   A.FM_PORT_CD   = @[pol_port_cd] 
			 	AND   B.TO_PORT_CD   = @[pod_port_cd]  
			     AND   (A.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR B.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%') 
			     AND   A.VSL_SLAN_CD  <> B.VSL_SLAN_CD 
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE A.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1)
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE B.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1)
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE A.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND A.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND A.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND A.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') 
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE B.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND B.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND B.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND B.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	 	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') 
			     AND   (A.TZTM_HRS + B.TZTM_HRS) < 50 * 24 
			     AND A.DELT_FLG <> 'Y'
                 AND B.DELT_FLG <> 'Y'
			     UNION ALL        
			 	SELECT 'C' ST,                     
			 	       A.LNK_ORG_LOC_CD   POL1,    
			 	       A.LNK_DEST_LOC_CD  POD1,   
			 	       A.VSL_SLAN_CD      LANE1,      
			 	       A.SKD_DIR_CD       DIR1, 
			 	       'Y'                FDR_FLG1, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = A.VSL_SLAN_CD) SVC_TP1, 
			 	       B.FM_PORT_CD   POL2, 
			 	       B.TO_PORT_CD   POD2, 
			 	       B.VSL_SLAN_CD  LANE2, 
			 	       B.SKD_DIR_CD   DIR2, 
			 	       'N'            FDR_FLG2, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = B.VSL_SLAN_CD) SVC_TP2, 
			 	       NULL           POL3, 
			 	       NULL           POD3, 
			 	       NULL           LANE3, 
			 	       NULL           DIR3, 
			 	       NULL           FDR_FLG3, 
			 	       NULL           SVC_TP3, 
			 	       NULL           POL4, 
			 	       NULL           POD4, 
			 	       NULL           LANE4, 
			 	       NULL           DIR4, 
			 	       NULL           FDR_FLG4, 
			 	       NULL           SVC_TP4, 
			 	       3              PRIO,        
			 	       NULL           RMK,        
			 	       (A.TZTM_HRS + B.TZTM_HRS)     TOT_TT,   
			 	       A.TZTM_HRS     TT1,  
			 	       B.TZTM_HRS     TT2,  
			 	       0              TT3,  
			 	       0              TT4,  
			            0              TOT_ST,  
			 	       0              ST1,  
			 	       0              ST2,  
			 	       0              ST3,  
			 	       'T'            TS_IND,  
			 	       'N'            FDR_USD,  -- OPTION 
			 		   NULL           POD1ETB, -- OPTION 
			 		   B.FM_PORT_ETB_DY_CD POL2ETB, -- OPTION 
			 		   B.TO_PORT_ETB_DY_CD POD2ETB, -- OPTION  
			 		   NULL           POL3ETB,     -- OPTION 
			 		   NULL           POD3ETB,     -- OPTION 
			 		   NULL           POL4ETB,     -- OPTION 
			 		   2              LINK_COUNT      -- OPTION 
			 	FROM PRD_FDR_LNK A, PRD_PF_TZ_TM B 
			 	WHERE A.LNK_DEST_LOC_CD = B.FM_PORT_CD 
			 	AND   A.LNK_ORG_LOC_CD  = @[pol_port_cd]  
			 	AND   B.TO_PORT_CD      = @[pod_port_cd] 
			     AND   (A.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR B.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%') 
			     AND   A.VSL_SLAN_CD  <> B.VSL_SLAN_CD 
			     AND   A.PCTL_IO_BND_CD IN ('O', 'B')   
			     AND   SUBSTR(A.LNK_ORG_LOC_CD, 1, 2) <> SUBSTR(B.TO_PORT_CD, 1, 2) 
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE B.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) 
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE B.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND B.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND B.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND B.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') 
			     AND   (A.TZTM_HRS + B.TZTM_HRS) < 50 * 24  
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = A.LNK_ORG_LOC_CD 
			                       AND TFS.LNK_DEST_LOC_CD = B.TO_PORT_CD )     
                 AND B.DELT_FLG <> 'Y'
			     -- CASE D   2개의 LINK로 이루어진거, HO LINK - FDR 
			     UNION ALL        
			 	SELECT 'D' ST,                     -- ST (CASE) 
			 	       A.FM_PORT_CD       POL1, 
			 	       A.TO_PORT_CD       POD1, 
			 	       A.VSL_SLAN_CD      LANE1, 
			 	       A.SKD_DIR_CD       DIR1, 
			 	       'N'                FDR_FLG1, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = A.VSL_SLAN_CD) SVC_TP1, 
			 	       B.LNK_ORG_LOC_CD   POL2, 
			 	       B.LNK_DEST_LOC_CD   POD2, 
			 	       B.VSL_SLAN_CD  LANE2, 
			 	       B.SKD_DIR_CD   DIR2, 
			 	       'Y'            FDR_FLG2, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = B.VSL_SLAN_CD) SVC_TP2, 
			 	       NULL           POL3, 
			 	       NULL           POD3, 
			 	       NULL           LANE3, 
			 	       NULL           DIR3, 
			 	       NULL           FDR_FLG3, 
			 	       NULL           SVC_TP3, 
			 	       NULL           POL4, 
			 	       NULL           POD4, 
			 	       NULL           LANE4, 
			 	       NULL           DIR4, 
			 	       NULL           FDR_FLG4, 
			 	       NULL           SVC_TP4, 
			 	       3              PRIO,        -- MOTHER - FEEDER 
			 	       NULL           RMK,         -- OPTION 
			 	       (A.TZTM_HRS + B.TZTM_HRS)     TOT_TT,    -- TRANSIT TIME WHY SUM 
			 	       A.TZTM_HRS     TT1,  
			 	       B.TZTM_HRS     TT2,  
			 	       0              TT3,  
			 	       0              TT4,  
			            0              TOT_ST,  
			 	       0              ST1,  
			 	       0              ST2,  
			 	       0              ST3,  
			 	       'T'            TS_IND,   -- OPTION 
			 	       'N'            FDR_USD,  -- OPTION 
			 		   A.TO_PORT_ETB_DY_CD POD1ETB, -- OPTION  
			 		   NULL           POL2ETB, -- OPTION 
			 		   NULL           POD2ETB, -- OPTION  
			 		   NULL           POL3ETB,     -- OPTION 
			 		   NULL           POD3ETB,     -- OPTION 
			 		   NULL           POL4ETB,     -- OPTION 
			 		   2              LINK_COUNT      -- OPTION 
			 	FROM PRD_PF_TZ_TM A, PRD_FDR_LNK B 
			 	WHERE A.TO_PORT_CD      = B.LNK_ORG_LOC_CD 
			 	AND   A.FM_PORT_CD      = @[pol_port_cd]  
			 	AND   B.LNK_DEST_LOC_CD = @[pod_port_cd]  
			     AND   (A.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR B.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%')  
			     AND   A.VSL_SLAN_CD  <> B.VSL_SLAN_CD 
			     AND   B.PCTL_IO_BND_CD IN ('I', 'B')    -- FEEDER가 INBOUND, BOTH인 경우만 붙임 
			     AND   SUBSTR(A.FM_PORT_CD, 1, 2) <> SUBSTR(B.LNK_DEST_LOC_CD, 1, 2) -- 모선 출발 국가와 FEEDER 도착 국가가 다른 경우만 선택 
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE A.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE A.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND A.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND A.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND A.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			     AND   (A.TZTM_HRS + B.TZTM_HRS) < 50 * 24   -- TOTAL TRANSIT TIME 이 50일 보다 작은 ROUT만  
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = A.FM_PORT_CD 
			                       AND TFS.LNK_DEST_LOC_CD = B.LNK_DEST_LOC_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
                 AND A.DELT_FLG <> 'Y'
			     -- CASE E   3개의 LINK로 이루어진거, FDR - HO - HO 
			     UNION ALL 
			 	SELECT 'E' ST,                     -- ST (CASE) 
			 	       A.LNK_ORG_LOC_CD   POL1,    
			 	       A.LNK_DEST_LOC_CD  POD1,    
			 	       A.VSL_SLAN_CD      LANE1,   
			 	       A.SKD_DIR_CD       DIR1, 
			 	       'Y'                FDR_FLG1, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = A.VSL_SLAN_CD) SVC_TP1, 
			 	       B.FM_PORT_CD   POL2, 
			 	       B.TO_PORT_CD   POD2, 
			 	       B.VSL_SLAN_CD  LANE2, 
			 	       B.SKD_DIR_CD   DIR2, 
			 	       'N'            FDR_FLG2, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = B.VSL_SLAN_CD) SVC_TP2, 
			 	       C.FM_PORT_CD   POL3, 
			 	       C.TO_PORT_CD   POD3, 
			 	       C.VSL_SLAN_CD  LANE3, 
			 	       C.SKD_DIR_CD   DIR3, 
			 	       'N'            FDR_FLG3, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = C.VSL_SLAN_CD) SVC_TP3, 
			 	       NULL           POL4, 
			 	       NULL           POD4, 
			 	       NULL           LANE4, 
			 	       NULL           DIR4, 
			 	       NULL           FDR_FLG4, 
			 	       NULL           SVC_TP4, 
			 	       4              PRIO,        -- FEEDER - MOTHER - MOTHER 
			 	       NULL           RMK,         -- OPTION 
			 	       (A.TZTM_HRS + B.TZTM_HRS + C.TZTM_HRS)     TOT_TT,    -- TRANSIT TIME WHY SUM  
			 	       A.TZTM_HRS     TT1,  
			 	       B.TZTM_HRS     TT2,  
			 	       C.TZTM_HRS     TT3,  
			 	       0              TT4,  
			            DECODE(  
			                 DECODE(B.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(C.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24              TOT_ST,  
			 	       0              ST1,  
			 	       DECODE(  
			                 DECODE(B.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(C.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24              ST2,  
			 	       0              ST3,  
			 	       'T'            TS_IND,   -- OPTION 
			 	       'N'            FDR_USD,  -- OPTION 
			 		   NULL           POD1ETB, -- OPTION 
			 		   B.FM_PORT_ETB_DY_CD POL2ETB, -- OPTION 
			 		   B.TO_PORT_ETB_DY_CD POD2ETB, -- OPTION  
			 		   C.FM_PORT_ETB_DY_CD POL3ETB, -- OPTION 
			 		   C.TO_PORT_ETB_DY_CD POD3ETB, -- OPTION  
			 		   NULL           POL4ETB,     -- OPTION 
			 		   3              LINK_COUNT      -- OPTION 
			 	FROM PRD_FDR_LNK A, PRD_PF_TZ_TM B, PRD_PF_TZ_TM C 
			 	WHERE A.LNK_DEST_LOC_CD = B.FM_PORT_CD 
			 	AND   B.TO_PORT_CD      = C.FM_PORT_CD 
			 	AND   A.LNK_ORG_LOC_CD  = @[pol_port_cd] 
			 	AND   C.TO_PORT_CD      = @[pod_port_cd] 
			     AND   (A.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR B.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR C.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%')  
			     AND   A.VSL_SLAN_CD  <> B.VSL_SLAN_CD   -- 1, 2 링크의 LANE이 서로 다를 것 
			     AND   B.VSL_SLAN_CD  <> C.VSL_SLAN_CD   -- 2, 3 링크의 LANE이 서로 다를 것 
			     AND   A.PCTL_IO_BND_CD IN ('O', 'B')    -- FEEDER가 OUTBOUND, BOTH인 경우만 붙임 
			     AND   SUBSTR(A.LNK_ORG_LOC_CD, 1, 2) <> SUBSTR(B.TO_PORT_CD, 1, 2) -- FEEDER 출발 국가와 모선 도착 국가가 다른 경우만 선택 
			     AND   SUBSTR(A.LNK_ORG_LOC_CD, 1, 2) <> SUBSTR(C.TO_PORT_CD, 1, 2) -- FEEDER 출발 국가와 모선 도착 국가가 다른 경우만 선택 
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE B.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE C.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE B.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND B.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND B.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND B.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE C.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND C.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND C.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND C.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			     AND   (A.TZTM_HRS + B.TZTM_HRS + C.TZTM_HRS) < 50 * 24   -- TOTAL TRANSIT TIME 이 50일 보다 작은 ROUT만  
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = A.LNK_ORG_LOC_CD 
			                       AND TFS.LNK_DEST_LOC_CD = C.TO_PORT_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = A.LNK_ORG_LOC_CD 
			                       AND TFS.LNK_DEST_LOC_CD = B.TO_PORT_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
                 AND B.DELT_FLG <> 'Y'
                 AND C.DELT_FLG <> 'Y'
			     -- CASE F   3개의 LINK로 이루어진거, HO - HO - FDR 
			     UNION ALL        
			 	SELECT 'F' ST,                     -- ST (CASE) 
			 	       A.FM_PORT_CD       POL1, 
			 	       A.TO_PORT_CD       POD1, 
			 	       A.VSL_SLAN_CD      LANE1, 
			 	       A.SKD_DIR_CD       DIR1, 
			 	       'N'                FDR_FLG1, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = A.VSL_SLAN_CD) SVC_TP1, 
			 	       B.FM_PORT_CD       POL2, 
			 	       B.TO_PORT_CD       POD2, 
			 	       B.VSL_SLAN_CD      LANE2, 
			 	       B.SKD_DIR_CD       DIR2, 
			 	       'N'                FDR_FLG2, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = B.VSL_SLAN_CD) SVC_TP2, 
			 	       C.LNK_ORG_LOC_CD   POL3, 
			 	       C.LNK_DEST_LOC_CD   POD3, 
			 	       C.VSL_SLAN_CD  LANE3, 
			 	       C.SKD_DIR_CD   DIR3, 
			 	       'Y'            FDR_FLG3, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = C.VSL_SLAN_CD) SVC_TP3, 
			 	       NULL           POL4, 
			 	       NULL           POD4, 
			 	       NULL           LANE4, 
			 	       NULL           DIR4, 
			 	       NULL           FDR_FLG4, 
			 	       NULL           SVC_TP4, 
			 	       4              PRIO,        -- MOTHER - MOTHER - FEEDER 
			 	       NULL           RMK,         -- OPTION 
			 	       (A.TZTM_HRS + B.TZTM_HRS + C.TZTM_HRS)     TOT_TT,    -- TRANSIT TIME WHY SUM  
			 	       A.TZTM_HRS     TT1,  
			 	       B.TZTM_HRS     TT2,  
			 	       C.TZTM_HRS     TT3,  
			 	       0              TT4,  
			            DECODE(  
			                 DECODE(A.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(B.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24              TOT_ST,  
			 	       DECODE(  
			                 DECODE(A.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(B.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24              ST1,  
			 	       0              ST2,  
			 	       0              ST3,  
			 	       'T'            TS_IND,   -- OPTION 
			 	       'N'            FDR_USD,  -- OPTION 
			 		   A.TO_PORT_ETB_DY_CD POD1ETB, -- OPTION  
			 		   B.FM_PORT_ETB_DY_CD POL2ETB, -- OPTION 
			 		   B.TO_PORT_ETB_DY_CD POD2ETB, -- OPTION  
			 		   NULL           POL3ETB,     -- OPTION 
			 		   NULL           POD3ETB,     -- OPTION 
			 		   NULL           POL4ETB,     -- OPTION 
			 		   3              LINK_COUNT      -- OPTION 
			 	FROM PRD_PF_TZ_TM A, PRD_PF_TZ_TM B, PRD_FDR_LNK C 
			 	WHERE A.TO_PORT_CD      = B.FM_PORT_CD 
			 	AND   B.TO_PORT_CD      = C.LNK_ORG_LOC_CD 
			 	AND   A.FM_PORT_CD      = @[pol_port_cd]  
			 	AND   C.LNK_DEST_LOC_CD = @[pod_port_cd] 
			     AND   (A.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR B.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR C.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%')  
			     AND   A.VSL_SLAN_CD  <> B.VSL_SLAN_CD   -- 1, 2 링크의 LANE이 서로 다를 것 
			     AND   B.VSL_SLAN_CD  <> C.VSL_SLAN_CD   -- 2, 3 링크의 LANE이 서로 다를 것 
			     AND   C.PCTL_IO_BND_CD IN ('I', 'B')    -- FEEDER가 INBOUND, BOTH인 경우만 붙임 
			     AND   SUBSTR(A.FM_PORT_CD, 1, 2) <> SUBSTR(C.LNK_DEST_LOC_CD, 1, 2) -- 모선 출발 국가와 FEEDER 도착 국가가 다른 경우만 선택 
			     AND   SUBSTR(B.FM_PORT_CD, 1, 2) <> SUBSTR(C.LNK_DEST_LOC_CD, 1, 2) -- 모선 출발 국가와 FEEDER 도착 국가가 다른 경우만 선택 
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE A.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE B.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE A.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND A.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND A.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND A.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE B.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND B.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND B.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND B.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			     AND   (A.TZTM_HRS + B.TZTM_HRS + C.TZTM_HRS) < 50 * 24   -- TOTAL TRANSIT TIME 이 50일 보다 작은 ROUT만  
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = A.FM_PORT_CD 
			                       AND TFS.LNK_DEST_LOC_CD = C.LNK_DEST_LOC_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = B.FM_PORT_CD 
			                       AND TFS.LNK_DEST_LOC_CD = C.LNK_DEST_LOC_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
                 AND A.DELT_FLG <> 'Y'
				 AND B.DELT_FLG <> 'Y'
               -- CASE I   3개의 LINK로 이루어진거, HQ - HQ - HQ 
			 	UNION ALL
			 	SELECT 'I' ST,                     -- ST (CASE) 
			 	       A.FM_PORT_CD       POL1, 
			 	       A.TO_PORT_CD       POD1, 
			 	       A.VSL_SLAN_CD      LANE1, 
			 	       A.SKD_DIR_CD       DIR1, 
			 	       'N'                FDR_FLG1, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = A.VSL_SLAN_CD) SVC_TP1, 
			 	       B.FM_PORT_CD       POL2, 
			 	       B.TO_PORT_CD       POD2, 
			 	       B.VSL_SLAN_CD      LANE2, 
			 	       B.SKD_DIR_CD       DIR2, 
			 	       'N'                FDR_FLG2, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = B.VSL_SLAN_CD) SVC_TP2, 
			 	       C.FM_PORT_CD   POL3, 
			 	       C.TO_PORT_CD   POD3, 
			 	       C.VSL_SLAN_CD  LANE3, 
			 	       C.SKD_DIR_CD   DIR3, 
			 	       'N'            FDR_FLG3, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = C.VSL_SLAN_CD) SVC_TP3, 
			 	       NULL           POL4, 
			 	       NULL           POD4, 
			 	       NULL           LANE4, 
			 	       NULL           DIR4, 
			 	       NULL           FDR_FLG4, 
			 	       NULL           SVC_TP4, 
			 	       4              PRIO,        -- MOTHER - MOTHER - MOTHER
			 	       NULL           RMK,         -- OPTION 
			 	       (A.TZTM_HRS + B.TZTM_HRS + C.TZTM_HRS)     TOT_TT,    -- TRANSIT TIME WHY SUM  
			 	       A.TZTM_HRS     TT1,  
			 	       B.TZTM_HRS     TT2,  
			 	       C.TZTM_HRS     TT3,  
			 	       0              TT4,  
			            DECODE(  
			                 DECODE(A.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(B.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24  +
			 	       DECODE(  
			                 DECODE(B.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(C.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24             TOT_ST,  
			 	       DECODE(  
			                 DECODE(A.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(B.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24              ST1,  
			 	       DECODE(  
			                 DECODE(B.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(C.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24              ST2,  
			 	       0              ST3,  
			 	       'T'            TS_IND,   -- OPTION 
			 	       'N'            FDR_USD,  -- OPTION 
			 		   A.TO_PORT_ETB_DY_CD POD1ETB, -- OPTION  
			 		   B.FM_PORT_ETB_DY_CD POL2ETB, -- OPTION 
			 		   B.TO_PORT_ETB_DY_CD POD2ETB, -- OPTION  
			 		   C.FM_PORT_ETB_DY_CD POL3ETB, -- OPTION 
			 		   C.TO_PORT_ETB_DY_CD POD3ETB, -- OPTION 
			 		   NULL           POL4ETB,      -- OPTION 
			 		   3              LINK_COUNT    -- OPTION 
			 	FROM PRD_PF_TZ_TM A, PRD_PF_TZ_TM B, PRD_PF_TZ_TM C 
			 	WHERE A.TO_PORT_CD = B.FM_PORT_CD 
			 	AND   B.TO_PORT_CD = C.FM_PORT_CD 
			 	AND   A.FM_PORT_CD = @[pol_port_cd]  
			 	AND   C.TO_PORT_CD = @[pod_port_cd] 
			 	AND   (A.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR B.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR C.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%')  
			 	AND   A.VSL_SLAN_CD  <> B.VSL_SLAN_CD   -- 1, 2 링크의 LANE이 서로 다를 것 
			 	AND   B.VSL_SLAN_CD  <> C.VSL_SLAN_CD   -- 2, 3 링크의 LANE이 서로 다를 것 
			 	AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE A.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			 	AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE B.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			 	AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE C.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			 	AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE A.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND A.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND A.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND A.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD 	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			 	AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE B.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND B.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND B.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND B.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			 	AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE C.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND C.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND C.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND C.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			 	AND   (A.TZTM_HRS + B.TZTM_HRS + C.TZTM_HRS) < 50 * 24   -- TOTAL TRANSIT TIME 이 50일 보다 작은 ROUT만  
			 	AND A.DELT_FLG <> 'Y'
			 	AND B.DELT_FLG <> 'Y'
			 	AND C.DELT_FLG <> 'Y'
			     -- CASE G   3개의 LINK로 이루어진거, FDR - HO - FDR 
			     UNION ALL 
			 	SELECT 'G' ST,                     -- ST (CASE) 
			 	       A.LNK_ORG_LOC_CD   POL1,    
			 	       A.LNK_DEST_LOC_CD  POD1,    
			 	       A.VSL_SLAN_CD      LANE1,   
			 	       A.SKD_DIR_CD       DIR1, 
			 	       'Y'                FDR_FLG1, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = A.VSL_SLAN_CD) SVC_TP1, 
			 	       B.FM_PORT_CD   POL2, 
			 	       B.TO_PORT_CD   POD2, 
			 	       B.VSL_SLAN_CD  LANE2, 
			 	       B.SKD_DIR_CD   DIR2, 
			 	       'N'            FDR_FLG2, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = B.VSL_SLAN_CD) SVC_TP2, 
			 	       C.LNK_ORG_LOC_CD   POL3,    
			 	       C.LNK_DEST_LOC_CD  POD3,    
			 	       C.VSL_SLAN_CD      LANE3,   
			 	       C.SKD_DIR_CD       DIR3, 
			 	       'Y'                FDR_FLG3, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = C.VSL_SLAN_CD) SVC_TP3, 
			 	       NULL           POL4, 
			 	       NULL           POD4, 
			 	       NULL           LANE4, 
			 	       NULL           DIR4, 
			 	       NULL           FDR_FLG4, 
			 	       NULL           SVC_TP4, 
			 	       5              PRIO,        -- FEEDER - MOTHER - FEEDER 
			 	       NULL           RMK,         -- OPTION 
			 	       (A.TZTM_HRS + B.TZTM_HRS + C.TZTM_HRS)     TOT_TT,    -- TRANSIT TIME WHY SUM  
			 	       A.TZTM_HRS     TT1,  
			 	       B.TZTM_HRS     TT2,  
			 	       C.TZTM_HRS     TT3,  
			 	       0              TT4,  
			            0              TOT_ST,  
			 	       0              ST1,  
			 	       0              ST2,  
			 	       0              ST3,  
			 	       'T'            TS_IND,   -- OPTION 
			 	       'N'            FDR_USD,  -- OPTION 
			 		   NULL           POD1ETB, -- OPTION 
			 		   B.FM_PORT_ETB_DY_CD POL2ETB, -- OPTION 
			 		   B.TO_PORT_ETB_DY_CD POD2ETB, -- OPTION  
			 		   NULL           POL3ETB, -- OPTION 
			 		   NULL           POD3ETB, -- OPTION  
			 		   NULL           POL4ETB,     -- OPTION 
			 		   3              LINK_COUNT      -- OPTION 
			 	FROM PRD_FDR_LNK A, PRD_PF_TZ_TM B, PRD_FDR_LNK C 
			 	WHERE A.LNK_DEST_LOC_CD = B.FM_PORT_CD 
			 	AND   B.TO_PORT_CD      = C.LNK_ORG_LOC_CD 
			 	AND   A.LNK_ORG_LOC_CD  = @[pol_port_cd]  
			 	AND   C.LNK_DEST_LOC_CD = @[pod_port_cd]  
			     AND   (A.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR B.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR C.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%') 
			     AND   A.VSL_SLAN_CD  <> B.VSL_SLAN_CD   -- 1, 2 링크의 LANE이 서로 다를 것 
			     AND   B.VSL_SLAN_CD  <> C.VSL_SLAN_CD   -- 2, 3 링크의 LANE이 서로 다를 것 
			     AND   A.PCTL_IO_BND_CD IN ('O', 'B')    -- FEEDER가 OUTBOUND, BOTH인 경우만 붙임 
			     AND   C.PCTL_IO_BND_CD IN ('I', 'B')    -- FEEDER가 INBOUND, BOTH인 경우만 붙임 
			     AND   SUBSTR(A.LNK_ORG_LOC_CD, 1, 2) <> SUBSTR(B.TO_PORT_CD, 1, 2) -- FEEDER 출발 국가와 모선 도착 국가가 다른 경우만 선택 
			     AND   SUBSTR(B.FM_PORT_CD, 1, 2)     <> SUBSTR(C.LNK_DEST_LOC_CD, 1, 2) -- 모선 출발 국가와 FEEDER 도착 국가가 다른 경우만 선택 
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE B.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE B.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND B.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND B.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND B.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			     AND   (A.TZTM_HRS + B.TZTM_HRS + C.TZTM_HRS) < 50 * 24   -- TOTAL TRANSIT TIME 이 50일 보다 작은 ROUT만  
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = A.LNK_ORG_LOC_CD 
			                       AND TFS.LNK_DEST_LOC_CD = C.LNK_DEST_LOC_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = A.LNK_ORG_LOC_CD 
			                       AND TFS.LNK_DEST_LOC_CD = B.TO_PORT_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = B.FM_PORT_CD 
			                       AND TFS.LNK_DEST_LOC_CD = C.LNK_DEST_LOC_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
                 AND B.DELT_FLG <> 'Y'
			     -- CASE H   4개의 LINK로 이루어진거, FDR - HO - HO - FDR 
			     UNION ALL 
			 	SELECT 'H' ST,                     -- ST (CASE) 
			 	       A.LNK_ORG_LOC_CD   POL1,    
			 	       A.LNK_DEST_LOC_CD  POD1,    
			 	       A.VSL_SLAN_CD      LANE1,   
			 	       A.SKD_DIR_CD       DIR1, 
			 	       'Y'                FDR_FLG1, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = A.VSL_SLAN_CD) SVC_TP1, 
			 	       B.FM_PORT_CD   POL2, 
			 	       B.TO_PORT_CD   POD2, 
			 	       B.VSL_SLAN_CD  LANE2, 
			 	       B.SKD_DIR_CD   DIR2, 
			 	       'N'            FDR_FLG2, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = B.VSL_SLAN_CD) SVC_TP2, 
			 	       C.FM_PORT_CD   POL3, 
			 	       C.TO_PORT_CD   POD3, 
			 	       C.VSL_SLAN_CD  LANE3, 
			 	       C.SKD_DIR_CD   DIR3, 
			 	       'N'            FDR_FLG3, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = C.VSL_SLAN_CD) SVC_TP3, 
			 	       D.LNK_ORG_LOC_CD   POL4,    
			 	       D.LNK_DEST_LOC_CD  POD4,    
			 	       D.VSL_SLAN_CD      LANE4,   
			 	       D.SKD_DIR_CD       DIR4, 
			 	       'Y'                FDR_FLG4, 
			 	       (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = D.VSL_SLAN_CD) SVC_TP4, 
			 	       6              PRIO,        -- FEEDER - MOTHER - MOTHER - FEEDER 
			 	       NULL           RMK,         -- OPTION 
			 	       (A.TZTM_HRS + B.TZTM_HRS + C.TZTM_HRS + D.TZTM_HRS)     TOT_TT,    -- TRANSIT TIME WHY SUM  
			 	       A.TZTM_HRS     TT1,  
			 	       B.TZTM_HRS     TT2,  
			 	       C.TZTM_HRS     TT3,  
			 	       D.TZTM_HRS     TT4,  
			            DECODE(  
			                 DECODE(B.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(C.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24              TOT_ST,  
			 	       0              ST1,  
			 	       DECODE(  
			                 DECODE(B.TO_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 - DECODE(C.FM_PORT_ETB_DY_CD, 'SUN', 7, 'MON', 6, 'TUE', 5, 'WED', 4, 'THU', 3, 'FRI', 2, 'SAT', 1) 
			                 ,  -1, 7, -2, 6, -3, 5, -4, 4, -5, 3, -6, 2, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7 ) * 24              ST2,  
			 	       0              ST3,  
			 	       'T'            TS_IND,   -- OPTION 
			 	       'N'            FDR_USD,  -- OPTION 
			 		   NULL           POD1ETB, -- OPTION 
			 		   B.FM_PORT_ETB_DY_CD POL2ETB, -- OPTION 
			 		   B.TO_PORT_ETB_DY_CD POD2ETB, -- OPTION  
			 		   C.FM_PORT_ETB_DY_CD POL3ETB, -- OPTION 
			 		   C.TO_PORT_ETB_DY_CD POD3ETB, -- OPTION  
			 		   NULL           POL4ETB,     -- OPTION 
			 		   4              LINK_COUNT      -- OPTION 
			 	FROM PRD_FDR_LNK A, PRD_PF_TZ_TM B, PRD_PF_TZ_TM C, PRD_FDR_LNK D 
			 	WHERE A.LNK_DEST_LOC_CD = B.FM_PORT_CD 
			 	AND   B.TO_PORT_CD      = C.FM_PORT_CD 
			 	AND   C.TO_PORT_CD      = D.LNK_ORG_LOC_CD 
			 	AND   A.LNK_ORG_LOC_CD  = @[pol_port_cd]  
			 	AND   D.LNK_DEST_LOC_CD = @[pod_port_cd] 
			     AND   (A.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR B.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR C.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%' OR D.VSL_SLAN_CD  LIKE RTRIM(@[tnk_lane_cd])||'%')  
			     AND   A.VSL_SLAN_CD  <> B.VSL_SLAN_CD   -- 1, 2 링크의 LANE이 서로 다를 것 
			     AND   B.VSL_SLAN_CD  <> C.VSL_SLAN_CD   -- 2, 3 링크의 LANE이 서로 다를 것 
			     AND   C.VSL_SLAN_CD  <> D.VSL_SLAN_CD   -- 3, 4 링크의 LANE이 서로 다를 것 
			     AND   A.PCTL_IO_BND_CD IN ('O', 'B')    -- FEEDER가 OUTBOUND, BOTH인 경우만 붙임 
			     AND   D.PCTL_IO_BND_CD IN ('I', 'B')    -- FEEDER가 INBOUND, BOTH인 경우만 붙임 
			     AND   SUBSTR(A.LNK_ORG_LOC_CD, 1, 2) <> SUBSTR(B.TO_PORT_CD, 1, 2) -- FEEDER 출발 국가와 모선 도착 국가가 다른 경우만 선택 
			     AND   SUBSTR(A.LNK_ORG_LOC_CD, 1, 2) <> SUBSTR(C.TO_PORT_CD, 1, 2) -- FEEDER 출발 국가와 모선 도착 국가가 다른 경우만 선택 
			     AND   SUBSTR(B.FM_PORT_CD, 1, 2)     <> SUBSTR(D.LNK_DEST_LOC_CD, 1, 2) -- 모선 출발 국가와 FEEDER 도착 국가가 다른 경우만 선택 
			     AND   SUBSTR(C.FM_PORT_CD, 1, 2)     <> SUBSTR(D.LNK_DEST_LOC_CD, 1, 2) -- 모선 출발 국가와 FEEDER 도착 국가가 다른 경우만 선택 
                 AND   B.DELT_FLG <> 'Y'
                 AND   C.DELT_FLG <> 'Y'
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE B.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			     AND   EXISTS ( SELECT 'X' 
			                      FROM PRD_SVC_LANE PSL 
			                     WHERE C.VSL_SLAN_CD = PSL.VSL_SLAN_CD 
			                       AND PSL.UPD_IND_CD <> 'D' 
			                       AND ROWNUM = 1) -- PRD_SVC_LANE에 유효한 LANE이 존재해야 됨 
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE B.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND B.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND B.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND B.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			     AND   NOT EXISTS ( SELECT 'X'  
			                      FROM PRD_OCN_ROUT TG 
			                     WHERE C.FM_PORT_CD   = TG.N1ST_POL_CD 
			                       AND C.TO_PORT_CD   = TG.N1ST_POD_CD 
			                       AND C.VSL_SLAN_CD  = TG.N1ST_LANE_CD
								   AND C.SKD_DIR_CD   = TG.N1ST_SKD_DIR_CD 	
			                       AND TG.TS_IND_CD   = 'D' 
			                       AND TG.N1ST_LANE_FDR_FLG = 'N' 
			                       AND TG.UPD_IND_CD  = 'D') -- PRD_OCN_ROUT에 삭제된 DIRECT ROUT 제외 
			     AND   (A.TZTM_HRS + B.TZTM_HRS + C.TZTM_HRS + D.TZTM_HRS) < 50 * 24   -- TOTAL TRANSIT TIME 이 50일 보다 작은 ROUT만  
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = A.LNK_ORG_LOC_CD 
			                       AND TFS.LNK_DEST_LOC_CD = D.LNK_DEST_LOC_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = A.LNK_ORG_LOC_CD 
			                       AND TFS.LNK_DEST_LOC_CD = B.TO_PORT_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = A.LNK_ORG_LOC_CD 
			                       AND TFS.LNK_DEST_LOC_CD = C.TO_PORT_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = B.FM_PORT_CD 
			                       AND TFS.LNK_DEST_LOC_CD = D.LNK_DEST_LOC_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 
			     AND NOT EXISTS ( SELECT 'X' 
			                      FROM PRD_FDR_LNK TFS 
			                     WHERE TFS.LNK_ORG_LOC_CD  = C.FM_PORT_CD 
			                       AND TFS.LNK_DEST_LOC_CD = D.LNK_DEST_LOC_CD )     -- 조합한 ROUTE의 출발/도착지가 이미 FEEDER LINK에 있을 경우 제외 

			 ),  
 		 

				  PRD_OCN_ROUT TG                                                                                              
			 WHERE 
                           
		    TG.UPD_IND_CD(+) NOT IN ('D', 'N', 'O')   	

			 AND   POL1            = TG.N1ST_POL_CD(+)                                                                             
			 AND   LANE1           = TG.N1ST_LANE_CD(+)
			 AND   DIR1 		   = TG.N1ST_SKD_DIR_CD(+)	
			 AND   POD1            = TG.N1ST_POD_CD(+)                                                                             
			 AND   NVL(LANE2, 'N') = NVL(TG.N2ND_LANE_CD(+),'N')                                                                   
			 AND   NVL(POD2,  'N') = NVL(TG.N2ND_POD_CD(+), 'N')
			 AND   NVL(DIR2, 'X')  = NVL(TG.N2ND_SKD_DIR_CD(+), 'X')	
			 AND   NVL(LANE3, 'N') = NVL(TG.N3RD_LANE_CD(+),'N')
			 AND   NVL(DIR3, 'X')  = NVL(TG.N3RD_SKD_DIR_CD(+), 'X')				 
			 AND   NVL(POD3,  'N') = NVL(TG.N3RD_POD_CD(+), 'N')                                                                   
			 AND   NVL(LANE4, 'N') = NVL(TG.N4TH_LANE_CD(+),'N') 
			 AND   NVL(DIR4, 'X')  = NVL(TG.N4TH_SKD_DIR_CD(+), 'X')				 
			 AND   NVL(POD4,  'N') = NVL(TG.N4TH_POD_CD(+), 'N')   																
			 GROUP BY ST, POL1, POD1, LANE1, DIR1, FDR_FLG1, SVC_TP1, POL2, POD2, LANE2, DIR2, FDR_FLG2, SVC_TP2,                
			          POL3, POD3, LANE3, DIR3, FDR_FLG3, SVC_TP3, POL4, POD4, LANE4, DIR4, FDR_FLG4, SVC_TP4,                    
			          PRIO, RMK,  TOT_TT,  TT1,  TT2,  TT3, TT4, TOT_ST, ST1, ST2, ST3, TS_IND, FDR_USD,                         
			          POD1ETB, POL2ETB, POD2ETB, POL3ETB, POD3ETB, POL4ETB, LINK_COUNT,
			          DECODE(TG.ORG_LOC_CD, NULL, 'N', 'Y') , tg.upd_ind_cd,  tg.ocn_rout_usr_rmk                                                                   
			 ORDER BY ST, TOT_TT			]]></sql>
			<params>
				<param name="pol_port_cd" type="12" value="" out="N"/>
				<param name="pod_port_cd" type="12" value="" out="N"/>
				<param name="tnk_lane_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
