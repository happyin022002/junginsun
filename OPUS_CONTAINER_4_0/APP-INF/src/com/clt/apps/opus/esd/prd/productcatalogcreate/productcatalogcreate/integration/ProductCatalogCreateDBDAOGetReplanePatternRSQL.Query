<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ProductCatalogCreateDBDAOGetReplanePatternRSQL">
			<desc><![CDATA[GetReplanePattern]]></desc>
			<sql><![CDATA[
WITH FH_QTY AS ( 
SELECT -- COMU0000000 중 tpsz가 다르지만 호환 가능한 것끼리 연결된다. (priority 4)
       BKG_NO
     , DECODE(SUBSTR(N4TH_MAP, 1,2)
              , 'WK' , NVL(MAX(BKG_CNTR_TPSZ_CD), MAX(SCE_CNTR_TPSZ_CD)) -- BKG TPSZ을 우선 따라가도록 처리
              , NVL(MAX(SCE_CNTR_TPSZ_CD), MAX(BKG_CNTR_TPSZ_CD))) CNTR_TPSZ_CD
     , NVL(MAX(DECODE(CNTR_NO, 'COMU0000000', NULL, CNTR_NO)), 'COMU0000000') CNTR_NO
     , MAX(COP_NO) COP_NO
     , MAX(OB_TRO_FLG) OB_TRO_FLG
     , MAX(IB_TRO_FLG) IB_TRO_FLG
     , DECODE(MAX(COP_DTL_SEQ), NULL, 'N', 'Y') OB_FSH_FLG
     , DECODE(MAX(COP_DTL_SEQ), NULL, 'N', DECODE(MAX(COP_STS_CD), 'F', 'Y', 'N')) IB_FSH_FLG
      , CASE WHEN MAX(DECODE(CNTR_NO, 'COMU0000000', NULL, CNTR_NO)) IS NOT NULL THEN NULL -- 반드시 생존해야할 데이터, bkg qty보다 많은것은 상관없음
             WHEN MAX(SO_KNT) > 0 THEN NULL -- 반드시 생존해야할 데이터
             WHEN GREATEST(NVL(MAX(OB_TRO_FLG), 'N'), NVL(MAX(IB_TRO_FLG), 'N')) = 'Y' THEN NULL -- 반드시 생존해야 할 데이터
             WHEN MAX(SCE_CNTR_TPSZ_CD) IS NULL THEN 'C'
             WHEN MAX(BKG_CNTR_TPSZ_CD) IS NULL AND NVL(MAX(SO_KNT),0) = 0 THEN 'X'
             ELSE NULL
        END CALC_COP_OP_TP_CD
     , NVL(MAX(SO_KNT),0) SO_KNT
FROM (
SELECT -- COMU0000000 중 tpsz가 같은 것끼리 연결된다. (priority 3)
       BKG_NO
     , MAX(BKG_CNTR_TPSZ_CD) BKG_CNTR_TPSZ_CD
     , MAX(SCE_CNTR_TPSZ_CD) SCE_CNTR_TPSZ_CD -- 나중에 우선이 되어야 함
     , NVL(MAX(DECODE(CNTR_NO, 'COMU0000000', NULL, CNTR_NO)), 'COMU0000000') CNTR_NO
     , MAX(COP_NO) COP_NO
     , MAX(OB_TRO_FLG) OB_TRO_FLG
     , MAX(IB_TRO_FLG) IB_TRO_FLG
     , MAX(COP_DTL_SEQ) COP_DTL_SEQ
     , MAX(COP_STS_CD) COP_STS_CD
     , MAX(SO_KNT) SO_KNT
     , MAX(GRP_CNTR_TPSZ_CD) GRP_CNTR_TPSZ_CD
     , CASE WHEN MAX(SCE_CNTR_TPSZ_CD) IS NOT NULL AND MAX(BKG_CNTR_TPSZ_CD) IS NOT NULL THEN 'MTCH'|| LPAD(ROW_NUMBER() OVER (ORDER BY 1), 11, '0') --- match(PRIORITY 1,2,3)
            WHEN MAX(SCE_CNTR_TPSZ_CD) IS NULL AND MAX(BKG_PROV_CNTR_TPSZ_CD) IS NULL THEN 'SKIP' || LPAD(ROW_NUMBER() OVER (ORDER BY 1), 11, '0') -- 호환 CONTAINER TPSZ 없음
            ELSE 'WK' || NVL( MAX(SCE_CNTR_TPSZ_CD) , MAX(BKG_PROV_CNTR_TPSZ_CD)) || 'X' -- SCE에 CONTAINER 번호가 있는 CONTAINER TPSZ와 BKG에 있는 호환 CONTAINER TPSZ간 MAPPING
                  || LPAD(ROW_NUMBER() OVER (PARTITION BY NVL(MAX(SCE_CNTR_TPSZ_CD), 'XX') ||NVL(MAX(BKG_CNTR_TPSZ_CD), 'XX')
                                             ORDER BY GREATEST(NVL(MAX(OB_TRO_FLG), 'N'), NVL(MAX(IB_TRO_FLG), 'N')) desc, MAX(COP_NO)), 11, '0') -- TRO가 있는 것을 우선으로 mapping
            END N4TH_MAP
FROM (
SELECT -- sce Container 번호가 있는 것 mapping 되거나 남음 ( priority 2)
       BKG_NO
     , MAX(BKG_CNTR_TPSZ_CD) BKG_CNTR_TPSZ_CD
     , MAX(SCE_CNTR_TPSZ_CD) SCE_CNTR_TPSZ_CD -- 나중에 우선이 되어야 함
     , MAX(BKG_PROV_CNTR_TPSZ_CD) BKG_PROV_CNTR_TPSZ_CD
     , MAX(SCE_PROV_CNTR_TPSZ_CD) SCE_PROV_CNTR_TPSZ_CD
     , NVL(MAX(DECODE(CNTR_NO, 'COMU0000000', NULL, CNTR_NO)), 'COMU0000000') CNTR_NO
     , MAX(COP_NO) COP_NO
     , MAX(OB_TRO_FLG) OB_TRO_FLG
     , MAX(IB_TRO_FLG) IB_TRO_FLG
     , MAX(COP_DTL_SEQ) COP_DTL_SEQ
     , MAX(COP_STS_CD) COP_STS_CD
     , MAX(SO_KNT) SO_KNT
     , CASE WHEN MAX(SCE_CNTR_TPSZ_CD) IS NOT NULL AND MAX(BKG_CNTR_TPSZ_CD) IS NOT NULL THEN 'MTCH' else NVL(MAX(BKG_CNTR_TPSZ_CD), MAX(SCE_CNTR_TPSZ_CD)) || 'XX' END
       || LPAD(ROW_NUMBER() OVER (PARTITION BY CASE WHEN MAX(SCE_CNTR_TPSZ_CD) IS NOT NULL AND MAX(BKG_CNTR_TPSZ_CD) IS NOT NULL THEN 'MTCH'
                                            ELSE NVL(MAX(BKG_CNTR_TPSZ_CD) , 'XX') || nvl(MAX(SCE_CNTR_TPSZ_CD), 'XX') END
                          order by GREATEST(NVL(MAX(OB_TRO_FLG), 'N'), NVL(MAX(IB_TRO_FLG), 'N')) desc, MAX(COP_NO)) -- TRO가 있는 것을 우선으로 mapping
              , 11, '0') N3RD_MAP
     , MAX(GRP_CNTR_TPSZ_CD) GRP_CNTR_TPSZ_CD
FROM ( SELECT -- container 번호가 있으면서, bkg qty에 tpsz가 있는 것이 매핑 (full mapping priority 1)
        NVL(SCEQ.BKG_NO, QTYQ.BKG_NO) BKG_NO
      , NVL(SCEQ.CNTR_NO, QTYQ.CNTR_NO) CNTR_NO
      , SCEQ.COP_NO
      , SCEQ.OB_TRO_FLG
      , SCEQ.IB_TRO_FLG
      , SCEQ.COP_DTL_SEQ
      , SCEQ.COP_STS_CD
      , SCEQ.CNTR_TPSZ_CD  SCE_CNTR_TPSZ_CD
      , QTYQ.CNTR_TPSZ_CD  BKG_CNTR_TPSZ_CD
      , SCEQ.PROV_CNTR_TPSZ_CD SCE_PROV_CNTR_TPSZ_CD
      , QTYQ.PROV_CNTR_TPSZ_CD BKG_PROV_CNTR_TPSZ_CD
      , NVL( SCEQ.GRP_CNTR_TPSZ_CD, QTYQ.GRP_CNTR_TPSZ_CD ) GRP_CNTR_TPSZ_CD
      , CASE WHEN SCEQ.CNTR_TPSZ_CD IS NOT NULL AND QTYQ.CNTR_TPSZ_CD IS NOT NULL THEN 'MTCH' || LPAD(ROW_NUMBER() OVER (ORDER BY 1), 11, '0') --- match(PRIORITY 1)
             WHEN QTYQ.CNTR_NO IS NULL AND REPLACE(SCEQ.CNTR_NO, 'COMU0000000') IS NULL THEN 'RMVE' || LPAD(ROW_NUMBER() OVER (ORDER BY 1), 11, '0') -- sce에 container번호가 없음
             WHEN SCEQ.CNTR_TPSZ_CD IS NULL AND QTYQ.PROV_CNTR_TPSZ_CD IS NULL THEN 'SKIP' || LPAD(ROW_NUMBER() OVER (ORDER BY 1), 11, '0') -- 호환 CONTAINER TPSZ 없음
             ELSE NVL( SCEQ.CNTR_TPSZ_CD, QTYQ.PROV_CNTR_TPSZ_CD ) || 'X' -- SCE에 CONTAINER 번호가 있는 CONTAINER TPSZ와 BKG에 있는 호환 CONTAINER TPSZ간 MAPPING
                  || LPAD(ROW_NUMBER() OVER (PARTITION BY NVL(SCEQ.CNTR_TPSZ_CD, 'XX') ||NVL(QTYQ.CNTR_TPSZ_CD, 'XX') ORDER BY SCEQ.COP_NO), 11, '0')
         END N2ND_MAP
      , SCEQ.SO_KNT
   FROM ( -- SCE 측
           SELECT CHDR.BKG_NO
                , NVL(@[flex_hgt_flg], BKGM.FLEX_HGT_FLG) AS FLEX_HGT_FLG
                , NVL(BCNT.CNTR_TPSZ_CD, CHDR.CNTR_TPSZ_CD) CNTR_TPSZ_CD -- CONTAINER 우선
                , NVL(CHDR.CNTR_NO, 'COMU0000000') CNTR_NO -- 다른 로직을 보면 CNTR_NO가 NULL이 되는 경우가 있는 듯 보여 해당과 같이처리함 (20101012 Park Mangeon)
                , DECODE(NVL(@[flex_hgt_flg], BKGM.FLEX_HGT_FLG), 'Y', GREATEST(CHDR.CNTR_TPSZ_CD,  NVL(RPRL.PROV_CNTR_TPSZ_CD, ' ')),CHDR.CNTR_TPSZ_CD)  GRP_CNTR_TPSZ_CD
                , RPRL.PROV_CNTR_TPSZ_CD
                , CHDR.COP_NO
                , CHDR.OB_TRO_FLG
                , CHDR.IB_TRO_FLG
                , CHDR.COP_STS_CD
                , (SELECT /*+ INDEX_DESC (CDTL XPKSCE_COP_DTL) */ COP_DTL_SEQ
                     FROM SCE_COP_DTL CDTL
                    WHERE CDTL.COP_NO = CHDR.COP_NO
                      AND CDTL.COP_DTL_SEQ >= 4000  -- 적어도 배는 타줘야~
                      AND CDTL.ACT_DT < SYSDATE   --  이미 실행되었음
                      AND ROWNUM = 1) COP_DTL_SEQ
                , SO.SO_KNT
                , NVL(BCNT.CNTR_VOL_QTY, 1) CNTR_VOL_QTY
                , CASE WHEN REPLACE( CHDR.CNTR_NO, 'COMU0000000', '') IS NULL THEN 100000000 ELSE 0 END
                 + ROW_NUMBER()
                       OVER (PARTITION BY CHDR.CNTR_TPSZ_CD
                              ORDER BY CASE WHEN REPLACE( CHDR.CNTR_NO, 'COMU0000000', '') IS NOT NULL AND SO.SO_KNT > 0 THEN 1
                                            WHEN REPLACE( CHDR.CNTR_NO, 'COMU0000000', '') IS NOT NULL THEN 2
                                            WHEN SO.SO_KNT > 0 THEN 3
                                            ELSE 4 END
                                     , CHDR.COP_NO
                       ) SCE_CNTR_ODR
             FROM BKG_BOOKING BKGM
                , SCE_COP_HDR CHDR
                , SCE_COP_CNTR_REPO_RULE RPRL
                , (
                    SELECT COP_NO,COUNT(1) SO_KNT
                    FROM (
                        SELECT COP_NO,COST_ACT_GRP_SEQ
                        FROM TRS_TRSP_SVC_ORD
                        WHERE BKG_NO = @[bkg_no]
                        AND TRSP_SO_TP_CD <> 'S'
                        AND NVL(RPLN_UMCH_FLG,'N') <> 'Y'
                        AND NVL(TRSP_FRST_FLG,'N') <> 'Y'
                        AND NVL(DELT_FLG,'N') <> 'Y'
                        --BKG에서 REPLAN시 UNMATCH 건은 제외하고 생성하게 처리 20100409
            	    	AND NVL(RPLN_UMCH_FLG,'N') <> 'Y'
                        UNION ALL
                        -- Rail So
                        SELECT
                        A.COP_NO,A.COST_ACT_GRP_SEQ
                        FROM TRS_TRSP_RAIL_BIL_ORD A
                        WHERE A.BKG_NO = @[bkg_no]
            	    	AND NVL(A.TRSP_FRST_FLG,'N') <> 'Y'
                        AND NVL(A.DELT_FLG,'N') <> 'Y'
                        ORDER BY 1,2
                         )
                        GROUP BY COP_NO
                     ) SO
                 , BKG_CONTAINER BCNT
            WHERE BKGM.BKG_NO = @[bkg_no]
              AND CHDR.BKG_NO = BKGM.BKG_NO
              AND NVL(CHDR.COP_STS_CD,'N') <> 'X'
              AND RPRL.CNTR_TPSZ_CD(+) = CHDR.CNTR_TPSZ_CD
              AND SO.COP_NO(+) = CHDR.COP_NO
              AND BCNT.BKG_NO(+) = CHDR.BKG_NO
              AND BCNT.CNTR_NO(+) = CHDR.CNTR_NO
          ) SCEQ
        FULL OUTER JOIN
          ( -- BKG 측
           SELECT BQTY.BKG_NO
                , NVL(@[flex_hgt_flg], BKGM.FLEX_HGT_FLG) as FLEX_HGT_FLG
                , BQTY.CNTR_TPSZ_CD
                , 'COMU0000000' AS CNTR_NO
                , DECODE(NVL(@[flex_hgt_flg], BKGM.FLEX_HGT_FLG), 'Y', GREATEST(BQTY.CNTR_TPSZ_CD,  NVL(RPRL.PROV_CNTR_TPSZ_CD, ' ')), BQTY.CNTR_TPSZ_CD) GRP_CNTR_TPSZ_CD
                , RPRL.PROV_CNTR_TPSZ_CD
                , ROW_NUMBER()OVER(PARTITION BY BQTY.CNTR_TPSZ_CD ORDER BY CPY_NO) AS QTY_CNTR_ODR
             FROM BKG_BOOKING BKGM
               , (SELECT @[bkg_no] AS BKG_NO
                       , BKG_GET_TOKEN_FNC(COLUMN_VALUE, 1, '@') CNTR_TPSZ_CD
                       , TO_NUMBER(BKG_GET_TOKEN_FNC(COLUMN_VALUE, 2, '@')) OP_CNTR_QTY
                    FROM TABLE(SELECT BKG_SPLIT_FNC(@[cntr_tpsz_qty], ',') CNTR_TPSZ_QTY_TBL_STR FROM DUAL )
                  ) BQTY
               , COM_CPY_NO CPNO
               , SCE_COP_CNTR_REPO_RULE RPRL
           WHERE BKGM.BKG_NO = @[bkg_no]
             AND BQTY.BKG_NO = BKGM.BKG_NO
             AND RPRL.CNTR_TPSZ_CD(+) = BQTY.CNTR_TPSZ_CD
             AND CPNO.CPY_NO < BQTY.OP_CNTR_QTY
         ) QTYQ
       ON (   SCEQ.CNTR_TPSZ_CD = QTYQ.CNTR_TPSZ_CD
          AND SCEQ.SCE_CNTR_ODR = QTYQ.QTY_CNTR_ODR
          )
    )
GROUP BY BKG_NO, N2ND_MAP
)
GROUP BY BKG_NO, N3RD_MAP
)
GROUP BY BKG_NO, N4TH_MAP
) -- END OF FH_QTY
, SO_INFO AS (	
    SELECT /*+ LEADING(H) USE_NL(PU) USE_NL(RTN) */
		  ROWNUM,H.COP_NO,H.CNTR_NO,H.CNTR_TPSZ_CD, SO_KNT,
          OB_TRO_FLG,IB_TRO_FLG,BC.POR_NOD_CD,BC.POL_YD_CD POL_NOD_CD, BKG.POR_NOD_CD POR_ZN_CD,BKG.DEL_NOD_CD,
        -- MIXED TERM 일때 BKG_CONTAINER 의 TERM 을 사용
        -- NVL(RCV_TERM_CD,:rcv_t) RCV_TERM_CD,NVL(DE_TERM_CD,:del_t) DE_TERM_CD,
		  DECODE(@[bkg_rcv_t], 'M',  NVL(BC.RCV_TERM_CD,@[rcv_t]), @[rcv_t]) RCV_TERM_CD,
		  DECODE(@[bkg_del_t], 'M',  NVL(BC.DE_TERM_CD,@[del_t]), @[del_t]) DE_TERM_CD,
        --:rcv_t RCV_TERM_CD,:del_t DE_TERM_CD,
        --PU.NOD_CD MT_PU,RTN.NOD_CD MT_RTN,	=> DEL #2010.06.03 by sj
          COUNT(H.COP_NO) OVER ( PARTITION BY PU.NOD_CD ) PU_CNT,
          COUNT(H.COP_NO) OVER ( PARTITION BY RTN.NOD_CD ) RTN_CNT,
          H.OB_FSH_FLG,H.IB_FSH_FLG, H.CALC_COP_OP_TP_CD
    FROM FH_QTY H
        , SCE_COP_DTL PU
        , SCE_COP_DTL RTN
        , BKG_CONTAINER BC
        , BKG_BOOKING BKG
    WHERE H.BKG_NO = @[bkg_no]
    AND H.BKG_NO = BKG.BKG_NO
    AND H.CNTR_NO = BC.CNTR_NO(+)
    AND H.BKG_NO = BC.BKG_NO(+)
--      AND NVL(H.COP_STS_CD,'N') <> 'X'
    AND H.COP_NO = PU.COP_NO(+)
    AND PU.ACT_CD(+) = 'MOTYDO'
    AND PU.ACT_DT(+) IS NOT NULL
    AND H.COP_NO = RTN.COP_NO(+)
    AND RTN.ACT_CD(+) = 'MITYAD'
    AND RTN.ACT_DT(+) IS NOT NULL
)  -- END OF SO_INFO
, ROUT_OUTPUT AS (
    SELECT B.COP_NO,B.CNTR_NO,B.CNTR_TPSZ_CD, SO_KNT,NVL(OB_TRO_FLG,'N') OB_TRO_FLG, NVL(IB_TRO_FLG,'N') IB_TRO_FLG,
        POR_NOD_CD,POL_NOD_CD,RCV_TERM_CD,DE_TERM_CD,
        --NVL(MT_PU,FIRST_VALUE(MT_PU) OVER  (ORDER BY PU_CNT DESC ROWS UNBOUNDED PRECEDING)) MT_PU,	=> DEL #2010.06.03 by sj
        --NVL(MT_RTN,FIRST_VALUE(MT_RTN) OVER  (ORDER BY RTN_CNT DESC ROWS UNBOUNDED PRECEDING)) MT_RTN,=> DEL #2010.06.03 by sj
        (CASE WHEN (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = SUBSTR(B.POR_ZN_CD,1,5)) ='E'
               AND NVL((SELECT DOR_NOD_CD FROM TRS_TRSP_SVC_ORD
                         WHERE COP_NO =B.COP_NO
                           AND TRSP_BND_CD = 'O'
                           AND TRSP_SO_TP_CD <> 'S'
                           AND NVL(RPLN_UMCH_FLG,'N') <> 'Y'
                           AND NVL(TRSP_FRST_FLG,'N') <> 'Y'
                           AND NVL(DELT_FLG,'N') <> 'Y'
                           AND DOR_NOD_CD IS NOT NULL
						   AND ROWNUM = 1
						),B.POR_ZN_CD) <> B.POR_ZN_CD
              THEN PRD_GET_COP_NO_EUR_DR_STR_FNC (B.COP_NO,'O')
              ELSE PRD_GET_COP_BND_SO_STR_FNC (B.COP_NO,'O')
        END) OUT_BOUND,
        (CASE WHEN (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = SUBSTR(B.DEL_NOD_CD,1,5)) ='E'
               AND NVL((SELECT DOR_NOD_CD FROM TRS_TRSP_SVC_ORD
                         WHERE COP_NO =B.COP_NO
                           AND TRSP_BND_CD = 'I'
                           AND TRSP_SO_TP_CD <> 'S'
                           AND NVL(RPLN_UMCH_FLG,'N') <> 'Y'
                           AND NVL(TRSP_FRST_FLG,'N') <> 'Y'
                           AND NVL(DELT_FLG,'N') <> 'Y'
                           AND DOR_NOD_CD IS NOT NULL 
						   AND ROWNUM = 1
						),B.DEL_NOD_CD) <> B.DEL_NOD_CD
              THEN PRD_GET_COP_NO_EUR_DR_STR_FNC (B.COP_NO,'I')
              ELSE PRD_GET_COP_BND_SO_STR_FNC (B.COP_NO,'I')
        END)  IN_BOUND,
        PRD_GET_COP_BND_SO_STR_FNC (B.COP_NO,'T') OCN,
        B.OB_FSH_FLG,B.IB_FSH_FLG, B.CALC_COP_OP_TP_CD
    FROM SO_INFO B
) -- END OF ROUT_OUTPUT
, SUB_QUERY AS (
    SELECT COP_NO,CNTR_NO,CNTR_TPSZ_CD,SO_KNT
		 --MT_PU,MT_RTN,	=> DEL #2010.06.03 by sj
		 , OB_TRO_FLG,IB_TRO_FLG,POR_NOD_CD,POL_NOD_CD,RCV_TERM_CD,DE_TERM_CD
         , (CASE WHEN FULL_RK > 1 AND OUT_BOUND <> B_OUT_BOUND AND SIGN(INSTR(B_OUT_BOUND,OUT_BOUND)) = 1 THEN B_OUT_BOUND ELSE OUT_BOUND END) OUT_BOUND
         , (CASE WHEN FULL_RK > 1 AND IN_BOUND <> B_IN_BOUND   AND SIGN(INSTR(B_IN_BOUND,IN_BOUND)) = 1   THEN B_IN_BOUND  ELSE IN_BOUND  END) IN_BOUND
         , (CASE WHEN FULL_RK > 1 AND OCN <> B_OCN             AND SIGN(INSTR(B_OCN,OCN)) = 1             THEN B_OCN       ELSE OCN       END) OCN
            --MT_PU||MT_RTN||OB_TRO_FLG||IB_TRO_FLG||NVL(POR_NOD_CD,'AAAAAAA')||NVL(POL_NOD_CD,'AAAAAAA')||RCV_TERM_CD||DE_TERM_CD||
	     , OB_TRO_FLG||IB_TRO_FLG||NVL(POR_NOD_CD,'AAAAAAA')||NVL(POL_NOD_CD,'AAAAAAA')||RCV_TERM_CD||DE_TERM_CD
           ||(CASE WHEN FULL_RK > 1 AND OUT_BOUND <> B_OUT_BOUND AND SIGN(INSTR(B_OUT_BOUND,OUT_BOUND)) = 1 THEN B_OUT_BOUND ELSE OUT_BOUND END)
           ||(CASE WHEN FULL_RK > 1 AND IN_BOUND <> B_IN_BOUND   AND SIGN(INSTR(B_IN_BOUND,IN_BOUND)) = 1   THEN B_IN_BOUND  ELSE IN_BOUND  END)
           ||(CASE WHEN FULL_RK > 1 AND OCN <> B_OCN             AND SIGN(INSTR(B_OCN,OCN)) = 1             THEN B_OCN       ELSE OCN       END)
           AS FULL_ROUT
         , COUNT(
            --MT_PU||MT_RTN||OB_TRO_FLG||IB_TRO_FLG||NVL(POR_NOD_CD,'AAAAAAA')||NVL(POL_NOD_CD,'AAAAAAA')||RCV_TERM_CD||DE_TERM_CD||
	        OB_TRO_FLG||IB_TRO_FLG||NVL(POR_NOD_CD,'AAAAAAA')||NVL(POL_NOD_CD,'AAAAAAA')||RCV_TERM_CD||DE_TERM_CD
            ||(CASE WHEN FULL_RK > 1 AND OUT_BOUND <> B_OUT_BOUND AND SIGN(INSTR(B_OUT_BOUND,OUT_BOUND)) = 1 THEN B_OUT_BOUND ELSE OUT_BOUND END)
            ||(CASE WHEN FULL_RK > 1 AND IN_BOUND <> B_IN_BOUND   AND SIGN(INSTR(B_IN_BOUND,IN_BOUND)) = 1   THEN B_IN_BOUND  ELSE IN_BOUND  END)
            ||(CASE WHEN FULL_RK > 1 AND OCN <> B_OCN             AND SIGN(INSTR(B_OCN,OCN)) = 1             THEN B_OCN       ELSE OCN       END)
            ) OVER (
            PARTITION BY
            --MT_PU||MT_RTN||OB_TRO_FLG||IB_TRO_FLG||NVL(POR_NOD_CD,'AAAAAAA')||NVL(POL_NOD_CD,'AAAAAAA')||RCV_TERM_CD||DE_TERM_CD||
	        OB_TRO_FLG||IB_TRO_FLG||NVL(POR_NOD_CD,'AAAAAAA')||NVL(POL_NOD_CD,'AAAAAAA')||RCV_TERM_CD||DE_TERM_CD
            ||(CASE WHEN FULL_RK > 1 AND OUT_BOUND <> B_OUT_BOUND AND SIGN(INSTR(B_OUT_BOUND,OUT_BOUND)) = 1 THEN B_OUT_BOUND ELSE OUT_BOUND END)
            ||(CASE WHEN FULL_RK > 1 AND IN_BOUND <> B_IN_BOUND   AND SIGN(INSTR(B_IN_BOUND,IN_BOUND)) = 1   THEN B_IN_BOUND  ELSE IN_BOUND  END)
            ||(CASE WHEN FULL_RK > 1 AND OCN <> B_OCN             AND SIGN(INSTR(B_OCN,OCN)) = 1             THEN B_OCN       ELSE OCN       END)
            )
           AS FULL_RANK
         , OB_FSH_FLG, IB_FSH_FLG, CALC_COP_OP_TP_CD
    FROM   (
           SELECT COP_NO,CNTR_NO,CNTR_TPSZ_CD,SO_KNT,OUT_BOUND,IN_BOUND,OCN,OB_TRO_FLG,IB_TRO_FLG,POR_NOD_CD,POL_NOD_CD,RCV_TERM_CD,DE_TERM_CD, FULL_RK
                , MAX(DECODE(FULL_RK, 1, OUT_BOUND, NULL)) OVER () B_OUT_BOUND
                , MAX(DECODE(FULL_RK, 1, IN_BOUND, NULL)) OVER () B_IN_BOUND
                , MAX(DECODE(FULL_RK, 1, OCN, NULL)) OVER () B_OCN
                , OB_FSH_FLG, IB_FSH_FLG, CALC_COP_OP_TP_CD
            FROM (
               SELECT COP_NO,CNTR_NO,CNTR_TPSZ_CD,SO_KNT,OUT_BOUND,IN_BOUND,OCN,OB_TRO_FLG,IB_TRO_FLG,POR_NOD_CD,POL_NOD_CD,RCV_TERM_CD,DE_TERM_CD
                    , ROW_NUMBER() OVER (ORDER BY PATTERN_CNTS DESC, SIGN(SO_KNT) DESC , COP_NO DESC) FULL_RK -- PATTERN개수가 가장 많은 것의 가장 나중 COP 번호를 가진 것중 하나가 FULL_RK = 1이 된다. (Park Mangeon - 조용인 수석에게 확인 20100902, SO가 있는 것이 우선적으로 처리되도록 rank 처리
                    , OB_FSH_FLG, IB_FSH_FLG, CALC_COP_OP_TP_CD
               FROM (
                     SELECT ROUT.COP_NO,ROUT.CNTR_NO,ROUT.CNTR_TPSZ_CD,ROUT.SO_KNT,ROUT.OUT_BOUND,ROUT.IN_BOUND,ROUT.OCN
                             -- MT_PU,MT_RTN,=> DEL #2010.06.03 by sj
               		      , OB_TRO_FLG,IB_TRO_FLG,POR_NOD_CD,POL_NOD_CD,RCV_TERM_CD,DE_TERM_CD
                          , COUNT(1) OVER (PARTITION BY OB_TRO_FLG||IB_TRO_FLG||POR_NOD_CD||POL_NOD_CD||RCV_TERM_CD||DE_TERM_CD||ROUT.OUT_BOUND||ROUT.OCN||ROUT.IN_BOUND) PATTERN_CNTS
                          , ROUT.OB_FSH_FLG,ROUT.IB_FSH_FLG, CALC_COP_OP_TP_CD
                       FROM ROUT_OUTPUT ROUT
                   )
               )
         )
) -- END OF SUB_QUERY
SELECT NVL(H2.BKG_NO, @[bkg_no]) AS BKG_NO
     , CASE WHEN CALC_COP_OP_TP_CD = 'C' THEN (SELECT B.PCTL_NO FROM BKG_BOOKING B WHERE B.BKG_NO = @[bkg_no] ) -- 신규는 booking의 pc 번호 사용
            WHEN (P.OB_TRO_FLG = 'Y' OR P.IB_TRO_FLG = 'Y') AND NVL(P.CNTR_NO, 'COMU0000000') = 'COMU0000000' THEN (SELECT B.PCTL_NO FROM BKG_BOOKING B WHERE B.BKG_NO = @[bkg_no] ) -- 신규는 booking의 pc 번호 사용
            ELSE NVL(H2.PCTL_NO, MAX(H2.PCTL_NO) OVER ())
       END AS PCTL_NO
     , CASE WHEN P.COP_NO IS NOT NULL THEN P.COP_NO
            ELSE SCE_NEW_COP_NO_FNC(@[bkg_ofc]) END AS COP_NO
     , @[mapg_seq] COP_MAPG_SEQ
     , 'Y' CRNT_FLG
     , NVL(CALC_COP_OP_TP_CD, @[current_flag]) COP_OP_TP_CD
     , P.CNTR_NO
     , 'REPLAN' BKG_OP_RMK
     , P.CNTR_TPSZ_CD
     , SO_KNT  COP_SO_KNT
     --, MT_PU,MT_RTN=> DEL #2010.06.03 by sj
     , P.OB_TRO_FLG
     , P.IB_TRO_FLG
     , P.POR_NOD_CD
     , P.POL_NOD_CD
     , RCV_TERM_CD BKG_RCV_TERM_CD
     , DE_TERM_CD BKG_DE_TERM_CD
     , OUT_BOUND OB_ITCHG_CTNT
     , IN_BOUND IB_ITCHG_CTNT
     , OCN OCN_ITCHG_CTNT
     , DENSE_RANK() OVER ( ORDER BY  FULL_RANK DESC, FULL_ROUT ) COP_PATT_ORD_NO
     , OB_FSH_FLG
     , IB_FSH_FLG
 FROM SUB_QUERY P
    , SCE_COP_HDR H2
 WHERE P.COP_NO = H2.COP_NO(+)			]]></sql>
			<params>
				<param name="flex_hgt_flg" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="cntr_tpsz_qty" type="12" value="" out="N"/>
				<param name="bkg_rcv_t" type="12" value="" out="N"/>
				<param name="rcv_t" type="12" value="" out="N"/>
				<param name="bkg_del_t" type="12" value="" out="N"/>
				<param name="del_t" type="12" value="" out="N"/>
				<param name="bkg_ofc" type="12" value="" out="N"/>
				<param name="mapg_seq" type="12" value="" out="N"/>
				<param name="current_flag" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
