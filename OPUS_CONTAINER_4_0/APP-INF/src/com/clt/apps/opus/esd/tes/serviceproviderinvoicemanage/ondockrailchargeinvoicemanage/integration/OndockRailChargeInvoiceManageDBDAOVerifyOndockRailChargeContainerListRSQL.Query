<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OndockRailChargeInvoiceManageDBDAOVerifyOndockRailChargeContainerListRSQL">
			<desc><![CDATA[VerifyOndockRailChargeContainerList]]></desc>
			<sql><![CDATA[
SELECT DECODE(A.CNTR_NO,NULL,B.EQ_NO,A.CNTR_NO) 										CNTR_NO
		,A.CNTR_TPSZ_CD
		,DECODE(A.CNTR_STY_CD,NULL ,B.MT,A.CNTR_STY_CD) 								CNTR_STY_CD
		,TO_CHAR(TO_DATE(DECODE(A.CNTR_NO,NULL,'',A.WRK_DT),'YYYY-MM-DD'),'YYYY-MM-DD') WRK_DT
		,A.VNDR_SEQ
		,A.YD_CD
		,A.RCV_DT
		,A.CNTR_RMK
		,DECODE(A.DSCR_IND_CD,NULL,'HO',A.DSCR_IND_CD)  				DSCR_IND_CD
		,B.VSL_CD
		,B.SKD_VOY_NO
		,B.SKD_DIR_CD
		,B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD  							VVD_NO
		,MAX(B.BKG_NO) BKG_NO
		--,MAX(B.BKG_NO_SPLIT) BKG_NO_SPLIT
		,MAX(B.BL_NO) BL_NO
		--,MAX(B.BL_NO_CHK) BL_NO_CHK
		--,MAX(B.BL_NO_TP) BL_NO_TP
		,B.FM_NOD_CD
		,B.TO_NOD_CD
		,B.RC_FLG
		,DECODE(B.DCGO_CLSS_CD,NULL,'N',B.DCGO_CLSS_CD) DCGO_CLSS_CD
		,MAX(TO_CHAR(B.CLM_DT,'YYYY-MM-DD'))                                 		CLM_DT
		,B.RAIL_BIL_DT
		,CASE WHEN SUBSTR(A.DSCR_IND_CD,0,2) IN  ('DD','DP','HO','PD','NH','DB','DF') THEN 'DC' ELSE 'CO' END VRFY_RSLT_IND_CD
FROM   ( SELECT P.CNTR_NO        CNTR_NO
				,C.CNTR_TPSZ_CD  CNTR_TPSZ_CD
				,DB.CNTR_RMK
				,P.CNTR_STY_CD   CNTR_STY_CD
				,P.VNDR_SEQ      VNDR_SEQ
				,P.YD_CD         YD_CD
				,P.RCV_DT        RCV_DT
				,P.WRK_DT        WRK_DT
				,P.TML_SO_TMP_SEQ TML_SO_TMP_SEQ
				,CASE WHEN LENGTH(DB.CNTR_RMK) > 1   THEN 'DB' -- 'Double Bill' Check
--		                ,CASE WHEN (( SELECT COUNT(*) -- 'Double Bill' Check
--		                                FROM    TES_TML_SO_HDR A,
--		                                        TES_TML_SO_CNTR_LIST B
--		                                WHERE  A.TML_SO_OFC_CTY_CD  = B.TML_SO_OFC_CTY_CD
--		                                AND    A.TML_SO_SEQ         = B.TML_SO_SEQ
--		                                AND    A.VNDR_SEQ           = P.VNDR_SEQ
--		                                AND    A.YD_CD              = P.YD_CD
--		                                AND    A.TML_INV_TP_CD      = 'ON'
--		                                AND    NVL(A.DELT_FLG,'N')  <> 'Y'
--		                                AND    B.CNTR_NO            = P.CNTR_NO
--		                                AND    B.CNTR_STY_CD        = P.CNTR_STY_CD
--		-- 김기영 부장님 요청으로 double billing checking period를 현재 3개월에서 (+/-)7일로 수정 - 2007.07.16
--		                                AND    ABS(MONTHS_BETWEEN(P.RCV_DT,A.RCV_DT )) <= 0.25) > 0 ) THEN 'DB'
				 ELSE DECODE(( SELECT COUNT(*) -- 'Not in COM Souce' Check
								FROM   TRS_TRSP_RAIL_BIL_ORD O, BKG_BOOKING B, BKG_DG_CGO D
								WHERE  ( O.FM_NOD_CD = P.YD_CD  OR  O.TO_NOD_CD = P.YD_CD )
								AND    O.CRE_DT >= ( SELECT TO_DATE(MIN(WRK_DT),'YYYYMMDD') - 7
													 FROM   TES_FILE_IMP_TMP
													 WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
													 AND    TML_SO_SEQ        = @[tml_so_seq] )  -- FILE IMPORT한 WORKING DATE의 MIN 값
								AND    O.CRE_DT <= ( SELECT TO_DATE(MAX(WRK_DT),'YYYYMMDD') + 7
													 FROM   TES_FILE_IMP_TMP
													 WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
													 AND    TML_SO_SEQ        = @[tml_so_seq] )  -- FILE IMPORT한 WORKING DATE의 MAX 값
								AND    NVL(O.DELT_FLG,'N') <> 'Y'
								AND    O.EQ_NO             = P.CNTR_NO
								AND    O.BKG_NO            = B.BKG_NO(+)
								--AND    O.BKG_NO_SPLIT      = B.BKG_NO_SPLIT(+)
								AND    B.BKG_STS_CD IN ('F','W')
								AND    O.BKG_NO            = D.BKG_NO(+)
								--AND    O.BKG_NO_SPLIT      = D.BKG_NO_SPLIT(+) 
								)
								, 0, 'NH',
							  (SELECT DECODE(CGO_TP_CD,'F','CO','DDF')
							   FROM(
									SELECT MAX(O.BKG_NO), --MAX(O.BKG_NO_SPLIT), 
											P.CNTR_NO, O.CGO_TP_CD -- 'Discrepancy by Detail Data' Check
									FROM   TRS_TRSP_RAIL_BIL_ORD O, BKG_BOOKING B, BKG_DG_CGO D, TES_FILE_IMP_TMP P
									WHERE  ( O.FM_NOD_CD = P.YD_CD   OR   O.TO_NOD_CD = P.YD_CD )
									AND    O.CRE_DT >= ( SELECT TO_DATE(MIN(WRK_DT),'YYYYMMDD') - 7
														 FROM   TES_FILE_IMP_TMP
														 WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
														 AND    TML_SO_SEQ        = @[tml_so_seq] )    -- FILE IMPORT한 WORKING DATE의 MIN 값
									AND    O.CRE_DT <= ( SELECT TO_DATE(MAX(WRK_DT),'YYYYMMDD') + 7
														 FROM   TES_FILE_IMP_TMP
														 WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
														 AND    TML_SO_SEQ        = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MAX 값
									AND    NVL(O.DELT_FLG,'N') <> 'Y'
									AND    O.EQ_NO             = P.CNTR_NO
									AND    O.BKG_NO            = B.BKG_NO(+)
									--AND    O.BKG_NO_SPLIT      = B.BKG_NO_SPLIT(+)
									AND    B.BKG_STS_CD IN ('F','W')
									AND    O.BKG_NO            = D.BKG_NO(+)
									--AND    O.BKG_NO_SPLIT      = D.BKG_NO_SPLIT(+)
									AND    P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
									AND    P.TML_SO_SEQ = @[tml_so_seq]
									GROUP BY P.CNTR_NO, O.CGO_TP_CD )
								WHERE P.CNTR_NO = CNTR_NO
								))
				 END  DSCR_IND_CD
		 FROM  TES_FILE_IMP_TMP P, MST_CONTAINER C,
			          (
                        SELECT   BB.CNTR_NO, BB.CNTR_STY_CD, 'Double billing Inv : '||MAX(BB.INV_NO) CNTR_RMK
                        FROM
                        (
                            SELECT A.COST_CODE, C.CNTR_NO 
                            FROM(
                                SELECT DISTINCT DECODE(1,0,C.LGS_COST_CD,DECODE(C.LGS_COST_CD,CD,TP,C.LGS_COST_CD)) COST_CODE
                                FROM ( SELECT COUNT(T.LGS_COST_CD) CNT,
                                     T.LGS_COST_CD TP,
                                     T.THRP_LGS_COST_CD CD,
                                     H.TML_AGMT_OFC_CTY_CD CTY,
                                     H.TML_AGMT_SEQ SEQ,
                                     H.TML_AGMT_VER_NO NO
                                    FROM   TES_TML_AGMT_HDR H, TES_TML_AGMT_THRP_COST T
                                    WHERE  H.YD_CD            = @[yd_cd]
                                    AND    H.VNDR_SEQ         = @[vndr_seq]
                                    AND    H.TML_AGMT_STS_CD = 'C'
                                    AND    H.DELT_FLG        = 'N'

    								AND    TO_CHAR(H.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[min_wrk_dt],'-') -- Min Work Date([min_wrk_dt]) ==> OnDock Rail Invoice
    								AND    TO_CHAR(H.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[min_wrk_dt],'-') -- Max Work Date([max_wrk_dt]) ==> OnDock Rail Invoice

                                    AND    H.TML_AGMT_VER_NO = ( SELECT MAX(M.TML_AGMT_VER_NO)
                                         FROM   TES_TML_AGMT_HDR M
                                         WHERE  M.YD_CD               = @[yd_cd]
                                         AND    M.VNDR_SEQ            = @[vndr_seq]
                                         AND    M.TML_AGMT_STS_CD     = 'C'
                                         AND    M.DELT_FLG            = 'N'

            							 AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= REPLACE(@[min_wrk_dt],'-') -- Min Work Date([min_wrk_dt]) ==> OnDock Rail Invoice
            							 AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= REPLACE(@[min_wrk_dt],'-')) -- Max Work Date([max_wrk_dt]) ==> OnDock Rail Invoice

                                    AND    H.TML_AGMT_OFC_CTY_CD = T.TML_AGMT_OFC_CTY_CD(+)
                                    AND    H.TML_AGMT_SEQ        = T.TML_AGMT_SEQ(+)
                                    AND    H.TML_AGMT_VER_NO     = T.TML_AGMT_VER_NO(+)
                                    GROUP BY H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
                                    T.LGS_COST_CD, T.THRP_LGS_COST_CD ) A, TES_TML_SO_COST C, TES_TML_AGMT_DTL D
                                WHERE  C.COST_CALC_MZD_CD = 'A'
                                AND    C.TML_AGMT_MGMT_CD = 'A'

								AND    C.ODCK_RAIL_CHG_FLG = 'Y' -- OnDock Rail Invoice

                                AND    D.TML_AGMT_OFC_CTY_CD = A.CTY
                                AND    D.TML_AGMT_SEQ = A.SEQ
                                AND    D.TML_AGMT_VER_NO  = A.NO
                                AND    C.LGS_COST_CD = D.LGS_COST_CD
                                AND    DECODE(A.CNT,0,DECODE(SUBSTR(C.LGS_COST_CD,1,2),'TP','N','Y'),'Y') = 'Y' 
                                AND    D.THRP_COST_CD_FLG IS NULL
                            ) A,
                            (
                                SELECT ltrim(regexp_substr((select COST_CD_FTR_RMK
                                                              from tes_tml_so_hdr
                                                             where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]), '[^|]+', 1, level ) ,'|') as COST_CODE
                                 FROM dual
                                 connect by level<= ( length((select COST_CD_FTR_RMK
                                                                from tes_tml_so_hdr
                                                               where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]))+1 - length(replace((select COST_CD_FTR_RMK
                                                                                                                from tes_tml_so_hdr
                                                                                                               where TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]), '|')) ) / length('|')
                            )B,
                            (
                                SELECT * FROM TES_FILE_IMP_TMP
                                WHERE 1=1
                                AND TML_SO_OFC_CTY_CD=@[tml_so_ofc_cty_cd] AND TML_SO_SEQ=@[tml_so_seq]
     
                            ) C

#if (${cost_cd_ftr_rmk} == '') 
	WHERE A.COST_CODE=B.COST_CODE(+)
#else 
	WHERE A.COST_CODE=B.COST_CODE -- hdr정보에 데이터 있으면 inner 없음 outter
#end
                            
                        ) AA,
                        (
                        SELECT DISTINCT H.INV_NO, H.YD_CD, H.VNDR_SEQ, D.LGS_COST_CD, L.CNTR_NO, L.CNTR_STY_CD
                         FROM   TES_TML_SO_HDR H, TES_TML_SO_DTL D, TES_TML_SO_CNTR_LIST L
                         WHERE  H.YD_CD             = @[yd_cd]
                         AND    H.VNDR_SEQ           = @[vndr_seq]
                         AND    H.TML_SO_OFC_CTY_CD   = D.TML_SO_OFC_CTY_CD
                         AND    H.TML_SO_SEQ          = D.TML_SO_SEQ
                         AND    H.TML_SO_OFC_CTY_CD   = L.TML_SO_OFC_CTY_CD
                         AND    H.TML_SO_SEQ          = L.TML_SO_SEQ

                         AND    NVL(H.DELT_FLG,'N')   <> 'Y'
						 AND    H.TML_INV_TP_CD      = 'ON'
                         AND    D.CALC_TP_CD          = 'A'
                         AND    L.VRFY_RSLT_IND_CD    = 'CO'
                         AND    NVL(L.CNTR_TPSZ_CD,'N')  = NVL(D.CNTR_TPSZ_CD,'N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IO_BND_CD,'N'),'ON',NVL(L.IO_BND_CD,'N'),'OF','N','ST','N')
                             = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IO_BND_CD,'N'),'ON',NVL(D.IO_BND_CD,'N'),'OF','N','ST','N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.IOC_CD,'N'),'ON',NVL(L.IOC_CD,'N'),'OF','N','ST','N')
                             = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.IOC_CD,'N'),'ON',NVL(D.IOC_CD,'N'),'OF','N','ST','N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.LANE_CD,'N'),'ON',NVL(L.LANE_CD,'N'),'OF','N','ST','N')
                             = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.LANE_CD,'N'),'ON',NVL(D.LANE_CD,'N'),'OF','N','ST','N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',
                            DECODE(L.BB_CGO_FLG,'Y','BB',DECODE(L.LOCL_TS_IND_CD,'T',DECODE(L.CNTR_STY_CD,'F','TS','TM'),DECODE(L.CNTR_STY_CD,'F','FL','MT'))),
                            'ON',DECODE(L.CNTR_STY_CD,'F','F','M'),'OF',DECODE(L.CNTR_STY_CD,'F','FL','MT'),'ST',DECODE(L.LOCL_TS_IND_CD,'T','TS',DECODE(L.CNTR_STY_CD,'F','FL','MT')))
                             = DECODE(H.TML_INV_TP_CD,'TM',SUBSTR(D.LGS_COST_CD,5,2),'ON',SUBSTR(D.LGS_COST_CD,6,1),'OF',SUBSTR(D.LGS_COST_CD,5,2),
                            'ST',SUBSTR(D.LGS_COST_CD,5,2))
                         AND    DECODE(H.TML_INV_TP_CD,'TM',NVL(L.DCGO_CLSS_CD,'N'),'ON',NVL(L.DCGO_CLSS_CD,'N'),'OF','N','ST','N')
                             = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.DCGO_IND_CD,'N'),'ON',NVL(D.DCGO_IND_CD,'N'),'OF','N','ST','N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',DECODE(D.TML_TRNS_MOD_CD,'','S','S','S',NVL(L.TML_TRNS_MOD_CD,'S')),'N')
                             = DECODE(H.TML_INV_TP_CD,'TM',NVL(D.TML_TRNS_MOD_CD,'S'),'N')
                         AND    DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS','F','N'),'N')
                             = DECODE(H.TML_INV_TP_CD,'TM',DECODE(SUBSTR(D.LGS_COST_CD,5,2),'TS',L.CNTR_STY_CD,'N'),'N')
                         --AND    DECODE(H.TML_INV_TP_CD,'TM','Y',L.VSL_CD) <> DECODE(H.TML_INV_TP_CD,'TM','N','CNTC')
						 
                        ) BB
                        WHERE AA.CNTR_NO = BB.CNTR_NO
                        AND AA.COST_CODE = BB.LGS_COST_CD
                        group by BB.CNTR_NO, BB.CNTR_STY_CD
                    ) DB
		 WHERE P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
		 AND   P.TML_SO_SEQ        = @[tml_so_seq]
		 AND   P.CNTR_NO = DB.CNTR_NO(+)
		 AND   P.CNTR_STY_CD = DB.CNTR_STY_CD(+)
		 AND   P.CNTR_NO           = C.CNTR_NO(+) ) A,
	   ( SELECT  B.VSL_CD,
				 B.SKD_VOY_NO,
				 B.SKD_DIR_CD,
				 O.BKG_NO,
				 --O.BKG_NO_SPLIT,
				 B.BL_NO,
				 --B.BL_NO_CHK,
				 --B.BL_NO_TP,
				 O.EQ_NO,
				 O.EQ_TPSZ_CD,
				 O.CGO_TP_CD MT,
				 O.FM_NOD_CD,
				 O.TO_NOD_CD,
				 P.TML_SO_TMP_SEQ,
				 NVL(SUBSTR(D.IMDG_CLSS_CD,1,1),'N') DCGO_CLSS_CD,
				 NVL(B.RC_FLG,'N') RC_FLG,
				 TO_CHAR(TO_DATE(P.WRK_DT,'YYYYMMDD'),'YYYY-MM-DD') WK_DT,
				 DECODE(DECODE(SUBSTR(P.YD_CD,1,5),B.POL_CD,'O','I'),'O',MIN(U.ARR_DT),MAX(V.ARR_DT)) CLM_DT,
				 TO_CHAR(O.CRE_DT,'YYYY-MM-DD') RAIL_BIL_DT,
				 DECODE(TO_CHAR(TO_DATE(P.WRK_DT,'YYYYMMDD'),'DY'),'SAT','SA','SUN','SU','WD') DY,
				( SELECT COUNT(*)
				  FROM   DMT_HOLIDAY
				  WHERE  TO_CHAR(HOL_DT,'YYYYMMDD') = TO_CHAR(P.WRK_DT,'YYYYMMDD')
				  AND    CNT_CD = P.YD_CD
				   ) HO
		 FROM   TRS_TRSP_RAIL_BIL_ORD O, BKG_BOOKING B, BKG_DG_CGO D, SCE_CLM U, SCE_CLM V, TES_FILE_IMP_TMP P
		 WHERE  P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
		 AND    P.TML_SO_SEQ        = @[tml_so_seq]
		 AND    ( O.FM_NOD_CD = P.YD_CD  OR O.TO_NOD_CD = P.YD_CD )
		 AND    O.CRE_DT >= ( SELECT TO_DATE(MIN(WRK_DT),'YYYYMMDD') - 7
							  FROM   TES_FILE_IMP_TMP
							  WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
							  AND    TML_SO_SEQ        = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MIN 값
		 AND    O.CRE_DT <= ( SELECT TO_DATE(MAX(WRK_DT),'YYYYMMDD') + 7
							  FROM   TES_FILE_IMP_TMP
							  WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
							  AND    TML_SO_SEQ = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MAX 값
		 AND    NVL(O.DELT_FLG,'N')  <> 'Y'
		 AND    O.EQ_NO              = P.CNTR_NO
		 AND    O.BKG_NO             = B.BKG_NO(+)
		 --AND    O.BKG_NO_SPLIT       = B.BKG_NO_SPLIT(+)
		 AND    B.BKG_STS_CD IN ('F','W')
		 AND    O.BKG_NO             = D.BKG_NO(+)
		 --AND    O.BKG_NO_SPLIT       = D.BKG_NO_SPLIT(+)
		 AND    O.TRSP_SO_OFC_CTY_CD = U.TRSP_SO_OFC_CTY_CD(+)
		 AND    O.TRSP_SO_SEQ        = U.TRSP_SO_SEQ(+)
		 AND    O.EQ_NO              = U.CNTR_NO(+)
		 AND    U.CLM_SGHT_CD(+)     = 'U'
		 AND    O.TRSP_SO_OFC_CTY_CD = V.TRSP_SO_OFC_CTY_CD(+)
		 AND    O.TRSP_SO_SEQ        = V.TRSP_SO_SEQ(+)
		 AND    O.EQ_NO              = V.CNTR_NO(+)
		 AND    V.CLM_SGHT_CD(+)     = 'V'
		 GROUP BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, O.BKG_NO, --O.BKG_NO_SPLIT, 
				B.BL_NO, --B.BL_NO_CHK, B.BL_NO_TP,
				  O.EQ_NO, O.EQ_TPSZ_CD, O.CGO_TP_CD, O.FM_NOD_CD, O.TO_NOD_CD, P.TML_SO_TMP_SEQ, P.WRK_DT, P.YD_CD,
				  D.IMDG_CLSS_CD, B.POL_CD, O.CRE_DT, B.RC_FLG ) B
WHERE A.CNTR_NO        = B.EQ_NO(+)
AND   A.TML_SO_TMP_SEQ = B.TML_SO_TMP_SEQ(+)
GROUP BY DECODE(A.CNTR_NO,NULL,B.EQ_NO,A.CNTR_NO), A.CNTR_TPSZ_CD, DECODE(A.CNTR_STY_CD,NULL ,B.MT,A.CNTR_STY_CD)
		,TO_CHAR(TO_DATE(DECODE(A.CNTR_NO,NULL,'',A.WRK_DT),'YYYY-MM-DD'),'YYYY-MM-DD'), A.VNDR_SEQ, A.YD_CD
		,A.RCV_DT, DECODE(A.DSCR_IND_CD,NULL,'HO',A.DSCR_IND_CD), B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD
		,B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, B.FM_NOD_CD, B.TO_NOD_CD, B.RC_FLG
		,DECODE(B.DCGO_CLSS_CD,NULL,'N',B.DCGO_CLSS_CD), B.RAIL_BIL_DT, A.DSCR_IND_CD, A.CNTR_RMK			]]></sql>
			<params>
				<param name="tml_so_ofc_cty_cd" type="12" value="" out="N"/>
				<param name="tml_so_seq" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="min_wrk_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
