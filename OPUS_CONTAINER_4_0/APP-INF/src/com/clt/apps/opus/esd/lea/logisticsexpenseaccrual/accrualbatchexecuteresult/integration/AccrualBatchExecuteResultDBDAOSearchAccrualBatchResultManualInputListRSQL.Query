<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccrualBatchExecuteResultDBDAOSearchAccrualBatchResultManualInputListRSQL">
			<desc><![CDATA[Exe.YearMonth 배치실행결과의 매뉴얼 Account code별 Actual cost를 계산해 놓은 Data를 가져온다.]]></desc>
			<sql><![CDATA[
SELECT	B.EXE_YRMON                                                                                                    									 				
			,	B.REV_YRMON                                                                                                                  
			,	DECODE(A.ESTM_COST_AMT_A,NULL,DECODE(A.ACT_COST_AMT_A,NULL,DECODE(A.ACCL_COST_AMT_A,NULL,'I')),'U') IBFLAG_A                
			,	NVL(A.ESTM_COST_AMT_A ,0) ESTM_COST_AMT_A                                                                   		             
			,	NVL(A.ACT_COST_AMT_A  ,0) ACT_COST_AMT_A                                                                    		             
			,	NVL(A.ACCL_COST_AMT_A ,0) ACCL_COST_AMT_A                                                                   		             
			,	DECODE(A.ESTM_COST_AMT_B,NULL,DECODE(A.ACT_COST_AMT_B,NULL,DECODE(A.ACCL_COST_AMT_B,NULL,'I')),'U') IBFLAG_B                
			,	DECODE(A.ESTM_COST_AMT_B,NULL, NVL(A.ACT_COST_AMT_B,0), 0 , NVL(A.ACT_COST_AMT_B,0), A.ESTM_COST_AMT_B) ESTM_COST_AMT_B                         		             
			,	NVL(A.ACT_COST_AMT_B  ,0) ACT_COST_AMT_B                                                                    		             
			,	NVL(A.ACCL_COST_AMT_B ,0) ACCL_COST_AMT_B                                                                   		             
			,	DECODE(A.ESTM_COST_AMT_C,NULL,DECODE(A.ACT_COST_AMT_C,NULL,DECODE(A.ACCL_COST_AMT_C,NULL,'I')),'U') IBFLAG_C                
			,	DECODE(A.ESTM_COST_AMT_C,NULL,NVL(A.ACT_COST_AMT_C,0), 0 ,NVL(A.ACT_COST_AMT_C,0),A.ESTM_COST_AMT_C) ESTM_COST_AMT_C      		             
			,	NVL(A.ACT_COST_AMT_C  ,0) ACT_COST_AMT_C                                                                    		             
			,	NVL(A.ACCL_COST_AMT_C ,0) ACCL_COST_AMT_C                                                                   		             
			,	DECODE(A.ESTM_COST_AMT_D,NULL,DECODE(A.ACT_COST_AMT_D,NULL,DECODE(A.ACCL_COST_AMT_D,NULL,'I')),'U') IBFLAG_D                
			,	NVL(A.ESTM_COST_AMT_D ,0) ESTM_COST_AMT_D                                                                   		             
			,	NVL(A.ACT_COST_AMT_D  ,0) ACT_COST_AMT_D                                                                    		             
			,	NVL(A.ACCL_COST_AMT_D ,0) ACCL_COST_AMT_D                                                                   		             
			,	DECODE(A.ESTM_COST_AMT_F,NULL,DECODE(A.ACT_COST_AMT_F,NULL,DECODE(A.ACCL_COST_AMT_F,NULL,'I')),'U') IBFLAG_F                
			,	NVL(A.ESTM_COST_AMT_F ,0) ESTM_COST_AMT_F                                                                   		             
			,	NVL(A.ACT_COST_AMT_F  ,0) ACT_COST_AMT_F                                                                    		             
			,	NVL(A.ACCL_COST_AMT_F ,0) ACCL_COST_AMT_F                                                                   		           
			,	DECODE(A.ESTM_COST_AMT_G,NULL,DECODE(A.ACT_COST_AMT_G,NULL,DECODE(A.ACCL_COST_AMT_G,NULL,'I')),'U') IBFLAG_G                
			,	NVL(A.ESTM_COST_AMT_G ,0) ESTM_COST_AMT_G                                                                   		             
			,	NVL(A.ACT_COST_AMT_G  ,0) ACT_COST_AMT_G                                                                    		             
			,	NVL(A.ACCL_COST_AMT_G ,0) ACCL_COST_AMT_G                                                                   	                 
			,	DECODE(A.ESTM_COST_AMT_H,NULL,DECODE(A.ACT_COST_AMT_H,NULL,DECODE(A.ACCL_COST_AMT_H,NULL,'I')),'U') IBFLAG_H                
			,	NVL(A.ESTM_COST_AMT_H ,0) ESTM_COST_AMT_H                                                                   		             
			,	NVL(A.ACT_COST_AMT_H  ,0) ACT_COST_AMT_H                                                                    		             
			,	NVL(A.ACCL_COST_AMT_H ,0) ACCL_COST_AMT_H                                                                   	                 
			,	DECODE(A.ESTM_COST_AMT_I,NULL,DECODE(A.ACT_COST_AMT_I,NULL,DECODE(A.ACCL_COST_AMT_I,NULL,'I')),'U') IBFLAG_I                
			,	NVL(A.ESTM_COST_AMT_I ,0) ESTM_COST_AMT_I                                                                   		             
			,	NVL(A.ACT_COST_AMT_I  ,0) ACT_COST_AMT_I                                                                    		             
			,	NVL(A.ACCL_COST_AMT_I ,0) ACCL_COST_AMT_I                                                                   	                 
			,	DECODE(A.ESTM_COST_AMT_J,NULL,DECODE(A.ACT_COST_AMT_J,NULL,DECODE(A.ACCL_COST_AMT_J,NULL,'I')),'U') IBFLAG_J                
			,	NVL(A.ESTM_COST_AMT_J ,0) ESTM_COST_AMT_J                                                                   		             
			,	NVL(A.ACT_COST_AMT_J  ,0) ACT_COST_AMT_J                                                                    		             
			,	NVL(A.ACCL_COST_AMT_J ,0) ACCL_COST_AMT_J                                                                   	                 
			,	DECODE(A.ESTM_COST_AMT_K,NULL,DECODE(A.ACT_COST_AMT_K,NULL,DECODE(A.ACCL_COST_AMT_K,NULL,'I')),'U') IBFLAG_K                
			,	NVL(A.ESTM_COST_AMT_K ,0) ESTM_COST_AMT_K                                                                   		             
			,	NVL(A.ACT_COST_AMT_K  ,0) ACT_COST_AMT_K                                                                    		             
			,	NVL(A.ACCL_COST_AMT_K ,0) ACCL_COST_AMT_K                                                                   	                 
FROM 		(SELECT		EXE_YRMON                                                                     		                                 
								,	REV_YRMON                                                                                                             
								,	SUM(DECODE(REP_ACCT_CD,'512073',ESTM_COST_AMT))       ESTM_COST_AMT_A                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512073',PRE_ACT_COST_AMT))    ACT_COST_AMT_A                                                  
								,	SUM(DECODE(REP_ACCT_CD,'512073',ACCL_COST_AMT))       ACCL_COST_AMT_A                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512019',ESTM_COST_AMT))       ESTM_COST_AMT_B                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512019',PRE_ACT_COST_AMT))    ACT_COST_AMT_B                                                  
								,	SUM(DECODE(REP_ACCT_CD,'512019',ACCL_COST_AMT))       ACCL_COST_AMT_B                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512351',ESTM_COST_AMT))       ESTM_COST_AMT_C                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512351',PRE_ACT_COST_AMT))    ACT_COST_AMT_C                                                  
								,	SUM(DECODE(REP_ACCT_CD,'512351',ACCL_COST_AMT))       ACCL_COST_AMT_C                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512361',ESTM_COST_AMT))       ESTM_COST_AMT_D                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512361',PRE_ACT_COST_AMT))    ACT_COST_AMT_D                                                  
								,	SUM(DECODE(REP_ACCT_CD,'512361',ACCL_COST_AMT))       ACCL_COST_AMT_D                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512061',ESTM_COST_AMT))       ESTM_COST_AMT_F                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512061',PRE_ACT_COST_AMT))    ACT_COST_AMT_F                                                  
								,	SUM(DECODE(REP_ACCT_CD,'512061',ACCL_COST_AMT))       ACCL_COST_AMT_F                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512151',ESTM_COST_AMT))       ESTM_COST_AMT_G                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512151',PRE_ACT_COST_AMT))    ACT_COST_AMT_G                                                  
								,	SUM(DECODE(REP_ACCT_CD,'512151',ACCL_COST_AMT))       ACCL_COST_AMT_G                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512221',ESTM_COST_AMT))       ESTM_COST_AMT_H                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512221',PRE_ACT_COST_AMT))    ACT_COST_AMT_H                                                  
								,	SUM(DECODE(REP_ACCT_CD,'512221',ACCL_COST_AMT))       ACCL_COST_AMT_H                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512341',ESTM_COST_AMT))       ESTM_COST_AMT_I                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512341',PRE_ACT_COST_AMT))    ACT_COST_AMT_I                                                  
								,	SUM(DECODE(REP_ACCT_CD,'512341',ACCL_COST_AMT))       ACCL_COST_AMT_I                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512181',ESTM_COST_AMT))       ESTM_COST_AMT_J                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512181',PRE_ACT_COST_AMT))    ACT_COST_AMT_J                                                  
								,	SUM(DECODE(REP_ACCT_CD,'512181',ACCL_COST_AMT))       ACCL_COST_AMT_J                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512381',ESTM_COST_AMT))       ESTM_COST_AMT_K                                                 
								,	SUM(DECODE(REP_ACCT_CD,'512381',PRE_ACT_COST_AMT))    ACT_COST_AMT_K                                                  
								,	SUM(DECODE(REP_ACCT_CD,'512381',ACCL_COST_AMT))       ACCL_COST_AMT_K                                                 
				FROM			(SELECT		A.EXE_YRMON                                          																					                                                            
													,	A.REV_YRMON                                                                                                   
													,	B.REP_ACCT_CD    REP_ACCT_CD                                       
													,	B.ACCT_CD                                                                                
													,	A.ESTM_COST_AMT                                                                                               
													,	A.PRE_ACT_COST_AMT                                                                                            
													,	A.ACCL_COST_AMT                                                                                               
									FROM			LEA_ACCT_COST_AMT 	A
													,	(SELECT 	DISTINCT(ACCT_CD)   		ACCT_CD                                  
																		,	REP_ACCT_CD                                                  
																		,	ACCL_AUTO_CD                                                 
														FROM 			LEA_LGS_COST                                                    
														WHERE 		ACCL_AUTO_CD = 'M'                                             
														UNION ALL                                                            
														SELECT DISTINCT(OTR_CRR_ACCT_CD) 	ACCT_CD                              
																		,	OTR_CRR_REP_ACCT_CD 		REP_ACCT_CD                               
																		,	'M' 										ACCL_AUTO_CD                                              
														FROM 			LEA_LGS_COST                                                    
														WHERE 		ACCL_AUTO_CD IS NOT NULL                                       
														AND 			OTR_CRR_ACCT_CD IS NOT NULL                                      
														) B                                                                                               
									WHERE   	A.ACCT_CD = B.ACCT_CD                                                                                         
									AND     	A.EXE_YRMON  = REPLACE(@[frm_exe_yrmon],'-')                                                                         
									AND     	A.REV_YRMON >= REPLACE(@[frm_rev_yrmon_from],'-')                                                                         
									AND     	A.REV_YRMON <= REPLACE(@[frm_rev_yrmon_to],'-')                                                                         
									AND     	A.ACCL_AUTO_CD = 'M'                                               
									--AND     A.ACCL_AUTO_CD = B.ACCL_AUTO_CD                                                                                          
									AND     	B.REP_ACCT_CD IN ('512073','512351','512361', '512019', '512061','512151','512221','512341','512181','512381') 
                  )                                                                                                                       
				GROUP BY 	EXE_YRMON 
						,	REV_YRMON                                                                                               
				)A
			,	(SELECT  EXE_YRMON, REV_YRMON                                                                                                
     			FROM	(SELECT  	REPLACE(@[frm_exe_yrmon]		,'-') EXE_YRMON                                          		                                      
								,	REPLACE(@[frm_rev_yrmon_from]	,'-') REV_YRMON                                             		                                      
         				FROM		DUAL

			#foreach( ${eachrevyrmon} in ${arrrevmonthorder}) 
				UNION ALL
				SELECT	REPLACE(@[frm_exe_yrmon]		,'-') EXE_YRMON 
					,	TO_CHAR(ADD_MONTHS(TO_DATE(REPLACE(@[frm_rev_yrmon_from],'-'),'YYYYMM'),${eachrevyrmon}),'YYYYMM') REV_YRMON                                
				FROM	DUAL
			#end

			)                                                                                                                       
		) B                                                                                                                         
	WHERE 		A.EXE_YRMON(+) 		= B.EXE_YRMON                                                                                               
	AND   		A.REV_YRMON(+) 		= B.REV_YRMON                                                                                               
	ORDER BY 	B.EXE_YRMON
			,	B.REV_YRMON			]]></sql>
			<params>
				<param name="frm_exe_yrmon" type="12" value="1" out="N"/>
				<param name="frm_rev_yrmon_from" type="12" value="1" out="N"/>
				<param name="frm_rev_yrmon_to" type="12" value="1" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
