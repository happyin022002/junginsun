<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MarineTerminalStorageInvoiceManageDBDAOVerifyStorageInvoiceCostByPoolRSQL">
			<desc><![CDATA[VerifyStorageInvoiceCostByPool]]></desc>
			<sql><![CDATA[
SELECT 'I' IBFLAG, 'A' CALC_TP_CD, 'SP' CALC_COST_GRP_CD,

#if (${mode} == 'M') 
		'M' FP_CALC_PRD_CD,
#else 
		'D' FP_CALC_PRD_CD,
#end

        NVL(CALC.LGS_COST_CD,'SRNDMT') LGS_COST_CD, NVL(CALC.LGS_COST_CD,'SRNDMT') LGS_COST_CD2,
        ORG.WRK_DT, ORG.INV_VOL_QTY, C.ACCT_CD, CALC.M_DATE,
        NVL(CALC.TML_AGMT_OFC_CTY_CD,AGMT.TML_AGMT_OFC_CTY_CD) TML_AGMT_OFC_CTY_CD,
        NVL(CALC.TML_AGMT_SEQ,AGMT.TML_AGMT_SEQ) TML_AGMT_SEQ,
        NVL(CALC.TML_AGMT_VER_NO,AGMT.TML_AGMT_VER_NO) TML_AGMT_VER_NO,
        NVL(CALC.FP_TEU_QTY,AGMT.FP_TEU_QTY) FP_TEU_QTY,
        NVL(CALC.UOM,AGMT.UOM) VOL_TR_UT_CD,
        NVL(CALC.AGMT_UT_RT,AGMT.AGMT_UT_RT) CTRT_RT,
        NVL(NVL(CALC.OVR_VOL_QTY,AGMT.OVR_VOL_QTY) * NVL(CALC.AGMT_UT_RT,AGMT.AGMT_UT_RT),0) INV_AMT,
        NVL(NVL(CALC.OVR_VOL_QTY,AGMT.OVR_VOL_QTY) * NVL(CALC.AGMT_UT_RT,AGMT.AGMT_UT_RT),0) CALC_AMT,
        NVL(CALC.STACKING_VOL,0) STK_VOL_QTY, NVL(CALC.STACKING_VOL,0) - NVL(ORG.INV_VOL_QTY,0) DIFF_VOL_QTY,
        DECODE(SIGN(NVL(CALC.OVR_VOL_QTY,AGMT.OVR_VOL_QTY)),-1,0,0,0,NVL(CALC.OVR_VOL_QTY,AGMT.OVR_VOL_QTY)) OVR_VOL_QTY,
  	     NVL(CALC.CURR_CHK,AGMT.CURR_CHK) CURR_CHK, NVL(CALC.CURR_CD,AGMT.CURR_CD) CURR_CD, 1 INV_XCH_RT
 FROM ( SELECT 'SRNDMT' LGS_COST_CD,

#if (${mode} == 'M') 
		SUBSTR(STAY_SMRY_DT,0,6) M_Date,
#else 
		SUBSTR(STAY_SMRY_DT,0,8) M_Date,
#end

               SUM(DECODE(M.CNTR_TPSZ_CD,'D7',CNTR_KNT_QTY,0))*2.25+
               SUM(DECODE(M.CNTR_TPSZ_CD,'D8',CNTR_KNT_QTY,0))*2.4+
               SUM(DECODE(M.CNTR_TPSZ_CD,'D9',CNTR_KNT_QTY,0))*2.4+
               SUM(DECODE(M.CNTR_TPSZ_CD,'DW',CNTR_KNT_QTY,0))*2.65+
               SUM(DECODE(M.CNTR_TPSZ_CD,'DX',CNTR_KNT_QTY,0))*2.25+
               SUM(DECODE(M.CNTR_TPSZ_CD,'D7',0,'D8',0,'D9',0,'DW',0,'DX',0,DECODE(SUBSTR(M.CNTR_TPSZ_CD,2,1),2,M.CNTR_KNT_QTY,0)))+
               SUM(DECODE(M.CNTR_TPSZ_CD,'D7',0,'D8',0,'D9',0,'DW',0,'DX',0,DECODE(SUBSTR(M.CNTR_TPSZ_CD,2,1),2,0,M.CNTR_KNT_QTY*2))) Stacking_Vol,
               P.INV_VOL_QTY,
               D.FP_TEU_QTY,
               DECODE(SIGN(P.INV_VOL_QTY - D.FP_TEU_QTY),-1,0,0,0,(P.INV_VOL_QTY - D.FP_TEU_QTY)) OVR_VOL_QTY, --P.INV_VOL_QTY - D.FP_TEU_QTY OVR_VOL_QTY,
               D.TML_AGMT_VOL_UT_CD UOM,
               D.AGMT_UT_RT, H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
               ( P.INV_VOL_QTY - D.FP_TEU_QTY ) * D.AGMT_UT_RT Amount,
  	            DECODE(@[curr_cd],D.CURR_CD,'Y','N') CURR_CHK, D.CURR_CD
        FROM   TES_EQ_LAND_STAY M, TES_TML_AGMT_HDR H, TES_TML_AGMT_DTL D, TES_FILE_IMP_TMP P
  	    WHERE  M.STAY_SMRY_DT  >= DECODE(@[mode],'D',P.WRK_DT,P.WRK_DT||'01')
  	    AND    M.STAY_SMRY_DT  <= DECODE(@[mode],'D',P.WRK_DT,TO_CHAR(LAST_DAY(TO_DATE(P.WRK_DT,'YYYYMM')),'YYYYMMDD'))
        AND    M.CNTR_FULL_FLG <> 'Y'
  	    AND    P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
  	    AND    P.TML_SO_SEQ    = @[tml_so_seq]
        AND    M.YD_CD         = P.YD_CD
        AND    M.YD_CD         = H.YD_CD
        AND    H.VNDR_SEQ      = P.VNDR_SEQ
        AND    H.TML_AGMT_STS_CD = 'C'
        AND    H.DELT_FLG        = 'N'
        AND    H.TML_AGMT_VER_NO = ( SELECT MAX(M.TML_AGMT_VER_NO)
                                     FROM   TES_TML_AGMT_HDR M
                                     WHERE  M.YD_CD               = P.YD_CD
                                     AND    M.VNDR_SEQ            = P.VNDR_SEQ
                                     AND    M.TML_AGMT_STS_CD     = 'C'
                                     AND    M.DELT_FLG            = 'N'
                                     AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= P.FM_PRD_DT
                                     AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= P.TO_PRD_DT )
        AND    H.TML_AGMT_OFC_CTY_CD = D.TML_AGMT_OFC_CTY_CD(+)
        AND    H.TML_AGMT_SEQ        = D.TML_AGMT_SEQ(+)
        AND    H.TML_AGMT_VER_NO     = D.TML_AGMT_VER_NO(+)
        AND    D.TML_AGMT_TP_CD      = 'S'
        AND    D.AUTO_CALC_FLG       = 'Y'
        AND    D.LGS_COST_CD         = 'SRNDMT'
        AND    D.TML_STO_AGMT_TP_CD  = 'FP'

#if (${mode} == 'M') 
  	     AND    D.FP_CALC_PRD_CD      = 'M'
  	     GROUP BY SUBSTR(STAY_SMRY_DT,0,6), P.INV_VOL_QTY,
  		  	      H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
  			      D.FP_TEU_QTY, D.TML_AGMT_VOL_UT_CD, D.AGMT_UT_RT, D.CURR_CD
#else 
  	     AND    D.FP_CALC_PRD_CD      = 'D'
  	     GROUP BY STAY_SMRY_DT, P.INV_VOL_QTY,
  		  	      H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
  			      D.FP_TEU_QTY, D.TML_AGMT_VOL_UT_CD, D.AGMT_UT_RT, D.CURR_CD
#end

  		) CALC, TES_LGS_COST C,
       ( SELECT WRK_DT, INV_VOL_QTY
         FROM   TES_FILE_IMP_TMP
         WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
         AND    TML_SO_SEQ = @[tml_so_seq] ) ORG,
       ( SELECT T.WRK_DT, T.INV_VOL_QTY, D.FP_TEU_QTY, D.TML_AGMT_VOL_UT_CD UOM, D.AGMT_UT_RT,
                DECODE('USD',D.CURR_CD,'Y','N') CURR_CHK, D.CURR_CD,
                H.TML_AGMT_OFC_CTY_CD, H.TML_AGMT_SEQ, H.TML_AGMT_VER_NO,
                DECODE(SIGN(T.INV_VOL_QTY - D.FP_TEU_QTY),-1,0,0,0,(T.INV_VOL_QTY - D.FP_TEU_QTY)) OVR_VOL_QTY
         FROM   TES_FILE_IMP_TMP T, TES_TML_AGMT_HDR H, TES_TML_AGMT_DTL D
         WHERE  T.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
         AND    T.TML_SO_SEQ = @[tml_so_seq]
         AND    H.VNDR_SEQ      = T.VNDR_SEQ
         AND    H.TML_AGMT_STS_CD = 'C'
         AND    H.DELT_FLG        = 'N'
         AND    H.TML_AGMT_VER_NO = ( SELECT MAX(M.TML_AGMT_VER_NO)
                                      FROM   TES_TML_AGMT_HDR M
                                      WHERE  M.YD_CD               = T.YD_CD
                                      AND    M.VNDR_SEQ            = T.VNDR_SEQ
                                      AND    M.TML_AGMT_STS_CD     = 'C'
                                      AND    M.DELT_FLG            = 'N'
                                      AND    TO_CHAR(M.EFF_FM_DT,'YYYYMMDD') <= T.FM_PRD_DT
                                      AND    TO_CHAR(M.EFF_TO_DT,'YYYYMMDD') >= T.TO_PRD_DT )
         AND    H.TML_AGMT_OFC_CTY_CD = D.TML_AGMT_OFC_CTY_CD(+)
         AND    H.TML_AGMT_SEQ        = D.TML_AGMT_SEQ(+)
         AND    H.TML_AGMT_VER_NO     = D.TML_AGMT_VER_NO(+)
         AND    D.TML_AGMT_TP_CD      = 'S'
         AND    D.AUTO_CALC_FLG       = 'Y'
         AND    D.LGS_COST_CD         = 'SRNDMT'
         AND    D.TML_STO_AGMT_TP_CD  = 'FP'
-- 20091228 FILE IMPORT 시  월,일별로 나누어서 처리해야함 
#if (${mode} == 'M') 
         AND    D.FP_CALC_PRD_CD      = 'M' ) AGMT
#else
		 AND    D.FP_CALC_PRD_CD      = 'D' ) AGMT
#end
 WHERE  ORG.WRK_DT      = CALC.M_DATE(+)
 AND    ORG.INV_VOL_QTY = CALC.INV_VOL_QTY(+)
 AND    ORG.WRK_DT      = AGMT.WRK_DT(+)
 AND    ORG.INV_VOL_QTY = AGMT.INV_VOL_QTY(+)
 AND    CALC.LGS_COST_CD= C.LGS_COST_CD(+)
ORDER BY ORG.WRK_DT ASC			]]></sql>
			<params>
				<param name="curr_cd" type="12" value="" out="N"/>
				<param name="mode" type="12" value="" out="N"/>
				<param name="tml_so_ofc_cty_cd" type="12" value="" out="N"/>
				<param name="tml_so_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
