<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RailSoManageDBDAOSearchRailSoCorrectionTargetListRSQL">
			<desc><![CDATA[SO 발행 된 건들에 대한 조회 SQL]]></desc>
			<sql><![CDATA[
SELECT TM1.*
      ,CASE WHEN (SUBSTR(TM1.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(TM1.TO_NOD_CD, 1, 2) = 'CA') AND TM1.VLD_CHK = 'N' AND TM1.DCGO_FLG = 'Y' THEN 'N'
            ELSE 'Y'
       END VLD_FLG
      ,CASE (SELECT BB.DCGO_FLG FROM BKG_BOOKING BB WHERE BB.BKG_NO = TM1.BKG_NO)
         WHEN 'Y' THEN
          (SELECT COUNT(*)
             FROM BKG_CONTAINER BC
                 ,BKG_DG_CGO    CG
            WHERE 1 = 1
              AND BC.BKG_NO = CG.BKG_NO
              AND BC.CNTR_NO = CG.CNTR_NO
              AND BC.BKG_NO = TM1.BKG_NO
              AND BC.DCGO_FLG = 'Y')
         ELSE 0
       END BKG_ATT_DG_CNT
	  ,REGEXP_REPLACE(BKG_CNTR_SPCL, '.{1}$') spcl_cgo_cntr_tp_cd
	  ,(SELECT LOC_NM FROM MDM_LOCATION  WHERE LOC_CD = POLDEL_CD AND NVL(DELT_FLG, 'N') <> 'Y') POLDEL_CD_NM
	FROM (
SELECT /*+ ORDERED */
    TMP.TRSP_SO_OFC_CTY_CD,
    TMP.TRSP_SO_SEQ,
    TMP.BIL_ISS_KNT,
	MAX(TMP.BIL_ISS_STS_CD) BIL_ISS_STS_CD,
    MAX(
         CASE WHEN (TMP.TRSP_SO_STS_CD = 'I' AND TMP.BKG_NO_RVIS_FLG IS NOT NULL AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND DECODE(TMP.CGO_TP_CD, 'F', TMP.POL_NOD_CD, 'M', TMP.TO_NOD_CD||TMP.TO_NOD_YARD) = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND TMP.BKG_NO_RVIS_FLG IS NOT NULL AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND DECODE(TMP.CGO_TP_CD, 'F', TMP.POL_NOD_CD, 'M', TMP.TO_NOD_CD||TMP.TO_NOD_YARD) = 'USLAXYM')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLAXYM')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLAXYM')THEN
                                                                                                CASE WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) = 'A' THEN DECODE(TMP.BKG_NO, SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 2) + 1), 'Y', 'N') 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) = 'N' THEN 'N' 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL AND SUBSTR(TMP.WO, 1, INSTR(TMP.WO, '$', 1, 1) - 1) IS NOT NULL THEN DECODE(TMP.BKG_NO, SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 2) + 1), 'Y', 'N') 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL AND SUBSTR(TMP.WO, 1, INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL THEN 'N' 
                                                                                                     ELSE '' 
                                                                                                END 
			  WHEN ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLGBPT')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLAXYM')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLGBPT')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLAXYM') THEN
                                                                                                CASE WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) = 'N' THEN 'N' 
                                                                                                     WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) IS NULL AND SUBSTR(TMP.REWO, 1, INSTR(TMP.REWO, '$', 1, 1) - 1) IS NOT NULL THEN 'Y'
                                                                                                     WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) IS NULL AND SUBSTR(TMP.REWO, 1, INSTR(TMP.REWO, '$', 1, 1) - 1) IS NULL THEN 'N' 
                                                                                                     ELSE '' 
                                                                                                END 
             ELSE '' 
        END 
       ) EDI_RESENT,
    MAX(CASE WHEN (TMP.TRSP_SO_STS_CD = 'I' AND TMP.BKG_NO_RVIS_FLG IS NOT NULL AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND DECODE(TMP.CGO_TP_CD, 'F', TMP.POL_NOD_CD, 'M', TMP.TO_NOD_CD||TMP.TO_NOD_YARD) = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND TMP.BKG_NO_RVIS_FLG IS NOT NULL AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND DECODE(TMP.CGO_TP_CD, 'F', TMP.POL_NOD_CD, 'M', TMP.TO_NOD_CD||TMP.TO_NOD_YARD) = 'USLAXYM')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLAXYM')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLAXYM')THEN
                                                                                                CASE WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) = 'A' THEN DECODE(TMP.BKG_NO, SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 2) + 1), 'N', 'Y') 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) = 'N' THEN 'Y' 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL AND SUBSTR(TMP.WO, 1, INSTR(TMP.WO, '$', 1, 1) - 1) IS NOT NULL THEN DECODE(TMP.BKG_NO, SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 2) + 1), 'N', 'Y') 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL AND SUBSTR(TMP.WO, 1, INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL THEN 'Y' 
                                                                                                     ELSE 'X' 
                                                                                                END 
			  WHEN ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLGBPT')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLAXYM')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLGBPT')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLAXYM') THEN
                                                                                                CASE WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) = 'N' THEN 'Y' 
                                                                                                     WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) IS NULL AND SUBSTR(TMP.REWO, 1, INSTR(TMP.REWO, '$', 1, 1) - 1) IS NOT NULL THEN 'N'
                                                                                                     WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) IS NULL AND SUBSTR(TMP.REWO, 1, INSTR(TMP.REWO, '$', 1, 1) - 1) IS NULL THEN 'Y' 
                                                                                                     ELSE 'X' 
                                                                                                END 
             ELSE 'X' 
        END 
       ) EDI_RESEND_TARGET_FLAG,
    MAX(TMP.BLK_FLG) BLK_FLG,
    MAX(TMP.STEL_WIRE_FLG) STEL_WIRE_FLG,
    MAX(TMP.COIL_SHP_FLG) COIL_SHP_FLG,
    MAX(TMP.FUMG_FLG) FUMG_FLG,
    MAX(TMP.COP_NO) COP_NO,
    MAX(TMP.STATUS) STATUS,
    MAX(TMP.COST_ACT_GRP_SEQ) COST_ACT_GRP_SEQ,
    MAX(TMP.EQ_NO) EQ_NO,
    MAX(TMP.EQ_TPSZ_CD) EQ_TPSZ_CD,
    MAX(TMP.REPO_PLN_ID) REPO_PLN_ID,
    MAX(TMP.PLN_YRWK) PLN_YRWK,
    MAX(TMP.REF_SEQ) REF_SEQ,
    MAX(TMP.REF_ID) REF_ID,
    MAX(TMP.CGO_TP_CD) CGO_TP_CD,
    MAX(TMP.TRSP_BND_CD) TRSP_BND_CD,
    MAX(TMP.CXL_RQST_FLG) CXL_RQST_FLG,
    MAX(TMP.THROUGH) THROUGH,
    MAX(TMP.TRSP_RAIL_BIL_TP_CD) TRSP_RAIL_BIL_TP_CD,
    MAX(TMP.IBD_IPI_LOCL_IND_CD) IBD_IPI_LOCL_IND_CD,
    MAX(TMP.BL_NO) BL_NO,
    MAX(SUBSTR(TMP.BKG, 1, 1)) BKG_STS_CD,
    MAX(NVL(TMP.BKG_RCVDE_TERM_CD, DECODE(TMP.TRSP_BND_CD , 
            'I', SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 1) + 1, INSTR(TMP.BKG, '$', 1, 2) - INSTR(TMP.BKG, '$', 1, 1) - 1), 
            'O', SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 2) + 1, INSTR(TMP.BKG, '$', 1, 3) - INSTR(TMP.BKG, '$', 1, 2) - 1)) )) BKG_RCVDE_TERM_CD,
    MAX(DECODE(TMP.BIL_ISS_STS_CD , 'I', SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 2) + 1), TMP.BKG_NO)) BKG_NO,
    MAX(TMP.REVISED_BKG_NO) REVISED_BKG_NO,
    MAX(TMP.PODPOR_CD) PODPOR_CD,
    MAX(TMP.PODPOR_YARD) PODPOR_YARD,
    MAX(TMP.FM_NOD_CD) FM_NOD_CD,
    MAX(TMP.FM_NOD_YARD) FM_NOD_YARD,
    MAX(TMP.TO_NOD_CD) TO_NOD_CD,
    MAX(TMP.TO_NOD_YARD) TO_NOD_YARD,
    MAX(TMP.ORG_FM_NOD_CD) ORG_FM_NOD_CD,
    MAX(TMP.ORG_FM_NOD_YARD) ORG_FM_NOD_YARD,
    MAX(TMP.ORG_TO_NOD_CD) ORG_TO_NOD_CD,
    MAX(TMP.ORG_TO_NOD_YARD) ORG_TO_NOD_YARD,
    MAX(TMP.POLDEL_CD) POLDEL_CD,
    MAX(TMP.POLDEL_YARD) POLDEL_YARD,
    MAX(TMP.POL_CD) POL_CD,
    MAX(TMP.IBD_CSTMS_CLR_LOC_CD) IBD_CSTMS_CLR_LOC_CD,
	MAX(TMP.CND_CSTMS_CLR_FLG) CND_CSTMS_CLR_FLG,
    MAX(TMP.EDI) IBD_NO,
    CASE WHEN MAX(NVL(TMP.TRUNKVVD, 'N/A')) = MAX(NVL(SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 3) - INSTR(TMP.BKG, '$', 1, 4), INSTR(TMP.BKG, '$', 1, 2) - INSTR(TMP.BKG, '$', 1, 3)), 'N/A')) THEN 'N'
         ELSE 'Y' 
    END UNMATCH_VVD,
    CASE WHEN MAX(NVL(TMP.POD_CD, 'N/A')) = MAX(NVL(SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 4) - INSTR(TMP.BKG, '$', 1, 5), INSTR(TMP.BKG, '$', 1, 3) - INSTR(TMP.BKG, '$', 1, 4)), 'N/A')) THEN 'N'
         ELSE 'Y' 
    END UNMATCH_POD,
    MAX(TMP.TRUNKVVD) TRUNKVVD,
    MAX(SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 3) - INSTR(TMP.BKG, '$', 1, 4), INSTR(TMP.BKG, '$', 1, 2) - INSTR(TMP.BKG, '$', 1, 3))) TRUNKVVD_REVISED,
    MAX(TMP.POD_CD) POD_CD,
    MAX(SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 4) - INSTR(TMP.BKG, '$', 1, 5), INSTR(TMP.BKG, '$', 1, 3) - INSTR(TMP.BKG, '$', 1, 4))) POD_CD_REVISED,
    MAX(SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 5) + 1)) BKG_SPE,
    LISTAGG(TMP.VNDR_ABBR_NM, ' / ') WITHIN GROUP(ORDER BY TMP.SUB_RAIL_SEQ) VNDR_ABBR_NM,
    MAX(TMP.REQUEST_SP) REQUEST_SP,
	LISTAGG(TMP.VNDR_SEQ, ' / ') WITHIN GROUP(ORDER BY TMP.SUB_RAIL_SEQ) VNDR_SEQ,
    '' COST_MONTH,
    MAX(TMP.CRE_DT) CRE_DT,
    MAX(TMP.CRE_DT_HMS) CRE_DT_HMS,
    MAX(DECODE(TMP.TRSP_BND_CD, 'O', SUBSTR(TMP.BKG_UPD, 1, INSTR(TMP.BKG_UPD, '$', 1, 1) - 1), '')) BKG_UPDATED_DT,
	MAX(DECODE(TMP.TRSP_BND_CD, 'O', SUBSTR(TMP.BKG_UPD, INSTR(TMP.BKG_UPD, '$', 1, 1) + 1), '')) BKG_UPDATED_DT_HMS,
    MAX(TMP.CXL_RQST_DT) CXL_RQST_DT,
    MAX(TMP.CXL_RQST_DT_HMS) CXL_RQST_DT_HMS,    
    MAX(TMP.CXL_RQST_RSN) CXL_RQST_RSN,
    MAX(TMP.CXL_RQST_RJCT_DT) CXL_RQST_RJCT_DT,
    MAX(TMP.CXL_RQST_RJCT_DT_HMS) CXL_RQST_RJCT_DT_HMS,
    MAX(TMP.RQST_RJCT_RSN) RQST_RJCT_RSN,
    MAX(DECODE(TMP.CGO_TP_CD, 'M', TMP.INTER_RMK, 'F', DECODE(TMP.INTER_RMK_CHK, '', '', 'Y'))) INTER_RMK,
    MAX(TMP.SPCL_INSTR_RMK) SPCL_INSTR_RMK,
    MAX(TMP.ROUT_ORG_NOD_CD) ROUT_ORG_NOD_CD,
    MAX(TMP.ROUT_DEST_NOD_CD) ROUT_DEST_NOD_CD,
    MAX(TMP.ROUT_SEQ) ROUT_SEQ,
    MAX(TMP.MSG) ERR_DESC,
    MAX(TMP.ROUT_PLN_CD) ROUT_PLN_CD,
    MAX(TMP.INLND_ROUT_RMK) INLND_ROUT_RMK,
    MAX(TMP.INV_BIL_PATT_DIV_FLG) INV_BIL_PATT_DIV_FLG,
    MAX(TMP.RAIL_CMB_THRU_TP_CD) RAIL_CMB_THRU_TP_CD,
    MAX(DECODE(TMP.SUB_RAIL_SEQ, 1 , AGMT.AGMT_REF_NO) || DECODE(TMP.VNDR_SET_TO_NOD_CD, NULL, '' , TMP.TO_NOD_CD||TMP.TO_NOD_YARD, '', ' / ')) || 
    MAX(DECODE(TMP.SUB_RAIL_SEQ, 2 , AGMT.AGMT_REF_NO) || DECODE(TMP.VNDR_SET_TO_NOD_CD, NULL, '' , TMP.TO_NOD_CD||TMP.TO_NOD_YARD, '', ' / ')) || 
    MAX(DECODE(TMP.SUB_RAIL_SEQ, 3 , AGMT.AGMT_REF_NO)) REF_NO,
    MAX(TMP.MDM_CO) CMDT_NAME,
    MAX(TMP.CNTR_WGT) CNTR_WGT,
	MAX(TMP.ACT_GRP_CD) ACT_GRP_CD,
    MAX(DECODE(TMP.TRSP_BND_CD, 'I', (SELECT NVL(BAY.VSL_BAY_NO || BAY.VSL_ROW_NO || BAY.VSL_TR_NO, '')
         FROM OPF_BAY_PLN_LDIS BAY
             ,BKG_VVD          VVD
        WHERE BAY.VSL_CD = BAY.VSL_CD
          AND BAY.SKD_VOY_NO = VVD.SKD_VOY_NO
          AND BAY.SKD_DIR_CD = VVD.SKD_DIR_CD
          AND BAY.VPS_PORT_CD = VVD.VSL_CD
          AND VVD.BKG_NO = TMP.BKG_NO
          AND BAY.VSL_CD = SUBSTR(TMP.TRUNKVVD, 1, 4)
          AND BAY.SKD_VOY_NO = SUBSTR(TMP.TRUNKVVD, 5, 4)
          AND BAY.SKD_DIR_CD = SUBSTR(TMP.TRUNKVVD, 9, 1)
          AND BAY.VPS_PORT_CD = SUBSTR(TMP.POD_CD, 1, 5)
          AND BAY.CLPT_IND_SEQ = VVD.POD_CLPT_IND_SEQ
          AND BAY.CNTR_REF_NO = TMP.EQ_NO
          AND BAY.LODG_DCHG_IND_CD = 'D'), '')) STWG,
   MAX(TMP.BLCK_STWG_CD) BLCK_STWG_CD,
   CASE WHEN MAX(CGO_TP_CD) <> 'M' THEN MAX(TMP.STCC_CD) END STCC_CD,
   CASE WHEN MAX(CGO_TP_CD) <> 'M' THEN MAX(TMP.STCC_DESC) END STCC_DESC,
   MAX(OVERWEIGHT) OVERWEIGHT,
   MAX(TMP.CNMV_STS_CD) CNMV_STS_CD,
   MAX(TMP.CRNT_YD_CD) CRNT_YD_CD,
   MAX(TMP.CNMV_DT) CNMV_DT,
   CASE WHEN MAX(TMP.CGO_TP_CD) = 'F' THEN '1' ELSE '0' END POP_IMG,
   MAX(dg.DCGO_SEQ) DCGO_SEQ,
   MAX(DG.DECL_NM) DECL_NM,
   MAX(DG.VLD_CHK) VLD_CHK,
   MAX(TMP.DCGO_FLG) BKG_DCGO_FLG,
   MAX(TMP.CNTR_DCGO_FLG) DCGO_FLG,
   MAX(DG.DG_CNTR_SEQ) DG_CNTR_SEQ,
   MAX(TMP.UPLN_SO_FLG) UPLN_SO_FLG,
   MAX(TMP.RAIL_BLK_CD) RAIL_BLK_CD,
   MAX(TMP.BKG_CNTR_SPCL) BKG_CNTR_SPCL,
   MAX(TMP.TRSP_SO_STS_CD) TRSP_SO_STS_CD,
   MAX(TMP.TRSP_FRST_FLG) TRSP_FRST_FLG,
   MAX(TMP.INTERCHANGE1_LOC) INTERCHANGE1_LOC,
   MAX(TMP.INTERCHANGE1_NOD) INTERCHANGE1_NOD,
   MAX(TMP.INTERCHANGE2_LOC) INTERCHANGE2_LOC,
   MAX(TMP.INTERCHANGE2_NOD) INTERCHANGE2_NOD,
   MAX(TMP.ORG_INTERCHANGE1_LOC) ORG_INTERCHANGE1_LOC,
   MAX(TMP.ORG_INTERCHANGE1_NOD) ORG_INTERCHANGE1_NOD,
   MAX(TMP.ORG_INTERCHANGE2_LOC) ORG_INTERCHANGE2_LOC,
   MAX(TMP.ORG_INTERCHANGE2_NOD) ORG_INTERCHANGE2_NOD
FROM
(
    SELECT
        X.*
        ,(
            SELECT NVL(C.BIL_EDI_RSND_DT, '') || '$' || NVL(C.BIL_EDI_RSND_RCV_RSLT_CD, '') || '$' || NVL(C.BKG_NO, '')
            FROM TRS_TRSP_EDI_RAIL_ORD C WHERE X.TRSP_SO_OFC_CTY_CD = C.TRSP_SO_OFC_CTY_CD AND   X.TRSP_SO_SEQ = C.TRSP_SO_SEQ AND   X.BIL_ISS_KNT = C.BIL_ISS_KNT
        ) WO
		,(
            SELECT NVL(C1.BIL_EDI_RSND_DT, '') || '$' || NVL(C1.BIL_EDI_RSND_RCV_RSLT_CD, '')
            FROM TRS_TRSP_EDI_RAIL_ORD_RSND C1 WHERE X.TRSP_SO_OFC_CTY_CD = C1.TRSP_SO_OFC_CTY_CD AND   X.TRSP_SO_SEQ = C1.TRSP_SO_SEQ
        ) REWO
        ,( SELECT EDI.IBD_TRSP_NO FROM BKG_CSTMS_ADV_IBD EDI WHERE X.BL_NO = EDI.BL_NO ) EDI
        ,(SELECT DECODE(X.SUB_RAIL_SEQ, 1, V.VNDR_ABBR_NM) VNDR_ABBR_NM FROM MDM_VENDOR V WHERE X.VNDR_SEQ = V.VNDR_SEQ ) VNDR
        ,(
            SELECT
                CASE WHEN X.TRSP_RAIL_BIL_TP_CD = 'W' AND X.TRSP_SO_STS_CD = 'C' AND X.DELT_FLG ='N' AND X.SPND_FLG ='N' THEN 'GOOD/EDI Failure' 
                     ELSE REPLACE(Z.ERR_DESC, CHR(13)||CHR(10), ' ') 
                END ERR_DESC
            FROM COM_ERR_MSG Z WHERE X.SPND_ERR_MSG_CD = Z.ERR_MSG_CD AND   X.SPND_LANG_TP_CD = Z.LANG_TP_CD
        ) MSG
		,( SELECT MAX(TO_CHAR(SKD.EVNT_DT, 'YYYYMMDD')) || '$' || MAX(TO_CHAR(SKD.EVNT_DT, 'HH24:MI:SS')) FROM BKG_HIS_MST SKD WHERE X.BKG_NO = SKD.BKG_NO ) BKG_UPD
        ,SUBSTR(X.INTERCHANGE1_NOD_CD, 1, 5) AS INTERCHANGE1_LOC
        ,SUBSTR(X.INTERCHANGE1_NOD_CD, 6, 2) AS INTERCHANGE1_NOD
        ,SUBSTR(X.INTERCHANGE2_NOD_CD, 1, 5) AS INTERCHANGE2_LOC
        ,SUBSTR(X.INTERCHANGE2_NOD_CD, 6, 2) AS INTERCHANGE2_NOD
        ,SUBSTR(X.INTERCHANGE1_NOD_CD, 1, 5) AS ORG_INTERCHANGE1_LOC
        ,SUBSTR(X.INTERCHANGE1_NOD_CD, 6, 2) AS ORG_INTERCHANGE1_NOD
        ,SUBSTR(X.INTERCHANGE2_NOD_CD, 1, 5) AS ORG_INTERCHANGE2_LOC
        ,SUBSTR(X.INTERCHANGE2_NOD_CD, 6, 2) AS ORG_INTERCHANGE2_NOD
    FROM
        (
            SELECT /*+ ORDERED USE_NL(A1) USE_NL(B M VNDR) */
				MAX(A1.INV_NO) OVER (PARTITION BY A.TRSP_SO_OFC_CTY_CD, A.TRSP_SO_SEQ, A.BIL_ISS_KNT) MAX_CHK,
          		NVL(B.BKG_STS_CD, ' ') || '$' || 
				NVL(B.DE_TERM_CD, ' ') || '$' || 
				NVL(B.RCV_TERM_CD, ' ') || '$' || 
				NVL(B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, ' ') || '$' || 
				NVL(B.POD_CD, ' ') || '$' || 
				NVL(DECODE( B.DCGO_FLG , 'Y', 'DG ') || 
				DECODE( B.RC_FLG , 'Y', 'RF ') || 
				DECODE( B.AWK_CGO_FLG , 'Y', 'AK ') || 
				DECODE( B.BB_CGO_FLG , 'Y', 'BB ') || 
				DECODE( B.SPCL_HIDE_FLG , 'Y', 'HD ') || 
				DECODE( B.FD_GRD_FLG , 'Y', 'FG ') || 
				DECODE( B.RAIL_BLK_CD , '', '', 'RB '), ' ') BKG,
				( SELECT  REPLACE(MDM_CO.CMDT_NM, CHR(13)||CHR(10), ' ') CMDT_NAME FROM MDM_COMMODITY MDM_CO WHERE B.CMDT_CD = MDM_CO.CMDT_CD ) MDM_CO,
                A.TRSP_SO_OFC_CTY_CD AS TRSP_SO_OFC_CTY_CD,
                A.TRSP_SO_SEQ AS TRSP_SO_SEQ,
                A.BIL_ISS_KNT AS BIL_ISS_KNT,
                A.TRSP_SO_STS_CD AS TRSP_SO_STS_CD,
                A.BKG_NO_RVIS_FLG AS BKG_NO_RVIS_FLG, 
                A.POL_NOD_CD AS POL_NOD_CD,
                A.BKG_NO AS BKG_NO,
                A.BLK_FLG AS BLK_FLG,
                A.STEL_WIRE_FLG AS STEL_WIRE_FLG,
                A.COIL_SHP_FLG AS COIL_SHP_FLG,
                A.FUMG_FLG AS FUMG_FLG,
                A.COP_NO AS COP_NO,
                DECODE(A.TRSP_SO_STS_CD, 'C', 'S/O Created', 'R', 'S/O Corrected', 'I', 'EDI Sent', '') AS STATUS,
                A.COST_ACT_GRP_SEQ AS COST_ACT_GRP_SEQ,
                A.EQ_NO AS EQ_NO,
                A.EQ_TPSZ_CD AS EQ_TPSZ_CD,
                A.REPO_PLN_ID AS REPO_PLN_ID,
                A.PLN_YRWK AS PLN_YRWK,
                A.REF_SEQ AS REF_SEQ,
                A.REF_ID AS REF_ID,
                A.CGO_TP_CD AS CGO_TP_CD,
                A.TRSP_BND_CD AS TRSP_BND_CD,
                A.CXL_RQST_FLG AS CXL_RQST_FLG,
                DECODE(A.TRSP_RAIL_BIL_TP_CD, 'E', 'OPUS', 'W', 'WRS', '') AS THROUGH,
                A.TRSP_RAIL_BIL_TP_CD AS TRSP_RAIL_BIL_TP_CD,
                A.IBD_IPI_LOCL_IND_CD AS IBD_IPI_LOCL_IND_CD,
                A.BL_NO AS BL_NO,
                A.BKG_RCVDE_TERM_CD AS BKG_RCVDE_TERM_CD,
                A.BIL_ISS_STS_CD AS BIL_ISS_STS_CD,
                DECODE(A.BKG_NO_RVIS_FLG, NULL, '', A.BKG_NO) AS REVISED_BKG_NO,
                SUBSTR( DECODE(A.TRSP_BND_CD, 'I', NVL(A.POD_NOD_CD, A.POD_CD) , 'O', A.POR_NOD_CD, '') , 1, 5) AS PODPOR_CD,
                SUBSTR( DECODE(A.TRSP_BND_CD, 'I', NVL(A.POD_NOD_CD, A.POD_CD) , 'O', A.POR_NOD_CD, '') , 6) AS PODPOR_YARD,
                SUBSTR(A.FM_NOD_CD, 1, 5) AS FM_NOD_CD,
                SUBSTR(A.FM_NOD_CD, 6) AS FM_NOD_YARD,
                SUBSTR(A.TO_NOD_CD, 1, 5) AS TO_NOD_CD,
                SUBSTR(A.TO_NOD_CD, 6) AS TO_NOD_YARD,
                SUBSTR(A.FM_NOD_CD, 1, 5) AS ORG_FM_NOD_CD,
                SUBSTR(A.FM_NOD_CD, 6) AS ORG_FM_NOD_YARD,
                SUBSTR(A.TO_NOD_CD, 1, 5) AS ORG_TO_NOD_CD,
                SUBSTR(A.TO_NOD_CD, 6) AS ORG_TO_NOD_YARD,
                SUBSTR(DECODE(A.TRSP_BND_CD, 'I', A.DEL_NOD_CD, 'O', NVL(A.POL_NOD_CD, A.POL_CD) , '') , 1, 5) AS POLDEL_CD,
                SUBSTR(DECODE(A.TRSP_BND_CD, 'I', A.DEL_NOD_CD, 'O', NVL(A.POL_NOD_CD, A.POL_CD) , '') , 6) AS POLDEL_YARD,
                A.POL_CD AS POL_CD,
                A.IBD_CSTMS_CLR_LOC_CD AS IBD_CSTMS_CLR_LOC_CD,
				DECODE(A.CND_CSTMS_CLR_FLG, 'Y', '1', '0') AS CND_CSTMS_CLR_FLG,
                A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD AS TRUNKVVD,
                A.POD_CD AS POD_CD,
                A1.SUB_RAIL_SEQ AS SUB_RAIL_SEQ,
                A.PROV_VNDR_SEQ AS REQUEST_SP,
                A1.VNDR_SEQ AS VNDR_SEQ,
				VNDR.VNDR_ABBR_NM,
                '' AS COST_MONTH,
                TO_CHAR(A.LOCL_CRE_DT, 'YYYYMMDD') AS CRE_DT,
                TO_CHAR(A.LOCL_CRE_DT, 'HH24:MI:SS') AS CRE_DT_HMS,
                TO_CHAR(A.CXL_RQST_DT, 'YYYYMMDD') AS CXL_RQST_DT,
                TO_CHAR(A.CXL_RQST_DT, 'HH24:MI:SS') AS CXL_RQST_DT_HMS,
                A.CXL_RQST_RSN AS CXL_RQST_RSN,
                TO_CHAR(A.CXL_RQST_RJCT_DT, 'YYYYMMDD') AS CXL_RQST_RJCT_DT,
                TO_CHAR(A.CXL_RQST_RJCT_DT, 'HH24:MI:SS') AS CXL_RQST_RJCT_DT_HMS,
                A.CXL_RQST_RJCT_RSN AS RQST_RJCT_RSN,
                A.INTER_RMK INTER_RMK,
                (SELECT MAX(RMK.BKG_NO)
                  FROM TRS_INTER_RMK RMK
                 WHERE RMK.BKG_NO IN(A.BKG_NO, 'DUM000000000')
                   AND NVL(RMK.EQ_NO, 'X') = NVL2(RMK.EQ_NO, A.EQ_NO, 'X')
                   AND NVL(RMK.TRSP_SO_OFC_CTY_CD, 'XX') = NVL2(RMK.TRSP_SO_OFC_CTY_CD, A.TRSP_SO_OFC_CTY_CD, 'XX')
                   AND NVL(RMK.TRSP_SO_SEQ, '99999') = NVL2(RMK.TRSP_SO_SEQ, A.TRSP_SO_SEQ, '99999')
                   AND NVL(RMK.DELT_FLG, 'X') = 'N') AS INTER_RMK_CHK,
                A.SPCL_INSTR_RMK AS SPCL_INSTR_RMK,
                A.ROUT_ORG_NOD_CD AS ROUT_ORG_NOD_CD,
                A.ROUT_DEST_NOD_CD AS ROUT_DEST_NOD_CD,
                NVL(A.ROUT_SEQ, 0) AS ROUT_SEQ,
                A.DELT_FLG AS DELT_FLG,
                A.SPND_FLG AS SPND_FLG,
                A.ROUT_PLN_CD AS ROUT_PLN_CD,
                A.INLND_ROUT_RMK AS INLND_ROUT_RMK,
                A.INV_BIL_PATT_DIV_FLG AS INV_BIL_PATT_DIV_FLG,
                A.RAIL_CMB_THRU_TP_CD AS RAIL_CMB_THRU_TP_CD,
                A1.TO_NOD_CD AS VNDR_SET_TO_NOD_CD,
                A.CNTR_WGT,
                A.SPND_ERR_MSG_CD AS SPND_ERR_MSG_CD,
                A.SPND_LANG_TP_CD AS SPND_LANG_TP_CD,
                A1.TRSP_AGMT_OFC_CTY_CD AS TRSP_AGMT_OFC_CTY_CD,
                A1.TRSP_AGMT_SEQ AS TRSP_AGMT_SEQ,
                A1.INV_NO AS INV_NO,
				A.COST_ACT_GRP_CD AS ACT_GRP_CD,
				DECODE(A.TRSP_BND_CD, 'I', B.BLCK_STWG_CD) BLCK_STWG_CD,
			    A.STCC_CD,
				A.STCC_DESC,
				(CASE WHEN INSTR(TPSZ.CNTR_TPSZ_DESC, '20FT') > 0 THEN '20'
					  WHEN INSTR(TPSZ.CNTR_TPSZ_DESC, '40FT') > 0 THEN '40'
					  WHEN INSTR(TPSZ.CNTR_TPSZ_DESC, '45FT') > 0 THEN '45'
				END) EZ_TPSZ_FT,
   				(CASE
   					WHEN INSTR(TPSZ.CNTR_TPSZ_DESC, '20FT') > 0 AND ROUND(A.CNTR_WGT) >= 43000 THEN 'Y'
        			WHEN INSTR(TPSZ.CNTR_TPSZ_DESC, '40FT') > 0 AND ROUND(A.CNTR_WGT) >= 45000 THEN 'Y'
        			WHEN INSTR(TPSZ.CNTR_TPSZ_DESC, '45FT') > 0 AND ROUND(A.CNTR_WGT) >= 42700 THEN 'Y'
        			ELSE 'N'
   				END) OVERWEIGHT,
                M.CNMV_STS_CD AS CNMV_STS_CD,
                M.CRNT_YD_CD AS CRNT_YD_CD,
                TO_CHAR(M.CNMV_DT, 'YYYY-MM-DD HH24:MI') AS CNMV_DT,
				B.DCGO_FLG,
				A.UPLN_SO_FLG,
                B.RAIL_BLK_CD,
				DECODE(D.DCGO_FLG, 'Y', 'DG,') || DECODE(D.BB_CGO_FLG, 'Y', 'BB,') || DECODE(D.AWK_CGO_FLG, 'Y', 'AK,') || DECODE(D.RC_FLG, 'Y', 'RF,') BKG_CNTR_SPCL,
				D.DCGO_FLG CNTR_DCGO_FLG,
				A.TRSP_FRST_FLG,
                (SELECT A2.FM_NOD_CD FROM TRS_TRSP_RAIL_BIL_VNDR_SET A2 WHERE A.TRSP_SO_OFC_CTY_CD = A2.TRSP_SO_OFC_CTY_CD AND A.TRSP_SO_SEQ = A2.TRSP_SO_SEQ AND A2.SUB_RAIL_SEQ = 2) INTERCHANGE1_NOD_CD,
                (SELECT A2.FM_NOD_CD FROM TRS_TRSP_RAIL_BIL_VNDR_SET A2 WHERE A.TRSP_SO_OFC_CTY_CD = A2.TRSP_SO_OFC_CTY_CD AND A.TRSP_SO_SEQ = A2.TRSP_SO_SEQ AND A2.SUB_RAIL_SEQ = 3) INTERCHANGE2_NOD_CD
            FROM
                TRS_TRSP_RAIL_BIL_ORD A,
                TRS_TRSP_RAIL_BIL_VNDR_SET A1,
				BKG_BOOKING B,
                MST_CONTAINER M,
				BKG_CONTAINER D,
				MDM_VENDOR    VNDR,
				MDM_CNTR_TP_SZ  TPSZ
            WHERE A.TRSP_SO_OFC_CTY_CD = A1.TRSP_SO_OFC_CTY_CD
            AND   A.TRSP_SO_SEQ = A1.TRSP_SO_SEQ
			AND   A.BKG_NO = B.BKG_NO(+)
            AND   A.CRE_OFC_CD IN (@[sctrlOfcCd], 'SYSTEM')
            AND   A.DELT_FLG = 'N'
            AND   A.EQ_NO = M.CNTR_NO(+)
         #if(${cnmv_sts_cd} != '')
            AND M.CNMV_STS_CD = @[cnmv_sts_cd]
         #end
			AND A1.VNDR_SEQ = VNDR.VNDR_SEQ(+)

#if($vvd.size() > 0)
	AND ((A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD) IN (
	#foreach($key IN ${vvd})
		#if($velocityCount == 1)						
			( SUBSTR('$key', 1, 4), SUBSTR('$key', 5, 4), SUBSTR('$key', 9))
		#else
			, ( SUBSTR('$key', 1, 4), SUBSTR('$key', 5, 4), SUBSTR('$key', 9))
		#end
	#end
		)
	)
#end

#if($bkg.size() > 0)
	AND A.BKG_NO IN (
	#foreach($key IN ${bkg})
		#if($velocityCount == 1)						
			'$key'
		#else
			,'$key'
		#end
	#end
	)
#end

#if($bl.size() > 0)
	AND A.BL_NO IN (
	#foreach($key IN ${bl})
		#if($velocityCount == 1)						
			'$key'
		#else
			,'$key'
		#end
	#end
	)
#end

#if($cntr.size() > 0)
	AND A.EQ_NO IN (
	#foreach($key IN ${cntr})
		#if($velocityCount == 1)						
			'$key'
		#else
			,'$key'
		#end
	#end
	)
#end

#if($refId.size() > 0)
	AND A.REF_ID IN (
	#foreach($key IN ${refId})
		#if($velocityCount == 1)						
			'$key'
		#else
			,'$key'
		#end
	#end
	)
#end

#if(${sselStatus} == 'ALL')
	AND A.TRSP_SO_STS_CD IN ('C', 'R','I')
#else
	AND A.TRSP_SO_STS_CD = @[sselStatus]
#end

#if(${sdateSep} == 'SC')
	#if(${splanFromDate} != '' && ${splanToDate} != '')
		AND A.LOCL_CRE_DT BETWEEN TO_DATE(@[splanFromDate], 'YYYYMMDD') AND TO_DATE(@[splanToDate], 'YYYYMMDD') + 0.99999
	#end

#elseif (${sdateSep} == 'BU')
	#if(${splanFromDate} != '' && ${splanToDate} != '')
	AND EXISTS(
			( SELECT 1 FROM BKG_HIS_MST SKD
		          WHERE  SKD.BKG_NO = A.BKG_NO
					GROUP BY SKD.BKG_NO
					HAVING MAX(SKD.EVNT_DT) BETWEEN TO_DATE(@[splanFromDate], 'YYYYMMDD') AND TO_DATE(@[splanToDate], 'YYYYMMDD') + 0.99999
        	)	
     )
	#end
#else
    AND A.CXL_RQST_DT IS NOT NULL
	#if(${splanFromDate} != '' && ${splanToDate} != '')
		AND A.CXL_RQST_DT BETWEEN TO_DATE(@[splanFromDate], 'YYYYMMDD') AND TO_DATE(@[splanToDate], 'YYYYMMDD') + 0.99999  
	#end  
#end


#if(${sselEdikind} != 'ALL')
	AND A.CGO_TP_CD = @[sselEdikind]
#end

#if(${sselBnd} != 'ALL')
	AND A.TRSP_BND_CD = @[sselBnd]
#end

#if(${sselThrough} == 'ALL')
#else
	AND A.TRSP_RAIL_BIL_TP_CD = @[sselThrough]
#end

#if(${sselLimtinq} == 'ALL')
#elseif(${sselLimtinq} == 'X')
	AND A.TRSP_RAIL_BIL_TP_CD='W' 
	AND NVL(A.CXL_RQST_RJCT_FLG, 'N') = 'N'
#else
	AND A.CXL_RQST_RJCT_FLG='Y'
#end

#if(${sfromLocationCd} != '')
	AND A.FM_NOD_CD LIKE @[sfromLocationCd]||'%'
#end

#if(${stoLocationCd} != '')
	AND A.TO_NOD_CD LIKE @[stoLocationCd]||'%'
#end

#if(${radVendor} == 'V2' && ${comboSvcProvider} != '')
	AND A.PROV_VNDR_SEQ = @[comboSvcProvider]
#elseif(${radVendor} == 'V1' && ${selRailRoad} != 'ALL')
	AND A1.VNDR_SEQ = @[selRailRoad]
#end
	AND DECODE(@[unplanned], 'ALL', 'X', NVL(A.UPLN_SO_FLG, 'N')) = DECODE(@[unplanned], 'ALL', 'X', @[unplanned])

	AND A.BKG_NO = D.BKG_NO(+)
	AND A.EQ_NO  = D.CNTR_NO(+)
	AND A.EQ_TPSZ_CD = TPSZ.CNTR_TPSZ_CD(+)
	AND TPSZ.DELT_FLG(+) = 'N'
        ) X
	WHERE X.MAX_CHK IS NULL
    AND NOT EXISTS (SELECT 1
                   FROM TRS_TRSP_RAIL_BIL_VNDR_SET S1
                         WHERE S1.TRSP_SO_OFC_CTY_CD = X.TRSP_SO_OFC_CTY_CD
                           AND S1.TRSP_SO_SEQ = X.TRSP_SO_SEQ
                           AND S1.INV_NO IS NOT NULL)
) TMP,
TRS_AGMT_HDR AGMT,
(SELECT DE.DECL_NM
        ,DE.DCGO_SEQ
        ,CASE
           WHEN (NVL(DE.CUST_NM, 'x') = 'x' OR NVL(DE.CUST_ADDR, 'x') = 'x' OR NVL(DE.CUST_CTY_NM, 'x') = 'x' OR NVL(DE.CUST_STE_CD, 'x') = 'x' OR NVL(DE.CSTMS_DECL_CNT_CD, 'x') = 'x' OR NVL(DE.CUST_ZIP_ID, 'x') = 'x') THEN
            'N'
           ELSE
            'Y'
         END VLD_CHK
                       
        ,DG.BKG_NO
        ,DE.DG_DECL_SEQ
        ,DG.CNTR_TPSZ_CD
        ,DG.CNTR_NO
		,DG.DG_CNTR_SEQ
    FROM BKG_DG_CGO  DG
        ,BKG_DG_DECL DE
   WHERE DG.BKG_NO = DE.BKG_NO(+)
     AND DG.DG_CNTR_SEQ = DE.DG_CNTR_SEQ(+)
) DG
WHERE TMP.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD(+)
AND   TMP.TRSP_AGMT_SEQ = AGMT.TRSP_AGMT_SEQ(+)
AND   TMP.BKG_NO = DG.BKG_NO(+)
AND   NVL(DG.CNTR_NO(+), 'X') = NVL2(DG.CNTR_NO(+), TMP.EQ_NO, 'X')
AND   TMP.EQ_TPSZ_CD = DG.CNTR_TPSZ_CD(+)
AND   DG.DG_DECL_SEQ(+) = DECODE(TMP.TRSP_BND_CD, 'O', 1, 'I', 2)
#if(${sselUnmatch} == 'ALL')
#elseif(${sselUnmatch} == 'N')
	AND NVL(TMP.TRUNKVVD, 'N/A') = NVL(SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 3) - INSTR(TMP.BKG, '$', 1, 4), INSTR(TMP.BKG, '$', 1, 2) - INSTR(TMP.BKG, '$', 1, 3)), 'N/A')
	AND NVL(TMP.POD_CD, 'N/A') = NVL(SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 4) - INSTR(TMP.BKG, '$', 1, 5), INSTR(TMP.BKG, '$', 1, 3) - INSTR(TMP.BKG, '$', 1, 4)), 'N/A')
#else
	AND ( NVL(TMP.TRUNKVVD, 'N/A') <> NVL(SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 3) - INSTR(TMP.BKG, '$', 1, 4), INSTR(TMP.BKG, '$', 1, 2) - INSTR(TMP.BKG, '$', 1, 3)), 'N/A')
			OR NVL(TMP.POD_CD, 'N/A') <> NVL(SUBSTR(TMP.BKG, INSTR(TMP.BKG, '$', 1, 4) - INSTR(TMP.BKG, '$', 1, 5), INSTR(TMP.BKG, '$', 1, 3) - INSTR(TMP.BKG, '$', 1, 4)), 'N/A'))
#end 

GROUP BY 
    TMP.TRSP_SO_OFC_CTY_CD, 
    TMP.TRSP_SO_SEQ, 
    TMP.BIL_ISS_KNT
) TM1			]]></sql>
			<params>
				<param name="sctrlOfcCd" type="12" value="" out="N"/>
				<param name="cnmv_sts_cd" type="12" value="" out="N"/>
				<param name="sselStatus" type="12" value="" out="N"/>
				<param name="splanFromDate" type="12" value="" out="N"/>
				<param name="splanToDate" type="12" value="" out="N"/>
				<param name="sselEdikind" type="12" value="" out="N"/>
				<param name="sselBnd" type="12" value="" out="N"/>
				<param name="sselThrough" type="12" value="" out="N"/>
				<param name="sfromLocationCd" type="12" value="" out="N"/>
				<param name="stoLocationCd" type="12" value="" out="N"/>
				<param name="comboSvcProvider" type="12" value="" out="N"/>
				<param name="selRailRoad" type="12" value="" out="N"/>
				<param name="unplanned" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
