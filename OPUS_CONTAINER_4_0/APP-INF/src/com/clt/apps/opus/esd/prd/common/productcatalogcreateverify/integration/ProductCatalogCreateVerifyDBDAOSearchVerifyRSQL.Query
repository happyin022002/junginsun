<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ProductCatalogCreateVerifyDBDAOSearchVerifyRSQL">
			<desc><![CDATA[SearchVerify]]></desc>
			<sql><![CDATA[
SELECT
    HUB_COUNT, OB_SO_CHK,IB_SO_CHK,OCN_SO_CHK,ORG_CHECK,DEST_CHECK,ORG_FLG_CHK, DEST_FLG_CHK,CHECK_ROUT,
    OB_IRG_CHK,IB_IRG_CHK, 
    SUBSTR(regexp_replace(STS_CHECK, '(.{9})', ', \\1'), 3) STS_CHECK,
    ORG_LOC_CD,DEST_LOC_CD,ROUT_SEQ,LNK_KNT, NVL(SKD_STR, 'X') SKD_STR,
    N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,
    N2ND_POL_CD,N3RD_POL_CD,N4TH_POL_CD,N1ST_SVC_TP,N2ND_SVC_TP,N3RD_SVC_TP,N4TH_SVC_TP,
    N1ST_TZTM_HRS,N2ND_TZTM_HRS,N3RD_TZTM_HRS,N4TH_TZTM_HRS,
    CCT,POL1_,POL1_S,POD1,POLT1,PODT1,VVD1,CRR1,POL_SEQ1,POD_SEQ1,
    POL2,POD2,POLT2,PODT2,VVD2,CRR2,POL_SEQ2,POD_SEQ2,
    POL3,POD3,POLT3,PODT3,VVD3,CRR3,POL_SEQ3,POD_SEQ3,
    POL4,POD4_,POLT4,PODT4,VVD4,CRR4,POL_SEQ4,POD_SEQ4,
    POD_NODE_,POD_NODE_S, OB_TRSP_MOD_CD, IB_TRSP_MOD_CD, MTPU_CY, MTRTN_CY
FROM
   (
    SELECT
    (CASE 
		 WHEN O.ROUT_ORG_NOD_CD IS NULL
            AND @[por] = NVL(@[pol], SUBSTR(T.POL1, 1, 5)) AND @[rcv_t] = 'S' AND POL1_S ='Y' THEN 'Y'
          WHEN O.ROUT_ORG_NOD_CD IS NULL
            AND @[por] = NVL(@[pol], SUBSTR(T.POL1, 1, 5)) AND @[rcv_t] <> 'D' THEN 'Y'
          WHEN O.ROUT_ORG_NOD_CD IS NOT NULL
            AND (SELECT 'X' FROM PRD_NODE N
                 WHERE N.NOD_CD = O.ROUT_ORG_NOD_CD
                   AND DECODE(N.NOD_TP_CD,'Z','D',N.NOD_TP_CD) IN (DECODE(@[rcv_t],'D','D',''),
                                                               DECODE(@[rcv_t],'T','B','F','B','Y','B','S','B',''),
                                                               DECODE(@[rcv_t],'T','M','F','M','Y','M','S','M',''),
                                                               DECODE(@[rcv_t],'Y','Y','S','Y',''),
                                                               DECODE(@[rcv_t],'Y','R','S','R',''),
                                                               DECODE(@[rcv_t],'Y','P','') )
                 ) = 'X'
                 AND NVL(O.PCTL_IO_BND_CD,'O')  IN ('O','B')
                 AND DECODE(@[rcv_t],'S','Y','X') = NVL((SELECT DECODE(@[rcv_t],'S',YD_FCTY_TP_CFS_FLG,'X') FROM MDM_YARD WHERE YD_CD=O.ROUT_ORG_NOD_CD),'X')
                 AND O.ROUT_ORG_NOD_CD  LIKE DECODE(@[rcv_t],'F','','T','',
                                                      DECODE(@[por_n],'',
                                                           DECODE(@[rcv_t],'D',(SELECT REP_ZN_CD FROM MDM_LOCATION WHERE LOC_CD = @[por]),@[por]||'%')
                                                      ,@[por_n])
                                               )
                 THEN 'Y'
          ELSE 'X'
     END) ORG_CHECK,
     (CASE 
           WHEN I.ROUT_DEST_NOD_CD IS NULL 
                AND NVL(@[pod],SUBSTR( T.POD_NODE ,1,5)) = @[del] AND @[del_t] = 'S' AND POD_NODE_S ='Y' THEN 'Y' 
           WHEN I.ROUT_DEST_NOD_CD IS NULL 
                AND NVL(@[pod],SUBSTR( T.POD_NODE ,1,5)) = @[del] AND @[del_t] <> 'D' THEN 'Y'

           WHEN I.ROUT_DEST_NOD_CD IS NOT NULL
				AND (SELECT 'X' FROM PRD_NODE N
					 WHERE N.NOD_CD = I.ROUT_DEST_NOD_CD
					   AND DECODE(N.NOD_TP_CD,'Z','D',N.NOD_TP_CD) IN (DECODE(@[del_t],'D','D',''),
                                                               DECODE(@[del_t],'T','B','F','B','Y','B','S','B',''),
                                                               DECODE(@[del_t],'T','M','F','M','Y','M','S','M',''),
                                                               DECODE(@[del_t],'Y','Y','S','Y',''),
                                                               DECODE(@[del_t],'Y','R','S','R',''),
                                                               DECODE(@[del_t],'Y','P','') )
                 ) = 'X'
				 AND NVL(I.PCTL_IO_BND_CD,'I') IN ('I','B')
                 AND DECODE(@[del_t],'S','Y','X') =
                                        NVL((SELECT DECODE(@[del_t],'S',YD_FCTY_TP_CFS_FLG,'X')
                                             FROM MDM_YARD
                                             WHERE YD_CD=I.ROUT_DEST_NOD_CD),'X')
                 AND I.ROUT_DEST_NOD_CD  LIKE DECODE(@[del_t],'F','','T','',
                                                      DECODE(@[del_n],'',
                                                           DECODE(@[del_t],'D',(SELECT REP_ZN_CD FROM MDM_LOCATION WHERE LOC_CD = @[del]),@[del]||'%')
                                                      ,@[del_n])
                                               )
                 THEN 'Y'
          ELSE 'X'
     END) DEST_CHECK,
     (CASE WHEN NVL(@[por_n],@[por]) <> NVL(@[pol_n],NVL(@[pol], SUBSTR(POL1, 1, 5)))
               AND NVL((SELECT 'Y' 
                   FROM BKG_TRO
                   WHERE BKG_NO = @[bkg_no]
                   AND IO_BND_CD = 'O'
                   AND CXL_FLG = 'N'
                   AND ROWNUM = 1),'N') = 'N'
               AND NVL((SELECT 'Y' 
                   FROM BKG_EUR_TRO
                   WHERE BKG_NO = @[bkg_no]
                   AND IO_BND_CD = 'O'
                   AND CXL_FLG = 'N'
                   AND ROWNUM = 1),'N') = 'N'  
               AND NVL((SELECT 'Y' FROM TRS_TRSP_SVC_ORD
                   WHERE BKG_NO = @[bkg_no]
                   AND TRSP_BND_CD = 'O'
                   AND DELT_FLG = 'N'
                   AND ROWNUM = 1),'N') = 'N'
               AND NVL((SELECT 'Y' FROM TRS_TRSP_RAIL_BIL_ORD
                   WHERE BKG_NO = @[bkg_no]
                   AND TRSP_BND_CD = 'O'
                   AND DELT_FLG = 'N'
                   AND ROWNUM = 1),'N') = 'N'
           THEN DECODE(NVL(O.INLND_ROUT_BKG_FLG,'N'),'Y',DECODE(NVL(O.INLND_ROUT_TMP_FLG,'N'),'N','Y','N'),'B')
           ELSE 'Y'
    END) ORG_FLG_CHK,
    (CASE WHEN NVL(@[pod_n],NVL(@[pod], SUBSTR(POD_NODE, 1, 5))) <> NVL(@[del_n],@[del])
               AND NVL((SELECT 'Y' 
                   FROM BKG_TRO
                   WHERE BKG_NO = @[bkg_no]
                   AND IO_BND_CD = 'I'
                   AND CXL_FLG = 'N'
                   AND ROWNUM = 1),'N') = 'N'
               AND NVL((SELECT 'Y' 
                   FROM BKG_EUR_TRO
                   WHERE BKG_NO = @[bkg_no]
                   AND IO_BND_CD = 'I'
                   AND CXL_FLG = 'N'
                   AND ROWNUM = 1),'N') = 'N'  
               AND NVL((SELECT 'Y' FROM TRS_TRSP_SVC_ORD
                   WHERE BKG_NO = @[bkg_no]
                   AND TRSP_BND_CD = 'I'
                   AND DELT_FLG = 'N'
                   AND ROWNUM = 1),'N') = 'N'
               AND NVL((SELECT 'Y' FROM TRS_TRSP_RAIL_BIL_ORD
                   WHERE BKG_NO = @[bkg_no]
                   AND TRSP_BND_CD = 'I'
                   AND DELT_FLG = 'N'
                   AND ROWNUM = 1),'N') = 'N'
           THEN DECODE(NVL(I.INLND_ROUT_BKG_FLG,'N'),'Y',DECODE(NVL(I.INLND_ROUT_TMP_FLG,'N'),'N','Y','N'),'B')
           ELSE 'Y'

     END) DEST_FLG_CHK,
     T.*, O.TRSP_MOD_CD OB_TRSP_MOD_CD, I.TRSP_MOD_CD IB_TRSP_MOD_CD,
     (CASE
           WHEN DECODE(NVL(@[ob_str],'%'),'%',1,INSTR(NVL(PRD_GET_INLND_ROUT_STR_FNC(O.ROUT_ORG_NOD_CD,O.ROUT_DEST_NOD_CD,O.ROUT_SEQ),'X'),NVL(REGEXP_REPLACE(REPLACE(@[ob_str],'%',''),'-...-','-'),'X'))) >=1 
            THEN 'Y'
           ELSE 'X'
     END) OB_SO_CHK,
     (CASE
           WHEN DECODE(NVL(@[ib_str],'%'),'%',1,INSTR(NVL(PRD_GET_INLND_ROUT_STR_FNC(I.ROUT_ORG_NOD_CD,I.ROUT_DEST_NOD_CD,I.ROUT_SEQ),'X'),NVL(REGEXP_REPLACE(REPLACE(@[ib_str],'%',''),'-...-','-'),'X'))) >=1
            THEN 'Y'
           ELSE 'X'
     END) IB_SO_CHK,
     (CASE 
           WHEN REPLACE(NVL(@[ob_str],'%'), '%', '') IS NULL THEN 'X'
           ELSE NVL((SELECT 'Y_' || REGEXP_REPLACE(PRD_GET_INLND_ROUT_STR_FNC(M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ), '-..-.-', '-')
                       FROM PRD_INLND_ROUT_MST M
                          , PRD_NODE N
                      WHERE M.ROUT_ORG_NOD_CD LIKE @[por] ||'%'
                        AND M.ROUT_DEST_NOD_CD LIKE NVL(@[pol], SUBSTR(O.ROUT_DEST_NOD_CD, 1, 5)) ||'%'
                       AND M.PCTL_IO_BND_CD = 'O'
                       AND NVL(M.DELT_FLG, 'N') = 'N'
                       AND M.ROUT_ORG_NOD_CD = N.NOD_CD
                       AND N.NOD_TP_CD = DECODE(@[rcv_t], 'D', 'Z', 'S', 'S', DECODE(N.NOD_TP_CD, 'Z', 'X', N.NOD_TP_CD))
                       AND PRD_GET_INLND_ROUT_STR_FNC(M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ) LIKE REGEXP_REPLACE(@[ob_str],'-...-','-') || '%'
                       AND ROWNUM = 1)
                , 'X')
      END) OB_IRG_CHK,
     (CASE WHEN REPLACE(NVL(@[ib_str],'%'), '%', '') IS NULL THEN 'X'
           ELSE NVL((SELECT 'Y_' || REGEXP_REPLACE(PRD_GET_INLND_ROUT_STR_FNC(M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ), '-..-.-', '-')
                       FROM PRD_INLND_ROUT_MST M
                          , PRD_NODE N
                      WHERE M.ROUT_ORG_NOD_CD LIKE NVL(@[pod], SUBSTR(I.ROUT_ORG_NOD_CD,1,5)) ||'%'
                        AND M.ROUT_DEST_NOD_CD LIKE @[del]||'%'
                        AND M.PCTL_IO_BND_CD = 'I'
                        AND NVL(M.DELT_FLG, 'N') = 'N'
                        AND M.ROUT_DEST_NOD_CD = N.NOD_CD
                        AND N.NOD_TP_CD = DECODE(@[del_t], 'D', 'Z', 'S', 'S', DECODE(N.NOD_TP_CD, 'Z', 'X', N.NOD_TP_CD))
                        AND PRD_GET_INLND_ROUT_STR_FNC(M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ) LIKE REGEXP_REPLACE(@[ib_str],'-...-','-') || '%'
                        AND ROWNUM = 1)
                    , 'X')
      END) IB_IRG_CHK,
	 (CASE 	WHEN @[rcv_t] = 'S' AND NVL(O.ROUT_SEQ,0) = 0 THEN NULL
			WHEN LENGTH(NVL(@[m_pu],'X')) = 7 THEN @[m_pu]
			WHEN (SELECT MTY_PKUP_RTN_YD_CD FROM PRD_PKUP_RTN_YD
				  WHERE POR_DEL_CD = @[por]
				  AND POL_POD_CD = NVL(@[pol], SUBSTR(POL1,1,5))
				  AND IO_BND_CD IN ('O','B')
				  AND NVL(DELT_FLG,'N') <> 'Y'
				  AND SPCL_CGO_CD IN (  DECODE(NVL(@[dg_spcl_flg],'N'),'Y','DG','AL'), DECODE(NVL(@[rf_spcl_flg],'N'),'Y','RF','AL'), DECODE(NVL(@[rf_spcl_flg],'N')||NVL(@[dg_spcl_flg],'N'),'NN','DR'), 'AL')
				  AND VSL_SLAN_CD IN (N1ST_LANE_CD,'ALL')
			#if($arr_tpsz.size() > 0)  
				  AND NVL(CNTR_TP_CD,'AL') || NVL(CNTR_SZ_CD, 'AL') IN ('ALAL'
					#foreach($code IN ${arr_tpsz})
						 ,'$code'
					#end 
				)
			#end 				  
				  AND ROWNUM =1) IS NOT NULL
			  THEN (SELECT MTY_PKUP_RTN_YD_CD 
				  FROM (SELECT MTY_PKUP_RTN_YD_CD, POL_POD_CD, VSL_SLAN_CD, DECODE(CNTR_TP_CD||CNTR_SZ_CD,'ALAL',100,0) + DECODE(VSL_SLAN_CD,'ALL',10,0)+DECODE(SPCL_CGO_CD,'AL',1,0) WGT
						FROM PRD_PKUP_RTN_YD
						WHERE POR_DEL_CD = @[por]
						AND IO_BND_CD IN ('O','B')
						AND NVL(DELT_FLG,'N') <> 'Y'
						AND SPCL_CGO_CD IN ( DECODE(NVL(@[dg_spcl_flg],'N'),'Y','DG','AL'),DECODE(NVL(@[rf_spcl_flg],'N'),'Y','RF','AL'), DECODE(NVL(@[rf_spcl_flg],'N')||NVL(@[dg_spcl_flg],'N'),'NN','DR'), 'AL')
					#if($arr_tpsz.size() > 0)  
						AND NVL(CNTR_TP_CD,'AL') || NVL(CNTR_SZ_CD, 'AL') IN ('ALAL'
							#foreach($code IN ${arr_tpsz})
								 ,'$code'
							#end 
						)
					#end							
						ORDER BY WGT
				  )
				  WHERE VSL_SLAN_CD IN (N1ST_LANE_CD,'ALL')
					AND POL_POD_CD = NVL(@[pol], SUBSTR(POL1,1,5)				
					)
					AND ROWNUM =1)
			WHEN @[rcv_t] = 'D' THEN (SELECT Z.REP_YD_CD FROM MDM_ZONE Z WHERE Z.ZN_CD = NVL(I.ROUT_ORG_NOD_CD,T.POD_NODE))
			ELSE (SELECT L.MTY_PKUP_YD_CD FROM MDM_LOCATION L WHERE L.LOC_CD = @[por])
	 END) MTPU_CY,                         
	 (CASE 	WHEN @[del_t] = 'S' AND NVL(I.ROUT_SEQ,0) = 0 THEN NULL
			WHEN (SELECT MTY_PKUP_RTN_YD_CD FROM PRD_PKUP_RTN_YD
				  WHERE POR_DEL_CD = @[del]
				  AND POL_POD_CD = NVL(@[pod], SUBSTR(NVL(POD4, NVL(POD3, NVL(POD2, POD1))) ,1,5))
				  AND IO_BND_CD = 'I'
				  AND NVL(DELT_FLG,'N') <> 'Y'
				  AND SPCL_CGO_CD IN (  DECODE(NVL(@[dg_spcl_flg],'N'),'Y','DG','AL'), DECODE(NVL(@[rf_spcl_flg],'N'),'Y','RF','AL'), DECODE(NVL(@[rf_spcl_flg],'N')||NVL(@[dg_spcl_flg],'N'),'NN','DR'), 'AL')
				  AND VSL_SLAN_CD IN (NVL(N4TH_LANE_CD, NVL(N3RD_LANE_CD, NVL(N2ND_LANE_CD, N1ST_LANE_CD))),'ALL')
			#if($arr_tpsz.size() > 0)  
				  AND NVL(CNTR_TP_CD,'AL') || NVL(CNTR_SZ_CD, 'AL') IN ('ALAL'
					#foreach($code IN ${arr_tpsz})
						 ,'$code'
					#end 
				)
			#end 					  
				  AND ROWNUM =1) IS NOT NULL
			  THEN (SELECT MTY_PKUP_RTN_YD_CD 
				  FROM (SELECT MTY_PKUP_RTN_YD_CD, POL_POD_CD, VSL_SLAN_CD, DECODE(VSL_SLAN_CD,'ALL',10,0)+DECODE(SPCL_CGO_CD,'AL',1,0) WGT
						FROM PRD_PKUP_RTN_YD
						WHERE POR_DEL_CD = @[del]
						AND IO_BND_CD = 'I'
						AND NVL(DELT_FLG,'N') <> 'Y'
						AND SPCL_CGO_CD IN ( DECODE(NVL(@[dg_spcl_flg],'N'),'Y','DG','AL'),DECODE(NVL(@[rf_spcl_flg],'N'),'Y','RF','AL'), DECODE(NVL(@[rf_spcl_flg],'N')||NVL(@[dg_spcl_flg],'N'),'NN','DR'), 'AL')
					#if($arr_tpsz.size() > 0)  
						AND NVL(CNTR_TP_CD,'AL') || NVL(CNTR_SZ_CD, 'AL') IN ('ALAL'
							#foreach($code IN ${arr_tpsz})
								 ,'$code'
							#end 
						)
					#end						
						ORDER BY WGT
				  )
			  WHERE VSL_SLAN_CD IN (NVL(N4TH_LANE_CD, NVL(N3RD_LANE_CD, NVL(N2ND_LANE_CD, N1ST_LANE_CD))),'ALL')
				AND POL_POD_CD = NVL(@[pod], SUBSTR(NVL(POD4, NVL(POD3, NVL(POD2, POD1))) ,1,5))
				AND ROWNUM =1)
			WHEN @[del_t] ='D' THEN (SELECT Z.REP_YD_CD FROM MDM_ZONE Z WHERE Z.ZN_CD = NVL(I.ROUT_DEST_NOD_CD,T.POD_NODE))
			ELSE (SELECT NVL(L.EQ_RTN_YD_CD, L.MTY_PKUP_YD_CD) FROM MDM_LOCATION L WHERE L.LOC_CD =@[del]) 
	 END) MTRTN_CY
        FROM ( 
        SELECT C.*,
		DECODE(N1ST_SVC_TP,'O',
			NVL(DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1),7)),POL1),POL1) POL1_,  
		(SELECT YD_FCTY_TP_CFS_FLG 
 		FROM MDM_YARD 
 		WHERE YD_CD=DECODE(N1ST_SVC_TP,'O',
				NVL(DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1),7)),POL1),POL1) ) POL1_S, 
        DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD4,1,5),-1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD4,1,5),-1),7),POD4) POD4_,
        NVL(DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1),7),POD_NODE), POD_NODE) POD_NODE_,
        (SELECT YD_FCTY_TP_CFS_FLG
         FROM MDM_YARD
         WHERE YD_CD = NVL(DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1),7),POD_NODE), POD_NODE)
		) POD_NODE_S,
        (CASE WHEN POD_NODE IS NULL THEN 'X'
              WHEN LNK_KNT = 4 AND ( POL4 IS NULL OR POD4 IS NULL OR POLT4 IS NULL OR PODT4 IS NULL
                                    OR ( N4TH_SVC_TP <> 'O' AND ( VVD4 IS NULL OR CRR4 IS NULL OR POL_SEQ4 IS NULL OR  POD_SEQ4 IS NULL) )
                                    OR ( POL3 IS NULL OR POD3 IS NULL OR POLT3 IS NULL OR PODT3 IS NULL )
                                    OR ( N3RD_SVC_TP <> 'O' AND ( VVD3 IS NULL OR CRR3 IS NULL OR POL_SEQ3 IS NULL OR  POD_SEQ3 IS NULL) )
                                    OR ( POL2 IS NULL OR POD2 IS NULL OR POLT2 IS NULL OR PODT2 IS NULL )
                                    OR ( N2ND_SVC_TP <> 'O' AND ( VVD2 IS NULL OR CRR2 IS NULL OR POL_SEQ2 IS NULL OR  POD_SEQ2 IS NULL) )
                                    OR ( POL1 IS NULL OR POD1 IS NULL OR POLT1 IS NULL OR PODT1 IS NULL )
                                    OR ( N1ST_SVC_TP <> 'O' AND ( VVD1 IS NULL OR CRR1 IS NULL OR POL_SEQ1 IS NULL OR  POD_SEQ1 IS NULL) ) )
                   THEN 'X'
              WHEN LNK_KNT = 3 AND ( POL3 IS NULL OR POD3 IS NULL OR POLT3 IS NULL OR PODT3 IS NULL
                                    OR ( N3RD_SVC_TP <> 'O' AND ( VVD3 IS NULL OR CRR3 IS NULL OR POL_SEQ3 IS NULL OR  POD_SEQ3 IS NULL) )
                                    OR ( POL2 IS NULL OR POD2 IS NULL OR POLT2 IS NULL OR PODT2 IS NULL )
                                    OR ( N2ND_SVC_TP <> 'O' AND ( VVD2 IS NULL OR CRR2 IS NULL OR POL_SEQ2 IS NULL OR  POD_SEQ2 IS NULL) )
                                    OR ( POL1 IS NULL OR POD1 IS NULL OR POLT1 IS NULL OR PODT1 IS NULL )
                                    OR ( N1ST_SVC_TP <> 'O' AND ( VVD1 IS NULL OR CRR1 IS NULL OR POL_SEQ1 IS NULL OR  POD_SEQ1 IS NULL) ) )
                   THEN 'X'
              WHEN LNK_KNT = 2 AND ( POL2 IS NULL OR POD2 IS NULL OR POLT2 IS NULL OR PODT2 IS NULL
                                    OR ( N2ND_SVC_TP <> 'O' AND ( VVD2 IS NULL OR CRR2 IS NULL OR POL_SEQ2 IS NULL OR  POD_SEQ2 IS NULL) )
                                    OR ( POL1 IS NULL OR POD1 IS NULL OR POLT1 IS NULL OR PODT1 IS NULL )
                                    OR ( N1ST_SVC_TP <> 'O' AND ( VVD1 IS NULL OR CRR1 IS NULL OR POL_SEQ1 IS NULL OR  POD_SEQ1 IS NULL) ) )
                   THEN 'X'
              WHEN LNK_KNT = 1 AND ( POL1 IS NULL OR POD1 IS NULL OR POLT1 IS NULL OR PODT1 IS NULL
                                    OR ( N1ST_SVC_TP <> 'O' AND ( VVD1 IS NULL OR CRR1 IS NULL OR POL_SEQ1 IS NULL OR  POD_SEQ1 IS NULL) ) )
                   THEN 'X'
            ELSE 'Y'
        END ) CHECK_ROUT
	    ,(
            SELECT VSL_CD||SKD_VOY_NO||SKD_DIR_CD 
            FROM VSK_VSL_SKD
            WHERE (VSL_CD, SKD_VOY_NO, SKD_DIR_CD)
               IN ( (SUBSTR(@[vvd1],1,4), SUBSTR(@[vvd1],5,4), SUBSTR(@[vvd1],9,1))
                   ,(SUBSTR(@[vvd2],1,4), SUBSTR(@[vvd2],5,4), SUBSTR(@[vvd2],9,1))
                   ,(SUBSTR(@[vvd3],1,4), SUBSTR(@[vvd3],5,4), SUBSTR(@[vvd3],9,1))
                   ,(SUBSTR(@[vvd4],1,4), SUBSTR(@[vvd4],5,4), SUBSTR(@[vvd4],9,1))
                  )
            AND SKD_STS_CD = 'CLO'
              AND ROWNUM = 1
          )  STS_CHECK
        ,UPD_IND_CD OCN_FLG
        ,(SELECT REP_ZN_CD FROM MDM_LOCATION WHERE LOC_CD = @[por]) OB_REP_ZN_CD --20100406 
        ,(SELECT REP_ZN_CD FROM MDM_LOCATION WHERE LOC_CD = @[del]) IB_REP_ZN_CD --20100406 
        FROM ( -- C
            SELECT /*+ NO_MERGE(B)  */
            B.*,
            TRIM(DECODE(INSTR(SKD_STR,'CCC'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'CCC')+3,14))) CCT,
            TRIM(DECODE(INSTR(SKD_STR,'POL1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL1')+4,7))) POL1,
            TRIM(DECODE(INSTR(SKD_STR,'POD1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD1')+4,7))) POD1,
            TRIM(DECODE(INSTR(SKD_STR,'POLT1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POLT1')+5,14))) POLT1,
            TRIM(DECODE(INSTR(SKD_STR,'PODT1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'PODT1')+5,14))) PODT1,
            TRIM(DECODE(INSTR(SKD_STR,'VVD1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'VVD1')+4,9))) VVD1,
            TRIM(DECODE(INSTR(SKD_STR,'CRR1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'CRR1')+4,4))) CRR1,
            TRIM(DECODE(INSTR(SKD_STR,'POL_SEQ1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL_SEQ1')+8,2))) POL_SEQ1,
            TRIM(DECODE(INSTR(SKD_STR,'POD_SEQ1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD_SEQ1')+8,2))) POD_SEQ1,
            TRIM(DECODE(INSTR(SKD_STR,'POL2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL2')+4,7))) POL2,
            TRIM(DECODE(INSTR(SKD_STR,'POD2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD2')+4,7))) POD2,
            TRIM(DECODE(INSTR(SKD_STR,'POLT2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POLT2')+5,14))) POLT2,
            TRIM(DECODE(INSTR(SKD_STR,'PODT2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'PODT2')+5,14))) PODT2,
            TRIM(DECODE(INSTR(SKD_STR,'VVD2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'VVD2')+4,9))) VVD2,
            TRIM(DECODE(INSTR(SKD_STR,'CRR2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'CRR2')+4,4))) CRR2,
            TRIM(DECODE(INSTR(SKD_STR,'POL_SEQ2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL_SEQ2')+8,2))) POL_SEQ2,
            TRIM(DECODE(INSTR(SKD_STR,'POD_SEQ2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD_SEQ2')+8,2))) POD_SEQ2,
            TRIM(DECODE(INSTR(SKD_STR,'POL3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL3')+4,7))) POL3,
            TRIM(DECODE(INSTR(SKD_STR,'POD3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD3')+4,7))) POD3,
            TRIM(DECODE(INSTR(SKD_STR,'POLT3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POLT3')+5,14))) POLT3,
            TRIM(DECODE(INSTR(SKD_STR,'PODT3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'PODT3')+5,14))) PODT3,
            TRIM(DECODE(INSTR(SKD_STR,'VVD3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'VVD3')+4,9))) VVD3,
            TRIM(DECODE(INSTR(SKD_STR,'CRR3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'CRR3')+4,4))) CRR3,
            TRIM(DECODE(INSTR(SKD_STR,'POL_SEQ3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL_SEQ3')+8,2))) POL_SEQ3,
            TRIM(DECODE(INSTR(SKD_STR,'POD_SEQ3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD_SEQ3')+8,2))) POD_SEQ3,
            TRIM(DECODE(INSTR(SKD_STR,'POL4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL4')+4,7))) POL4,
            TRIM(DECODE(INSTR(SKD_STR,'POD4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD4')+4,7))) POD4,
            TRIM(DECODE(INSTR(SKD_STR,'POLT4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POLT4')+5,14))) POLT4,
            TRIM(DECODE(INSTR(SKD_STR,'PODT4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'PODT4')+5,14))) PODT4,
            TRIM(DECODE(INSTR(SKD_STR,'VVD4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'VVD4')+4,9))) VVD4,
            TRIM(DECODE(INSTR(SKD_STR,'CRR4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'CRR4')+4,4))) CRR4,
            TRIM(DECODE(INSTR(SKD_STR,'POL_SEQ4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL_SEQ4')+8,2))) POL_SEQ4,
            TRIM(DECODE(INSTR(SKD_STR,'POD_SEQ4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD_SEQ4')+8,2))) POD_SEQ4,
            TRIM(DECODE(LNK_KNT,4,TRIM(DECODE(INSTR(SKD_STR,'POD4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD4')+4,7))),
                           3,TRIM(DECODE(INSTR(SKD_STR,'POD3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD3')+4,7))),
                           2,TRIM(DECODE(INSTR(SKD_STR,'POD2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD2')+4,7))),
                           TRIM(DECODE(INSTR(SKD_STR,'POD1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD1')+4,7))))) POD_NODE
            FROM (
                SELECT -- B OCN 유무
                '1' HUB_COUNT, ORG_LOC_CD, DEST_LOC_CD, ROUT_SEQ, LNK_KNT,
                N1ST_LANE_CD, N2ND_LANE_CD, N3RD_LANE_CD, N4TH_LANE_CD, N2ND_POL_CD,  N3RD_POL_CD, N4TH_POL_CD,
                N1.VSL_SVC_TP_CD N1ST_SVC_TP,
                N2.VSL_SVC_TP_CD N2ND_SVC_TP,
                N3.VSL_SVC_TP_CD N3RD_SVC_TP,
                N4.VSL_SVC_TP_CD N4TH_SVC_TP,
                N1ST_TZTM_HRS, N2ND_TZTM_HRS, N3RD_TZTM_HRS, N4TH_TZTM_HRS,
                PRD_GET_OCN_SKD_FNC(@[skd_date], @[skd_type], ORG_LOC_CD, DEST_LOC_CD,
                    NVL(DECODE(N1.VSL_SVC_TP_CD, 'O',DECODE(@[vvd1],'',@[pol_n]),@[pol_n]),N1ST_POL_CD), @[n1st_pol_dc_seq], 
                    NVL(DECODE(LNK_KNT,1,DECODE(N1.VSL_SVC_TP_CD, 'O',DECODE(@[vvd1], '',@[pod_n]),@[pod_n])),N1ST_POD_CD),
                    @[n1st_pod_dc_seq], N1ST_LANE_CD, N1ST_SKD_DIR_CD, N1.VSL_SVC_TP_CD, @[vvd1],
                    N2ND_POL_CD, @[n2nd_pol_dc_seq], 
                    NVL(DECODE(LNK_KNT,2,DECODE(N2.VSL_SVC_TP_CD, 'O',DECODE(@[vvd2], '',@[pod_n]),@[pod_n])),N2ND_POD_CD),
                    @[n2nd_pod_dc_seq], N2ND_LANE_CD, N2ND_SKD_DIR_CD, N2.VSL_SVC_TP_CD, @[vvd2], 
                    N3RD_POL_CD, @[n3rd_pol_dc_seq], 
                    NVL(DECODE(LNK_KNT,3,DECODE(N3.VSL_SVC_TP_CD, 'O',DECODE(@[vvd3], '',@[pod_n]),@[pod_n])),N3RD_POD_CD),
                    @[n3rd_pod_dc_seq], N3RD_LANE_CD, N3RD_SKD_DIR_CD, N3.VSL_SVC_TP_CD, @[vvd3],
                    N4TH_POL_CD, @[n4th_pol_dc_seq], 
                    NVL(DECODE(LNK_KNT,4,DECODE(N4.VSL_SVC_TP_CD, 'O',DECODE(@[vvd4], '',@[pod_n]),@[pod_n])),DEST_LOC_CD),
                    @[n4th_pod_dc_seq], N4TH_LANE_CD, N4TH_SKD_DIR_CD, N4.VSL_SVC_TP_CD, @[vvd4],
                NVL(@[cgo_tp],'AL'),'N') SKD_STR

				,UPD_IND_CD	
                , (CASE WHEN INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                          NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,1),2,5),ORG_LOC_CD)) <= 0
                             THEN 'X'
                        WHEN INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                          NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,2),2,5),ORG_LOC_CD)) <= 0
                             THEN 'X'
                        WHEN INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                          NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,3),2,5),ORG_LOC_CD)) <= 0
                             THEN 'X'
                        WHEN INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                          NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,4),2,5),ORG_LOC_CD)) <= 0
                             THEN 'X'
                        WHEN INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                          NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,5),2,5),ORG_LOC_CD)) <= 0
                             THEN 'X'
                        WHEN INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                          NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,6),2,5),ORG_LOC_CD)) <= 0
                             THEN 'X'
                        WHEN INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                          NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,7),2,5),ORG_LOC_CD)) <= 0
                             THEN 'X'
                        WHEN INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                          DECODE(NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),1,5),'X'),NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),18,5),'X'),ORG_LOC_CD,
                           SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),18,5))) <= 0
                             THEN 'X'
                        WHEN INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                          DECODE(NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),1,5),'X'),NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),18,5),'X'),ORG_LOC_CD,
                           SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),18,5))) <= 0
                             THEN 'X'
                        WHEN INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                          DECODE(NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),1,5),'X'),NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),18,5),'X'),ORG_LOC_CD,
                           SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),18,5))) <= 0
                             THEN 'X'
                        WHEN NVL(DECODE(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),18,5),
                                                     ORG_LOC_CD||'-'||N1ST_POD_CD,N1.VSL_SVC_TP_CD,
                                                     N2ND_POL_CD||'-'||N2ND_POD_CD,N2.VSL_SVC_TP_CD,
                                                     N3RD_POL_CD||'-'||N3RD_POD_CD,N3.VSL_SVC_TP_CD,
                                                     N4TH_POL_CD||'-'||DEST_LOC_CD,N4.VSL_SVC_TP_CD),'O') <> 'O'
                             THEN 'X'
                        WHEN NVL(DECODE(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),18,5),
                                                     ORG_LOC_CD||'-'||N1ST_POD_CD,N1.VSL_SVC_TP_CD,
                                                     N2ND_POL_CD||'-'||N2ND_POD_CD,N2.VSL_SVC_TP_CD,
                                                     N3RD_POL_CD||'-'||N3RD_POD_CD,N3.VSL_SVC_TP_CD,
                                                     N4TH_POL_CD||'-'||DEST_LOC_CD,N4.VSL_SVC_TP_CD),'O') <> 'O'
                             THEN 'X'
                        WHEN NVL(DECODE(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),18,5),
                                                     ORG_LOC_CD||'-'||N1ST_POD_CD,N1.VSL_SVC_TP_CD,
                                                     N2ND_POL_CD||'-'||N2ND_POD_CD,N2.VSL_SVC_TP_CD,
                                                     N3RD_POL_CD||'-'||N3RD_POD_CD,N3.VSL_SVC_TP_CD,
                                                     N4TH_POL_CD||'-'||DEST_LOC_CD,N4.VSL_SVC_TP_CD),'O') <> 'O'
                             THEN 'X'
                        WHEN NVL(DECODE(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,4),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,4),18,5),
                                                     ORG_LOC_CD||'-'||N1ST_POD_CD,N1.VSL_SVC_TP_CD,
                                                     N2ND_POL_CD||'-'||N2ND_POD_CD,N2.VSL_SVC_TP_CD,
                                                     N3RD_POL_CD||'-'||N3RD_POD_CD,N3.VSL_SVC_TP_CD,
                                                     N4TH_POL_CD||'-'||DEST_LOC_CD,N4.VSL_SVC_TP_CD),'O') <> 'O'
                             THEN 'X'
                   ELSE 'Y'
                END) OCN_SO_CHK
                FROM PRD_OCN_ROUT A,MDM_VSL_SVC_LANE N1,MDM_VSL_SVC_LANE N2,MDM_VSL_SVC_LANE N3,MDM_VSL_SVC_LANE N4
				WHERE A.ORG_LOC_CD IN (
								  SELECT DISTINCT SUBSTR(T1.ROUT_DEST_NOD_CD, 1, 5) AS ROUT_DEST_LOC_CD
									FROM PRD_INLND_ROUT_MST T1
								   WHERE T1.ROUT_ORG_NOD_CD LIKE NVL(@[por_n], @[por]) || '%'
									 AND T1.PCTL_IO_BND_CD IN ('O', 'B')
									 AND NVL(T1.DELT_FLG, 'N') = 'N'
								  UNION
								  SELECT PORT_CD
									FROM PRD_HUB_LOC_MTCH J1
								   WHERE J1.LOC_CD = @[por] 
									AND NOT EXISTS (SELECT DISTINCT SUBSTR(T1.ROUT_DEST_NOD_CD, 1, 5) AS ROUT_DEST_LOC_CD
											FROM PRD_INLND_ROUT_MST T1
										   WHERE T1.ROUT_ORG_NOD_CD LIKE NVL(@[por_n], @[por]) || '%'
									     AND T1.ROUT_ORG_NOD_CD = J1.PORT_CD
											 AND T1.PCTL_IO_BND_CD IN ('O', 'B')
											 AND NVL(T1.DELT_FLG, 'N') = 'N')
								)
                AND A.ORG_LOC_CD = NVL(@[pol], A.ORG_LOC_CD)				
                AND A.DEST_LOC_CD IN (SELECT DISTINCT PORT_CD FROM PRD_HUB_LOC_MTCH WHERE LOC_CD = @[del] AND PORT_CD = NVL(@[pod],PORT_CD))
                AND NVL(A.UPD_IND_CD,'S') IN ('C','U','S','T','A','V','G')
                AND N1.VSL_SLAN_CD(+) = N1ST_LANE_CD
                AND N2.VSL_SLAN_CD(+) = N2ND_LANE_CD
                AND N3.VSL_SLAN_CD(+) = N3RD_LANE_CD
                AND N4.VSL_SLAN_CD(+) = N4TH_LANE_CD
                AND N1ST_POL_CD = NVL(@[pol1],N1ST_POL_CD)
                AND N1ST_POD_CD = NVL(@[pod1],N1ST_POD_CD)
                AND N1ST_LANE_CD IN ( NVL(@[lane1],N1ST_LANE_CD), (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = @[lane1]) )
                AND NVL(N2ND_POL_CD,'X') = NVL(@[pol2],NVL(N2ND_POL_CD,'X'))
                AND NVL(N2ND_POD_CD,'X') = NVL(@[pod2],NVL(N2ND_POD_CD,'X'))
                AND NVL(N2ND_LANE_CD,'X') IN ( NVL(@[lane2],NVL(N2ND_LANE_CD,'X')), (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = @[lane2]) )
                AND NVL(N3RD_POL_CD,'X') = NVL(@[pol3],NVL(N3RD_POL_CD,'X'))
                AND NVL(N3RD_POD_CD,'X') = NVL(@[pod3],NVL(N3RD_POD_CD,'X'))
                AND NVL(N3RD_LANE_CD,'X') IN ( NVL(@[lane3],NVL(N3RD_LANE_CD,'X')), (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = @[lane3]) )
                AND NVL(N4TH_POL_CD,'X') = NVL(@[pol4],NVL(N4TH_POL_CD,'X'))
                AND NVL(N4TH_POD_CD,'X') = NVL(@[pod4],NVL(N4TH_POD_CD,'X'))
                AND NVL(N4TH_LANE_CD,'X') IN ( NVL(@[lane4],NVL(N4TH_LANE_CD,'X')), (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = @[lane4]) )
				--REGEXP_SUBSTR(source, 표현식, 시작위치, 발생횟수, Matching Modifiers ) (상단 검사조건으로 올라감)

                AND (  (SELECT (CASE WHEN
                               (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                    WHERE VSL_SLAN_CD =V.SLAN_CD ) = 'O' THEN 'FDR'
                                         ELSE V.SLAN_CD
                               END) SLAN_CD
                       FROM VSK_VSL_PORT_SKD  V,VSK_VSL_PORT_SKD  V2
                       WHERE V.VSL_CD= substr(@[vvd],1,4)
                        and V.SKD_VOY_NO= substr(@[vvd],5,4)
                        and V.SKD_DIR_CD = substr(@[vvd],9,1)
                        and NVL(V.SKD_CNG_STS_CD,'N') <> 'S'
                        AND V2.VSL_CD= substr(@[vvd],1,4)
                        and V2.SKD_VOY_NO= substr(@[vvd],5,4)
                        and V2.SKD_DIR_CD = substr(@[vvd],9,1)
                        and NVL(V2.SKD_CNG_STS_CD,'N') <> 'S'
                        AND V2.CLPT_SEQ > V.CLPT_SEQ
                        AND ROWNUM=1 )      IN ( N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,'FDR')
                    OR NVL(@[vvd],'X') = 'X'
                )
                AND NOT EXISTS
                (
                   SELECT 'X' FROM PRD_MBGO_MGMT TT
                   WHERE SUBSTR (A.ORG_LOC_CD, 1, 2) = TT.FM_CNT_CD
                   AND A.TS_IND_CD = 'D'
                   AND SUBSTR (A.DEST_LOC_CD, 1, 2) = TT.TO_CNT_CD
                )
				UNION ALL
                SELECT (SELECT TO_CHAR(COUNT(*)) FROM PRD_HUB_LOC_MTCH WHERE LOC_CD = @[del] AND PORT_CD = NVL(@[pod],PORT_CD)) HUB_COUNT,
                        '', '', 0, 0, '', '', '', '', '', '', '', '', '', '', '', 0, 0, 0, 0, '','','Y' FROM dual

            ) B
			--WHERE B.OCN_SO_CHK = 'Y'
        ) C
     ) T , PRD_INLND_ROUT_MST O, PRD_INLND_ROUT_MST I
    WHERE 1=1
    AND NVL(O.PCTL_IO_BND_CD(+),'O') = 'O'
    AND O.ROUT_ORG_NOD_CD(+)
        LIKE CASE WHEN @[rcv_t] IN ('F', 'T') THEN 'X'
                  WHEN @[por_n] IS NOT NULL THEN DECODE(@[por_n], T.POL1, 'X', @[por_n])
                  WHEN @[rcv_t] = 'D' THEN OB_REP_ZN_CD
                  WHEN @[rcv_t] = 'S' AND NVL(T.POL1_S, 'N') <> 'Y' THEN @[por] || '%'
                  WHEN @[por] = @[pol] THEN DECODE(REPLACE(@[ob_str], '%', ''), NULL, 'X', @[por] || '%')
                  ELSE @[por] || '%'
            END
    AND O.ROUT_DEST_NOD_CD(+)= DECODE(@[rcv_t], 'F', 'X', 'T', 'X', T.POL1)
    AND NVL(O.DELT_FLG(+),'N') <> 'Y'
    AND NVL(O.TRSP_MOD_CD(+),'X') = DECODE ( NVL(@[ob_trsp_mode],'AL'), 'AL', NVL(O.TRSP_MOD_CD(+),'X') , @[ob_trsp_mode]  )  
    AND NVL(I.PCTL_IO_BND_CD(+),'I') = 'I'
    AND I.ROUT_ORG_NOD_CD(+)= DECODE(@[del_t], 'F', 'X', 'T', 'X', T.POD_NODE)
    AND I.ROUT_DEST_NOD_CD(+) 
        LIKE CASE WHEN @[del_t] IN ('F', 'T') THEN 'X'
                  WHEN @[del_n] IS NOT NULL THEN DECODE(@[del_n], T.POD_NODE, 'X', @[del_n])
                  WHEN @[del_t] = 'D' THEN IB_REP_ZN_CD
                  WHEN @[del_t] = 'S' AND NVL(T.POD_NODE_S, 'N') <> 'Y' THEN @[del] || '%'
                  WHEN NVL(@[pod], SUBSTR(T.POD_NODE, 1,5)) = @[del] THEN DECODE(REPLACE(@[ib_str], '%', ''), NULL, 'X', @[del] || '%')
                  ELSE @[del] || '%'
             END
    AND NVL(I.DELT_FLG(+),'N') <> 'Y'
    AND NVL(I.TRSP_MOD_CD(+),'X') = DECODE ( NVL(@[ib_trsp_mode],'AL'), 'AL', NVL(I.TRSP_MOD_CD(+),'X') , @[ib_trsp_mode]  )
	ORDER BY  DECODE(CHECK_ROUT,'Y',1, 2) ASC, DECODE(T.OCN_FLG,  'G',1, 'S', 2, 'T', 3, 'A', 4, 'V', 5, 'N', 6, 'D', 7)  ASC
	     ,INSTR(NVL(PRD_GET_INLND_ROUT_STR_FNC(O.ROUT_ORG_NOD_CD,O.ROUT_DEST_NOD_CD,O.ROUT_SEQ),'X'),NVL(REGEXP_REPLACE(REGEXP_REPLACE(@[ob_str],'-...-','-'),'%',''),'X')) DESC
         ,INSTR(NVL(PRD_GET_INLND_ROUT_STR_FNC(I.ROUT_ORG_NOD_CD,I.ROUT_DEST_NOD_CD,I.ROUT_SEQ),'X'),NVL(REGEXP_REPLACE(REGEXP_REPLACE(@[ib_str],'-...-','-'),'%',''),'X')) DESC
         , 1 DESC
         , 2 DESC
         , 3 ASC
		 , 4 ASC 
    )
WHERE  ROWNUM =1			]]></sql>
			<params>
				<param name="por" type="12" value="" out="N"/>
				<param name="pol" type="12" value="" out="N"/>
				<param name="rcv_t" type="12" value="" out="N"/>
				<param name="por_n" type="12" value="" out="N"/>
				<param name="pod" type="12" value="" out="N"/>
				<param name="del" type="12" value="" out="N"/>
				<param name="del_t" type="12" value="" out="N"/>
				<param name="del_n" type="12" value="" out="N"/>
				<param name="pol_n" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="pod_n" type="12" value="" out="N"/>
				<param name="ob_str" type="12" value="" out="N"/>
				<param name="ib_str" type="12" value="" out="N"/>
				<param name="m_pu" type="12" value="" out="N"/>
				<param name="dg_spcl_flg" type="12" value="" out="N"/>
				<param name="rf_spcl_flg" type="12" value="" out="N"/>
				<param name="ocn_str" type="12" value="" out="N"/>
				<param name="vvd1" type="12" value="" out="N"/>
				<param name="vvd2" type="12" value="" out="N"/>
				<param name="vvd3" type="12" value="" out="N"/>
				<param name="vvd4" type="12" value="" out="N"/>
				<param name="skd_date" type="12" value="" out="N"/>
				<param name="skd_type" type="12" value="" out="N"/>
				<param name="n1st_pol_dc_seq" type="12" value="" out="N"/>
				<param name="n1st_pod_dc_seq" type="12" value="" out="N"/>
				<param name="n2nd_pol_dc_seq" type="12" value="" out="N"/>
				<param name="n2nd_pod_dc_seq" type="12" value="" out="N"/>
				<param name="n3rd_pol_dc_seq" type="12" value="" out="N"/>
				<param name="n3rd_pod_dc_seq" type="12" value="" out="N"/>
				<param name="n4th_pol_dc_seq" type="12" value="" out="N"/>
				<param name="n4th_pod_dc_seq" type="12" value="" out="N"/>
				<param name="cgo_tp" type="12" value="" out="N"/>
				<param name="pol1" type="12" value="" out="N"/>
				<param name="pod1" type="12" value="" out="N"/>
				<param name="lane1" type="12" value="" out="N"/>
				<param name="pol2" type="12" value="" out="N"/>
				<param name="pod2" type="12" value="" out="N"/>
				<param name="lane2" type="12" value="" out="N"/>
				<param name="pol3" type="12" value="" out="N"/>
				<param name="pod3" type="12" value="" out="N"/>
				<param name="lane3" type="12" value="" out="N"/>
				<param name="pol4" type="12" value="" out="N"/>
				<param name="pod4" type="12" value="" out="N"/>
				<param name="lane4" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="ob_trsp_mode" type="12" value="" out="N"/>
				<param name="ib_trsp_mode" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
