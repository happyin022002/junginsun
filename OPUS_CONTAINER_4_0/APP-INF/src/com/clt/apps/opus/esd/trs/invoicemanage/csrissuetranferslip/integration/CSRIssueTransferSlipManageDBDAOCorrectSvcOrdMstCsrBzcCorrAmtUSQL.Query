<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CSRIssueTransferSlipManageDBDAOCorrectSvcOrdMstCsrBzcCorrAmtUSQL">
			<desc><![CDATA[BASIC     AMOUNT CORRECTION]]></desc>
			<sql><![CDATA[
UPDATE TRS_TRSP_SVC_ORD S
   SET S.CSR_BZC_CORR_AMT 
         = NVL(
               CASE
                 WHEN NVL(S.DELT_FLG, 'N') = 'Y' THEN NULL
                 WHEN NVL((SELECT DP_PRCS_KNT FROM MDM_CURRENCY WHERE CURR_CD = S.INV_CURR_CD AND NVL(DELT_FLG, 'N') = 'N'), 0) = 0 THEN
                 CASE S.TRSP_INV_CALC_LGC_TP_CD
                   WHEN 'TM' THEN  ( ROUND( ( NVL(S.BZC_AMT, 0)+NVL(S.NEGO_AMT, 0)+NVL(TRS_COMMON_PKG.GET_SCG_DTL_SUM_AMT_FNC(S.TRSP_SO_OFC_CTY_CD, S.TRSP_SO_SEQ), 0) ) * NVL(S.INV_XCH_RT, 1), 0) ) 
                   ELSE  ( ROUND( ( NVL(S.BZC_AMT, 0)+NVL(S.NEGO_AMT, 0)+NVL(TRS_COMMON_PKG.GET_SCG_DTL_SUM_AMT_FNC(S.TRSP_SO_OFC_CTY_CD, S.TRSP_SO_SEQ), 0) ) / NVL(S.INV_XCH_RT, 1), 0) ) 
                 END
                 ELSE
                 CASE S.TRSP_INV_CALC_LGC_TP_CD
                   WHEN 'TM' THEN  ( ROUND( ( NVL(S.BZC_AMT, 0)+NVL(S.NEGO_AMT, 0)+NVL(TRS_COMMON_PKG.GET_SCG_DTL_SUM_AMT_FNC(S.TRSP_SO_OFC_CTY_CD, S.TRSP_SO_SEQ), 0) ) * NVL(S.INV_XCH_RT, 1), 2) ) 
                   ELSE  ( ROUND( ( NVL(S.BZC_AMT, 0)+NVL(S.NEGO_AMT, 0)+NVL(TRS_COMMON_PKG.GET_SCG_DTL_SUM_AMT_FNC(S.TRSP_SO_OFC_CTY_CD, S.TRSP_SO_SEQ), 0) ) / NVL(S.INV_XCH_RT, 1), 2) ) 
                 END
               END /* EACH_EXG_CAL_SUM_BZC_AMT */
            - (CASE 
                 WHEN NVL(S.DELT_FLG, 'N') = 'Y' THEN NULL
                 WHEN NVL((SELECT DP_PRCS_KNT FROM MDM_CURRENCY WHERE CURR_CD = S.INV_CURR_CD AND NVL(DELT_FLG, 'N') = 'N'), 0) = 0  THEN
                 CASE S.TRSP_INV_CALC_LGC_TP_CD
                   WHEN 'TM' THEN  ROUND( (NVL(S.BZC_AMT, 0) + NVL(S.NEGO_AMT, 0)) * NVL(S.INV_XCH_RT, 1), 0) 
                                 + ROUND((SELECT SUM(ROUND( NVL(D.SCG_AMT, 0)*NVL(S.INV_XCH_RT, 1), 0))
                                          FROM   TRS_TRSP_SCG_DTL D
                                          WHERE S.TRSP_SO_OFC_CTY_CD = D.TRSP_SO_OFC_CTY_CD
                                          AND   S.TRSP_SO_SEQ = D.TRSP_SO_SEQ)
                                        , 0) 
                                 + NVL(S.CSR_SCG_CORR_AMT, 0) 
                   ELSE ROUND( (NVL(S.BZC_AMT, 0) + NVL(S.NEGO_AMT, 0)) / NVL(S.INV_XCH_RT, 1), 0) 
                      + ROUND((SELECT ROUND( NVL(D.SCG_AMT, 0)/NVL(S.INV_XCH_RT, 1), 0)
                               FROM   TRS_TRSP_SCG_DTL D
                               WHERE S.TRSP_SO_OFC_CTY_CD = D.TRSP_SO_OFC_CTY_CD
                               AND   S.TRSP_SO_SEQ = D.TRSP_SO_SEQ), 0) 
                      + NVL(S.CSR_SCG_CORR_AMT, 0) 
                 END
                 ELSE
                 CASE S.TRSP_INV_CALC_LGC_TP_CD
                   WHEN 'TM' THEN  ROUND( (NVL(S.BZC_AMT, 0) + NVL(S.NEGO_AMT, 0)) * NVL(S.INV_XCH_RT, 1), 2) 
                                 + ROUND((SELECT SUM(ROUND( NVL(D.SCG_AMT, 0)*NVL(S.INV_XCH_RT, 1), 2))
                                          FROM   TRS_TRSP_SCG_DTL D
                                          WHERE S.TRSP_SO_OFC_CTY_CD = D.TRSP_SO_OFC_CTY_CD
                                          AND   S.TRSP_SO_SEQ = D.TRSP_SO_SEQ), 2) 
                                 + NVL(S.CSR_SCG_CORR_AMT, 0) 
                   ELSE ROUND( (NVL(S.BZC_AMT, 0) + NVL(S.NEGO_AMT, 0)) / NVL(S.INV_XCH_RT, 1), 2) 
                      + ROUND((SELECT SUM(ROUND( NVL(D.SCG_AMT, 0)/NVL(S.INV_XCH_RT, 1), 2))
                                FROM   TRS_TRSP_SCG_DTL D
                                WHERE S.TRSP_SO_OFC_CTY_CD = D.TRSP_SO_OFC_CTY_CD
                                AND   S.TRSP_SO_SEQ = D.TRSP_SO_SEQ), 2) 
                      + NVL(S.CSR_SCG_CORR_AMT, 0) 
                 END
               END) /* EACH_SO_SUM_EXG_CAL_BZC_AMT */
             , 0)
 WHERE 1 = 1
#if ($INV_NO.size() > 0) 
	AND	S.INV_NO IN	(
		#foreach( ${key} in ${INV_NO}) 
			#if($velocityCount < $INV_NO.size()) 
				'$key', 
			#else 
				'$key' 
			#end 
		#end
	)
#end
    AND S.INV_VNDR_SEQ = @[INV_VNDR_SEQ]			]]></sql>
			<params>
				<param name="INV_VNDR_SEQ" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
