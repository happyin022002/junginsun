<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="EvaluationGroupStrategicImportanceManageDBDAOModifySpeRltSegmRsltCSQL">
			<desc><![CDATA[EvaluationGroupStrategicImportanceManageDBDAOMultiSPE_EV_GRP_STRG_IMPT_RSLT SQL 실행이 완료되면,  
SRS Analysis는 SI Analysis와 RA Analysis 의 결과값을 match 하여 생성하는 Analysis 이므로SRS Analysis Result 테이블에 
merge into 를 사용하여 SI Analysis 변경사항을 적용한다.]]></desc>
			<sql><![CDATA[
MERGE INTO SPE_RLT_SEGM_RSLT A 
USING (
      SELECT A.VNDR_SEQ ,
            @[ev_yr] EV_YR ,
            B.RA_GRP_CD ,
            ROUND( CASE WHEN @[si_grp_cd]  = 'CR' THEN SQRT(((TO_NUMBER(@[bi_scre]) - 2.5) * (TO_NUMBER(@[bi_scre]) - 2.5)) + ((TO_NUMBER(@[ds_scre]) - 2.5) * (TO_NUMBER(@[ds_scre]) - 2.5)))
      			        WHEN @[si_grp_cd] = 'LV' THEN SQRT(((TO_NUMBER(@[bi_scre]) - 2.5) * (TO_NUMBER(@[bi_scre]) - 2.5)) + (TO_NUMBER(@[ds_scre]) * TO_NUMBER(@[ds_scre]))) 
                        WHEN @[si_grp_cd] = 'BN' THEN SQRT((TO_NUMBER(@[bi_scre]) * TO_NUMBER(@[bi_scre]) ) + ((TO_NUMBER(@[ds_scre]) - 2.5) * (TO_NUMBER(@[ds_scre]) - 2.5))) 
                        WHEN @[si_grp_cd] = 'RT' THEN SQRT((TO_NUMBER(@[bi_scre]) * TO_NUMBER(@[bi_scre])) + (TO_NUMBER(@[ds_scre]) * TO_NUMBER(@[ds_scre]))) END , 2) SI_SCRE ,
            B.RA_SCRE ,
            ROUND( CASE WHEN B.RA_GRP_CD = 'HM' THEN (TO_NUMBER(B.RA_SCRE) + (2.5 * 3 )) 
                        WHEN B.RA_GRP_CD = 'EX' THEN (TO_NUMBER(B.RA_SCRE) + (2.5 * 2 )) 
                        WHEN B.RA_GRP_CD = 'DV' THEN (TO_NUMBER(B.RA_SCRE) + (2.5 * 1 )) 
                        WHEN B.RA_GRP_CD = 'LM' THEN (TO_NUMBER(B.RA_SCRE) + (2.5 * 0 )) 
                   END , 2) MODI_RA_SCRE ,
            @[si_grp_cd] SI_GRP_CD ,
            @[si_grp_nm] SI_GRP_NM
      FROM SPE_EV_GRP_SVC_PROV_MTCH A ,
           SPE_RLT_ATRC_RSLT B
      WHERE A.EG_ID       = @[eg_id]
        AND A.EG_ID_SEQ   = @[eg_id_seq]
        AND A.VNDR_SEQ    = B.VNDR_SEQ(+)
        AND @[ev_yr]      = B.EV_YR(+) ) B 
        ON (A.VNDR_SEQ  = B.VNDR_SEQ
        AND A.EV_YR     = B.EV_YR) 
WHEN MATCHED THEN
        UPDATE
        SET SI_SCRE = B.SI_SCRE ,
          MODI_SI_SCRE = ROUND( CASE WHEN @[SI_GRP_CD] = 'CR' THEN (B.SI_SCRE + (2.5 * 3 )) 
                                     WHEN @[SI_GRP_CD] = 'LV' THEN (B.SI_SCRE + (2.5 * 1 )) 
                                     WHEN @[SI_GRP_CD] = 'BN' THEN (B.SI_SCRE + (2.5 * 2 )) 
                                     WHEN @[SI_GRP_CD] = 'RT' THEN (B.SI_SCRE + (2.5 * 0 )) END , 2) ,
          RA_SCRE = B.RA_SCRE ,
          MODI_RA_SCRE = B.MODI_RA_SCRE ,
          SRS_GRP_CD = CASE WHEN (@[SI_GRP_CD] = 'CR' AND B.RA_GRP_CD = 'LM') THEN 'G1' 
                            WHEN (@[SI_GRP_CD] = 'CR' AND B.RA_GRP_CD = 'EX') THEN 'C1' 
                            WHEN (@[SI_GRP_CD] = 'CR' AND B.RA_GRP_CD = 'DV') THEN 'C2' 
                            WHEN (@[SI_GRP_CD] = 'CR' AND B.RA_GRP_CD = 'HM') THEN 'ST' 
                            WHEN (@[SI_GRP_CD] = 'BN' AND B.RA_GRP_CD = 'LM') THEN 'TA' 
                            WHEN (@[SI_GRP_CD] = 'BN' AND B.RA_GRP_CD = 'EX') THEN 'TA' 
                            WHEN (@[SI_GRP_CD] = 'BN' AND B.RA_GRP_CD = 'DV') THEN 'C3' 
                            WHEN (@[SI_GRP_CD] = 'BN' AND B.RA_GRP_CD = 'HM') THEN 'C4' 
                            WHEN (@[SI_GRP_CD] = 'LV' AND B.RA_GRP_CD = 'LM') THEN 'TA' 
                            WHEN (@[SI_GRP_CD] = 'LV' AND B.RA_GRP_CD = 'EX') THEN 'TA' 
                            WHEN (@[SI_GRP_CD] = 'LV' AND B.RA_GRP_CD = 'DV') THEN 'TA' 
                            WHEN (@[SI_GRP_CD] = 'LV' AND B.RA_GRP_CD = 'HM') THEN 'C5' 
                            WHEN (@[SI_GRP_CD] = 'RT' AND B.RA_GRP_CD = 'LM') THEN 'TA' 
                            WHEN (@[SI_GRP_CD] = 'RT' AND B.RA_GRP_CD = 'EX') THEN 'TA' 
                            WHEN (@[SI_GRP_CD] = 'RT' AND B.RA_GRP_CD = 'DV') THEN 'TA' 
                            WHEN (@[SI_GRP_CD] = 'RT' AND B.RA_GRP_CD = 'HM') THEN 'G2' 
                        END ,
          SRS_GRP_NM = CASE WHEN (@[SI_GRP_CD] = 'CR' AND B.RA_GRP_CD = 'LM') THEN 'GRAY' 
                            WHEN (@[SI_GRP_CD] = 'CR' AND B.RA_GRP_CD = 'EX') THEN 'COLLABORATIVE' 
                            WHEN (@[SI_GRP_CD] = 'CR' AND B.RA_GRP_CD = 'DV') THEN 'COLLABORATIVE' 
                            WHEN (@[SI_GRP_CD] = 'CR' AND B.RA_GRP_CD = 'HM') THEN 'STRATEGIC' 
                            WHEN (@[SI_GRP_CD] = 'BN' AND B.RA_GRP_CD = 'LM') THEN 'TRANSACTIONAL' 
                            WHEN (@[SI_GRP_CD] = 'BN' AND B.RA_GRP_CD = 'EX') THEN 'TRANSACTIONAL' 
                            WHEN (@[SI_GRP_CD] = 'BN' AND B.RA_GRP_CD = 'DV') THEN 'COLLABORATIVE' 
                            WHEN (@[SI_GRP_CD] = 'BN' AND B.RA_GRP_CD = 'HM') THEN 'COLLABORATIVE' 
                            WHEN (@[SI_GRP_CD] = 'LV' AND B.RA_GRP_CD = 'LM') THEN 'TRANSACTIONAL' 
                            WHEN (@[SI_GRP_CD] = 'LV' AND B.RA_GRP_CD = 'EX') THEN 'TRANSACTIONAL' 
                            WHEN (@[SI_GRP_CD] = 'LV' AND B.RA_GRP_CD = 'DV') THEN 'TRANSACTIONAL' 
                            WHEN (@[SI_GRP_CD] = 'LV' AND B.RA_GRP_CD = 'HM') THEN 'COLLABORATIVE' 
                            WHEN (@[SI_GRP_CD] = 'RT' AND B.RA_GRP_CD = 'LM') THEN 'TRANSACTIONAL' 
                            WHEN (@[SI_GRP_CD] = 'RT' AND B.RA_GRP_CD = 'EX') THEN 'TRANSACTIONAL' 
                            WHEN (@[SI_GRP_CD] = 'RT' AND B.RA_GRP_CD = 'DV') THEN 'TRANSACTIONAL' 
                            WHEN (@[SI_GRP_CD] = 'RT' AND B.RA_GRP_CD = 'HM') THEN 'GRAY 2' 
                      END ,
          SI_GRP_CD = B.SI_GRP_CD ,
          SI_GRP_NM = B.SI_GRP_NM ,
          UPD_USR_ID = @[upd_usr_id] ,
          UPD_DT = SYSDATE 
WHEN NOT MATCHED THEN
          INSERT ( VNDR_SEQ ,
                  EV_YR ,
                  SI_SCRE ,
                  MODI_SI_SCRE ,
                  RA_SCRE ,
                  MODI_RA_SCRE ,
                  SI_GRP_CD ,
                  SI_GRP_NM ,
                  CRE_USR_ID ,
                  CRE_DT ,
                  UPD_USR_ID ,
                  UPD_DT )
          VALUES( B.VNDR_SEQ ,
                  B.EV_YR ,
                  B.SI_SCRE ,
                  ROUND( CASE WHEN @[SI_GRP_CD] = 'CR' THEN (B.SI_SCRE + (2.5 * 3 )) 
                              WHEN @[SI_GRP_CD] = 'LV' THEN (B.SI_SCRE + (2.5 * 1 )) 
                              WHEN @[SI_GRP_CD] = 'BN' THEN (B.SI_SCRE + (2.5 * 2 )) 
                              WHEN @[SI_GRP_CD] = 'RT' THEN (B.SI_SCRE + (2.5 * 0 )) 
                          END , 2) ,
                  B.RA_SCRE ,
                  B.MODI_RA_SCRE ,
                  B.SI_GRP_CD ,
                  B.SI_GRP_NM ,
                  @[cre_usr_id] ,
                  SYSDATE ,
                  @[upd_usr_id] ,
                  SYSDATE )			]]></sql>
			<params>
				<param name="ev_yr" type="12" value="" out="N"/>
				<param name="si_grp_cd" type="12" value="" out="N"/>
				<param name="bi_scre" type="12" value="" out="N"/>
				<param name="ds_scre" type="12" value="" out="N"/>
				<param name="si_grp_nm" type="12" value="" out="N"/>
				<param name="eg_id" type="12" value="" out="N"/>
				<param name="eg_id_seq" type="12" value="" out="N"/>
				<param name="SI_GRP_CD" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
				<param name="cre_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
