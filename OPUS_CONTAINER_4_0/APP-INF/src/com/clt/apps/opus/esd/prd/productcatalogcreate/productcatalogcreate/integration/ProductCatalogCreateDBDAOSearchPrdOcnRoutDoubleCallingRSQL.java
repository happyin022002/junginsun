/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : ProductCatalogCreateDBDAOSearchPrdOcnRoutDoubleCallingRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.09.12
*@LastModifier : 
*@LastVersion : 1.0
* 2016.09.12 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esd.prd.productcatalogcreate.productcatalogcreate.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class ProductCatalogCreateDBDAOSearchPrdOcnRoutDoubleCallingRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 생성된 pc의 ocn 부분을 doublecalling 을 포함하여 조회한다.
	  * </pre>
	  */
	public ProductCatalogCreateDBDAOSearchPrdOcnRoutDoubleCallingRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_date",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("hd_pctl_no",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esd.prd.productcatalogcreate.productcatalogcreate.integration").append("\n"); 
		query.append("FileName : ProductCatalogCreateDBDAOSearchPrdOcnRoutDoubleCallingRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT    CHK " ).append("\n"); 
		query.append("         ,NO" ).append("\n"); 
		query.append("         ,PCTL_NO " ).append("\n"); 
		query.append("         ,SLS_OFC_CD " ).append("\n"); 
		query.append("         ,ORG_LOC_CD " ).append("\n"); 
		query.append("         ,DEST_LOC_CD " ).append("\n"); 
		query.append("         ,ROUT_SEQ " ).append("\n"); 
		query.append("         ,UPD_IND_CD " ).append("\n"); 
		query.append("         ,ORD " ).append("\n"); 
		query.append("         ,RK " ).append("\n"); 
		query.append("         ,VVD_LNK_NO " ).append("\n"); 
		query.append("         ,TZTM_HRS " ).append("\n"); 
		query.append("         ,ORG_TZTM_HRS " ).append("\n"); 
		query.append("         ,LNK_KNT " ).append("\n"); 
		query.append("         ,OCN_ROUT_PRIO_CD " ).append("\n"); 
		query.append("         ,N1ST_VSL_SLAN_CD " ).append("\n"); 
		query.append("         ,N1ST_SLAN_CD " ).append("\n"); 
		query.append("         ,N1ST_VVD " ).append("\n"); 
		query.append("         ,N1ST_POL " ).append("\n"); 
		query.append("         ,N1ST_POD " ).append("\n"); 
		query.append("         ,N1ST_POL_N " ).append("\n"); 
		query.append("         ,N1ST_POD_N " ).append("\n"); 
		query.append("         ,N1ST_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N1ST_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N1ST_POL_DC " ).append("\n"); 
		query.append("         ,N1ST_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N1ST_POD_DC " ).append("\n"); 
		query.append("         ,N1ST_POD_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N1ST_TVVD_FLAG " ).append("\n"); 
		query.append("         ,N1ST_SPACE " ).append("\n"); 
		query.append("         ,(CASE WHEN N1ST_POL_CLPT_IND_SEQ > N1ST_POL_DC_CLPT_SEQ THEN N1ST_POL_DC ELSE '' END ) PRE_N1ST_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N1ST_POL_CLPT_IND_SEQ < N1ST_POL_DC_CLPT_SEQ THEN N1ST_POL_DC ELSE '' END ) POST_N1ST_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N1ST_POD_CLPT_IND_SEQ > N1ST_POD_DC_CLPT_SEQ THEN N1ST_POD_DC ELSE '' END ) PRE_N1ST_POD_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N1ST_POD_CLPT_IND_SEQ < N1ST_POD_DC_CLPT_SEQ THEN N1ST_POD_DC ELSE '' END ) POST_N1ST_POD_DC" ).append("\n"); 
		query.append("         ,N2ND_VSL_SLAN_CD " ).append("\n"); 
		query.append("         ,N2ND_SLAN_CD " ).append("\n"); 
		query.append("         ,N2ND_VVD " ).append("\n"); 
		query.append("         ,N2ND_POL " ).append("\n"); 
		query.append("         ,N2ND_POD " ).append("\n"); 
		query.append("         ,N2ND_POL_N " ).append("\n"); 
		query.append("         ,N2ND_POD_N " ).append("\n"); 
		query.append("         ,N2ND_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N2ND_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N2ND_POL_DC " ).append("\n"); 
		query.append("         ,N2ND_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N2ND_POD_DC " ).append("\n"); 
		query.append("         ,N2ND_POD_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N2ND_TVVD_FLAG " ).append("\n"); 
		query.append("         ,N2ND_SPACE " ).append("\n"); 
		query.append("         ,(CASE WHEN N2ND_POL_CLPT_IND_SEQ > N2ND_POL_DC_CLPT_SEQ THEN N2ND_POL_DC ELSE '' END ) PRE_N2ND_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N2ND_POL_CLPT_IND_SEQ < N2ND_POL_DC_CLPT_SEQ THEN N2ND_POL_DC ELSE '' END ) POST_N2ND_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N2ND_POD_CLPT_IND_SEQ > N2ND_POD_DC_CLPT_SEQ THEN N2ND_POD_DC ELSE '' END ) PRE_N2ND_POD_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N2ND_POD_CLPT_IND_SEQ < N2ND_POD_DC_CLPT_SEQ THEN N2ND_POD_DC ELSE '' END ) POST_N2ND_POD_DC" ).append("\n"); 
		query.append("         ,N3RD_VSL_SLAN_CD " ).append("\n"); 
		query.append("         ,N3RD_SLAN_CD " ).append("\n"); 
		query.append("         ,N3RD_VVD " ).append("\n"); 
		query.append("         ,N3RD_POL " ).append("\n"); 
		query.append("         ,N3RD_POD " ).append("\n"); 
		query.append("         ,N3RD_POL_N " ).append("\n"); 
		query.append("         ,N3RD_POD_N " ).append("\n"); 
		query.append("         ,N3RD_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N3RD_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N3RD_POL_DC " ).append("\n"); 
		query.append("         ,N3RD_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N3RD_POD_DC " ).append("\n"); 
		query.append("         ,N3RD_POD_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N3RD_TVVD_FLAG " ).append("\n"); 
		query.append("         ,N3RD_SPACE " ).append("\n"); 
		query.append("         ,(CASE WHEN N3RD_POL_CLPT_IND_SEQ > N3RD_POL_DC_CLPT_SEQ THEN N3RD_POL_DC ELSE '' END ) PRE_N3RD_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N3RD_POL_CLPT_IND_SEQ < N3RD_POL_DC_CLPT_SEQ THEN N3RD_POL_DC ELSE '' END ) POST_N3RD_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N3RD_POD_CLPT_IND_SEQ > N3RD_POD_DC_CLPT_SEQ THEN N3RD_POD_DC ELSE '' END ) PRE_N3RD_POD_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N3RD_POD_CLPT_IND_SEQ < N3RD_POD_DC_CLPT_SEQ THEN N3RD_POD_DC ELSE '' END ) POST_N3RD_POD_DC" ).append("\n"); 
		query.append("         ,N4TH_VSL_SLAN_CD " ).append("\n"); 
		query.append("         ,N4TH_SLAN_CD " ).append("\n"); 
		query.append("         ,N4TH_VVD " ).append("\n"); 
		query.append("         ,N4TH_POL " ).append("\n"); 
		query.append("         ,N4TH_POD " ).append("\n"); 
		query.append("         ,N4TH_POL_N " ).append("\n"); 
		query.append("         ,N4TH_POD_N " ).append("\n"); 
		query.append("         ,N4TH_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N4TH_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N4TH_POL_DC " ).append("\n"); 
		query.append("         ,N4TH_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N4TH_POD_DC " ).append("\n"); 
		query.append("         ,N4TH_POD_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N4TH_TVVD_FLAG " ).append("\n"); 
		query.append("         ,N4TH_SPACE " ).append("\n"); 
		query.append("         ,(CASE WHEN N4TH_POL_CLPT_IND_SEQ > N4TH_POL_DC_CLPT_SEQ THEN N4TH_POL_DC ELSE '' END ) PRE_N4TH_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N4TH_POL_CLPT_IND_SEQ < N4TH_POL_DC_CLPT_SEQ THEN N4TH_POL_DC ELSE '' END ) POST_N4TH_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N4TH_POD_CLPT_IND_SEQ > N4TH_POD_DC_CLPT_SEQ THEN N4TH_POD_DC ELSE '' END ) PRE_N4TH_POD_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N4TH_POD_CLPT_IND_SEQ < N4TH_POD_DC_CLPT_SEQ THEN N4TH_POD_DC ELSE '' END ) POST_N4TH_POD_DC" ).append("\n"); 
		query.append("         ,TTL_EXPN_AMT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("         ,TO_CHAR((CASE (SELECT COUNT(*)" ).append("\n"); 
		query.append("                   FROM prd_prod_ctl_mst m1" ).append("\n"); 
		query.append("                  WHERE m1.POL_NOD_CD = (SELECT /*+ index(dtl XPKPRD_PROD_CTL_ROUT_DTL) */ DEST_NOD_CD" ).append("\n"); 
		query.append("                                           FROM prd_prod_ctl_rout_dtl dtl" ).append("\n"); 
		query.append("                                          WHERE dtl.pctl_no = m1.pctl_no                                            " ).append("\n"); 
		query.append("                                            AND dtl.DEST_NOD_TP_CD <> 'Z'" ).append("\n"); 
		query.append("                                            AND dtl.NOD_LNK_DIV_CD = 'L'" ).append("\n"); 
		query.append("                                            AND dtl.MTY_YD_FLG = 'N'" ).append("\n"); 
		query.append("                                            AND rownum = 1)" ).append("\n"); 
		query.append("                    AND m1.pctl_no = t1.PCTL_NO)" ).append("\n"); 
		query.append("                 WHEN 0 THEN" ).append("\n"); 
		query.append("                  (NVL(PRD_GET_INLND_CCT_FNC(t1.PCTL_NO)," ).append("\n"); 
		query.append("                       (SELECT /*+INDEX_DESC(DTL XPKPRD_PROD_CTL_ROUT_DTL)*/" ).append("\n"); 
		query.append("                         DTL.ARR_ST_DT" ).append("\n"); 
		query.append("                          FROM PRD_PROD_CTL_ROUT_DTL DTL" ).append("\n"); 
		query.append("                              ,PRD_INLND_ROUT_MST    O" ).append("\n"); 
		query.append("                         WHERE DTL.PCTL_NO = t1.PCTL_NO" ).append("\n"); 
		query.append("                           AND DTL.PCTL_IO_BND_CD = 'O'" ).append("\n"); 
		query.append("                           AND DTL.ROUT_ORG_NOD_CD = O.ROUT_ORG_NOD_CD" ).append("\n"); 
		query.append("                           AND DTL.ROUT_DEST_NOD_CD = O.ROUT_DEST_NOD_CD" ).append("\n"); 
		query.append("                           AND DTL.ROUT_SEQ = O.ROUT_SEQ" ).append("\n"); 
		query.append("                           AND DTL.ORG_NOD_CD = O.FULL_RTN_YD_CD" ).append("\n"); 
		query.append("                           AND DTL.ROUT_SEQ > 0" ).append("\n"); 
		query.append("                           AND DTL.NOD_LNK_DIV_CD = 'N'" ).append("\n"); 
		query.append("                           AND ROWNUM = 1" ).append("\n"); 
		query.append("                        UNION ALL" ).append("\n"); 
		query.append("                        SELECT /*+INDEX_DESC(DTL XPKPRD_PROD_CTL_ROUT_DTL)*/" ).append("\n"); 
		query.append("                         DTL.ARR_ST_DT" ).append("\n"); 
		query.append("                          FROM PRD_PROD_CTL_ROUT_DTL DTL" ).append("\n"); 
		query.append("                         WHERE DTL.PCTL_NO = t1.PCTL_NO" ).append("\n"); 
		query.append("                           AND DTL.PCTL_IO_BND_CD = 'O'" ).append("\n"); 
		query.append("                           AND DTL.ROUT_SEQ = 0" ).append("\n"); 
		query.append("                           AND ROWNUM = 1)))    " ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                 ELSE	PRD_COMMON_PKG.PRD_GET_CCT_BY_PC_FNC(t1.PCTL_NO)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("--                  (SELECT DISTINCT PRD_GET_CCT_FNC(D.ORG_NOD_CD," ).append("\n"); 
		query.append("--                                                    D.VSL_SLAN_CD," ).append("\n"); 
		query.append("--                                                    D.SKD_DIR_CD," ).append("\n"); 
		query.append("--                                                    CASE 	WHEN MA.DG_SPCL_FLG 		= 'Y' THEN 'DG'" ).append("\n"); 
		query.append("--                                                         	WHEN MA.RF_SPCL_FLG 		= 'Y' THEN 'RF'" ).append("\n"); 
		query.append("--															WHEN MA.SPCL_AWK_CGO_FLG 	= 'Y' THEN 'AK'" ).append("\n"); 
		query.append("--											 				WHEN MA.BB_SPCL_FLG 		= 'Y' THEN 'BB'" ).append("\n"); 
		query.append("--                                                         	--:2016-09-05:--WHEN MA.SPCL_AWK_CGO_FLG = 'Y' OR MA.BB_SPCL_FLG = 'Y' THEN 'AL'" ).append("\n"); 
		query.append("--                                                         	ELSE 'DR'" ).append("\n"); 
		query.append("--                                                    END," ).append("\n"); 
		query.append("--                                                    D.VSL_CD || D.SKD_VOY_NO || D.SKD_DIR_CD," ).append("\n"); 
		query.append("--                                                    D.ORG_CLPT_IND_SEQ," ).append("\n"); 
		query.append("--                                                    NVL(S.VPS_ETB_DT, D.ARR_ST_DT)," ).append("\n"); 
		query.append("--                                                    NVL(S.VPS_ETD_DT, D.ARR_ST_DT))" ).append("\n"); 
		query.append("--                      FROM PRD_PROD_CTL_MST      MA" ).append("\n"); 
		query.append("--                          ,PRD_PROD_CTL_ROUT_DTL D" ).append("\n"); 
		query.append("--                          ,VSK_VSL_PORT_SKD      S" ).append("\n"); 
		query.append("--                     WHERE MA.PCTL_NO = t1.PCTL_NO" ).append("\n"); 
		query.append("--                       AND MA.PCTL_NO = D.PCTL_NO" ).append("\n"); 
		query.append("--                       AND D.PCTL_IO_BND_CD = 'T'" ).append("\n"); 
		query.append("--                       AND D.TRSP_MOD_CD IN ('WD', 'VD')" ).append("\n"); 
		query.append("--                       AND SUBSTR(D.ORG_NOD_CD, 1, 5) = MA.POL_CD" ).append("\n"); 
		query.append("--                       AND S.VSL_CD(+) = D.VSL_CD" ).append("\n"); 
		query.append("--                       AND S.SKD_VOY_NO(+) = D.SKD_VOY_NO" ).append("\n"); 
		query.append("--                       AND S.SKD_DIR_CD(+) = D.SKD_DIR_CD" ).append("\n"); 
		query.append("--                       AND S.CLPT_IND_SEQ(+) = D.ORG_CLPT_IND_SEQ" ).append("\n"); 
		query.append("--                       AND S.YD_CD(+) = D.ORG_NOD_CD)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("               END)," ).append("\n"); 
		query.append("               'YYYY-MM-DD HH24:MI') AS CUT_OFF" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			---------------------------------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("			--:2016-08-19:add FULL CARGO CUT OFF YARD:---------------------------------------------------------------------------" ).append("\n"); 
		query.append("        ,	(" ).append("\n"); 
		query.append("            SELECT		/*+ INDEX_ASC(DTL XPKPRD_PROD_CTL_ROUT_DTL) */ DTL.DEST_NOD_CD" ).append("\n"); 
		query.append("            FROM		PRD_PROD_CTL_ROUT_DTL  DTL" ).append("\n"); 
		query.append("            WHERE		DTL.PCTL_NO            = t1.pctl_no" ).append("\n"); 
		query.append("            AND			DTL.PCTL_IO_BND_CD     = 'O'" ).append("\n"); 
		query.append("            AND			DTL.NOD_LNK_DIV_CD     = 'L'" ).append("\n"); 
		query.append("			AND			DTL.MTY_YD_FLG         = 'N'" ).append("\n"); 
		query.append("			AND			DTL.DEST_NOD_CD        <> 'Z'" ).append("\n"); 
		query.append("            AND			ROWNUM                 = 1" ).append("\n"); 
		query.append("        	)			AS CUT_OFF_YD_CD" ).append("\n"); 
		query.append("			---------------------------------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("			---------------------------------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      	 ,(SELECT COUNT(A.HRD_CDG_ID)  FROM BKG_HRD_CDG_CTNT A" ).append("\n"); 
		query.append("         WHERE HRD_CDG_ID = 'OSCAR_VVD_CHK'" ).append("\n"); 
		query.append("           AND ATTR_CTNT3 = DECODE(VVD_LNK_NO, 1, N1ST_SLAN_CD, 2, N2ND_SLAN_CD, 3, N3RD_SLAN_CD, 4, N4TH_SLAN_CD)" ).append("\n"); 
		query.append("           AND ATTR_CTNT4 = SUBSTR(DECODE(VVD_LNK_NO, 1, N1ST_VVD, 2, N2ND_VVD, 3, N3RD_VVD, 4, N4TH_VVD), 1, 4)" ).append("\n"); 
		query.append("           AND ATTR_CTNT5 = SUBSTR(DECODE(VVD_LNK_NO, 1, N1ST_VVD, 2, N2ND_VVD, 3, N3RD_VVD, 4, N4TH_VVD), 5, 4)" ).append("\n"); 
		query.append("           AND ATTR_CTNT6 = SUBSTR(DECODE(VVD_LNK_NO, 1, N1ST_VVD, 2, N2ND_VVD, 3, N3RD_VVD, 4, N4TH_VVD), 9, 1)) OSCA_VVD_FLG" ).append("\n"); 
		query.append("FROM     ( SELECT   ''  CHK " ).append("\n"); 
		query.append("                   ,NO " ).append("\n"); 
		query.append("                   ,PCTL_NO " ).append("\n"); 
		query.append("                   ,SLS_OFC_CD " ).append("\n"); 
		query.append("                   ,ORG_LOC_CD " ).append("\n"); 
		query.append("                   ,DEST_LOC_CD " ).append("\n"); 
		query.append("                   ,ROUT_SEQ " ).append("\n"); 
		query.append("                   ,DECODE(UPD_IND_CD,'S','Standard', 'T', 'Temporary', 'V', 'Validation','N','Not Used','A','Add Call','D','Deleted','G','Guide') UPD_IND_CD " ).append("\n"); 
		query.append("                   ,DECODE(UPD_IND_CD,'G',1,'S',1,'T',3,'A',4,'V',5,'N',6,'D',7) ORD " ).append("\n"); 
		query.append("                   ,OCN_ROUT_PRIO_CD " ).append("\n"); 
		query.append("                   ,RANK() OVER(PARTITION BY SUBSTR(PCTL_NO,1,1) ORDER BY TTL_EXPN_AMT, DECODE(UPD_IND_CD,'G',1,'S',1,'T',3,'A',4,'V',5,'N',6,'D',7), OCN_ROUT_PRIO_CD, LNK_KNT, TZTM_HRS, ROUT_SEQ ASC) RK " ).append("\n"); 
		query.append("                   ,TZTM_HRS ORG_TZTM_HRS " ).append("\n"); 
		query.append("                   ,LNK_KNT " ).append("\n"); 
		query.append("                   ,CASE 	WHEN N1ST_TVVD_FLAG = 'V'	THEN '1' " ).append("\n"); 
		query.append("                      		WHEN N2ND_TVVD_FLAG = 'V' 	THEN '2' " ).append("\n"); 
		query.append("                      		WHEN N3RD_TVVD_FLAG = 'V' 	THEN '3' " ).append("\n"); 
		query.append("                      		WHEN N4TH_TVVD_FLAG = 'V' 	THEN '4' " ).append("\n"); 
		query.append("                      		ELSE '' " ).append("\n"); 
		query.append("                    END VVD_LNK_NO " ).append("\n"); 
		query.append("                   ,LTRIM(TO_CHAR(TRUNC(TZTM_HRS / 24,0),'00') ||'D-') ||LTRIM(TO_CHAR(MOD(TZTM_HRS,24),'00')  ||'H') TZTM_HRS " ).append("\n"); 
		query.append("                   ,N1ST_VSL_SLAN_CD " ).append("\n"); 
		query.append("                   ,N1ST_SLAN_CD " ).append("\n"); 
		query.append("                   ,N1ST_VVD " ).append("\n"); 
		query.append("                   ,N1ST_POL " ).append("\n"); 
		query.append("                   ,N1ST_POD " ).append("\n"); 
		query.append("                   ,N1ST_POL_N " ).append("\n"); 
		query.append("                   ,N1ST_POD_N " ).append("\n"); 
		query.append("                   ,N1ST_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,N1ST_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N1ST_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POL_N,1,5)" ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N1ST_POL_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                    -- 1ST POL 은 skd을 잡을때 짧은 것을 잡게 되어 있음 " ).append("\n"); 
		query.append("                                    -- ex, A1 1/1 10시, A2 1/2 10시, B1 1/10 10시 로 A1,A2가 DOUBLE CALLING일때" ).append("\n"); 
		query.append("                                    --     SKD 로직에선 A2 - B1을 잡는다." ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N1ST_POD_ETA" ).append("\n"); 
		query.append("                                    -- SAILING DUE DATE가 있으면 확인" ).append("\n"); 
		query.append("#if (${skd_type} == 'L') " ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT > TO_DATE(@[skd_date],'YYYYMMDD')" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETD_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POL_N,1,5)" ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N1ST_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N1ST_POD_ETA" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${skd_type} == 'L') " ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT > TO_DATE(@[skd_date],'YYYYMMDD')" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("                       ELSE ''" ).append("\n"); 
		query.append("                     END) N1ST_POL_DC " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N1ST_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POL_N,1,5)" ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N1ST_POL_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                    -- 1ST POL 은 skd을 잡을때 짧은 것을 잡게 되어 있음 " ).append("\n"); 
		query.append("                                    -- ex, A1 1/1 10시, A2 1/2 10시, B1 1/10 10시 로 A1,A2가 DOUBLE CALLING일때" ).append("\n"); 
		query.append("                                    --     SKD 로직에선 A2 - B1을 잡는다." ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N1ST_POD_ETA" ).append("\n"); 
		query.append("                                    -- SAILING DUE DATE가 있으면 확인" ).append("\n"); 
		query.append("#if (${skd_type} == 'L') " ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT > TO_DATE(@[skd_date],'YYYYMMDD')" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )  " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N1ST_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("                   ----------------------------------------------                        " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N1ST_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POD_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N1ST_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N1ST_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETA_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POD_N,1,5)" ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N1ST_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N1ST_POL_ETD" ).append("\n"); 
		query.append("                                    AND ROWNUM =1) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N1ST_POD_DC " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N1ST_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POD_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N1ST_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N1ST_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N1ST_POD_DC_CLPT_SEQ " ).append("\n"); 
		query.append("                     ------------------------------------------------------" ).append("\n"); 
		query.append("                   ,N1ST_TVVD_FLAG " ).append("\n"); 
		query.append("                   ,DECODE(NO,'1',PRD_GET_SPACE_FNC(PCTL_NO,N1ST_POL_N,N1ST_POD_N,N1ST_VVD,N1ST_TVVD_FLAG, SLS_OFC_CD),'') N1ST_SPACE " ).append("\n"); 
		query.append("                   ,N2ND_VSL_SLAN_CD " ).append("\n"); 
		query.append("                   ,N2ND_SLAN_CD " ).append("\n"); 
		query.append("                   ,N2ND_VVD " ).append("\n"); 
		query.append("                   ,N2ND_POL " ).append("\n"); 
		query.append("                   ,N2ND_POD " ).append("\n"); 
		query.append("                   ,N2ND_POL_N " ).append("\n"); 
		query.append("                   ,N2ND_POD_N " ).append("\n"); 
		query.append("                   ,N2ND_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,N2ND_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N2ND_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POL_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S'  " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N2ND_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N2ND_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                            ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETD_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POL_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N2ND_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N2ND_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                            ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N2ND_POL_DC " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N2ND_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POL_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S'  " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N2ND_POL_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                    -- 1ST POL 은 skd을 잡을때 짧은 것을 잡게 되어 있음 " ).append("\n"); 
		query.append("                                    -- ex, A1 1/1 10시, A2 1/2 10시, B1 1/10 10시 로 A1,A2가 DOUBLE CALLING일때" ).append("\n"); 
		query.append("                                    --     SKD 로직에선 A2 - B1을 잡는다." ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N2ND_POD_ETA" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )  " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N2ND_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("                     ------------------------------------------                     " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N2ND_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POD_N,1,5)" ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N2ND_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N2ND_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                            ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETA_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POD_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N2ND_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N2ND_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1                                    " ).append("\n"); 
		query.append("                                    ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N2ND_POD_DC " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N2ND_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POD_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N2ND_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N2ND_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N2ND_POD_DC_CLPT_SEQ " ).append("\n"); 
		query.append("                     -----------------------------------------                     " ).append("\n"); 
		query.append("                   ,N2ND_TVVD_FLAG " ).append("\n"); 
		query.append("                   ,DECODE(N2ND_POL_N,NULL,'',DECODE(NO,'1',PRD_GET_SPACE_FNC(PCTL_NO,N2ND_POL_N,N2ND_POD_N,N2ND_VVD,N2ND_TVVD_FLAG, SLS_OFC_CD) ,'')) N2ND_SPACE " ).append("\n"); 
		query.append("                   ,N3RD_VSL_SLAN_CD " ).append("\n"); 
		query.append("                   ,N3RD_SLAN_CD " ).append("\n"); 
		query.append("                   ,N3RD_VVD " ).append("\n"); 
		query.append("                   ,N3RD_POL " ).append("\n"); 
		query.append("                   ,N3RD_POD " ).append("\n"); 
		query.append("                   ,N3RD_POL_N " ).append("\n"); 
		query.append("                   ,N3RD_POD_N " ).append("\n"); 
		query.append("                   ,N3RD_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,N3RD_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N3RD_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POL_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N3RD_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N3RD_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETD_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POL_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N3RD_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N3RD_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N3RD_POL_DC " ).append("\n"); 
		query.append("                    " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N3RD_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POL_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N3RD_POL_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                    -- 1ST POL 은 skd을 잡을때 짧은 것을 잡게 되어 있음 " ).append("\n"); 
		query.append("                                    -- ex, A1 1/1 10시, A2 1/2 10시, B1 1/10 10시 로 A1,A2가 DOUBLE CALLING일때" ).append("\n"); 
		query.append("                                    --     SKD 로직에선 A2 - B1을 잡는다." ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N3RD_POD_ETA" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )  " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N3RD_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("                     ------------------------------------------                     " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N3RD_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POD_N,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N3RD_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT  > N3RD_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETA_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POD_N,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N3RD_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT  > N3RD_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N3RD_POD_DC " ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N3RD_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POD_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N3RD_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N2ND_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N3RD_POD_DC_CLPT_SEQ " ).append("\n"); 
		query.append("                     -----------------------------------------                      " ).append("\n"); 
		query.append("                   ,N3RD_TVVD_FLAG " ).append("\n"); 
		query.append("                   ,DECODE(N3RD_POL_N,NULL,'' ,DECODE(NO,'1',PRD_GET_SPACE_FNC(PCTL_NO,N3RD_POL_N,N3RD_POD_N,N3RD_VVD,N3RD_TVVD_FLAG, SLS_OFC_CD),'')) N3RD_SPACE " ).append("\n"); 
		query.append("                   ,N4TH_VSL_SLAN_CD " ).append("\n"); 
		query.append("                   ,N4TH_SLAN_CD " ).append("\n"); 
		query.append("                   ,N4TH_VVD " ).append("\n"); 
		query.append("                   ,N4TH_POL " ).append("\n"); 
		query.append("                   ,N4TH_POD " ).append("\n"); 
		query.append("                   ,N4TH_POL_N " ).append("\n"); 
		query.append("                   ,N4TH_POD_N " ).append("\n"); 
		query.append("                   ,N4TH_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,N4TH_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N4TH_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POL_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N4TH_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N4TH_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETD_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POL_N,1,5)" ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N4TH_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N4TH_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1 " ).append("\n"); 
		query.append("                                    ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N4TH_POL_DC " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N4TH_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POL_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N4TH_POL_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                    -- 1ST POL 은 skd을 잡을때 짧은 것을 잡게 되어 있음 " ).append("\n"); 
		query.append("                                    -- ex, A1 1/1 10시, A2 1/2 10시, B1 1/10 10시 로 A1,A2가 DOUBLE CALLING일때" ).append("\n"); 
		query.append("                                    --     SKD 로직에선 A2 - B1을 잡는다." ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N4TH_POD_ETA" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )  " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N4TH_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("                     ------------------------------------------ " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N4TH_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POD_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N4TH_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT  > N4TH_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETA_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POD_N,1,5) " ).append("\n"); 
		query.append("									AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N4TH_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT  > N4TH_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N4TH_POD_DC " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N4TH_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ" ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POD_N,1,5) " ).append("\n"); 
		query.append("				    AND NVL(V.SKD_CNG_STS_CD, ' ') <> 'S' " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N4TH_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N4TH_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N4TH_POD_DC_CLPT_SEQ " ).append("\n"); 
		query.append("                     -----------------------------------------                        " ).append("\n"); 
		query.append("                   ,N4TH_TVVD_FLAG " ).append("\n"); 
		query.append("                   ,DECODE(N4TH_POL_N,NULL,'' ,DECODE(NO,'1',PRD_GET_SPACE_FNC(PCTL_NO,N4TH_POL_N,N4TH_POD_N,N4TH_VVD,N4TH_TVVD_FLAG, SLS_OFC_CD),'')) N4TH_SPACE " ).append("\n"); 
		query.append("                   ,TTL_EXPN_AMT " ).append("\n"); 
		query.append("          FROM     (" ).append("\n"); 
		query.append("                    SELECT   '1'                                      NO " ).append("\n"); 
		query.append("                             ,PCTL_NO " ).append("\n"); 
		query.append("                             ,ORG_LOC_CD " ).append("\n"); 
		query.append("                             ,DEST_LOC_CD " ).append("\n"); 
		query.append("                             ,O.ROUT_SEQ " ).append("\n"); 
		query.append("                             ,LNK_KNT " ).append("\n"); 
		query.append("                             ,MAX(UPD_IND_CD)                         UPD_IND_CD " ).append("\n"); 
		query.append("                             ,MAX(OCN_ROUT_PRIO_CD)                   OCN_ROUT_PRIO_CD " ).append("\n"); 
		query.append("                             ,(MAX(DEP_FSH_DT) - MIN(ARR_ST_DT)) * 24 TZTM_HRS " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,VSL_SLAN_CD||chr(13)||chr(10)||VSL_CD ||SKD_VOY_NO ||SKD_DIR_CD,'')) N1ST_VSL_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,VSL_SLAN_CD,'')) N1ST_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,VSL_CD ||SKD_VOY_NO ||SKD_DIR_CD ,'')) N1ST_VVD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,ORG_NOD_CD||chr(13)||chr(10)||TO_CHAR(ARR_ST_DT,'YYYY-MM-DD') ,'')) N1ST_POL" ).append("\n"); 
		query.append("                                                                                      " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,DEST_NOD_CD||chr(13)||chr(10)||TO_CHAR(DEP_FSH_DT,'YYYY-MM-DD') ,'')) N1ST_POD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,ORG_NOD_CD  ,'')) N1ST_POL_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,DEST_NOD_CD ,'')) N1ST_POD_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,ARR_ST_DT ,'')) N1ST_POL_ETD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,DEP_FSH_DT ,'')) N1ST_POD_ETA" ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,ORG_CLPT_IND_SEQ ,'')) N1ST_POL_CLPT_IND_SEQ              " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,DEST_CLPT_IND_SEQ ,'')) N1ST_POD_CLPT_IND_SEQ                                              " ).append("\n"); 
		query.append("                             ,(CASE  WHEN MAX(DECODE(R,1,T_VVD  ,'')) = 'V'  THEN 'V' 	ELSE ''  END) N1ST_TVVD_FLAG " ).append("\n"); 
		query.append("                             ,''                                      N1ST_SPACE " ).append("\n"); 
		query.append("                             --------------------------------------------------------" ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,VSL_SLAN_CD||chr(13)||chr(10)||VSL_CD  ||SKD_VOY_NO ||SKD_DIR_CD ,'')) N2ND_VSL_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,VSL_SLAN_CD ,'')) N2ND_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,VSL_CD ||SKD_VOY_NO ||SKD_DIR_CD ,'')) N2ND_VVD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,ORG_NOD_CD ||chr(13)||chr(10)||TO_CHAR(ARR_ST_DT,'YYYY-MM-DD')  ,'')) N2ND_POL " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,DEST_NOD_CD||chr(13)||chr(10)||TO_CHAR(DEP_FSH_DT,'YYYY-MM-DD') ,'')) N2ND_POD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,ORG_NOD_CD ,'')) N2ND_POL_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,DEST_NOD_CD ,'')) N2ND_POD_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,ARR_ST_DT,'')) N2ND_POL_ETD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,DEP_FSH_DT,'')) N2ND_POD_ETA" ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,ORG_CLPT_IND_SEQ  ,'')) N2ND_POL_CLPT_IND_SEQ              " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,DEST_CLPT_IND_SEQ ,'')) N2ND_POD_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             ,(CASE  WHEN MAX(DECODE(R,2,T_VVD ,'')) = 'V'  THEN 'V' ELSE ''  END) N2ND_TVVD_FLAG " ).append("\n"); 
		query.append("                             ,''                                      N2ND_SPACE " ).append("\n"); 
		query.append("                             ----------------------------------------------------" ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,VSL_SLAN_CD||chr(13)||chr(10)||VSL_CD  ||SKD_VOY_NO ||SKD_DIR_CD ,'')) N3RD_VSL_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,VSL_SLAN_CD  ,'')) N3RD_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,VSL_CD ||SKD_VOY_NO ||SKD_DIR_CD ,'')) N3RD_VVD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,ORG_NOD_CD ||chr(13)||chr(10)||TO_CHAR(ARR_ST_DT,'YYYY-MM-DD') ,'')) N3RD_POL " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,DEST_NOD_CD||chr(13)||chr(10)||TO_CHAR(DEP_FSH_DT,'YYYY-MM-DD'),'')) N3RD_POD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,ORG_NOD_CD ,'')) N3RD_POL_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,DEST_NOD_CD ,'')) N3RD_POD_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,ARR_ST_DT ,'')) N3RD_POL_ETD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,DEP_FSH_DT,'')) N3RD_POD_ETA  " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,ORG_CLPT_IND_SEQ ,'')) N3RD_POL_CLPT_IND_SEQ              " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,DEST_CLPT_IND_SEQ ,'')) N3RD_POD_CLPT_IND_SEQ                                                                                      " ).append("\n"); 
		query.append("                             ,(CASE  WHEN MAX(DECODE(R,3,T_VVD ,'')) = 'V'  THEN 'V' ELSE '' END) N3RD_TVVD_FLAG " ).append("\n"); 
		query.append("                             ,''                                      N3RD_SPACE " ).append("\n"); 
		query.append("                             ---------------------------------------------------------" ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,VSL_SLAN_CD ||chr(13)||chr(10)||VSL_CD  ||SKD_VOY_NO  ||SKD_DIR_CD,'')) N4TH_VSL_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,VSL_SLAN_CD ,'')) N4TH_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,VSL_CD ||SKD_VOY_NO ||SKD_DIR_CD ,'')) N4TH_VVD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,ORG_NOD_CD ||chr(13)||chr(10)||TO_CHAR(ARR_ST_DT,'YYYY-MM-DD') ,'')) N4TH_POL " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,DEST_NOD_CD||chr(13)||chr(10)||TO_CHAR(DEP_FSH_DT,'YYYY-MM-DD'),'')) N4TH_POD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,ORG_NOD_CD ,'')) N4TH_POL_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,DEST_NOD_CD,'')) N4TH_POD_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,ARR_ST_DT,'')) N4TH_POL_ETD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,DEP_FSH_DT,'')) N4TH_POD_ETA  " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,ORG_CLPT_IND_SEQ,'')) N4TH_POL_CLPT_IND_SEQ              " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,DEST_CLPT_IND_SEQ,'')) N4TH_POD_CLPT_IND_SEQ                                                                                    " ).append("\n"); 
		query.append("                             ,(CASE WHEN MAX(DECODE(R,4,T_VVD ,'')) = 'V'  THEN 'V' ELSE '' END) N4TH_TVVD_FLAG " ).append("\n"); 
		query.append("                             ,''                                      N4TH_SPACE " ).append("\n"); 
		query.append("                             ,(SELECT SLS_OFC_CD FROM   PRD_PROD_CTL_MST M WHERE  M.PCTL_NO = P.PCTL_NO) SLS_OFC_CD " ).append("\n"); 
		query.append("                             ,(SELECT TTL_EXPN_AMT FROM   PRD_PROD_CTL_MST M WHERE  M.PCTL_NO = P.PCTL_NO) TTL_EXPN_AMT " ).append("\n"); 
		query.append("                    FROM     (SELECT D.* " ).append("\n"); 
		query.append("                                     ,ROW_NUMBER() OVER(PARTITION BY PCTL_NO ORDER BY PCTL_SEQ) R " ).append("\n"); 
		query.append("                                     ,(SELECT 'V' " ).append("\n"); 
		query.append("                                       FROM   PRD_PROD_CTL_MST M " ).append("\n"); 
		query.append("                                       WHERE  M.PCTL_NO = D.PCTL_NO " ).append("\n"); 
		query.append("                                              AND M.TRNK_VSL_CD = D.VSL_CD " ).append("\n"); 
		query.append("                                              AND M.TRNK_SKD_VOY_NO = D.SKD_VOY_NO " ).append("\n"); 
		query.append("                                              AND M.TRNK_SKD_DIR_CD = D.SKD_DIR_CD) T_VVD " ).append("\n"); 
		query.append("                              FROM   PRD_PROD_CTL_ROUT_DTL D " ).append("\n"); 
		query.append("                              WHERE  PCTL_NO LIKE @[hd_pctl_no]||'%'  " ).append("\n"); 
		query.append("                                     AND PCTL_IO_BND_CD = 'T' " ).append("\n"); 
		query.append("                                     AND VSL_SLAN_CD IS NOT NULL " ).append("\n"); 
		query.append("                                     AND PCTL_NO IN (SELECT DISTINCT (PCTL_NO) PCTL_NO " ).append("\n"); 
		query.append("                                                     FROM   PRD_PROD_CTL_ROUT_DTL " ).append("\n"); 
		query.append("                                                     WHERE  PCTL_NO LIKE @[hd_pctl_no]||'%'" ).append("\n"); 
		query.append("                                                            AND PCTL_IO_BND_CD = 'T'" ).append("\n"); 
		query.append("                                                    )) P " ).append("\n"); 
		query.append("                             ,PRD_OCN_ROUT O " ).append("\n"); 
		query.append("                    WHERE    O.ORG_LOC_CD = P.ROUT_ORG_NOD_CD " ).append("\n"); 
		query.append("                             AND O.DEST_LOC_CD = P.ROUT_DEST_NOD_CD " ).append("\n"); 
		query.append("                             AND O.ROUT_SEQ = P.ROUT_SEQ " ).append("\n"); 
		query.append("                    GROUP BY PCTL_NO ,ORG_LOC_CD,DEST_LOC_CD,O.ROUT_SEQ,LNK_KNT " ).append("\n"); 
		query.append("            ) " ).append("\n"); 
		query.append("          ORDER BY PCTL_NO ,NO) T1           " ).append("\n"); 
		query.append("ORDER BY RK ,PCTL_NO ,NO" ).append("\n"); 

	}
}