<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ProductCatalogCreateDBDAOCreateProductCatalogInCludeReplaneCSQL">
			<desc><![CDATA[CreateProductCatalogInCludeReplane]]></desc>
			<sql><![CDATA[
INSERT ALL
WHEN PCTL_SEQ =1 THEN 
    INTO PRD_PROD_CTL_MST 
    (PCTL_NO, MTY_PKUP_YD_CD, POR_CD, POR_NOD_CD, POL_CD, N1ST_TS_PORT_CD, N2ND_TS_PORT_CD, N3RD_TS_PORT_CD, 
    POD_CD, DEL_CD, DEL_NOD_CD, MTY_RTN_YD_CD, OB_ITCHG_CTNT, IB_ITCHG_CTNT, FULL_RTN_YD_CD,POL_NOD_CD,POD_NOD_CD,FULL_PKUP_YD_CD,
    N1ST_VSL_LODG_DUE_DT,BKG_RCV_TERM_CD, BKG_DE_TERM_CD,  CMDT_CD, BKG_OFC_CD,  SC_OFC_CD,CRE_USR_ID, CRE_DT,UPD_USR_ID, UPD_DT 
    ,BKG_CGO_TP_CD, SHPR_CNT_CD, SHPR_SEQ, 
    CNEE_CNT_CD, CNEE_SEQ, SC_NO, RFA_NO, DG_CLSS_CD, DG_SPCL_FLG, RF_SPCL_FLG, 
    SPCL_AWK_CGO_FLG, BB_SPCL_FLG, RD_SPCL_FLG, HNGR_SPCL_FLG, SOC_FLG, EQ_SUBST_FLG, 
    BKG_WGT, BKG_WGT_UT_CD, SLS_OFC_CD, RFA_OFC_CD, PRM_CUST_FLG,
    REP_CMDT_CD, PRC_CGO_TP_CD
    )
    VALUES 
    (PCTL_NO,MTPU_CY,SUBSTR(POR,1,5) , POR, SUBSTR(POL1,1,5) ,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,
    SUBSTR(POD_NODE,1,5),SUBSTR(DEL,1,5),DEL,MTRTN_CY,OUT_CONTENT,IN_CONTENT,FULL_RTN_YD_CD,POL1,POD_NODE,FULL_PKUP_YD_CD,
    TO_DATE(N1ST_VSL_LODG_DUE_DT,'YYYYMMDDHH24MISS') 
    ,@[rcv_t], @[del_t],@[com],@[bkg_ofc],@[sc_ofc],NVL(@[cre_usr_id],'System'), CRE_DT,NVL(@[cre_usr_id],'System'), UPD_DT
    ,@[cgo_tp],@[shpr_cnt_cd],@[shpr_seq],
    @[cnee_cnt_cd],@[cnee_seq], @[sc_no], @[rfa_no], @[dg_clss_cd], @[dg_spcl_flg], @[rf_spcl_flg],
    @[spcl_awk_cgo_flg], @[bb_spcl_flg], @[rd_spcl_flg], @[hngr_spcl_flg], @[soc_flg],@[eq_subst_flg],
    @[bkg_wgt], @[bkg_wgt_ut_cd], @[sls_ofc_cd], @[rfa_ofc_cd], @[prm_cust_flg],
    @[rep_cmdt_cd], @[c_tpsz]
    )
WHEN PCTL_SEQ > 0 THEN
    INTO PRD_PROD_CTL_ROUT_DTL 
    ( PCTL_NO, PCTL_SEQ, ORG_NOD_CD, DEST_NOD_CD, NOD_LNK_DIV_CD, PCTL_IO_BND_CD, TRSP_MOD_CD, 
    PCTL_WTR_DIV_CD, ORG_NOD_TP_CD, DEST_NOD_TP_CD, MTY_YD_FLG, ARR_ST_DT, DEP_FSH_DT, TZ_DWLL_TM_HRS, 
    N1ST_VNDR_SEQ,N2ND_VNDR_SEQ, N3RD_VNDR_SEQ, VSL_SLAN_CD, CRR_CD, VSL_CD, SKD_VOY_NO,
    INLND_ROUT_CMB_FLG, INLND_ROUT_INV_BIL_PATT_CD, SKD_DIR_CD, ROUT_ORG_NOD_CD,  ROUT_DEST_NOD_CD, 
    ROUT_SEQ, ORG_CLPT_IND_SEQ,DEST_CLPT_IND_SEQ,                                          
    CRE_USR_ID, CRE_DT,UPD_USR_ID, UPD_DT , 
    RAIL_CRR_TP_CD,INLND_ROUT_INCL_STTL_FLG,TRSP_AGMT_OFC_CTY_CD,TRSP_AGMT_SEQ,AGMT_REF_NO )
    VALUES 
    (PCTL_NO,PCTL_SEQ,NODE_NEW1,NODE_NEW2,NODE_NEW_KIND,OI_BND_CD,TRSP_MOD_CD,
    WTR_DIV_CD,NODE1_TP,NODE2_TP,MT_YD_FLG,A_TIME,D_TIME,TZTM_DW_HRS,
    N1ST_VNDR_SEQ,N2ND_VNDR_SEQ,N3RD_VNDR_SEQ,SLANE,CRR_CD,VSL_CD,VOY_NO,
    INLND_ROUT_CMB_FLG,INLND_ROUT_INV_BIL_PATT_CD,DIR_CD,ROUT_ORG,ROUT_DEST,
    ROUT_SEQ,ORG_PORT_SEQ,DST_PORT_SEQ,
    NVL(@[cre_usr_id],'System'), CRE_DT,NVL(@[cre_usr_id],'System'), UPD_DT,
    RAIL_CRR_TYPE,INLND_ROUT_INCL_STTL_FLG,TRSP_AGMT_OFC_CTY_CD,TRSP_AGMT_SEQ,AGMT_REF_NO) 
SELECT 
@[hd_pctl_no]	||lpad(gp1,4,0) pctl_no, ord pctl_seq,
NODE_NEW1,NODE_NEW2,NODE_NEW_KIND,OI_BND_CD, DECODE(NODE_NEW_KIND,'L',substr(trsp_mod_cd,1,2),'X') trsp_mod_cd,
decode(trsp_mod_cd,'WD','W','VD','V') WTR_DIV_CD,
NODE1_TP,NODE2_TP,OUT_CONTENT,IN_CONTENT,MTPU_CY,MTRTN_CY,POR,DEL,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,  
(
CASE
WHEN F_NO2 = 0  AND NODE_NEW_KIND = 'N' AND @[rcv_t] <> 'S' THEN 'Y'
WHEN F_NO2 = 42 AND NODE_NEW_KIND = 'N' AND @[del_t] <> 'S' THEN 'Y'
ELSE 'N' END
)
MT_YD_FLG,
(CASE WHEN A_TIME IS NOT NULL THEN A_TIME
      WHEN F_NO2 = 13  THEN TO_DATE(CCT,'YYYYMMDDHH24MISS') -(SUM(TZTM_DW_HRS) OVER (PARTITION BY GP1,OI_BND_CD ORDER BY ORD DESC  ) /24) +NVL(TZTM_DW_HRS,12)/24 
      WHEN F_NO2 < 13  THEN TO_DATE(CCT,'YYYYMMDDHH24MISS') -(SUM(TZTM_DW_HRS) OVER (PARTITION BY GP1,OI_BND_CD ORDER BY ORD DESC  ) /24)  + DECODE(@[pm_f],'Y',3, 6)/24 
      WHEN F_NO2 >= 29  THEN TO_DATE(POD_T,'YYYYMMDDHH24MISS') +(SUM(TZTM_DW_HRS) OVER (PARTITION BY GP1,OI_BND_CD ORDER BY ORD  ) /24) -NVL(TZTM_DW_HRS,12)/24
END) 
A_TIME,
(CASE WHEN D_TIME IS NOT NULL THEN D_TIME
      WHEN F_NO2 = 13 THEN TO_DATE(POL_T,'YYYYMMDDHH24MISS')
      WHEN F_NO2 < 13 THEN TO_DATE(CCT,'YYYYMMDDHH24MISS') -(SUM(TZTM_DW_HRS) OVER (PARTITION BY GP1,OI_BND_CD ORDER BY ORD DESC  ) /24) +NVL(TZTM_DW_HRS,12)/24 + DECODE(@[pm_f],'Y',3, 6)/24
      WHEN F_NO2 >= 29 THEN TO_DATE(POD_T,'YYYYMMDDHH24MISS') +(SUM(TZTM_DW_HRS) OVER (PARTITION BY GP1,OI_BND_CD ORDER BY ORD  ) /24) 
END) 
D_TIME,
ROUND((
    (CASE WHEN D_TIME IS NOT NULL THEN D_TIME
          WHEN F_NO2 = 13 THEN TO_DATE(POL_T,'YYYYMMDDHH24MISS')
          WHEN F_NO2 < 13 THEN TO_DATE(CCT,'YYYYMMDDHH24MISS') -(SUM(TZTM_DW_HRS) OVER (PARTITION BY GP1,OI_BND_CD ORDER BY ORD DESC  ) /24) +NVL(TZTM_DW_HRS,12)/24 + DECODE(@[pm_f],'Y',3, 6)/24
          WHEN F_NO2 >= 29 THEN TO_DATE(POD_T,'YYYYMMDDHH24MISS') +(SUM(TZTM_DW_HRS) OVER (PARTITION BY GP1,OI_BND_CD ORDER BY ORD  ) /24) 
    END) -
    (CASE WHEN A_TIME IS NOT NULL THEN A_TIME
          WHEN F_NO2 = 13  THEN TO_DATE(CCT,'YYYYMMDDHH24MISS') -(SUM(TZTM_DW_HRS) OVER (PARTITION BY GP1,OI_BND_CD ORDER BY ORD DESC  ) /24) +NVL(TZTM_DW_HRS,12)/24 
          WHEN F_NO2 < 13  THEN TO_DATE(CCT,'YYYYMMDDHH24MISS') -(SUM(TZTM_DW_HRS) OVER (PARTITION BY GP1,OI_BND_CD ORDER BY ORD DESC  ) /24)  + DECODE(@[pm_f],'Y',3, 6)/24 
          WHEN F_NO2 >= 29  THEN TO_DATE(POD_T,'YYYYMMDDHH24MISS') +(SUM(TZTM_DW_HRS) OVER (PARTITION BY GP1,OI_BND_CD ORDER BY ORD  ) /24) -NVL(TZTM_DW_HRS,12)/24
    END)
) *24)
TZTM_DW_HRS ,
(CASE WHEN NODE_NEW_KIND = 'N' THEN N1ST_VNDR_SEQ
      WHEN NODE_NEW_KIND = 'L' AND F_NO2 =0 AND @[rcv_t] = 'D' THEN LEAD(N1ST_VNDR_SEQ, 1) OVER ( PARTITION BY GP1,NODE_NEW_KIND ORDER BY F_NO2,L_N0)
      WHEN NODE_NEW_KIND = 'L' AND F_NO2 =41 AND @[del_t] = 'D' THEN LAG(N1ST_VNDR_SEQ, 1) OVER ( PARTITION BY GP1,NODE_NEW_KIND ORDER BY F_NO2,L_N0)
      ELSE N1ST_VNDR_SEQ
END
) N1ST_VNDR_SEQ,
N2ND_VNDR_SEQ,N3RD_VNDR_SEQ,SLANE,
CRR_CD,
VSL_CD,
VOY_NO,
DIR_CD,
ORG_PORT_SEQ,
DST_PORT_SEQ,
INLND_ROUT_CMB_FLG,TRIM(INLND_ROUT_INV_BIL_PATT_CD) INLND_ROUT_INV_BIL_PATT_CD,
ROUT_ORG,ROUT_DEST,ROUT_SEQ,FULL_RTN_YD_CD,POL1,POD_NODE,FULL_PKUP_YD_CD,
@[cre_usr_cd] CRE_USR_ID, sysdate CRE_DT , @[cre_usr_cd] UPD_USR_ID, sysdate UPD_DT,
TRIM(RAIL_CRR_TYPE) RAIL_CRR_TYPE , TRIM(INLND_ROUT_INCL_STTL_FLG) INLND_ROUT_INCL_STTL_FLG,
TRIM(TRSP_AGMT_OFC_CTY_CD) TRSP_AGMT_OFC_CTY_CD, TRIM(TRSP_AGMT_SEQ) TRSP_AGMT_SEQ, TRIM(AGMT_REF_NO) AGMT_REF_NO
,POL_T N1ST_VSL_LODG_DUE_DT
FROM
(
    SELECT 
     GP1,F_NO2,L_N0,O1,ROW_NUMBER() over (PARTITION BY GP1 ORDER BY F_NO2,L_N0,O1) ord,
     NODE_NEW1,(SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = NODE_NEW1) NODE1_TP,
     DECODE(LENGTH(NODE_NEW2),7,NODE_NEW2,SUBSTR(NODE_NEW2,3,7))  NODE_NEW2,
     (SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = DECODE(LENGTH(NODE_NEW2),7,NODE_NEW2,
     SUBSTR(NODE_NEW2,3,7))) NODE2_TP,NODE_NEW_KIND,OI_BND_CD,OUT_CONTENT,IN_CONTENT, MTPU_CY,MTRTN_CY,OB_ORG POR,IB_DEST DEL,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,CCT,
    (CASE
        WHEN NODE_NEW_KIND='L' AND F_NO2 IN ( 0,41) THEN 'TD'
        WHEN NODE_NEW_KIND='L' AND F_NO2 = 1 AND @[rcv_t] ='S' AND OB_SEQ= 0 THEN 'TD'
        WHEN NODE_NEW_KIND='L' AND F_NO2 = 29 AND @[del_t] IN ('S','T','F','Y') AND IB_SEQ= 0 THEN 'TD'
        WHEN NODE_NEW_KIND='L' AND F_NO2 IN (13,18,23,28) THEN ( SELECT DECODE(VSL_SVC_TP_CD, 'O', 'WD', 'VD') FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = DECODE(F_NO2,13,N1ST_LANE_CD,18,N2ND_LANE_CD,23,N3RD_LANE_CD,28,N4TH_LANE_CD))
       WHEN NODE_NEW_KIND='L' AND LENGTH(NODE_NEW2) > 7 THEN SUBSTR(NODE_NEW2,10,2)
       ELSE
        NVL((
            SELECT NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],M.ROUT_ORG_NOD_CD||'[-%].{2}[-%].{1}[-%].{3}[-%]'||M.ROUT_DEST_NOD_CD,1,O2), 9, 2), D.TRSP_MOD_CD)
            FROM PRD_INLND_ROUT_MST M, PRD_INLND_ROUT_DTL D
            WHERE M.ROUT_ORG_NOD_CD =NODE_NEW1
            AND M.ROUT_DEST_NOD_CD = DECODE(LENGTH(NODE_NEW2),7,NODE_NEW2,SUBSTR(NODE_NEW2,3,7))
            AND M.PRIO_SEQ = (
                               SELECT /*+ INDEX (M2 XAK1PRD_INLND_ROUT_MST) */
                               M2.PRIO_SEQ
                               FROM PRD_INLND_ROUT_MST M2, PRD_INLND_ROUT_DTL D2
                               WHERE
                               M2.ROUT_ORG_NOD_CD = NODE_NEW1
                               AND M2.ROUT_DEST_NOD_CD = NODE_NEW2
                               AND M2.ROUT_ORG_NOD_CD = D2.ROUT_ORG_NOD_CD
                               AND M2.ROUT_DEST_NOD_CD = D2.ROUT_DEST_NOD_CD
                               AND M2.ROUT_SEQ = D2.ROUT_SEQ
                               AND NVL(M2.PCTL_IO_BND_CD,OI_BND_CD) IN (OI_BND_CD, 'B')
                               AND NVL(M2.DELT_FLG,'N') <> 'Y'
                               AND D2.LNK_ORG_NOD_CD = NODE_NEW1
                               AND D2.LNK_DEST_NOD_CD = NODE_NEW2
                               AND D2.ROUT_DTL_SEQ = 1
                               AND NOT EXISTS ( SELECT 'X' FROM PRD_INLND_ROUT_DTL
                                                WHERE
                                                ROUT_ORG_NOD_CD = D2.ROUT_ORG_NOD_CD
                                                AND ROUT_DEST_NOD_CD = D2.ROUT_DEST_NOD_CD
                                                AND ROUT_SEQ = D2.ROUT_SEQ
                                                AND ROUT_DTL_SEQ = 2 )
                               AND ROWNUM = 1
                            )
            AND M.ROUT_ORG_NOD_CD = D.ROUT_ORG_NOD_CD
            AND M.ROUT_DEST_NOD_CD = D.ROUT_DEST_NOD_CD
            AND M.ROUT_SEQ = D.ROUT_SEQ
            AND NVL(M.PCTL_IO_BND_CD,OI_BND_CD) IN (OI_BND_CD, 'B')
            AND NVL(M.DELT_FLG,'N') <> 'Y'
            AND M.ROUT_ORG_NOD_CD = D.LNK_ORG_NOD_CD
            AND M.ROUT_DEST_NOD_CD = D.LNK_DEST_NOD_CD
            AND ROWNUM = 1
        ),'TD')
    END) trsp_mod_cd,
    (CASE
        WHEN NODE_NEW_KIND='N' AND F_NO2 IN (1,41) AND (SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = NODE_NEW1) = 'Z' THEN ( SELECT CGO_HNDL_TM_HRS FROM MDM_ZONE WHERE ZN_CD = NODE_NEW1 )
        WHEN NODE_NEW_KIND='N' AND F_NO2 = 1 AND @[rcv_t] ='S' AND OB_SEQ = 0 AND (SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = NODE_NEW1) <> 'Z' THEN 0
        WHEN NODE_NEW_KIND='N' AND F_NO2 = 41 AND @[del_t] ='S' AND IB_SEQ = 0 AND (SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = NODE_NEW1) <> 'Z' THEN 0
        WHEN NODE_NEW_KIND='N' AND (SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = NODE_NEW1) <> 'Z' THEN (SELECT DECODE(F_NO2,42,0,DECODE(F_NO2,0,0,DECODE(OI_BND_CD, 'T', 0, DECODE(@[pm_f],'Y', 3, 6)))) FROM DUAL )
        WHEN  NODE_NEW_KIND='L' AND @[rcv_t] = 'D' AND F_NO2 = 0   THEN (SELECT TZTM_HRS FROM MDM_ZONE WHERE ZN_CD = NODE_NEW2 )
        WHEN  NODE_NEW_KIND='L' AND @[del_t] = 'D' AND F_NO2 = 41  THEN (SELECT TZTM_HRS FROM MDM_ZONE WHERE ZN_CD = NODE_NEW1 )
        WHEN  NODE_NEW_KIND='L' AND @[rcv_t] =  'S' AND F_NO2 = 0   THEN 6
        WHEN  NODE_NEW_KIND='L' AND @[rcv_t] =  'S' AND F_NO2 = 1  AND OB_SEQ = 0 THEN 6
        WHEN  NODE_NEW_KIND='L' AND @[del_t] =  'S' AND F_NO2 = 41   THEN 6
        WHEN  NODE_NEW_KIND='L' AND @[del_t] =  'S' AND F_NO2 = 29 AND IB_SEQ = 0 THEN 6
        WHEN  NODE_NEW_KIND='L' AND @[rcv_t] NOT IN ( 'D','S' ) AND F_NO2 = 0   THEN 24
        WHEN  NODE_NEW_KIND='L' AND @[del_t] NOT IN ( 'D','S' ) AND F_NO2 = 41  THEN 24
        WHEN (F_NO2 =13 ) AND (NODE_NEW_KIND='L') THEN N1ST_TZTM_HRS
        WHEN (F_NO2 =18 ) AND (NODE_NEW_KIND='L') THEN N2ND_TZTM_HRS
        WHEN (F_NO2 =23 ) AND (NODE_NEW_KIND='L') THEN N3RD_TZTM_HRS
        WHEN (F_NO2 =28 ) AND (NODE_NEW_KIND='L') THEN N4TH_TZTM_HRS
        WHEN NODE_NEW_KIND='L' AND OI_BND_CD ='T' AND F_NO2 NOT IN (13,18,23,28) THEN 6
        ELSE
         NVL((SELECT TZTM_HRS
            FROM PRD_INLND_EACH_LNK
           WHERE lnk_org_nod_cd = NODE_NEW1
            AND lnk_dest_nod_cd = DECODE(LENGTH(NODE_NEW2),7,NODE_NEW2,SUBSTR(NODE_NEW2,3,7))
            AND TRSP_MOD_CD = DECODE(LENGTH(NODE_NEW2),7,'TD',SUBSTR(NODE_NEW2,10,2))
            ),6)
    END ) TZTM_DW_HRS,
    POLT1 POL_T,
    SUBSTR(TRIM(PODT1||PODT2||PODT3||PODT4),-14) POD_T , 
    A_TIME,
    D_TIME,
    ( CASE
        WHEN NODE_NEW_KIND='N' THEN ( SELECT TO_CHAR(N1ST_VNDR_SEQ) FROM MDM_YARD WHERE YD_CD = NODE_NEW1 )
        WHEN NODE_NEW_KIND='L' AND F_NO2 IN (13,18,23,28) THEN
        (
            SELECT TO_CHAR(VNDR_SEQ)
            FROM PRD_FDR_LNK
            WHERE VSL_SLAN_CD =DECODE(F_NO2,13,N1ST_LANE_CD,18,N2ND_LANE_CD,23,N3RD_LANE_CD,28,N4TH_LANE_CD)
            AND LNK_ORG_LOC_CD = SUBSTR(NODE_NEW1,1,5)
            AND LNK_DEST_LOC_CD = DECODE(LENGTH(NODE_NEW2),7,SUBSTR(NODE_NEW2,1,5),SUBSTR(NODE_NEW2,3,5))
        )
        WHEN NODE_NEW_KIND='L' AND LENGTH(NODE_NEW2) > 7 THEN DECODE(SUBSTR(NODE_NEW2,12,6),'N','',SUBSTR(NODE_NEW2,12,6))
        ELSE
           (
            SELECT TO_CHAR(D.VNDR_SEQ )
            FROM PRD_INLND_ROUT_MST M, PRD_INLND_ROUT_DTL D
            WHERE M.ROUT_ORG_NOD_CD =NODE_NEW1
            AND M.ROUT_DEST_NOD_CD = DECODE(LENGTH(NODE_NEW2),7,NODE_NEW2,SUBSTR(NODE_NEW2,3,7))
            AND M.PRIO_SEQ = (
                               SELECT /*+ INDEX (M2 XAK1PRD_INLND_ROUT_MST) */
                               M2.PRIO_SEQ
                               FROM PRD_INLND_ROUT_MST M2, PRD_INLND_ROUT_DTL D2
                               WHERE M2.ROUT_ORG_NOD_CD = NODE_NEW1
                               AND M2.ROUT_DEST_NOD_CD = NODE_NEW2
                               AND M2.ROUT_ORG_NOD_CD = D2.ROUT_ORG_NOD_CD
                               AND M2.ROUT_DEST_NOD_CD = D2.ROUT_DEST_NOD_CD
                               AND M2.ROUT_SEQ = D2.ROUT_SEQ
                               AND NVL(M2.PCTL_IO_BND_CD,OI_BND_CD) IN (OI_BND_CD, 'B')
                               AND NVL(M2.DELT_FLG,'N') <> 'Y'
                               AND D2.LNK_ORG_NOD_CD = NODE_NEW1
                               AND D2.LNK_DEST_NOD_CD = NODE_NEW2
                               AND D2.ROUT_DTL_SEQ = 1
                               AND NOT EXISTS ( SELECT 'X' FROM PRD_INLND_ROUT_DTL
                                                WHERE ROUT_ORG_NOD_CD = D2.ROUT_ORG_NOD_CD
                                                	AND ROUT_DEST_NOD_CD = D2.ROUT_DEST_NOD_CD
                                                	AND ROUT_SEQ = D2.ROUT_SEQ
                                                	AND ROUT_DTL_SEQ = 2 )
                               AND ROWNUM = 1
                            )
            AND M.ROUT_ORG_NOD_CD = D.ROUT_ORG_NOD_CD
            AND M.ROUT_DEST_NOD_CD = D.ROUT_DEST_NOD_CD
            AND M.ROUT_SEQ = D.ROUT_SEQ
            AND NVL(M.PCTL_IO_BND_CD,OI_BND_CD) IN (OI_BND_CD, 'B')
            AND NVL(M.DELT_FLG,'N') <> 'Y'
            AND M.ROUT_ORG_NOD_CD = D.LNK_ORG_NOD_CD
            AND M.ROUT_DEST_NOD_CD = D.LNK_DEST_NOD_CD
            AND ROWNUM = 1
            )
    END ) N1ST_VNDR_SEQ,
    ( CASE WHEN NODE_NEW_KIND='N' THEN ( SELECT N2ND_VNDR_SEQ FROM MDM_YARD WHERE YD_CD = NODE_NEW1 ) END ) N2ND_VNDR_SEQ,
    ( CASE WHEN NODE_NEW_KIND='N' THEN ( SELECT N3RD_VNDR_SEQ FROM MDM_YARD WHERE YD_CD = NODE_NEW1 ) END ) N3RD_VNDR_SEQ,
    (CASE
        WHEN (F_NO2 =13 ) AND (NODE_NEW_KIND='L') THEN N1ST_LANE_CD
        WHEN (F_NO2 =18 ) AND (NODE_NEW_KIND='L') THEN N2ND_LANE_CD
        WHEN (F_NO2 =23 ) AND (NODE_NEW_KIND='L') THEN N3RD_LANE_CD
        WHEN (F_NO2 =28 ) AND (NODE_NEW_KIND='L') THEN N4TH_LANE_CD
    END ) SLANE,
    ( CASE WHEN F_NO2 IN (13,18,23,28) AND (NODE_NEW_KIND='L') THEN SUBSTR(DECODE(F_NO2,13,VVD1,18,VVD2,23,VVD3,28,VVD4,NULL),1,4) END ) VSL_CD,
    ( CASE WHEN F_NO2 IN (13,18,23,28) AND (NODE_NEW_KIND='L') THEN SUBSTR(DECODE(F_NO2,13,VVD1,18,VVD2,23,VVD3,28,VVD4,NULL),5,4) END ) VOY_NO,
    ( CASE WHEN F_NO2 IN (13,18,23,28) AND (NODE_NEW_KIND='L') THEN SUBSTR(DECODE(F_NO2,13,VVD1,18,VVD2,23,VVD3,28,VVD4,NULL),9,1) END ) DIR_CD,
    ( CASE WHEN F_NO2 IN (13,18,23,28) AND (NODE_NEW_KIND='L') THEN DECODE(F_NO2,13,CRR1,18,CRR2,23,CRR3,28,CRR4,NULL) END ) CRR_CD,
    ( CASE WHEN F_NO2 IN (13,18,23,28) AND (NODE_NEW_KIND='L') THEN DECODE(F_NO2,13,POL_SEQ1,18,POL_SEQ2,23,POL_SEQ3,28,POL_SEQ4,NULL) END ) ORG_PORT_SEQ,
    ( CASE WHEN F_NO2 IN (13,18,23,28) AND (NODE_NEW_KIND='L') THEN DECODE(F_NO2,13,POD_SEQ1,18,POD_SEQ2,23,POD_SEQ3,28,POD_SEQ4,NULL) END ) DST_PORT_SEQ,   
    DECODE(LENGTH(NODE_NEW2),7,'N',SUBSTR(NODE_NEW2,18,1))  INLND_ROUT_CMB_FLG,
    DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,19,3))  INLND_ROUT_INV_BIL_PATT_CD,
    DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,22,3))  RAIL_CRR_TYPE,
    DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,25,3))  TRSP_AGMT_OFC_CTY_CD,
    DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,28,6))  TRSP_AGMT_SEQ,
    DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,34,15))  AGMT_REF_NO,
    DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,49,1))  INLND_ROUT_INCL_STTL_FLG, 
    FULL_RTN_YD_CD,POL1,POD_NODE,FULL_PKUP_YD_CD,
    DECODE(OI_BND_CD,'I',IB_ORG,'O',OB_ORG,'T',ORG_LOC_CD) ROUT_ORG,
    DECODE(OI_BND_CD,'I',IB_DEST,'O',OB_DEST,'T',DEST_LOC_CD) ROUT_DEST,
    DECODE(OI_BND_CD,'I',IB_SEQ,'O',OB_SEQ,'T',OCN_SEQ) ROUT_SEQ
    FROM (
        SELECT 
        GP1, F_NO2, L_N0, O1,            
        ROW_NUMBER() over (PARTITION BY GP1, OI_BND_CD, NODE_NEW1, NODE_NEW2 ORDER BY F_NO2,L_N0,O1) O2,    -- Bound별, Link별 Ordering : for Ocean Shuttle S/O #2010.06.18 by sj
        NODE_NEW1, NODE_NEW2, NODE_NEW_KIND, A_TIME, D_TIME, OI_BND_CD,
        N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,CCT,POL1,POD_NODE,
        POLT1,PODT1,VVD1,CRR1,POL_SEQ1,POD_SEQ1,
        POLT2,PODT2,VVD2,CRR2,POL_SEQ2,POD_SEQ2,
        POLT3,PODT3,VVD3,CRR3,POL_SEQ3,POD_SEQ3,
        POLT4,PODT4,VVD4,CRR4,POL_SEQ4,POD_SEQ4,
        N1ST_TZTM_HRS ,N2ND_TZTM_HRS ,N3RD_TZTM_HRS ,N4TH_TZTM_HRS,
        OB_ORG, OB_DEST,OB_SEQ,OUT_CONTENT,MTPU_CY,FULL_RTN_YD_CD,
        IB_ORG, IB_DEST,IB_SEQ,IN_CONTENT,MTRTN_CY,DEL,FULL_PKUP_YD_CD,
        ORG_LOC_CD, DEST_LOC_CD, OCN_SEQ
        FROM (
            SELECT GP1,  F_N0 AS F_NO2, L_N0, O1,
            (CASE LENGTH(NODE1) WHEN 7 THEN NODE1 ELSE SUBSTR(NODE1,3,7)  END ) NODE_NEW1,
            (
             CASE WHEN L_N0 = 1 THEN NODE1
                  WHEN L_N0 = 2 AND F_N0 =41 AND @[del_t] = 'S' AND IB_SEQ =0 THEN ''
                  WHEN L_N0 = 2 THEN LEAD(NODE1, 1, NULL) OVER (PARTITION BY GP1 ORDER BY GP1,F_N0,L_N0,O1)
             END
            ) NODE_NEW2,
            (CASE L_N0 WHEN 1 THEN 'N' WHEN 2 THEN 'L' END) NODE_NEW_KIND,
            ( CASE
                WHEN F_N0 IN (13,18,23,28) AND (L_N0=2) THEN TO_DATE(DECODE(F_N0,13,POLT1,18,POLT2,23,POLT3,28,POLT4,NULL),'YYYYMMDDHH24MISS')
                WHEN F_N0 IN (18,23,28) AND (L_N0=1) THEN  TO_DATE(DECODE(F_N0,13,POLT1,18,POLT2,23,POLT3,28,POLT4,NULL),'YYYYMMDDHH24MISS') -6/24
                WHEN F_N0 IN (14,19,24) AND (L_N0=2) THEN  TO_DATE(DECODE(F_N0,14,PODT1,19,PODT2,24,PODT3,NULL),'YYYYMMDDHH24MISS') + 6/24
                WHEN F_N0 IN (14,19,24) AND (L_N0=1) THEN  TO_DATE(DECODE(F_N0,14,PODT1,19,PODT2,24,PODT3,NULL),'YYYYMMDDHH24MISS')                 
                WHEN F_N0 IN (15,20,25) AND (L_N0=1) THEN  TO_DATE(DECODE(F_N0,15,PODT1,20,PODT2,25,PODT3,NULL),'YYYYMMDDHH24MISS') + 12/24 
                WHEN F_N0 IN (15,20,25) AND (L_N0=2) THEN  TO_DATE(DECODE(F_N0,15,PODT1,20,PODT2,25,PODT3,NULL),'YYYYMMDDHH24MISS') + 18/24 
                WHEN F_N0 IN (16,21,26) AND (L_N0=1) THEN  TO_DATE(DECODE(F_N0,16,PODT1,21,PODT2,26,PODT3,NULL),'YYYYMMDDHH24MISS') + 24/24 
                WHEN F_N0 IN (16,21,26) AND (L_N0=2) THEN  TO_DATE(DECODE(F_N0,16,PODT1,21,PODT2,26,PODT3,NULL),'YYYYMMDDHH24MISS') + 30/24 
                WHEN F_N0 IN (17,22,27) AND (L_N0=1) THEN  TO_DATE(DECODE(F_N0,17,PODT1,22,PODT2,27,PODT3,NULL),'YYYYMMDDHH24MISS') + 36/24 
                WHEN F_N0 IN (17,22,27) AND (L_N0=2) THEN  TO_DATE(DECODE(F_N0,17,PODT1,22,PODT2,27,PODT3,NULL),'YYYYMMDDHH24MISS') + 42/24                     
            END ) A_TIME,
            ( CASE
                WHEN F_N0 IN (13,18,23,28) AND (L_N0=2) THEN 	TO_DATE(DECODE(F_N0,13,PODT1,18,PODT2,23,PODT3,28,PODT4,NULL),'YYYYMMDDHH24MISS')
                WHEN F_N0 IN (18,23,28) AND (L_N0=1) THEN	TO_DATE(DECODE(F_N0,13,POLT1,18,POLT2,23,POLT3,28,POLT4,NULL),'YYYYMMDDHH24MISS')
                WHEN F_N0 IN (14,19,24) AND (L_N0=2) THEN	TO_DATE(DECODE(F_N0,14,PODT1,19,PODT2,24,PODT3,NULL),'YYYYMMDDHH24MISS') + 12/24
                WHEN F_N0 IN (14,19,24) AND (L_N0=1)  THEN	TO_DATE(DECODE(F_N0,14,PODT1,19,PODT2,24,PODT3,NULL),'YYYYMMDDHH24MISS') + 6/24                
                WHEN F_N0 IN (15,20,25) AND (L_N0=1) THEN	TO_DATE(DECODE(F_N0,15,PODT1,20,PODT2,25,PODT3,NULL),'YYYYMMDDHH24MISS') + 18/24 
                WHEN F_N0 IN (15,20,25) AND (L_N0=2) THEN	TO_DATE(DECODE(F_N0,15,PODT1,20,PODT2,25,PODT3,NULL),'YYYYMMDDHH24MISS') + 24/24 
                WHEN F_N0 IN (16,21,26) AND (L_N0=1) THEN	TO_DATE(DECODE(F_N0,16,PODT1,21,PODT2,26,PODT3,NULL),'YYYYMMDDHH24MISS') + 30/24 
                WHEN F_N0 IN (16,21,26) AND (L_N0=2) THEN	TO_DATE(DECODE(F_N0,16,PODT1,21,PODT2,26,PODT3,NULL),'YYYYMMDDHH24MISS') + 36/24 
                WHEN F_N0 IN (17,22,27) AND (L_N0=1) THEN	TO_DATE(DECODE(F_N0,17,PODT1,22,PODT2,27,PODT3,NULL),'YYYYMMDDHH24MISS') + 42/24 
                WHEN F_N0 IN (17,22,27) AND (L_N0=2) THEN	TO_DATE(DECODE(F_N0,17,PODT1,22,PODT2,27,PODT3,NULL),'YYYYMMDDHH24MISS') + 48/24 
            END ) D_TIME,
            (
            CASE
                WHEN F_N0 <=12 OR (F_N0 = 13 AND L_N0 =1)  THEN 'O'
                WHEN F_N0 >= 29  THEN 'I' ELSE 'T'
            END
            ) OI_BND_CD,
            N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,CCT,POL1,POD_NODE,
            POLT1,PODT1,VVD1,CRR1,POL_SEQ1,POD_SEQ1,
            POLT2,PODT2,VVD2,CRR2,POL_SEQ2,POD_SEQ2,
            POLT3,PODT3,VVD3,CRR3,POL_SEQ3,POD_SEQ3,
            POLT4,PODT4,VVD4,CRR4,POL_SEQ4,POD_SEQ4,
            N1ST_TZTM_HRS ,N2ND_TZTM_HRS ,N3RD_TZTM_HRS ,N4TH_TZTM_HRS,
            OB_ORG, OB_DEST,OB_SEQ,OUT_CONTENT,MTPU_CY,FULL_RTN_YD_CD,
            IB_ORG, IB_DEST,IB_SEQ,IN_CONTENT,MTRTN_CY,DEL,FULL_PKUP_YD_CD,
            ORG_LOC_CD, DEST_LOC_CD, OCN_SEQ
            FROM (
                SELECT C_POL,F_N0, GP1,NODE1,ROWNUM O1,
                N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,
                N1ST_TZTM_HRS,N2ND_TZTM_HRS,N3RD_TZTM_HRS,N4TH_TZTM_HRS,CCT,POL1,POD_NODE,FULL_PKUP_YD_CD,
                POLT1,PODT1,VVD1,CRR1,POL_SEQ1,POD_SEQ1,
                POLT2,PODT2,VVD2,CRR2,POL_SEQ2,POD_SEQ2,
                POLT3,PODT3,VVD3,CRR3,POL_SEQ3,POD_SEQ3,
                POLT4,PODT4,VVD4,CRR4,POL_SEQ4,POD_SEQ4,
                OB_ORG, OB_DEST,OB_SEQ,OUT_CONTENT,MTPU_CY,FULL_RTN_YD_CD,
                IB_ORG, IB_DEST,IB_SEQ,IN_CONTENT,MTRTN_CY,DEL,
                ORG_LOC_CD, DEST_LOC_CD,OCN_SEQ
                FROM
                (
                    SELECT
                    GP1,F_N0,
                    (
                    CASE F_N0
                        WHEN 0 THEN (CASE WHEN @[rcv_t] ='S' AND OB_SEQ <> 0 THEN OB_ORG ELSE MTPU_CY END)
                        WHEN 1 THEN DECODE(@[rcv_t],'T','',DECODE(@[rcv_t],'F','',DECODE(SUBSTR(OB_ORG,1,5),SUBSTR(POL1,1,5),DECODE(OB_SEQ,0,DECODE(@[rcv_t],'D',OB_ORG,'S',OB_ORG,''),OB_ORG),OB_ORG)))
                        WHEN 2 THEN OL_NODE01   WHEN 3 THEN OL_NODE02   WHEN 4 THEN OL_NODE03   WHEN 5 THEN OL_NODE04
                        WHEN 6 THEN OL_NODE05   WHEN 7 THEN OL_NODE06   WHEN 8 THEN OL_NODE07   WHEN 9 THEN OL_NODE08
                        WHEN 10 THEN OL_NODE09  WHEN 11 THEN OL_NODE10  WHEN 12 THEN NULL
                        WHEN 13 THEN DECODE(@[rcv_t],'T',OB_ORG,DECODE(@[rcv_t],'F',OB_ORG,NVL(POL0,POL1)))  WHEN 14 THEN DECODE(POD1,POD_NODE,'',DECODE(POD1,POL2,DECODE(TS1_2,NULL,'',POD1),POD1))
                        WHEN 15 THEN TS1_2    WHEN 16 THEN TS1_3        WHEN 17 THEN TS1_4
                        WHEN 18 THEN POL2     WHEN 19 THEN DECODE(POD2,POD_NODE,'',DECODE(POD2,POL3,DECODE(TS2_2,NULL,'',POD2),POD2))
                        WHEN 20 THEN TS2_2    WHEN 21 THEN TS2_3        WHEN 22 THEN TS2_4    
                        WHEN 23 THEN POL3     WHEN 24 THEN DECODE(POD3,POD_NODE,'',DECODE(POD3,POL4,DECODE(TS3_2,NULL,'',POD3),POD3))
                        WHEN 25 THEN TS3_2    WHEN 26 THEN TS3_3        WHEN 27 THEN TS3_4
                        WHEN 28 THEN POL4     WHEN 29 THEN POD_NODE      WHEN 30 THEN NULL     WHEN 31 THEN IL_NODE01
                        WHEN 32 THEN IL_NODE02  WHEN 33 THEN IL_NODE03  WHEN 34 THEN IL_NODE04  WHEN 35 THEN IL_NODE05
                        WHEN 36 THEN IL_NODE06  WHEN 37 THEN IL_NODE07  WHEN 38 THEN IL_NODE08  WHEN 39 THEN IL_NODE09
                        WHEN 40 THEN IL_NODE10
                        WHEN 41 THEN DECODE(@[del_t],'T','',DECODE(@[del_t],'F','',DECODE(SUBSTR(POD_NODE,1,5),SUBSTR(IB_DEST,1,5),DECODE(IB_SEQ,0,DECODE(@[del_t],'D',DEL,'S',IB_DEST,''),DEL),DEL)))
                        WHEN 42 THEN (CASE WHEN @[del_t] ='S' AND IB_SEQ <> 0 THEN IB_DEST ELSE MTRTN_CY END) ELSE 'N/A'
                    END
                    ) NODE1, OUT_CONTENT,IN_CONTENT,
                    N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,
                    N1ST_TZTM_HRS,N2ND_TZTM_HRS,N3RD_TZTM_HRS,N4TH_TZTM_HRS,CCT,
                    POLT1,PODT1,VVD1,CRR1,POL_SEQ1,POD_SEQ1,
                    POLT2,PODT2,VVD2,CRR2,POL_SEQ2,POD_SEQ2,
                    POLT3,PODT3,VVD3,CRR3,POL_SEQ3,POD_SEQ3,
                    POLT4,PODT4,VVD4,CRR4,POL_SEQ4,POD_SEQ4,
                    MTPU_CY,FULL_RTN_YD_CD,
                    OL_NODE01,OL_NODE02,OL_NODE03,OL_NODE04,OL_NODE05,OL_NODE06,OL_NODE07,OL_NODE08,OL_NODE09,OL_NODE10,
                    POL0 AS C_POL,
                    IL_NODE01,IL_NODE02,IL_NODE03,IL_NODE04,IL_NODE05,IL_NODE06,IL_NODE07,IL_NODE08,IL_NODE09,IL_NODE10,
                    DEL,
                    MTRTN_CY,POL1,POD_NODE,FULL_PKUP_YD_CD,
                    OB_ORG,OB_DEST,OB_PRIO_SEQ,OB_SEQ,             
                    IB_ORG,IB_DEST,IB_PRIO_SEQ,IB_SEQ,           
                    ORG_LOC_CD,DEST_LOC_CD,OCN_SEQ
                    FROM (
                        SELECT 
                        OB_ORG,OB_DEST,OB_SEQ,OB_PRIO_SEQ,OB_CNT,
						MTPU_CY, MTRTN_CY, 
                        OB_ORG AS POR,
                        MAX(DECODE(OB_DTL_SEQ, 1 , DECODE(OB_CNT, 1 , '', OB_ROUT))) OL_NODE01,
                        MAX(DECODE(OB_DTL_SEQ, 2 , DECODE(OB_CNT, 2 , '', OB_ROUT))) OL_NODE02,
                        MAX(DECODE(OB_DTL_SEQ, 3 , DECODE(OB_CNT, 3 , '', OB_ROUT))) OL_NODE03,
                        MAX(DECODE(OB_DTL_SEQ, 4 , DECODE(OB_CNT, 4 , '', OB_ROUT))) OL_NODE04,
                        MAX(DECODE(OB_DTL_SEQ, 5 , DECODE(OB_CNT, 5 , '', OB_ROUT))) OL_NODE05,
                        MAX(DECODE(OB_DTL_SEQ, 6 , DECODE(OB_CNT, 6 , '', OB_ROUT))) OL_NODE06,
                        MAX(DECODE(OB_DTL_SEQ, 7 , DECODE(OB_CNT, 7 , '', OB_ROUT))) OL_NODE07,
                        MAX(DECODE(OB_DTL_SEQ, 8 , DECODE(OB_CNT, 8 , '', OB_ROUT))) OL_NODE08,
                        MAX(DECODE(OB_DTL_SEQ, 9 , DECODE(OB_CNT, 9 , '', OB_ROUT))) OL_NODE09,
                        MAX(DECODE(OB_DTL_SEQ, 10, DECODE(OB_CNT, 10, '', OB_ROUT))) OL_NODE10,
                        DECODE(OB_SEQ,0,NULL,MAX(OB_ROUT)) AS POL0 ,
                        MAX(DECODE(OB_CNT, 1, '', DECODE(OB_CNT, 1 , '', DECODE(OB_DTL_SEQ, 1 , SUBSTR(OB_ROUT,3,7))))) ||       
                        MAX(DECODE(OB_CNT, 1, '', DECODE(OB_CNT, 2 , '', DECODE(OB_DTL_SEQ, 2 , '-'||SUBSTR(OB_ROUT,3,7))))) ||  
                        MAX(DECODE(OB_CNT, 1, '', DECODE(OB_CNT, 3 , '', DECODE(OB_DTL_SEQ, 3 , '-'||SUBSTR(OB_ROUT,3,7))))) ||  
                        MAX(DECODE(OB_CNT, 1, '', DECODE(OB_CNT, 4 , '', DECODE(OB_DTL_SEQ, 4 , '-'||SUBSTR(OB_ROUT,3,7))))) ||  
                        MAX(DECODE(OB_CNT, 1, '', DECODE(OB_CNT, 5 , '', DECODE(OB_DTL_SEQ, 5 , '-'||SUBSTR(OB_ROUT,3,7))))) ||  
                        MAX(DECODE(OB_CNT, 1, '', DECODE(OB_CNT, 6 , '', DECODE(OB_DTL_SEQ, 6 , '-'||SUBSTR(OB_ROUT,3,7))))) ||  
                        MAX(DECODE(OB_CNT, 1, '', DECODE(OB_CNT, 7 , '', DECODE(OB_DTL_SEQ, 7 , '-'||SUBSTR(OB_ROUT,3,7))))) ||  
                        MAX(DECODE(OB_CNT, 1, '', DECODE(OB_CNT, 8 , '', DECODE(OB_DTL_SEQ, 8 , '-'||SUBSTR(OB_ROUT,3,7))))) ||  
                        MAX(DECODE(OB_CNT, 1, '', DECODE(OB_CNT, 9 , '', DECODE(OB_DTL_SEQ, 9 , '-'||SUBSTR(OB_ROUT,3,7))))) ||  
                        MAX(DECODE(OB_CNT, 1, '', DECODE(OB_CNT, 10, '', DECODE(OB_DTL_SEQ, 10, '-'||SUBSTR(OB_ROUT,3,7)))))     
                        AS OUT_CONTENT,FULL_RTN_YD_CD,
                        ORG_LOC_CD,DEST_LOC_CD,OCN_SEQ,                    
                        N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,
                        N1ST_TZTM_HRS,N2ND_TZTM_HRS,N3RD_TZTM_HRS,N4TH_TZTM_HRS,CCT,
                        LNK_KNT,
                        POL1,POD1,TS1_2,TS1_3,TS1_4,POLT1,PODT1,VVD1,CRR1,POL_SEQ1,POD_SEQ1,
                        POL2,POD2,TS2_2,TS2_3,TS2_4,POLT2,PODT2,VVD2,CRR2,POL_SEQ2,POD_SEQ2,
                        POL3,POD3,TS3_2,TS3_3,TS3_4,POLT3,PODT3,VVD3,CRR3,POL_SEQ3,POD_SEQ3,
                        POL4,POD4,POLT4,PODT4,VVD4,CRR4,POL_SEQ4,POD_SEQ4,
                        POD_NODE,
                        CHECK_ROUT,
                        IB_ORG,IB_DEST,IB_SEQ,IB_PRIO_SEQ,IB_CNT,
                        MAX(DECODE(IB_DTL_SEQ, 1 , DECODE(IB_CNT, 1 , '', IB_ROUT))) IL_NODE01,
                        MAX(DECODE(IB_DTL_SEQ, 2 , DECODE(IB_CNT, 2 , '', IB_ROUT))) IL_NODE02,
                        MAX(DECODE(IB_DTL_SEQ, 3 , DECODE(IB_CNT, 3 , '', IB_ROUT))) IL_NODE03,
                        MAX(DECODE(IB_DTL_SEQ, 4 , DECODE(IB_CNT, 4 , '', IB_ROUT))) IL_NODE04,
                        MAX(DECODE(IB_DTL_SEQ, 5 , DECODE(IB_CNT, 5 , '', IB_ROUT))) IL_NODE05,
                        MAX(DECODE(IB_DTL_SEQ, 6 , DECODE(IB_CNT, 6 , '', IB_ROUT))) IL_NODE06,
                        MAX(DECODE(IB_DTL_SEQ, 7 , DECODE(IB_CNT, 7 , '', IB_ROUT))) IL_NODE07,
                        MAX(DECODE(IB_DTL_SEQ, 8 , DECODE(IB_CNT, 8 , '', IB_ROUT))) IL_NODE08,
                        MAX(DECODE(IB_DTL_SEQ, 9 , DECODE(IB_CNT, 9 , '', IB_ROUT))) IL_NODE09,
                        MAX(DECODE(IB_DTL_SEQ, 10, DECODE(IB_CNT, 10, '', IB_ROUT))) IL_NODE10,
                        MAX(DECODE(IB_SEQ,0,IB_DEST,IB_ROUT))  DEL,
                        MAX(DECODE(IB_CNT, 1, '', DECODE(IB_CNT, 1 , '', DECODE(IB_DTL_SEQ, 1 , SUBSTR(IB_ROUT,3,7))))) ||       
                        MAX(DECODE(IB_CNT, 1, '', DECODE(IB_CNT, 2 , '', DECODE(IB_DTL_SEQ, 2 , '-'||SUBSTR(IB_ROUT,3,7))))) ||  
                        MAX(DECODE(IB_CNT, 1, '', DECODE(IB_CNT, 3 , '', DECODE(IB_DTL_SEQ, 3 , '-'||SUBSTR(IB_ROUT,3,7))))) ||  
                        MAX(DECODE(IB_CNT, 1, '', DECODE(IB_CNT, 4 , '', DECODE(IB_DTL_SEQ, 4 , '-'||SUBSTR(IB_ROUT,3,7))))) ||  
                        MAX(DECODE(IB_CNT, 1, '', DECODE(IB_CNT, 5 , '', DECODE(IB_DTL_SEQ, 5 , '-'||SUBSTR(IB_ROUT,3,7))))) ||  
                        MAX(DECODE(IB_CNT, 1, '', DECODE(IB_CNT, 6 , '', DECODE(IB_DTL_SEQ, 6 , '-'||SUBSTR(IB_ROUT,3,7))))) ||  
                        MAX(DECODE(IB_CNT, 1, '', DECODE(IB_CNT, 7 , '', DECODE(IB_DTL_SEQ, 7 , '-'||SUBSTR(IB_ROUT,3,7))))) ||  
                        MAX(DECODE(IB_CNT, 1, '', DECODE(IB_CNT, 8 , '', DECODE(IB_DTL_SEQ, 8 , '-'||SUBSTR(IB_ROUT,3,7))))) ||  
                        MAX(DECODE(IB_CNT, 1, '', DECODE(IB_CNT, 9 , '', DECODE(IB_DTL_SEQ, 9 , '-'||SUBSTR(IB_ROUT,3,7))))) ||  
                        MAX(DECODE(IB_CNT, 1, '', DECODE(IB_CNT, 10, '', DECODE(IB_DTL_SEQ, 10, '-'||SUBSTR(IB_ROUT,3,7)))))     
                        AS IN_CONTENT,
                        FULL_PKUP_YD_CD,
        			    RANK() OVER (ORDER BY  ORG_LOC_CD,DEST_LOC_CD,OCN_ROUT_PRIO_CD,OCN_SEQ, OB_ORG,OB_DEST,OB_SEQ, IB_ORG,IB_DEST,IB_SEQ,POL1,POD1,POL2, POD2,POL3,POD3,POL4,POD4) GP1                                           
                        FROM (
                            SELECT 
                            OB_ORG,OB_DEST,OB_SEQ,ORG_ROUT,FULL_RTN_YD_CD,
							 (CASE 	WHEN @[rcv_t] = 'S' THEN NULL
									WHEN LENGTH(NVL(@[m_pu],'X')) = 7 THEN @[m_pu]
									WHEN (SELECT MTY_PKUP_RTN_YD_CD FROM PRD_PKUP_RTN_YD
										  WHERE POR_DEL_CD = SUBSTR(OB_ORG,1,5)
										  AND POL_POD_CD = SUBSTR(POL1,1,5)
										  AND IO_BND_CD IN ('O','B')
										  AND NVL(DELT_FLG,'N') <> 'Y'
										  AND SPCL_CGO_CD IN (  DECODE(NVL(@[dg_spcl_flg],'N'),'Y','DG','AL'), DECODE(NVL(@[rf_spcl_flg],'N'),'Y','RF','AL'), DECODE(NVL(@[rf_spcl_flg],'N')||NVL(@[dg_spcl_flg],'N'),'NN','DR'), 'AL')
										  AND VSL_SLAN_CD IN (N1ST_LANE_CD,'ALL')
									      AND NVL(CNTR_TP_CD,'AL') || NVL(CNTR_SZ_CD, 'AL') IN ('ALAL'
										  #if($arr_tpsz.size() > 0)  
										  #foreach($code IN ${arr_tpsz})
												 ,'$code'
										  #end 
									      #end 
										  )
									     AND ROWNUM =1) IS NOT NULL
									  THEN (SELECT MTY_PKUP_RTN_YD_CD
									          FROM PRD_PKUP_RTN_YD X
									         WHERE X.POR_DEL_CD = SUBSTR(OB_ORG,1,5)
									           AND X.POL_POD_CD = SUBSTR(POL1,1,5)
									           AND X.IO_BND_CD IN ('O','B')
											   AND X.VSL_SLAN_CD IN (N1ST_LANE_CD,'ALL')
											   AND X.SPCL_CGO_CD IN (  DECODE(NVL(@[dg_spcl_flg],'N'),'Y','DG','AL'), DECODE(NVL(@[rf_spcl_flg],'N'),'Y','RF','AL'), DECODE(NVL(@[rf_spcl_flg],'N')||NVL(@[dg_spcl_flg],'N'),'NN','DR'), 'AL')	 		
									           AND NVL(X.DELT_FLG,'N') <> 'Y'										
											   AND NVL(X.CNTR_TP_CD,'AL') || NVL(X.CNTR_SZ_CD, 'AL') IN ('ALAL'
											   #if($arr_tpsz.size() > 0)  	
											   #foreach($code IN ${arr_tpsz})
												,'$code'												
											   #end 
											   #end 
											   )										
									          AND DECODE(X.VSL_SLAN_CD, 'ALL', 20, 0) + DECODE(X.SPCL_CGO_CD, 'AL', 10, 0) + DECODE(NVL(X.CNTR_TP_CD, 'AL') || NVL(X.CNTR_SZ_CD, 'AL'), 'ALAL', 1, 0) =
									               (SELECT MIN(DECODE(Y.VSL_SLAN_CD, 'ALL', 20, 0) + DECODE(Y.SPCL_CGO_CD, 'AL', 10, 0) + DECODE(NVL(Y.CNTR_TP_CD, 'AL') || NVL(Y.CNTR_SZ_CD, 'AL'), 'ALAL', 1, 0))
									                  FROM PRD_PKUP_RTN_YD Y
									                 WHERE Y.POR_DEL_CD = X.POR_DEL_CD
									                   AND Y.POL_POD_CD = X.POL_POD_CD
									                   AND Y.IO_BND_CD = X.IO_BND_CD
													   AND SPCL_CGO_CD IN (  DECODE(NVL(@[dg_spcl_flg],'N'),'Y','DG','AL'), DECODE(NVL(@[rf_spcl_flg],'N'),'Y','RF','AL'), DECODE(NVL(@[rf_spcl_flg],'N')||NVL(@[dg_spcl_flg],'N'),'NN','DR'), 'AL')
									                   AND VSL_SLAN_CD IN (N1ST_LANE_CD,'ALL')
													   AND NVL(DELT_FLG,'N') <> 'Y'
										   			   AND NVL(Y.CNTR_TP_CD,'AL') || NVL(Y.CNTR_SZ_CD, 'AL') IN ('ALAL'
													   #if($arr_tpsz.size() > 0)  	
											           #foreach($code IN ${arr_tpsz})
												         ,'$code'												
											           #end 
											           #end 
											           )	
									           		)
									           AND ROWNUM =1) 
									WHEN @[rcv_t] = 'D' THEN (SELECT Z.REP_YD_CD FROM MDM_ZONE Z WHERE Z.ZN_CD = OB_ORG)
									ELSE (SELECT L.MTY_PKUP_YD_CD FROM MDM_LOCATION L WHERE L.LOC_CD = SUBSTR(OB_ORG,1,5))
							 END) MTPU_CY,                         
							 (CASE 	WHEN @[del_t] = 'S' THEN NULL							 		
									WHEN (SELECT MTY_PKUP_RTN_YD_CD FROM PRD_PKUP_RTN_YD
										  WHERE POR_DEL_CD = SUBSTR(IB_DEST,1,5)
										  AND POL_POD_CD = SUBSTR(NVL(POD4, NVL(POD3, NVL(POD2, POD1))) ,1,5)
										  AND IO_BND_CD = 'I'
										  AND NVL(DELT_FLG,'N') <> 'Y'
										  AND SPCL_CGO_CD IN (  DECODE(NVL(@[dg_spcl_flg],'N'),'Y','DG','AL'), DECODE(NVL(@[rf_spcl_flg],'N'),'Y','RF','AL'), DECODE(NVL(@[rf_spcl_flg],'N')||NVL(@[dg_spcl_flg],'N'),'NN','DR'), 'AL')
										  AND VSL_SLAN_CD IN (NVL(N4TH_LANE_CD, NVL(N3RD_LANE_CD, NVL(N2ND_LANE_CD, N1ST_LANE_CD))),'ALL')
										  AND NVL(CNTR_TP_CD,'AL') || NVL(CNTR_SZ_CD, 'AL') IN ('ALAL'
										  #if($arr_tpsz.size() > 0)  
										  #foreach($code IN ${arr_tpsz})
												 ,'$code'
										  #end 
										  #end 
										  )									
										  AND ROWNUM =1) IS NOT NULL
									  THEN (SELECT MTY_PKUP_RTN_YD_CD
									          FROM PRD_PKUP_RTN_YD X
									         WHERE X.POR_DEL_CD = SUBSTR(IB_DEST,1,5)
									           AND X.POL_POD_CD = SUBSTR(NVL(POD4, NVL(POD3, NVL(POD2, POD1))) ,1,5)
									           AND X.IO_BND_CD = 'I'
											   AND X.VSL_SLAN_CD IN (NVL(N4TH_LANE_CD, NVL(N3RD_LANE_CD, NVL(N2ND_LANE_CD, N1ST_LANE_CD))),'ALL')
											   AND X.SPCL_CGO_CD IN (  DECODE(NVL(@[dg_spcl_flg],'N'),'Y','DG','AL'), DECODE(NVL(@[rf_spcl_flg],'N'),'Y','RF','AL'), DECODE(NVL(@[rf_spcl_flg],'N')||NVL(@[dg_spcl_flg],'N'),'NN','DR'), 'AL')
									           AND NVL(X.DELT_FLG,'N') <> 'Y'										
											   AND NVL(X.CNTR_TP_CD,'AL') || NVL(X.CNTR_SZ_CD, 'AL') IN ('ALAL'
											   #if($arr_tpsz.size() > 0)  	
											   #foreach($code IN ${arr_tpsz})
												,'$code'												
											   #end
											   #end 		 
											   )																			   
									           AND DECODE(X.VSL_SLAN_CD, 'ALL', 20, 0) + DECODE(X.SPCL_CGO_CD, 'AL', 10, 0) + DECODE(NVL(X.CNTR_TP_CD, 'AL') || NVL(X.CNTR_SZ_CD, 'AL'), 'ALAL', 1, 0) = 
									               (SELECT MIN(DECODE(Y.VSL_SLAN_CD, 'ALL', 20, 0) + DECODE(Y.SPCL_CGO_CD, 'AL', 10, 0) + DECODE(NVL(Y.CNTR_TP_CD, 'AL') || NVL(Y.CNTR_SZ_CD, 'AL'), 'ALAL', 1, 0))
									                  FROM PRD_PKUP_RTN_YD Y
									                 WHERE Y.POR_DEL_CD = X.POR_DEL_CD
									                   AND Y.POL_POD_CD = X.POL_POD_CD
									                   AND Y.IO_BND_CD = X.IO_BND_CD
									                   AND Y.SPCL_CGO_CD IN (  DECODE(NVL(@[dg_spcl_flg],'N'),'Y','DG','AL'), DECODE(NVL(@[rf_spcl_flg],'N'),'Y','RF','AL'), DECODE(NVL(@[rf_spcl_flg],'N')||NVL(@[dg_spcl_flg],'N'),'NN','DR'), 'AL')
									                   AND Y.VSL_SLAN_CD IN (NVL(N4TH_LANE_CD, NVL(N3RD_LANE_CD, NVL(N2ND_LANE_CD, N1ST_LANE_CD))),'ALL')
													   AND NVL(DELT_FLG,'N') <> 'Y'
							   						   AND NVL(X.CNTR_TP_CD,'AL') || NVL(X.CNTR_SZ_CD, 'AL') IN ('ALAL'
											           #if($arr_tpsz.size() > 0)  	
											           #foreach($code IN ${arr_tpsz})
												           ,'$code'												
											           #end
											           #end 		 
											           )	
									                )
									           AND ROWNUM =1) 
									WHEN @[del_t] ='D' THEN (SELECT Z.REP_YD_CD FROM MDM_ZONE Z WHERE Z.ZN_CD = IB_DEST)
									ELSE (SELECT NVL(L.EQ_RTN_YD_CD, L.MTY_PKUP_YD_CD)  FROM MDM_LOCATION L WHERE L.LOC_CD =SUBSTR(IB_DEST,1,5)) 
							 END) MTRTN_CY,
                            RANK() OVER (PARTITION BY ORG_LOC_CD,DEST_LOC_CD,OCN_SEQ,OB_DEST ORDER BY DECODE(OB_ORG, @[por_n], 1, DECODE(SUBSTR(OB_ORG, 1, 5), @[por], 2, 3)), FULL_RTN_PRIO_SEQ,OB_BKG_FLG,OB_MODE_PRIO_SEQ,OB_TMP_FLG,OB_PRIO_SEQ,OB_ROUT_SEQ) OB_RK,
                            OB_PRIO_SEQ,
                            RPAD(OD.ROUT_DTL_SEQ,2,' ')||OD.LNK_DEST_NOD_CD||OD.TRSP_MOD_CD||LPAD(NVL(OD.VNDR_SEQ,0),6,0)||
                                   NVL(OD.INLND_ROUT_CMB_FLG,'N')||LPAD(NVL(OB_INLND_ROUT_INV_BIL_PATT_CD,' '),3,' ') ||
                                   RPAD(NVL(OD.RAIL_CRR_TP_CD,' '),3,' ') || RPAD(NVL(OD.TRSP_AGMT_OFC_CTY_CD,' '),3,' ') || LPAD(NVL(OD.TRSP_AGMT_SEQ,0),6,0) ||
                                   RPAD(NVL(OD.AGMT_REF_NO,' '),15,' ') || RPAD(NVL(OB_INLND_ROUT_INCL_STTL_FLG,' '),1,' ') OB_ROUT,
                            OD.ROUT_DTL_SEQ OB_DTL_SEQ,
    					    OB_BKG_FLG,IB_BKG_FLG,OB_ROUT_SEQ,IB_ROUT_SEQ,
                            COUNT(DISTINCT OD.ROUT_DTL_SEQ) OVER (PARTITION BY OB_ORG,OB_DEST,OB_SEQ) AS OB_CNT,
                            ORG_LOC_CD,DEST_LOC_CD,OCN_SEQ,LNK_KNT,OCN_ROUT_PRIO_CD,
                            N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,
                            N1ST_TZTM_HRS ,N2ND_TZTM_HRS ,N3RD_TZTM_HRS ,N4TH_TZTM_HRS,CCT, 
                            POL1,POD1,			
                            DECODE(TS1_2,NULL,NULL,POL2,NULL,TS1_2) TS1_2,
                            DECODE(TS1_3,NULL,NULL,POL2,NULL,TS1_3) TS1_3,
                            DECODE(TS1_4,NULL,NULL,POL2,NULL,TS1_4) TS1_4,
                            POLT1,PODT1,VVD1,CRR1,POL_SEQ1,POD_SEQ1,
                            POL2,POD2,
                            DECODE(TS2_2,NULL,NULL,POL3,NULL,TS2_2) TS2_2,
                            DECODE(TS2_3,NULL,NULL,POL3,NULL,TS2_3) TS2_3,
                            DECODE(TS2_4,NULL,NULL,POL3,NULL,TS2_4) TS2_4,
                            POLT2,PODT2,VVD2,CRR2,POL_SEQ2,POD_SEQ2,
                            POL3,POD3,
                            DECODE(TS3_2,NULL,NULL,POL4,NULL,TS3_2) TS3_2,
                            DECODE(TS3_3,NULL,NULL,POL4,NULL,TS3_3) TS3_3,
                            DECODE(TS3_4,NULL,NULL,POL4,NULL,TS3_4) TS3_4,
                            POLT3,PODT3,VVD3,CRR3,POL_SEQ3,POD_SEQ3,
                            POL4,POD4,POLT4,PODT4,VVD4,CRR4,POL_SEQ4,POD_SEQ4,     
                            POD_NODE,
                            CHECK_ROUT,
                            IB_ORG,IB_DEST,IB_PRIO_SEQ,IB_SEQ,DEST_ROUT,FULL_PKUP_YD_CD,
                            RANK() OVER (PARTITION BY ORG_LOC_CD,DEST_LOC_CD,OCN_SEQ,IB_ORG ORDER BY DECODE(IB_DEST, @[del_n], 1, DECODE(SUBSTR(IB_DEST, 1, 5), @[del], 2, 3)), IB_MODE_PRIO_SEQ,IB_BKG_FLG,IB_TMP_FLG,IB_PRIO_SEQ,IB_ROUT_SEQ ) IB_RK,   
                            RPAD(ID.ROUT_DTL_SEQ,2,' ')||ID.LNK_DEST_NOD_CD||ID.TRSP_MOD_CD||LPAD(NVL(ID.VNDR_SEQ,0),6,0)||
                            NVL(ID.INLND_ROUT_CMB_FLG,'N')||LPAD(NVL(IB_INLND_ROUT_INV_BIL_PATT_CD,' '),3,' ') ||
                            RPAD(NVL(ID.RAIL_CRR_TP_CD,' '),3,' ') || RPAD(NVL(ID.TRSP_AGMT_OFC_CTY_CD,' '),3,' ') || LPAD(NVL(ID.TRSP_AGMT_SEQ,0),6,0) ||
                            RPAD(NVL(ID.AGMT_REF_NO,' '),15,' ') || RPAD(NVL(IB_INLND_ROUT_INCL_STTL_FLG,' '),1,' ') IB_ROUT,
                            ID.ROUT_DTL_SEQ IB_DTL_SEQ,
                            COUNT(DISTINCT ID.ROUT_DTL_SEQ) OVER (PARTITION BY IB_ORG,IB_DEST,IB_SEQ) AS IB_CNT
                            FROM 
                            (
                                SELECT ROWNUM,NEW_POR, NEW_DEL,
                                NVL(O.ROUT_ORG_NOD_CD,POL1) OB_ORG,
                                NVL(O.ROUT_DEST_NOD_CD,POL1) OB_DEST,
                                DECODE(NVL(@[f_rt],'X'),O.FULL_RTN_YD_CD,1,2) FULL_RTN_PRIO_SEQ,
                                NVL(O.FULL_RTN_YD_CD,POL1) FULL_RTN_YD_CD,
                                DECODE(SIGN(INSTR(O.TRSP_MOD_CD,@[ob_trsp_mode])),1,1,2) OB_MODE_PRIO_SEQ,
                                PRD_GET_INLND_ROUT_STR_FNC(O.ROUT_ORG_NOD_CD,O.ROUT_DEST_NOD_CD,O.ROUT_SEQ) ORG_ROUT,                                                     
								NVL(O.PRIO_SEQ,0) OB_PRIO_SEQ,
                                NVL(O.ROUT_SEQ,0) OB_SEQ,                 
                                O.INLND_ROUT_INCL_STTL_FLG OB_INLND_ROUT_INCL_STTL_FLG,
                                O.INLND_ROUT_INV_BIL_PATT_CD OB_INLND_ROUT_INV_BIL_PATT_CD,
    					        DECODE(NVL(O.INLND_ROUT_BKG_FLG,'Y'), 'Y',1,2) OB_BKG_FLG,
    					        DECODE(NVL(I.INLND_ROUT_BKG_FLG,'Y'), 'Y',1,2) IB_BKG_FLG,
    					        NVL(O.ROUT_SEQ,0) OB_ROUT_SEQ , 
    					        NVL(I.ROUT_SEQ,0) IB_ROUT_SEQ , 
                                NVL(O.INLND_ROUT_TMP_FLG,'N') OB_TMP_FLG,
                                NVL(I.INLND_ROUT_TMP_FLG,'N') IB_TMP_FLG,
                                T.ORG_LOC_CD,T.DEST_LOC_CD,T.ROUT_SEQ OCN_SEQ,T.LNK_KNT,T.OCN_ROUT_PRIO_CD,
                                T.N1ST_LANE_CD,T.N2ND_LANE_CD,T.N3RD_LANE_CD,T.N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,
                                T.N1ST_TZTM_HRS,T.N2ND_TZTM_HRS,T.N3RD_TZTM_HRS,T.N4TH_TZTM_HRS,T.CCT, 
                                T.POD_NODE,
                                T.POL1,
                                DECODE(N1ST_SVC_TP,'O',DECODE(T.TS1_1,NULL,T.POD1,T.TS1_1),T.POD1) POD1,
                                DECODE(N1ST_SVC_TP,'O',DECODE(T.TS1_3,NULL,NULL,T.TS1_2),DECODE(T.TS1_1,T.POD1,DECODE(T.TS1_3,NULL,NULL,T.TS1_2),T.TS1_1)) TS1_2,
                                DECODE(N1ST_SVC_TP,'O',DECODE(T.TS1_4,NULL,NULL,T.TS1_3),DECODE(T.TS1_1,T.POD1,DECODE(T.TS1_4,NULL,NULL,T.TS1_3),DECODE(T.TS1_3,NULL,NULL,T.TS1_2))) TS1_3,
                                DECODE(N1ST_SVC_TP,'O',DECODE(T.TS1_5,NULL,NULL,T.TS1_4),DECODE(T.TS1_1,T.POD1,DECODE(T.TS1_5,NULL,NULL,T.TS1_4),DECODE(T.TS1_4,NULL,NULL,T.TS1_3))) TS1_4,
                                T.POLT1,T.PODT1,T.VVD1,T.CRR1,T.POL_SEQ1,T.POD_SEQ1, 
                                DECODE(T.VVD2, NULL, DECODE(T.POL2,NULL,NULL, DECODE(N2ND_SVC_TP,'O',NVL(SUBSTR(TRIM(T.TS1_1||T.TS1_2||T.TS1_3||T.TS1_4||T.TS1_5), -7),T.POL2),T.POL2)), T.POL2) POL2,
                                DECODE(N2ND_SVC_TP,'O',DECODE(T.TS2_1,NULL,T.POD2,T.TS2_1),T.POD2) POD2,
                                DECODE(N2ND_SVC_TP,'O',DECODE(T.TS2_3,NULL,NULL,T.TS2_2),DECODE(T.TS2_1,T.POD2,DECODE(T.TS2_3,NULL,NULL,T.TS2_2),T.TS2_1)) TS2_2,
                                DECODE(N2ND_SVC_TP,'O',DECODE(T.TS2_4,NULL,NULL,T.TS2_3),DECODE(T.TS2_1,T.POD2,DECODE(T.TS2_4,NULL,NULL,T.TS2_3),DECODE(T.TS2_3,NULL,NULL,T.TS2_2))) TS2_3,
                                DECODE(N2ND_SVC_TP,'O',DECODE(T.TS2_5,NULL,NULL,T.TS2_4),DECODE(T.TS2_1,T.POD2,DECODE(T.TS2_5,NULL,NULL,T.TS2_4),DECODE(T.TS2_4,NULL,NULL,T.TS2_3))) TS2_4,
                                T.POLT2,T.PODT2,T.VVD2,T.CRR2,T.POL_SEQ2,T.POD_SEQ2,
                                DECODE(T.VVD3, NULL, DECODE(T.POL3,NULL,NULL, DECODE(N3RD_SVC_TP,'O',NVL(SUBSTR(TRIM(T.TS2_1||T.TS2_2||T.TS2_3||T.TS2_4||T.TS2_5), -7),T.POL3),T.POL3)), T.POL3) POL3, 
                                DECODE(N3RD_SVC_TP,'O',DECODE(T.TS3_1,NULL,T.POD3,T.TS3_1),T.POD3) POD3,
                                DECODE(N3RD_SVC_TP,'O',DECODE(T.TS3_3,NULL,NULL,T.TS3_2),DECODE(T.TS3_1,T.POD3,DECODE(T.TS3_3,NULL,NULL,T.TS3_2),T.TS3_1)) TS3_2,
                                DECODE(N3RD_SVC_TP,'O',DECODE(T.TS3_4,NULL,NULL,T.TS3_3),DECODE(T.TS3_1,T.POD3,DECODE(T.TS3_4,NULL,NULL,T.TS3_3),DECODE(T.TS3_3,NULL,NULL,T.TS3_2))) TS3_3,
                                DECODE(N3RD_SVC_TP,'O',DECODE(T.TS3_5,NULL,NULL,T.TS3_4),DECODE(T.TS3_1,T.POD3,DECODE(T.TS3_5,NULL,NULL,T.TS3_4),DECODE(T.TS3_4,NULL,NULL,T.TS3_3))) TS3_4,
                                T.POLT3,T.PODT3,T.VVD3,T.CRR3,T.POL_SEQ3,T.POD_SEQ3,                            
                                DECODE(T.VVD4, NULL, DECODE(T.POL4,NULL,NULL,DECODE(N4TH_SVC_TP,'O',NVL(SUBSTR(TRIM(T.TS3_1||T.TS3_2||T.TS3_3||T.TS3_4||T.TS3_5), -7),T.POL4),T.POL4)),T.POL4) POL4,
                                T.POD4,T.POLT4,T.PODT4,T.VVD4,T.CRR4,T.POL_SEQ4,T.POD_SEQ4,
                                T.CHECK_ROUT,
                                NVL(I.ROUT_ORG_NOD_CD,T.POD_NODE) IB_ORG,
                                NVL(I.ROUT_DEST_NOD_CD,T.POD_NODE) IB_DEST,
                                NVL(I.FULL_PKUP_YD_CD,T.POD_NODE) FULL_PKUP_YD_CD,
                                DECODE(SIGN(INSTR(I.TRSP_MOD_CD,@[ib_trsp_mode])),1,1,2) IB_MODE_PRIO_SEQ,
                                PRD_GET_INLND_ROUT_STR_FNC(I.ROUT_ORG_NOD_CD,I.ROUT_DEST_NOD_CD,I.ROUT_SEQ) DEST_ROUT,
                                I.PRIO_SEQ IB_PRIO_SEQ,
                                NVL(I.ROUT_SEQ,0) IB_SEQ,    
                                I.INLND_ROUT_INCL_STTL_FLG IB_INLND_ROUT_INCL_STTL_FLG,
                                I.INLND_ROUT_INV_BIL_PATT_CD IB_INLND_ROUT_INV_BIL_PATT_CD,
                                I.PCTL_IO_BND_CD,
                                (CASE WHEN NVL((SELECT 'Y' 
                                               FROM BKG_TRO
                                               WHERE BKG_NO = @[bkg_no]
                                               AND IO_BND_CD = 'O'
                                               AND CXL_FLG = 'N'
                                               AND ROWNUM = 1),'N') = 'N'
                                           AND NVL((SELECT 'Y' 
                                               FROM BKG_EUR_TRO
                                               WHERE BKG_NO = @[bkg_no]
                                               AND IO_BND_CD = 'O'
                                               AND CXL_FLG = 'N'
                                               AND ROWNUM = 1),'N') = 'N'	
                                           AND NVL((SELECT 'Y' FROM TRS_TRSP_SVC_ORD
                                               WHERE BKG_NO = @[bkg_no]
                                               AND TRSP_BND_CD = 'O'
                                               AND DELT_FLG = 'N'
                                               AND ROWNUM = 1),'N') = 'N'
                                           AND NVL((SELECT 'Y' FROM TRS_TRSP_RAIL_BIL_ORD
                                               WHERE BKG_NO = @[bkg_no]
                                               AND TRSP_BND_CD = 'O'
                                               AND DELT_FLG = 'N'
                                               AND ROWNUM = 1),'N') = 'N'
                                       THEN DECODE(NVL(O.INLND_ROUT_BKG_FLG,'N'),'Y',DECODE(NVL(O.INLND_ROUT_TMP_FLG,'N'),'N','Y','N'),'N')
                                       ELSE 'Y'
                                END) ORG_FLG_CHK,
                                (CASE WHEN NVL((SELECT 'Y' 
                                               FROM BKG_TRO
                                               WHERE BKG_NO = @[bkg_no]
                                               AND IO_BND_CD = 'I'
                                               AND CXL_FLG = 'N'
                                               AND ROWNUM = 1),'N') = 'N'
                                           AND NVL((SELECT 'Y' 
                                               FROM BKG_EUR_TRO
                                               WHERE BKG_NO = @[bkg_no]
                                               AND IO_BND_CD = 'I'
                                               AND CXL_FLG = 'N'
                                               AND ROWNUM = 1),'N') = 'N'	
                                           AND NVL((SELECT 'Y' FROM TRS_TRSP_SVC_ORD
                                               WHERE BKG_NO = @[bkg_no]
                                               AND TRSP_BND_CD = 'I'
                                               AND DELT_FLG = 'N'
                                               AND ROWNUM = 1),'N') = 'N'
                                           AND NVL((SELECT 'Y' FROM TRS_TRSP_RAIL_BIL_ORD
                                               WHERE BKG_NO = @[bkg_no]
                                               AND TRSP_BND_CD = 'I'
                                               AND DELT_FLG = 'N'
                                               AND ROWNUM = 1),'N') = 'N'
                                       THEN DECODE(NVL(I.INLND_ROUT_BKG_FLG,'N'),'Y',DECODE(NVL(I.INLND_ROUT_TMP_FLG,'N'),'N','Y','N'),'N')
                                       ELSE 'Y'
                                END) DEST_FLG_CHK, --CHO
                                (CASE WHEN O.ROUT_ORG_NOD_CD IS NULL  AND NEW_POR = SUBSTR(T.POL1,1,5) AND @[rcv_t] = 'S' AND POL1_S ='Y' THEN 'Y'
                                      WHEN O.ROUT_ORG_NOD_CD IS NULL  AND NEW_POR = SUBSTR(T.POL1,1,5) AND @[rcv_t] NOT IN ('D', 'S') THEN 'Y'
                                      WHEN O.ROUT_ORG_NOD_CD IS NOT NULL
                                        AND (SELECT 'X' FROM PRD_NODE N
                                             WHERE N.NOD_CD = O.ROUT_ORG_NOD_CD
                                               AND DECODE(N.NOD_TP_CD,'Z','D',N.NOD_TP_CD) IN (DECODE(@[rcv_t],'D','D',''),
                                                                                           DECODE(@[rcv_t],'T','B','F','B','Y','B','S','B',''),
                                                                                           DECODE(@[rcv_t],'T','M','F','M','Y','M','S','M',''),
                                                                                           DECODE(@[rcv_t],'Y','Y','S','Y',''),
                                                                                           DECODE(@[rcv_t],'Y','R','S','R',''),
                                                                                           DECODE(@[rcv_t],'Y','P','') )
                                             ) = 'X' 
                                             AND NVL(O.PCTL_IO_BND_CD,'O')  IN ('O','B')
                                             AND DECODE(@[rcv_t],'S','Y','X') =
                                                                    NVL((SELECT DECODE(@[rcv_t],'S',YD_FCTY_TP_CFS_FLG,'X') 
                                                                         FROM MDM_YARD 
                                                                         WHERE YD_CD=O.ROUT_ORG_NOD_CD),'X')
                                             AND O.ROUT_ORG_NOD_CD  LIKE DECODE(@[rcv_t],'F','','T','',
                                                                                  DECODE(@[por_n],'',
                                                                                       DECODE(@[rcv_t],'D',(SELECT REP_ZN_CD FROM MDM_LOCATION WHERE LOC_CD = NEW_POR),NEW_POR||'%')
                                                                                  ,@[por_n])
                                                                           )
                                            
                                             THEN 'Y'
                                      ELSE 'X'
                                 END) ORG_CHECK,
                                 (CASE WHEN I.ROUT_DEST_NOD_CD IS NULL AND SUBSTR( T.POD_NODE ,1,5) = NEW_DEL AND @[del_t] = 'S' AND POD_NODE_S ='Y' THEN 'Y' 
                                       WHEN I.ROUT_DEST_NOD_CD IS NULL AND SUBSTR( T.POD_NODE ,1,5) = NEW_DEL AND @[del_t] NOT IN ('D', 'S') THEN 'Y'
                                       WHEN I.ROUT_DEST_NOD_CD IS NOT NULL
                                        AND (SELECT 'X' FROM PRD_NODE N
                                             WHERE N.NOD_CD = I.ROUT_DEST_NOD_CD
                                               AND DECODE(N.NOD_TP_CD,'Z','D',N.NOD_TP_CD) IN (DECODE(@[del_t],'D','D',''),
                                                                                           DECODE(@[del_t],'T','B','F','B','Y','B','S','B',''),
                                                                                           DECODE(@[del_t],'T','M','F','M','Y','M','S','M',''),
                                                                                           DECODE(@[del_t],'Y','Y','S','Y',''),
                                                                                           DECODE(@[del_t],'Y','R','S','R',''),
                                                                                           DECODE(@[del_t],'Y','P','') )
                                             ) = 'X' 
                                             AND NVL(I.PCTL_IO_BND_CD,'I') IN ('I','B')
                                             AND DECODE(@[del_t],'S','Y','X') = NVL((SELECT DECODE(@[del_t],'S',YD_FCTY_TP_CFS_FLG,'X')  FROM MDM_YARD WHERE YD_CD=I.ROUT_DEST_NOD_CD),'X')
                                             AND I.ROUT_DEST_NOD_CD  LIKE DECODE(@[del_t],'F','','T','',
                                                                                  DECODE(@[del_n],'',
                                                                                       DECODE(@[del_t],'D',(SELECT REP_ZN_CD FROM MDM_LOCATION WHERE LOC_CD = NEW_DEL),NEW_DEL||'%')
                                                                                  ,@[del_n])
                                                                           )
                                            
                                             THEN 'Y'
                                      ELSE 'X'
                                 END) DEST_CHECK      
                                    FROM ( 
                                    SELECT ROWNUM, NEW_POR, NEW_DEL,                                   
                                    ORG_LOC_CD,DEST_LOC_CD,ROUT_SEQ,LNK_KNT,OCN_ROUT_PRIO_CD,
    								N1ST_SVC_TP,N2ND_SVC_TP, N3RD_SVC_TP,N4TH_SVC_TP,
                                    N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,
                                    N1ST_TZTM_HRS,N2ND_TZTM_HRS,N3RD_TZTM_HRS,N4TH_TZTM_HRS,CCT,
                                    DECODE(N1ST_SVC_TP,'O',
                                    	DECODE(DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1),7)),NULL,POL1,
                                           	   DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1),7))),POL1) POL1,                                                                 
                                    (SELECT YD_FCTY_TP_CFS_FLG 
                                     FROM MDM_YARD 
                                     WHERE YD_CD=DECODE(N1ST_SVC_TP,'O',
    												DECODE(DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1),7)),NULL,POL1,
                                           				   DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POL1,1,5),1,1),7))),POL1) ) POL1_S,                           
                                    POD1,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD1,1,5),1,1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD1,1,5),1,1),7)) TS1_1,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD1,1,5),1,2)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD1,1,5),1,2),7)) TS1_2,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD1,1,5),1,3)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD1,1,5),1,3),7)) TS1_3,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD1,1,5),1,4)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD1,1,5),1,4),7)) TS1_4,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD1,1,5),1,5)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD1,1,5),1,5),7)) TS1_5,
                                    POLT1,PODT1,VVD1,CRR1,POL_SEQ1,POD_SEQ1,                                
                                    POL2,
                                    POD2,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD2,1,5),1,1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD2,1,5),1,1),7)) TS2_1,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD2,1,5),1,2)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD2,1,5),1,2),7)) TS2_2,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD2,1,5),1,3)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD2,1,5),1,3),7)) TS2_3,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD2,1,5),1,4)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD2,1,5),1,4),7)) TS2_4,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD2,1,5),1,5)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD2,1,5),1,5),7)) TS2_5,
                                    POLT2,PODT2,VVD2,CRR2,POL_SEQ2,POD_SEQ2,
                                    POL3,
                                    POD3,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD3,1,5),1,1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD3,1,5),1,1),7)) TS3_1,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD3,1,5),1,2)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD3,1,5),1,2),7)) TS3_2,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD3,1,5),1,3)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD3,1,5),1,3),7)) TS3_3,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD3,1,5),1,4)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD3,1,5),1,4),7)) TS3_4,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD3,1,5),1,5)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD3,1,5),1,5),7)) TS3_5,
                                    POLT3,PODT3,VVD3,CRR3,POL_SEQ3,POD_SEQ3,
                                    POL4,
                                    DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD4,1,5),-1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD4,1,5),-1),7),POD4) POD4,
                                    POLT4,PODT4,VVD4,CRR4,POL_SEQ4,POD_SEQ4,
                                    DECODE(DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1),7),POD_NODE),NULL,POD_NODE,
                                           DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1),7),POD_NODE)) POD_NODE,                                
                                    (SELECT YD_FCTY_TP_CFS_FLG 
                                     FROM MDM_YARD 
                                     WHERE YD_CD=DECODE(DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1),7),POD_NODE),NULL,POD_NODE,
                                           DECODE(SIGN(INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1)),1,SUBSTR(@[ocn_str],INSTR(@[ocn_str],SUBSTR(POD_NODE,1,5),-1),7),POD_NODE))) POD_NODE_S,
                                    (CASE WHEN POD_NODE IS NULL THEN 'X'
                                          WHEN LNK_KNT = 4 AND ( POL4 IS NULL OR POD4 IS NULL OR POLT4 IS NULL OR PODT4 IS NULL 
                                                                OR ( N4TH_SVC_TP <> 'O' AND ( VVD4 IS NULL OR CRR4 IS NULL OR POL_SEQ4 IS NULL OR  POD_SEQ4 IS NULL) )
                                                                OR ( POL3 IS NULL OR POD3 IS NULL OR POLT3 IS NULL OR PODT3 IS NULL ) 
                                                                OR ( N3RD_SVC_TP <> 'O' AND ( VVD3 IS NULL OR CRR3 IS NULL OR POL_SEQ3 IS NULL OR  POD_SEQ3 IS NULL) )
                                                                OR ( POL2 IS NULL OR POD2 IS NULL OR POLT2 IS NULL OR PODT2 IS NULL ) 
                                                                OR ( N2ND_SVC_TP <> 'O' AND ( VVD2 IS NULL OR CRR2 IS NULL OR POL_SEQ2 IS NULL OR  POD_SEQ2 IS NULL) )
                                                                OR ( POL1 IS NULL OR POD1 IS NULL OR POLT1 IS NULL OR PODT1 IS NULL ) 
                                                                OR ( N1ST_SVC_TP <> 'O' AND ( VVD1 IS NULL OR CRR1 IS NULL OR POL_SEQ1 IS NULL OR  POD_SEQ1 IS NULL) ) )
                                               THEN 'X'
                                          WHEN LNK_KNT = 3 AND ( POL3 IS NULL OR POD3 IS NULL OR POLT3 IS NULL OR PODT3 IS NULL 
                                                                OR ( N3RD_SVC_TP <> 'O' AND ( VVD3 IS NULL OR CRR3 IS NULL OR POL_SEQ3 IS NULL OR  POD_SEQ3 IS NULL) )
                                                                OR ( POL2 IS NULL OR POD2 IS NULL OR POLT2 IS NULL OR PODT2 IS NULL ) 
                                                                OR ( N2ND_SVC_TP <> 'O' AND ( VVD2 IS NULL OR CRR2 IS NULL OR POL_SEQ2 IS NULL OR  POD_SEQ2 IS NULL) )
                                                                OR ( POL1 IS NULL OR POD1 IS NULL OR POLT1 IS NULL OR PODT1 IS NULL ) 
                                                                OR ( N1ST_SVC_TP <> 'O' AND ( VVD1 IS NULL OR CRR1 IS NULL OR POL_SEQ1 IS NULL OR  POD_SEQ1 IS NULL) ) )
                                               THEN 'X'
                                          WHEN LNK_KNT = 2 AND ( POL2 IS NULL OR POD2 IS NULL OR POLT2 IS NULL OR PODT2 IS NULL  
                                                                OR ( N2ND_SVC_TP <> 'O' AND ( VVD2 IS NULL OR CRR2 IS NULL OR POL_SEQ2 IS NULL OR  POD_SEQ2 IS NULL) )
                                                                OR ( POL1 IS NULL OR POD1 IS NULL OR POLT1 IS NULL OR PODT1 IS NULL ) 
                                                                OR ( N1ST_SVC_TP <> 'O' AND ( VVD1 IS NULL OR CRR1 IS NULL OR POL_SEQ1 IS NULL OR  POD_SEQ1 IS NULL) ) )
                                               THEN 'X'
                                          WHEN LNK_KNT = 1 AND ( POL1 IS NULL OR POD1 IS NULL OR POLT1 IS NULL OR PODT1 IS NULL  
                                                                OR ( N1ST_SVC_TP <> 'O' AND ( VVD1 IS NULL OR CRR1 IS NULL OR POL_SEQ1 IS NULL OR  POD_SEQ1 IS NULL) ) )
                                               THEN 'X'
                                        ELSE 'Y'
                                    END ) CHECK_ROUT
                                    ,(SELECT REP_ZN_CD FROM MDM_LOCATION WHERE LOC_CD = NEW_POR) OB_REP_ZN_CD
                                    ,(SELECT REP_ZN_CD FROM MDM_LOCATION WHERE LOC_CD = NEW_DEL) IB_REP_ZN_CD
                                    FROM (
                                        SELECT /*+ NO_MERGE(B)  */ 
                                        ROWNUM,NEW_POR,NEW_DEL, ORG_LOC_CD,DEST_LOC_CD,ROUT_SEQ,LNK_KNT,OCN_ROUT_PRIO_CD,
                                        N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,
                                        N1ST_SVC_TP,N2ND_SVC_TP, N3RD_SVC_TP,N4TH_SVC_TP,
                                        N1ST_TZTM_HRS,N2ND_TZTM_HRS,N3RD_TZTM_HRS,N4TH_TZTM_HRS, 
                                        --TRIM(DECODE(INSTR(SKD_STR,'CCC'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'CCC')+3,14))) CCT,  
										TRIM(SUBSTR(SKD_STR,25, 14)) CCT,                             
                                        TRIM(DECODE(INSTR(SKD_STR,'POL1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL1')+4,7))) POL1,
                                        TRIM(DECODE(INSTR(SKD_STR,'POD1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD1')+4,7))) POD1,
                                        TRIM(DECODE(INSTR(SKD_STR,'POLT1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POLT1')+5,14))) POLT1,
                                        TRIM(DECODE(INSTR(SKD_STR,'PODT1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'PODT1')+5,14))) PODT1,
                                        TRIM(DECODE(INSTR(SKD_STR,'VVD1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'VVD1')+4,9))) VVD1,
                                        TRIM(DECODE(INSTR(SKD_STR,'CRR1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'CRR1')+4,4))) CRR1,
                                        TRIM(DECODE(INSTR(SKD_STR,'POL_SEQ1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL_SEQ1')+8,2))) POL_SEQ1,
                                        TRIM(DECODE(INSTR(SKD_STR,'POD_SEQ1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD_SEQ1')+8,2))) POD_SEQ1,
                                        TRIM(DECODE(INSTR(SKD_STR,'POL2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL2')+4,7))) POL2,
                                        TRIM(DECODE(INSTR(SKD_STR,'POD2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD2')+4,7))) POD2,
                                        TRIM(DECODE(INSTR(SKD_STR,'POLT2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POLT2')+5,14))) POLT2,
                                        TRIM(DECODE(INSTR(SKD_STR,'PODT2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'PODT2')+5,14))) PODT2,
                                        TRIM(DECODE(INSTR(SKD_STR,'VVD2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'VVD2')+4,9))) VVD2,
                                        TRIM(DECODE(INSTR(SKD_STR,'CRR2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'CRR2')+4,4))) CRR2,
                                        TRIM(DECODE(INSTR(SKD_STR,'POL_SEQ2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL_SEQ2')+8,2))) POL_SEQ2,
                                        TRIM(DECODE(INSTR(SKD_STR,'POD_SEQ2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD_SEQ2')+8,2))) POD_SEQ2,
                                        TRIM(DECODE(INSTR(SKD_STR,'POL3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL3')+4,7))) POL3,
                                        TRIM(DECODE(INSTR(SKD_STR,'POD3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD3')+4,7))) POD3,
                                        TRIM(DECODE(INSTR(SKD_STR,'POLT3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POLT3')+5,14))) POLT3,
                                        TRIM(DECODE(INSTR(SKD_STR,'PODT3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'PODT3')+5,14))) PODT3,
                                        TRIM(DECODE(INSTR(SKD_STR,'VVD3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'VVD3')+4,9))) VVD3,
                                        TRIM(DECODE(INSTR(SKD_STR,'CRR3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'CRR3')+4,4))) CRR3,
                                        TRIM(DECODE(INSTR(SKD_STR,'POL_SEQ3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL_SEQ3')+8,2))) POL_SEQ3,
                                        TRIM(DECODE(INSTR(SKD_STR,'POD_SEQ3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD_SEQ3')+8,2))) POD_SEQ3,
                                        TRIM(DECODE(INSTR(SKD_STR,'POL4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL4')+4,7))) POL4,
                                        TRIM(DECODE(INSTR(SKD_STR,'POD4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD4')+4,7))) POD4,
                                        TRIM(DECODE(INSTR(SKD_STR,'POLT4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POLT4')+5,14))) POLT4,
                                        TRIM(DECODE(INSTR(SKD_STR,'PODT4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'PODT4')+5,14))) PODT4,
                                        TRIM(DECODE(INSTR(SKD_STR,'VVD4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'VVD4')+4,9))) VVD4,
                                        TRIM(DECODE(INSTR(SKD_STR,'CRR4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'CRR4')+4,4))) CRR4,
                                        TRIM(DECODE(INSTR(SKD_STR,'POL_SEQ4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POL_SEQ4')+8,2))) POL_SEQ4,
                                        TRIM(DECODE(INSTR(SKD_STR,'POD_SEQ4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD_SEQ4')+8,2))) POD_SEQ4,
                                        TRIM(DECODE(LNK_KNT,4,TRIM(DECODE(INSTR(SKD_STR,'POD4'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD4')+4,7))),
                                                       3,TRIM(DECODE(INSTR(SKD_STR,'POD3'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD3')+4,7))),
                                                       2,TRIM(DECODE(INSTR(SKD_STR,'POD2'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD2')+4,7))),
                                                       TRIM(DECODE(INSTR(SKD_STR,'POD1'),0,NULL,SUBSTR(SKD_STR,INSTR(SKD_STR,'POD1')+4,7))))) POD_NODE,
                                        SKD_STR 
                                        FROM ( 
                                            SELECT                                             
                                            POR.POR_POL NEW_POR,
                                            DEL.POD_DEL NEW_DEL,  
                                            ORG_LOC_CD,DEST_LOC_CD,ROUT_SEQ,LNK_KNT,OCN_ROUT_PRIO_CD,
                                            N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,
                                            N1.VSL_SVC_TP_CD N1ST_SVC_TP,
                                            N2.VSL_SVC_TP_CD N2ND_SVC_TP,
                                            N3.VSL_SVC_TP_CD N3RD_SVC_TP,
                                            N4.VSL_SVC_TP_CD N4TH_SVC_TP,
                                            N1ST_TZTM_HRS,N2ND_TZTM_HRS,N3RD_TZTM_HRS,N4TH_TZTM_HRS, 
                                            PRD_GET_OCN_SKD_FNC(@[skd_date], @[skd_type], ORG_LOC_CD, DEST_LOC_CD,
                                                NVL(DECODE(N1.VSL_SVC_TP_CD, 'O',DECODE(@[vvd1],'',@[pol_n]),@[pol_n]),N1ST_POL_CD), @[n1st_pol_dc_seq], 
                                                NVL(DECODE(LNK_KNT,1,DECODE(N1.VSL_SVC_TP_CD, 'O',DECODE(@[vvd1], '',@[pod_n]),@[pod_n])),N1ST_POD_CD),
                                                @[n1st_pod_dc_seq], N1ST_LANE_CD, DECODE(N1ST_LANE_CD, 'FDR', NULL, N1ST_SKD_DIR_CD), N1.VSL_SVC_TP_CD, @[vvd1],
                                                N2ND_POL_CD, @[n2nd_pol_dc_seq], 
                                                NVL(DECODE(LNK_KNT,2,DECODE(N2.VSL_SVC_TP_CD, 'O',DECODE(@[vvd2], '',@[pod_n]),@[pod_n])),N2ND_POD_CD),
                                                @[n2nd_pod_dc_seq], N2ND_LANE_CD, DECODE(N2ND_LANE_CD, 'FDR', NULL, N2ND_SKD_DIR_CD), N2.VSL_SVC_TP_CD, @[vvd2], 
                                                N3RD_POL_CD, @[n3rd_pol_dc_seq], 
                                                NVL(DECODE(LNK_KNT,3,DECODE(N3.VSL_SVC_TP_CD, 'O',DECODE(@[vvd3], '',@[pod_n]),@[pod_n])),N3RD_POD_CD),
                                                @[n3rd_pod_dc_seq], N3RD_LANE_CD, DECODE(N3RD_LANE_CD, 'FDR', NULL, N3RD_SKD_DIR_CD), N3.VSL_SVC_TP_CD, @[vvd3],
                                                N4TH_POL_CD, @[n4th_pol_dc_seq], 
                                                NVL(DECODE(LNK_KNT,4,DECODE(N4.VSL_SVC_TP_CD, 'O',DECODE(@[vvd4], '',@[pod_n]),@[pod_n])),DEST_LOC_CD),
                                                @[n4th_pod_dc_seq], N4TH_LANE_CD, DECODE(N4TH_LANE_CD, 'FDR', NULL, N4TH_SKD_DIR_CD), N4.VSL_SVC_TP_CD, @[vvd4],  @[cgo_tp_cd], 'N') SKD_STR											   
                                            FROM PRD_OCN_ROUT A,MDM_VSL_SVC_LANE N1,MDM_VSL_SVC_LANE N2,MDM_VSL_SVC_LANE N3,MDM_VSL_SVC_LANE N4,
                                                 (SELECT @[por] POR_POL FROM DUAL -- CHO possible POR (이 경우는 POR=POL이 같은 경우다)
                                                   UNION 
                                                  SELECT EQLZ_PORT_CD 
                                                    FROM BKG_EQLZ_PORT 
                                                   WHERE LOC_CD = (CASE WHEN @[por_n] IS NULL AND @[m_pu] IS NULL THEN @[por] ELSE 'X' END)
                                                 ) POR,
                                                 (SELECT @[del] POD_DEL FROM DUAL 
                                                   UNION 
                                                  SELECT EQLZ_PORT_CD 
                                                    FROM BKG_EQLZ_PORT 
                                                   WHERE LOC_CD = (CASE WHEN @[del_n] IS NULL THEN @[del] ELSE 'X' END)
                                                 ) DEL
					    					WHERE A.ORG_LOC_CD IN (  -- CHO 
            													SELECT DISTINCT PORT_CD
            													  FROM PRD_HUB_LOC_MTCH J1
            													 WHERE J1.LOC_CD = POR.POR_POL)
                                            AND A.ORG_LOC_CD = NVL(@[pol],A.ORG_LOC_CD)
											AND A.DEST_LOC_CD IN (  -- CHO 
											                     SELECT DISTINCT PORT_CD 
											                       FROM PRD_HUB_LOC_MTCH 
											                      WHERE LOC_CD = DEL.POD_DEL )
    					    				AND A.DEST_LOC_CD = NVL(@[pod],A.DEST_LOC_CD)
    					    				AND A.ROUT_SEQ = NVL(@[ocn_seq],A.ROUT_SEQ)
                                            AND 'OK' = (CASE WHEN @[more_cnt] IS NULL THEN 'OK'
    					    				                 WHEN @[more_cnt] = 0 AND ( ( A.OCN_ROUT_PRIO_CD = 1 AND A.LNK_KNT <= 3 )
    					    				                                          OR (  A.OCN_ROUT_PRIO_CD = 2 AND A.LNK_KNT <= 2 ) ) THEN 'OK'
    					    				                 WHEN @[more_cnt] = 1 AND NOT ( ( A.OCN_ROUT_PRIO_CD = 1 AND A.LNK_KNT <= 3 )
    					    				                                              OR (  A.OCN_ROUT_PRIO_CD = 2 AND A.LNK_KNT <= 2 ) ) 
    					    				                                      AND A.OCN_ROUT_PRIO_CD <= 3 THEN 'OK'
    					    				                 WHEN @[more_cnt] = 2 AND A.OCN_ROUT_PRIO_CD > 3 THEN 'OK'
    					    				             END)
                                            AND NVL(A.UPD_IND_CD,'S') IN ('C','U','S','T','A','V','G')
                                            AND N1.VSL_SLAN_CD(+) = N1ST_LANE_CD
                                            AND N2.VSL_SLAN_CD(+) = N2ND_LANE_CD
                                            AND N3.VSL_SLAN_CD(+) = N3RD_LANE_CD
                                            AND N4.VSL_SLAN_CD(+) = N4TH_LANE_CD
                                            AND N1ST_POL_CD = NVL(@[pol1],N1ST_POL_CD)
                                            AND N1ST_POD_CD = NVL(@[pod1],N1ST_POD_CD)
                                            AND N1ST_LANE_CD IN ( NVL(@[lane1],N1ST_LANE_CD),(SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = @[lane1]) )
                                            AND NVL(N2ND_POL_CD,'X') = NVL(@[pol2],NVL(N2ND_POL_CD,'X'))
                                            AND NVL(N2ND_POD_CD,'X') = NVL(@[pod2],NVL(N2ND_POD_CD,'X'))
                                            AND NVL(N2ND_LANE_CD,'X') IN ( NVL(@[lane2],NVL(N2ND_LANE_CD,'X')),(SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = @[lane2]) )
                                            AND NVL(N3RD_POL_CD,'X') = NVL(@[pol3],NVL(N3RD_POL_CD,'X'))
                                            AND NVL(N3RD_POD_CD,'X') = NVL(@[pod3],NVL(N3RD_POD_CD,'X'))
                                            AND NVL(N3RD_LANE_CD,'X') IN ( NVL(@[lane3],NVL(N3RD_LANE_CD,'X')),(SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = @[lane3]) )
                                            AND NVL(N4TH_POL_CD,'X') = NVL(@[pol4],NVL(N4TH_POL_CD,'X'))
                                            AND NVL(N4TH_POD_CD,'X') = NVL(@[pod4],NVL(N4TH_POD_CD,'X'))
                                            AND NVL(N4TH_LANE_CD,'X') IN ( NVL(@[lane4],NVL(N4TH_LANE_CD,'X')),(SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = @[lane4]) )    
                                 
                                            AND INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                                                      NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,1),2,5),ORG_LOC_CD)) > 0
                                            AND INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                                                      NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,2),2,5),ORG_LOC_CD)) > 0
                                            AND INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                                                      NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,3),2,5),ORG_LOC_CD)) > 0
                                            AND INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                                                      NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,4),2,5),ORG_LOC_CD)) > 0
                                            AND INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                                                      NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,5),2,5),ORG_LOC_CD)) > 0
                                            AND INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                                                      NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,6),2,5),ORG_LOC_CD)) > 0
                                            AND INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                                                      NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'[-%].{7}[-%]',1,7),2,5),ORG_LOC_CD)) > 0
                                            AND INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                                                DECODE(NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),1,5),'X'),NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),18,5),'X'),ORG_LOC_CD,
                                                       SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),18,5))) > 0
                                            AND INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                                                DECODE(NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),1,5),'X'),NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),18,5),'X'),ORG_LOC_CD,
                                                       SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),18,5))) > 0
                                            AND INSTR(REGEXP_REPLACE(ORG_LOC_CD||'-'||N2ND_POL_CD||'-'||N3RD_POL_CD||'-'||N4TH_POL_CD||'-'||DEST_LOC_CD,'[-]{4}|[-]{3}|[-]{2}','-'),
                                                DECODE(NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),1,5),'X'),NVL(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),18,5),'X'),ORG_LOC_CD,
                                                       SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),18,5))) > 0
                                            AND 'O' = NVL(DECODE(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,1),18,5),
                                                                                 ORG_LOC_CD||'-'||N1ST_POD_CD,N1.VSL_SVC_TP_CD,
                                                                                 N2ND_POL_CD||'-'||N2ND_POD_CD,N2.VSL_SVC_TP_CD,
                                                                                 N3RD_POL_CD||'-'||N3RD_POD_CD,N3.VSL_SVC_TP_CD,
                                                                                 N4TH_POL_CD||'-'||DEST_LOC_CD,N4.VSL_SVC_TP_CD),'O')
                                            AND 'O' = NVL(DECODE(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,2),18,5),
                                                                                 ORG_LOC_CD||'-'||N1ST_POD_CD,N1.VSL_SVC_TP_CD,
                                                                                 N2ND_POL_CD||'-'||N2ND_POD_CD,N2.VSL_SVC_TP_CD,
                                                                                 N3RD_POL_CD||'-'||N3RD_POD_CD,N3.VSL_SVC_TP_CD,
                                                                                 N4TH_POL_CD||'-'||DEST_LOC_CD,N4.VSL_SVC_TP_CD),'O')
                                            AND 'O' = NVL(DECODE(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,3),18,5),
                                                                                 ORG_LOC_CD||'-'||N1ST_POD_CD,N1.VSL_SVC_TP_CD,
                                                                                 N2ND_POL_CD||'-'||N2ND_POD_CD,N2.VSL_SVC_TP_CD,
                                                                                 N3RD_POL_CD||'-'||N3RD_POD_CD,N3.VSL_SVC_TP_CD,
                                                                                 N4TH_POL_CD||'-'||DEST_LOC_CD,N4.VSL_SVC_TP_CD),'O')
                                            AND 'O' = NVL(DECODE(SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,4),1,5)||'-'||SUBSTR(REGEXP_SUBSTR(@[ocn_str],'.{7}-WD-.-...-.{7}',1,4),18,5),
                                                                                 ORG_LOC_CD||'-'||N1ST_POD_CD,N1.VSL_SVC_TP_CD,
                                                                                 N2ND_POL_CD||'-'||N2ND_POD_CD,N2.VSL_SVC_TP_CD,
                                                                                 N3RD_POL_CD||'-'||N3RD_POD_CD,N3.VSL_SVC_TP_CD,
                                                                                 N4TH_POL_CD||'-'||DEST_LOC_CD,N4.VSL_SVC_TP_CD),'O')   

											AND (  (SELECT (CASE WHEN
                                                           (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                                WHERE VSL_SLAN_CD =V.SLAN_CD ) = 'O' THEN 'FDR'
                                                                     ELSE V.SLAN_CD
                                                           END) SLAN_CD
                                                   FROM VSK_VSL_PORT_SKD  V,VSK_VSL_PORT_SKD  V2
                                                   WHERE V.VSL_CD= substr(@[vvd],1,4)
                                                    and V.SKD_VOY_NO= substr(@[vvd],5,4)
                                                    and V.SKD_DIR_CD = substr(@[vvd],9,1)
                                                    and NVL(V.SKD_CNG_STS_CD,'N') <> 'S'
                                                    AND V2.VSL_CD= substr(@[vvd],1,4)
                                                    and V2.SKD_VOY_NO= substr(@[vvd],5,4)
                                                    and V2.SKD_DIR_CD = substr(@[vvd],9,1)
                                                    and NVL(V2.SKD_CNG_STS_CD,'N') <> 'S'
                                                    AND V2.CLPT_SEQ > V.CLPT_SEQ
                                                    AND ROWNUM=1 )      IN ( N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,'FDR')
                                                OR NVL(@[vvd],'X') = 'X'
                                            )
                                            AND NOT EXISTS
                                            ( SELECT 'X' FROM PRD_MBGO_MGMT TT WHERE SUBSTR (A.ORG_LOC_CD, 1, 2) = TT.FM_CNT_CD AND A.TS_IND_CD = 'D' AND SUBSTR (A.DEST_LOC_CD, 1, 2) = TT.TO_CNT_CD ) 
                                          ) B 
                                    ) C                                  
                                 ) T , PRD_INLND_ROUT_MST O, PRD_INLND_ROUT_MST I
                                WHERE T.CHECK_ROUT = 'Y' 
                                AND NVL(O.PCTL_IO_BND_CD(+),'O') = 'O'
                                AND  O.ROUT_ORG_NOD_CD(+) --CHO
                                    LIKE CASE WHEN @[rcv_t] IN ('F', 'T') THEN 'X'
                                              WHEN @[por_n] IS NOT NULL AND REPLACE(@[ob_str], '%', '') IS NULL THEN DECODE(@[por_n], T.POL1, 'X', @[por_n])
                                              WHEN @[rcv_t] = 'D' THEN OB_REP_ZN_CD
                                              WHEN @[rcv_t] = 'S' AND NVL(T.POL1_S, 'N') <> 'Y' THEN NEW_POR || '%'
                                              WHEN NEW_POR = SUBSTR(T.POL1, 1,5)  THEN DECODE(REPLACE(@[ob_str], '%', ''), NULL, 'X', NEW_POR || '%')
                                              ELSE NEW_POR || '%'
                                         END
                                AND O.ROUT_DEST_NOD_CD(+)= DECODE(@[rcv_t], 'F', 'X', 'T', 'X', T.POL1)
								AND NVL2(@[pol_n], T.POL1, 'X') = NVL(@[pol_n], 'X')
								AND NVL2(@[pod_n], T.POD_NODE, 'X') = NVL(@[pod_n], 'X')
								--If AL or PR of Transmode code is slected, return all type of Transmode 
								AND NVL(O.TRSP_MOD_CD(+),'X') = DECODE ( NVL(@[ob_trsp_mode],'AL'), 'AL', NVL(O.TRSP_MOD_CD(+),'X') , 'PR', NVL(O.TRSP_MOD_CD(+),'X') , @[ob_trsp_mode])
	                            --If PR is selected and Sequence# is input, return the record of the Sequence# 
								AND NVL(O.PRIO_SEQ(+),0) = DECODE (@[ob_trsp_mode],'PR', TO_NUMBER(NVL(@[ob_prio_seq],NVL(O.PRIO_SEQ(+),0))), NVL(O.PRIO_SEQ(+),0))
                                AND NVL(O.DELT_FLG(+),'N') <> 'Y'
                                AND NVL(I.PCTL_IO_BND_CD(+),'I') = 'I' 
                                AND I.ROUT_ORG_NOD_CD(+)= DECODE(@[del_t], 'F', 'X', 'T', 'X', T.POD_NODE)
                                AND I.ROUT_DEST_NOD_CD(+) 
                                    LIKE CASE WHEN @[del_t] IN ('F', 'T') THEN 'X'
                                              WHEN @[del_n] IS NOT NULL AND REPLACE(@[ib_str], '%', '') IS NULL THEN DECODE(@[del_n], T.POD_NODE, 'X', @[del_n])
                                              WHEN @[del_t] = 'D' THEN IB_REP_ZN_CD
                                              WHEN @[del_t] = 'S' AND NVL(T.POD_NODE_S, 'N') <> 'Y' THEN NEW_DEL || '%'
                                              WHEN SUBSTR(T.POD_NODE, 1,5) = NEW_DEL THEN DECODE(REPLACE(@[ib_str], '%', ''), NULL, 'X', NEW_DEL || '%')
                                              ELSE NEW_DEL || '%'
                                         END
    							--If AL or PR of Transmode code is slected, return all type of Transmode  
								AND NVL(I.TRSP_MOD_CD(+),'X') = DECODE ( NVL(@[ib_trsp_mode],'AL'), 'AL', NVL(I.TRSP_MOD_CD(+),'X') , 'PR', NVL(I.TRSP_MOD_CD(+),'X') , @[ib_trsp_mode])
                                --If PR is selected and Sequence# is input, return the record of the Sequence# 
								AND NVL(I.PRIO_SEQ(+),0) = DECODE (@[ib_trsp_mode],'PR', TO_NUMBER(NVL(@[ib_prio_seq],NVL(I.PRIO_SEQ(+),0))), NVL(I.PRIO_SEQ(+),0))
                                AND NVL(I.DELT_FLG(+),'N') <> 'Y'
                            ) ROUT, PRD_INLND_ROUT_DTL OD,PRD_INLND_ROUT_DTL ID
                            WHERE ROUT.ORG_CHECK = 'Y'
                            AND ROUT.DEST_CHECK ='Y'
                            AND DECODE(OB_ROUT_SEQ,0,'Y',ROUT.ORG_FLG_CHK) = 'Y'
                            AND DECODE(IB_ROUT_SEQ,0,'Y',ROUT.DEST_FLG_CHK) = 'Y'
                            AND ROUT.OB_ORG =OD.ROUT_ORG_NOD_CD(+)
                            AND ROUT.OB_DEST =OD.ROUT_DEST_NOD_CD(+)
                            AND ROUT.OB_SEQ =OD.ROUT_SEQ(+)
                            AND ROUT.IB_ORG =ID.ROUT_ORG_NOD_CD(+)
                            AND ROUT.IB_DEST =ID.ROUT_DEST_NOD_CD(+)
                            AND ROUT.IB_SEQ =ID.ROUT_SEQ(+) 
                            AND NVL(ROUT.ORG_ROUT,'X') LIKE REGEXP_REPLACE(@[ob_str],'-...-','-')||'%'
                            AND NVL(ROUT.DEST_ROUT,'X') LIKE REGEXP_REPLACE(@[ib_str],'-...-','-')||'%' 
                        )
                    WHERE IB_RK =1 AND OB_RK= 1
                    AND DECODE(@[rcv_t], 'S', 'S', MTPU_CY) IS NOT NULL AND DECODE(@[del_t], 'S', 'S', MTRTN_CY) IS NOT NULL
                    GROUP BY OB_ORG,OB_ORG,OB_DEST,OB_PRIO_SEQ,OB_SEQ,OB_CNT,FULL_RTN_YD_CD,FULL_PKUP_YD_CD,
                    ORG_LOC_CD,DEST_LOC_CD,OCN_SEQ,LNK_KNT,OCN_ROUT_PRIO_CD,
                    N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,N2ND_POL_CD, N3RD_POL_CD,N4TH_POL_CD,
                    N1ST_TZTM_HRS,N2ND_TZTM_HRS,N3RD_TZTM_HRS,N4TH_TZTM_HRS,CCT,
                    POL1,POD1,TS1_2,TS1_3,TS1_4,POLT1,PODT1,VVD1,CRR1,POL_SEQ1,POD_SEQ1,
                    POL2,POD2,TS2_2,TS2_3,TS2_4,POLT2,PODT2,VVD2,CRR2,POL_SEQ2,POD_SEQ2,
                    POL3,POD3,TS3_2,TS3_3,TS3_4,POLT3,PODT3,VVD3,CRR3,POL_SEQ3,POD_SEQ3,
                    POL4,POD4,POLT4,PODT4,VVD4,CRR4,POL_SEQ4,POD_SEQ4,
                    POD_NODE,CHECK_ROUT,
                    IB_ORG,IB_DEST,IB_PRIO_SEQ,IB_SEQ,IB_CNT,
					MTPU_CY, MTRTN_CY
                    ),
                    ( SELECT CPY_NO F_N0 FROM COM_CPY_NO WHERE CPY_NO <=42 )
                )
                WHERE TRIM(NODE1) IS NOT NULL
            ),
            (
                SELECT CPY_NO L_N0 FROM COM_CPY_NO WHERE CPY_NO IN (1,2)
            )
        )
        ORDER BY 1,2,3
    )
    WHERE (F_NO2 <> 42 OR L_N0 <> 2)
    AND NODE_NEW2 IS NOT NULL
    ORDER BY 1,2,3
)
ORDER BY GP1, ORD			]]></sql>
			<params>
				<param name="rcv_t" type="12" value="" out="N"/>
				<param name="del_t" type="12" value="" out="N"/>
				<param name="com" type="12" value="" out="N"/>
				<param name="bkg_ofc" type="12" value="" out="N"/>
				<param name="sc_ofc" type="12" value="" out="N"/>
				<param name="cre_usr_id" type="12" value="" out="N"/>
				<param name="cgo_tp" type="12" value="" out="N"/>
				<param name="shpr_cnt_cd" type="12" value="" out="N"/>
				<param name="shpr_seq" type="12" value="" out="N"/>
				<param name="cnee_cnt_cd" type="12" value="" out="N"/>
				<param name="cnee_seq" type="12" value="" out="N"/>
				<param name="sc_no" type="12" value="" out="N"/>
				<param name="rfa_no" type="12" value="" out="N"/>
				<param name="dg_clss_cd" type="12" value="" out="N"/>
				<param name="dg_spcl_flg" type="12" value="" out="N"/>
				<param name="rf_spcl_flg" type="12" value="" out="N"/>
				<param name="spcl_awk_cgo_flg" type="12" value="" out="N"/>
				<param name="bb_spcl_flg" type="12" value="" out="N"/>
				<param name="rd_spcl_flg" type="12" value="" out="N"/>
				<param name="hngr_spcl_flg" type="12" value="" out="N"/>
				<param name="soc_flg" type="12" value="" out="N"/>
				<param name="eq_subst_flg" type="12" value="" out="N"/>
				<param name="bkg_wgt" type="12" value="" out="N"/>
				<param name="bkg_wgt_ut_cd" type="12" value="" out="N"/>
				<param name="sls_ofc_cd" type="12" value="" out="N"/>
				<param name="rfa_ofc_cd" type="12" value="" out="N"/>
				<param name="prm_cust_flg" type="12" value="" out="N"/>
				<param name="rep_cmdt_cd" type="12" value="" out="N"/>
				<param name="c_tpsz" type="12" value="" out="N"/>
				<param name="hd_pctl_no" type="12" value="" out="N"/>
				<param name="pm_f" type="12" value="" out="N"/>
				<param name="cre_usr_cd" type="12" value="" out="N"/>
				<param name="ocn_str" type="12" value="" out="N"/>
				<param name="m_pu" type="12" value="" out="N"/>
				<param name="por_n" type="12" value="" out="N"/>
				<param name="por" type="12" value="" out="N"/>
				<param name="del_n" type="12" value="" out="N"/>
				<param name="del" type="12" value="" out="N"/>
				<param name="f_rt" type="12" value="" out="N"/>
				<param name="ob_trsp_mode" type="12" value="" out="N"/>
				<param name="ib_trsp_mode" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="skd_date" type="12" value="" out="N"/>
				<param name="skd_type" type="12" value="" out="N"/>
				<param name="vvd1" type="12" value="" out="N"/>
				<param name="pol_n" type="12" value="" out="N"/>
				<param name="n1st_pol_dc_seq" type="12" value="" out="N"/>
				<param name="pod_n" type="12" value="" out="N"/>
				<param name="n1st_pod_dc_seq" type="12" value="" out="N"/>
				<param name="n2nd_pol_dc_seq" type="12" value="" out="N"/>
				<param name="vvd2" type="12" value="" out="N"/>
				<param name="n2nd_pod_dc_seq" type="12" value="" out="N"/>
				<param name="n3rd_pol_dc_seq" type="12" value="" out="N"/>
				<param name="vvd3" type="12" value="" out="N"/>
				<param name="n3rd_pod_dc_seq" type="12" value="" out="N"/>
				<param name="n4th_pol_dc_seq" type="12" value="" out="N"/>
				<param name="vvd4" type="12" value="" out="N"/>
				<param name="n4th_pod_dc_seq" type="12" value="" out="N"/>
				<param name="cgo_tp_cd" type="12" value="" out="N"/>
				<param name="pol" type="12" value="" out="N"/>
				<param name="pod" type="12" value="" out="N"/>
				<param name="ocn_seq" type="12" value="" out="N"/>
				<param name="more_cnt" type="12" value="" out="N"/>
				<param name="pol1" type="12" value="" out="N"/>
				<param name="pod1" type="12" value="" out="N"/>
				<param name="lane1" type="12" value="" out="N"/>
				<param name="pol2" type="12" value="" out="N"/>
				<param name="pod2" type="12" value="" out="N"/>
				<param name="lane2" type="12" value="" out="N"/>
				<param name="pol3" type="12" value="" out="N"/>
				<param name="pod3" type="12" value="" out="N"/>
				<param name="lane3" type="12" value="" out="N"/>
				<param name="pol4" type="12" value="" out="N"/>
				<param name="pod4" type="12" value="" out="N"/>
				<param name="lane4" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="ob_str" type="12" value="" out="N"/>
				<param name="ob_prio_seq" type="12" value="" out="N"/>
				<param name="ib_str" type="12" value="" out="N"/>
				<param name="ib_prio_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
