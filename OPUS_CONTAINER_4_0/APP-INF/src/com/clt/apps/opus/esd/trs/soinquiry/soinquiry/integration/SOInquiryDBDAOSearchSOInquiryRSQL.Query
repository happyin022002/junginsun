<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SOInquiryDBDAOSearchSOInquiryRSQL">
			<desc><![CDATA[S/O Inquiry
2011.01.03 이윤정 [CHM-201007768-01] DMDT 관련 컬럼 추가]]></desc>
			<sql><![CDATA[
#if (${invar_usrail} == 'N') 
/* S/O inquiry */
SELECT X.EQ_NO
      ,X.EQ_TPSZ
      ,X.ORG_EQ_TPSZ AS ORG_EQ_TPSZ
      ,X.CNTR_SLT_NO
      ,X.TRSP_COST_DTL_MOD_CD
      ,X.TRSP_CRR_MOD_CD
      ,(SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL CD WHERE CD.INTG_CD_ID = 'CD00279' AND CD.INTG_CD_VAL_CTNT = X.TRSP_SO_TP_CD) AS TRSP_SO_TP_CD
      ,X.UPLN_SO_FLG
      ,(SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL CD WHERE CD.INTG_CD_ID = 'CD00762' AND CD.INTG_CD_VAL_CTNT = X.BKG_CNTR_CMB_SEQ) AS BKG_CNTR_CMB_SEQ
      ,X.TRSP_FRST_FLG
      ,X.SO_NO
      ,X.SO_CRE_DT1
      ,X.SO_DEL_FLG
      ,DECODE (X.SO_DEL_FLG,'Y', SO_UPD_DT) SO_DEL_DT
      ,X.SO_UPD_DT
      ,X.WO_NO
      ,(SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL CD WHERE CD.INTG_CD_ID = 'CD00804' AND CD.INTG_CD_VAL_CTNT = X.WO_ISS_STS_CD) AS WO_ISS_STS_CD
      ,X.WO_ISS_DT
      ,X.WO_ISS_TP
      ,X.WO_ISS_OFC_CD
      ,X.WO_ISS_ID
      ,X.FM_NOD_CD
	  ,DECODE(LENGTH(X.FM_NOD_CD), 7, TRS_COMMON_PKG.GET_YD_CD_NM_FNC(X.FM_NOD_CD), 5, (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.FM_NOD_CD)) FM_NOD_CD_NM
      ,X.VIA_NOD_CD
	  ,DECODE(LENGTH(X.VIA_NOD_CD), 7, TRS_COMMON_PKG.GET_YD_CD_NM_FNC(X.VIA_NOD_CD), 5, (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.VIA_NOD_CD)) VIA_NOD_CD_NM
      ,X.TO_NOD_CD
	  ,DECODE(LENGTH(X.TO_NOD_CD), 7, TRS_COMMON_PKG.GET_YD_CD_NM_FNC(X.TO_NOD_CD), 5, (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.TO_NOD_CD)) TO_NOD_CD_NM
      ,X.DOOR
	  ,DECODE(LENGTH(X.DOOR), 7, X.DOOR_NM, 5, (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.DOOR)) DOOR_NM
      ,X.DOOR_FCTRY_NM
      ,X.DOOR_ZIP
      ,X.DOR_DE_ADDR
      ,X.DOOR_TEL
      ,X.DOOR_FAX
      ,X.DOOR_PIC
      ,X.VNDR_TP_CD
      ,SUBSTR(X.INV_VNDR_INFO, 1, INSTR(X.INV_VNDR_INFO, '$', 1, 1) - 1) AS VNDR_CD
      ,SUBSTR(X.INV_VNDR_INFO, INSTR(X.INV_VNDR_INFO, '$', 1, 1) + 1, INSTR(X.INV_VNDR_INFO, '$', 1, 2) - INSTR(X.INV_VNDR_INFO, '$', 1, 1) - 1) AS VNDR_ABBR_NM
      ,SUBSTR(X.INV_VNDR_INFO, INSTR(X.INV_VNDR_INFO, '$', 1, 2) + 1, INSTR(X.INV_VNDR_INFO, '$', 1, 3) - INSTR(X.INV_VNDR_INFO, '$', 1, 2) - 1) AS PVNDR_CD
      ,SUBSTR(X.INV_VNDR_INFO, INSTR(X.INV_VNDR_INFO, '$', 1, 3) + 1) AS PVNDR_NM
      ,X.WO_RCV_DT
      ,X.APPT_TIME
      ,X.DELIV_TIME
      ,X.N3PTY_BIL_FLG
      ,X.COST_OFC_CD
      ,X.WO_CURR_CD
      ,TO_CHAR(X.WO_BZC_AMT) WO_BZC_AMT
      ,TO_CHAR(X.WO_NEGO_AMT) WO_NEGO_AMT
      ,TO_CHAR(X.WO_FUEL_SCG_AMT) WO_FUEL_SCG_AMT
      ,TO_CHAR(X.WO_ETC_ADD_AMT) WO_ETC_ADD_AMT
      ,TO_CHAR(X.WO_TOT_AMT) WO_TOT_AMT
      ,TO_CHAR(X.WO_TOT_AMT_USD) WO_TOT_AMT_USD
      ,TO_CHAR(X.INV_XCH_RT) INV_XCH_RT
      ,(SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL CD WHERE CD.INTG_CD_ID = 'CD00874' AND CD.INTG_CD_VAL_CTNT = X.INV_CALC_LGC_TP_CD) AS INV_CALC_LGC_TP_CD
      ,X.INV_CURR_CD
      ,TO_CHAR(X.INV_BZC_AMT) INV_BZC_AMT
      ,TO_CHAR(X.INV_ETC_ADD_AMT) INV_ETC_ADD_AMT
      ,TO_CHAR(X.INV_TOT_AMT) INV_TOT_AMT
      ,TO_CHAR(X.INV_TOT_AMT_USD) INV_TOT_AMT_USD
      ,TO_CHAR(X.INV_VNDR_SEQ) INV_VNDR_CD
      ,X.INV_VNDR_NM
      ,X.INV_NO
      ,(SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL CD WHERE CD.INTG_CD_ID = 'CD00824' AND CD.INTG_CD_VAL_CTNT = X.INV_STS_CD) AS INV_STS_CD
      ,X.INV_CFM_DT
      ,X.CSR_NO CAR_NO
      ,X.INV_CFM_OFC_CD
      ,X.INV_CRE_USR_ID
      ,X.N1ST_NOD_PLN_DT
      ,X.LST_NOD_PLN_DT
      ,X.DOR_NOD_PLN_DT
      ,X.DOR_ARR_DT
      ,X.COP_NO
      ,TO_CHAR(X.AG_SEQ) COST_ACT_GRP_SEQ
      ,X.AG_CODE AS COST_ACT_GRP_CD
      ,X.BKG_NO
      ,X.BL_NO
      ,X.TRSP_BND_CD
      ,X.TERM
      ,TO_CHAR(X.TRO_SEQ) TRO_SEQ
      ,X.TRO_CNFM
      ,X.TRO_CFM_OFC
      ,X.TRO_CFM_USR
      ,X.TRO_CFM_UPD
      ,X.TRO_REV_CUR
      ,SUBSTR(X.EUR_TRO_INFO, INSTR(X.EUR_TRO_INFO, '$', 1, 1) + 1, INSTR(X.EUR_TRO_INFO, '$', 1, 2) - INSTR(X.EUR_TRO_INFO, '$', 1, 1) - 1) EUR_TRO_REV
      ,SUBSTR(X.EUR_TRO_INFO, 1, INSTR(X.EUR_TRO_INFO, '$', 1, 1) -1) AS MANIFESTED
      ,X.TRO_LOD_REF
      ,TO_CHAR(X.BKG_QTY) BKG_QTY
      ,X.POR_CD
	  ,(SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.POR_CD ) POR_CD_NM
      ,X.POL_CD
	  ,(SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.POL_CD ) POL_CD_NM
      ,X.POD_CD
	  ,(SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.POD_CD ) POD_CD_NM
      ,X.DEL_CD
	  ,(SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.DEL_CD ) DEL_CD_NM
      ,X.T_VVD
      ,X.SLAN_CD
      ,X.IB_VVD_CD
      ,X.OB_VVD_CD
      ,X.CGO_TP_CD
      ,X.SPCL_CGO_CNTR_TP_CD AS BKG_SPE
      ,SUBSTR(X.MST_CNTR_INFO, 1, INSTR(X.MST_CNTR_INFO, '$', 1, 1) -1) AS USED
      ,SUBSTR(X.MST_CNTR_INFO, INSTR(X.MST_CNTR_INFO, '$', 1, 1) + 1, INSTR(X.MST_CNTR_INFO, '$', 1, 2) - INSTR(X.MST_CNTR_INFO, '$', 1, 1) - 1) AS LT
      ,SUBSTR(X.MST_CNTR_INFO, INSTR(X.MST_CNTR_INFO, '$', 1, 2) + 1) AS I_EXIT
      ,X.LSE_CNTR_FLG AS LT_EXP
      ,(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO  = X.BKG_NO AND CNTR_NO = X.EQ_NO AND CNTR_SEAL_SEQ = 1) AS SEAL_NO
      ,(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO  = X.BKG_NO AND CNTR_NO = X.EQ_NO AND CNTR_SEAL_SEQ = 2) AS SEAL_NO2
      ,TO_CHAR(X.WEIGHT_KGS) WEIGHT_KGS
      ,TO_CHAR(X.WEIGHT_LBS) WEIGHT_LBS

      ,TRS_COMMON_PKG.GET_CONV_WGT_TO_KGS_FNC(TRIM(REGEXP_SUBSTR(X.BKG_CNTR_INFO, '[^$]+',1, 3)), TRIM(REGEXP_SUBSTR(X.BKG_CNTR_INFO, '[^$]+',1, 4))) AS VGM_KGS_WGT
      ,TRS_COMMON_PKG.GET_CONV_WGT_TO_LBS_FNC(TRIM(REGEXP_SUBSTR(X.BKG_CNTR_INFO, '[^$]+',1, 3)), TRIM(REGEXP_SUBSTR(X.BKG_CNTR_INFO, '[^$]+',1, 4))) AS VGM_LBS_WGT

      ,SUBSTR(X.BKG_CNTR_INFO, 1, INSTR(X.BKG_CNTR_INFO, '$', 1, 1) -1) AS NO_PKG
      ,SUBSTR(X.BKG_CNTR_INFO, INSTR(X.BKG_CNTR_INFO, '$', 1, 1) + 1, INSTR(X.BKG_CNTR_INFO, '$', 1, 2) - INSTR(X.BKG_CNTR_INFO, '$', 1, 1) - 1) PKG_CD
      ,REPLACE(X.CMDT_NM, chr(34), '') AS CMDT_NM
      ,X.C_LOC
      ,X.USA_LAST_CITY
      ,NVL(TRIM(REGEXP_SUBSTR(X.EDI_FOC_INFO, '[^$]+', 1, 1)), 'N') AS F
      ,NVL(TRIM(REGEXP_SUBSTR(X.EDI_FOC_INFO, '[^$]+', 1, 2)), 'N') AS O
      ,NVL(TRIM(REGEXP_SUBSTR(X.EDI_FOC_INFO, '[^$]+', 1, 3)), 'N') AS C
      ,IT_NO
      ,SUBSTR(X.PKUP_INFO, 1, INSTR(X.PKUP_INFO, '^', 1, 1) - 1) AS PICKUP_NO
      ,SUBSTR(X.PKUP_INFO, INSTR(X.PKUP_INFO, '^', 1, 1) + 1, INSTR(X.PKUP_INFO, '^', 1, 2) - INSTR(X.PKUP_INFO, '^', 1, 1) - 1) AS PU_YARD_CD
      ,TO_CHAR( TO_DATE(SUBSTR(X.PKUP_INFO, INSTR(X.PKUP_INFO, '^', 1, 2) + 1, INSTR(X.PKUP_INFO, '^', 1, 3) - INSTR(X.PKUP_INFO, '^', 1, 2) - 1 - 9), 'YYYY-MM-DD'), 'YYYYMMDD') AS AVAILABLE_DT
      ,TO_CHAR( TO_DATE(SUBSTR(X.PKUP_INFO, INSTR(X.PKUP_INFO, '^', 1, 3) + 1, INSTR(X.PKUP_INFO, '^', 1, 4) - INSTR(X.PKUP_INFO, '^', 1, 3) - 1 - 9), 'YYYY-MM-DD'), 'YYYYMMDD') AS LAST_FREE_DT
      ,SUBSTR(X.BKG_SC_NO_INFO, 1, INSTR(X.BKG_SC_NO_INFO, '$', 1, 1) -1) AS SC_NO
      ,SUBSTR(X.BKG_SC_NO_INFO, INSTR(X.BKG_SC_NO_INFO, '$', 1, 1) + 1) AS RFA_NO
      ,X.DOOR_SVC_TP
      ,X.PKUP_CNTR
      ,REPLACE(X.SHIPPER, chr(34), '') AS SHIPPER 
      ,REPLACE(X.CONSIGNEE, chr(34), '') AS CONSIGNEE
      ,REPLACE(X.NOTIFY, chr(34), '') AS NOTIFY
      ,X.REF_BKG_NO
      ,X.REF_BL_NO
      ,X.ORG_GATE_OUT_DT
      ,X.DEST_GATE_IN_DT
      ,X.MTY_REF_ID
      ,REPLACE(REPLACE(X.TRSP_PURP_RSN, CHR(13)||CHR(10), ' '), CHR(34), '') TRSP_PURP_RSN
      ,DECODE(X.TRSP_SO_TP_CD, 'M', 'N/A', 'H', X.INTER_RMK, DECODE(X.INTER_RMK_CHK, '', '', 'Y')) INTER_RMK
      ,REPLACE(REPLACE(X.SPCL_INSTR_RMK, CHR(13)||CHR(10), ' '), CHR(34), '')  SPCL_INSTR_RMK
      ,REPLACE(REPLACE(X.WO_INSTR_RMK, CHR(13)||CHR(10), ' '), CHR(34), '')  WO_INSTR_RMK
      ,TO_CHAR(X.CHZ_BUNDLE_SEQ) CHZ_BUNDLE_SEQ
	  ,X.REF_INV_NO
#if (${invar_usdropnpull} == 'Y') 
	  ,SUBSTR(X.DMDT_INFO, 1, INSTR(X.DMDT_INFO, '$', 1, 1) -1) AS FM_DT
	  ,SUBSTR(X.DMDT_INFO, INSTR(X.DMDT_INFO, '$', 1, 1) + 1, INSTR(X.DMDT_INFO, '$', 1, 2) - INSTR(X.DMDT_INFO, '$', 1, 1) - 1) AS FM_YD
	  ,SUBSTR(X.DMDT_INFO, INSTR(X.DMDT_INFO, '$', 1, 2) + 1, INSTR(X.DMDT_INFO, '$', 1, 3) - INSTR(X.DMDT_INFO, '$', 1, 2) - 1) AS FM_STS 
	  ,SUBSTR(X.DMDT_INFO, INSTR(X.DMDT_INFO, '$', 1, 3) + 1, INSTR(X.DMDT_INFO, '$', 1, 4) - INSTR(X.DMDT_INFO, '$', 1, 3) - 1) AS TO_DT 
	  ,SUBSTR(X.DMDT_INFO, INSTR(X.DMDT_INFO, '$', 1, 4) + 1, INSTR(X.DMDT_INFO, '$', 1, 5) - INSTR(X.DMDT_INFO, '$', 1, 4) - 1) AS TO_YD 
	  ,SUBSTR(X.DMDT_INFO, INSTR(X.DMDT_INFO, '$', 1, 5) + 1, INSTR(X.DMDT_INFO, '$', 1, 6) - INSTR(X.DMDT_INFO, '$', 1, 5) - 1) AS TO_STS
	  ,SUBSTR(X.DMDT_INFO, INSTR(X.DMDT_INFO, '$', 1, 6) + 1, INSTR(X.DMDT_INFO, '$', 1, 7) - INSTR(X.DMDT_INFO, '$', 1, 6) - 1) AS MT_DT 
	  ,SUBSTR(X.DMDT_INFO, INSTR(X.DMDT_INFO, '$', 1, 7) + 1, INSTR(X.DMDT_INFO, '$', 1, 8) - INSTR(X.DMDT_INFO, '$', 1, 7) - 1) AS MT_YD 
	  ,SUBSTR(X.DMDT_INFO, INSTR(X.DMDT_INFO, '$', 1, 8) + 1, INSTR(X.DMDT_INFO, '$', 1, 9) - INSTR(X.DMDT_INFO, '$', 1, 8) - 1) AS WEB_MT_DT 
	  ,SUBSTR(X.DMDT_INFO, INSTR(X.DMDT_INFO, '$', 1, 9) + 1, INSTR(X.DMDT_INFO, '$', 1,10) - INSTR(X.DMDT_INFO, '$', 1, 9) - 1) AS GRACE_END 
#end
#if (${grid_flg} == 'Y')
      ,X.CONTI_CD
      ,X.TRSP_SO_OFC_CTY_CD
      ,TO_CHAR(X.TRSP_SO_SEQ) TRSP_SO_SEQ
      ,TO_CHAR(X.VNDR_SEQ) VNDR_SEQ
      ,X.TRSP_WO_OFC_CTY_CD
      ,TO_CHAR(X.TRSP_WO_SEQ) TRSP_WO_SEQ
      ,X.WGT_MEAS_UT_CD UOM
      ,X.REGISTRATION_NO
      ,X.UPD_USR_ID
#end
  FROM (
          SELECT SO.CMDT_CD
                ,SO.VNDR_SEQ
                ,SO.CUST_SEQ
                ,SO.CUST_CNT_CD
                ,WRK.CSR_NO
                ,SO.TRSP_SO_CMB_SEQ
                ,SO.TRSP_SO_CMB_TP_CD
                ,SO.LOCL_CRE_DT AS SO_CRE_DT
                ,WO.LOCL_CRE_DT AS WO_CRE_DT
                ,WRK.CRE_OFC_CD AS INV_CRE_OFC_CD
                ,SO.VSL_CD
                ,SO.SKD_VOY_NO
                ,SO.SKD_DIR_CD
                ,SO.TRSP_SO_STS_CD
                ,SO.CGO_TP_CD
                ,SO.CNTR_KGS_WGT AS WEIGHT_KGS
                ,SO.CNTR_LBS_WGT AS WEIGHT_LBS
                ,SO.WGT_MEAS_UT_CD
                ,SO.EQ_NO EQ_NO
                ,SO.EQ_KND_CD
                ,SO.EQ_TPSZ_CD AS EQ_TPSZ
                ,SO.TRSP_SO_OFC_CTY_CD
                ,SO.TRSP_SO_SEQ
                ,SO.TRSP_COST_DTL_MOD_CD AS TRSP_COST_DTL_MOD_CD
                ,SO.TRSP_CRR_MOD_CD AS TRSP_CRR_MOD_CD
                ,SO.TRSP_SO_OFC_CTY_CD || SO.TRSP_SO_SEQ AS SO_NO
                ,TO_CHAR (SO.LOCL_CRE_DT, 'YYYY-MM-DD HH24:MI:SS') AS SO_CRE_DT1
                ,SO.DELT_FLG SO_DEL_FLG
                ,TO_CHAR (SO.LOCL_UPD_DT, 'YYYY-MM-DD HH24:MI:SS') AS SO_UPD_DT
                ,WO.TRSP_WO_OFC_CTY_CD || WO.TRSP_WO_SEQ AS WO_NO
                ,WO.TRSP_WO_OFC_CTY_CD
                ,WO.TRSP_WO_SEQ
                ,WO.WO_ISS_STS_CD AS WO_ISS_STS_CD
                ,TO_CHAR ( WO.LOCL_CRE_DT, 'YYYY-MM-DD HH24:MI:SS') AS WO_ISS_DT
                ,DECODE (WO.WO_PRN_USE_FLG,'Y', 'PRINT','') || DECODE (WO.WO_FAX_USE_FLG,'Y', 'FAX','') || DECODE (WO.WO_EML_USE_FLG,'Y', ' EMAIL','') || DECODE (WO.WO_EDI_USE_FLG,'Y', ' EDI','') AS WO_ISS_TP
                ,WO.CRE_OFC_CD AS WO_ISS_OFC_CD
                ,WO.CRE_USR_ID AS WO_ISS_ID
                ,SO.FM_NOD_CD AS FM_NOD_CD
                ,SO.VIA_NOD_CD AS VIA_NOD_CD
                ,SO.TO_NOD_CD AS TO_NOD_CD
                ,SO.FCTRY_NM AS DOOR_FCTRY_NM
                ,SO.DOR_NOD_CD AS DOOR
				,Z.ZN_NM AS DOOR_NM
                ,SO.DOR_DE_ADDR AS DOR_DE_ADDR
                ,SO.TRSP_SO_TP_CD AS TRSP_SO_TP_CD
                ,SO.TRSP_SO_CMB_TP_CD AS BKG_CNTR_CMB_SEQ
                ,DECODE (SO.CUST_NOMI_TRKR_FLG,'Y', 'CNT','NYK') AS VNDR_TP_CD
                ,DECODE (WO.WO_OPN_FLG,'Y', TO_CHAR (WO.UPD_DT, 'YYYY-MM-DD HH24:MI:SS')) AS WO_RCV_DT
                ,TO_CHAR (SO.APNT_DT, 'YYYY-MM-DD HH24:MI:SS') AS APPT_TIME
                ,TO_CHAR (SO.DE_DT, 'YYYY-MM-DD HH24:MI:SS') AS DELIV_TIME
                ,NVL (SO.N3PTY_BIL_FLG, 'N') AS N3PTY_BIL_FLG
                ,SO.CURR_CD AS WO_CURR_CD
                ,SO.BZC_AMT AS WO_BZC_AMT
                ,SO.NEGO_AMT AS WO_NEGO_AMT
                ,SO.FUEL_SCG_AMT AS WO_FUEL_SCG_AMT
                ,CASE WHEN SO.CURR_CD = 'JPY' OR SO.CURR_CD = 'KRW' OR SO.CURR_CD = 'TWD'
                      THEN TO_CHAR(NVL(SO.ETC_ADD_AMT, 0), 'FM999999999990')
                      ELSE TO_CHAR(NVL(SO.ETC_ADD_AMT, 0), 'FM999999999990.90')
                 END AS WO_ETC_ADD_AMT
                ,SO.BZC_AMT + NVL (SO.FUEL_SCG_AMT, 0) + NVL (SO.NEGO_AMT, 0) + NVL (SO.ETC_ADD_AMT, 0) AS WO_TOT_AMT
                ,SO.INV_XCH_RT AS INV_XCH_RT
                ,SO.TRSP_INV_CALC_LGC_TP_CD AS INV_CALC_LGC_TP_CD
                ,SO.CRE_OFC_CD AS COST_OFC_CD
                ,SO.INV_CURR_CD AS INV_CURR_CD
                ,SO.INV_BZC_AMT AS INV_BZC_AMT
                ,CASE WHEN SO.INV_CURR_CD = 'JPY' OR SO.INV_CURR_CD = 'KRW' OR SO.INV_CURR_CD = 'TWD'
                      THEN TO_CHAR(NVL(SO.INV_ETC_ADD_AMT, 0), 'FM999999999990')
                      ELSE TO_CHAR(NVL(SO.INV_ETC_ADD_AMT, 0), 'FM999999999990.90')
                 END AS INV_ETC_ADD_AMT
                , NVL (SO.INV_BZC_AMT, 0) + NVL (SO.INV_ETC_ADD_AMT, 0) AS INV_TOT_AMT
                ,SO.INV_NO AS INV_NO
                ,WRK.TRSP_INV_AUD_STS_CD AS INV_STS_CD
                ,WRK.RGST_NO AS REGISTRATION_NO
                ,TO_CHAR (WRK.INV_CFM_DT, 'YYYYMMDD') AS INV_CFM_DT
                ,WRK.CSR_NO AS CAR_NO
                ,CASE WHEN WRK.TRSP_INV_AUD_STS_CD IN ('CF', 'AR', 'IF', 'PD') THEN WRK.CRE_OFC_CD END AS INV_CFM_OFC_CD
                ,WRK.CRE_USR_ID AS INV_CRE_USR_ID
                ,SO.BKG_NO AS BKG_NO
                ,SO.BL_NO AS BL_NO
                ,SO.TRSP_BND_CD AS TRSP_BND_CD
                ,SO.BKG_RCVDE_TERM_CD AS TERM
                ,SO.POR_CD
                ,SO.POL_CD
                ,SO.POD_CD
                ,SO.DEL_CD
                ,SO.VSL_CD || SO.SKD_VOY_NO || SO.SKD_DIR_CD T_VVD
                ,SO.SLAN_CD SLAN_CD
                ,SO.IB_VVD_CD
                ,SO.OB_VVD_CD
                ,SO.IBD_CSTMS_CLR_LOC_CD C_LOC
                ,SO.LST_LOC_CD USA_LAST_CITY
                ,TO_CHAR (SO.AVAL_DT, 'YYYYMMDD') AVAILABLE_DT
                ,TO_CHAR (SO.LST_FREE_DT, 'YYYYMMDD') LAST_FREE_DT
                ,SO.REF_BKG_NO REF_BKG_NO
                ,SO.REF_BL_NO REF_BL_NO
                ,SO.INTER_RMK INTER_RMK
                ,(SELECT MAX(RMK.BKG_NO) FROM TRS_INTER_RMK RMK WHERE RMK.BKG_NO = SO.BKG_NO AND NVL(RMK.EQ_NO, 'X') = NVL2(RMK.EQ_NO, SO.EQ_NO, 'X') AND NVL(RMK.DELT_FLG, 'X') = 'N') AS INTER_RMK_CHK
                ,WO.WO_RMK WO_INSTR_RMK
                ,SO.SPCL_INSTR_RMK
                ,CASE
                    WHEN SO.EQ_KND_CD = 'Z' AND SO.TRSP_SO_CMB_TP_CD = 'BD' THEN COUNT (SO.TRSP_SO_SEQ) OVER (PARTITION BY SO.TRSP_SO_CMB_TP_CD, SO.TRSP_SO_CMB_SEQ)
                    WHEN SO.EQ_KND_CD = 'Z' THEN 1
                 END AS CHZ_BUNDLE_SEQ
                ,SO.COP_NO
                ,SO.COST_ACT_GRP_SEQ AG_SEQ
                ,SO.COST_ACT_GRP_CD AG_CODE
                ,DECODE (SO.TRSP_COST_DTL_MOD_CD,'DR', DECODE (NVL (SO.TRO_SEQ, ''),'', 'N','Y'),'') TRO_CNFM
                ,SO.TRO_SEQ 
                ,NVL (SO.UPD_USR_ID, SO.CRE_USR_ID) UPD_USR_ID
                ,SO.ACT_CUST_CNT_CD || SO.ACT_CUST_SEQ DOOR_ACT_CUST
                ,SO.DOR_PST_CD DOOR_ZIP
                ,SO.CNTC_PSON_PHN_NO DOOR_TEL
                ,SO.CNTC_PSON_FAX_NO DOOR_FAX
                ,SO.CNTC_PSON_NM DOOR_PIC
                ,DECODE (SO.DOR_SVC_TP_CD,'UD', 'UNDECIDED','LL', 'LIVE LOAD','LU', 'LIVE UNLOAD','ST', 'STREET TURN','DP', 'DROP AND PICK') DOOR_SVC_TP
                ,SO.REF_ID MTY_REF_ID
			    ,SO.REF_INV_NO
                ,TO_CHAR (SO.ORG_GATE_OUT_DT, 'YYYY-MM-DD HH24:MI:SS') ORG_GATE_OUT_DT
                ,TO_CHAR (SO.DEST_GATE_IN_DT, 'YYYY-MM-DD HH24:MI:SS') DEST_GATE_IN_DT
                ,SO.TRSP_PURP_RSN
                ,NVL(SO.UPLN_SO_FLG, 'N') UPLN_SO_FLG
                ,NVL(SO.TRSP_FRST_FLG, 'N') TRSP_FRST_FLG
                ,DECODE (SO.EQ_TPSZ_CD, SO.ORG_EQ_TPSZ_CD, '', SO.ORG_EQ_TPSZ_CD ) ORG_EQ_TPSZ
                ,SO.DOR_PKUP_CNTR_NO PKUP_CNTR
                ,TO_CHAR (SO.N1ST_NOD_PLN_DT, 'YYYY-MM-DD HH24:MI:SS') N1ST_NOD_PLN_DT
                ,TO_CHAR (SO.LST_NOD_PLN_DT, 'YYYY-MM-DD HH24:MI:SS') LST_NOD_PLN_DT
                ,TO_CHAR (SO.DOR_NOD_PLN_DT, 'YYYY-MM-DD HH24:MI:SS') DOR_NOD_PLN_DT
                ,TO_CHAR (SO.DOR_ARR_DT, 'YYYY-MM-DD HH24:MI:SS') DOR_ARR_DT                
                ,(SELECT REPLACE(REPLACE (CUST_NM, CHR(13),' '), CHR(10), '') FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = SO.BKG_NO AND CUST.BKG_CUST_TP_CD = 'S' ) AS SHIPPER
                ,(SELECT REPLACE(REPLACE (CUST_NM, CHR(13),' '), CHR(10), '') FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = SO.BKG_NO AND CUST.BKG_CUST_TP_CD = 'C' ) AS CONSIGNEE
                ,(SELECT REPLACE(REPLACE (CUST_NM, CHR(13),' '), CHR(10), '') FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = SO.BKG_NO AND CUST.BKG_CUST_TP_CD = 'N' ) AS NOTIFY
                ,(SELECT LISTAGG(DECODE(NVL(U.EQ_SUBST_CGO_QTY, 0), 0, U.CNTR_TPSZ_CD ||' '||U.OP_CNTR_QTY, U.CNTR_TPSZ_CD||' '||U.OP_CNTR_QTY ||'-SUB '||U.EQ_SUBST_CNTR_TPSZ_CD||' '||U.EQ_SUBST_CGO_QTY ), ', ') WITHIN GROUP (ORDER BY U.BKG_NO)
                    FROM BKG_QUANTITY U
                   WHERE U.BKG_NO(+)       = SO.BKG_NO) AS BKG_QTY
                ,(SELECT CMDT_NM FROM MDM_COMMODITY CMT WHERE CMT.CMDT_CD = SO.CMDT_CD ) AS CMDT_NM
                ,DECODE (SO.TRSP_COST_DTL_MOD_CD,'DR', SO.TRO_CFM_OFC_CD, '') TRO_CFM_OFC
                ,DECODE (SO.TRSP_COST_DTL_MOD_CD,'DR', SO.TRO_CFM_USR_ID, '') TRO_CFM_USR
                ,DECODE (SO.TRSP_COST_DTL_MOD_CD,'DR', TO_CHAR (SO.TRO_CFM_UPD_DT, 'YYYY-MM-DD HH24:MI:SS'), '') TRO_CFM_UPD
                ,DECODE (SO.TRSP_COST_DTL_MOD_CD,'DR', SO.REV_CURR_CD, '') TRO_REV_CUR
                ,SO.LSE_CNTR_FLG
                ,ROUND ((NVL (SO.BZC_AMT, 0) + NVL (SO.FUEL_SCG_AMT, 0) + NVL (SO.NEGO_AMT, 0) + NVL (SO.ETC_ADD_AMT, 0)) / 
                         (SELECT USD_LOCL_XCH_RT
                            FROM GL_MON_XCH_RT XCH
                           WHERE XCH.ACCT_XCH_RT_YRMON = TO_CHAR (SO.LOCL_CRE_DT, 'RRRRMM')
                             AND XCH.ACCT_XCH_RT_LVL   = 1
                             AND XCH.CURR_CD        = SO.CURR_CD ) , 2) WO_TOT_AMT_USD
                ,ROUND ((NVL (SO.INV_BZC_AMT, 0) + NVL (SO.INV_ETC_ADD_AMT, 0)) / 
                        (SELECT USD_LOCL_XCH_RT
                            FROM GL_MON_XCH_RT XCH
                           WHERE XCH.ACCT_XCH_RT_YRMON = TO_CHAR (SO.LOCL_CRE_DT, 'RRRRMM')
                             AND XCH.ACCT_XCH_RT_LVL   = 1
                             AND XCH.CURR_CD        = SO.INV_CURR_CD ) , 2) INV_TOT_AMT_USD 
                ,SO.INV_VNDR_SEQ
                ,(SELECT VDR.VNDR_LGL_ENG_NM
                    FROM MDM_VENDOR VDR
                   WHERE VDR.VNDR_SEQ = SO.INV_VNDR_SEQ ) AS INV_VNDR_NM
                ,(SELECT IVDR.VNDR_SEQ ||'$'|| NVL(IVDR.VNDR_LGL_ENG_NM, ' ') ||'$'|| NVL((SELECT PVNDR.VNDR_SEQ ||'$'|| NVL(PVNDR.VNDR_LGL_ENG_NM, ' ') FROM MDM_VENDOR PVNDR WHERE PVNDR.VNDR_SEQ = IVDR.PRNT_VNDR_SEQ ), '$')
                   FROM MDM_VENDOR IVDR
                   WHERE IVDR.VNDR_SEQ = SO.VNDR_SEQ ) AS INV_VNDR_INFO
                ,SO.TRO_LOD_REF_NO AS TRO_LOD_REF 
                ,(SELECT NVL(ETH.ALL_IN_RT_CD,' ') ||'$'|| NVL(TO_CHAR(DECODE(NVL(ETH.TRNS_REV_AMT,0)+NVL(ETH.NMF_TRNS_REV_AMT, 0)+NVL(ETH.ADD_REV_AMT, 0),0,'',NVL(ETH.TRNS_REV_AMT,0)+NVL(ETH.NMF_TRNS_REV_AMT, 0)+NVL(ETH.ADD_REV_AMT, 0) )), ' ') ||'$'||
                         NVL(ETH.CXL_FLG,' ') ||'$'|| NVL(ETH.TRO_PROC_CD,' ') ||'$'|| NVL(ETH.EUR_TRNS_TP_CD,' ')
                    FROM BKG_EUR_TRO ETH
                   WHERE ETH.BKG_NO    = SO.BKG_NO
                     AND ETH.IO_BND_CD = SO.TRSP_BND_CD
                     AND ETH.TRO_SEQ   = SO.TRO_SEQ
                     AND SO.TRSP_COST_DTL_MOD_CD = 'DR' ) EUR_TRO_INFO
                ,(SELECT IBD_TRSP_NO FROM BKG_CSTMS_ADV_IBD WHERE CNT_CD = 'US' AND BL_NO = SO.BL_NO) AS IT_NO 

                ,(SELECT BKG.SC_NO ||'$'|| BKG.RFA_NO 
                    FROM BKG_BOOKING BKG     
                   WHERE BKG.BKG_NO = SO.BKG_NO 
                   #if($r_sc_rfa_cd.size() > 0) 
                      #if (${r_radio_number} == 'S' )
                        AND BKG.SC_NO IN (
                        #foreach( ${key} in ${r_sc_rfa_cd}) 
                          #if($velocityCount < $r_sc_rfa_cd.size()) 
                             UPPER('${key}'), 
                          #else 
                             UPPER('${key}')
                          #end 
                        #end
                      )
                      #else
                        AND BKG.RFA_NO IN (
                        #foreach( ${key} in ${r_sc_rfa_cd}) 
                          #if($velocityCount < $r_sc_rfa_cd.size()) 
                             UPPER('${key}'), 
                          #else 
                             UPPER('${key}')
                          #end 
                        #end
                        )
                      #end
                   #end
                 ) BKG_SC_NO_INFO
                     
                ,(SELECT BKG_CNTR.PCK_QTY ||'$'|| BKG_CNTR.PCK_TP_CD || '$' || NVL(BKG_CNTR.VGM_WGT_UT_CD, 'KGS') || '$' || NVL(BKG_CNTR.VGM_WGT, 0)
                    FROM BKG_CONTAINER BKG_CNTR 
                   WHERE BKG_CNTR.BKG_NO  = SO.BKG_NO
                     AND BKG_CNTR.CNTR_NO = SO.EQ_NO
                 ) BKG_CNTR_INFO
                ,SO.SPCL_CGO_CNTR_TP_CD
                ,TRS_GET_FOC_INFO_FNC(SO.BL_NO, SO.TRSP_SO_OFC_CTY_CD, SO.TRSP_SO_SEQ, '$') EDI_FOC_INFO
                    
                ,(SELECT NVL(MST_CNTR.OWNR_CO_CD, ' ') ||'$'|| NVL(MST_CNTR.LSTM_CD, ' ') ||'$'|| NVL(MST_CNTR.IMDT_EXT_FLG, ' ')
                    FROM MST_CONTAINER MST_CNTR
                   WHERE MST_CNTR.CNTR_NO = SO.EQ_NO ) MST_CNTR_INFO
                 ,SO.BKG_RCVDE_TERM_CD
                ,CASE WHEN SO.TRSP_BND_CD = 'O' AND SO.CONTI_CD = 'M' AND SO.TRSP_COST_DTL_MOD_CD <> 'DR' THEN 
                    (SELECT PKUP_EDI_322_NO || '^^^'
                     FROM (SELECT  /*+ INDEX (G XAK4EDI_322_MSG) */  G.BKG_EDI_322_NO
                            ,G.EQ_NO
                            ,G.DEST_LOC_NM
                            ,G.PKUP_EDI_322_NO
                            ,ROW_NUMBER() OVER(partition BY G.EQ_NO, G.BKG_EDI_322_NO, G.DEST_LOC_NM order by G.EVNT_DT DESC, G.EQ_NO DESC, G.EDI_322_STS_CD DESC) RK
                          FROM EDI_322_MSG G) P1
                    WHERE P1.BKG_EDI_322_NO = SO.BKG_NO
                      AND P1.EQ_NO = SO.EQ_NO
                      AND P1.DEST_LOC_NM = SO.FM_NOD_CD
                      AND P1.RK = 1
                      AND ROWNUM = 1
                    )
                  ELSE (SELECT TRS_GET_PKUP_NO_FNC(SO.BKG_NO, SO.EQ_NO, '', SO.DEL_CD, '', SO.FM_NOD_CD) FROM DUAL)  
                 END PKUP_INFO
                 ,SO.CONTI_CD
			     ,( SELECT /*+ ORDERED INDEX_DESC(DMT_CNTR XPKDMT_CHG_BKG_CNTR) */
				           TO_CHAR(DMT_CALC.FM_MVMT_DT, 'YYYY-MM-DD')
							|| '$' ||DMT_CALC.FM_MVMT_YD_CD
							|| '$' ||DMT_CALC.FM_MVMT_STS_CD
							|| '$' ||DMT_CALC.TO_MVMT_DT
							|| '$' ||DMT_CALC.TO_MVMT_YD_CD
				            || '$' ||DMT_CALC.TO_MVMT_STS_CD
				            || '$' ||
				           NVL((SELECT TO_CHAR(CTM_MOV.CNMV_EVNT_DT, 'YYYY-MM-DD') || '$' || CTM_MOV.ORG_YD_CD
						          FROM CTM_MOVEMENT CTM_MOV
					             WHERE 1=1
					               AND CTM_MOV.CNTR_NO        = DMT_CNTR.CNTR_NO
					               AND CTM_MOV.CNMV_YR       IN (DMT_CALC.FM_MVMT_YR, DMT_CALC.TO_MVMT_YR) 
					               AND CTM_MOV.CNMV_SEQ      IN (DMT_CALC.FM_MVMT_SEQ, DMT_CALC.TO_MVMT_SEQ)
					               AND CTM_MOV.CNMV_SPLIT_NO IN (DMT_CALC.FM_MVMT_SPLIT_NO, DMT_CALC.TO_MVMT_SPLIT_NO)
					               AND CTM_MOV.MVMT_STS_CD    = 'MT'
					               AND ROWNUM = 1
					           ),'$')
				           || '$' ||DECODE(DMT_CALC.WEB_IND_FLG, 'Y', TO_CHAR(NVL(DMT_CALC.WEB_MTY_DT, DMT_CALC.TO_MVMT_DT), 'YYYY-MM-DD'), TO_CHAR(DMT_CALC.WEB_MTY_DT, 'YYYY-MM-DD')) 
				           || '$' ||DECODE(DMT_CALC.WEB_IND_FLG, 'Y', TO_CHAR(NVL(DMT_CALC.WEB_MTY_DT, DMT_CALC.TO_MVMT_DT) + 7, 'YYYY-MM-DD'), TO_CHAR(DMT_CALC.WEB_MTY_DT + 7, 'YYYY-MM-DD'))
				           || '$' DMT_INFO
			         FROM DMT_CHG_BKG_CNTR DMT_CNTR
				         ,DMT_CHG_CALC     DMT_CALC
			        WHERE DMT_CNTR.SYS_AREA_GRP_ID = DMT_CALC.SYS_AREA_GRP_ID
				      AND DMT_CNTR.CNTR_NO         = DMT_CALC.CNTR_NO
				      AND DMT_CNTR.CNTR_CYC_NO     = DMT_CALC.CNTR_CYC_NO
				      AND DMT_CNTR.BKG_NO  = SO.BKG_NO
				      AND DMT_CNTR.CNTR_NO = SO.EQ_NO
				      AND DMT_CALC.DMDT_TRF_CD = 'DTIC'
				      AND DMT_CALC.CHG_SEQ     = 1
				      AND 'I' = SO.TRSP_BND_CD
				      AND ROWNUM = 1
			     ) DMDT_INFO
                 ,SO.CNTR_SLT_NO
            FROM TRS_TRSP_SVC_ORD SO
                ,TRS_TRSP_WRK_ORD WO
                ,TRS_TRSP_INV_WRK WRK
				,MDM_ZONE Z
           WHERE SO.TRSP_WO_OFC_CTY_CD = WO.TRSP_WO_OFC_CTY_CD(+)
             AND SO.TRSP_WO_SEQ = WO.TRSP_WO_SEQ(+)
             AND SO.INV_NO = WRK.INV_NO(+) 
             AND SO.INV_VNDR_SEQ = WRK.INV_VNDR_SEQ(+)

    #if($r_trunk_vvd.size() > 0) 
		     AND ((SO.VSL_CD, SO.SKD_VOY_NO, SO.SKD_DIR_CD) IN (
       #foreach( ${key} in ${r_trunk_vvd}) 
         #if($velocityCount == 1) 
		            ( SUBSTR('$key', 1, 4), SUBSTR('$key', 5, 4), SUBSTR('$key', 9))
         #else 
		          , ( SUBSTR('$key', 1, 4), SUBSTR('$key', 5, 4), SUBSTR('$key', 9))
         #end 
       #end
         )
       )
    #end

    #if($r_bkgnumber.size() > 0) 
		     AND SO.BKG_NO IN (
       #foreach( ${key} in ${r_bkgnumber}) 
         #if($velocityCount < $r_bkgnumber.size()) 
		            UPPER('${key}'), 
         #else 
		            UPPER('${key}')
         #end 
       #end
       )
    #end

    #if($r_blnumber.size() > 0) 
		     AND SO.BL_NO IN (
       #foreach( ${key} in ${r_blnumber}) 
         #if($velocityCount < $r_blnumber.size()) 
		            UPPER('${key}'), 
         #else 
		            UPPER('${key}')
         #end 
       #end
       )
    #end

    #if($r_copnumber.size() > 0) 
		     AND SO.COP_NO IN (
       #foreach( ${key} in ${r_copnumber}) 
         #if($velocityCount < $r_copnumber.size()) 
		           UPPER('${key}'), 
         #else 
		           UPPER('${key}')
         #end 
       #end
       )
    #end 

    #if($r_eqnumber.size() > 0) 
		     AND SO.EQ_NO IN (
       #foreach( ${key} in ${r_eqnumber}) 
         #if($velocityCount < $r_eqnumber.size()) 
		           UPPER('${key}'), 
         #else 
		           UPPER('${key}')
         #end 
      #end
      )

      #if (${r_radio_eq} == 'CNTR') 
		      AND SO.EQ_KND_CD = 'U'
      #elseif (${r_radio_eq} == 'CHS') 
		      AND SO.EQ_KND_CD = 'Z'
      #elseif (${r_radio_eq} == 'GEN') 
		      AND SO.EQ_KND_CD = 'G'
      #end
    #end

    #if($r_mtyrefnumber.size() > 0) 
			  AND SO.REF_ID IN (
       #foreach( ${key} in ${r_mtyrefnumber}) 
         #if($velocityCount < $r_mtyrefnumber.size()) 
		           UPPER('${key}'), 
         #else 
		           UPPER('${key}')
         #end 
      #end
      )
    #end

    #if (${r_period} == 'S') 
      #if (${r_from_date} != ''|| ${r_to_date} != '') 
		      AND SO.LOCL_CRE_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmdd') AND TO_DATE (@[r_to_date], 'rrrrmmdd') + 0.999999
      #end
    #elseif (${r_period} == 'W')
      #if (${r_from_date} != ''|| ${r_to_date} != '') 
        #if (${month_flg}) 
		      AND WO.LOCL_CRE_DT BETWEEN TO_DATE ( @[r_from_date] ,'RRRRMM') AND LAST_DAY( TO_DATE( @[r_to_date] , 'RRRRMM'))+1
        #else 
	          AND WO.LOCL_CRE_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmddhh24') AND TO_DATE (@[r_to_date], 'rrrrmmddhh24') + 0.999999
        #end
     #end
    #elseif (${r_period} == 'I')
      #if (${r_from_date} != '' && ${r_to_date} != '') 
		      AND WRK.INV_CFM_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmddhh24') AND TO_DATE (@[r_to_date], 'rrrrmmddhh24') + 0.999999
      #end
    #elseif (${r_period} == 'O')
      #if (${r_from_date} != '' && ${r_to_date} != '') 
		      AND SO.N1ST_NOD_PLN_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmddhh24') AND TO_DATE (@[r_to_date], 'rrrrmmddhh24') + 0.999999
      #end 
    #elseif (${r_period} == 'L')
      #if (${r_from_date} != '' && ${r_to_date} != '') 
		      AND SO.LST_NOD_PLN_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmddhh24') AND TO_DATE (@[r_to_date], 'rrrrmmddhh24') + 0.999999
      #end 
    #elseif (${r_period} == 'D')
      #if (${r_from_date} != '' && ${r_to_date} != '') 
		      AND SO.DOR_NOD_PLN_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmddhh24') AND TO_DATE (@[r_to_date], 'rrrrmmddhh24') + 0.999999
      #end 
    #end

    #if($r_input_office.size() > 0) 
      #if (${r_radio_office} == 'S')
		      AND SO.CRE_OFC_CD IN (
        #foreach( ${key} IN ${r_input_office}) 
          #if($velocityCount < $r_input_office.size()) 
		            UPPER('${key}'),
          #else 
		            UPPER('${key}')
          #end 
        #end
        )
      #elseif (${r_radio_office} == 'V')
		      AND WRK.CRE_OFC_CD IN (
        #foreach( ${key} IN ${r_input_office}) 
          #if($velocityCount < $r_input_office.size()) 
		            UPPER('${key}'),
          #else 
		            UPPER('${key}')
          #end 
        #end
        )
      #elseif (${r_radio_office} == 'W')
		      AND WO.CRE_OFC_CD IN (
        #foreach( ${key} in ${r_input_office}) 
          #if($velocityCount < $r_input_office.size()) 
		            UPPER('${key}'),
          #else 
		            UPPER('${key}')
          #end 
        #end
        )
      #end
    #end

    #if (${r_somode} == 'LV') 
		      AND SO.DELT_FLG = 'N'
    #elseif (${r_somode}=='DL')
		      AND SO.DELT_FLG = 'Y'
    #end

    #if (${r_womode} != '' && ${r_womode} != 'ALL')
      #if (${r_womode} == 'IS')
		      AND WO.WO_ISS_STS_CD IN ( 'I' , 'R' , 'C')
      #else 
		      AND (WO.WO_ISS_STS_CD = 'X' OR (SO.TRSP_SO_STS_CD IN ('R', 'C') AND SO.TRSP_WO_OFC_CTY_CD IS NULL))
      #end
    #end

    #if (${r_invoicemode} != '' && ${r_invoicemode} != 'ALL')
      #if (${r_invoicemode} == 'NL') 
		      AND WRK.TRSP_INV_AUD_STS_CD(+) IS NULL
      #else
		      AND WRK.TRSP_INV_AUD_STS_CD = @[r_invoicemode]
      #end
    #end

    #if (${r_boundmode} != '' && ${r_boundmode} != 'ALL')
		      AND SO.TRSP_BND_CD = @[r_boundmode]
    #end

    #if (${r_radio_user} == 'S') 
      #if (${r_user_id} != '') 
		      AND SO.CRE_USR_ID = @[r_user_id]
      #end
    #elseif (${r_radio_user} == 'V') 
      #if (${r_user_id} != '') 
		      AND WRK.CRE_USR_ID = @[r_user_id]
      #end
    #end

    #if (${r_costmode} != '' && ${r_costmode} != 'ALL')
		      AND SO.TRSP_COST_DTL_MOD_CD = @[r_costmode]
    #end
    #if (${r_transmode} != '' && ${r_transmode} != 'ALL')
		      AND SO.TRSP_CRR_MOD_CD = @[r_transmode]
    #end
    #if (${r_sotype} != '' && ${r_sotype} != 'ALL')
		      AND SO.TRSP_SO_TP_CD = @[r_sotype]
    #end

    #if (${r_provider} != '' && ${r_provider} != 'ALL') 
      #if (${r_provider_type} == 'WO') 
		      AND SO.VNDR_SEQ = @[r_provider]
      #elseif (${r_provider_type} == 'IV') 
		      AND SO.INV_VNDR_SEQ = @[r_provider]
      #end
    #end

    #if (${r_from_node} != '') 
		      AND SO.FM_NOD_CD LIKE @[r_from_node]||'%'
    #end
	-- Multi From Node로 조회
	#if ($arr_fmnode.size() > 0) 
			  AND SO.FM_NOD_CD in (
	    #foreach( ${key} in ${arr_fmnode}) 
		    #if($velocityCount < $arr_fmnode.size()) 
		        '$key', 
		    #else 
	            '$key' 
		    #end 
	    #end
	    )
	#end
    #if (${r_via_node} != '') 
		      AND SO.VIA_NOD_CD LIKE @[r_via_node]||'%'
    #end
    #if (${r_to_node} != '') 
		      AND SO.TO_NOD_CD LIKE @[r_to_node]||'%'
    #end
	-- Multi To Node로 조회
	#if ($arr_tonode.size() > 0) 
			  AND SO.TO_NOD_CD in (
	    #foreach( ${key} in ${arr_tonode}) 
		    #if($velocityCount < $arr_tonode.size()) 
		        '$key', 
		    #else 
	            '$key' 
		    #end 
	    #end
	    )
	#end
	-- Port로 조회 
	#if (${portio} == 'I')
  		AND SO.POD_CD = @[portcd]
	#elseif (${portio} == 'O')
		AND SO.POL_CD = @[portcd]
	#end
    #if (${r_door_node} != '') 
		      AND SO.DOR_NOD_CD LIKE @[r_door_node]||'%'
    #end

    #if($r_sonumber.size() > 0) 
		      AND ((SO.TRSP_SO_OFC_CTY_CD, SO.TRSP_SO_SEQ) IN (
        #foreach( ${key} IN ${r_sonumber}) 
          #if($velocityCount == 1) 
        		     ( SUBSTR('${key}',1,3),SUBSTR('${key}',4) )
          #else
		            ,( SUBSTR('${key}',1,3),SUBSTR('${key}',4) )
          #end
        #end
        ) 
      )
    #end

    #if($r_wonumber.size() > 0) 
		      AND ((SO.TRSP_WO_OFC_CTY_CD, SO.TRSP_WO_SEQ) IN (
        #foreach( ${key} IN ${r_wonumber}) 
          #if($velocityCount == 1) 
		             ( SUBSTR('${key}',1,3),SUBSTR('${key}',4) )
          #else
		            ,( SUBSTR('${key}',1,3),SUBSTR('${key}',4) )
          #end
        #end
        ) 
      )
    #end

    #if($r_invoicenumber.size() > 0) 
		      AND SO.INV_NO IN (
       #foreach( ${key} IN ${r_invoicenumber}) 
         #if($velocityCount < $r_invoicenumber.size()) 
		            UPPER('${key}'),
         #else 
		            UPPER('${key}')
         #end 
       #end
       )
    #end

	 AND DECODE(NVL(@[r_unplanned], 'ALL'), 'ALL', 'X', NVL(SO.UPLN_SO_FLG, 'N')) = DECODE(NVL(@[r_unplanned], 'ALL'), 'ALL', 'X', @[r_unplanned])

    #if($r_zip_code.size() > 0) 
		      AND SO.DOR_PST_CD IN (
       #foreach( ${key} IN ${r_zip_code}) 
         #if($velocityCount < $r_zip_code.size()) 
		           UPPER('${key}'),
         #else 
		           UPPER('${key}')
         #end 
       #end
       )
    #end

    #if (${r_amount} == 'T')
		      AND SO.INV_NO IS NOT NULL
		      AND NVL(SO.INV_ETC_ADD_AMT,0) = 0
    #elseif (${r_amount} == 'F')
		      AND SO.INV_NO IS NOT NULL
		      AND NVL(SO.INV_ETC_ADD_AMT,0) <> 0
    #end

    #if (${grid_flg} == 'Y' && $r_sc_rfa_cd.size() == 0)
--		      AND ROWNUM < 2001
    #end

	#if($cntr_slt_no.size() > 0)
	-- 2016.02.02 CHAN WOO PARK
    -- Slot Reference No 검색조건 추가
	AND SO.CNTR_SLT_NO IN (
		#foreach($code IN ${cntr_slt_no})
			#if($velocityCount == 1)
				 '$code'
			#else
				,'$code'
			#end
		#end
	)
	#end
		AND SO.DOR_NOD_CD  = Z.ZN_CD(+)
	 ) X
	  WHERE 1=1
    #if (${r_provider} != '' && ${r_provider} != 'ALL') 
      #if (${r_provider_type} == 'PA')
        AND SUBSTR(X.INV_VNDR_INFO, INSTR(X.INV_VNDR_INFO, '$', 1, 2) + 1, INSTR(X.INV_VNDR_INFO, '$', 1, 3) - INSTR(X.INV_VNDR_INFO, '$', 1, 2) - 1) = @[r_provider]
      #end
    #end
    #if($r_sc_rfa_cd.size() > 0) 
       #if (${r_radio_number} == 'S' )
        AND SUBSTR(X.BKG_SC_NO_INFO, 1, INSTR(X.BKG_SC_NO_INFO, '$', 1, 1) -1) IN (
         #foreach( ${key} in ${r_sc_rfa_cd}) 
           #if($velocityCount < $r_sc_rfa_cd.size()) 
        	      UPPER('${key}'), 
           #else 
	              UPPER('${key}')
           #end 
         #end
       )
       #else
        AND SUBSTR(X.BKG_SC_NO_INFO, INSTR(X.BKG_SC_NO_INFO, '$', 1, 1) + 1) IN (
         #foreach( ${key} in ${r_sc_rfa_cd}) 
           #if($velocityCount < $r_sc_rfa_cd.size()) 
	              UPPER('${key}'), 
           #else 
	              UPPER('${key}')
           #end 
         #end
         )
       #end
    #end

#elseif (${invar_usrail} == 'Y') 
/* US RAIL Only inquiry  */
SELECT   X.EQ_NO
        ,X.EQ_TPSZ
        ,NULL ORG_EQ_TPSZ
        ,X.TRSP_COST_DTL_MOD_CD
        ,'RD' TRSP_CRR_MOD_CD
        ,'RAIL BILLING' AS TRSP_SO_TP_CD
        ,X.UPLN_SO_FLG
        ,NULL AS BKG_CNTR_CMB_SEQ
        ,X.TRSP_FRST_FLG
        ,X.SO_NO
        ,X.SO_CRE_DT1
        ,X.SO_DEL_FLG
        ,DECODE (X.SO_DEL_FLG,'Y', SO_UPD_DT) SO_DEL_DT
        ,X.SO_UPD_DT
        ,NULL WO_NO
        ,(SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL CD WHERE CD.INTG_CD_ID = 'CD00804' AND CD.INTG_CD_VAL_CTNT = X.WO_ISS_STS_CD) AS WO_ISS_STS_CD
        ,X.WO_ISS_DT
        ,X.WO_ISS_TP
        ,X.WO_ISS_OFC_CD
        ,X.WO_ISS_ID
        ,X.FM_NOD_CD
		,DECODE(LENGTH(X.FM_NOD_CD), 7, TRS_COMMON_PKG.GET_YD_CD_NM_FNC(X.FM_NOD_CD), 5, (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.FM_NOD_CD)) FM_NOD_CD_NM
        ,NULL VIA_NOD_CD
		,NULL VIA_NOD_CD_NM
        ,X.TO_NOD_CD
		,DECODE(LENGTH(X.TO_NOD_CD), 7, TRS_COMMON_PKG.GET_YD_CD_NM_FNC(X.TO_NOD_CD), 5, (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.TO_NOD_CD)) TO_NOD_CD_NM
        ,NULL DOOR
		,NULL DOOR_NM
        ,NULL DOOR_ACT_CUST
        ,NULL DOOR_FCTRY_NM        
        ,NULL DOOR_ZIP
        ,NULL DOR_DE_ADDR
        ,NULL DOOR_TEL
        ,NULL DOOR_FAX
        ,NULL DOOR_PIC
        ,NULL USA_DO_USR_INFO
        ,NULL DO_CRE_DATE
        ,NULL DO_CRE_TIME
        ,NULL VNDR_TP_CD
        ,SUBSTR(X.INV_VNDR_INFO, 1, INSTR(X.INV_VNDR_INFO, '$', 1, 1) - 1) AS VNDR_CD
        ,SUBSTR(X.INV_VNDR_INFO, INSTR(X.INV_VNDR_INFO, '$', 1, 1) + 1, INSTR(X.INV_VNDR_INFO, '$', 1, 2) - INSTR(X.INV_VNDR_INFO, '$', 1, 1) - 1) AS VNDR_ABBR_NM
        ,SUBSTR(X.INV_VNDR_INFO, INSTR(X.INV_VNDR_INFO, '$', 1, 2) + 1, INSTR(X.INV_VNDR_INFO, '$', 1, 3) - INSTR(X.INV_VNDR_INFO, '$', 1, 2) - 1) AS PVNDR_CD
        ,SUBSTR(X.INV_VNDR_INFO, INSTR(X.INV_VNDR_INFO, '$', 1, 3) + 1) AS PVNDR_NM
        ,NULL WO_RCV_DT
        ,NULL APPT_TIME
        ,NULL DELIV_TIME
        ,X.N3PTY_BIL_FLG
        ,X.COST_OFC_CD
        ,X.WO_CURR_CD
        ,TO_CHAR(X.WO_BZC_AMT) WO_BZC_AMT
        ,TO_CHAR(X.WO_NEGO_AMT) WO_NEGO_AMT
        ,TO_CHAR(X.WO_FUEL_SCG_AMT) WO_FUEL_SCG_AMT
        ,CASE WHEN X.WO_CURR_CD = 'JPY' OR X.WO_CURR_CD = 'KRW' OR X.WO_CURR_CD = 'TWD'
              THEN '0'
              ELSE '0.00'
         END AS WO_ETC_ADD_AMT
		,TO_CHAR(X.WO_HZD_MTRL_SCG_AMT) WO_HZD_MTRL_SCG_AMT
		,TO_CHAR(X.WO_OVR_WGT_SCG_AMT) WO_OVR_WGT_SCG_AMT
		,TO_CHAR(X.WO_ETC_ADD_AMT) WO_USA_TTL_AMT
        ,TO_CHAR(X.WO_TOT_AMT) WO_TOT_AMT
        ,TO_CHAR(X.WO_TOT_AMT_USD) WO_TOT_AMT_USD
        ,NULL INV_XCH_RT
        ,NULL INV_CALC_LGC_TP_CD
        ,X.INV_CURR_CD
        ,TO_CHAR(X.INV_BZC_AMT) INV_BZC_AMT
        ,TO_CHAR(X.INV_ETC_ADD_AMT) INV_ETC_ADD_AMT
        ,TO_CHAR(X.INV_TOT_AMT) INV_TOT_AMT
        ,TO_CHAR(X.INV_TOT_AMT_USD) INV_TOT_AMT_USD
        ,TO_CHAR(X.INV_VNDR_SEQ) INV_VNDR_CD
        ,X.INV_VNDR_NM
        ,X.INV_NO
        ,(SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL CD WHERE CD.INTG_CD_ID = 'CD00824' AND CD.INTG_CD_VAL_CTNT = X.INV_STS_CD) AS INV_STS_CD
        ,X.INV_CFM_DT
        ,X.CSR_NO CAR_NO
        ,TO_CHAR (X.IF_DT, 'YYYY-MM-DD HH24:MI:SS') INV_IF_DT
        ,X.INV_CFM_OFC_CD
        ,X.INV_CRE_USR_ID
        ,X.N1ST_NOD_PLN_DT
        ,X.LST_NOD_PLN_DT
        ,NULL DOR_NOD_PLN_DT
        ,NULL DOR_ARR_DT
        ,X.COP_NO
        ,TO_CHAR(X.AG_SEQ) COST_ACT_GRP_SEQ
        ,X.AG_CODE AS COST_ACT_GRP_CD
        ,X.BKG_NO 
        ,X.BL_NO
        ,X.TRSP_BND_CD
        ,X.TERM
        ,NULL TRO_SEQ
        ,'' TRO_CNFM
        ,NULL TRO_CFM_OFC
        ,NULL TRO_CFM_USR
        ,NULL TRO_CFM_UPD
        ,NULL TRO_REV_CUR
        ,NULL EUR_TRO_REV
        ,NULL MANIFESTED
        ,NULL TRO_LOD_REF
        ,NULL BKG_QTY
        ,X.POR_CD
		,(SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.POR_CD ) POR_CD_NM
        ,X.POL_CD
		,(SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.POL_CD ) POL_CD_NM
        ,X.POD_CD
		,(SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.POD_CD ) POD_CD_NM
        ,X.DEL_CD
		,(SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = X.DEL_CD ) DEL_CD_NM
        ,X.T_VVD
        ,X.SLAN_CD
        ,NULL IB_VVD_CD
        ,NULL OB_VVD_CD
        ,X.CGO_TP_CD
        ,X.SPCL_CGO_CNTR_TP_CD AS BKG_SPE
        ,SUBSTR(X.MST_CNTR_INFO, 1, INSTR(X.MST_CNTR_INFO, '$', 1, 1) -1) AS USED
        ,SUBSTR(X.MST_CNTR_INFO, INSTR(X.MST_CNTR_INFO, '$', 1, 1) + 1, INSTR(X.MST_CNTR_INFO, '$', 1, 2) - INSTR(X.MST_CNTR_INFO, '$', 1, 1) - 1) AS LT
        ,SUBSTR(X.MST_CNTR_INFO, INSTR(X.MST_CNTR_INFO, '$', 1, 2) + 1) AS I_EXIT
        ,NULL LT_EXP
        ,(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO  = X.BKG_NO AND CNTR_NO = X.EQ_NO AND CNTR_SEAL_SEQ = 1) AS SEAL_NO
        ,(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO  = X.BKG_NO AND CNTR_NO = X.EQ_NO AND CNTR_SEAL_SEQ = 2) AS SEAL_NO2
        ,TO_CHAR(X.WEIGHT_KGS) WEIGHT_KGS
        ,TO_CHAR(X.WEIGHT_LBS) WEIGHT_LBS

        ,TRS_COMMON_PKG.GET_CONV_WGT_TO_KGS_FNC(TRIM(REGEXP_SUBSTR(X.BKG_CNTR_INFO, '[^$]+',1, 3)), TRIM(REGEXP_SUBSTR(X.BKG_CNTR_INFO, '[^$]+',1, 4))) AS VGM_KGS_WGT
        ,TRS_COMMON_PKG.GET_CONV_WGT_TO_LBS_FNC(TRIM(REGEXP_SUBSTR(X.BKG_CNTR_INFO, '[^$]+',1, 3)), TRIM(REGEXP_SUBSTR(X.BKG_CNTR_INFO, '[^$]+',1, 4))) AS VGM_LBS_WGT

        ,SUBSTR(X.BKG_CNTR_INFO, 1, INSTR(X.BKG_CNTR_INFO, '$', 1, 1) -1) AS NO_PKG
        ,SUBSTR(X.BKG_CNTR_INFO, INSTR(X.BKG_CNTR_INFO, '$', 1, 1) + 1, INSTR(X.BKG_CNTR_INFO, '$', 1, 2) - INSTR(X.BKG_CNTR_INFO, '$', 1, 1) - 1) PKG_CD
        ,X.CMDT_NM
        ,X.C_LOC
        ,NULL USA_LAST_CITY
        ,NVL(REGEXP_SUBSTR(X.EDI_FOC_INFO, '[^$]+', 1, 1), 'N') AS F
        ,NVL(REGEXP_SUBSTR(X.EDI_FOC_INFO, '[^$]+', 1, 2), 'N') AS O
        ,NVL(REGEXP_SUBSTR(X.EDI_FOC_INFO, '[^$]+', 1, 3), 'N') AS C
        ,IT_NO
        ,'' AS PICKUP_NO
        ,'' AS PU_YARD_CD
        ,'' AS AVAILABLE_DT
        ,'' AS LAST_FREE_DT
        ,SUBSTR(X.BKG_SC_NO_INFO, 1, INSTR(X.BKG_SC_NO_INFO, '$', 1, 1) -1) AS SC_NO
        ,SUBSTR(X.BKG_SC_NO_INFO, INSTR(X.BKG_SC_NO_INFO, '$', 1, 1) + 1) AS RFA_NO
        ,NULL DOOR_SVC_TP
        ,NULL PKUP_CNTR
	    ,(SELECT REPLACE(REPLACE (CUST_NM, CHR (13),' '), CHR (10), '') FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = X.BKG_NO AND CUST.BKG_CUST_TP_CD = 'S' ) AS SHIPPER
	    ,(SELECT REPLACE(REPLACE (CUST_NM, CHR (13),' '), CHR (10), '') FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = X.BKG_NO AND CUST.BKG_CUST_TP_CD = 'C' ) AS CONSIGNEE
	    ,(SELECT REPLACE(REPLACE (CUST_NM, CHR (13),' '), CHR (10), '') FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = X.BKG_NO AND CUST.BKG_CUST_TP_CD = 'N' ) AS NOTIFY
        ,(SELECT LISTAGG(DECODE(NVL(U.EQ_SUBST_CGO_QTY, 0), 0, U.CNTR_TPSZ_CD ||' '||U.OP_CNTR_QTY, U.CNTR_TPSZ_CD||' '||U.OP_CNTR_QTY ||'-SUB '||U.EQ_SUBST_CNTR_TPSZ_CD||' '||U.EQ_SUBST_CGO_QTY ), ', ') WITHIN GROUP (ORDER BY U.BKG_NO)
        FROM BKG_QUANTITY U
       WHERE U.BKG_NO       = X.BKG_NO ) AS BKG_QTY
        ,NULL REF_BKG_NO
        ,NULL REF_BL_NO
        ,X.ORG_GATE_OUT_DT
        ,X.DEST_GATE_IN_DT
        ,X.MTY_REF_ID
        ,NULL TRSP_PURP_RSN
        ,REPLACE(REPLACE(X.INTER_RMK, CHR(13)||CHR(10), ' '), chr(34), '') AS INTER_RMK
        ,NULL SPCL_INSTR_RMK
        ,REPLACE(REPLACE(X.WO_INSTR_RMK, CHR(13)||CHR(10), ' '), chr(34), '') AS WO_INSTR_RMK
        ,NULL CHZ_BUNDLE_SEQ
        ,NULL TRSP_SPL_SO_TP_CD
		,NULL REF_INV_NO

#if (${invar_usdropnpull} == 'Y') 
		,''FM_DT
		,''FM_YD
		,''FM_STS
		,''TO_DT
		,''TO_YD
		,''TO_STS
		,''MT_DT
		,''MT_YD
		,''WEB_MT_DT
		,''GRACE_END
#end
        
#if (${grid_flg} == 'Y')
        ,'M' CONTI_CD
        ,X.TRSP_SO_OFC_CTY_CD
        ,TO_CHAR(X.TRSP_SO_SEQ) TRSP_SO_SEQ
        ,TO_CHAR(X.VNDR_SEQ) VNDR_SEQ
        ,NULL TRSP_WO_OFC_CTY_CD
        ,NULL TRSP_WO_SEQ
        ,X.WGT_MEAS_UT_CD UOM
        ,X.REGISTRATION_NO
        ,X.UPD_USR_ID
        ,NULL IF_SYS_KND_CD
#end
  FROM (
          SELECT SO.CMDT_CD
                ,VNDR.VNDR_SEQ
                ,SO.CUST_SEQ
                ,SO.CUST_CNT_CD
                ,WRK.CSR_NO
                ,SO.LOCL_CRE_DT SO_CRE_DT
                ,VNDR.LOCL_CRE_DT WO_CRE_DT
                ,WRK.CRE_OFC_CD INV_CRE_OFC_CD
                ,SO.VSL_CD
                ,SO.SKD_VOY_NO
                ,SO.SKD_DIR_CD
                ,SO.TRSP_SO_STS_CD
                ,SO.CGO_TP_CD
                ,TRS_COMMON_PKG.GET_CONV_WGT_TO_KGS_FNC('LBS', SO.CNTR_WGT) AS WEIGHT_KGS
                ,SO.CNTR_WGT WEIGHT_LBS
                ,SO.WGT_MEAS_UT_CD
                ,SO.EQ_NO EQ_NO
                ,SO.EQ_KND_CD
                ,SO.EQ_TPSZ_CD EQ_TPSZ
                ,SO.TRSP_SO_OFC_CTY_CD
                ,SO.TRSP_SO_SEQ
                ,SO.TRSP_COST_DTL_MOD_CD TRSP_COST_DTL_MOD_CD
                ,SO.TRSP_SO_OFC_CTY_CD || SO.TRSP_SO_SEQ SO_NO
                ,TO_CHAR (SO.LOCL_CRE_DT, 'YYYY-MM-DD HH24:MI:SS') SO_CRE_DT1
                ,SO.DELT_FLG SO_DEL_FLG
                ,TO_CHAR (SO.LOCL_UPD_DT, 'YYYY-MM-DD HH24:MI:SS') SO_UPD_DT
                ,DECODE (WO.BIL_ISS_STS_CD,'X', 'N',WO.BIL_ISS_STS_CD) WO_ISS_STS_CD
                ,TO_CHAR (WO.BIL_EDI_SNT_DT, 'YYYY-MM-DD HH24:MI:SS') WO_ISS_DT
                ,DECODE (WO.BIL_ISS_STS_CD,'I', 'EDI','') WO_ISS_TP
                ,WO.CRE_OFC_CD WO_ISS_OFC_CD
                ,WO.CRE_USR_ID WO_ISS_ID
                ,VNDR.FM_NOD_CD FM_NOD_CD
                ,VNDR.TO_NOD_CD TO_NOD_CD
                ,SO.N3PTY_BIL_FLG N3PTY_BIL_FLG
                ,VNDR.CURR_CD WO_CURR_CD
                ,VNDR.BZC_AMT WO_BZC_AMT 
                ,VNDR.NEGO_AMT WO_NEGO_AMT
                ,VNDR.FUEL_SCG_AMT WO_FUEL_SCG_AMT
                ,NVL(VNDR.ETC_ADD_AMT, 0) WO_ETC_ADD_AMT
                ,NVL(VNDR.HZD_MTRL_SCG_AMT,0) WO_HZD_MTRL_SCG_AMT
                ,NVL(VNDR.OVR_WGT_SCG_AMT,0) WO_OVR_WGT_SCG_AMT
                ,NVL(VNDR.BZC_AMT,0) + NVL(VNDR.FUEL_SCG_AMT,0) + NVL(VNDR.OVR_WGT_SCG_AMT,0) + NVL(VNDR.HZD_MTRL_SCG_AMT,0) + NVL(VNDR.ETC_ADD_AMT,0) WO_TOT_AMT
                ,SO.CRE_OFC_CD COST_OFC_CD
                ,VNDR.INV_CURR_CD INV_CURR_CD
                ,NVL(VNDR.INV_BZC_AMT,0) - NVL(VNDR.INV_ETC_ADD_AMT,0) INV_BZC_AMT
                ,CASE WHEN VNDR.INV_CURR_CD = 'JPY' OR VNDR.INV_CURR_CD = 'KRW' OR VNDR.INV_CURR_CD = 'TWD'
                      THEN TO_CHAR(NVL(VNDR.INV_ETC_ADD_AMT, 0), 'FM999999999990')
                      ELSE TO_CHAR(NVL(VNDR.INV_ETC_ADD_AMT, 0), 'FM999999999990.90')
                 END AS INV_ETC_ADD_AMT
                ,VNDR.INV_BZC_AMT INV_TOT_AMT
                ,VNDR.INV_NO INV_NO
                ,WRK.TRSP_INV_AUD_STS_CD INV_STS_CD
                ,WRK.RGST_NO REGISTRATION_NO
                ,TO_CHAR (WRK.INV_CFM_DT, 'YYYYMMDD') INV_CFM_DT
                ,WRK.CSR_NO CAR_NO
                ,CASE WHEN WRK.TRSP_INV_AUD_STS_CD IN ('CF', 'AR', 'IF', 'PD') THEN WRK.CRE_OFC_CD ELSE '' END INV_CFM_OFC_CD
                ,WRK.CRE_USR_ID INV_CRE_USR_ID
                ,SO.BKG_NO BKG_NO
                ,SO.BL_NO BL_NO
                ,SO.TRSP_BND_CD TRSP_BND_CD
                ,SO.BKG_RCVDE_TERM_CD TERM
                ,SO.POR_CD
                ,SO.POL_CD
                ,SO.POD_CD
                ,SO.DEL_CD
                ,SO.VSL_CD || SO.SKD_VOY_NO || SO.SKD_DIR_CD T_VVD
                ,SO.SLAN_CD SLAN_CD
                ,SO.IBD_CSTMS_CLR_LOC_CD C_LOC
                ,TO_CHAR (SO.AVAL_DT, 'YYYYMMDD') AVAILABLE_DT
                ,TO_CHAR (SO.LST_FREE_DT, 'YYYYMMDD') LAST_FREE_DT
                ,SO.INTER_RMK INTER_RMK
                ,WO.INTER_RMK WO_INSTR_RMK
                ,SO.COP_NO
                ,SO.COST_ACT_GRP_SEQ AG_SEQ
                ,SO.COST_ACT_GRP_CD AG_CODE
                ,NVL(SO.UPD_USR_ID, SO.CRE_USR_ID) UPD_USR_ID
                ,SO.ORG_GATE_OUT_DT
                ,SO.DEST_GATE_IN_DT
                ,SO.REF_ID MTY_REF_ID
                ,ROUND ((NVL(VNDR.BZC_AMT,0) + NVL(VNDR.FUEL_SCG_AMT,0) + NVL(VNDR.OVR_WGT_SCG_AMT,0) + NVL(VNDR.HZD_MTRL_SCG_AMT,0) + NVL(VNDR.ETC_ADD_AMT,0)) / 
                         (SELECT USD_LOCL_XCH_RT
                            FROM GL_MON_XCH_RT XCH
                           WHERE XCH.ACCT_XCH_RT_YRMON = TO_CHAR (VNDR.LOCL_CRE_DT, 'RRRRMM')
                             AND XCH.ACCT_XCH_RT_LVL   = 1
                             AND XCH.CURR_CD(+)        = VNDR.CURR_CD ) , 2) WO_TOT_AMT_USD
                             
                ,ROUND (NVL (VNDR.INV_BZC_AMT, 0)  / 
                        (SELECT USD_LOCL_XCH_RT
                            FROM GL_MON_XCH_RT XCH
                           WHERE XCH.ACCT_XCH_RT_YRMON = TO_CHAR (VNDR.LOCL_CRE_DT, 'RRRRMM')
                             AND XCH.ACCT_XCH_RT_LVL   = 1
                             AND XCH.CURR_CD(+)        = VNDR.INV_CURR_CD ) , 2) INV_TOT_AMT_USD 

                ,NVL (SO.TRSP_FRST_FLG, 'N') TRSP_FRST_FLG
                ,TO_CHAR (SO.N1ST_NOD_PLN_DT, 'YYYY-MM-DD HH24:MI:SS') N1ST_NOD_PLN_DT
                ,TO_CHAR (SO.LST_NOD_PLN_DT, 'YYYY-MM-DD HH24:MI:SS') LST_NOD_PLN_DT
                ,VNDR.INV_VNDR_SEQ
                ,(SELECT VDR.VNDR_LGL_ENG_NM FROM MDM_VENDOR VDR WHERE VDR.VNDR_SEQ = VNDR.INV_VNDR_SEQ ) AS INV_VNDR_NM
                ,(SELECT HDR.IF_DT FROM AP_INV_HDR HDR WHERE HDR.CSR_NO = WRK.CSR_NO) AS IF_DT
                ,(SELECT BKG.SC_NO ||'$'|| BKG.RFA_NO FROM BKG_BOOKING BKG WHERE BKG.BKG_NO = SO.BKG_NO ) BKG_SC_NO_INFO  
                ,(SELECT BKG_CNTR.PCK_QTY ||'$'|| BKG_CNTR.PCK_TP_CD || '$' || NVL(BKG_CNTR.VGM_WGT_UT_CD, 'KGS') || '$' || NVL(BKG_CNTR.VGM_WGT, 0)
                    FROM BKG_CONTAINER BKG_CNTR 
                   WHERE BKG_CNTR.BKG_NO  = SO.BKG_NO
                     AND BKG_CNTR.CNTR_NO = SO.EQ_NO
                 ) BKG_CNTR_INFO
                , SO.SPCL_CGO_CNTR_TP_CD
                ,(SELECT NVL(MST_CNTR.OWNR_CO_CD, ' ') ||'$'|| NVL(MST_CNTR.LSTM_CD, ' ') ||'$'|| NVL(MST_CNTR.IMDT_EXT_FLG, ' ') FROM MST_CONTAINER MST_CNTR WHERE MST_CNTR.CNTR_NO = SO.EQ_NO ) MST_CNTR_INFO
                ,(SELECT CMDT_NM FROM MDM_COMMODITY CMT WHERE CMT.CMDT_CD = SO.CMDT_CD ) AS CMDT_NM
                ,TRS_GET_FOC_INFO_FNC(SO.BL_NO, SO.TRSP_SO_OFC_CTY_CD, SO.TRSP_SO_SEQ, '$') EDI_FOC_INFO
                ,(SELECT IVDR.VNDR_SEQ ||'$'|| NVL(IVDR.VNDR_LGL_ENG_NM, ' ') ||'$'|| NVL((SELECT PVNDR.VNDR_SEQ ||'$'|| NVL(PVNDR.VNDR_LGL_ENG_NM, ' ') FROM MDM_VENDOR PVNDR WHERE PVNDR.VNDR_SEQ = IVDR.PRNT_VNDR_SEQ ), '$')
                   FROM MDM_VENDOR IVDR
                   WHERE IVDR.VNDR_SEQ = VNDR.VNDR_SEQ ) AS INV_VNDR_INFO
                ,(SELECT CST.IBD_TRSP_NO FROM BKG_CSTMS_ADV_IBD CST WHERE CST.CNT_CD = 'US' AND CST.BL_NO = SO.BKG_NO) AS IT_NO
				, SO.UPLN_SO_FLG
            FROM TRS_TRSP_RAIL_BIL_ORD SO
                ,TRS_TRSP_RAIL_BIL_VNDR_SET VNDR
                ,TRS_TRSP_EDI_RAIL_ORD WO
                ,TRS_TRSP_RAIL_INV_WRK WRK
           WHERE SO.TRSP_SO_OFC_CTY_CD  = VNDR.TRSP_SO_OFC_CTY_CD
             AND SO.TRSP_SO_SEQ         = VNDR.TRSP_SO_SEQ  
             AND SO.TRSP_SO_OFC_CTY_CD  = WO.TRSP_SO_OFC_CTY_CD(+)
             AND SO.TRSP_SO_SEQ = WO.TRSP_SO_SEQ(+)
             AND SO.BIL_ISS_KNT = WO.BIL_ISS_KNT(+)
             AND VNDR.INV_NO    = WRK.INV_NO(+)
             AND VNDR.INV_VNDR_SEQ = WRK.INV_VNDR_SEQ(+)

    #if($r_trunk_vvd.size() > 0) 
       AND ((SO.VSL_CD, SO.SKD_VOY_NO, SO.SKD_DIR_CD) IN (
       #foreach( ${key} in ${r_trunk_vvd}) 
         #if($velocityCount == 1) 
            ( SUBSTR('$key', 1, 4), SUBSTR('$key', 5, 4), SUBSTR('$key', 9))
         #else 
          , ( SUBSTR('$key', 1, 4), SUBSTR('$key', 5, 4), SUBSTR('$key', 9))
         #end 
       #end
         )
       )
    #end

    #if($r_bkgnumber.size() > 0) 
       AND SO.BKG_NO IN (
       #foreach( ${key} in ${r_bkgnumber}) 
         #if($velocityCount < $r_bkgnumber.size()) 
            UPPER('${key}'), 
         #else 
            UPPER('${key}')
         #end 
       #end
       )
    #end

    #if($r_blnumber.size() > 0) 
       AND SO.BL_NO IN (
       #foreach( ${key} in ${r_blnumber}) 
         #if($velocityCount < $r_blnumber.size()) 
            UPPER('${key}'), 
         #else 
            UPPER('${key}')
         #end 
       #end
       )
    #end

    #if($r_copnumber.size() > 0) 
       AND SO.COP_NO IN (
       #foreach( ${key} in ${r_copnumber}) 
         #if($velocityCount < $r_copnumber.size()) 
           UPPER('${key}'), 
         #else 
           UPPER('${key}')
         #end 
       #end
       )
    #end 

    #if($r_eqnumber.size() > 0) 
       AND SO.EQ_NO IN (
       #foreach( ${key} in ${r_eqnumber}) 
         #if($velocityCount < $r_eqnumber.size()) 
           UPPER('${key}'), 
         #else 
           UPPER('${key}')
         #end 
      #end
      )

      #if (${r_radio_eq} == 'CNTR') 
        AND SO.EQ_KND_CD = 'U'
      #elseif (${r_radio_eq} == 'CHS') 
        AND SO.EQ_KND_CD = 'Z'
      #elseif (${r_radio_eq} == 'GEN') 
        AND SO.EQ_KND_CD = 'G'
      #end
    #end

    #if($r_mtyrefnumber.size() > 0) 
       AND SO.REF_ID IN (
       #foreach( ${key} in ${r_mtyrefnumber}) 
         #if($velocityCount < $r_mtyrefnumber.size()) 
           UPPER('${key}'), 
         #else 
           UPPER('${key}')
         #end 
      #end
      )
    #end

    #if (${r_period} == 'S') 
      #if (${r_from_date} != ''|| ${r_to_date} != '') 
        AND SO.LOCL_CRE_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmdd') AND TO_DATE (@[r_to_date], 'rrrrmmdd') + 0.999999
      #end
    #elseif (${r_period} == 'W')
      #if (${r_from_date} != ''|| ${r_to_date} != '') 
        #if (${month_flg}) 
          AND WO.LOCL_CRE_DT BETWEEN TO_DATE ( @[r_from_date] ,'RRRRMM') AND LAST_DAY( TO_DATE( @[r_to_date] , 'RRRRMM'))+1
        #else 
          AND WO.LOCL_CRE_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmddhh24') AND TO_DATE (@[r_to_date], 'rrrrmmddhh24') + 0.999999
        #end
     #end
    #elseif (${r_period} == 'I')
      #if (${r_from_date} != '' && ${r_to_date} != '') 
        AND WRK.INV_CFM_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmddhh24') AND TO_DATE (@[r_to_date], 'rrrrmmddhh24') + 0.999999
      #end
    #elseif (${r_period} == 'O')
      #if (${r_from_date} != '' && ${r_to_date} != '') 
        AND SO.N1ST_NOD_PLN_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmddhh24') AND TO_DATE (@[r_to_date], 'rrrrmmddhh24') + 0.999999
      #end 
    #elseif (${r_period} == 'L')
      #if (${r_from_date} != '' && ${r_to_date} != '') 
        AND SO.LST_NOD_PLN_DT BETWEEN TO_DATE (@[r_from_date], 'rrrrmmddhh24') AND TO_DATE (@[r_to_date], 'rrrrmmddhh24') + 0.999999
      #end 
    #elseif (${r_period} == 'D')
      #if (${r_from_date} != '' && ${r_to_date} != '') 
        AND 1=2
      #end 
    #end

    #if($r_input_office.size() > 0) 
      #if (${r_radio_office} == 'S')
        AND SO.CRE_OFC_CD IN (
        #foreach( ${key} IN ${r_input_office}) 
          #if($velocityCount < $r_input_office.size()) 
            UPPER('${key}'),
          #else 
            UPPER('${key}')
          #end 
        #end
        )
      #elseif (${r_radio_office} == 'V')
        AND WRK.CRE_OFC_CD IN (
        #foreach( ${key} IN ${r_input_office}) 
          #if($velocityCount < $r_input_office.size()) 
            UPPER('${key}'),
          #else 
            UPPER('${key}')
          #end 
        #end
        )
      #elseif (${r_radio_office} == 'W')
        AND WO.CRE_OFC_CD IN (
        #foreach( ${key} in ${r_input_office}) 
          #if($velocityCount < $r_input_office.size()) 
            UPPER('${key}'),
          #else 
            UPPER('${key}')
          #end 
        #end
        )
      #end
    #end

    #if (${r_somode} == 'LV') 
       AND SO.DELT_FLG = 'N'
    #elseif (${r_somode}=='DL')
       AND SO.DELT_FLG = 'Y'
    #end

    #if (${r_womode} != '' && ${r_womode} != 'ALL')
      #if (${r_womode} == 'IS')
        AND WO.BIL_ISS_STS_CD = 'I'
      #else 
        AND NVL(WO.BIL_ISS_STS_CD, 'X') = 'X'
      #end
    #end

    #if (${r_invoicemode} != '' && ${r_invoicemode} != 'ALL')
      #if (${r_invoicemode} == 'NL') 
        AND WRK.TRSP_INV_AUD_STS_CD(+) IS NULL
      #else
        AND WRK.TRSP_INV_AUD_STS_CD = @[r_invoicemode]
      #end
    #end

    #if (${r_boundmode} != '' && ${r_boundmode} != 'ALL')
      AND SO.TRSP_BND_CD = @[r_boundmode]
    #end

    #if (${r_radio_user} == 'S') 
      #if (${r_user_id} != '') 
        AND SO.CRE_USR_ID = @[r_user_id]
      #end
    #elseif (${r_radio_user} == 'V') 
      #if (${r_user_id} != '') 
        AND WRK.CRE_USR_ID = @[r_user_id]
      #end
    #end


    #if (${r_costmode} != '' && ${r_costmode} != 'ALL')
      #if (${r_costmode} == 'CY') 
        AND SO.CGO_TP_CD = 'F'
      #elseif (${r_costmode} == 'ER') 
        AND SO.CGO_TP_CD = 'M'
      #else 
        AND SO.TRSP_SO_SEQ = 0
      #end
    #end
    #if (${r_transmode} != '' && ${r_transmode} != 'ALL')
      AND 'RD' = @[r_transmode]
    #end

    #if (${r_sotype} != '' && ${r_sotype} != 'ALL' && ${r_sotype} != 'R')
      AND SO.TRSP_SO_SEQ = 0
    #end

    #if (${r_provider} != '' && ${r_provider} != 'ALL') 
      #if (${r_provider_type} == 'WO') 
        AND VNDR.VNDR_SEQ = @[r_provider]
      #elseif (${r_provider_type} == 'IV') 
        AND VNDR.INV_VNDR_SEQ = @[r_provider]
      #end
    #end

    #if (${r_from_node} != '') 
      AND VNDR.FM_NOD_CD LIKE @[r_from_node]||'%'
    #end
	-- Multi From Node로 조회
	#if ($arr_fmnode.size() > 0) 
			  AND VNDR.FM_NOD_CD in (
	    #foreach( ${key} in ${arr_fmnode}) 
		    #if($velocityCount < $arr_fmnode.size()) 
		        '$key', 
		    #else 
	            '$key' 
		    #end 
	    #end
	    )
	#end
    #if (${r_via_node} != '') 
      AND 0 = 1
    #end
    #if (${r_to_node} != '') 
      AND VNDR.TO_NOD_CD LIKE @[r_to_node]||'%'
    #end
	-- Multi To Node로 조회
	#if ($arr_tonode.size() > 0) 
			  AND VNDR.TO_NOD_CD in (
	    #foreach( ${key} in ${arr_tonode}) 
		    #if($velocityCount < $arr_tonode.size()) 
		        '$key', 
		    #else 
	            '$key' 
		    #end 
	    #end
	    )
	#end
    #if (${r_door_node} != '') 
      AND 0 = 1
    #end

    #if($r_sonumber.size() > 0) 
      AND ((SO.TRSP_SO_OFC_CTY_CD, SO.TRSP_SO_SEQ) IN (
        #foreach( ${key} IN ${r_sonumber}) 
          #if($velocityCount == 1) 
             ( SUBSTR('${key}',1,3),SUBSTR('${key}',4) )
          #else
            ,( SUBSTR('${key}',1,3),SUBSTR('${key}',4) )
          #end
        #end
        ) 
      )
    #end

    #if($r_wonumber.size() > 0) 
      AND 0 = 1
    #end

    #if($r_invoicenumber.size() > 0) 
       AND VNDR.INV_NO IN (
       #foreach( ${key} IN ${r_invoicenumber}) 
         #if($velocityCount < $r_invoicenumber.size()) 
            UPPER('${key}'),
         #else 
            UPPER('${key}')
         #end 
       #end
       )
    #end

    #if($r_zip_code.size() > 0) 
       AND 0 = 1
    #end

    #if (${r_amount} == 'T')
       AND VNDR.INV_NO IS NOT NULL
       AND NVL(VNDR.INV_ETC_ADD_AMT,0) = 0
    #elseif (${r_amount} == 'F')
       AND VNDR.INV_NO IS NOT NULL
       AND NVL(VNDR.INV_ETC_ADD_AMT,0) <> 0
    #end
	 AND DECODE(NVL(@[r_unplanned], 'ALL'), 'ALL', 'X', NVL(SO.UPLN_SO_FLG, 'N')) = DECODE(NVL(@[r_unplanned], 'ALL'), 'ALL', 'X', @[r_unplanned])
    #if (${grid_flg} == 'Y')
--       AND ROWNUM < 2001
    #end
) X
WHERE 1=1
    #if (${r_provider} != '' && ${r_provider} != 'ALL') 
      #if (${r_provider_type} == 'PA') -- Parent S/P
        AND SUBSTR(X.INV_VNDR_INFO, INSTR(X.INV_VNDR_INFO, '$', 1, 2) + 1, INSTR(X.INV_VNDR_INFO, '$', 1, 3) - INSTR(X.INV_VNDR_INFO, '$', 1, 2) - 1) = @[r_provider]
      #end
    #end

    #if($r_sc_rfa_cd.size() > 0) 
       #if (${r_radio_number} == 'S' )
         AND SUBSTR(X.BKG_SC_NO_INFO, 1, INSTR(X.BKG_SC_NO_INFO, '$', 1, 1) -1) IN (
         #foreach( ${key} in ${r_sc_rfa_cd}) 
           #if($velocityCount < $r_sc_rfa_cd.size()) 
              UPPER('${key}'), 
           #else 
              UPPER('${key}')
           #end 
         #end
       )
       #else
         AND SUBSTR(X.BKG_SC_NO_INFO, INSTR(X.BKG_SC_NO_INFO, '$', 1, 1) + 1) IN (
         #foreach( ${key} in ${r_sc_rfa_cd}) 
           #if($velocityCount < $r_sc_rfa_cd.size()) 
              UPPER('${key}'), 
           #else 
              UPPER('${key}')
           #end 
         #end
         )
       #end
    #end
#end			]]></sql>
			<params>
				<param name="r_from_date" type="12" value="" out="N"/>
				<param name="r_to_date" type="12" value="" out="N"/>
				<param name="r_invoicemode" type="12" value="" out="N"/>
				<param name="r_boundmode" type="12" value="" out="N"/>
				<param name="r_user_id" type="12" value="" out="N"/>
				<param name="r_costmode" type="12" value="" out="N"/>
				<param name="r_transmode" type="12" value="" out="N"/>
				<param name="r_sotype" type="12" value="" out="N"/>
				<param name="r_provider" type="12" value="" out="N"/>
				<param name="r_from_node" type="12" value="" out="N"/>
				<param name="r_via_node" type="12" value="" out="N"/>
				<param name="r_to_node" type="12" value="" out="N"/>
				<param name="portcd" type="12" value="" out="N"/>
				<param name="r_door_node" type="12" value="" out="N"/>
				<param name="r_unplanned" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
