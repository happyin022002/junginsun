/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : USA404EDIStatusInquiryDBDAOSearch03USA404EDIStatusSendRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.11.30
*@LastModifier : 
*@LastVersion : 1.0
* 2016.11.30 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esd.trs.workordermanage.usa404edistatusinquiry.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class USA404EDIStatusInquiryDBDAOSearch03USA404EDIStatusSendRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 404 EDI FF의 내용을 조회 SQL
	  * </pre>
	  */
	public USA404EDIStatusInquiryDBDAOSearch03USA404EDIStatusSendRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("strsp_edi_snd_no",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esd.trs.workordermanage.usa404edistatusinquiry.integration").append("\n"); 
		query.append("FileName : USA404EDIStatusInquiryDBDAOSearch03USA404EDIStatusSendRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT A.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("      ,A.TRSP_SO_SEQ" ).append("\n"); 
		query.append("      ,CASE WHEN   (A.CGO_TP_CD='F' AND A.TRSP_BND_CD='I' AND A.FM_NOD_CD='USEZA61') " ).append("\n"); 
		query.append("				OR (A.CGO_TP_CD='F' AND A.TRSP_BND_CD='O'  AND A.TO_NOD_CD='USEZA61') " ).append("\n"); 
		query.append("				OR (A.CGO_TP_CD='M' AND A.FM_NOD_CD='USEZA61') " ).append("\n"); 
		query.append("				OR (A.CGO_TP_CD='M' AND A.TO_NOD_CD='USEZA61') " ).append("\n"); 
		query.append("			THEN 'MAHER' " ).append("\n"); 
		query.append("	   END APP_MAHER" ).append("\n"); 
		query.append("	  ,A.EQ_NO CNTR_NO_R" ).append("\n"); 
		query.append("      ,A.RAIL_CMB_THRU_TP_CD RAIL_CMB" ).append("\n"); 
		query.append("      ,S.EDI_RCV_VNDR_ABBR_NM APP_MTC1" ).append("\n"); 
		query.append("      ,T.EDI_RCV_VNDR_ABBR_NM APP_MTC2" ).append("\n"); 
		query.append("      ,C.USA_EDI_CD APPRECV_C" ).append("\n"); 
		query.append("	  ,A.CGO_TP_CD" ).append("\n"); 
		query.append("      ,DECODE(A.CGO_TP_CD, 'F', 'B', 'M', 'E', '') SHIPQLF_C" ).append("\n"); 
		query.append("	  ,NVL(A.CND_CSTMS_CLR_FLG, 'N') AS CLEARED_QUAL" ).append("\n"); 
		query.append("	  ,CASE WHEN A.TRSP_BND_CD NOT IN ('I', 'O') THEN NULL ELSE A.TRSP_BND_CD END BOUND_IND" ).append("\n"); 
		query.append("      ,DECODE(A.CGO_TP_CD, 'M', 'EMPTY REPO', O.BKG_NO) BKGNO" ).append("\n"); 
		query.append("      ,(SELECT FM_BKG_NO FROM BKG_BOOKING BBK WHERE BBK.BKG_NO = DECODE(A.CGO_TP_CD, 'M', A.BKG_NO, DECODE(A.TRSP_BND_CD, 'O', O.BKG_NO, A.BKG_NO)) AND BBK.BKG_CRE_TP_CD != 'C') SPLITBL" ).append("\n"); 
		query.append("      ,DECODE(A.TRSP_BND_CD, 'I', A.BL_NO, '') BLNO" ).append("\n"); 
		query.append("      ,DECODE(A.CGO_TP_CD, 'M', A.REF_ID, '') MTREFNO" ).append("\n"); 
		query.append("      ,BK.SC_NO AS BKG_SCNO" ).append("\n"); 
		query.append("      ,A.VSL_CD VSLCODE" ).append("\n"); 
		query.append("      ,A.SKD_VOY_NO || A.SKD_DIR_CD VOYAGE" ).append("\n"); 
		query.append("      ,Q.VSL_ENG_NM VSLNAME" ).append("\n"); 
		query.append("      ,(SELECT TO_CHAR(SYS_SET_DT, 'YYYYMMDDHH24MI') FROM BKG_CLZ_TM WHERE BKG_NO = BK.BKG_NO AND CLZ_TP_CD = 'T' AND CLZ_YD_CD = BK.POL_NOD_CD) AS VSLCUTOFF" ).append("\n"); 
		query.append("      ,Q.LLOYD_NO LLOYD" ).append("\n"); 
		query.append("      ,(SELECT MAX(DECODE(A.TRSP_BND_CD, 'O', VK.OB_CSSM_VOY_NO, A.TRSP_BND_CD, 'I', VK.IB_CSSM_VOY_NO, ''))" ).append("\n"); 
		query.append("          FROM VSK_VSL_PORT_SKD VK" ).append("\n"); 
		query.append("         WHERE VK.VSL_CD = A.VSL_CD" ).append("\n"); 
		query.append("           AND VK.SKD_VOY_NO = A.SKD_VOY_NO" ).append("\n"); 
		query.append("           AND VK.SKD_DIR_CD = A.SKD_DIR_CD" ).append("\n"); 
		query.append("           AND VK.YD_CD = DECODE(A.TRSP_BND_CD, 'O', BK.POL_NOD_CD, BK.POD_NOD_CD)) AS CONSORT_VOY" ).append("\n"); 
		query.append("      ,(SELECT TO_CHAR(SYS_SET_DT, 'YYYYMMDDHH24MI') FROM BKG_CLZ_TM WHERE BKG_NO = BK.BKG_NO AND CLZ_TP_CD = 'R') AS HUBETA" ).append("\n"); 
		query.append("      ,NVL(DECODE(A.TRSP_BND_CD, 'O', A.POL_NOD_CD, ''), '') POL" ).append("\n"); 
		query.append("      ,NVL(DECODE(A.TRSP_BND_CD, 'O', (SELECT J.YD_NM FROM MDM_YARD J WHERE J.YD_CD = A.POL_NOD_CD AND J.DELT_FLG = 'N'), ''), '') POL_NM" ).append("\n"); 
		query.append("      ,NVL(DECODE(A.TRSP_BND_CD, 'O', (SELECT DECODE(INSTR(J.LOC_NM, ','), 0, J.LOC_NM, SUBSTR(J.LOC_NM, 1, INSTR(J.LOC_NM, ',') - 1)) FROM MDM_LOCATION J WHERE J.LOC_CD = SUBSTR(A.POL_NOD_CD, 1, 5)), ''), '') POL_CT" ).append("\n"); 
		query.append("      ,NVL(DECODE(A.TRSP_BND_CD, 'I', A.POD_NOD_CD, ''), '') POD" ).append("\n"); 
		query.append("      ,NVL(DECODE(A.TRSP_BND_CD, 'I', (SELECT J.YD_NM FROM MDM_YARD J WHERE J.YD_CD = A.POD_NOD_CD  AND J.DELT_FLG = 'N'), ''), '') POD_NM" ).append("\n"); 
		query.append("      ,NVL(DECODE(A.TRSP_BND_CD, 'I', (SELECT DECODE(INSTR(J.LOC_NM, ','), 0, J.LOC_NM, SUBSTR(J.LOC_NM, 1, INSTR(J.LOC_NM, ',') - 1)) FROM MDM_LOCATION J WHERE J.LOC_CD = SUBSTR(A.POD_NOD_CD, 1, 5)), ''), '') POD_CT" ).append("\n"); 
		query.append("      ,LPAD(O.BIL_EDI_CTRL_SEQ, 9, '0') CREDIT" ).append("\n"); 
		query.append("      ,'M' || LPAD(O.BIL_EDI_CTRL_SEQ, 8, '0') MTC_CREDIT" ).append("\n"); 
		query.append("      ,DECODE(SUBSTR(BK.DEL_CD, 1, 2), 'CA', CND.IBD_LOC_GDS_DESC, DECODE(AI.IBD_TRSP_TP_CD, '61', AI.IBD_TRSP_NO, '')) IMTRANSNO" ).append("\n"); 
		query.append("      ,DECODE(SUBSTR(BK.DEL_CD, 1, 2), 'CA', '', DECODE(AI.IBD_TRSP_TP_CD, '62', AI.IBD_TRSP_NO)) TRANSEXPNO" ).append("\n"); 
		query.append("      ,'' DOCK" ).append("\n"); 
		query.append("      ,'' FFDESC" ).append("\n"); 
		query.append("      ,A.EQ_TPSZ_CD EQTPSZ" ).append("\n"); 
		query.append("      ,SUBSTR(A.EQ_NO, 1, 4) EQINIT" ).append("\n"); 
		query.append("      ,SUBSTR(A.EQ_NO, 5, 6) EQNO" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      ,ROUND(CASE A.TRSP_BND_CD WHEN 'O' THEN DECODE(A.WGT_MEAS_UT_CD, 'KGS', NVL(A.CNTR_WGT, 0), TRS_COMMON_PKG.GET_CONV_WGT_TO_KGS_FNC('LBS', NVL(A.CNTR_WGT, 0)))" ).append("\n"); 
		query.append("                                WHEN 'I' THEN SP.BL_WGT" ).append("\n"); 
		query.append("       END) + ROUND(NVL(MST_SPEC_FNC('TARE', A.EQ_NO), 0)) AS   WGT" ).append("\n"); 
		query.append("	  ,ROUND(NVL(MST_SPEC_FNC('TARE', A.EQ_NO), 0)) AS TARE_WGT" ).append("\n"); 
		query.append("      ,ROUND(CASE A.TRSP_BND_CD WHEN 'O' THEN DECODE(A.WGT_MEAS_UT_CD, 'KGS', NVL(A.CNTR_WGT, 0), TRS_COMMON_PKG.GET_CONV_WGT_TO_KGS_FNC('LBS', NVL(A.CNTR_WGT, 0)))" ).append("\n"); 
		query.append("                                WHEN 'I' THEN SP.BL_WGT" ).append("\n"); 
		query.append("       END)  NET_WGT " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  ,O.EQDESC_C" ).append("\n"); 
		query.append("      ,DECODE(SUBSTR(A.EQ_TPSZ_CD, 2, 1), '2', '2000', '7', '4500', '4000') EQLTH_C" ).append("\n"); 
		query.append("      ,SUBSTR(A.EQ_NO, 11, 1) EQCHK" ).append("\n"); 
		query.append("      ,SEAL.CNTR_SEAL_NO AS SEALNO" ).append("\n"); 
		query.append("      ,A.STCC_CD  AS STCC" ).append("\n"); 
		query.append("      ,DECODE(A.CGO_TP_CD, 'M', 'XP', DECODE(A.TRSP_BND_CD, 'I', 'IP', 'O', 'XP', '')) SPCHAND_C" ).append("\n"); 
		query.append("      ,'ML' ILTRANS_C" ).append("\n"); 
		query.append("      ,'' CUSTENTTP_C" ).append("\n"); 
		query.append("      ,DECODE(SUBSTR(BK.DEL_CD, 1, 2), 'CA', CV.CVY_REF_NO, AI.IBD_TRSP_NO) CUSTENTNO" ).append("\n"); 
		query.append("      ,DECODE(C.USA_EDI_CD, 'CPRS', '61', '') CUSTTYPE" ).append("\n"); 
		query.append("      ,DECODE(C.USA_EDI_CD, 'CPRS'," ).append("\n"); 
		query.append("              CASE WHEN AI.CSTMS_CLR_TP_CD = 'L' THEN (SELECT F.LOC_AMS_PORT_CD FROM MDM_LOCATION F WHERE F.LOC_CD = CND.CSTMS_POD_CD)" ).append("\n"); 
		query.append("                   ELSE (SELECT F.LOC_AMS_PORT_CD FROM MDM_LOCATION F WHERE F.LOC_CD = CND.HUB_LOC_CD)" ).append("\n"); 
		query.append("              END," ).append("\n"); 
		query.append("              '') CUSTLOC" ).append("\n"); 
		query.append("      ,DECODE(A.TRSP_BND_CD, 'O', 'K', 'I', 'D', '') AS CUSTLOCQUAL" ).append("\n"); 
		query.append("      ,DECODE(C.USA_EDI_CD, 'CPRS', DECODE(A.WGT_MEAS_UT_CD, 'KGS', TRS_COMMON_PKG.GET_CONV_WGT_TO_LBS_FNC('KGS', NVL(A.CNTR_WGT, 0)), A.CNTR_WGT), 0) CARGOWGT" ).append("\n"); 
		query.append("      ,I.YD_NM ORGCTY" ).append("\n"); 
		query.append("      ,I.YD_LOC_STE_CD ORGSTATE" ).append("\n"); 
		query.append("      ,I.YD_CTRL_OFC_CTY_NM || ', ' || I.YD_CTRL_OFC_STE_CD ORGLOC" ).append("\n"); 
		query.append("      ,A.FM_NOD_CD ORGYD" ).append("\n"); 
		query.append("      ,SUBSTR(A.FM_NOD_CD, 1, 2) AS ORGCNT" ).append("\n"); 
		query.append("      ,K.YD_NM DSTCTY" ).append("\n"); 
		query.append("      ,K.YD_LOC_STE_CD DSTSTATE" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_CTY_NM || ', ' || K.YD_CTRL_OFC_STE_CD DSTLOC" ).append("\n"); 
		query.append("      ,A.TO_NOD_CD DSTYD" ).append("\n"); 
		query.append("      ,SUBSTR(A.TO_NOD_CD, 1, 2) AS DSTCNT" ).append("\n"); 
		query.append("      ,DECODE(A.CGO_TP_CD, 'F', DECODE(C.USA_EDI_CD, 'CPRS', 'NYK LINE NORTH AMERICA INC', 'NYK INTERNATIONAL'), 'NYK EMPTY') AS SHPR_N" ).append("\n"); 
		query.append("      ,CASE WHEN   (A.CGO_TP_CD='F' AND A.TRSP_BND_CD='I' AND A.FM_NOD_CD='USEZA61') " ).append("\n"); 
		query.append("				OR (A.CGO_TP_CD='F' AND A.TRSP_BND_CD='O'  AND A.TO_NOD_CD='USEZA61') " ).append("\n"); 
		query.append("				OR (A.CGO_TP_CD='M' AND A.FM_NOD_CD='USEZA61') " ).append("\n"); 
		query.append("				OR (A.CGO_TP_CD='M' AND A.TO_NOD_CD='USEZA61')" ).append("\n"); 
		query.append("			THEN DECODE(A.CGO_TP_CD, 'F', 'NYK INTERNATIONAL', 'NYK EMPTY')" ).append("\n"); 
		query.append("	   END SHPR_N_MAHER" ).append("\n"); 
		query.append("      ,TRIM(REPLACE(REPLACE(REPLACE(REPLACE(I.YD_CTRL_OFC_ADDR, CHR(13), ' '), CHR(10), ' '), CHR(9), ' '), CHR(43), ' ')) SHPR_A" ).append("\n"); 
		query.append("      ,I.YD_CTRL_OFC_CTY_NM SHPR_C" ).append("\n"); 
		query.append("      ,I.YD_CTRL_OFC_STE_CD SHPR_S" ).append("\n"); 
		query.append("      ,SUBSTR(I.YD_CD, 1, 2) AS SHPR_CN" ).append("\n"); 
		query.append("      ,I.YD_CTRL_OFC_ZIP_CD SHPR_P" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    , CASE WHEN BK.DCGO_FLG = 'N' THEN " ).append("\n"); 
		query.append("            CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("               WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN" ).append("\n"); 
		query.append("                  DECODE(A.CGO_TP_CD, 'F', CUST.SHPR_CUST_CODE)" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("          ELSE " ).append("\n"); 
		query.append("               CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' " ).append("\n"); 
		query.append("                 THEN DECODE(A.CGO_TP_CD, 'F', SHIP_DE.CUST_CNT_CD || SHIP_DE.CUST_SEQ)" ).append("\n"); 
		query.append("                END   " ).append("\n"); 
		query.append("        END AS ASHPR_CODE" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("      , CASE WHEN BK.DCGO_FLG = 'N' THEN " ).append("\n"); 
		query.append("            CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("               WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN" ).append("\n"); 
		query.append("                  DECODE(A.CGO_TP_CD, 'F', CUST.SHPR_CUST_NM)" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("          ELSE CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN " ).append("\n"); 
		query.append("                    DECODE(A.CGO_TP_CD, 'F', TRIM(REPLACE( REPLACE(REPLACE(SHIP_DE.CUST_NM, CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')), '')" ).append("\n"); 
		query.append("                END    " ).append("\n"); 
		query.append("        END AS ASHPR_N" ).append("\n"); 
		query.append("      , CASE WHEN BK.DCGO_FLG = 'N' THEN " ).append("\n"); 
		query.append("            CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("               WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN" ).append("\n"); 
		query.append("                  DECODE(A.CGO_TP_CD, 'F', CUST.SHPR_CUST_ADDR)" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("          ELSE CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN  " ).append("\n"); 
		query.append("                    DECODE(A.CGO_TP_CD, 'F', TRIM(REPLACE( REPLACE(REPLACE(SHIP_DE.CUST_ADDR, CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')), '')" ).append("\n"); 
		query.append("               END     " ).append("\n"); 
		query.append("        END AS ASHPR_A" ).append("\n"); 
		query.append("      , CASE WHEN BK.DCGO_FLG = 'N' THEN " ).append("\n"); 
		query.append("            CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("               WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN" ).append("\n"); 
		query.append("                  DECODE(A.CGO_TP_CD, 'F', CUST.SHPR_CUST_CTY_NM)" ).append("\n"); 
		query.append("               ELSE ''" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("          ELSE CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN " ).append("\n"); 
		query.append("                    DECODE(A.CGO_TP_CD, 'F', TRIM(REPLACE( REPLACE(REPLACE(SHIP_DE.CUST_CTY_NM, CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')), '')" ).append("\n"); 
		query.append("                END    " ).append("\n"); 
		query.append("        END AS ASHPR_C" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("      , CASE WHEN BK.DCGO_FLG = 'N' THEN " ).append("\n"); 
		query.append("            CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("               WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN" ).append("\n"); 
		query.append("                  DECODE(A.CGO_TP_CD, 'F', CUST.SHPR_CUST_STE_CD)" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("          ELSE CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN DECODE(A.CGO_TP_CD, 'F', SHIP_DE.CUST_STE_CD) END    " ).append("\n"); 
		query.append("        END AS ASHPR_S" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("      , CASE WHEN BK.DCGO_FLG = 'N' THEN " ).append("\n"); 
		query.append("            CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("               WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN" ).append("\n"); 
		query.append("                  DECODE(A.CGO_TP_CD, 'F', CUST.SHPR_CUST_ZIP_ID)" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("          ELSE CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN DECODE(A.CGO_TP_CD, 'F', SHIP_DE.CUST_ZIP_ID) END     " ).append("\n"); 
		query.append("        END AS ASHPR_P" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("      , CASE WHEN BK.DCGO_FLG = 'N' THEN " ).append("\n"); 
		query.append("            CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("               WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN" ).append("\n"); 
		query.append("                  DECODE(A.CGO_TP_CD, 'F', CUST.SHPR_CUST_CNT_CD)" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("          ELSE CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN  DECODE(A.CGO_TP_CD, 'F', SHIP_DE.CUST_CNT_CD) END     " ).append("\n"); 
		query.append("        END AS ASHPR_CN" ).append("\n"); 
		query.append("  " ).append("\n"); 
		query.append("      ,DECODE(A.CGO_TP_CD, 'F', 'NYK INTERNATIONAL', 'NYK EMPTY') AS CNEE_N" ).append("\n"); 
		query.append("      ,TRIM(REPLACE(REPLACE(REPLACE(K.YD_CTRL_OFC_ADDR, CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')) CNEE_A" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_CTY_NM CNEE_C" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_STE_CD CNEE_S" ).append("\n"); 
		query.append("      ,SUBSTR(K.YD_CD, 1, 2) AS CNEE_CN" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_ZIP_CD CNEE_P" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("      ,CASE WHEN K.YD_LOC_CTY_NM IS NULL THEN ''" ).append("\n"); 
		query.append("       ELSE NVL((SELECT NT.EDI_NTFY_NM FROM TRS_TRSP_NTFY_SET NT " ).append("\n"); 
		query.append("                 WHERE UPPER(NT.NTFY_YD_CTY_NM) = UPPER(K.YD_LOC_CTY_NM) AND NT.NTFY_BND_CD = DECODE(A.BKG_CGO_TP_CD, 'F', A.TRSP_BND_CD, 'E'))" ).append("\n"); 
		query.append("             , (SELECT NT.EDI_NTFY_NM FROM TRS_TRSP_NTFY_SET NT WHERE UPPER(NT.NTFY_YD_CTY_NM) = UPPER(K.YD_LOC_CTY_NM) AND NT.NTFY_BND_CD = 'A'))" ).append("\n"); 
		query.append("       END AS NTFY_N" ).append("\n"); 
		query.append("      ,REPLACE(REPLACE(K.YD_CTRL_OFC_ADDR, CHR(10), ''), CHR(13), '') AS NTFY_A   " ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_CTY_NM AS NTFY_C" ).append("\n"); 
		query.append("      ,K.YD_LOC_STE_CD AS NTFY_S" ).append("\n"); 
		query.append("      ,SUBSTR(A.TO_NOD_CD, 1, 2) AS NTFY_CN" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_ZIP_CD AS NTFY_P" ).append("\n"); 
		query.append("      ,CASE WHEN K.YD_LOC_CTY_NM IS NULL THEN ''" ).append("\n"); 
		query.append("       ELSE NVL((SELECT NT.EDI_NTFY_INFO_CTNT FROM TRS_TRSP_NTFY_SET NT " ).append("\n"); 
		query.append("                 WHERE UPPER(NT.NTFY_YD_CTY_NM) = UPPER(K.YD_LOC_CTY_NM) AND NT.NTFY_BND_CD = DECODE(A.BKG_CGO_TP_CD, 'F', A.TRSP_BND_CD, 'E'))" ).append("\n"); 
		query.append("                 , (SELECT NT.EDI_NTFY_INFO_CTNT FROM TRS_TRSP_NTFY_SET NT WHERE UPPER(NT.NTFY_YD_CTY_NM) = UPPER(K.YD_LOC_CTY_NM) AND NT.NTFY_BND_CD = 'A'))" ).append("\n"); 
		query.append("       END AS NTFY_T" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("      ,'NYK INTERNATIONAL' CARE_N" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_ADDR CARE_A" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_CTY_NM CARE_C" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_STE_CD CARE_S" ).append("\n"); 
		query.append("      ,SUBSTR(K.YD_CD, 1, 2) AS CARE_CN" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_ZIP_CD CARE_P" ).append("\n"); 
		query.append("      ,'NYK LINE' BILL_N" ).append("\n"); 
		query.append("      ,(SELECT CONS_VAL_CTNT FROM COM_STUP_CONS WHERE CONS_CD = 'OPC006') BILL_A" ).append("\n"); 
		query.append("      ,(SELECT CONS_VAL_CTNT FROM COM_STUP_CONS WHERE CONS_CD = 'OPC007') BILL_C" ).append("\n"); 
		query.append("      ,(SELECT CONS_VAL_CTNT FROM COM_STUP_CONS WHERE CONS_CD = 'OPC008') BILL_S" ).append("\n"); 
		query.append("      ,'US' BILL_CN" ).append("\n"); 
		query.append("      ,(SELECT CONS_VAL_CTNT FROM COM_STUP_CONS WHERE CONS_CD = 'OPC009') BILL_P" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("   , CASE WHEN BK.DCGO_FLG = 'N'  THEN " ).append("\n"); 
		query.append("          CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("             WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN" ).append("\n"); 
		query.append("                DECODE(A.CGO_TP_CD, 'F', CUST.CNEE_CUST_CODE)  " ).append("\n"); 
		query.append("          END" ).append("\n"); 
		query.append("        ELSE " ).append("\n"); 
		query.append("			CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN  " ).append("\n"); 
		query.append("				DECODE(A.CGO_TP_CD, 'F', CONS_DE.CUST_CNT_CD || CONS_DE.CUST_SEQ)  " ).append("\n"); 
		query.append("			END" ).append("\n"); 
		query.append("      END AS UTCN_CODE" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("    , CASE WHEN BK.DCGO_FLG = 'N'  THEN " ).append("\n"); 
		query.append("          CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("             WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN                    " ).append("\n"); 
		query.append("                DECODE(A.CGO_TP_CD, 'F', CUST.CNEE_CUST_NM) " ).append("\n"); 
		query.append("          END" ).append("\n"); 
		query.append("        ELSE " ).append("\n"); 
		query.append("           CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN " ).append("\n"); 
		query.append("             DECODE(A.CGO_TP_CD, 'F', TRIM(REPLACE(REPLACE(REPLACE(CONS_DE.CUST_NM, CHR(13), ' '), CHR(10), ' '), CHR(43), ' '))) " ).append("\n"); 
		query.append("           END  " ).append("\n"); 
		query.append("      END AS UTCN_N" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("    , CASE WHEN BK.DCGO_FLG = 'N'  THEN " ).append("\n"); 
		query.append("         CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("            WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN " ).append("\n"); 
		query.append("              DECODE(A.CGO_TP_CD, 'F', CUST.CNEE_CUST_ADDR)" ).append("\n"); 
		query.append("         END" ).append("\n"); 
		query.append("      ELSE " ).append("\n"); 
		query.append("			CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN  " ).append("\n"); 
		query.append("				DECODE(A.CGO_TP_CD, 'F', TRIM(REPLACE(REPLACE(REPLACE(CONS_DE.CUST_ADDR, CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')))" ).append("\n"); 
		query.append("			END" ).append("\n"); 
		query.append("      END AS UTCN_A" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("    , CASE WHEN BK.DCGO_FLG = 'N'  THEN " ).append("\n"); 
		query.append("         CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("            WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN " ).append("\n"); 
		query.append("              DECODE(A.CGO_TP_CD, 'F', CUST.CNEE_CUST_CTY_NM)" ).append("\n"); 
		query.append("         END" ).append("\n"); 
		query.append("      ELSE" ).append("\n"); 
		query.append("         CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN  " ).append("\n"); 
		query.append("              DECODE(A.CGO_TP_CD, 'F', TRIM(REPLACE(REPLACE(REPLACE(CONS_DE.CUST_CTY_NM, CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')))" ).append("\n"); 
		query.append("         END     " ).append("\n"); 
		query.append("      END AS UTCN_C" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("    , CASE WHEN BK.DCGO_FLG = 'N'  THEN " ).append("\n"); 
		query.append("         CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("            WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN " ).append("\n"); 
		query.append("              DECODE(A.CGO_TP_CD, 'F', CUST.CNEE_CUST_STE_CD)" ).append("\n"); 
		query.append("            ELSE ''" ).append("\n"); 
		query.append("         END" ).append("\n"); 
		query.append("      ELSE CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN  " ).append("\n"); 
		query.append("                DECODE(A.CGO_TP_CD, 'F', CONS_DE.CUST_STE_CD)" ).append("\n"); 
		query.append("           END     " ).append("\n"); 
		query.append("      END AS UTCN_S" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("    , CASE WHEN BK.DCGO_FLG = 'N' THEN " ).append("\n"); 
		query.append("         CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("            WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN " ).append("\n"); 
		query.append("              DECODE(A.CGO_TP_CD, 'F', CUST.CNEE_CUST_CNT_CD)" ).append("\n"); 
		query.append("            ELSE ''" ).append("\n"); 
		query.append("         END" ).append("\n"); 
		query.append("      ELSE CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN  " ).append("\n"); 
		query.append("                DECODE(A.CGO_TP_CD, 'F', CONS_DE.CUST_CNT_CD)" ).append("\n"); 
		query.append("           END     " ).append("\n"); 
		query.append("      END AS UTCN_CN" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("    , CASE WHEN BK.DCGO_FLG = 'N' THEN " ).append("\n"); 
		query.append("         CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = SUBSTR(A.TO_NOD_CD, 1, 2) AND SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' THEN ''" ).append("\n"); 
		query.append("            WHEN SUBSTR(A.FM_NOD_CD, 1, 2) != SUBSTR(A.TO_NOD_CD, 1, 2) AND (SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA') THEN " ).append("\n"); 
		query.append("              DECODE(A.CGO_TP_CD, 'F', CUST.CNEE_CUST_ZIP_ID)" ).append("\n"); 
		query.append("            ELSE ''" ).append("\n"); 
		query.append("         END" ).append("\n"); 
		query.append("      ELSE CASE WHEN SUBSTR(A.FM_NOD_CD, 1, 2) = 'CA' OR  SUBSTR(A.TO_NOD_CD, 1, 2) = 'CA' THEN  " ).append("\n"); 
		query.append("                DECODE(A.CGO_TP_CD, 'F', CONS_DE.CUST_ZIP_ID)" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("      END AS UTCN_P" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("      ,'NYK INTERNATIONAL' RECV_N" ).append("\n"); 
		query.append("      ,(SELECT CONS_VAL_CTNT FROM COM_STUP_CONS WHERE CONS_CD = 'OPC006') RECV_A" ).append("\n"); 
		query.append("      ,(SELECT CONS_VAL_CTNT FROM COM_STUP_CONS WHERE CONS_CD = 'OPC007') RECV_C" ).append("\n"); 
		query.append("      ,(SELECT CONS_VAL_CTNT FROM COM_STUP_CONS WHERE CONS_CD = 'OPC008') RECV_S" ).append("\n"); 
		query.append("      ,'' RECV_CN" ).append("\n"); 
		query.append("      ,(SELECT CONS_VAL_CTNT FROM COM_STUP_CONS WHERE CONS_CD = 'OPC009') RECV_P" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("      ,CASE WHEN K.YD_LOC_CTY_NM IS NULL THEN ''" ).append("\n"); 
		query.append("       ELSE NVL((SELECT NT.EDI_NTFY_NM FROM TRS_TRSP_NTFY_SET NT " ).append("\n"); 
		query.append("                 WHERE UPPER(NT.NTFY_YD_CTY_NM) = UPPER(K.YD_LOC_CTY_NM) AND NT.NTFY_BND_CD = DECODE(A.BKG_CGO_TP_CD, 'F', A.TRSP_BND_CD, 'M'))" ).append("\n"); 
		query.append("           , (SELECT NT.EDI_NTFY_NM FROM TRS_TRSP_NTFY_SET NT WHERE UPPER(NT.NTFY_YD_CTY_NM) = UPPER(K.YD_LOC_CTY_NM) AND NT.NTFY_BND_CD = 'A'))" ).append("\n"); 
		query.append("       END AS CUSBRK_N" ).append("\n"); 
		query.append("      ,REPLACE(REPLACE(K.YD_CTRL_OFC_ADDR, CHR(10), ''), CHR(13), '') AS CUSBRK_A" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_CTY_NM AS CUSBRK_C" ).append("\n"); 
		query.append("      ,K.YD_LOC_STE_CD AS CUSBRK_S" ).append("\n"); 
		query.append("      ,SUBSTR(A.TO_NOD_CD, 1, 2) AS CUSBRK_CN" ).append("\n"); 
		query.append("      ,K.YD_CTRL_OFC_ZIP_CD AS CUSBRK_P" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("      ,'NYK INTERNATIONAL' ADMC_C" ).append("\n"); 
		query.append("      ,SP.FDA FDA_IND" ).append("\n"); 
		query.append("      ,TRIM(REPLACE(REPLACE(REPLACE(BF.CUST_NM, CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')) CUST_F" ).append("\n"); 
		query.append("      ,TRIM(REPLACE(REPLACE(REPLACE(BE.CUST_NM, CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')) CUST_E" ).append("\n"); 
		query.append("      ,M.CDO_TEMP TEMP" ).append("\n"); 
		query.append("      ,NVL2(M.CDO_TEMP, 'C', '') TUN" ).append("\n"); 
		query.append("      ,M.VENT_RTO VENT" ).append("\n"); 
		query.append("      ,M.HUMID_NO HUMID" ).append("\n"); 
		query.append("      ,M.PWR_SPL_CBL_FLG GENSET" ).append("\n"); 
		query.append("      ,(SELECT CONS_VAL_CTNT FROM COM_STUP_CONS WHERE CONS_CD = 'OPC010') REFID" ).append("\n"); 
		query.append("      ,A.AUTO_XPT_SYS_NO REFVAL" ).append("\n"); 
		query.append("      ,'' S" ).append("\n"); 
		query.append("      ,DECODE(A.CGO_TP_CD, 'M', 'EMPTY REPO', O.BKG_NO) BKGNO_OLD" ).append("\n"); 
		query.append("      ,DECODE(A.TRSP_BND_CD, 'I', A.BL_NO, '') BLNO_OLD" ).append("\n"); 
		query.append("      ,TO_CHAR(A.WO_ISS_DT, 'YYYYMMDD') SNDDT_OLD" ).append("\n"); 
		query.append("      ,'N' TYPE" ).append("\n"); 
		query.append("      ,O.ROUTCARR ROUTCARR" ).append("\n"); 
		query.append("      ,O.ROUTSEQ ROUTSEQ" ).append("\n"); 
		query.append("      ,O.ROUTCITY ROUTCITY" ).append("\n"); 
		query.append("      ,O.INTMOSVR INTMOSVR" ).append("\n"); 
		query.append("      ,O.TRANSTP TRANSTP" ).append("\n"); 
		query.append("      ,O.TO_YARD_CD TO_YARD_CD" ).append("\n"); 
		query.append("      ,UPPER(O.AGMT_REF_NO) CONTRACT" ).append("\n"); 
		query.append("      ,O.ROUTCARR2 ROUTCARR2" ).append("\n"); 
		query.append("      ,O.ROUTSEQ2 ROUTSEQ2" ).append("\n"); 
		query.append("      ,O.ROUTCITY2 ROUTCITY2" ).append("\n"); 
		query.append("      ,O.INTMOSVR2 INTMOSVR2" ).append("\n"); 
		query.append("      ,O.TRANSTP2 TRANSTP2" ).append("\n"); 
		query.append("      ,O.TO_YARD_CD2 TO_YARD_CD2" ).append("\n"); 
		query.append("      ,UPPER(O.AGMT_REF_NO2) CONTRACT2" ).append("\n"); 
		query.append("      ,O.ROUTCARR3 ROUTCARR3" ).append("\n"); 
		query.append("      ,O.ROUTSEQ3 ROUTSEQ3" ).append("\n"); 
		query.append("      ,O.ROUTCITY3 ROUTCITY3" ).append("\n"); 
		query.append("      ,O.INTMOSVR3 INTMOSVR3" ).append("\n"); 
		query.append("      ,O.TRANSTP3 TRANSTP3" ).append("\n"); 
		query.append("      ,O.TO_YARD_CD3 TO_YARD_CD3" ).append("\n"); 
		query.append("      ,UPPER(O.AGMT_REF_NO3) CONTRACT3" ).append("\n"); 
		query.append("      ,'' INBOND" ).append("\n"); 
		query.append("      ,SP.LADELINE1" ).append("\n"); 
		query.append("      ,SP.LADEDESC1" ).append("\n"); 
		query.append("	  ,SP.COMMCODE1" ).append("\n"); 
		query.append("      ,SP.NISCOMM1 AS BKG_COMM1" ).append("\n"); 
		query.append("      ,SP.NISRETP1 AS REF_COMM1" ).append("\n"); 
		query.append("      ,SP.HS_CD1" ).append("\n"); 
		query.append("      ,SP.UNITCODE1" ).append("\n"); 
		query.append("      ,DECODE(A.TRSP_BND_CD, 'O', NVL(A.PCK_QTY, 1), 'I', NVL(D.PCK_QTY, 1), '1') LADEQTY" ).append("\n"); 
		query.append("      ,DECODE(A.TRSP_BND_CD, 'O', NVL(A.PCK_TP_CD, 'PCS'), DECODE(D.PCK_QTY, NULL, 'TLD', D.PCK_TP_CD)) PACKFORM" ).append("\n"); 
		query.append("      ,A.CRE_OFC_CD      " ).append("\n"); 
		query.append("  FROM TRS_TRSP_RAIL_BIL_ORD A" ).append("\n"); 
		query.append("      ,MDM_VENDOR C" ).append("\n"); 
		query.append("      ,BKG_CONTAINER D" ).append("\n"); 
		query.append("      ,MDM_YARD I" ).append("\n"); 
		query.append("      ,MDM_YARD K" ).append("\n"); 
		query.append("      ,BKG_RF_CGO M" ).append("\n"); 
		query.append("      ,MDM_VSL_CNTR Q" ).append("\n"); 
		query.append("      ,TRS_TRSP_RAIL_EDI_NOD S" ).append("\n"); 
		query.append("      ,TRS_TRSP_RAIL_EDI_NOD T" ).append("\n"); 
		query.append("      ,BKG_BOOKING BK" ).append("\n"); 
		query.append("      ,BKG_CSTMS_ADV_BL CND" ).append("\n"); 
		query.append("      ,MDM_ORGANIZATION OFC" ).append("\n"); 
		query.append("      ,BKG_CSTMS_CND_VSL CV" ).append("\n"); 
		query.append("      ,BKG_CUSTOMER BF" ).append("\n"); 
		query.append("      ,BKG_CUSTOMER BE" ).append("\n"); 
		query.append("      ,BKG_CSTMS_ADV_IBD AI" ).append("\n"); 
		query.append("      ,TRS_TRSP_RAIL_OFC_EXPT ROFC" ).append("\n"); 
		query.append("      ,BKG_CNTR_SEAL_NO SEAL" ).append("\n"); 
		query.append("      ,BKG_DG_DECL  SHIP_DE   " ).append("\n"); 
		query.append("      ,BKG_DG_DECL  CONS_DE	" ).append("\n"); 
		query.append("      ,(SELECT A.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("              ,A.TRSP_SO_SEQ" ).append("\n"); 
		query.append("              ,MIN(DECODE(A.SUB_RAIL_SEQ, 1, A.VNDR_SEQ)) VNDR_SEQ" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, B.USA_EDI_CD, '')) ROUTCARR" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, DECODE(SUBSTR(C.RAIL_CMB_THRU_TP_CD, 3), 'T', 'S', 'C', 'S', 'R'), '')) ROUTSEQ" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, PRD.INLND_ROUT_JUNC_NM, '')) ROUTCITY" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, MST.ROUT_PLN_CD, '')) INTMOSVR" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, DECODE(SUBSTR(A.RAIL_CRR_TP_CD, 1, 1), 'C', 'X'), '')) TRANSTP" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, A.TO_NOD_CD, '')) TO_YARD_CD" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, AGMT.AGMT_REF_NO)) AGMT_REF_NO" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 2, B.USA_EDI_CD, '')) ROUTCARR2" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 2, '1', '')) ROUTSEQ2" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 2, PRD.INLND_ROUT_JUNC_NM, '')) ROUTCITY2" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 2, MST.ROUT_PLN_CD, '')) INTMOSVR2" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 2, DECODE(SUBSTR(A.RAIL_CRR_TP_CD, 1, 1), 'C', 'X'), '')) TRANSTP2" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 2, A.TO_NOD_CD, '')) TO_YARD_CD2" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 2, AGMT.AGMT_REF_NO)) AGMT_REF_NO2" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 3, B.USA_EDI_CD, '')) ROUTCARR3" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 3, '2', '')) ROUTSEQ3" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 3, PRD.INLND_ROUT_JUNC_NM, '')) ROUTCITY3" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 3, MST.ROUT_PLN_CD, '')) INTMOSVR3" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 3, DECODE(SUBSTR(A.RAIL_CRR_TP_CD, 1, 1), 'C', 'X'), '')) TRANSTP3" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 3, A.TO_NOD_CD, '')) TO_YARD_CD3" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 3, AGMT.AGMT_REF_NO)) AGMT_REF_NO3" ).append("\n"); 
		query.append("              ,MAX(EDI.BIL_EDI_CTRL_SEQ) BIL_EDI_CTRL_SEQ" ).append("\n"); 
		query.append("              ,MAX(EDI.BKG_NO) BKG_NO" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, DECODE(SUBSTR(A.RAIL_CRR_TP_CD, 1, 1), 'C', 'CN', 'T', 'CC'))) EQDESC_C" ).append("\n"); 
		query.append("              ,MAX(C.FM_NOD_CD) FM_NOD_CD" ).append("\n"); 
		query.append("              ,MAX(C.TO_NOD_CD) TO_NOD_CD" ).append("\n"); 
		query.append("          FROM TRS_TRSP_RAIL_BIL_VNDR_SET A" ).append("\n"); 
		query.append("              ,MDM_VENDOR                 B" ).append("\n"); 
		query.append("              ,TRS_TRSP_RAIL_BIL_ORD      C" ).append("\n"); 
		query.append("              ,TRS_TRSP_EDI_TMP           TMP" ).append("\n"); 
		query.append("              ,TRS_TRSP_EDI_RAIL_ORD      EDI" ).append("\n"); 
		query.append("              ,TRS_AGMT_HDR               AGMT" ).append("\n"); 
		query.append("              ,PRD_INLND_ROUT_DTL         PRD" ).append("\n"); 
		query.append("              ,PRD_INLND_ROUT_MST         MST" ).append("\n"); 
		query.append("         WHERE TMP.TRSP_EDI_SND_NO = @[strsp_edi_snd_no]" ).append("\n"); 
		query.append("           AND A.TRSP_SO_OFC_CTY_CD = TMP.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("           AND A.TRSP_SO_SEQ = TMP.TRSP_SO_SEQ" ).append("\n"); 
		query.append("           AND A.VNDR_SEQ = B.VNDR_SEQ(+)" ).append("\n"); 
		query.append("           AND A.TRSP_SO_OFC_CTY_CD = C.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("           AND A.TRSP_SO_SEQ = C.TRSP_SO_SEQ" ).append("\n"); 
		query.append("           AND C.ROUT_ORG_NOD_CD = PRD.ROUT_ORG_NOD_CD" ).append("\n"); 
		query.append("           AND C.ROUT_DEST_NOD_CD = PRD.ROUT_DEST_NOD_CD" ).append("\n"); 
		query.append("           AND C.ROUT_SEQ = PRD.ROUT_SEQ" ).append("\n"); 
		query.append("           AND A.ROUT_DTL_SEQ = PRD.ROUT_DTL_SEQ" ).append("\n"); 
		query.append("           AND MST.ROUT_ORG_NOD_CD = PRD.ROUT_ORG_NOD_CD" ).append("\n"); 
		query.append("           AND MST.ROUT_DEST_NOD_CD = PRD.ROUT_DEST_NOD_CD" ).append("\n"); 
		query.append("           AND MST.ROUT_SEQ = PRD.ROUT_SEQ" ).append("\n"); 
		query.append("           AND A.TRSP_SO_OFC_CTY_CD = EDI.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("           AND A.TRSP_SO_SEQ = EDI.TRSP_SO_SEQ" ).append("\n"); 
		query.append("           AND A.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD(+)" ).append("\n"); 
		query.append("           AND A.TRSP_AGMT_SEQ = AGMT.TRSP_AGMT_SEQ(+)" ).append("\n"); 
		query.append("           AND C.RAIL_CMB_THRU_TP_CD IN ('C1T', 'C2T', 'C3T', 'C2R', 'C3R', 'C2C', 'C3S')" ).append("\n"); 
		query.append("         GROUP BY A.TRSP_SO_OFC_CTY_CD, A.TRSP_SO_SEQ" ).append("\n"); 
		query.append("        UNION" ).append("\n"); 
		query.append("        SELECT A.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("              ,A.TRSP_SO_SEQ" ).append("\n"); 
		query.append("              ,A.VNDR_SEQ" ).append("\n"); 
		query.append("              ,B.USA_EDI_CD ROUTCARR" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, DECODE(SUBSTR(C.RAIL_CMB_THRU_TP_CD, 3), 'T', 'S', 'C', 'S', 'R'), 2, 1, 3, 2)) ROUTSEQ" ).append("\n"); 
		query.append("              ,PRD.INLND_ROUT_JUNC_NM ROUTCITY" ).append("\n"); 
		query.append("              ,MST.ROUT_PLN_CD INTMOSVR" ).append("\n"); 
		query.append("              ,DECODE(SUBSTR(A.RAIL_CRR_TP_CD, 1, 1), 'C', 'X') TRANSTP" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, A.TO_NOD_CD, '')) TO_YARD_CD" ).append("\n"); 
		query.append("              ,MAX(AGMT.AGMT_REF_NO) AGMT_REF_NO" ).append("\n"); 
		query.append("              ,'' ROUTCARR2" ).append("\n"); 
		query.append("              ,'' ROUTSEQ2" ).append("\n"); 
		query.append("              ,'' ROUTCITY2" ).append("\n"); 
		query.append("              ,'' INTMOSVR2" ).append("\n"); 
		query.append("              ,'' TRANSTP2" ).append("\n"); 
		query.append("              ,'' TO_YARD_CD2" ).append("\n"); 
		query.append("              ,'' AGMT_REF_NO2" ).append("\n"); 
		query.append("              ,'' ROUTCARR3" ).append("\n"); 
		query.append("              ,'' ROUTSEQ3" ).append("\n"); 
		query.append("              ,'' ROUTCITY3" ).append("\n"); 
		query.append("              ,'' INTMOSVR3" ).append("\n"); 
		query.append("              ,'' TRANSTP3" ).append("\n"); 
		query.append("              ,'' TO_YARD_CD3" ).append("\n"); 
		query.append("              ,'' AGMT_REF_NO3" ).append("\n"); 
		query.append("              ,MAX(EDI.BIL_EDI_CTRL_SEQ) BIL_EDI_CTRL_SEQ" ).append("\n"); 
		query.append("              ,MAX(EDI.BKG_NO) BKG_NO" ).append("\n"); 
		query.append("              ,MAX(DECODE(A.SUB_RAIL_SEQ, 1, DECODE(SUBSTR(A.RAIL_CRR_TP_CD, 1, 1), 'C', 'CN', 'T', 'CC'))) EQDESC_C" ).append("\n"); 
		query.append("              ,MAX(A.FM_NOD_CD) FM_NOD_CD" ).append("\n"); 
		query.append("              ,MAX(A.TO_NOD_CD) TO_NOD_CD" ).append("\n"); 
		query.append("          FROM TRS_TRSP_RAIL_BIL_VNDR_SET A" ).append("\n"); 
		query.append("              ,MDM_VENDOR                 B" ).append("\n"); 
		query.append("              ,TRS_TRSP_RAIL_BIL_ORD      C" ).append("\n"); 
		query.append("              ,TRS_TRSP_EDI_TMP           TMP" ).append("\n"); 
		query.append("              ,TRS_TRSP_EDI_RAIL_ORD      EDI" ).append("\n"); 
		query.append("              ,TRS_AGMT_HDR               AGMT" ).append("\n"); 
		query.append("              ,PRD_INLND_ROUT_DTL         PRD" ).append("\n"); 
		query.append("              ,PRD_INLND_ROUT_MST         MST" ).append("\n"); 
		query.append("         WHERE TMP.TRSP_EDI_SND_NO = @[strsp_edi_snd_no]" ).append("\n"); 
		query.append("           AND A.TRSP_SO_OFC_CTY_CD = TMP.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("           AND A.TRSP_SO_SEQ = TMP.TRSP_SO_SEQ" ).append("\n"); 
		query.append("           AND A.VNDR_SEQ = B.VNDR_SEQ(+)" ).append("\n"); 
		query.append("           AND A.TRSP_SO_OFC_CTY_CD = C.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("           AND A.TRSP_SO_SEQ = C.TRSP_SO_SEQ" ).append("\n"); 
		query.append("           AND C.ROUT_ORG_NOD_CD = PRD.ROUT_ORG_NOD_CD" ).append("\n"); 
		query.append("           AND C.ROUT_DEST_NOD_CD = PRD.ROUT_DEST_NOD_CD" ).append("\n"); 
		query.append("           AND C.ROUT_SEQ = PRD.ROUT_SEQ" ).append("\n"); 
		query.append("           AND A.ROUT_DTL_SEQ = PRD.ROUT_DTL_SEQ" ).append("\n"); 
		query.append("           AND MST.ROUT_ORG_NOD_CD = PRD.ROUT_ORG_NOD_CD" ).append("\n"); 
		query.append("           AND MST.ROUT_DEST_NOD_CD = PRD.ROUT_DEST_NOD_CD" ).append("\n"); 
		query.append("           AND MST.ROUT_SEQ = PRD.ROUT_SEQ" ).append("\n"); 
		query.append("           AND A.TRSP_SO_OFC_CTY_CD = EDI.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("           AND A.TRSP_SO_SEQ = EDI.TRSP_SO_SEQ" ).append("\n"); 
		query.append("           AND A.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD(+)" ).append("\n"); 
		query.append("           AND A.TRSP_AGMT_SEQ = AGMT.TRSP_AGMT_SEQ(+)" ).append("\n"); 
		query.append("           AND B.VNDR_SEQ = EDI.VNDR_SEQ" ).append("\n"); 
		query.append("           AND C.RAIL_CMB_THRU_TP_CD IN ('S2R', 'S3R')" ).append("\n"); 
		query.append("         GROUP BY A.TRSP_SO_OFC_CTY_CD,A.TRSP_SO_SEQ,A.VNDR_SEQ,B.USA_EDI_CD,A.TO_NOD_CD,PRD.INLND_ROUT_JUNC_NM,MST.ROUT_PLN_CD,A.RAIL_CRR_TP_CD" ).append("\n"); 
		query.append("         ORDER BY TRSP_SO_SEQ) O" ).append("\n"); 
		query.append("      ,(" ).append("\n"); 
		query.append("			SELECT A.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("				  ,A.TRSP_SO_SEQ" ).append("\n"); 
		query.append("				  ,MAX(FDA_DECL_FLG) FDA" ).append("\n"); 
		query.append("			  	  ,MAX(DECODE(LADELINE, 1, LADELINE, '')) LADELINE1" ).append("\n"); 
		query.append("			      ,MAX(DECODE(LADELINE, 1, LADEDESC, '')) LADEDESC1" ).append("\n"); 
		query.append("			      ,MAX(DECODE(LADELINE, 1, COMMCODE, '')) COMMCODE1" ).append("\n"); 
		query.append("			      ,MAX(DECODE(LADELINE, 1, NISCOMM, '')) NISCOMM1" ).append("\n"); 
		query.append("			      ,MAX(DECODE(LADELINE, 1, NISRETP, '')) NISRETP1" ).append("\n"); 
		query.append("			      ,MAX(DECODE(LADELINE, 1, HAMO_TRF_CD, '')) HS_CD1" ).append("\n"); 
		query.append("			      ,MAX(DECODE(LADELINE, 1, '', '')) UNITCODE1" ).append("\n"); 
		query.append("			      ,MAX(BL_WEIGHT) BL_WGT" ).append("\n"); 
		query.append("			  FROM (SELECT A.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("						  ,A.TRSP_SO_SEQ" ).append("\n"); 
		query.append("						  ,TO_NUMBER(NVL(D.RK, '1')) LADELINE" ).append("\n"); 
		query.append("						  ,REPLACE(REPLACE(NVL(D.CNTR_MF_GDS_DESC, 'F.A.K'), CHR(13), ' '), CHR(10), ' ') LADEDESC" ).append("\n"); 
		query.append("						  ,DECODE(D.HAMO_TRF_CD, '3590000', '3522286', D.HAMO_TRF_CD) COMMCODE" ).append("\n"); 
		query.append("						  ,B.CMDT_CD NISCOMM" ).append("\n"); 
		query.append("						  ,B.REP_CMDT_CD NISRETP" ).append("\n"); 
		query.append("						  ,TF.FDA_DECL_FLG" ).append("\n"); 
		query.append("						  ,TF.HAMO_TRF_CD" ).append("\n"); 
		query.append("					  FROM TRS_TRSP_RAIL_BIL_ORD A" ).append("\n"); 
		query.append("						  ,TRS_TRSP_RAIL_BIL_VNDR_SET AB" ).append("\n"); 
		query.append("						  ,BKG_BOOKING B" ).append("\n"); 
		query.append("						  ,BKG_CONTAINER C" ).append("\n"); 
		query.append("						  ,(SELECT BD.BKG_NO" ).append("\n"); 
		query.append("								  ,BD.CNTR_NO" ).append("\n"); 
		query.append("								  ,BD.CNTR_MF_GDS_DESC" ).append("\n"); 
		query.append("								  ,BD.HAMO_TRF_CD" ).append("\n"); 
		query.append("								  ,BD.CMDT_HS_CD" ).append("\n"); 
		query.append("								  ,ROW_NUMBER() OVER(PARTITION BY BD.BKG_NO, BD.CNTR_NO ORDER BY BD.CNTR_MF_SEQ) RK" ).append("\n"); 
		query.append("							  FROM BKG_CNTR_MF_DESC BD) D" ).append("\n"); 
		query.append("						  ,MDM_REP_CMDT E" ).append("\n"); 
		query.append("						  ,MDM_COMMODITY F" ).append("\n"); 
		query.append("						  ,BKG_RATE BRH" ).append("\n"); 
		query.append("						  ,MDM_VENDOR VD" ).append("\n"); 
		query.append("						  ,TRS_TRSP_EDI_TMP STMP" ).append("\n"); 
		query.append("						  ,BKG_HAMO_TRF TF" ).append("\n"); 
		query.append("						  ,BKG_DG_CGO P" ).append("\n"); 
		query.append("					 WHERE A.BKG_NO = B.BKG_NO(+)" ).append("\n"); 
		query.append("					   AND A.BKG_NO = C.BKG_NO(+)" ).append("\n"); 
		query.append("					   AND A.EQ_NO = C.CNTR_NO(+)" ).append("\n"); 
		query.append("					   AND A.BKG_NO = D.BKG_NO(+)" ).append("\n"); 
		query.append("					   AND A.EQ_NO = D.CNTR_NO(+)" ).append("\n"); 
		query.append("					   AND 1 = D.RK(+)" ).append("\n"); 
		query.append("					   AND B.REP_CMDT_CD = E.REP_CMDT_CD(+)" ).append("\n"); 
		query.append("					   AND B.CMDT_CD = F.CMDT_CD(+)" ).append("\n"); 
		query.append("					   AND A.BKG_NO = BRH.BKG_NO(+)" ).append("\n"); 
		query.append("					   AND A.TRSP_SO_OFC_CTY_CD = AB.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("					   AND A.TRSP_SO_SEQ = AB.TRSP_SO_SEQ" ).append("\n"); 
		query.append("					   AND AB.SUB_RAIL_SEQ = 1" ).append("\n"); 
		query.append("					   AND AB.VNDR_SEQ = VD.VNDR_SEQ(+)" ).append("\n"); 
		query.append("					   AND D.CMDT_HS_CD = TF.HAMO_TRF_CD(+)" ).append("\n"); 
		query.append("					   AND STMP.TRSP_EDI_SND_NO = @[strsp_edi_snd_no]" ).append("\n"); 
		query.append("					   AND A.TRSP_SO_OFC_CTY_CD = STMP.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("					   AND A.TRSP_SO_SEQ = STMP.TRSP_SO_SEQ" ).append("\n"); 
		query.append("					   AND A.BKG_NO = P.BKG_NO(+)" ).append("\n"); 
		query.append("					   AND A.EQ_NO = P.CNTR_NO(+)" ).append("\n"); 
		query.append("					   AND P.DCGO_SEQ(+) = 1) A" ).append("\n"); 
		query.append("				  ,(" ).append("\n"); 
		query.append("						SELECT TRSP_SO_OFC_CTY_CD, TRSP_SO_SEQ, SUM(NVL(WGT, 0)) BL_WEIGHT" ).append("\n"); 
		query.append("						  FROM (SELECT /*+ LEADING(STMP) USE_NL(A) USE_NL(BC B B1)*/" ).append("\n"); 
		query.append("								 STMP.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("								,STMP.TRSP_SO_SEQ" ).append("\n"); 
		query.append("								,DECODE(BC.WGT_UT_CD,'KGS', NVL(BC.CNTR_WGT, 0),TRS_COMMON_PKG.GET_CONV_WGT_TO_KGS_FNC(BC.WGT_UT_CD, BC.CNTR_WGT)) WGT" ).append("\n"); 
		query.append("								  FROM BKG_CONTAINER         BC" ).append("\n"); 
		query.append("									  ,BKG_BOOKING           B" ).append("\n"); 
		query.append("									  ,BKG_BOOKING           B1" ).append("\n"); 
		query.append("									  ,TRS_TRSP_RAIL_BIL_ORD A" ).append("\n"); 
		query.append("									  ,TRS_TRSP_EDI_TMP      STMP" ).append("\n"); 
		query.append("								 WHERE 1 = 1" ).append("\n"); 
		query.append("								   AND STMP.TRSP_EDI_SND_NO = @[strsp_edi_snd_no]" ).append("\n"); 
		query.append("								   AND A.TRSP_SO_OFC_CTY_CD = STMP.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("								   AND A.TRSP_SO_SEQ = STMP.TRSP_SO_SEQ" ).append("\n"); 
		query.append("								   AND A.BKG_NO = B.BKG_NO" ).append("\n"); 
		query.append("								   AND EXISTS (SELECT 1" ).append("\n"); 
		query.append("										  FROM TRS_TRSP_RAIL_BIL_ORD O, SCE_COP_HDR M, SCE_COP_HDR S" ).append("\n"); 
		query.append("										 WHERE O.TRSP_SO_OFC_CTY_CD = STMP.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("										   AND O.TRSP_SO_SEQ = STMP.TRSP_SO_SEQ" ).append("\n"); 
		query.append("										   AND O.TRSP_BND_CD = 'I'" ).append("\n"); 
		query.append("										   AND NVL(O.DELT_FLG, 'N') <> 'Y'" ).append("\n"); 
		query.append("										   AND S.COP_NO = O.COP_NO" ).append("\n"); 
		query.append("										   AND S.MST_COP_NO = M.COP_NO" ).append("\n"); 
		query.append("										   AND M.BKG_NO = B.BKG_NO" ).append("\n"); 
		query.append("										   AND ROWNUM = 1)" ).append("\n"); 
		query.append("								   AND B.BKG_NO <> B1.BKG_NO" ).append("\n"); 
		query.append("								   AND B.VSL_CD = B1.VSL_CD" ).append("\n"); 
		query.append("								   AND B.SKD_VOY_NO = B1.SKD_VOY_NO" ).append("\n"); 
		query.append("								   AND B.SKD_DIR_CD = B1.SKD_DIR_CD" ).append("\n"); 
		query.append("								   AND B1.BKG_NO = BC.BKG_NO" ).append("\n"); 
		query.append("								   AND BC.CNTR_NO = A.EQ_NO" ).append("\n"); 
		query.append("								   AND B1.BKG_CGO_TP_CD = 'F'" ).append("\n"); 
		query.append("								   AND (B1.BKG_STS_CD = 'W' OR B1.BKG_STS_CD = 'F')" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT /*+ LEADING(STMP) USE_NL(O) USE_NL(BC)*/" ).append("\n"); 
		query.append("								 STMP.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("								,STMP.TRSP_SO_SEQ" ).append("\n"); 
		query.append("								,DECODE(BC.WGT_UT_CD,'KGS', NVL(BC.CNTR_WGT, 0),TRS_COMMON_PKG.GET_CONV_WGT_TO_KGS_FNC(BC.WGT_UT_CD, BC.CNTR_WGT)) WGT" ).append("\n"); 
		query.append("								  FROM TRS_TRSP_RAIL_BIL_ORD O, TRS_TRSP_EDI_TMP STMP, BKG_CONTAINER BC" ).append("\n"); 
		query.append("								 WHERE 1 = 1" ).append("\n"); 
		query.append("								   AND STMP.TRSP_EDI_SND_NO = @[strsp_edi_snd_no]" ).append("\n"); 
		query.append("								   AND STMP.TRSP_SO_OFC_CTY_CD = O.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("								   AND STMP.TRSP_SO_SEQ = O.TRSP_SO_SEQ" ).append("\n"); 
		query.append("								   AND O.TRSP_BND_CD = 'I'" ).append("\n"); 
		query.append("								   AND NVL(O.DELT_FLG, 'N') <> 'Y'" ).append("\n"); 
		query.append("								   AND O.BKG_NO = BC.BKG_NO" ).append("\n"); 
		query.append("								   AND O.EQ_NO = BC.CNTR_NO)" ).append("\n"); 
		query.append("						 GROUP BY TRSP_SO_OFC_CTY_CD, TRSP_SO_SEQ" ).append("\n"); 
		query.append("					) B" ).append("\n"); 
		query.append("			 WHERE A.TRSP_SO_OFC_CTY_CD = B.TRSP_SO_OFC_CTY_CD(+)" ).append("\n"); 
		query.append("			   AND A.TRSP_SO_SEQ = B.TRSP_SO_SEQ(+)" ).append("\n"); 
		query.append("			 GROUP BY A.TRSP_SO_OFC_CTY_CD, A.TRSP_SO_SEQ" ).append("\n"); 
		query.append("	  ) SP" ).append("\n"); 
		query.append("	 , (" ).append("\n"); 
		query.append("      SELECT BKG_NO" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'S', CUST_CNT_CD)) SHPR_CUST_CNT_CD" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'S', CUST_SEQ)) SHPR_CUST_SEQ" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'S', NVL2(CUST_SEQ, CUST_CNT_CD || CUST_SEQ, ''))) SHPR_CUST_CODE" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'S', CUST_NM)) SHPR_CUST_NM" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'S', CUST_ADDR)) SHPR_CUST_ADDR" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'S', CUST_CTY_NM)) SHPR_CUST_CTY_NM" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'S', CUST_STE_CD)) SHPR_CUST_STE_CD" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'S', CUST_ZIP_ID)) SHPR_CUST_ZIP_ID" ).append("\n"); 
		query.append("                 " ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'C', CUST_CNT_CD)) CNEE_CUST_CNT_CD" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'C', CUST_SEQ)) CNEE_CUST_SEQ" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'C', NVL2(CUST_SEQ, CUST_CNT_CD || CUST_SEQ, ''))) CNEE_CUST_CODE" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'C', NVL2(CUST_SEQ, CUST_NM, 	 ''))) CNEE_CUST_NM" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'C', NVL2(CUST_SEQ, CUST_ADDR, 	 ''))) CNEE_CUST_ADDR" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'C', NVL2(CUST_SEQ, CUST_CTY_NM, ''))) CNEE_CUST_CTY_NM" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'C', NVL2(CUST_SEQ, CUST_STE_CD, ''))) CNEE_CUST_STE_CD" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'C', NVL2(CUST_SEQ, CUST_ZIP_ID, ''))) CNEE_CUST_ZIP_ID" ).append("\n"); 
		query.append("                 " ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'N', CUST_CNT_CD)) NTFY_CUST_CNT_CD" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'N', CUST_SEQ)) NTFY_CUST_SEQ" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'N', NVL2(CUST_SEQ, CUST_CNT_CD || CUST_SEQ, ''))) NTFY_CUST_CODE" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'N', CUST_NM)) NTFY_CUST_NM" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'N', CUST_ADDR)) NTFY_CUST_ADDR" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'N', CUST_CTY_NM)) NTFY_CUST_CTY_NM" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'N', CUST_STE_CD)) NTFY_CUST_STE_CD" ).append("\n"); 
		query.append("            ,MAX(DECODE(BKG_CUST_TP_CD, 'N', CUST_ZIP_ID)) NTFY_CUST_ZIP_ID" ).append("\n"); 
		query.append("        FROM (SELECT DECODE(SO.TRSP_BND_CD, 'O', EDI.BKG_NO, SO.BKG_NO) BKG_NO" ).append("\n"); 
		query.append("                    ,EDI.BIL_ISS_KNT" ).append("\n"); 
		query.append("                    ,B.BKG_CUST_TP_CD" ).append("\n"); 
		query.append("                    ,B.CUST_CNT_CD" ).append("\n"); 
		query.append("                    ,B.CUST_SEQ" ).append("\n"); 
		query.append("                    ,TRIM(REPLACE(REPLACE(REPLACE(B.CUST_NM, CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')) CUST_NM" ).append("\n"); 
		query.append("                    ,TRIM(REPLACE(REPLACE(REPLACE(B.CUST_ADDR, CHR(13), ' '), CHR(10), ' '), CHR(43), ' '))CUST_ADDR" ).append("\n"); 
		query.append("                    ,TRIM(REPLACE(REPLACE(REPLACE(NVL(B.CUST_CTY_NM, M.CTY_NM), CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')) CUST_CTY_NM" ).append("\n"); 
		query.append("                    ,TRIM(REPLACE(REPLACE(REPLACE(NVL(B.CUST_STE_CD, M.STE_CD), CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')) CUST_STE_CD" ).append("\n"); 
		query.append("                    ,TRIM(REPLACE(REPLACE(REPLACE(NVL(B.CUST_ZIP_ID, M.ZIP_CD), CHR(13), ' '), CHR(10), ' '), CHR(43), ' ')) CUST_ZIP_ID    " ).append("\n"); 
		query.append("                    ,ROW_NUMBER() OVER(PARTITION BY B.BKG_NO, B.BKG_CUST_TP_CD, B.CUST_CNT_CD, B.CUST_SEQ ORDER BY M.PRMRY_CHK_FLG DESC, M.ADDR_SEQ) RK           " ).append("\n"); 
		query.append("                FROM TRS_TRSP_EDI_TMP      STMP" ).append("\n"); 
		query.append("                    ,TRS_TRSP_RAIL_BIL_ORD SO" ).append("\n"); 
		query.append("                    ,TRS_TRSP_EDI_RAIL_ORD EDI" ).append("\n"); 
		query.append("                    ,BKG_CUSTOMER          B" ).append("\n"); 
		query.append("                    ,MDM_CUST_ADDR         M" ).append("\n"); 
		query.append("               WHERE 1 = 1" ).append("\n"); 
		query.append("                 AND STMP.TRSP_EDI_SND_NO = @[strsp_edi_snd_no]" ).append("\n"); 
		query.append("                 AND STMP.TRSP_SO_OFC_CTY_CD = SO.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("                 AND STMP.TRSP_SO_SEQ = SO.TRSP_SO_SEQ" ).append("\n"); 
		query.append("                 AND SO.TRSP_SO_OFC_CTY_CD = EDI.TRSP_SO_OFC_CTY_CD(+)" ).append("\n"); 
		query.append("                 AND SO.TRSP_SO_SEQ = EDI.TRSP_SO_SEQ(+)" ).append("\n"); 
		query.append("                 AND B.BKG_NO = SO.BKG_NO" ).append("\n"); 
		query.append("                 AND B.CUST_CNT_CD = M.CUST_CNT_CD(+)" ).append("\n"); 
		query.append("                 AND B.CUST_SEQ = M.CUST_SEQ(+)" ).append("\n"); 
		query.append("                 AND B.BKG_CUST_TP_CD IN ('S', 'C', 'N')" ).append("\n"); 
		query.append("                 AND M.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                 AND EDI.BIL_ISS_KNT =" ).append("\n"); 
		query.append("                     (SELECT MAX(BIL_ISS_KNT)" ).append("\n"); 
		query.append("                        FROM TRS_TRSP_EDI_RAIL_ORD" ).append("\n"); 
		query.append("                       WHERE TRSP_SO_OFC_CTY_CD = EDI.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("                         AND TRSP_SO_SEQ = EDI.TRSP_SO_SEQ))" ).append("\n"); 
		query.append("       WHERE rk = 1" ).append("\n"); 
		query.append("       GROUP BY BKG_NO    " ).append("\n"); 
		query.append("    ) CUST" ).append("\n"); 
		query.append(" WHERE A.TRSP_SO_OFC_CTY_CD = O.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("   AND A.TRSP_SO_SEQ = O.TRSP_SO_SEQ" ).append("\n"); 
		query.append("   AND A.TRSP_SO_OFC_CTY_CD = SP.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("   AND A.TRSP_SO_SEQ = SP.TRSP_SO_SEQ" ).append("\n"); 
		query.append("   AND O.VNDR_SEQ = C.VNDR_SEQ(+)" ).append("\n"); 
		query.append("   AND A.BKG_NO = D.BKG_NO(+)" ).append("\n"); 
		query.append("   AND A.EQ_NO = D.CNTR_NO(+)" ).append("\n"); 
		query.append("   AND A.BL_NO = AI.BL_NO(+)" ).append("\n"); 
		query.append("   AND 'US' = AI.CNT_CD(+)" ).append("\n"); 
		query.append("   AND O.FM_NOD_CD = I.YD_CD" ).append("\n"); 
		query.append("   AND O.TO_NOD_CD = K.YD_CD" ).append("\n"); 
		query.append("   AND A.BKG_NO = BF.BKG_NO(+)" ).append("\n"); 
		query.append("   AND BF.BKG_CUST_TP_CD(+) = 'F'" ).append("\n"); 
		query.append("   AND A.BKG_NO = BE.BKG_NO(+)" ).append("\n"); 
		query.append("   AND BE.BKG_CUST_TP_CD(+) = 'E'" ).append("\n"); 
		query.append("   AND A.BKG_NO = M.BKG_NO(+)" ).append("\n"); 
		query.append("   AND A.EQ_NO = M.CNTR_NO(+)   " ).append("\n"); 
		query.append("   AND A.VSL_CD = Q.VSL_CD(+)" ).append("\n"); 
		query.append("   AND NVL(A.POL_NOD_CD, A.FM_NOD_CD) = S.EDI_RCV_NOD_CD(+)" ).append("\n"); 
		query.append("   AND NVL(A.POD_NOD_CD, A.TO_NOD_CD) = T.EDI_RCV_NOD_CD(+)" ).append("\n"); 
		query.append("   AND A.BKG_NO = BK.BKG_NO(+)" ).append("\n"); 
		query.append("   AND A.DELT_FLG = 'N'" ).append("\n"); 
		query.append("   AND A.BL_NO = CND.BL_NO(+)" ).append("\n"); 
		query.append("   AND A.BKG_NO = CND.BKG_NO(+)	" ).append("\n"); 
		query.append("   AND DECODE(A.TRSP_BND_CD, 'I', DECODE(SUBSTR(A.TO_NOD_CD, 1, 2), 'US', 'US', 'CA', 'CA', ''), 'O', DECODE(SUBSTR(A.FM_NOD_CD, 1, 2), 'US', 'US', 'CA', 'CA', ''), '') = CND.CNT_CD(+)" ).append("\n"); 
		query.append("   AND CND.VSL_CD = CV.VSL_CD(+)" ).append("\n"); 
		query.append("   AND CND.SKD_VOY_NO = CV.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("   AND CND.SKD_DIR_CD = CV.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("   AND CND.POD_CD = CV.PORT_CD(+)" ).append("\n"); 
		query.append("   AND K.OFC_CD = ROFC.OFC_CD(+)" ).append("\n"); 
		query.append("   AND DECODE(K.OFC_CD, ROFC.OFC_CD, ROFC.CTRL_OFC_CD, K.OFC_CD) = OFC.OFC_CD" ).append("\n"); 
		query.append("   AND D.BKG_NO = SEAL.BKG_NO(+)" ).append("\n"); 
		query.append("   AND D.CNTR_NO = SEAL.CNTR_NO(+)" ).append("\n"); 
		query.append("   AND SEAL.CNTR_SEAL_SEQ(+) = 1" ).append("\n"); 
		query.append("   AND A.BKG_NO = SHIP_DE.BKG_NO(+)" ).append("\n"); 
		query.append("   AND A.EQ_NO = SHIP_DE.CNTR_NO(+)" ).append("\n"); 
		query.append("   AND SHIP_DE.DG_DECL_SEQ(+) = 1" ).append("\n"); 
		query.append("   AND A.BKG_NO = CONS_DE.BKG_NO(+)" ).append("\n"); 
		query.append("   AND A.EQ_NO = CONS_DE.CNTR_NO(+)" ).append("\n"); 
		query.append("   AND CONS_DE.DG_DECL_SEQ(+) = 2  " ).append("\n"); 
		query.append("   AND A.BKG_NO = CUST.BKG_NO(+) " ).append("\n"); 
		query.append(" ORDER BY C.USA_EDI_CD,A.TRSP_SO_SEQ" ).append("\n"); 

	}
}