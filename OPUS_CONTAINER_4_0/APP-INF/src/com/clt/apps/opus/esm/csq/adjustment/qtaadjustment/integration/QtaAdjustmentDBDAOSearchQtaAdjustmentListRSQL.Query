<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="QtaAdjustmentDBDAOSearchQtaAdjustmentListRSQL">
			<desc><![CDATA[QTA Adjustment by VVD 정보를 조회합니다.]]></desc>
			<sql><![CDATA[
SELECT QTA_RLSE_VER_NO
        ,TRD_CD
        ,RLANE_CD
        ,SUB_TRD_CD 
        ,DIR_CD
        ,IOC_CD
        ,BSE_MON
        ,BSE_WK
        ,VVD
        ,DECODE(NVL(CSQ_CNG_TP_CD, 'I'), 'I', 'Y', 'N') AS POTN_LNK
        ,CSQ_CNG_TP_CD
        ,FNL_BSA_CAPA
        ,LOD_QTY
        ,GRS_REV
        ,COA_BSE_MON
        ,COA_BSE_WK
        ,COA_VVD
        ,COA_FNL_BSA_CAPA
--        ,DECODE(FLAG, 'U', LOD_QTY, NULL) AS COA_LOD_QTY
--        ,DECODE(FLAG, 'U', GRS_REV, NULL) AS COA_GRS_REV
        -- BSA가 변경되었을 때 이전의 L/F를 구해서 변경된 BSA 곱해서 변경되어야 하는 물량과 REV를 보여준다.
        ,DECODE(FLAG, 'U', DECODE(COA_FNL_BSA_CAPA, FNL_BSA_CAPA, LOD_QTY
                                                                , DECODE(NVL(CSQ_CNG_TP_CD, 'I'), 'I', round(COA_FNL_BSA_CAPA * round(decode(FNL_BSA_CAPA, 0, 0, LOD_QTY/FNL_BSA_CAPA),4)), LOD_QTY)
                                  )
                         , NULL) AS COA_LOD_QTY
        ,DECODE(FLAG, 'U', DECODE(COA_FNL_BSA_CAPA, FNL_BSA_CAPA, GRS_REV
                                                                ,DECODE(NVL(CSQ_CNG_TP_CD, 'I'), 'I', round(COA_FNL_BSA_CAPA * round(decode(FNL_BSA_CAPA, 0, 0, LOD_QTY/FNL_BSA_CAPA),4))* round(decode(LOD_QTY, 0, 0, GRS_REV/LOD_QTY)), GRS_REV)
                                 )
                         , NULL) AS COA_GRS_REV
        ,CASE
              -- BSA 변경 부분을 제일 먼저 체크되어야 함
              -- BSA 변경시  PORTION 이 끊어지고 BSA가 0인 경우를 제외하고 상태를 R로 함(즉 단순 스케줄 업데이트만 가능하도록 함)
              WHEN FLAG = 'U' AND FNL_BSA_CAPA <> COA_FNL_BSA_CAPA THEN DECODE(NVL(CSQ_CNG_TP_CD, 'I'), 'I', 'B', DECODE(COA_FNL_BSA_CAPA, 0, 'B','R')) 
              WHEN FLAG = 'U' AND BSE_MON      <> COA_BSE_MON      THEN 'M'
              WHEN FLAG = 'U' AND BSE_WK       <> COA_BSE_WK       THEN 'W'
                                                                   ELSE FLAG
         END AS STS_FLAG
         -- BSA가 0으로 되는 경우는 상태를 R로 변경하여 단순 스케줄 업데이트를 막고
         -- 화면에서 VVD SELECT를 통하여 처리할 수 있도록 함
        ,DECODE(FLAG, 'U', DECODE(COA_FNL_BSA_CAPA, 0, 'R', FLAG), FLAG) AS FLAG
    FROM (
           SELECT O_QTA_RLSE_VER_NO  AS QTA_RLSE_VER_NO
                 ,O_TRD_CD           AS TRD_CD
                 ,O_RLANE_CD         AS RLANE_CD
                 ,O_SUB_TRD_CD       AS SUB_TRD_CD
                 ,O_DIR_CD           AS DIR_CD
                 ,O_IOC_CD           AS IOC_CD
                 ,O_VVD
                 ,MAX(BSE_MON)       AS BSE_MON
                 ,MAX(BSE_WK)        AS BSE_WK
                 ,MAX(VVD)           AS VVD
                 ,MAX(CSQ_CNG_TP_CD) AS CSQ_CNG_TP_CD
                 ,MAX(FNL_BSA_CAPA)  AS FNL_BSA_CAPA
                 ,MAX(LOD_QTY)       AS LOD_QTY
                 ,MAX(GRS_REV)       AS GRS_REV
                 ,MAX(CASE WHEN NVL(CSQ_INFO, '*') = NVL(COA_INFO, '*') THEN '' ELSE SLS_MON                END) AS COA_BSE_MON
                 ,MAX(CASE WHEN NVL(CSQ_INFO, '*') = NVL(COA_INFO, '*') THEN '' ELSE COST_WK                END) AS COA_BSE_WK
                 ,MAX(CASE WHEN NVL(CSQ_INFO, '*') = NVL(COA_INFO, '*') THEN '' ELSE COA_VVD                END) AS COA_VVD
                 ,MAX(CASE WHEN NVL(CSQ_INFO, '*') = NVL(COA_INFO, '*') THEN '' ELSE FNL_CO_BSA_CAPA || '' END) AS COA_FNL_BSA_CAPA
                 ,CASE WHEN MAX(CSQ_INFO) = MAX(COA_INFO) THEN 'R'
                       WHEN NVL(MAX(CSQ_INFO), '*') = '*' THEN 'I'
                       WHEN NVL(MAX(COA_INFO), '*') = '*' THEN 'D'
                                                          ELSE 'U'
                  END AS FLAG
                 ,MAX(CSQ_INFO) AS CSQ_INFO
                 ,MAX(COA_INFO) AS COA_INFO
             FROM (
                     SELECT B1.QTA_RLSE_VER_NO
                           ,B1.TRD_CD
                           ,B1.DIR_CD
                           ,B1.SUB_TRD_CD
                           ,B1.RLANE_CD
                           ,B1.BSE_MON
                           ,B1.BSE_WK
                           ,B1.VSL_CD || B1.SKD_VOY_NO || B1.DIR_CD AS VVD
                           ,B1.CSQ_CNG_TP_CD
                           ,B1.FNL_BSA_CAPA
                           ,B1.LOD_QTY
                           ,B1.GRS_REV
                           ,SUBSTR(B2.SLS_YRMON, -2) AS SLS_MON
                           ,B2.COST_WK
                           ,B2.VSL_CD || B2.SKD_VOY_NO || B2.DIR_CD AS COA_VVD
                           ,B2.FNL_CO_BSA_CAPA
                           ,B1.TRD_CD || B1.SUB_TRD_CD || B1.RLANE_CD || B1.DIR_CD || B1.VSL_CD || B1.SKD_VOY_NO || B1.DIR_CD || B1.BSE_MON || B1.BSE_WK || B1.FNL_BSA_CAPA AS CSQ_INFO
                           ,B2.TRD_CD || B2.SUB_TRD_CD || B2.RLANE_CD || B2.DIR_CD || B2.VSL_CD || B2.SKD_VOY_NO || B2.DIR_CD || SUBSTR(B2.SLS_YRMON,-2) || B2.COST_WK || B2.FNL_CO_BSA_CAPA AS COA_INFO
                           ,NVL(B1.QTA_RLSE_VER_NO, B2.QTA_RLSE_VER_NO)       AS O_QTA_RLSE_VER_NO
                           ,NVL(B1.TRD_CD         , B2.TRD_CD)                AS O_TRD_CD
                           ,NVL(B1.RLANE_CD       , B2.RLANE_CD)              AS O_RLANE_CD
                           ,NVL(B1.SUB_TRD_CD     , B2.SUB_TRD_CD)            AS O_SUB_TRD_CD
                           ,NVL(B1.IOC_CD         , B2.IOC_CD)                AS O_IOC_CD
                           ,NVL(B1.DIR_CD         , B2.DIR_CD)                AS O_DIR_CD
                           ,NVL(B1.BSE_MON        , SUBSTR(B2.SLS_YRMON, -2)) AS O_BSE_MON
                           ,NVL(B1.BSE_WK         , B2.COST_WK)               AS O_BSE_WK
                           ,NVL(B1.VSL_CD || B1.SKD_VOY_NO || B1.DIR_CD, B2.VSL_CD || B2.SKD_VOY_NO || B2.DIR_CD) AS O_VVD
                       FROM (
                              SELECT 
                                     V.QTA_RLSE_VER_NO
                                    ,V.TRD_CD
                                    ,V.DIR_CD
                                    ,V.SUB_TRD_CD
                                    ,V.RLANE_CD
                                    ,V.BSE_MON
                                    ,V.BSE_WK
                                    ,V.VSL_CD
                                    ,V.SKD_VOY_NO
                                    ,V.FNL_BSA_CAPA
                                    ,Q.LOD_QTY
                                    ,Q.GRS_REV
                                    ,V.IOC_CD
                                    ,Q.CSQ_CNG_TP_CD
                                FROM CSQ_CFM_TGT_VVD V
                                    ,(
                                      SELECT QTA_RLSE_VER_NO
                                            ,TRD_CD
                                            ,RLANE_CD
                                            ,DIR_CD
                                            ,VSL_CD
                                            ,SKD_VOY_NO
                                            ,SKD_DIR_CD
                                            ,CSQ_CNG_TP_CD
                                            ,SUM(LOD_QTY) AS LOD_QTY
                                            ,ROUND(SUM(LOD_QTY*GRS_RPB_REV)) AS GRS_REV
                                        FROM CSQ_CFM_QTA
                                       WHERE 1=1
                                         AND QTA_RLSE_VER_NO = ( SELECT QTA_RLSE_VER_NO
                                                                   FROM CSQ_QTA_RLSE_VER
                                                                  WHERE BSE_TP_CD      = @[f_bse_tp_cd]
                                                                    AND BSE_YR         = @[f_bse_yr]
                                                                    AND BSE_QTR_CD     = @[f_bse_qtr_cd]
                                                                    AND CSQ_VER_STS_CD = 'R' )
                                         AND OFC_VW_CD       = 'L'
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
                                         AND TRD_CD          = @[f_trd_cd]
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
                                         AND RLANE_CD        = @[f_rlane_cd]
#end
#if (${f_dir_cd} != '' && ${f_dir_cd} != 'All')
                                         AND DIR_CD          = @[f_dir_cd]
#end
                                       GROUP BY QTA_RLSE_VER_NO
                                               ,TRD_CD
                                               ,RLANE_CD
                                               ,DIR_CD
                                               ,VSL_CD
                                               ,SKD_VOY_NO
                                               ,SKD_DIR_CD
                                               ,CSQ_CNG_TP_CD
                                     ) Q
                               WHERE 1=1
                                 AND V.QTA_RLSE_VER_NO = Q.QTA_RLSE_VER_NO(+)
                                 AND V.TRD_CD          = Q.TRD_CD(+)
                                 AND V.RLANE_CD        = Q.RLANE_CD(+)
                                 AND V.DIR_CD          = Q.DIR_CD(+)
                                 AND V.VSL_CD          = Q.VSL_CD(+)
                                 AND V.SKD_VOY_NO      = Q.SKD_VOY_NO(+)
                                 AND V.SKD_DIR_CD      = Q.SKD_DIR_CD(+)
                                 AND V.QTA_RLSE_VER_NO = SUBSTR(@[f_bse_yr],-2) ||@[f_bse_qtr_cd]||'02'
                                 AND V.BSE_TP_CD       = @[f_bse_tp_cd]
                                 AND V.BSE_YR          = @[f_bse_yr]
                                 AND V.BSE_QTR_CD      = @[f_bse_qtr_cd]
#if (${f_bse_wk} != '')
                                 AND V.BSE_WK          = @[f_bse_wk]
#end
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
                                 AND V.TRD_CD          = @[f_trd_cd]
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
                                 AND V.RLANE_CD        = @[f_rlane_cd]
#end
#if (${f_dir_cd} != '' && ${f_dir_cd} != 'All')
                                 AND V.DIR_CD          = @[f_dir_cd]
#end

                            ) B1
                            FULL OUTER JOIN
                            (
                              SELECT 
                                     A3.QTA_RLSE_VER_NO
                                    ,A1.TRD_CD
                                    ,A1.SUB_TRD_CD
                                    ,A1.RLANE_CD
                                    ,A1.DIR_CD
                                    ,A1.VSL_CD
                                    ,A1.SKD_VOY_NO
                                    ,A1.SLS_YRMON
                                    ,A1.COST_WK
                                    ,A1.IOC_CD
                                    ,ROUND(NVL(A2.FNL_CO_BSA_CAPA, 0)) AS FNL_CO_BSA_CAPA
                                FROM COA_MON_VVD       A1
                                    ,BSA_VVD_MST       A2
                                    ,(
                                       SELECT DISTINCT
                                              S1.QTA_RLSE_VER_NO
                                             ,S2.BSE_TP_CD
                                             ,S2.BSE_YR
                                             ,S2.BSE_QTR_CD
                                             ,S2.TRD_CD
                                             ,S2.RLANE_CD
                                             ,S2.DIR_CD
                                         FROM CSQ_QTA_RLSE_VER S1
                                              -- 해당 분기의 SETTING 한 LANE의 정보를 걸어준다
                                             ,(
                                                SELECT 
                                                       A1.BSE_TP_CD
                                                      ,A1.BSE_YR
                                                      ,A1.BSE_QTR_CD
                                                      ,A1.TRD_CD
                                                      ,A1.RLANE_CD
                                                      ,A1.SUB_TRD_CD
                                                      ,NVL(A1.LANE_DIR_CD, A2.VSL_SLAN_DIR_CD) DIR_CD
                                                FROM CSQ_QTA_LANE_MGMT A1, MDM_VSL_SVC_LANE_DIR A2
                                                WHERE 1=1
                                                AND A1.BSE_TP_CD            = @[f_bse_tp_cd]
                                                AND A1.BSE_YR               = @[f_bse_yr]
                                                AND A1.BSE_QTR_CD           = @[f_bse_qtr_cd]
                                                AND A1.CSQ_ACT_FLG          = 'Y'  -- FIX
                                                AND A1.IAS_SCTR_FLG         = 'N'  -- Overall:N / Sector:Y
                                                AND A2.DELT_FLG             = 'N'  -- FIX
                                                AND SUBSTR(A1.RLANE_CD,0,3) = A2.VSL_SLAN_CD
                                                AND A2.VSL_SLAN_DIR_CD      = NVL(A1.LANE_DIR_CD, A2.VSL_SLAN_DIR_CD)
                                              ) S2
                                        WHERE 1=1
                                          AND S1.BSE_TP_CD      = S2.BSE_TP_CD
                                          AND S1.BSE_YR         = S2.BSE_YR
                                          AND S1.BSE_QTR_CD     = S2.BSE_QTR_CD
                                          AND S1.CSQ_VER_STS_CD = 'R'  -- FIX
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
                                          AND S2.TRD_CD         = @[f_trd_cd]
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
                                          AND S2.RLANE_CD       = @[f_rlane_cd]
#end
#if (${f_dir_cd} != '' && ${f_dir_cd} != 'All')
                                          AND S2.DIR_CD         = @[f_dir_cd]
#end
								 ) A3
                               WHERE A1.TRD_CD         = A2.TRD_CD     (+)
                                 AND A1.RLANE_CD       = A2.RLANE_CD   (+)
                                 AND A1.VSL_CD         = A2.VSL_CD     (+)
                                 AND A1.SKD_VOY_NO     = A2.SKD_VOY_NO (+)
                                 AND A1.DIR_CD         = A2.SKD_DIR_CD (+)
                                 AND A1.IOC_CD         = A2.IOC_CD     (+)
                                 AND A1.TRD_CD         = A3.TRD_CD
                                 AND A1.RLANE_CD       = A3.RLANE_CD
                                 AND A1.DIR_CD         = A3.DIR_CD
#if (${f_bse_wk} != '')
                                 AND A1.COST_WK        = @[f_bse_wk]
#end
                                 AND A1.DELT_FLG       = 'N'
                                 AND A1.IOC_CD         = DECODE(A1.RLANE_CD, 'RBCCO', 'I', A1.IOC_CD) -- RBCCO 노선은 IOC_CD = 'I' 인것만
                                 AND SUBSTR(A1.SLS_YRMON, 1, 4)||A1.COST_WK BETWEEN @[f_bse_yr]||@[f_fm_wk] AND @[f_bse_yr]||@[f_to_wk] 
                                 AND NOT EXISTS ( SELECT 1
                                                    FROM CSQ_QTA_TGT_VVD S1
                                                   WHERE S1.BSE_TP_CD  = @[f_bse_tp_cd]
                                                     AND S1.BSE_YR     = @[f_bse_yr]
                                                     AND S1.BSE_QTR_CD = @[f_bse_qtr_cd]
                                                     AND S1.DELT_FLG   = 'Y'
                                                     AND A1.TRD_CD     = S1.TRD_CD
                                                     AND A1.RLANE_CD   = S1.RLANE_CD
                                                     AND A1.VSL_CD     = S1.VSL_CD
                                                     AND A1.SKD_VOY_NO = S1.SKD_VOY_NO
                                                     AND A1.DIR_CD     = S1.DIR_CD
                                                )
                            ) B2
                         ON B1.QTA_RLSE_VER_NO = B2.QTA_RLSE_VER_NO
                        AND B1.TRD_CD          = B2.TRD_CD
                        AND B1.SUB_TRD_CD      = B2.SUB_TRD_CD
                        AND B1.DIR_CD          = B2.DIR_CD
                        AND B1.RLANE_CD        = B2.RLANE_CD
                        AND B1.IOC_CD          = B2.IOC_CD
                        AND B1.VSL_CD          = B2.VSL_CD
                        AND B1.SKD_VOY_NO      = B2.SKD_VOY_NO
                  )
         GROUP BY O_QTA_RLSE_VER_NO
                 ,O_TRD_CD
                 ,O_RLANE_CD
                 ,O_SUB_TRD_CD
                 ,O_DIR_CD
                 ,O_IOC_CD
                 ,O_VVD
         )
#if (${f_portion_link} != '' && ${f_portion_link} != 'All')
   WHERE DECODE(CSQ_CNG_TP_CD, 'I', 'Y', 'N') = @[f_portion_link]
#end
ORDER BY TRD_CD
        ,SUB_TRD_CD 
        ,RLANE_CD
        ,DIR_CD
        ,NVL(COA_BSE_MON, BSE_MON)
        ,NVL(BSE_WK, COA_BSE_WK)			]]></sql>
			<params>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_bse_qtr_cd" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_bse_wk" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_to_wk" type="12" value="" out="N"/>
				<param name="f_portion_link" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
