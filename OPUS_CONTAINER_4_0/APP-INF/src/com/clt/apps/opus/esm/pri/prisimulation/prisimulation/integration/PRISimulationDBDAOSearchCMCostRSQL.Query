<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PRISimulationDBDAOSearchCMCostRSQL">
			<desc><![CDATA[DAORSQLSearchCMCost]]></desc>
			<sql><![CDATA[
SELECT T1.*
  FROM (
    SELECT T.*,
           NVL((SELECT TRD_CD
              FROM MDM_DTL_REV_LANE M
             WHERE M.RLANE_CD LIKE T.SLAN_CD||'%'
               AND M.VSL_SLAN_DIR_CD = T.TRNK_SKD_DIR_CD
               AND M.FM_CONTI_CD = (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = T.POL_CD)
               AND M.TO_CONTI_CD = (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = T.POD_CD)
           ),COA_RLANE_TRD_CONV_FNC(T.TRNK_SKD_DIR_CD,T.SLAN_CD,T.POL_CD,T.POD_CD )) AS TRD_CD,
           NVL((SELECT SUB_TRD_CD
              FROM MDM_DTL_REV_LANE M
             WHERE M.RLANE_CD LIKE T.SLAN_CD||'%'
               AND M.VSL_SLAN_DIR_CD = T.TRNK_SKD_DIR_CD
               AND M.FM_CONTI_CD = (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = T.POL_CD)
               AND M.TO_CONTI_CD = (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = T.POD_CD)
             ),
             (SELECT SUB_TRD_CD
              FROM MDM_DTL_REV_LANE M
             WHERE M.RLANE_CD = 'RBCCO'
               AND M.VSL_SLAN_DIR_CD = 'E'
               AND M.FM_CONTI_CD = (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = T.POL_CD)
               AND M.TO_CONTI_CD = (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = T.POD_CD)
            )) AS SUB_TRD_CD
      FROM (
        SELECT (SELECT T_DTL.VSL_SLAN_CD
                  FROM PRD_PROD_CTL_ROUT_DTL T_DTL
                 WHERE T_DTL.PCTL_NO = M.PCTL_NO
                   AND T_DTL.PCTL_SEQ = PRD_GET_TLANE_FNC(M.PCTL_NO,'SEQ')
               ) AS SLAN_CD,
--               (SELECT /*+INDEX_DESC(DTL XPKPRD_PROD_CTL_ROUT_DTL)*/
--                       TO_CHAR(DTL.ARR_ST_DT,'YYYY-MM-DD HH24:MI')
--                  FROM PRD_PROD_CTL_ROUT_DTL DTL, PRD_INLND_ROUT_MST O
--                 WHERE PCTL_NO = M.PCTL_NO
--                   AND DTL.PCTL_IO_BND_CD = 'O'
--                   AND DTL.ROUT_ORG_NOD_CD = O.ROUT_ORG_NOD_CD
--                   AND DTL.ROUT_DEST_NOD_CD = O.ROUT_DEST_NOD_CD
--                   AND DTL.ROUT_SEQ = O.ROUT_SEQ
--                   AND DTL.ORG_NOD_CD = O.FULL_RTN_YD_CD
--                   AND DTL.ROUT_SEQ > 0
--                   AND DTL.NOD_LNK_DIV_CD = 'N'
--                   AND ROWNUM=1
--                 UNION ALL
--                SELECT /*+INDEX_DESC(DTL XPKPRD_PROD_CTL_ROUT_DTL)*/
--                       TO_CHAR(DTL.ARR_ST_DT,'YYYY-MM-DD HH24:MI')
--                  FROM PRD_PROD_CTL_ROUT_DTL DTL
--                 WHERE DTL.PCTL_NO = M.PCTL_NO
--                   AND DTL.PCTL_IO_BND_CD = 'O'
--                   AND DTL.ROUT_SEQ = 0
--                   AND ROWNUM=1
--               ) AS CCT,
               TO_CHAR((CASE (SELECT COUNT(*)
                                FROM prd_prod_ctl_mst m1
                               WHERE m1.POL_NOD_CD = (SELECT /*+ index(A XPKPRD_PROD_CTL_ROUT_DTL) */ DEST_NOD_CD
                                                        FROM prd_prod_ctl_rout_dtl dtl
                                                       WHERE dtl.pctl_no = m1.pctl_no
                                                         AND dtl.DEST_NOD_TP_CD <> 'Z'
                                                         AND dtl.NOD_LNK_DIV_CD = 'L'
                                                         AND dtl.MTY_YD_FLG = 'N'
                                                         AND rownum = 1)
                                 AND m1.pctl_no = M.PCTL_NO)
                        WHEN 0 THEN
                         (NVL(PRD_GET_INLND_CCT_FNC(M.PCTL_NO),
                              (SELECT /*+INDEX_DESC(DTL XPKPRD_PROD_CTL_ROUT_DTL)*/
                                      DTL.ARR_ST_DT
                                 FROM PRD_PROD_CTL_ROUT_DTL DTL
                                     ,PRD_INLND_ROUT_MST    O
                                WHERE DTL.PCTL_NO = M.PCTL_NO
                                  AND DTL.PCTL_IO_BND_CD = 'O'
                                  AND DTL.ROUT_ORG_NOD_CD = O.ROUT_ORG_NOD_CD
                                  AND DTL.ROUT_DEST_NOD_CD = O.ROUT_DEST_NOD_CD
                                  AND DTL.ROUT_SEQ = O.ROUT_SEQ
                                  AND DTL.ORG_NOD_CD = O.FULL_RTN_YD_CD
                                  AND DTL.ROUT_SEQ > 0
                                  AND DTL.NOD_LNK_DIV_CD = 'N'
                                  AND ROWNUM = 1
                               UNION ALL
                               SELECT /*+INDEX_DESC(DTL XPKPRD_PROD_CTL_ROUT_DTL)*/
                                      DTL.ARR_ST_DT
                                 FROM PRD_PROD_CTL_ROUT_DTL DTL
                                WHERE DTL.PCTL_NO = M.PCTL_NO
                                  AND DTL.PCTL_IO_BND_CD = 'O'
                                  AND DTL.ROUT_SEQ = 0
                                  AND ROWNUM = 1)))  
                        ELSE	PRD_COMMON_PKG.PRD_GET_CCT_BY_PC_FNC(M.PCTL_NO)
                        END),
               'YYYY-MM-DD HH24:MI') AS CCT,
               (SELECT /*+INDEX_ASC(DTL XPKPRD_PROD_CTL_ROUT_DTL)*/
                       TO_CHAR(DTL.DEP_FSH_DT,'YYYY-MM-DD HH24:MI')
                  FROM PRD_PROD_CTL_ROUT_DTL DTL, PRD_INLND_ROUT_MST I
                 WHERE PCTL_NO = M.PCTL_NO
                   AND DTL.PCTL_IO_BND_CD = 'I'
                   AND DTL.ROUT_ORG_NOD_CD = I.ROUT_ORG_NOD_CD
                   AND DTL.ROUT_DEST_NOD_CD = I.ROUT_DEST_NOD_CD
                   AND DTL.ROUT_SEQ = I.ROUT_SEQ
                   AND DTL.DEST_NOD_CD = I.FULL_PKUP_YD_CD
                   AND DTL.ROUT_SEQ > 0
                   AND DTL.NOD_LNK_DIV_CD = 'N'
                   AND ROWNUM=1
                 UNION ALL
                SELECT /*+INDEX_ASC(DTL XPKPRD_PROD_CTL_ROUT_DTL)*/
                       TO_CHAR(DTL.DEP_FSH_DT,'YYYY-MM-DD HH24:MI')
                  FROM PRD_PROD_CTL_ROUT_DTL DTL
                 WHERE DTL.PCTL_NO = M.PCTL_NO
                   AND DTL.PCTL_IO_BND_CD = 'I'
                   AND DTL.ROUT_SEQ = 0
                   AND ROWNUM=1
               ) AS CGO_AVAL_HRS,
               TTL_TZTM_HRS TTL_TZTM,
               LPAD (FLOOR (TTL_TZTM_HRS / 24), 2, 0) || LPAD (MOD (TTL_TZTM_HRS, 24), 2, 0) TTL_TZTM_HRS,
               OCN_ROUT_PRIO_CD,
               POR_CD,
               POR_NOD_CD,
               OB_ITCHG_CTNT,
               POL_CD,
               POL_NOD_CD,
               RTRIM (   MAX (DECODE (TS.RK,
                                        1, REPLACE (TS.VSL_SLAN_CD, '-(', '(')
                                       ))
                        || N1ST_TS_PORT_CD
                        || MAX (DECODE (TS.RK, 2, TS.VSL_SLAN_CD))
                        || N2ND_TS_PORT_CD
                        || MAX (DECODE (TS.RK, 3, TS.VSL_SLAN_CD))
                        || N3RD_TS_PORT_CD
                        || MAX (DECODE (TS.RK, 4, TS.VSL_SLAN_CD)),
                        '-'
                       ) TS_ROUTE,
               POD_CD,
               POD_NOD_CD,
               IB_ITCHG_CTNT,
               DEL_CD,
               DEL_NOD_CD,
               MAX(DECODE(TS.RK,1,TS.SLAN_1,'')) AS N1ST_SLAN,
               MAX(DECODE(TS.RK,1,NVL(TS.SLAN_4,NVL(TS.SLAN_3,NVL(TS.SLAN_2,TS.SLAN_1))),'')) AS LAST_SLAN,
               LPAD(FLOOR(M.CML_OCN_TZTM_HRS/24), 2, 0) CML_OCN_TZTM_HRS,
               LPAD(TRUNC((M.CML_OCN_TZTM_HRS + M.CML_INLND_TZTM_HRS) / 24) + 1, 2, 0)  CML_INLND_TZTM_HRS,
               M.PCTL_NO,
               DECODE(ROUT_FLAG, 'G', 1, 'S', 1, 'T', 3, 'A', 4, 'V', 5, 'N', 6, 'D', 7) ORD,
               M.TRNK_SKD_DIR_CD,
               ROUND(estm_cm_cost_amt_20,2) estm_cm_cost_amt_20,
               ROUND(estm_cm_cost_amt_40,2) estm_cm_cost_amt_40,
               ROUND(estm_cm_cost_amt_45,2) estm_cm_cost_amt_45,
               ROUND(estm_cm_cost_amt_70,2) estm_cm_cost_amt_70,
    		   ROUND(- estm_cm_cost_amt_20,2) AS estm_cm_amt_20,
    		   ROUND(- estm_cm_cost_amt_40,2) AS estm_cm_amt_40,
    		   ROUND(- estm_cm_cost_amt_45,2) AS estm_cm_amt_45,
    		   ROUND(- estm_cm_cost_amt_70,2) AS estm_cm_amt_70,
               ROUND(estm_cm_cost_amt2_20,2) estm_cm_cost_amt2_20,
               ROUND(estm_cm_cost_amt2_40,2) estm_cm_cost_amt2_40,
               ROUND(estm_cm_cost_amt2_45,2) estm_cm_cost_amt2_45,
               ROUND(estm_cm_cost_amt2_70,2) estm_cm_cost_amt2_70,
               ROUND(- estm_cm_cost_amt2_20,2) AS estm_cm_amt2_20 ,
               ROUND(- estm_cm_cost_amt2_40,2) AS estm_cm_amt2_40 ,
               ROUND(- estm_cm_cost_amt2_45,2) AS estm_cm_amt2_45 ,
               ROUND(- estm_cm_cost_amt2_70,2) AS estm_cm_amt2_70 ,
			   SIGN(mis_avg_cnt_20) AS mis_avg_flg_20 ,
               SIGN(mis_avg_cnt_40) AS mis_avg_flg_40 ,
               SIGN(mis_avg_cnt_45) AS mis_avg_flg_45 ,
               SIGN(mis_avg_cnt_70) AS mis_avg_flg_70 ,
    		   COST_FLG,
    		   
    		   (SELECT 
                      CASE WHEN OB.TRSP_MOD_CD = 'WD' THEN DECODE(M.POD_CD, M.DEL_CD, 'F', 'B')
                		   WHEN OB.TRSP_MOD_CD = 'RD' THEN 'R'
                		   WHEN OB.TRSP_MOD_CD = 'TD' THEN 'T'
                		   WHEN OB.TRSP_MOD_CD = 'TR' THEN 'A'
                		   WHEN OB.TRSP_MOD_CD = 'TW' THEN DECODE(M.POD_CD, M.DEL_CD, 'E', 'U') END
                	FROM PRD_INLND_ROUT_MST OB
                   WHERE 1=1
                     AND (OB.ROUT_ORG_NOD_CD, OB.ROUT_DEST_NOD_CD, OB.ROUT_SEQ) =
                				      (SELECT DTL.ROUT_ORG_NOD_CD, DTL.ROUT_DEST_NOD_CD, ROUT_SEQ 
                				         FROM PRD_PROD_CTL_ROUT_DTL DTL
                				        WHERE DTL.PCTL_NO        = M.PCTL_NO   
                				          AND DTL.PCTL_IO_BND_CD = 'O'
                					      AND DTL.ROUT_SEQ       <> 0
                						  AND ROWNUM = 1)
                ) R_ORG_TRNS_MOD_CD,
                (SELECT 
                      CASE WHEN IB.TRSP_MOD_CD = 'WD' THEN DECODE(M.POD_CD, M.DEL_CD, 'F', 'B')
                		   WHEN IB.TRSP_MOD_CD = 'RD' THEN 'R'
                		   WHEN IB.TRSP_MOD_CD = 'TD' THEN 'T'
                		   WHEN IB.TRSP_MOD_CD = 'TR' THEN 'A'
                		   WHEN IB.TRSP_MOD_CD = 'TW' THEN DECODE(M.POD_CD, M.DEL_CD, 'E', 'U') END
                	FROM PRD_INLND_ROUT_MST IB
                   WHERE 1=1
                     AND (IB.ROUT_ORG_NOD_CD, IB.ROUT_DEST_NOD_CD, IB.ROUT_SEQ) =
                				      (SELECT DTL.ROUT_ORG_NOD_CD, DTL.ROUT_DEST_NOD_CD, ROUT_SEQ 
                				         FROM PRD_PROD_CTL_ROUT_DTL DTL
                				        WHERE DTL.PCTL_NO        = M.PCTL_NO   
                				          AND DTL.PCTL_IO_BND_CD = 'I'
                					      AND DTL.ROUT_SEQ       <> 0
                						  AND ROWNUM = 1)
                ) R_DEST_TRNS_MOD_CD
               
        FROM PRD_PROD_CTL_MST M,
          (
            SELECT PCTL_NO,
              RANK () OVER (PARTITION BY PCTL_NO
                ORDER BY PCTL_SEQ) RK,
              '-(' || VSL_SLAN_CD || ')-' VSL_SLAN_CD,
              LEAD(VSL_SLAN_CD, 0) OVER (PARTITION BY PCTL_NO ORDER BY PCTL_SEQ) AS SLAN_1,
              LEAD(VSL_SLAN_CD, 1) OVER (PARTITION BY PCTL_NO ORDER BY PCTL_SEQ) AS SLAN_2,
              LEAD(VSL_SLAN_CD, 2) OVER (PARTITION BY PCTL_NO ORDER BY PCTL_SEQ) AS SLAN_3,
              LEAD(VSL_SLAN_CD, 3) OVER (PARTITION BY PCTL_NO ORDER BY PCTL_SEQ) AS SLAN_4,
              UPD_IND_CD ROUT_FLAG
             ,ROUT.OCN_ROUT_PRIO_CD
            FROM PRD_PROD_CTL_ROUT_DTL DTL,
              PRD_OCN_ROUT ROUT
            WHERE PCTL_NO LIKE @[pctl_no]||'%'
              AND VSL_SLAN_CD IS NOT NULL
              AND DTL.ROUT_ORG_NOD_CD = ROUT.ORG_LOC_CD(+)
              AND DTL.ROUT_DEST_NOD_CD = ROUT.DEST_LOC_CD(+)
              AND DTL.ROUT_SEQ = ROUT.ROUT_SEQ(+) ) TS,
          ( 
              SELECT PCTL_NO
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'2',estm_cm_cost_amt,0)) estm_cm_cost_amt_20   --cm에 common_amt를 더해준다. cm에 dem/det를 - 해준다(CM/OP변경으로 dem/det삭제) 
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'4',estm_cm_cost_amt,0)) estm_cm_cost_amt_40  --cm에 common_amt를 더해준다. cm에 dem/det를 - 해준다(CM/OP변경으로 dem/det삭제) 
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'5',estm_cm_cost_amt,0)) estm_cm_cost_amt_45  --cm에 common_amt를 더해준다. cm에 dem/det를 - 해준다(CM/OP변경으로 dem/det삭제) 
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'7',estm_cm_cost_amt,0)) estm_cm_cost_amt_70  --cm에 common_amt를 더해준다. cm에 dem/det를 - 해준다(CM/OP변경으로 dem/det삭제) 
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'2',estm_cm_cost_amt2,0)) estm_cm_cost_amt2_20   --C.M Park EPP B 단가
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'4',estm_cm_cost_amt2,0)) estm_cm_cost_amt2_40   --C.M Park EPP B 단가
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'5',estm_cm_cost_amt2,0)) estm_cm_cost_amt2_45   --C.M Park EPP B 단가
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'7',estm_cm_cost_amt2,0)) estm_cm_cost_amt2_70   --C.M Park EPP B 단가
			 , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'2',mis_avg_cnt,0)) mis_avg_cnt_20   --contract 붙이지 못한 cost count 
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'4',mis_avg_cnt,0)) mis_avg_cnt_40  --contract 붙이지 못한 cost count
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'5',mis_avg_cnt,0)) mis_avg_cnt_45  --contract 붙이지 못한 cost count
             , SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'7',mis_avg_cnt,0)) mis_avg_cnt_70  --contract 붙이지 못한 cost count
    		 , 'Y' COST_FLG
                FROM ( 
                SELECT  PCTL_NO, CNTR_TPSZ_CD
                      , DECODE(B.stnd_cost_tp_cd, 'C', NVL(estm_usd_ttl_amt, 0), 0) estm_cm_cost_amt 
                                       -- 2014.12.17 Changing Account (51102001)
                      , DECODE(B.stnd_cost_tp_cd, 'C', DECODE (A.stnd_cost_cd , '51102001',  NVL(estm_usd_ttl_amt2, 0), NVL(estm_usd_ttl_amt,0)),0) estm_cm_cost_amt2 --C.M Park EPP B 단가
					  , DECODE(a.cost_ass_bse_cd||a.ctrt_rtn_flg,'CN',1,0) mis_avg_cnt
                FROM COA_COM_COST_PARA A , coa_stnd_acct_v B
                WHERE PCTL_NO LIKE @[pctl_no]||'%'
                AND B.pa_vw        = 'BKG' 
                AND A.stnd_cost_cd = B.stnd_cost_cd
				AND ESTM_USD_TTL_AMT <> 0
                )
                GROUP BY PCTL_NO
          ) CO
        WHERE M.PCTL_NO LIKE @[pctl_no]||'%'
          AND M.PCTL_NO = TS.PCTL_NO(+)
          AND M.PCTL_NO = CO.PCTL_NO(+)
          AND NVL(M.CNST_FLG,' ') <> 'X' -- X : SVC N
      GROUP BY TTL_TZTM_HRS,
               OCN_ROUT_PRIO_CD,
               POR_CD,
               POR_NOD_CD,
               OB_ITCHG_CTNT,
               POL_CD,
               POL_NOD_CD,
               POD_CD,
               POD_NOD_CD,
               IB_ITCHG_CTNT,
               DEL_CD,
               DEL_NOD_CD,
               M.PCTL_NO,
               M.TRNK_SKD_DIR_CD,
               N1ST_TS_PORT_CD,
               N2ND_TS_PORT_CD,
               N3RD_TS_PORT_CD,
               M.CML_OCN_TZTM_HRS,
               M.CML_INLND_TZTM_HRS,
               ROUT_FLAG,
               ESTM_CM_COST_AMT_20,
               ESTM_CM_COST_AMT_40,
               ESTM_CM_COST_AMT_45,
               ESTM_CM_COST_AMT_70,
               ESTM_CM_COST_AMT2_20,
               ESTM_CM_COST_AMT2_40,
               ESTM_CM_COST_AMT2_45,
               ESTM_CM_COST_AMT2_70,
			   MIS_AVG_CNT_20,
               MIS_AVG_CNT_40,
               MIS_AVG_CNT_45,
               MIS_AVG_CNT_70,
               COST_FLG
    ) T
     WHERE 1=1
#if (${dep_lane} != '') 
       AND N1ST_SLAN = @[dep_lane]
#end
#if (${arv_lane} != '') 
       AND LAST_SLAN = @[arv_lane]
#end
) T1
 WHERE 1=1
#if (${sub_trd_cd} != '') 
   AND SUB_TRD_CD = @[sub_trd_cd]
#end
#if (${org_trns_mod_cd} != '') 
   AND R_ORG_TRNS_MOD_CD = @[org_trns_mod_cd]
#end
#if (${dest_trns_mod_cd} != '') 
   AND R_DEST_TRNS_MOD_CD = @[dest_trns_mod_cd]
#end
ORDER BY OCN_ROUT_PRIO_CD, TTL_TZTM_HRS, PCTL_NO			]]></sql>
			<params>
				<param name="pctl_no" type="12" value="" out="N"/>
				<param name="dep_lane" type="12" value="" out="N"/>
				<param name="arv_lane" type="12" value="" out="N"/>
				<param name="sub_trd_cd" type="12" value="" out="N"/>
				<param name="org_trns_mod_cd" type="12" value="" out="N"/>
				<param name="dest_trns_mod_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
