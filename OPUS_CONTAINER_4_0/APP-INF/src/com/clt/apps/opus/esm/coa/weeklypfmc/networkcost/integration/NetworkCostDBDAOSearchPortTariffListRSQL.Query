<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkCostDBDAOSearchPortTariffListRSQL">
			<desc><![CDATA[History-----------------------------------------------
2010.05.06 이행지 [CHM-201003663] Port tariff vessel class 변경
2010.05.20 이행지 M:2010-05, W:2010-18  => M:2010-07,W:2010-27 부터 VSL_CLSS_CAPA 적용하도록
2010.06.23 이행지 M:2010-07, W:2010-27  => M:2010-08,W:2010-31 부터 VSL_CLSS_CAPA 적용하도록
2010.07.29 이윤정 M:2010-08, W:2010-31  => M:2010-10,W:2010-40 부터 VSL_CLSS_CAPA 적용하도록[CHM-201005034]
2010.09.27 이행지 [CHM-201006114-01] VSL_CLSS_CAPA 적용삭제 ]]></desc>
			<sql><![CDATA[
SELECT 0 AS CHK_FLAG
      , COST_STS
      , COST_YRMON
      , COST_WK
      , SLAN_CD
      , VSL_CD
      , SKD_VOY_NO
      , SKD_DIR_CD
      , PSO_MAX_SEQ
      , SUM(TTL_EXP) PSO_COST_TTL_AMT
      , SUM(PSO_TTL_EXP) PSO_COST_PSO_TTL_AMT
      , COUNT(*) TTL_CNT
      , SUM(PSO_CNT) PSO_CNT
      , SUM(COA_CNT) COA_CNT
   FROM (
#if (${f_yrtype} == 'W')      --20150806.MOD : MAX->SUM     
         SELECT ( CASE WHEN SUM(NVL(A.PORT_USD_AMT, 0)) OVER (PARTITION BY A.SLS_YRMON, A.COST_WK, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) <> 0
                       THEN 'C' 
                       --VVD에 전체에 대해서 하나라도 COA DATA가 있는 경우
                       WHEN SUM(NVL(A.PORT_USD_AMT, 0)) OVER (PARTITION BY A.SLS_YRMON, A.COST_WK, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD)= 0
                            AND SUM(NVL( A.INV_USD_AMT, 0)) OVER (PARTITION BY A.SLS_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0
                       THEN 'N'
                       --해당 VVD에 대한 데이터가 COA, PSO 둘다 모두 한 건도 없는 경우
                       ELSE DECODE(LAST_VALUE (A.SRC_PSO_BZTP_CD IGNORE NULLS) OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD, A.WRK_DT, A.WRK_SEQ ), 1, 'T', 2, 'E')
                       --COA는 없고 PSO쪽만 있는 경우 WRK_DT나 WRK SEQ로 별로 가져와야 함
                       END) COST_STS
              , A.SLS_YRMON AS COST_YRMON
              , A.COST_WK
#else 
         SELECT ( CASE WHEN SUM(NVL(A.PORT_USD_AMT, 0)) OVER (PARTITION BY A.COST_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) <> 0
                       THEN 'C' 
                       --VVD에 전체에 대해서 하나라도 COA DATA가 있는 경우
                       WHEN SUM(NVL(A.PORT_USD_AMT, 0)) OVER (PARTITION BY A.COST_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD)= 0
                            AND SUM(NVL( A.INV_USD_AMT, 0)) OVER (PARTITION BY A.COST_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0
                       THEN 'N'
                       --해당 VVD에 대한 데이터가 COA, PSO 둘다 모두 한 건도 없는 경우
                       ELSE DECODE(LAST_VALUE (A.SRC_PSO_BZTP_CD IGNORE NULLS) OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD, A.WRK_DT, A.WRK_SEQ ), 1, 'T', 2, 'E')
                       --COA는 없고 PSO쪽만 있는 경우 WRK_DT나 WRK SEQ로 별로 가져와야 함
                       END) COST_STS
              , A.COST_YRMON AS COST_YRMON
              , '' AS COST_WK
#end
              , A.SLAN_CD
              , A.VSL_CD
              , A.SKD_VOY_NO
              , A.DIR_CD AS SKD_DIR_CD
              , A.TML_CD
              , A.YD_CD
              , A.WRK_DT
              , A.WRK_SEQ
                --, A.LST_WRK_DT
                --, A.LST_WRK_SEQ
              , MAX(A.LST_WRK_DT|| A.LST_WRK_SEQ) PSO_MAX_SEQ
              , A.INV_USD_AMT
              , A.PORT_USD_AMT
              , CASE WHEN A.INV_USD_AMT <> 0 THEN 1 ELSE 0 END PSO_CNT
              , CASE WHEN A.PORT_USD_AMT <> 0 THEN 1 ELSE 0 END COA_CNT
              , SUM( ( NVL(A.INV_USD_AMT, 0)) ) PSO_TTL_EXP 
#if (${f_yrtype} == 'W')
              , ( CASE WHEN MIN(NVL(A.PORT_USD_AMT, 0)) OVER (PARTITION BY A.SLS_YRMON, A.COST_WK, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0
#else
              , ( CASE WHEN MIN(NVL(A.PORT_USD_AMT, 0)) OVER (PARTITION BY A.COST_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0
#end
                       -- VVD별로 COA 쪽에 YARD 하나라도 누락인 것을 찾아야함.
                       THEN 0 
                       ELSE SUM(NVL(A.PORT_USD_AMT, 0)) END) TTL_EXP
           FROM (SELECT A1.COST_YRMON
                      , A1.SLS_YRMON
                      , A1.COST_WK
                      , A1.SLAN_CD
                      , A1.VSL_CD
                      , A1.SKD_VOY_NO
                      , A1.DIR_CD
                      , A5.TML_CD
                      , A4.YD_CD
                      , A6.WRK_DT
                      , A6.WRK_SEQ
                      , LAST_VALUE (A6.WRK_DT IGNORE NULLS) OVER (PARTITION BY A1.VSL_CD, A1.SKD_VOY_NO, A1.DIR_CD ORDER BY A6.WRK_DT, A6.WRK_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED
                        FOLLOWING) LST_WRK_DT
                      , LAST_VALUE (A6.WRK_SEQ IGNORE NULLS) OVER (PARTITION BY A1.VSL_CD, A1.SKD_VOY_NO, A1.DIR_CD ORDER BY A6.WRK_DT, A6.WRK_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED
                        FOLLOWING) LST_WRK_SEQ
                      , A6.INV_USD_AMT
                      , A5.PORT_USD_AMT
                      , A6.SRC_PSO_BZTP_CD
                   FROM (SELECT A1.COST_YRMON
                              , A1.SLS_YRMON
                              , MAX(A1.COST_WK) COST_WK
                              , A1.SLAN_CD
                              , A1.VSL_CD
                              , A1.SKD_VOY_NO
                              , A1.DIR_CD
                              , MIN(A1.N1ST_LODG_PORT_ETD_DT) N1ST_LODG_PORT_ETD_DT
                           FROM COA_MON_VVD A1, COA_LANE_RGST A3
                          WHERE 1=1
                            AND NVL(A1.DELT_FLG, 'N') = 'N'
                            AND NVL(A3.DELT_FLG, 'N') = 'N'
							AND NVL(A3.TRNK_IPT_FLG,'N')    = 'N'
        #if (${f_yrtype} == 'W')
                            AND A1.SLS_YRMON  LIKE @[f_year] || '%'
                            AND A1.COST_WK         = @[f_fm_wk]
        #else
                            AND A1.COST_YRMON      = @[f_year]||@[f_fm_mon]
        #end
        #if (${f_selslane} != '')
                            AND A1.SLAN_CD         = @[f_selslane]
        #end
                            AND A1.VSL_CD          = nvl(@[f_vsl_cd], A1.VSL_CD)
                            AND A1.SKD_VOY_NO      = nvl(@[f_skd_voy_no], A1.SKD_VOY_NO)
                            AND A1.DIR_CD          = nvl(@[f_dir_cd], A1.DIR_CD)
                            AND A1.TRD_CD          = A3.TRD_CD
                            AND A1.RLANE_CD        = A3.RLANE_CD
                            AND A1.IOC_CD          = A3.IOC_CD
                            AND A1.DIR_CD          = A3.DIR_CD
                            AND A3.TRD_CD         <> 'COM'
                            AND A3.VSL_LANE_TP_CD IN ('JO', 'SC')
                        GROUP BY A1.COST_YRMON
                              , A1.SLS_YRMON
                              --, A1.COST_WK
                              , A1.SLAN_CD
                              , A1.VSL_CD
                              , A1.SKD_VOY_NO
                              , A1.DIR_CD) A1
                      , COA_VSL_RGST A2
                      , VSK_VSL_PORT_SKD A4
                      , COA_PORT_TRF A5
                      , PSO_TGT_VVD_EXPN A6
                  WHERE 1=1
#if (${f_selrlane} != '')
                    AND A2.VSL_CLSS_CAPA   = @[f_selrlane]			--SJH.20141128.MOD : RLANE_CD -> VSL_CLSS_CAPA
#end

            
                    AND A1.VSL_CD          = A2.VSL_CD
                    AND A2.VOP_CD          = COM_ConstantMgr_PKG.COM_getCompanyCode_FNC()
                    AND TO_CHAR(A1.N1ST_LODG_PORT_ETD_DT, 'YYYYMMDD') 
                        BETWEEN NVL(TO_CHAR(A2.VSL_APLY_FM_DT, 'YYYYMMDD'), '19000101') 
                            AND NVL(TO_CHAR(A2.VSL_APLY_TO_DT, 'YYYYMMDD'), '99991231')
                    AND A1.VSL_CD                    = A4.VSL_CD
                    AND A1.SKD_VOY_NO                = A4.SKD_VOY_NO
                    AND A1.DIR_CD                    = A4.SKD_DIR_CD
                    AND A1.SLAN_CD                   = A4.SLAN_CD
--					AND A1.VPS_YD_CD               = A4.YD_CD
                    AND NVL(A4.SKD_CNG_STS_CD, 'N') <> 'S'
                    AND NVL(A4.VT_ADD_CALL_FLG,'N') <> 'Y'					--20150819.ADD
                    AND A4.SLAN_CD                   =DECODE(A5.SLAN_CD(+), 'PSO', A4.SLAN_CD, 'COA', A4.SLAN_CD, A5.SLAN_CD(+))
                    AND A4.VSL_CD                    =A5.VSL_CD(+)
                    AND A4.SKD_VOY_NO                =A5.SKD_VOY_NO(+)
                    AND A4.SKD_DIR_CD                =A5.SKD_DIR_CD(+)
                    AND A4.YD_CD                     =A5.TML_CD(+)
                    AND A4.VSL_CD                    = A6.VSL_CD(+)
                    AND A4.SKD_VOY_NO                = A6.SKD_VOY_NO(+)
                    AND A4.SKD_DIR_CD                = A6.SKD_DIR_CD(+)
                    AND A4.YD_CD                     =A6.YD_CD(+)                    
                    AND A6.PSO_BZTP_CD(+)            = '7'
                ) A
          WHERE (A.WRK_DT IS NULL OR A.WRK_DT||A.WRK_SEQ = A.LST_WRK_DT||A.LST_WRK_SEQ)
       GROUP BY ( CASE WHEN NVL(A.PORT_USD_AMT, 0)<> 0 THEN 'C'
                       WHEN NVL(A.PORT_USD_AMT, 0)= 0 AND NVL(A.INV_USD_AMT, 0) = 0 THEN 'N'
                       ELSE DECODE(A.SRC_PSO_BZTP_CD, 1, 'T', 2, 'E') END)
#if (${f_yrtype} == 'W')
              , A.SLS_YRMON
              , A.COST_WK
#else
              , A.COST_YRMON  
#end      
              , A.SLAN_CD
              , A.VSL_CD
              , A.SKD_VOY_NO
              , A.DIR_CD
              , A.PORT_USD_AMT
              , A.TML_CD
              , A.YD_CD
              , A.WRK_DT
              , A.WRK_SEQ
              , A.INV_USD_AMT
              , A.SRC_PSO_BZTP_CD
        )
  WHERE COST_STS IS NOT NULL
GROUP BY COST_STS
      , COST_YRMON
      , COST_WK
      , SLAN_CD
      , VSL_CD
      , SKD_VOY_NO
      , SKD_DIR_CD
      , PSO_MAX_SEQ
ORDER BY COST_YRMON
      , COST_WK
      , SLAN_CD
      , VSL_CD
      , SKD_VOY_NO
      , SKD_DIR_CD
      , PSO_MAX_SEQ			]]></sql>
			<params>
				<param name="f_year" type="12" value="1" out="N"/>
				<param name="f_fm_wk" type="12" value="1" out="N"/>
				<param name="f_fm_mon" type="12" value="1" out="N"/>
				<param name="f_selslane" type="12" value="1" out="N"/>
				<param name="f_vsl_cd" type="12" value="" out="N"/>
				<param name="f_skd_voy_no" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_selrlane" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
