<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaAdjustmentRHQDBDAOSearchMonthlyQuotaAdjustmentRhq0075Tab01Sub01List01RSQL">
			<desc><![CDATA[      2011.02.15 김종준 [T-선사] YEARLY QTA 부분 삭제]]></desc>
			<sql><![CDATA[
WITH TMP_INPUT_PARMAS AS                                                                   
		   (SELECT                                                                                 
		            MQTA_STEP_CD,                                                                  
		            BSE_YR,                                                                        
		            BSE_QTR_CD,                                                                       
		            TRD_CD,                                                                        
		            DIR_CD,                                                                        
		            MQTA_VER_NO,                                                                   
		            SAQ_STS_CD,                                                                    
		            GLINE_VER_NO,                                                                  
		            CRE_OFC_CD AS RHQ_CD,                                                          
		            INCL_PORT_FLG,                                                                 
		            @[targetMonth] TGT_YR_MON,                                                                  
		            @[quarter] AS BEF_YR_QTR,                                                         
		            TO_CHAR(ADD_MONTHS(TO_DATE(BSE_YR||DECODE(BSE_QTR_CD,'1Q','01','2Q','04','3Q','07','4Q','10'), 'YYYYMM'), -1), 'YYYYMM')		  
		         		AS BEF_YR_MON,															  
		            @[slsFcastPubNo] AS SLS_FCAST_PUB_NO,                                                         
		            @[mqta_mdl_ver_no] AS MQTA_MDL_VER_NO,                                                          
		            @[search_sub_trd_cd] AS SUB_TRD_CD,                                                               
		            @[search_rlane_cd] AS RLANE_CD,                                                                 
 		            ( SELECT RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO                               
		              FROM   SAQ_MON_QTA_RLSE RLS                                                   
		              WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD =                                              
		                      DECODE(@[bse_quarter],'1Q',@[year]-1,@[year]) || DECODE(@[bse_quarter],'1Q','4Q','2Q','1Q','3Q','2Q','4Q','3Q')              		
		              AND    RLS.QTA_RLSE_STS_CD = 'R'                                              
		            ) MQTA_RLSE_VER_NO -- monthly rels                                                           
		    FROM   SAQ_MON_QTA_STEP_VER
		    WHERE  MQTA_STEP_CD = @[mQtaStepCd]                                                                
		    AND    GLINE_VER_NO = @[glineVerNo]                                                                
		    AND    MQTA_VER_NO = @[mQtaVerNo]                                                                 
		    AND    BSE_YR = @[year]                                                                      
		    AND    BSE_QTR_CD = @[bse_quarter]                                                                     
		    AND    TRD_CD = @[trade]                                                                      
		    AND    DIR_CD = @[bound] ),                                                                   
		TMP_MON_TGT_VVD_ADJ AS (                                                                   
		    SELECT -- saq_mon_tgt_vvd_adj BSA, Voyage                                              
		        VVD.SUB_TRD_CD,                                                                    
		        VVD.RLANE_CD,                                                                      
		        VVD.SPRT_GRP_CD,                                                                   
		        VVD.BSA_GRP_CD,                                                                    
		        (VVD.RLANE_CD||'-'||VVD.SPRT_GRP_CD||VVD.BSA_GRP_CD) AS LANE_GRP,             
		        SUM(DISTINCT VVD.FNL_BSA_CAPA) AS TOT_BSA,                                         
		        COUNT(*) AS TOT_VOY                                                                
		    FROM   SAQ_MON_TGT_VVD_ADJ VVD, TMP_INPUT_PARMAS INP                                   
		    WHERE  VVD.BSE_YR = INP.BSE_YR                                                         
		    AND    VVD.BSE_QTR_CD = INP.BSE_QTR_CD                                                       
		    AND    VVD.GLINE_VER_NO = INP.GLINE_VER_NO                                             
		    AND    VVD.TRD_CD = INP.TRD_CD                                                         
		    AND    VVD.DIR_CD = INP.DIR_CD                                                         
		    AND    VVD.BSE_YR||VVD.BSE_MON = INP.TGT_YR_MON                                        
		    AND    VVD.SUB_TRD_CD LIKE INP.SUB_TRD_CD || '%'                                       
		    AND    VVD.RLANE_CD LIKE INP.RLANE_CD||'%'                                             
		    GROUP BY VVD.SUB_TRD_CD,VVD.RLANE_CD,VVD.SPRT_GRP_CD,VVD.BSA_GRP_CD                    
		    )                                                                                      
		SELECT /*+ ORDERED USE_HASH(RHQ UNI)*/                                                    
		    MIN(RHQ.SUB_TRD_CD||DECODE(RHQ.RLANE_CD,'RBCCO','ZZ',SUBSTR(RHQ.RLANE_CD,-2))||RHQ.RLANE_CD||RHQ.SPRT_GRP_CD) KEY, -- hidden                     
		    RHQ.SUB_TRD_CD,                                                                       
		    RHQ.LANE_GRP,                                                                         
            DECODE(DIR.DIR_CD,'',RHQ.LANE_GRP,SUBSTR(RHQ.LANE_GRP, 0,6)||DIR.DIR_CD||SUBSTR(RHQ.LANE_GRP, 6,9)) CONV_LANE_GRP,		
		    MIN(RHQ.RLANE_CD) AS RLANE_CD,  --hidden                                              
		    MIN(RHQ.SPRT_GRP_CD) AS SPRT_GRP_CD,  --hidden                                        
		    MIN(RHQ.BSA_GRP_CD) AS BSA_GRP_CD,  --hidden                                          
		    '00000' POL_CD,                                                                           
		    '00000' POD_CD,                                                                           
		    NVL(DECODE(RHQ.CTRT_RGN_OFC_CD,'Total','Total',RHQ.CTRT_AQ_CD),' ') CTRT_AQ_CD,                                                                  		
		    --saq_get_aq_dp_seq_fnc(rhq.ctrt_aq_cd) ,  /*20090907*/                                                                		
		    RHQ.CTRT_RGN_OFC_CD,                                                                  
		    0 AS POL_SEQ,                                                          
		    0 AS POD_SEQ,                                                          
		    TO_NUMBER(ITM.CODE) AS ITEM_CODE,  --hidden                                           
		    ITM.ROW_SEQ,  --hidden                                                                
		    REPLACE(ITM.TEXT,'(P)','') AS ITEM,                                                                     
		    MIN(CASE WHEN UNI.GUBUN = 'MONTHLY' AND UNI.BSE_MON = SUBSTR(BEF_YR_MON,5,2) THEN     
		            ROUND(DECODE( ITM.CODE,                                                       
		                     '02', UNI.TOT_VOY,                                                   
		                     '03', UNI.TOT_LOD,                                                   
		                     '05', UNI.TOT_REV,                                                   
		                     '06', UNI.TOT_RPB,                                                   
		                     '07', UNI.TOT_CM,                                                    
		                     '08', UNI.TOT_RA_CM,                                                 
		                     '09', UNI.TOT_CMB,                                                   
		                     '10', UNI.TOT_RA_CMB,                                                
		                     '11', UNI.TOT_OP,                                                    
		                     '12', UNI.TOT_RA_OP,                                                 
		                     '13', UNI.TOT_OPB,                                                   
		                     '14', UNI.TOT_RA_OPB ), 13)                                          
		        END) AS RECENT_MONTHLY,                                                           
		    MIN(CASE WHEN UNI.GUBUN = 'FORECAST' THEN                                             
		            ROUND(DECODE( ITM.CODE, --'01', uni.tot_bsa,                                  
		                     '02', UNI.TOT_VOY,                                                   
		                     '03', UNI.TOT_LOD/UNI.TOT_VOY,                                       
		                     '05', UNI.TOT_REV/UNI.TOT_VOY,                                       
		                     '06', (UNI.TOT_REV/UNI.TOT_VOY)/(UNI.TOT_LOD/UNI.TOT_VOY),           
		                     '07', UNI.TOT_CM/UNI.TOT_VOY,                                        
		                     '08', UNI.TOT_RA_CM/UNI.TOT_VOY,                                     
		                     '09', (UNI.TOT_CM/UNI.TOT_VOY)/(UNI.TOT_LOD/UNI.TOT_VOY),            
		                     '10', (UNI.TOT_RA_CM/UNI.TOT_VOY)/(UNI.TOT_LOD/UNI.TOT_VOY),         
		                     '11', UNI.TOT_OP/UNI.TOT_VOY,                                        
		                     '12', UNI.TOT_RA_OP/UNI.TOT_VOY,                                     
		                     '13', (UNI.TOT_OP/UNI.TOT_VOY)/(UNI.TOT_LOD/UNI.TOT_VOY),            
		                     '14', (UNI.TOT_RA_OP/UNI.TOT_VOY)/(UNI.TOT_LOD/UNI.TOT_VOY) ), 13)   
		        END) AS FCAST_01,                                                                 
		    MIN(CASE WHEN UNI.GUBUN = 'MODEL' THEN                                                
		            ROUND(DECODE( ITM.CODE, -- '01', uni.tot_bsa,                                 
		                     '02', UNI.TOT_VOY,                                                   
		                     '03', UNI.TOT_LOD/UNI.TOT_VOY,                                       
		                     '05', UNI.TOT_REV/UNI.TOT_VOY,                                       
		                     '06', (UNI.TOT_REV/UNI.TOT_VOY)/(UNI.TOT_LOD/UNI.TOT_VOY),           
		                     '07', UNI.TOT_CM/UNI.TOT_VOY,                                        
		                     '08', UNI.TOT_RA_CM/UNI.TOT_VOY,                                     
		                     '09', (UNI.TOT_CM/UNI.TOT_VOY)/(UNI.TOT_LOD/UNI.TOT_VOY),            
		                     '10', (UNI.TOT_RA_CM/UNI.TOT_VOY)/(UNI.TOT_LOD/UNI.TOT_VOY),         
		                     '11', UNI.TOT_OP/UNI.TOT_VOY,                                        
		                     '12', UNI.TOT_RA_OP/UNI.TOT_VOY,                                     
		                     '13', (UNI.TOT_OP/UNI.TOT_VOY)/(UNI.TOT_LOD/UNI.TOT_VOY),            
		                     '14', (UNI.TOT_RA_OP/UNI.TOT_VOY)/(UNI.TOT_LOD/UNI.TOT_VOY) ), 13)   
		        END) AS MODEL_01,                                                                 
		    MIN(CASE WHEN RHQ.GUBUN = 'RHQ' THEN                                                  
		            ROUND(DECODE( ITM.CODE,                                                       
		                     '02', RHQ.TOT_VOY,                                                   
		                     '03', RHQ.TOT_LOD,                                                   
		                     '05', RHQ.TOT_REV,                                                   
		                     '06', RHQ.TOT_RPB,                                                   
		                     '07', RHQ.TOT_CM,                                                    
		                     '08', RHQ.TOT_RA_CM,                                                 
		                     '09', RHQ.TOT_CMB,                                                   
		                     '10', RHQ.TOT_RA_CMB,                                                
		                     '11', RHQ.TOT_OP,                                                    
		                     '12', RHQ.TOT_RA_OP,                                                 
		                     '13', RHQ.TOT_OPB,                                                   
		                     '14', RHQ.TOT_RA_OPB ), 13)                                          
		        END) AS FINAL_01,                                                                   
		    MIN(CASE WHEN RHQ.GUBUN = 'INITIAL' THEN                                                
		            ROUND(DECODE( ITM.CODE,                                                       
		                     '02', RHQ.TOT_VOY,                                                   
		                     '03', RHQ.TOT_LOD,                                                   
		                     '05', RHQ.TOT_REV,                                                   
		                     '06', RHQ.TOT_RPB,                                                   
		                     '07', RHQ.TOT_CM,                                                    
		                     '08', RHQ.TOT_RA_CM,                                                 
		                     '09', RHQ.TOT_CMB,                                                   
		                     '10', RHQ.TOT_RA_CMB,                                                
		                     '11', RHQ.TOT_OP,                                                    
		                     '12', RHQ.TOT_RA_OP,                                                 
		                     '13', RHQ.TOT_OPB,                                                   
		                     '14', RHQ.TOT_RA_OPB ), 13)                                          
		        END) AS INITIAL_01,                                                                 		
		    MIN(DECODE(RHQ.GUBUN, 'RHQ', RHQ.TOT_LOD)) AS TOT_LOD,                                                                  		
		    MIN(DECODE(RHQ.GUBUN, 'RHQ', RHQ.TOT_RPB)) AS TOT_RPB,                                                                  		
		    MIN(DECODE(RHQ.GUBUN, 'RHQ', RHQ.CM_UC_AMT)) AS CM_UC_AMT,                            
		    MIN(DECODE(RHQ.GUBUN, 'RHQ', RHQ.OPFIT_UC_AMT)) AS OPFIT_UC_AMT,                      
		    MIN(DECODE(RHQ.GUBUN, 'RHQ', RHQ.RA_CM_UC_AMT)) AS RA_CM_UC_AMT,                      
		    MIN(DECODE(RHQ.GUBUN, 'RHQ', RHQ.RA_OPFIT_UC_AMT)) AS RA_OPFIT_UC_AMT,                
		    MIN(DECODE(RHQ.GUBUN, 'RHQ', RHQ.TOT_BSA)) AS TOT_BSA,                                
		    MIN(DECODE(RHQ.GUBUN, 'RHQ', RHQ.LOW_QTY)) AS LOW_QTY ,                               
		    RHQ.RGN_GRP																			
		FROM TMP_INPUT_PARMAS INP,                                                                
		    (                                                                                     
		    SELECT  INTG_CD_VAL_CTNT AS CODE,                                                     
		            INTG_CD_VAL_DP_DESC AS TEXT,                                                  
		            INTG_CD_VAL_DP_SEQ AS ROW_SEQ                                                 
		    FROM  COM_INTG_CD_DTL                                                                 
		    WHERE INTG_CD_ID = 'CD01388'                                                          
		    ) ITM, (                                                                              
		    SELECT -- RHQ, RGN, Final                                                             
		 		DECODE(RHQ.MQTA_STEP_CD, '04','RHQ', '07', 'INITIAL') AS GUBUN,           
		 		RHQ.BSE_MON AS BSE_MON,                                                            
		 		RHQ.SUB_TRD_CD,                                                                    
		 		(RHQ.RLANE_CD||'-'||RHQ.SPRT_GRP_CD||RHQ.BSA_GRP_CD) AS LANE_GRP,             
		 		RHQ.RLANE_CD,                                                                      
		 		RHQ.SPRT_GRP_CD,                                                                   
		 		RHQ.BSA_GRP_CD,                                                                    
		 		RHQ.CTRT_AQ_CD,                                                
		 		NVL(RHQ.CTRT_RGN_OFC_CD,'Total') CTRT_RGN_OFC_CD,                                                
		 		MAX(VVD.TOT_BSA) AS TOT_BSA,                                                                     
		 		MAX(VVD.TOT_VOY) AS TOT_VOY,                                                                     
		 		SUM(RHQ.LOD_QTY) AS TOT_LOD ,                                                           
		 		SUM(RHQ.GRS_RPB_REV*RHQ.LOD_QTY) AS TOT_REV,                                            
		 		DECODE(SUM(RHQ.LOD_QTY), 0, 0,SUM(RHQ.GRS_RPB_REV*RHQ.LOD_QTY)/SUM(RHQ.LOD_QTY)) AS TOT_RPB,                           
		 		SUM((RHQ.GRS_RPB_REV-RHQ.CM_UC_AMT)*RHQ.LOD_QTY) AS TOT_CM,                             
		 		SUM((RHQ.GRS_RPB_REV-RHQ.RA_CM_UC_AMT)*RHQ.LOD_QTY) AS TOT_RA_CM,                       
		 		DECODE(SUM(RHQ.LOD_QTY), 0, 0, SUM((RHQ.GRS_RPB_REV-RHQ.CM_UC_AMT)*RHQ.LOD_QTY)/SUM(RHQ.LOD_QTY)) AS TOT_CMB,             
		 		DECODE(SUM(RHQ.LOD_QTY), 0, 0, SUM((RHQ.GRS_RPB_REV-RHQ.RA_CM_UC_AMT)*RHQ.LOD_QTY)/SUM(RHQ.LOD_QTY)) AS TOT_RA_CMB,       
		 		SUM((RHQ.GRS_RPB_REV-RHQ.OPFIT_UC_AMT)*RHQ.LOD_QTY) AS TOT_OP,                          
		 		SUM((RHQ.GRS_RPB_REV-RHQ.RA_OPFIT_UC_AMT)*RHQ.LOD_QTY) AS TOT_RA_OP,                    
		 		DECODE(SUM(RHQ.LOD_QTY), 0, 0, SUM((RHQ.GRS_RPB_REV-RHQ.OPFIT_UC_AMT)*RHQ.LOD_QTY)/SUM(RHQ.LOD_QTY)) AS TOT_OPB,          
		 		DECODE(SUM(RHQ.LOD_QTY), 0, 0, SUM((RHQ.GRS_RPB_REV-RHQ.RA_OPFIT_UC_AMT)*RHQ.LOD_QTY)/SUM(RHQ.LOD_QTY)) AS TOT_RA_OPB,    
		 		SUM(RHQ.CM_UC_AMT) AS CM_UC_AMT,                                                        
		 		SUM(RHQ.OPFIT_UC_AMT) AS OPFIT_UC_AMT,                                                  
		 		SUM(RHQ.RA_CM_UC_AMT) AS RA_CM_UC_AMT,                                                  
		 		SUM(RHQ.RA_OPFIT_UC_AMT) AS RA_OPFIT_UC_AMT,                                            
		 		SUM(NVL(LOD.LOW_QTY, 0)) AS LOW_QTY,                                                    
		 		GROUPING (RHQ.CTRT_RGN_OFC_CD) RGN_GRP 													

            FROM   (                                                                              
                    SELECT QTY.SUB_TRD_CD,QTY.RLANE_CD,QTY.CTRT_RHQ_CD,QTY.CTRT_RGN_OFC_CD,       
                           SUM(SPC_GNTE_QTY) AS LOW_QTY                                           
                    FROM   SAQ_MON_QTA_SPC_GNTE QTY,                                              
                           TMP_INPUT_PARMAS INP                                                   
                    WHERE  QTY.MQTA_MDL_VER_NO = INP.MQTA_MDL_VER_NO                              
                    AND    QTY.BSE_YR = SUBSTR(INP.TGT_YR_MON, 1,4)                               
                    AND    QTY.BSE_MON = SUBSTR(INP.TGT_YR_MON, 5,6)                              
                    AND    QTY.TRD_CD = INP.TRD_CD                                                
                    AND    QTY.DIR_CD = INP.DIR_CD                                                
                    AND    QTY.CTRT_RHQ_CD = INP.RHQ_CD                                           
                    GROUP BY QTY.SUB_TRD_CD,QTY.RLANE_CD,QTY.CTRT_RHQ_CD,QTY.CTRT_RGN_OFC_CD     
                    ) LOD,                                                                        
                   TMP_INPUT_PARMAS INP,                                                          
                   SAQ_MON_QTA_STEP_VER VER,                                                      
                   SAQ_MON_QTA_RHQ RHQ,                                                           
                   TMP_MON_TGT_VVD_ADJ VVD                                                       
		    WHERE  VER.MQTA_STEP_CD IN ('04', '07') -- RHQ, RGN, Final,initial                           
		    AND    VER.BSE_YR = INP.BSE_YR                                                        
		    AND    VER.BSE_QTR_CD = INP.BSE_QTR_CD                                                      
		    AND    VER.TRD_CD = INP.TRD_CD                                                        
		    AND    VER.DIR_CD = INP.DIR_CD                                                        
		    AND    VER.GLINE_VER_NO = INP.GLINE_VER_NO                                            
		    AND    ((VER.MQTA_STEP_CD = '04' AND VER.MQTA_VER_NO = INP.MQTA_VER_NO)               
		            OR (VER.MQTA_STEP_CD = '07' ))                     
		    AND    RHQ.MQTA_STEP_CD = VER.MQTA_STEP_CD                                            
		    AND    RHQ.BSE_YR = VER.BSE_YR                                                        
		    AND    RHQ.BSE_QTR_CD = VER.BSE_QTR_CD                                                      
		    AND    RHQ.BSE_MON = SUBSTR(INP.TGT_YR_MON, 5,2)                                      
		    AND    RHQ.TRD_CD = VER.TRD_CD                                                        
		    AND    RHQ.DIR_CD = VER.DIR_CD                                                        
		    AND    RHQ.MQTA_VER_NO = VER.MQTA_VER_NO                                              
		    AND    RHQ.SUB_TRD_CD = VVD.SUB_TRD_CD                                                
		    AND    RHQ.RLANE_CD = VVD.RLANE_CD                                                    
		    AND    RHQ.SPRT_GRP_CD = VVD.SPRT_GRP_CD                                              
		    AND    RHQ.BSA_GRP_CD = VVD.BSA_GRP_CD                                                
		    AND    RHQ.CTRT_RHQ_CD = INP.RHQ_CD                                                   
		    AND    RHQ.SUB_TRD_CD LIKE INP.SUB_TRD_CD || '%'                                       
		    AND    RHQ.RLANE_CD LIKE INP.RLANE_CD||'%'                                            
            AND    LOD.SUB_TRD_CD(+) = RHQ.SUB_TRD_CD                                             
            AND    LOD.RLANE_CD(+) = RHQ.RLANE_CD                                                 
            AND    LOD.CTRT_RHQ_CD(+) = RHQ.CTRT_RHQ_CD                                           
            AND    LOD.CTRT_RGN_OFC_CD(+) = RHQ.CTRT_RGN_OFC_CD                                   
		  GROUP BY GROUPING SETS( (  RHQ.MQTA_STEP_CD,RHQ.BSE_MON,RHQ.SUB_TRD_CD, RHQ.RLANE_CD,   
		 	 RHQ.SPRT_GRP_CD, RHQ.BSA_GRP_CD, RHQ.CTRT_RGN_OFC_CD, RHQ.CTRT_AQ_CD   ) 
		 	 , (RHQ.MQTA_STEP_CD,RHQ.BSE_MON,RHQ.SUB_TRD_CD, RHQ.RLANE_CD, RHQ.SPRT_GRP_CD, RHQ.BSA_GRP_CD )) 
        
		    ) RHQ, (                                                                              
		    SELECT -- Recent Quota Monthly                                                                   
		        'MONTHLY' AS gUBUN,                                                                          
		        QTA.BSE_MON,                                                                                 
		        QTA.SUB_TRD_CD,                                                                              
		        ADJ.LANE_GRP,                                                                                
		 		NVL(QTA.RGN_OFC_CD,'Total') CTRT_RGN_OFC_CD,                                           
                 (VVD.TOT_BSA/VVD.TOT_VOY) AS TOT_BSA,                                                         
		         VVD.TOT_VOY AS TOT_VOY,                                                                        
		        (QTA.TOT_LOD/VVD.TOT_VOY) AS TOT_LOD,                                                        
		        (QTA.TOT_REV/VVD.TOT_VOY) AS TOT_REV,                                                        
		        (QTA.TOT_REV/VVD.TOT_VOY)/(QTA.TOT_LOD/VVD.TOT_VOY) AS TOT_RPB,                              
		        (QTA.TOT_CM/VVD.TOT_VOY) AS TOT_CM,                                                          
		        (QTA.TOT_RA_CM/VVD.TOT_VOY) AS TOT_RA_CM,                                                    
		        (QTA.TOT_CM/VVD.TOT_VOY)/(QTA.TOT_LOD/VVD.TOT_VOY) AS TOT_CMB,                               
		        (QTA.TOT_RA_CM/VVD.TOT_VOY)/(QTA.TOT_LOD/VVD.TOT_VOY) AS TOT_RA_CMB,                         
		        (QTA.TOT_OP/VVD.TOT_VOY) AS TOT_OP,                                                          
		        (QTA.TOT_RA_OP/VVD.TOT_VOY) AS TOT_RA_OP,                                                    
		        (QTA.TOT_OP/VVD.TOT_VOY)/(QTA.TOT_LOD/VVD.TOT_VOY) AS TOT_OPB,                               
		        (QTA.TOT_RA_OP/VVD.TOT_VOY)/(QTA.TOT_LOD/VVD.TOT_VOY) AS TOT_RA_OPB ,                        
		 		RGN_GRP 																							
		    FROM TMP_MON_TGT_VVD_ADJ ADJ,                                                                    		
		         (                                                                                           
		              SELECT -- Monthly                                                                            
		                     QTA.GUBUN,                                                                      
		                     QTA.BSE_MON,                                                                             
		                     QTA.SUB_TRD_CD,                                                                          
		                     QTA.RLANE_CD,                                                                            
		                     QTA.RGN_OFC_CD,                                                                     
		                     QTA.TOT_LOD,                                                    
		                     QTA.TOT_REV ,                                             
		                     QTA.TOT_RPB ,                            
		                     QTA.TOT_CM ,                              
		                     QTA.TOT_RA_CM , 
		                     QTA.TOT_CMB,             
		                     QTA.TOT_RA_CMB ,                                                     
		                     QTA.TOT_OP ,                       
		                     QTA.TOT_RA_OP,
		                     QTA.TOT_OPB ,                                                        
		                     QTA.TOT_RA_OPB,                                                       
		 			        QTA.RGN_GRP 													
                      FROM   TMP_INPUT_PARMAS INP, (                                                                                 		
		                     SELECT -- Monthly                                                                            
		                            'MONTHLY' AS GUBUN,                                                                      
		                            NVL(DIR.CONV_DIR_CD, QTA.DIR_CD) DIR_CD,                                            
		                            QTA.BSE_MON,                                                                             
		                            VVD.SUB_TRD_CD,                                                                          
		                            QTA.RLANE_CD,                                                                            
		                            QTA.RGN_OFC_CD,                                                                     
		                            SUM(QTA.LOD_QTY         ) AS TOT_LOD,                                                    
		                            SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY) AS TOT_REV ,                                             
		                            SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY)/SUM(QTA.LOD_QTY) AS TOT_RPB ,                            
		                            SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY) AS TOT_CM ,                              
		                            SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY) AS TOT_RA_CM , 
		                            SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY)/SUM(QTA.LOD_QTY) AS TOT_CMB,             
		                            SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY)                
		                                /SUM(QTA.LOD_QTY) AS TOT_RA_CMB ,                                                     
		                            SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    ) AS TOT_OP ,                       
		                            SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY ) AS TOT_RA_OP,
		                            SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    )                                   
		                                /SUM(QTA.LOD_QTY) AS TOT_OPB ,                                                        
		                            SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY )            
		                                /SUM(QTA.LOD_QTY) AS TOT_RA_OPB,                                                       
		 			               GROUPING (QTA.RGN_OFC_CD) RGN_GRP 													
                            FROM   (                                                                                 
		                             SELECT DISTINCT                                           
		                                    RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO,                                           		
		                                    RLS.BSE_YR AS BEF_YR,                                            
		                                    RLS.BSE_QTR_CD AS BEF_QTR_CD                                            		
		                             FROM   SAQ_MON_QTA_RLSE RLS,                                                               
		                                    TMP_INPUT_PARMAS INP                                                                
		                             WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD = INP.BEF_YR_QTR                             
		                             AND    RLS.QTA_RLSE_STS_CD = 'R'                                                                   
                                   ) RLS,                                                                            
                                   SAQ_MON_DIR_CONV    DIR,                                                            
                                   SAQ_MON_CFM_QTA     QTA,                                                          
                                   SAQ_MON_CFM_TGT_VVD VVD,                                                          
                                   TMP_INPUT_PARMAS    INP                                                           
                            WHERE  QTA.MQTA_RLSE_VER_NO = RLS.MQTA_RLSE_VER_NO                                                     
                            AND    QTA.BSE_MON = DECODE(RLS.BEF_QTR_CD, '1Q', '03', '2Q', '06', '3Q', '09', '4Q', '12')                 
                            AND    QTA.QTA_TGT_CD = 'Q'                                                              
		                    AND    QTA.TRD_CD = INP.TRD_CD                                                                
		                    AND    QTA.RHQ_CD = INP.RHQ_CD                                                           
		                    AND    VVD.SUB_TRD_CD LIKE INP.SUB_TRD_CD || '%'                                              
		                    AND    QTA.RLANE_CD LIKE INP.RLANE_CD||'%'                                                    
                            AND    VVD.MQTA_RLSE_VER_NO = QTA.MQTA_RLSE_VER_NO                                       
                            AND    VVD.BSE_YR = QTA.BSE_YR                                                           
                            AND    VVD.BSE_QTR_CD = QTA.BSE_QTR_CD                                                   
                            AND    VVD.BSE_MON = QTA.BSE_MON                                                         
                            AND    VVD.RLANE_CD = QTA.RLANE_CD                                                       
                            AND    VVD.TRD_CD = QTA.TRD_CD                                                           
                            AND    VVD.DIR_CD = QTA.DIR_CD                                                           
                            AND    VVD.VSL_CD = QTA.VSL_CD                                                           
                            AND    VVD.SKD_VOY_NO = QTA.SKD_VOY_NO                                                   
                            AND    VVD.SKD_DIR_CD = QTA.SKD_DIR_CD                                                           		
		                    AND    QTA.LOD_QTY > 0                                                                        
                            AND    QTA.BSE_YR = DIR.BSE_YR(+)          											   
                            AND    DIR.BSE_QTR_CD(+) = @[bse_quarter] 				          	       							   
                            AND    QTA.TRD_CD = DIR.TRD_CD(+)       										   		   
                            AND    QTA.RLANE_CD = DIR.RLANE_CD(+)       										       
                            AND    QTA.DIR_CD = DIR.DIR_CD(+)       										           		
		 		           GROUP BY GROUPING SETS ( ( NVL(DIR.CONV_DIR_CD, QTA.DIR_CD), QTA.BSE_MON, VVD.SUB_TRD_CD, QTA.RLANE_CD, QTA.RGN_OFC_CD   ) 				
		 				            ,(QTA.BSE_MON, VVD.SUB_TRD_CD, QTA.RLANE_CD)) 							
		                ) QTA                                                                                        
		           WHERE NVL(QTA.DIR_CD, INP.DIR_CD) = INP.DIR_CD                                                                                        
		        ) QTA,                                                                                        
		        (                                                                                            
		             SELECT -- BSA, VOYAGE                                                                       		
		                    VVD.BSE_MON,                                                                            
		                    VVD.SUB_TRD_CD,                                                                         
		                    VVD.RLANE_CD,                                                                           
		                    VVD.TOT_BSA,                                                       
		                    VVD.TOT_VOY                   
                      FROM  TMP_INPUT_PARMAS INP, (                                                                                 		
		                    SELECT -- BSA, VOYAGE                                                                       
		                           NVL(DIR.CONV_DIR_CD, VVD.DIR_CD) DIR_CD,                                            		
		                           VVD.BSE_MON,                                                                            
		                           VVD.SUB_TRD_CD,                                                                         
		                           VVD.RLANE_CD,                                                                           
		                           SUM(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                       
		                           COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY                   
                            FROM  (                                                                                 
		                            SELECT DISTINCT                                           
		                                   RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO,                                           		
		                                   RLS.BSE_YR AS BEF_YR,                                            
		                                   RLS.BSE_QTR_CD AS BEF_QTR_CD                                            		
		                            FROM   SAQ_MON_QTA_RLSE RLS,                                                               
		                                   TMP_INPUT_PARMAS INP                                                                
		                            WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD = INP.BEF_YR_QTR                             
		                            AND    RLS.QTA_RLSE_STS_CD = 'R'                                                                   
                                   ) RLS,																				
                                   SAQ_MON_DIR_CONV    DIR,                                                            
		                           SAQ_MON_CFM_TGT_VVD VVD,																		
		                           TMP_INPUT_PARMAS    INP                                        									
                            WHERE  VVD.MQTA_RLSE_VER_NO = RLS.MQTA_RLSE_VER_NO                                                     
                            AND    VVD.BSE_MON = DECODE(RLS.BEF_QTR_CD, '1Q', '03', '2Q', '06', '3Q', '09', '4Q', '12')         
		                    AND    VVD.TRD_CD = INP.TRD_CD                                                              
		                    AND    VVD.SUB_TRD_CD LIKE INP.SUB_TRD_CD || '%'                                            
		                    AND    VVD.RLANE_CD LIKE INP.RLANE_CD||'%'                                                  
                            AND    VVD.BSE_YR = DIR.BSE_YR(+)          											   
                            AND    DIR.BSE_QTR_CD(+) = @[bse_quarter] 				          	       							   
                            AND    VVD.TRD_CD = DIR.TRD_CD(+)       										   		   
                            AND    VVD.RLANE_CD = DIR.RLANE_CD(+)       										       
                            AND    VVD.DIR_CD = DIR.DIR_CD(+)       										           		
		                    GROUP BY NVL(DIR.CONV_DIR_CD, VVD.DIR_CD), VVD.BSE_MON, VVD.SUB_TRD_CD, VVD.RLANE_CD                                          
		                ) VVD                                                                                        
		           WHERE NVL(VVD.DIR_CD, INP.DIR_CD) = INP.DIR_CD                                                                                        		
		        ) VVD                                                                                        		
		    WHERE QTA.BSE_MON = VVD.BSE_MON                                                                  
		    AND   QTA.SUB_TRD_CD = VVD.SUB_TRD_CD                                                            
		    AND   QTA.RLANE_CD = VVD.RLANE_CD                                                                
		    AND   ADJ.SUB_TRD_CD = QTA.SUB_TRD_CD                                                            
		    AND   ADJ.RLANE_CD = QTA.RLANE_CD                                                                
		    UNION ALL                                                                                        
		    SELECT -- Model Result                                                                           
		        'MODEL' AS GUBUN,                                                                            
		        MIN(MRS.BSE_MON) AS BSE_MON,                                                                 
		        MRS.SUB_TRD_CD,                                                                              
		        (VVD.RLANE_CD||'-'||VVD.SPRT_GRP_CD||VVD.BSA_GRP_CD) AS LANE_GRP,                       
		 		NVL(MRS.CTRT_RGN_OFC_CD,'Total') CTRT_RGN_OFC_CD,                                                                          
		        SUM(DISTINCT VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                   
		        COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                       
		        SUM(MRS.LOD_QTY         ) AS TOT_LOD ,                                                       
		        SUM(MRS.GRS_RPB_REV*MRS.LOD_QTY) AS TOT_REV ,                                                
		        SUM(MRS.GRS_RPB_REV*MRS.LOD_QTY)/SUM(MRS.LOD_QTY) AS TOT_RPB ,                               
		        SUM((MRS.GRS_RPB_REV-MRS.CM_UC_AMT)*MRS.LOD_QTY) AS TOT_CM ,                                 
		        SUM((MRS.GRS_RPB_REV-MRS.RA_CM_UC_AMT)*MRS.LOD_QTY) AS TOT_RA_CM ,    
		        SUM((MRS.GRS_RPB_REV-MRS.CM_UC_AMT)*MRS.LOD_QTY)/SUM(MRS.LOD_QTY) AS TOT_CMB,                
		        SUM((MRS.GRS_RPB_REV-MRS.RA_CM_UC_AMT)*MRS.LOD_QTY)                   
		            /SUM(MRS.LOD_QTY) AS TOT_RA_CMB ,                                                        
		        SUM((MRS.GRS_RPB_REV-MRS.OPFIT_UC_AMT)*MRS.LOD_QTY    ) AS TOT_OP ,                          
		        SUM((MRS.GRS_RPB_REV-MRS.RA_OPFIT_UC_AMT)*MRS.LOD_QTY ) AS TOT_RA_OP, 
		        SUM((MRS.GRS_RPB_REV-MRS.OPFIT_UC_AMT)*MRS.LOD_QTY    )                                      
		            /SUM(MRS.LOD_QTY) AS TOT_OPB ,                                                           
		        SUM((MRS.GRS_RPB_REV-MRS.RA_OPFIT_UC_AMT)*MRS.LOD_QTY )               
		            /SUM(MRS.LOD_QTY) AS TOT_RA_OPB ,                                                         
		 		GROUPING (MRS.CTRT_RGN_OFC_CD) RGN_GRP 		
		    FROM   TMP_INPUT_PARMAS INP,                                                                     
		           SAQ_MON_MDL_CTRT_SMRY MRS,                                                                
		           SAQ_MON_TGT_VVD_ADJ VVD                                                                   
		    WHERE  MRS.MQTA_MDL_VER_NO = INP.MQTA_MDL_VER_NO                                                 
		    AND    MRS.BSE_MON = SUBSTR(INP.TGT_YR_MON, 5, 2)                                                
		    AND    MRS.TRD_CD = INP.TRD_CD                                                                   
		    AND    MRS.DIR_CD = INP.DIR_CD                                                                   
		    AND    MRS.CTRT_RHQ_CD = INP.RHQ_CD                                                              
		    AND    MRS.SUB_TRD_CD LIKE INP.SUB_TRD_CD || '%'                                                 
		    AND    MRS.RLANE_CD LIKE INP.RLANE_CD||'%'                                                       
		    AND    VVD.BSE_YR = INP.BSE_YR                                                                   
		    AND    VVD.BSE_QTR_CD = INP.BSE_QTR_CD                                                                 
		    AND    VVD.GLINE_VER_NO = INP.GLINE_VER_NO                                                       
		    AND    VVD.BSE_MON = MRS.BSE_MON                                                                 
		    AND    VVD.RLANE_CD = MRS.RLANE_CD                                                               
		    AND    VVD.TRD_CD = MRS.TRD_CD                                                                   
		    AND    VVD.DIR_CD = MRS.DIR_CD                                                                   
		    AND    VVD.VSL_CD = MRS.VSL_CD                                                                   
		    AND    VVD.SKD_VOY_NO = MRS.SKD_VOY_NO                                                           
		    AND    VVD.SKD_DIR_CD = MRS.SKD_DIR_CD                                                           
		 	    GROUP BY GROUPING SETS( ( MRS.SUB_TRD_CD, VVD.RLANE_CD, VVD.SPRT_GRP_CD, VVD.BSA_GRP_CD, MRS.CTRT_RGN_OFC_CD  ) 
		 			,(MRS.SUB_TRD_CD, VVD.RLANE_CD, VVD.SPRT_GRP_CD, VVD.BSA_GRP_CD)) 
		    ) UNI                                                                                            
                ,     (                                                                                           
                        SELECT                                                                                     
                            DIR.RLANE_CD,                                                                                 
                            DIR.DIR_CD                                                                                 
                        FROM                                                                                     
                            SAQ_MON_DIR_CONV DIR,                                                                                 
                            TMP_INPUT_PARMAS INP                                                                                 
                        WHERE                                                                                     
                                 DIR.BSE_YR = INP.BSE_YR                                                                            
                           AND DIR.BSE_QTR_CD = INP.BSE_QTR_CD                                                                                  
                           AND DIR.TRD_CD = INP.TRD_CD                                                                                  
                           AND DIR.CONV_DIR_CD = INP.DIR_CD                                                                                  
                        ) DIR								 		
		WHERE  UNI.SUB_TRD_CD(+) = RHQ.SUB_TRD_CD                                                            
		AND    UNI.LANE_GRP(+) = RHQ.LANE_GRP                                                                
		AND    UNI.CTRT_RGN_OFC_CD(+) = RHQ.CTRT_RGN_OFC_CD                                                  
        AND    DIR.RLANE_CD(+) = RHQ.RLANE_CD                                                                        		
		GROUP BY RHQ.SUB_TRD_CD, RHQ.LANE_GRP, DIR.DIR_CD, RHQ.RGN_GRP , RHQ.CTRT_RGN_OFC_CD,                  
		         ITM.CODE, ITM.TEXT, ITM.ROW_SEQ, RHQ.CTRT_AQ_CD
		ORDER BY KEY, LANE_GRP,RHQ.RGN_GRP DESC, DECODE(NVL(RHQ.CTRT_AQ_CD, 99), '99', 99, 11)||RHQ.CTRT_AQ_CD, CTRT_RGN_OFC_CD, ROW_SEQ			]]></sql>
			<params>
				<param name="targetMonth" type="12" value="" out="N"/>
				<param name="quarter" type="12" value="" out="N"/>
				<param name="slsFcastPubNo" type="12" value="" out="N"/>
				<param name="mqta_mdl_ver_no" type="12" value="" out="N"/>
				<param name="search_sub_trd_cd" type="12" value="" out="N"/>
				<param name="search_rlane_cd" type="12" value="" out="N"/>
				<param name="bse_quarter" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="mQtaStepCd" type="12" value="" out="N"/>
				<param name="glineVerNo" type="12" value="" out="N"/>
				<param name="mQtaVerNo" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
