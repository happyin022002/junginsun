<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="Jp24ManifestListDownloadDBDAOSearchCargoInfoDetailDownloadRSQL">
			<desc><![CDATA[]]></desc>
			<sql><![CDATA[
SELECT DENSE_RANK() OVER (ORDER BY BL_NO, VVD_POL_CD, BKG_POD_CD, BKG_DEL_CD) AS SEQ,
       BL_NO,
       MST_BL,
       BKG_POL_CD,
       VVD_POL_CD,
       BKG_POD_CD,
       VVD_POD_CD,
       BKG_DEL_CD,
       A_S_TYPE,
       A_CMR_KIND,
       -- 1. AMR/CMR 구분 2. ATD 체크 3. SA111 체크
       CASE WHEN A_S_TYPE = ' ' AND PRE_T_S_TYPE = 'AMR' THEN CASE WHEN ATD_SND = ' ' THEN 'AMR' ELSE 'CMR' END
            WHEN A_S_TYPE = 'CMR' AND A_CMR_KIND = '1' THEN CASE WHEN ATD_SND = ' ' THEN 'AMR' ELSE 'CMR' END
            WHEN A_S_TYPE = ' ' AND (PRE_T_S_TYPE = 'CMR' OR PRE_T_S_TYPE = 'CMR_N') THEN CASE WHEN ATD_SND <> ' ' THEN 'CMR' END -- cmr 최초
            WHEN A_S_TYPE = 'AMR' AND PRE_T_S_TYPE = 'CMR' THEN
                  CASE WHEN ATD_SND <> ' ' THEN
                       CASE WHEN SA111_RST <> ' ' THEN 'CMR'
                       ELSE
                       ' '
                       END
                  ELSE 'CMR'
                  END
            WHEN A_S_TYPE = 'CMR' AND PRE_T_S_TYPE = 'CMR_N' THEN CASE WHEN ATD_SND <> ' ' THEN 'CMR' END -- 재전송 cmr
            WHEN A_S_TYPE = 'AMR' AND PRE_T_S_TYPE = 'CMR_N' THEN CASE WHEN ATD_SND <> ' ' THEN 'CMR' END -- 재전송 cmr
            WHEN A_S_TYPE = 'CMR' AND PRE_T_S_TYPE = 'CMR' THEN CASE WHEN ATD_SND <> ' ' THEN
                  CASE WHEN SA111_RST <> ' ' THEN 'CMR'
                       ELSE
                       ' '
                       END
                  ELSE 'CMR'
                  END
            WHEN A_S_TYPE = 'CMR' AND PRE_T_S_TYPE = 'AMR' THEN CASE WHEN ATD_SND = ' ' THEN 'AMR' ELSE 'CMR' END
            WHEN A_S_TYPE = 'AMR' AND PRE_T_S_TYPE = 'AMR' THEN CASE WHEN ATD_SND = ' ' THEN 'AMR' ELSE 'CMR' END
       END AS T_S_TYPE,
       CASE WHEN A_S_TYPE = ' ' AND PRE_T_S_TYPE = 'AMR' THEN CASE WHEN ATD_SND = ' ' THEN '9' ELSE '2' END
            WHEN A_S_TYPE = 'CMR' AND A_CMR_KIND = '1' THEN CASE WHEN ATD_SND = ' ' THEN '9' ELSE '2' END
            WHEN A_S_TYPE = ' ' AND (PRE_T_S_TYPE = 'CMR' OR PRE_T_S_TYPE = 'CMR_N') THEN CASE WHEN ATD_SND <> ' ' THEN '2' END -- cmr 2
            WHEN A_S_TYPE = 'AMR' AND PRE_T_S_TYPE = 'CMR' THEN
                  CASE WHEN ATD_SND <> ' ' THEN
                       CASE WHEN SA111_RST <> ' ' THEN '5'
                       ELSE
                       ' '
                       END
                  ELSE '5'
                  END
            WHEN A_S_TYPE = 'CMR' AND PRE_T_S_TYPE = 'CMR_N' THEN CASE WHEN ATD_SND <> ' ' THEN '2' END -- 재전송 cmr
            WHEN A_S_TYPE = 'AMR' AND PRE_T_S_TYPE = 'CMR_N' THEN CASE WHEN ATD_SND <> ' ' THEN '2' END -- 재전송 cmr
            WHEN A_S_TYPE = 'CMR' AND PRE_T_S_TYPE = 'CMR' THEN
                  CASE WHEN ATD_SND <> ' ' THEN
                       CASE WHEN SA111_RST <> ' ' THEN CASE WHEN A_CMR_KIND = '2' AND SCMR_RST = ' ' THEN '2' ELSE '5' END
                       ELSE
                       ' '
                       END
                  ELSE '5'
                  END
            WHEN A_S_TYPE = 'CMR' AND PRE_T_S_TYPE = 'AMR' THEN CASE WHEN ATD_SND = ' ' THEN '9' ELSE CASE WHEN A_CMR_KIND = '2' AND (SCMR_RST = ' ' OR SCMR_RST = 'Error') THEN '2' ELSE '5' END END
            WHEN A_S_TYPE = 'AMR' AND PRE_T_S_TYPE = 'AMR' THEN CASE WHEN ATD_SND = ' ' THEN '9' ELSE '2' END
       END AS T_CMR_KIND,
       -- T_CMR_KIND,
       S_DT,
       SAMR_DT,
       SAMR_RST,
       TAMR_RST,
       SA111_DT,
       SA111_RST,
       SCMR_DT,
       SCMR_RST,
       SC108_DT,
       SC108_RST,
       SC108_RST_DTL,
       SHPR_NM,
       SHPR_ADDR,
       SHPR_CNT_CD,
       SHPR_PHN_NO,
       CNEE_NM,
       CNEE_ADDR,
       CNEE_CNT_CD,
       CNEE_PHN_NO,
       NTFY_NM,
       NTFY_ADDR,
       NTFY_CNT_CD,
       NTFY_PHN_NO,
       CMDT_CD,
       CMDT_HS_CD,
       MK_DESC,
       PCK_QTY,
       PCK_TP_CD,
       ACT_WGT,
       WGT_UT_CD,
       MEAS_QTY,
       MEAS_UT_CD,
       IMDG_CLS,
       UN_NO,
       CNTR_NO,
       POD_DIV,
       RVIS_CNTR_CUST_TP_CD,
       SHPR_NM||SHPR_ADDR||SHPR_CNT_CD||SHPR_PHN_NO||CNEE_NM||CNEE_ADDR||CNEE_CNT_CD||CNEE_PHN_NO||NTFY_NM||NTFY_ADDR||NTFY_CNT_CD||NTFY_PHN_NO||CMDT_CD||CMDT_HS_CD||MK_DESC||PCK_QTY||PCK_TP_CD||ACT_WGT||WGT_UT_CD||MEAS_QTY||MEAS_UT_CD||IMDG_CLS||UN_NO AS ERR_INFO,
       S_INFO
       --, ATD_SND

  FROM
       (SELECT BL_NO,
               MST_BL,
               BKG_POL_CD,
               VVD_POL_CD,
               BKG_POD_CD,
               VVD_POD_CD,
               BKG_DEL_CD,
               NVL(SUBSTR(S_INFO, 17, 3), ' ') AS A_S_TYPE,
               NVL(SUBSTR(S_INFO, 35, 1), ' ') AS A_CMR_KIND,
               CASE
                  WHEN S_INFO IS NULL OR SUBSTR(S_INFO, 20, 9) <> @[vvd] OR
                       SUBSTR(S_INFO, 29, 6) <> @[pol_cd]||NVL(@[pol_split_no], ' ') OR
                       NVL(SUBSTR(AMR_SAMR, 17, 5), ' ') <> '00000' OR
                       TRIM(SUBSTR(S_INFO, 46, 15)) <> @[call_sgn_no] OR
                       TRIM(SUBSTR(S_INFO, 36, 10)) <> @[ib_cssm_voy_no]
                     THEN
                        CASE
                           WHEN NVL(ATD_SND, 'N_ATD') = 'N_ATD' THEN 'AMR'
                           ELSE 'CMR_N'
                        END
                  ELSE 'CMR'
               END AS PRE_T_S_TYPE,
               NVL(SUBSTR(S_INFO, 1, 16), ' ') AS S_DT,
               NVL(SUBSTR(AMR_SAMR, 1, 16), ' ') AS SAMR_DT,
               --NVL(SUBSTR(AMR_SAMR, 17), ' ') AS SAMR_RST,
               NVL(DECODE(SUBSTR(AMR_SAMR, 17, 5), '00000', 'Success', NULL, ' ', 'Error'), ' ') AS SAMR_RST,
               NVL2(AMR_TAMR, 'Tech File', ' ') AS TAMR_RST,
               NVL(SUBSTR(AMR_SAS111, 2, 16), ' ') AS SA111_DT,
               --NVL(SUBSTR(AMR_SAS111, 17), ' ') AS SA111_RST,
               NVL(DECODE(SUBSTR(AMR_SAS111, 1, 1), '1', 'Clear', SUBSTR(AMR_SAS111, 18, 3)), ' ') AS SA111_RST,
               NVL(SUBSTR(CMR_SCMR, 1, 16), ' ') AS SCMR_DT,
               --NVL(SUBSTR(CMR_SCMR, 17), ' ') AS SCMR_RST,
               NVL(DECODE(SUBSTR(CMR_SCMR, 17, 5), '00000', 'Success', NULL, ' ', 'Error'), ' ') AS SCMR_RST,
               NVL(SUBSTR(CMR_SAS108, 1, 16), ' ') AS SC108_DT,
               --NVL(SUBSTR(CMR_SAS108, 17), ' ') AS SC108_RST,
               NVL(DECODE(SUBSTR(CMR_SAS108, 17, 11), '/////', 'Success', NULL, ' ', 'Error'), ' ') AS SC108_RST,
               NVL(DECODE(SUBSTR(CMR_SAS108, 17, 11), '/////', ' ', NULL, ' ', SUBSTR(CMR_SAS108, 17)), ' ') AS SC108_RST_DTL,
               SHPR_NM,
               SHPR_ADDR,
               SHPR_CNT_CD,
               SHPR_PHN_NO,
               CNEE_NM,
               CNEE_ADDR,
               CNEE_CNT_CD,
               CNEE_PHN_NO,
               NTFY_NM,
               NTFY_ADDR,
               NTFY_CNT_CD,
               NTFY_PHN_NO,
               CMDT_CD,
               CMDT_HS_CD,
               MK_DESC,
               PCK_QTY,
               PCK_TP_CD,
               ACT_WGT,
               WGT_UT_CD,
               MEAS_QTY,
               MEAS_UT_CD,
               IMDG_CLS,
               UN_NO,
               CNTR_NO,
               POD_DIV,
               RVIS_CNTR_CUST_TP_CD,
               S_INFO,
               NVL(ATD_SND, ' ') AS ATD_SND

          FROM
               (SELECT ADVBL.BL_NO,
                       ADVBL.BKG_POL_CD,
                       ADVBL.POL_CD AS VVD_POL_CD,
                       (SELECT B.POD_CD FROM BKG_BOOKING B WHERE ADVBL.BL_NO = B.BL_NO) AS BKG_POD_CD,
                       ADVBL.POD_CD AS VVD_POD_CD,
                       ADVBL.BKG_DEL_CD,
                       DECODE(ADVBL.RVIS_CNTR_CUST_TP_CD, 'N', 'C', 'B', 'S', 'S') AS MST_BL,
                       CNTR.CNTR_NO,
                       DECODE(SHPR.CUST_NM, NULL, 'N', 'Y') AS SHPR_NM,
                       DECODE(SHPR.CUST_ADDR, NULL, 'N', 'Y') AS SHPR_ADDR,
                       DECODE(SHPR.CUST_CNT_CD, NULL, 'N', 'Y') AS SHPR_CNT_CD,
                       DECODE(SHPR.PHN_NO, NULL, 'N', 'Y') AS SHPR_PHN_NO,
                       DECODE(CNEE.CUST_NM, NULL, 'N', 'Y') AS CNEE_NM,
                       DECODE(CNEE.CUST_ADDR, NULL, 'N', 'Y') AS CNEE_ADDR,
                       DECODE(CNEE.CUST_CNT_CD, NULL, 'N', 'Y') AS CNEE_CNT_CD,
                       DECODE(CNEE.PHN_NO, NULL, 'N', 'Y') AS CNEE_PHN_NO,
                       DECODE(NTFY.CUST_NM, NULL, 'N', 'Y') AS NTFY_NM,
                       DECODE(NTFY.CUST_ADDR, NULL, 'N', 'Y') AS NTFY_ADDR,
                       DECODE(NTFY.CUST_CNT_CD, NULL, 'N', 'Y') AS NTFY_CNT_CD,
                       DECODE(NTFY.PHN_NO, NULL, 'N', 'Y') AS NTFY_PHN_NO,
                       DECODE(ADVBL.CMDT_CD, NULL, DECODE(LENGTH(BMD.BL_DESC), 0, 'N', 'Y'), 'Y') AS CMDT_CD,
                       DECODE(BMD.CMDT_HS_CD, NULL, 'N', 'Y') AS CMDT_HS_CD,
                       DECODE(LENGTH(BMD.DIFF_RMK), 0, 'N', 'Y') AS MK_DESC,
                       DECODE(ADVBL.PCK_QTY, NULL, 'N', 'Y') AS PCK_QTY,
                       DECODE(ADVBL.PCK_TP_CD, NULL, 'N', 'Y') AS PCK_TP_CD,
                       DECODE(ADVBL.GRS_WGT, NULL, 'N', 'Y') AS ACT_WGT,
                       DECODE(ADVBL.WGT_UT_CD, NULL, 'N', 'Y') AS WGT_UT_CD,
                       DECODE(ADVBL.MEAS_QTY, NULL, 'N', 'Y') AS MEAS_QTY,
                       DECODE(ADVBL.MEAS_UT_CD, NULL, 'N', 'Y') AS MEAS_UT_CD,
                       CASE
                          WHEN ADVBL.DCGO_FLG = 'Y' AND ADVBL.IMDG_UN_NO IS NOT NULL
                             THEN 'Y'
                          WHEN ADVBL.DCGO_FLG = 'Y' AND ADVBL.IMDG_UN_NO IS NULL
                             THEN 'N'
                          ELSE 'Y'
                       END AS IMDG_CLS,
                       CASE
                          WHEN ADVBL.DCGO_FLG = 'Y' AND ADVBL.IMDG_CLSS_CD IS NOT NULL
                             THEN 'Y'
                          WHEN ADVBL.DCGO_FLG = 'Y' AND ADVBL.IMDG_CLSS_CD IS NULL
                             THEN 'N'
                          ELSE 'Y'
                       END AS UN_NO,
                       (SELECT /*+ INDEX_DESC(RCV XAK1BKG_CSTMS_ADV_JP_RCV_LOG) */
                               TO_CHAR(RCV.RCV_DT, 'YYYY-MM-DD HH24:MI')||RCV.RCV_KEY_DAT_CTNT
                          FROM BKG_CSTMS_ADV_JP_RCV_LOG RCV
                         WHERE RCV.BKG_NO = ADVBL.BL_NO
                           AND RCV.JP_SVC_ID = 'SAMR'
                           AND RCV.JP_MSG_TP_ID = 'SAMR'
                           AND RCV.RCV_KEY_DAT_CTNT NOT LIKE 'W%'
                           AND ROWNUM = 1) AS AMR_SAMR,
                       (SELECT /*+ INDEX_DESC(RCV XAK1BKG_CSTMS_ADV_JP_RCV_LOG) */
                               TO_CHAR(RCV.RCV_DT, 'YYYY-MM-DD HH24:MI')||RCV.RCV_KEY_DAT_CTNT
                          FROM BKG_CSTMS_ADV_JP_RCV_LOG RCV
                         WHERE RCV.BKG_NO = ADVBL.BL_NO
                           AND RCV.JP_SVC_ID = 'TAMR'
                           AND RCV.JP_MSG_TP_ID = 'TAMR'
                           AND ROWNUM = 1) AS AMR_TAMR,
                       (SELECT MAX((DECODE(RCV.JP_BAT_NO, NULL, ' ', RCV.JP_BAT_NO))||TO_CHAR(RCV.UPD_DT, 'YYYY-MM-DD HH24:MI')||RCV.RCV_KEY_DAT_CTNT)
                              -- /*+ INDEX_DESC(RCV XAK1BKG_CSTMS_ADV_JP_RCV_LOG) */
                              -- TO_CHAR(RCV.UPD_DT, 'YYYY-MM-DD HH24:MI')||RCV.RCV_KEY_DAT_CTNT||DECODE(RCV.JP_BAT_NO, NULL, ' ', RCV.JP_BAT_NO)
                          FROM BKG_CSTMS_ADV_JP_RCV_LOG RCV
                         WHERE RCV.BKG_NO = ADVBL.BL_NO
                           AND RCV.JP_SVC_ID = 'SAS111'
                           AND RCV.JP_MSG_TP_ID = 'SAS111'
                           AND NVL(RCV.JP_BAT_NO, 0) < 1
                          -- AND ROWNUM = 1
                       ) AS AMR_SAS111,
                       (SELECT /*+ INDEX_DESC(RCV XAK1BKG_CSTMS_ADV_JP_RCV_LOG) */
                               TO_CHAR(RCV.RCV_DT, 'YYYY-MM-DD HH24:MI')||RCV.RCV_KEY_DAT_CTNT
                          FROM BKG_CSTMS_ADV_JP_RCV_LOG RCV
                         WHERE RCV.BKG_NO = ADVBL.BL_NO
                           AND RCV.JP_SVC_ID = 'SCMR'
                           AND RCV.JP_MSG_TP_ID = 'SCMR'
                           AND RCV.RCV_KEY_DAT_CTNT NOT LIKE 'W%'
                           AND ROWNUM = 1) AS CMR_SCMR,
                       (SELECT /*+ INDEX_DESC(RCV XAK1BKG_CSTMS_ADV_JP_RCV_LOG) */
                               TO_CHAR(RCV.RCV_DT, 'YYYY-MM-DD HH24:MI')||RCV.RCV_KEY_DAT_CTNT
                          FROM BKG_CSTMS_ADV_JP_RCV_LOG RCV
                         WHERE RCV.BKG_NO = ADVBL.BL_NO
                           AND RCV.JP_SVC_ID = 'SAS108'
                           AND RCV.JP_MSG_TP_ID = 'SAS108'
                           AND ROWNUM = 1) AS CMR_SAS108,
                       (SELECT /*+ INDEX_DESC(SND XAK1BKG_CSTMS_ADV_JP_SND_LOG) */
                               TO_CHAR(SND.SND_DT, 'YYYY-MM-DD HH24:MI')||SND.JP_SND_LOG_ID||VSL_CD||SKD_VOY_NO||SKD_DIR_CD||POL_CD||DECODE(YD_SEQ, NULL, ' ', YD_SEQ)||LOG_SEQ||RPAD(IB_CSSM_VOY_NO, 10, ' ')||RPAD(CALL_SGN_NO, 15, ' ')
                          FROM BKG_CSTMS_ADV_JP_SND_LOG SND
                         WHERE ADVBL.BL_NO = SND.BL_NO(+)
                           AND SND.JP_SND_LOG_ID(+) NOT LIKE 'BLL%'
                           AND ROWNUM = 1) AS S_INFO,
                       (SELECT JP_SND_LOG_ID ATD_SND
                          FROM BKG_CSTMS_ADV_JP_SND_LOG SND
                         WHERE SND.VSL_CD = SUBSTR(@[vvd], 1, 4)
                           AND SND.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
                           AND SND.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
                           AND SND.JP_SND_LOG_ID = 'ATD'
                           AND SND.POL_CD = VVD.POL_CD
                           AND ROWNUM = 1) AS ATD_SND,
                       DECODE(ADVBL.POD_CD, VVD.POD_CD, 'DIR', 'T/S') AS POD_DIV,
                       DECODE(ADVBL.RVIS_CNTR_CUST_TP_CD, 'C', 'N', 'S', 'B', ADVBL.RVIS_CNTR_CUST_TP_CD) AS RVIS_CNTR_CUST_TP_CD

                  FROM BKG_VVD VVD,
                       BKG_BOOKING BKG,
                       BKG_CSTMS_ADV_JP_BL ADVBL,
                       BKG_CSTMS_ADV_JP_CUST SHPR,
                       BKG_CSTMS_ADV_JP_CUST CNEE,
                       BKG_CSTMS_ADV_JP_CUST NTFY,
                       BKG_CSTMS_ADV_JP_MK BMD,
                       BKG_CSTMS_ADV_JP_CNTR CNTR

                  WHERE 1 = 1
                   AND VVD.VSL_CD = SUBSTR(@[vvd], 1, 4)
                   AND VVD.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
                   AND VVD.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
                   AND VVD.POL_CD = @[pol_cd]
#if (${lt_div} == 'L')
                   AND VVD.POD_CD = BKG.POD_CD
#elseif (${lt_div} == 'T')
                   AND VVD.POD_CD <> BKG.POD_CD
#end
#if (${pod_div} == 'BKG_POD' && ${bkg_pod_hdr} != '')
                   AND VVD.POD_CD LIKE @[vvd_pod_prefix]||'%'
                   AND BKG.POD_CD LIKE @[bkg_pod_hdr]||'%'
#else
                   AND VVD.POD_CD LIKE @[vvd_pod_prefix]||@[vvd_pod_postfix]||'%'
#end
#if (${bl_no} != '')
                   AND ADVBL.BL_NO = @[bl_no]
#end
#if (${bkg_ofc_cd} != '')
                   AND BKG.BKG_OFC_CD = @[bkg_ofc_cd]
#end
#if (${doc_usr_id} != '')
                   AND BKG.DOC_USR_ID = @[doc_usr_id]
#end
                   AND VVD.BKG_NO = BKG.BKG_NO
                   AND BKG.BL_NO = ADVBL.BL_NO
                   AND ADVBL.BL_NO = CNTR.BL_NO
                   AND ADVBL.BL_NO = SHPR.BL_NO(+)
                   AND SHPR.BKG_CUST_TP_CD(+) = 'S'
                   AND ADVBL.BL_NO = CNEE.BL_NO(+)
                   AND CNEE.BKG_CUST_TP_CD(+) = 'C'
                   AND ADVBL.BL_NO = NTFY.BL_NO(+)
                   AND NTFY.BKG_CUST_TP_CD(+) = 'N'
                   AND BKG.BKG_STS_CD IN ('F', 'W')
                   AND BKG.BKG_CGO_TP_CD != 'P'
                   AND ADVBL.BL_NO = BMD.BL_NO
               )
       )

 WHERE 1 = 1
#if (${error_div} == 'ERR')
   AND (SHPR_NM = 'N' OR SHPR_ADDR = 'N' OR SHPR_CNT_CD = 'N' OR SHPR_PHN_NO = 'N' OR
        CNEE_NM = 'N' OR CNEE_ADDR = 'N' OR CNEE_CNT_CD = 'N' OR CNEE_PHN_NO = 'N' OR
        NTFY_NM = 'N' OR NTFY_ADDR = 'N' OR NTFY_CNT_CD = 'N' OR NTFY_PHN_NO = 'N' OR
        CMDT_CD = 'N' OR CMDT_HS_CD = 'N' OR MK_DESC = 'N' OR PCK_QTY = 'N' OR
        PCK_TP_CD = 'N' OR ACT_WGT = 'N' OR WGT_UT_CD = 'N' OR MEAS_QTY = 'N' OR
        MEAS_UT_CD = 'N' OR IMDG_CLS = 'N' OR UN_NO = 'N')
#end
#if (${cstms_rslts} == 'ALL_RSLT')
   AND (SA111_RST <> ' ' OR SC108_RST <> ' ' OR SAMR_RST <> ' ' OR SCMR_RST <> ' ')
#elseif (${cstms_rslts} == 'SAS111')
   AND SA111_RST <> ' '
#elseif (${cstms_rslts} == 'SAS108')
   AND SC108_RST <> ' '
#elseif (${cstms_rslts} == 'SAMR')
   AND SAMR_RST <> ' '
#elseif (${cstms_rslts} == 'SCMR')
   AND SCMR_RST <> ' '
#end

 ORDER BY BL_NO,
          CNTR_NO			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pol_split_no" type="12" value="" out="N"/>
				<param name="call_sgn_no" type="12" value="" out="N"/>
				<param name="ib_cssm_voy_no" type="12" value="" out="N"/>
				<param name="vvd_pod_prefix" type="12" value="" out="N"/>
				<param name="bkg_pod_hdr" type="12" value="" out="N"/>
				<param name="vvd_pod_postfix" type="12" value="" out="N"/>
				<param name="bl_no" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="doc_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
