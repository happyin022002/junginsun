<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="StatusReportDBDAOSearchOutBdMovementByTPSZSumRSQL">
			<desc><![CDATA[Outbound Container Movement Status by Type/Size[ESM_BKG_0619]]]></desc>
			<sql><![CDATA[
SELECT CNTR_TPSZ_CD_MV 
       ,SUM(DECODE(BKG_RANK,1,NVL(OP_CNTR_QTY,0),0)) BKG_QTY
       ,SUM(DECODE(CNMV_STS_CD ,'OP',NVL(CNTR_VOL_QTY,0),0)) OP
       ,SUM(DECODE(CNMV_STS_CD ,'OC',NVL(CNTR_VOL_QTY,0) ,0)) OC
       ,SUM(DECODE(CNMV_STS_CD ,'EN',NVL(CNTR_VOL_QTY,0) ,DECODE(CNMV_STS_CD,'TN',NVL(CNTR_VOL_QTY,0),0))) ETN
       ,SUM(DECODE(CNMV_STS_CD ,'CY',NVL(CNTR_VOL_QTY,0) ,0)) CY
       ,SUM(DECODE(CNMV_STS_CD ,'VL',NVL(CNTR_VOL_QTY,0) ,0)) VL
       ,SUM(DECODE(CNMV_STS_CD ,'MT',NVL(CNTR_VOL_QTY,0) ,0)) MT
       ,SUM(DECODE(CNMV_STS_CD ,'OT',NVL(CNTR_VOL_QTY,0) ,0)) OT
       ,SUM(NVL(CNTR_VOL_QTY,0)) TTL
       --,COUNT(CNMV_STS_CD) TTL
       --,SUM(DECODE(BKG_RANK,1,OP_CNTR_QTY,0)) - COUNT(CNMV_STS_CD) DIFF_QTY
       ,SUM(DECODE(BKG_RANK,1,NVL(OP_CNTR_QTY,0),0)) - SUM(NVL(CNTR_VOL_QTY,0)) DIFF_QTY
       
FROM   (SELECT DISTINCT VB.TRUNK_VVD
                       ,VB.BKG_NO
                       ,VB.BKG_STS_CD
                       ,VB.BKG_CGO_TP_CD
                       ,VB.POR_CD
                       ,VB.POD_CD
                       ,VB.POL_CD
                       ,B.RCV_TERM_CD
                       ,B.DE_TERM_CD
					   , RANK() OVER(PARTITION BY VB.TRUNK_VVD,VB.BKG_NO,VB.POL_CD,A.CNTR_TPSZ_CD  ORDER BY B.CNTR_NO) BKG_RANK
                       ,B.CNTR_NO
                       ,A.OP_CNTR_QTY
                       ,A.CNTR_TPSZ_CD
                       ,B.CNTR_TPSZ_CD CNTR_TPSZ_CD_MV
					   ,B.CNTR_VOL_QTY	
                       ,CASE
                        WHEN (DECODE(BK.BKG_STS_CD,'X','',
				                DECODE((SELECT COP.COP_STS_CD FROM SCE_COP_HDR COP WHERE COP.BKG_NO = B.BKG_NO AND COP.CNTR_NO = B.CNTR_NO AND COP.COP_STS_CD <> 'X'),'F','MT',
					                (SELECT MST.CNMV_STS_CD FROM MST_CONTAINER MST WHERE MST.CNTR_NO = B.CNTR_NO)))) IN ('OP', 'OC', 'EN', 'TN', 'CY','VL','MT') THEN
                         (DECODE(BK.BKG_STS_CD,'X','',
				                DECODE((SELECT COP.COP_STS_CD FROM SCE_COP_HDR COP WHERE COP.BKG_NO = B.BKG_NO AND COP.CNTR_NO = B.CNTR_NO AND COP.COP_STS_CD <> 'X'),'F','MT',
					                (SELECT MST.CNMV_STS_CD FROM MST_CONTAINER MST WHERE MST.CNTR_NO = B.CNTR_NO))))
                        ELSE
                         'OT'
                        END CNMV_STS_CD
        FROM   BKG_WORK_V VB
        ,      BKG_QUANTITY A  --SELECT * FROM BKG_QUANTITY
        ,      VSK_VSL_PORT_SKD V
        ,      BKG_CONTAINER B
        ,      BKG_BOOKING BK
        ,      CTM_MOVEMENT MOVE
        ,      SCE_CLM SC
        WHERE  VB.BKG_NO = A.BKG_NO 
        AND    V.VSL_CD(+) = VB.KEY_VSL_CD 
        AND    V.SKD_VOY_NO(+) = VB.KEY_SKD_VOY_NO 
        AND    V.SKD_DIR_CD(+) = VB.KEY_SKD_DIR_CD 
        AND    (DECODE(VB.PRE_1_POL_CD, NULL, VB.TRUNK_POL, VB.PRE_1_POL_CD) = V.VPS_PORT_CD(+)) 
        AND    VB.BKG_NO = BK.BKG_NO 
        AND    B.CNTR_NO = MOVE.CNTR_NO(+) 
        AND    B.CNMV_YR = MOVE.CNMV_YR(+) 
        AND    B.CNMV_ID_NO = MOVE.CNMV_ID_NO(+) 
        AND    A.BKG_NO = B.BKG_NO(+) 
        AND    A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD(+) 
        AND    B.CNTR_NO = SC.CNTR_NO(+) 
        AND    B.CNMV_YR = SC.CNMV_YR(+) 
        AND    B.CNMV_ID_NO = SC.CNMV_ID_NO(+) 
        AND    B.CNMV_CYC_NO = SC.CLM_SEQ(+) 
        AND    (VB.BKG_STS_CD = 'F' OR VB.BKG_STS_CD = 'W' OR VB.BKG_STS_CD = 'A') 
        
#if (${vvd_cd} != '') 
AND   VB.KEY_VSL_CD = SUBSTR(@[vvd_cd],1,4)
AND   VB.KEY_SKD_VOY_NO = SUBSTR(@[vvd_cd],5,4)
AND   VB.KEY_SKD_DIR_CD =  SUBSTR(@[vvd_cd],9,1)
#end

#if (${ofc_inc_sub} == 'Y') 
		AND VB.BKG_OFC_CD IN (
      		SELECT OFC_CD  
      		FROM   MDM_ORGANIZATION MO
      		START WITH MO.OFC_CD = NVL(@[bkg_ofc_cd],VB.BKG_OFC_CD)
      		CONNECT BY PRIOR MO.OFC_CD = MO.PRNT_OFC_CD) 
#else 
	#if (${bkg_ofc_cd} != '') 
		AND   VB.BKG_OFC_CD = @[bkg_ofc_cd]
	#end
#end

#if (${bkg_dt_fr} != '' || ${bkg_dt_fr} != '') 
AND VB.BKG_CRE_DT BETWEEN TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD') AND TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999
#elseif (${bkg_dt_fr} != '') 
AND VB.BKG_CRE_DT <= TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999
#elseif (${bkg_dt_to} != '') 
AND VB.BKG_CRE_DT >= TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD')
#end

#if (${bkg_no} != '') 
AND VB.BKG_NO = @[bkg_no]
#end
#if (${pol_cd} != '') 
AND  VB.KEY_POL_CD  LIKE RTRIM(@[pol_cd]) || '%'
#end
#if (${por_cd} != '') 
AND  VB.POR_CD LIKE RTRIM(@[por_cd]) || '%'
#end

#if (${rcv_term_cd} != '') 
AND B.RCV_TERM_CD = @[rcv_term_cd]
#end
#if (${de_term_cd} != '') 
AND VB.DE_TERM_CD = @[de_term_cd]
#end
#if (${org_yd_cd} != '') 
AND B.ORG_YD_CD LIKE  @[org_yd_cd] || '%'
#end


#if (${chk_lt_type} == 'L') 
AND  VB.KEY_POL_CD = VB.POL_CD	--L/T Local  
#elseif (${chk_lt_type} == 'T') 
AND  VB.KEY_POL_CD <> VB.POL_CD	--T/S
#end

#if (${cntr_cfm_flg} != '') 
AND B.CNTR_CFM_FLG = @[cntr_cfm_flg]  --Booking Container의 Tab의 Confirm 정보 
#end

#if (${bkg_sts_cd} != '') 
AND VB.BKG_STS_CD = @[bkg_sts_cd]  	--예약 현황 
#end

#if (${pre_1_vvd} != '') 
AND VB.PRE_1_VVD LIKE @[pre_1_vvd] || '%'	--pre_vvd
#end

#if (${pre_1_pol_cd} != '') 
AND VB.PRE_1_POL_CD = @[pre_1_pol_cd]		--pre_pol       
#end

#if (${xter_bkg_rqst_cd} != '') 
AND VB.XTER_BKG_RQST_CD = @[xter_bkg_rqst_cd]	--BKG Kind 
#end

#if (${cnmv_sts_cd} == 'Y') 
AND B.CNMV_STS_CD = 'OC'	--O/C Status    Container Status가 OC인 항목 조회
#elseif  (${cnmv_sts_cd} == 'N') 
AND B.CNMV_STS_CD != 'OC'
#end


#if (${bkg_cgo_tp_cd} != '') 
AND BK.BKG_CGO_TP_CD = @[bkg_cgo_tp_cd]	 --화물 종류All, Full, Empty로 구분 (Cargo Type 코드 참고)
#end

#if (${dest_trns_svc_mod_cd} != '') 
AND VB.DEST_TRNS_SVC_MOD_CD = @[dest_trns_svc_mod_cd]	--Service Mode
#end

--------------------------------------------------------------------------
--1.'SHPR'
#if (${cust_tp_cd} == 'S') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
AND	  SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd] 
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
AND	  VB.SHIPPER LIKE @[cust_cnt_cd] || @[cust_seq] || '%'
	#end 
	#if (${cust_nm} != '') 
AND	  VB.SHPR_NAME LIKE   @[cust_nm] || '%'
	#end
--2.'CNEE'
#elseif (${cust_tp_cd} == 'C') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
AND	  SUBSTR(VB.CONSIGNEE,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
AND	  VB.CONSIGNEE LIKE @[cust_cnt_cd] || @[cust_seq]
	#end
	#if (${cust_nm} != '') 
AND	  VB.CONSIGNEE_NAME LIKE   @[cust_nm] || '%'
	#end 
--3.'NTFY'
#elseif (${cust_tp_cd} == 'N') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
AND	  SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
AND	  VB.NTFY LIKE @[cust_cnt_cd] || @[cust_seq]
	#end 
	#if (${cust_nm} != '') 
AND	  VB.NTFY_NAME LIKE   @[cust_nm] || '%'
	#end 
--4.'ANFY'
#elseif (${cust_tp_cd} == 'A') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
AND	  SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
AND	  VB.ANTY LIKE @[cust_cnt_cd] || @[cust_seq]
	#end 
	#if (${cust_nm} != '') 
AND	  VB.ANTY_NAME LIKE   @[cust_nm] || '%'
	#end 
--5.'FWDR'
#elseif (${cust_tp_cd} == 'F')
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
AND	  SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
AND	  VB.FFDR LIKE @[cust_cnt_cd] || @[cust_seq]
	#end 
	#if (${cust_nm} != '') 
AND	  VB.FFDR_NAME LIKE   @[cust_nm] || '%'
	#end 
#else
--6.'선택하지 않았을때..'
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
AND	  	(SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd] OR	
		SUBSTR(VB.CONSIGNEE,1,2)= @[cust_cnt_cd] OR
		SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd] OR
		SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd] OR 
		SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd])
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
AND		(VB.SHIPPER = @[cust_cnt_cd] || @[cust_seq] OR	
		VB.CONSIGNEE = @[cust_cnt_cd] || @[cust_seq] OR
		VB.NTFY = @[cust_cnt_cd]|| @[cust_seq] OR
		VB.ANTY = @[cust_cnt_cd]|| @[cust_seq] OR 
		VB.FFDR = @[cust_cnt_cd]|| @[cust_seq])
	#end
	#if (${cust_nm} != '') 
AND		(VB.SHPR_NAME = @[cust_nm] OR	
		VB.CONSIGNEE_NAME = @[cust_nm] OR
		VB.NTFY_NAME = @[cust_nm] OR
		VB.ANTY_NAME = @[cust_nm] OR 
		VB.FFDR_NAME = @[cust_nm])		
	#end
#end
        
        ) T
GROUP  BY  CNTR_TPSZ_CD_MV
ORDER BY CNTR_TPSZ_CD_MV			]]></sql>
			<params>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="bkg_dt_fr" type="12" value="" out="N"/>
				<param name="bkg_dt_to" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="por_cd" type="12" value="" out="N"/>
				<param name="rcv_term_cd" type="12" value="" out="N"/>
				<param name="de_term_cd" type="12" value="" out="N"/>
				<param name="org_yd_cd" type="12" value="" out="N"/>
				<param name="cntr_cfm_flg" type="12" value="" out="N"/>
				<param name="bkg_sts_cd" type="12" value="" out="N"/>
				<param name="pre_1_vvd" type="12" value="" out="N"/>
				<param name="pre_1_pol_cd" type="12" value="" out="N"/>
				<param name="xter_bkg_rqst_cd" type="12" value="" out="N"/>
				<param name="bkg_cgo_tp_cd" type="12" value="" out="N"/>
				<param name="dest_trns_svc_mod_cd" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="cust_nm" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
