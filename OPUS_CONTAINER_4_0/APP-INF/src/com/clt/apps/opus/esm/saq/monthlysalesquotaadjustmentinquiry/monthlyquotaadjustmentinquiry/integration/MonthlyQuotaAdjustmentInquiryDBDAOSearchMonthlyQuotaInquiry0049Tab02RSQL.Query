<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaAdjustmentInquiryDBDAOSearchMonthlyQuotaInquiry0049Tab02RSQL">
			<desc><![CDATA[Trade Group Tab02]]></desc>
			<sql><![CDATA[
WITH TMP_INPUT_PARAMS AS 
		    (SELECT DISTINCT 
		        @[datCreStepCd] AS DAT_CRE_STEP_CD,   
		        @[tgtOrzCd] AS TGT_ORZ_CD,   
		        @[year] AS BSE_YR, 
		        @[bse_quarter] AS BSE_QTR_CD, 
		        @[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10') AS YRMON_01,
		        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10'), 'YYYYMM'), 1), 'YYYYMM') AS YRMON_02,
		        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10'), 'YYYYMM'), 2), 'YYYYMM') AS YRMON_03,		
		        @[dirCd] AS DIR_CD, 
                @[targetGrp] AS SAQ_TGT_GRP_CD, 
		        @[trade] AS TRD_CD,
		        @[mstVersion] AS QTA_MST_VER_NO, 
		        @[version] AS GLINE_VER_NO, 
		        (SELECT N2ND_PRNT_OFC_CD  
		         FROM   SAQ_ORGANIZATION_V  
		         WHERE  OFC_CD = @[rhqCd]) AS RHQ_CD,  
		        @[rhqCd] AS AQ_CD,   		
		        @[ofcCd] AS OFC_CD 
	     FROM   DUAL) 
		    ,SAQ_MON_QTA_ADJ_SMRY_HDR_VIEW AS 
		    ( 
		       SELECT DISTINCT HDR.SAQ_TGT_GRP_CD,HDR.DAT_CRE_STEP_CD,HDR.TGT_ORZ_CD,HDR.BSE_YR,HDR.BSE_QTR_CD,HDR.GLINE_VER_NO,HDR.TRD_CD,HDR.DIR_CD  
		        FROM SAQ_MON_QTA_ADJ_SMRY_HDR HDR  
		           , TMP_INPUT_PARAMS INP   
		        WHERE HDR.DAT_CRE_STEP_CD = INP.DAT_CRE_STEP_CD     
		              AND HDR.TGT_ORZ_CD = INP.TGT_ORZ_CD   
		              AND HDR.BSE_YR = INP.BSE_YR   
		              AND HDR.BSE_QTR_CD = INP.BSE_QTR_CD   
		              AND HDR.GLINE_VER_NO = INP.GLINE_VER_NO   
		              AND HDR.SAQ_TGT_GRP_CD = INP.SAQ_TGT_GRP_CD   
		              AND HDR.TRD_CD LIKE INP.TRD_CD||'%'   
		              AND HDR.DIR_CD LIKE INP.DIR_CD||'%'     
		    ) 		
		    ,TEMP_SMR AS
		    (SELECT 
		         DISTINCT  
		         SMR.TRD_CD,  
		         SMR.DIR_CD, 
		         SMR.SUB_TRD_CD,
		         SMR.RLANE_CD,  
		         SMR.BSE_MON,
		         SMR.VSL_CD,
		         SMR.SKD_VOY_NO,
		         SMR.SKD_DIR_CD
		    FROM SAQ_MON_QTA_ADJ_SMRY_HDR_VIEW HDR 
		         , SAQ_MON_QTA_ADJ_SMRY SMR  		
		         , TMP_INPUT_PARAMS INP   
		    WHERE 
		        HDR.TGT_ORZ_CD = INP.TGT_ORZ_CD  
		       AND HDR.DAT_CRE_STEP_CD = INP.DAT_CRE_STEP_CD  
		       AND HDR.BSE_YR = INP.BSE_YR  
		       AND HDR.BSE_QTR_CD = INP.BSE_QTR_CD  
		       AND HDR.GLINE_VER_NO = INP.GLINE_VER_NO  
		       AND HDR.TRD_CD = INP.TRD_CD   
		       AND HDR.DIR_CD LIKE INP.DIR_CD||'%'  


	#if (${isRhq} == 'false') 

               AND     NVL(SMR.AQ_CD, '  ') LIKE INP.AQ_CD||'%'   
	#end


		       AND SMR.RHQ_CD LIKE INP.RHQ_CD||'%'   
		       AND SMR.RGN_OFC_CD LIKE INP.OFC_CD||'%'       
		       AND SMR.BSE_YR = HDR.BSE_YR 
		       AND SMR.BSE_QTR_CD = HDR.BSE_QTR_CD 
		       AND SMR.SAQ_TGT_GRP_CD = HDR.SAQ_TGT_GRP_CD 
		       AND SMR.GLINE_VER_NO = HDR.GLINE_VER_NO 
		       AND SMR.TRD_CD = HDR.TRD_CD 
		       AND SMR.DIR_CD = HDR.DIR_CD 
		       AND SMR.DAT_CRE_STEP_CD = HDR.DAT_CRE_STEP_CD 
		     )       
		    ,VVD AS 
		    (SELECT 
		            VVD.TRD_CD, 
		            VVD.DIR_CD, 
		            VVD.SUB_TRD_CD, 
		            VVD.RLANE_CD, 
		            VVD.BSE_YR||VVD.BSE_MON AS YRMON, 
		            SUM(VVD.FNL_BSA_CAPA) AS BSA, 
		            COUNT(*) AS VOYAGE 
		     FROM   SAQ_MON_TGT_VVD_ADJ VVD
		            JOIN 
		            TMP_INPUT_PARAMS INP
		            ON
		            ( 
		               VVD.BSE_YR = INP.BSE_YR AND
		               VVD.BSE_QTR_CD = INP.BSE_QTR_CD AND
		               VVD.GLINE_VER_NO = INP.GLINE_VER_NO AND
		               VVD.TRD_CD LIKE INP.TRD_CD||'%' AND
		               VVD.DIR_CD LIKE INP.DIR_CD||'%'
		            )
		            JOIN
		            TEMP_SMR SMR
		            ON
		            (
		               SMR.TRD_CD = VVD.TRD_CD AND
		               SMR.DIR_CD = VVD.DIR_CD AND
		               SMR.SUB_TRD_CD = VVD.SUB_TRD_CD AND
		               SMR.RLANE_CD = VVD.RLANE_CD AND
		               SMR.BSE_MON = VVD.BSE_MON AND
		               SMR.VSL_CD = VVD.VSL_CD AND
		               SMR.SKD_VOY_NO = VVD.SKD_VOY_NO AND
		               SMR.SKD_DIR_CD = VVD.SKD_DIR_CD
		            )               
		     GROUP BY VVD.TRD_CD, VVD.DIR_CD, VVD.SUB_TRD_CD, VVD.RLANE_CD, VVD.BSE_YR||VVD.BSE_MON) 
		SELECT 
		    KEY, 
		    SLEVEL,  
		    SMR.DIR_CD, 
		    SUB_TRD_CD,
		    DECODE(DIR.CONV_DIR_CD,'',SMR.RLANE_CD,SMR.RLANE_CD||' - '||DIR.DIR_CD) RLANE_CD, 
		    DIR.DIR_CD CONV_DIR_CD, 		
		    ROW_SEQ, 
		    REPLACE(ITEM, '(P)', '') AS ITEM_TEXT, 
		    REPLACE(ITEM, '(P)', '') AS ITEM,
		    VAL_00, 
		    VAL_01, 
		    VAL_02, 
		    VAL_03 
		FROM  ( 
		    SELECT 
		          MIN(KEY) AS KEY, 
		          SLEVEL,
		          CASE SLEVEL
		             WHEN 1 THEN 'TOTAL'
		             ELSE SMR.DIR_CD
		          END DIR_CD,            
		          CASE SLEVEL
		             WHEN 1 THEN ''
		             WHEN 2 THEN 'TOTAL'
		             ELSE SMR.SUB_TRD_CD
		          END SUB_TRD_CD,             
		          CASE SLEVEL
		             WHEN 1 THEN ''
		             WHEN 2 THEN ''
		             WHEN 3 THEN 'TOTAL'
		             ELSE SMR.RLANE_CD
		          END RLANE_CD,  
		          ITM.ROW_SEQ, 
		          ITM.TEXT, 
		          CASE 
		             WHEN ITM.CODE IN('05', '07', '08', '11', '12') THEN ITM.TEXT || '*' 
		             ELSE ITM.TEXT 
		          END ITEM, 


			  NVL(DECODE( ITM.CODE,  '01', SUM(BSA),                     			
			                 '02', SUM(VOYAGE),                           			
			                 '03', SUM(SMR.LOD),                                 		
			                 '04', DECODE(SUM(BSA), 0, 0, SUM(SMR.LOD)/SUM(BSA)*100),   
			                 '05', SUM(SMR.REV),                                 		
			                 '06', DECODE(SUM(LOD),0,0,SUM(REV)/SUM(LOD)*1000),                       
			                 '07', SUM(SMR.CM),                                  		
			                 '08', SUM(SMR.RA_CM),                               		
			                 '09', DECODE(SUM(LOD),0,0,SUM(CM)*1000/SUM(LOD)),                        
			                 '10', DECODE(SUM(LOD),0,0,SUM(RA_CM)*1000/SUM(LOD)),                     
			                 '11', SUM(SMR.OP),                                  		
			                 '12', SUM(SMR.RA_OP),                               		
			                 '13', DECODE(SUM(LOD),0,0,SUM(OP)*1000/SUM(LOD)),                        
			                 '14', DECODE(SUM(LOD),0,0,SUM(RA_OP)*1000/SUM(LOD) )), 0) AS VAL_00	 

	#foreach( $key in ${term}) 
			    ,NVL(SUM(DECODE(SMR.YRMON,    INP.YRMON_$key,              		
			        DECODE( ITM.CODE,  '01', (BSA),                     			
			                 '02', (VOYAGE),                           			
			                 '03', (SMR.LOD),                               		
			                 '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),       
			                 '05', (SMR.REV),                                 		
			                 '06', DECODE(LOD,0,0,(REV)/(LOD)*1000),                       
			                 '07', (SMR.CM),                                  		
			                 '08', (SMR.RA_CM),                               		
			                 '09', DECODE(LOD,0,0,(CM)*1000/(LOD)),                        
			                 '10', DECODE(LOD,0,0,(RA_CM)*1000/(LOD)),                     
			                 '11', (SMR.OP),                                  		
			                 '12', (SMR.RA_OP),                               		
			                 '13', DECODE(LOD,0,0,(OP)*1000/(LOD)),                        
			                 '14', DECODE(LOD,0,0,(RA_OP)*1000/(LOD)) ))), 0) AS val_$key

       #end		


		    FROM  ( 
		            SELECT
		                  SMR.KEY,
		                  CASE SMR.G_FLAG
		                     WHEN '111' THEN 1
		                     WHEN '011' THEN 2
		                     WHEN '001' THEN 3
		                     WHEN '000' THEN 4
		                  END SLEVEL,                  
		                  SMR.DIR_CD,
		                  SMR.SUB_TRD_CD,
		                  SMR.RLANE_CD,
		                  SMR.YRMON,
		                  CASE G_FLAG
		                     WHEN '111' THEN SMR.BSA_LVL_1
		                     WHEN '011' THEN SMR.BSA_LVL_2
		                     WHEN '001' THEN SMR.BSA_LVL_3
		                     WHEN '000' THEN SMR.BSA_LVL_4
		                  END BSA, 
		                  CASE G_FLAG
		                     WHEN '111' THEN SMR.VOYAGE_LVL_1
		                     WHEN '011' THEN SMR.VOYAGE_LVL_2
		                     WHEN '001' THEN SMR.VOYAGE_LVL_3
		                     WHEN '000' THEN SMR.VOYAGE_LVL_4
		                  END VOYAGE, 
		                  SMR.LOD,
		                  SMR.REV,
		                  SMR.CM,
		                  SMR.RA_CM,
		                  SMR.OP,
		                  SMR.RA_OP              
		            FROM  (
		                    SELECT 
		                          SMR.G_FLAG,
		                          SMR.KEY,
		                          SMR.DIR_CD,
		                          SMR.SUB_TRD_CD,
		                          SMR.RLANE_CD,
		                          SMR.YRMON,
		                          (SELECT SUM(BSA) 
		                           FROM  VVD 
		                           WHERE YRMON = SMR.YRMON) AS BSA_LVL_1, 
		                          (SELECT SUM(BSA) 
		                           FROM  VVD 
		                           WHERE YRMON = SMR.YRMON
		                           AND   DIR_CD = SMR.DIR_CD) AS BSA_LVL_2,
		                          (SELECT SUM(BSA) 
		                           FROM  VVD 
		                           WHERE YRMON = SMR.YRMON
		                           AND   DIR_CD = SMR.DIR_CD
		                           AND   SUB_TRD_CD = SMR.SUB_TRD_CD) AS BSA_LVL_3,
		                          (SELECT SUM(BSA) 
		                           FROM  VVD 
		                           WHERE YRMON = SMR.YRMON
		                           AND   DIR_CD = SMR.DIR_CD
		                           AND   SUB_TRD_CD = SMR.SUB_TRD_CD
		                           AND   RLANE_CD = SMR.RLANE_CD) AS BSA_LVL_4,
		                          (SELECT SUM(VOYAGE) 
		                           FROM  VVD 
		                           WHERE YRMON = SMR.YRMON) AS VOYAGE_LVL_1,                                                        
		                          (SELECT SUM(VOYAGE) 
		                           FROM  VVD 
		                           WHERE YRMON = SMR.YRMON
		                           AND   DIR_CD = SMR.DIR_CD) AS VOYAGE_LVL_2,
		                          (SELECT SUM(VOYAGE) 
		                           FROM  VVD 
		                           WHERE YRMON = SMR.YRMON
		                           AND   DIR_CD = SMR.DIR_CD
		                           AND   SUB_TRD_CD = SMR.SUB_TRD_CD) AS VOYAGE_LVL_3,
		                          (SELECT SUM(VOYAGE) 
		                           FROM  VVD 
		                           WHERE YRMON = SMR.YRMON
		                           AND   DIR_CD = SMR.DIR_CD
		                           AND   SUB_TRD_CD = SMR.SUB_TRD_CD
		                           AND   RLANE_CD = SMR.RLANE_CD) AS VOYAGE_LVL_4,                                     
		                          LOD,
		                          REV,
		                          CM,
		                          RA_CM,
		                          OP,
		                          RA_OP            
		                    FROM  (
		                            SELECT
		                                  GROUPING(DIR_CD)||GROUPING(SUB_TRD_CD)||GROUPING(RLANE_CD)AS G_FLAG,
		                                  MIN(SMR.DIR_CD||SMR.SUB_TRD_CD||DECODE(SMR.RLANE_CD,'RBCCO','ZZ',SUBSTR(SMR.RLANE_CD,-2))||SMR.RLANE_CD) AS KEY,                  
		                                  DIR_CD,
		                                  SUB_TRD_CD,
		                                  RLANE_CD,
		                                  YRMON,
		                                  SUM(LOD) AS LOD,
		                                  SUM(REV) AS REV,
		                                  SUM(CM) AS CM,
		                                  SUM(RA_CM) AS RA_CM,
		                                  SUM(OP) AS OP,
		                                  SUM(RA_OP) AS RA_OP                  
		                            FROM  (
		                                    SELECT   /*+ PARALLEL(SMR,4) */ 
		                                         SMR.DIR_CD, 
		                                         SMR.SUB_TRD_CD,                                    
		                                         SMR.RLANE_CD, 
		                                         SMR.BSE_YR||SMR.BSE_MON AS YRMON, 
		

		                         		SUM(SMR.LOD_QTY) AS LOD, 
		                         		SUM(SMR.GRS_RPB_REV*SMR.LOD_QTY)/1000 AS REV,  
		                         		SUM((SMR.GRS_RPB_REV-SMR.CM_UC_AMT)*SMR.LOD_QTY)/1000 AS CM, 
		                         		SUM((SMR.GRS_RPB_REV-SMR.RA_CM_UC_AMT)*SMR.LOD_QTY)/1000 AS RA_CM,  
		                         		SUM((SMR.GRS_RPB_REV-SMR.OPFIT_UC_AMT)*SMR.LOD_QTY)/1000 AS OP, 
		                         		SUM((SMR.GRS_RPB_REV-SMR.RA_OPFIT_UC_AMT)*SMR.LOD_QTY )/1000 AS RA_OP 			



		
		                                    FROM SAQ_MON_QTA_ADJ_SMRY_HDR_VIEW HDR 
		                                         , SAQ_MON_QTA_ADJ_SMRY SMR  
		                                         , TMP_INPUT_PARAMS INP  
		                                    WHERE 
		                                           HDR.DAT_CRE_STEP_CD = INP.DAT_CRE_STEP_CD    
		                                           AND HDR.TGT_ORZ_CD = INP.TGT_ORZ_CD  
		                                           AND HDR.BSE_YR = INP.BSE_YR  
		                                           AND HDR.BSE_QTR_CD = INP.BSE_QTR_CD  
		                                           AND HDR.GLINE_VER_NO = INP.GLINE_VER_NO  
		                                           AND HDR.TRD_CD LIKE INP.TRD_CD||'%'  
		                                           AND HDR.DIR_CD LIKE INP.DIR_CD||'%'  


					#if(${isRhq} == 'false') 
							  AND   NVL(SMR.AQ_CD, '  ') LIKE INP.AQ_CD||'%' 
					#end

		                                           AND SMR.RHQ_CD LIKE INP.RHQ_CD||'%'   
		                                           AND SMR.RGN_OFC_CD LIKE INP.OFC_CD||'%' 
		                                           AND SMR.BSE_YR = HDR.BSE_YR 
		                                           AND SMR.BSE_QTR_CD = HDR.BSE_QTR_CD 
		                                           AND SMR.SAQ_TGT_GRP_CD = HDR.SAQ_TGT_GRP_CD 
		                                           AND SMR.GLINE_VER_NO = HDR.GLINE_VER_NO 
		                                           AND SMR.TRD_CD = HDR.TRD_CD 
		                                           AND SMR.DIR_CD = HDR.DIR_CD 
		                                           AND SMR.DAT_CRE_STEP_CD = HDR.DAT_CRE_STEP_CD 

		                                    GROUP BY SMR.DIR_CD, SMR.SUB_TRD_CD, SMR.RLANE_CD, SMR.BSE_YR||SMR.BSE_MON
		                                  ) SMR 
		                            GROUP BY GROUPING SETS((YRMON), 
		                                                    (SMR.DIR_CD, YRMON), 
		                                                    (SMR.DIR_CD, SMR.SUB_TRD_CD, YRMON), 
		                                                    (SMR.DIR_CD, SMR.SUB_TRD_CD, SMR.RLANE_CD, YRMON))    
		                          ) SMR    
		                  ) SMR                                                                                
		          ) SMR 
		          JOIN 
		          ( 
		            SELECT  INTG_CD_VAL_CTNT AS CODE, 
		                    INTG_CD_VAL_DP_DESC AS TEXT, 
		                    INTG_CD_VAL_DP_SEQ AS ROW_SEQ 
		            FROM  COM_INTG_CD_DTL 

	      #if (${orgType} == 'HO' ) 
			       WHERE INTG_CD_ID = 'CD01389' 
	      #elseif (${orgType} == 'RHQ' )  -- 지역본부는 BSA, L/F를 보여주지 않는다.
			       WHERE INTG_CD_ID = 'CD01390' 
	      #elseif (${orgType} == 'OFC' )  --  점소는 BSA, L/F, 실적 CM/OP 를 보여주지 않는다.
			       WHERE INTG_CD_ID = 'CD01391' 
	      #end


  
                    AND ('ALL' = @[item]     OR (INTG_CD_VAL_DP_DESC in (
                                  #foreach( $key in ${itemAr}) 
                                           '$key',
                                  #end
                                            'X'
                    )) ) ) itm



		          ON 0 = 0 
		          JOIN 
		          TMP_INPUT_PARAMS INP 
		          ON 1 = 1 
		      GROUP BY SMR.SLEVEL, SMR.DIR_CD, SMR.SUB_TRD_CD, SMR.RLANE_CD, ITM.ROW_SEQ, ITM.TEXT, ITM.CODE           
		      ) SMR 
		    ,     (                                                                                          
		          SELECT                                                                                    
		              DIR.RLANE_CD,                                                                                
		              DIR.DIR_CD,							
		              DIR.CONV_DIR_CD                                                                                
		          FROM                                                                                    
		              SAQ_MON_DIR_CONV DIR                                                                                
		          WHERE                                                                                    
		                 DIR.BSE_YR = @[year]                                                                          
		             AND DIR.BSE_QTR_CD = @[bse_quarter]                                                                                 
		             AND DIR.TRD_CD = @[trade]                                                                               
		          ) DIR                                                                                 
		     WHERE                                                                                 
		             DIR.RLANE_CD(+) = SMR.RLANE_CD 					
		         AND    DIR.CONV_DIR_CD(+) = SMR.DIR_CD							
		ORDER BY KEY, SLEVEL, ROW_SEQ			]]></sql>
			<params>
				<param name="datCreStepCd" type="12" value="" out="N"/>
				<param name="tgtOrzCd" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="bse_quarter" type="12" value="" out="N"/>
				<param name="dirCd" type="12" value="" out="N"/>
				<param name="targetGrp" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="mstVersion" type="12" value="" out="N"/>
				<param name="version" type="12" value="" out="N"/>
				<param name="rhqCd" type="12" value="" out="N"/>
				<param name="ofcCd" type="12" value="" out="N"/>
				<param name="item" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
