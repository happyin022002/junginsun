/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : MonthlyQuotaAdjustmentRHQDBDAOSearchMonthlyAdjustmentRHQTabRhqLane0075Tab03List01RSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.01.06
*@LastModifier : 
*@LastVersion : 1.0
* 2015.01.06 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.saq.monthlysalesquotamanage.monthlyquotaadjustmentrhq.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class MonthlyQuotaAdjustmentRHQDBDAOSearchMonthlyAdjustmentRHQTabRhqLane0075Tab03List01RSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 2011.02.15 김종준 [T-선사] YEARLY QTA 부분 삭제
	  * 2011.03.02 SAQ_GET_AQ_DP_SEQ_FNC -> DECODE(NVL(MRS.CTRT_AQ_CD, 99), '99', 99, 11)||MRS.CTRT_AQ_CD 수정
	  * 
	  * </pre>
	  */
	public MonthlyQuotaAdjustmentRHQDBDAOSearchMonthlyAdjustmentRHQTabRhqLane0075Tab03List01RSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bse_quarter",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pfmc_to_yr_mon",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("mqta_mdl_ver_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pfmc_to_yr_qtr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pfmc_fr_yr_qtr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("glineVerNo",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("slsFcastPubNo",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ctrt_rhq_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pfmc_fr_yr_mon",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("mQtaVerNo",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("quarter",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.saq.monthlysalesquotamanage.monthlyquotaadjustmentrhq.integration").append("\n"); 
		query.append("FileName : MonthlyQuotaAdjustmentRHQDBDAOSearchMonthlyAdjustmentRHQTabRhqLane0075Tab03List01RSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH TMP_INPUT_PARMAS AS                                                           " ).append("\n"); 
		query.append("    (SELECT                                                                        " ).append("\n"); 
		query.append("	@[year] AS BSE_YR,                                                          " ).append("\n"); 
		query.append("	@[bse_quarter] AS BSE_QTR_CD,                                                         " ).append("\n"); 
		query.append("	@[quarter] AS BEF_YR_QTR,                                                         " ).append("\n"); 
		query.append("	TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10'), 'YYYYMM'), -1), 'YYYYMM') AS BEF_YR_MON," ).append("\n"); 
		query.append("	TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10'), 'YYYYMM'), 1), 'YYYYMM') AS ADD1_YR_MON," ).append("\n"); 
		query.append("	TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10'), 'YYYYMM'), 2), 'YYYYMM') AS ADD2_YR_MON," ).append("\n"); 
		query.append("	@[pfmc_fr_yr_mon] AS PFMC_FR_YR_MON,                                                  " ).append("\n"); 
		query.append("	@[pfmc_to_yr_mon] AS PFMC_TO_YR_MON,                                                  " ).append("\n"); 
		query.append("	@[pfmc_fr_yr_qtr] AS PFMC_FR_YR_QTR,                                                   " ).append("\n"); 
		query.append("	@[pfmc_to_yr_qtr] AS PFMC_TO_YR_QTR,                                                   		" ).append("\n"); 
		query.append("	@[bound] AS DIR_CD,                                                          " ).append("\n"); 
		query.append("	@[trade] AS TRD_CD,                                                           " ).append("\n"); 
		query.append("	@[slsFcastPubNo] AS SLS_FCAST_PUB_NO,                                                " ).append("\n"); 
		query.append("	@[mqta_mdl_ver_no] AS MQTA_MDL_VER_NO,                                                 " ).append("\n"); 
		query.append("	@[glineVerNo] AS GLINE_VER_NO,                                                    " ).append("\n"); 
		query.append("	@[mQtaVerNo] AS MQTA_VER_NO,                                                     " ).append("\n"); 
		query.append("	@[ctrt_rhq_cd] AS CTRT_RHQ_CD                                                     " ).append("\n"); 
		query.append("     FROM   DUAL )                                                                 " ).append("\n"); 
		query.append("SELECT                                                                             " ).append("\n"); 
		query.append("    MIN(UNI.KEY) AS KEY,                                                           " ).append("\n"); 
		query.append("    UNI.SLEVEL,                                                                    " ).append("\n"); 
		query.append("    UNI.SUB_TRD_CD,                                                                " ).append("\n"); 
		query.append("    DECODE(DIR.DIR_CD,'',UNI.RLANE_CD,UNI.RLANE_CD||' - '||DIR.DIR_CD) RLANE_CD,                                                                  " ).append("\n"); 
		query.append("    DIR.DIR_CD CONV_DIR_CD,                                                                  " ).append("\n"); 
		query.append("    CASE WHEN UNI.RLANE_CD = 'TOTAL' AND UNI.CTRT_AQ_CD = 'TOTAL'                  " ).append("\n"); 
		query.append("        THEN ' ' ELSE UNI.CTRT_AQ_CD END AS CTRT_AQ_CD,                            " ).append("\n"); 
		query.append("    CASE WHEN UNI.CTRT_AQ_CD = 'TOTAL' AND UNI.CTRT_RGN_OFC_CD = 'TOTAL'           " ).append("\n"); 
		query.append("        THEN ' ' ELSE UNI.CTRT_RGN_OFC_CD END AS CTRT_RGN_OFC_CD,                  " ).append("\n"); 
		query.append("    ITM.ROW_SEQ,                                                                   " ).append("\n"); 
		query.append("    REPLACE(ITM.TEXT,'(P)','') AS ITEM_TEXT,                                                        " ).append("\n"); 
		query.append("	DECODE( ITM.CODE,                                                             " ).append("\n"); 
		query.append("	        '05', REPLACE(ITM.TEXT,'(P)','')||'*', -- G.REV                                        " ).append("\n"); 
		query.append("	        '07', REPLACE(ITM.TEXT,'(P)','')||'*', -- CM                                           " ).append("\n"); 
		query.append("	        '08', REPLACE(ITM.TEXT,'(P)','')||'*', -- CM                                           " ).append("\n"); 
		query.append("	        '11', REPLACE(ITM.TEXT,'(P)','')||'*', -- OP                                           " ).append("\n"); 
		query.append("	        '12', REPLACE(ITM.TEXT,'(P)','')||'*', -- OP                                           " ).append("\n"); 
		query.append("	        REPLACE(ITM.TEXT,'(P)','') ) AS ITEM,                                                      " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'PFMC_QTA' AND UNI.MON_SEQ = '0' THEN                " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS PFMC_QTA,                                                          " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'PFMC_SMR' AND UNI.MON_SEQ = '0' THEN                " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS PFMC_SMR,                                                          " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'MONTHLY' AND UNI.MON_SEQ = '0' THEN                 " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS RECENT_MON,                                                        " ).append("\n"); 
		query.append("	    DECODE( ITM.CODE,     " ).append("\n"); 
		query.append("                '02', SUM( DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_VOY,0)),                                             " ).append("\n"); 
		query.append("                '03', SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)),                                              " ).append("\n"); 
		query.append("                '05', SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_REV,0))/1000,                                         " ).append("\n"); 
		query.append("                '06', DECODE(SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_REV,0))/SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '07', SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_CM,0))/1000,                                          " ).append("\n"); 
		query.append("                '08', 0,                                       " ).append("\n"); 
		query.append("                '09', DECODE(SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_CM,0))/SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '10', 0,                                           " ).append("\n"); 
		query.append("                '11', SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_OP,0))/1000,                                          " ).append("\n"); 
		query.append("                '12', SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_RA_OP,0))/1000,                                       " ).append("\n"); 
		query.append("                '13', DECODE(SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_OP,0))/SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '14', DECODE(SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_RA_OP,0))/SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)))" ).append("\n"); 
		query.append("    )                                          " ).append("\n"); 
		query.append("    AS FORECAST_TOT,     " ).append("\n"); 
		query.append("    DECODE( ITM.CODE,                                  " ).append("\n"); 
		query.append("                '02', SUM( DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_VOY,0)),                                            " ).append("\n"); 
		query.append("                '03', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),                                              " ).append("\n"); 
		query.append("                '05', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_REV,0))/1000,                                         " ).append("\n"); 
		query.append("                '06', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_REV,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '07', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_CM,0))/1000,                                          " ).append("\n"); 
		query.append("                '08', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_RA_CM,0))/1000,                                       " ).append("\n"); 
		query.append("                '09', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_CM,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '10', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_RA_CM,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0))),                                           " ).append("\n"); 
		query.append("                '11', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_OP,0))/1000,                                          " ).append("\n"); 
		query.append("                '12', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_RA_OP,0))/1000,                                       " ).append("\n"); 
		query.append("                '13', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_OP,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '14', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_RA_OP,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)))" ).append("\n"); 
		query.append("    )                                          " ).append("\n"); 
		query.append("    AS MODEL_TOT,     " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    DECODE( ITM.CODE,                                " ).append("\n"); 
		query.append("                '02', SUM( DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_VOY,0)),                                              " ).append("\n"); 
		query.append("                '03', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),                                              " ).append("\n"); 
		query.append("                '05', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_REV,0))/1000,                                         " ).append("\n"); 
		query.append("                '06', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_REV,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '07', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_CM,0))/1000,                                          " ).append("\n"); 
		query.append("                '08', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_RA_CM,0))/1000,                                       " ).append("\n"); 
		query.append("                '09', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_CM,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '10', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_RA_CM,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0))),                                           " ).append("\n"); 
		query.append("                '11', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_OP,0))/1000,                                          " ).append("\n"); 
		query.append("                '12', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_RA_OP,0))/1000,                                       " ).append("\n"); 
		query.append("                '13', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_OP,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '14', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_RA_OP,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)))" ).append("\n"); 
		query.append("    )                                          " ).append("\n"); 
		query.append("    AS INITIAL_TOT,     " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    DECODE( ITM.CODE,                                 " ).append("\n"); 
		query.append("                '02', SUM( DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_VOY,0)),                                               " ).append("\n"); 
		query.append("                '03', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),                                              " ).append("\n"); 
		query.append("                '05', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_REV,0))/1000,                                         " ).append("\n"); 
		query.append("                '06', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_REV,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '07', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_CM,0))/1000,                                          " ).append("\n"); 
		query.append("                '08', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_RA_CM,0))/1000,                                       " ).append("\n"); 
		query.append("                '09', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_CM,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '10', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_RA_CM,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0))),                                           " ).append("\n"); 
		query.append("                '11', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_OP,0))/1000,                                          " ).append("\n"); 
		query.append("                '12', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_RA_OP,0))/1000,                                       " ).append("\n"); 
		query.append("                '13', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_OP,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0))),                                              " ).append("\n"); 
		query.append("                '14', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_RA_OP,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)))" ).append("\n"); 
		query.append("    )                                          " ).append("\n"); 
		query.append("    AS FINAL_TOT   ,      " ).append("\n"); 
		query.append("		     " ).append("\n"); 
		query.append("		-- 1번째 월 부터 3번째 월까지 반복  " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'FORECAST' AND UNI.MON_SEQ = '1' THEN     " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS FCAST_1,                                                " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'MODEL' AND UNI.MON_SEQ = '1' THEN        " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS MDL_RST_1,                                              " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'RHQ' AND UNI.MON_SEQ = '1' THEN          " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS FINAL_1,                                                  " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'INITIAL' AND UNI.MON_SEQ = '1' THEN      " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS INITIAL_1,                                               	" ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'FORECAST' AND UNI.MON_SEQ = '2' THEN     " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS FCAST_2,                                                " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'MODEL' AND UNI.MON_SEQ = '2' THEN        " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS MDL_RST_2,                                              " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'RHQ' AND UNI.MON_SEQ = '2' THEN          " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS FINAL_2,                                                  " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'INITIAL' AND UNI.MON_SEQ = '2' THEN      " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS INITIAL_2," ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'FORECAST' AND UNI.MON_SEQ = '3' THEN     " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS FCAST_3,                                                " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'MODEL' AND UNI.MON_SEQ = '3' THEN        " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS MDL_RST_3,                                              " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'RHQ' AND UNI.MON_SEQ = '3' THEN          " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS FINAL_3,                                                  " ).append("\n"); 
		query.append("    MIN(CASE WHEN UNI.GUBUN = 'INITIAL' AND UNI.MON_SEQ = '3' THEN      " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                          " ).append("\n"); 
		query.append("                 '02', UNI.TOT_VOY,                                                " ).append("\n"); 
		query.append("                 '03', UNI.TOT_LOD,                                                " ).append("\n"); 
		query.append("                 '05', UNI.TOT_REV/1000,                                           " ).append("\n"); 
		query.append("                 '06', UNI.TOT_RPB,                                                " ).append("\n"); 
		query.append("                 '07', UNI.TOT_CM/1000,                                            " ).append("\n"); 
		query.append("                 '08', UNI.TOT_RA_CM/1000,                                         " ).append("\n"); 
		query.append("                 '09', UNI.TOT_CMB,                                                " ).append("\n"); 
		query.append("                 '10', UNI.TOT_RA_CMB,                                             " ).append("\n"); 
		query.append("                 '11', UNI.TOT_OP/1000,                                            " ).append("\n"); 
		query.append("                 '12', UNI.TOT_RA_OP/1000,                                         " ).append("\n"); 
		query.append("                 '13', UNI.TOT_OPB,                                                " ).append("\n"); 
		query.append("                 '14', UNI.TOT_RA_OPB )                                            " ).append("\n"); 
		query.append("        END) AS INITIAL_3           	    " ).append("\n"); 
		query.append("FROM (                                                                             " ).append("\n"); 
		query.append("    SELECT  INTG_CD_VAL_CTNT AS CODE,                                              " ).append("\n"); 
		query.append("            INTG_CD_VAL_DP_DESC AS TEXT,                                           " ).append("\n"); 
		query.append("            INTG_CD_VAL_DP_SEQ AS ROW_SEQ                                          " ).append("\n"); 
		query.append("    FROM  COM_INTG_CD_DTL                                                          " ).append("\n"); 
		query.append("    WHERE INTG_CD_ID = 'CD01388'                                                   " ).append("\n"); 
		query.append("    ) ITM, (                                                                       " ).append("\n"); 
		query.append("    SELECT -- Performance Quota                                                                        " ).append("\n"); 
		query.append("           QTA.GUBUN,                                                                           " ).append("\n"); 
		query.append("           QTA.KEY,                 " ).append("\n"); 
		query.append("           QTA.SLEVEL,                                                                                 " ).append("\n"); 
		query.append("           QTA.SUB_TRD_CD,                                                                                " ).append("\n"); 
		query.append("           QTA.RLANE_CD,                          " ).append("\n"); 
		query.append("           QTA.CTRT_AQ_CD,                    " ).append("\n"); 
		query.append("           QTA.CTRT_RGN_OFC_CD,     " ).append("\n"); 
		query.append("           QTA.MON_SEQ,                                                                                " ).append("\n"); 
		query.append("           QTA.BSE_MON,                                                                               " ).append("\n"); 
		query.append("           QTA.TOT_VOY,                         " ).append("\n"); 
		query.append("           QTA.TOT_LOD,                                                          " ).append("\n"); 
		query.append("           QTA.TOT_REV ,                                                  " ).append("\n"); 
		query.append("           QTA.TOT_RPB ,                                 " ).append("\n"); 
		query.append("           QTA.TOT_CM ,                                   " ).append("\n"); 
		query.append("           QTA.TOT_RA_CM ,      " ).append("\n"); 
		query.append("           QTA.TOT_CMB,                  " ).append("\n"); 
		query.append("           QTA.TOT_RA_CMB ,                                                          " ).append("\n"); 
		query.append("           QTA.TOT_OP ,                            " ).append("\n"); 
		query.append("           QTA.TOT_RA_OP,   " ).append("\n"); 
		query.append("           QTA.TOT_OPB ,                                                             " ).append("\n"); 
		query.append("           QTA.TOT_RA_OPB                                                            		" ).append("\n"); 
		query.append("    FROM   TMP_INPUT_PARMAS    INP, (                                                                 		" ).append("\n"); 
		query.append("           SELECT -- Performance Quota                                                                        " ).append("\n"); 
		query.append("                  'PFMC_QTA' AS GUBUN,                                                                           " ).append("\n"); 
		query.append("                  NVL(DIR.CONV_DIR_CD, QTA.DIR_CD) DIR_CD,                                            " ).append("\n"); 
		query.append("                  MIN(VVD.SUB_TRD_CD||DECODE(QTA.RLANE_CD,'RBCCO','ZZ',SUBSTR(QTA.RLANE_CD,-2))||QTA.RLANE_CD||DECODE(NVL(QTA.AQ_CD, 99), '99', 99, 11)||QTA.AQ_CD||QTA.RGN_OFC_CD) AS KEY,                 " ).append("\n"); 
		query.append("                  DECODE(GROUPING(QTA.RLANE_CD), 1, '1',                                                         " ).append("\n"); 
		query.append("                     DECODE(GROUPING(QTA.AQ_CD), 1, '2',                                                   " ).append("\n"); 
		query.append("                        DECODE(GROUPING(QTA.RGN_OFC_CD), 1, '3', '4')))                                   " ).append("\n"); 
		query.append("                           AS SLEVEL,                                                                                 " ).append("\n"); 
		query.append("                  VVD.SUB_TRD_CD,                                                                                " ).append("\n"); 
		query.append("                  DECODE(GROUPING(QTA.RLANE_CD), 1, 'TOTAL', QTA.RLANE_CD) AS RLANE_CD,                          " ).append("\n"); 
		query.append("                  DECODE(GROUPING(QTA.AQ_CD), 1, 'TOTAL', QTA.AQ_CD) AS CTRT_AQ_CD,                    " ).append("\n"); 
		query.append("                  DECODE(GROUPING(QTA.RGN_OFC_CD), 1, 'TOTAL', QTA.RGN_OFC_CD) AS CTRT_RGN_OFC_CD,     " ).append("\n"); 
		query.append("                  '0' AS MON_SEQ,                                                                                " ).append("\n"); 
		query.append("                  '00' AS BSE_MON,                                                                               " ).append("\n"); 
		query.append("                  COUNT(DISTINCT QTA.VSL_CD||QTA.SKD_VOY_NO||QTA.SKD_DIR_CD) AS TOT_VOY,                         " ).append("\n"); 
		query.append("                  SUM(QTA.LOD_QTY         ) AS TOT_LOD,                                                          " ).append("\n"); 
		query.append("                  SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY) AS TOT_REV ,                                                  " ).append("\n"); 
		query.append("                  SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY)/SUM(QTA.LOD_QTY) AS TOT_RPB ,                                 " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY) AS TOT_CM ,                                   " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY) AS TOT_RA_CM ,      " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY)/SUM(QTA.LOD_QTY) AS TOT_CMB,                  " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY)                     " ).append("\n"); 
		query.append("                      /SUM(QTA.LOD_QTY) AS TOT_RA_CMB ,                                                          " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    ) AS TOT_OP ,                            " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY ) AS TOT_RA_OP,   " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    )                                        " ).append("\n"); 
		query.append("                      /SUM(QTA.LOD_QTY) AS TOT_OPB ,                                                             " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY )                 " ).append("\n"); 
		query.append("                      /SUM(QTA.LOD_QTY) AS TOT_RA_OPB                                                            " ).append("\n"); 
		query.append("            FROM  (                                                                                        " ).append("\n"); 
		query.append("                   SELECT DISTINCT                                                                            " ).append("\n"); 
		query.append("                          RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO,                                           		" ).append("\n"); 
		query.append("                          RLS.BSE_QTR_CD AS BSE_QTR_CD                                                        " ).append("\n"); 
		query.append("                   FROM   SAQ_MON_QTA_RLSE RLS,                                                               " ).append("\n"); 
		query.append("                          TMP_INPUT_PARMAS INP                                                                " ).append("\n"); 
		query.append("                   WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD BETWEEN (SELECT DISTINCT PFMC_FR_YR_QTR FROM TMP_INPUT_PARMAS )                            " ).append("\n"); 
		query.append("                                                     AND    (SELECT DISTINCT  INP.PFMC_TO_YR_QTR FROM TMP_INPUT_PARMAS )  				          " ).append("\n"); 
		query.append("                   AND    RLS.QTA_RLSE_STS_CD = 'R'                                                           " ).append("\n"); 
		query.append("                  ) RLS,                                                                                   " ).append("\n"); 
		query.append("                  TMP_INPUT_PARMAS    INP,                                                                    " ).append("\n"); 
		query.append("                  SAQ_MON_DIR_CONV    DIR,                                                            " ).append("\n"); 
		query.append("                  SAQ_MON_CFM_QTA     QTA,    " ).append("\n"); 
		query.append("                  SAQ_MON_CFM_TGT_VVD VVD     " ).append("\n"); 
		query.append("            WHERE QTA.MQTA_RLSE_VER_NO = RLS.MQTA_RLSE_VER_NO                                              " ).append("\n"); 
		query.append("            AND   QTA.BSE_QTR_CD = RLS.BSE_QTR_CD                                                                " ).append("\n"); 
		query.append("            AND   QTA.TRD_CD = INP.TRD_CD                                                                  " ).append("\n"); 
		query.append("            AND   QTA.RHQ_CD = INP.CTRT_RHQ_CD                                                   		" ).append("\n"); 
		query.append("            AND   QTA.BSE_YR||QTA.BSE_MON BETWEEN PFMC_FR_YR_MON AND PFMC_TO_YR_MON							  			" ).append("\n"); 
		query.append("            AND   QTA.LOD_QTY > 0             " ).append("\n"); 
		query.append("            AND   QTA.QTA_TGT_CD = 'Q' -- Q : Sales Quota, T : Load Target                                     " ).append("\n"); 
		query.append("            AND   QTA.BSE_YR = VVD.BSE_YR" ).append("\n"); 
		query.append("            AND   QTA.BSE_MON = VVD.BSE_MON" ).append("\n"); 
		query.append("            AND   QTA.BSE_QTR_CD = VVD.BSE_QTR_CD" ).append("\n"); 
		query.append("            AND   QTA.TRD_CD = VVD.TRD_CD" ).append("\n"); 
		query.append("            AND   QTA.DIR_CD = VVD.DIR_CD" ).append("\n"); 
		query.append("            AND   QTA.RLANE_CD = VVD.RLANE_CD" ).append("\n"); 
		query.append("            AND   QTA.VSL_CD = VVD.VSL_CD" ).append("\n"); 
		query.append("            AND   QTA.SKD_VOY_NO = VVD.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND   QTA.SKD_DIR_CD = VVD.SKD_DIR_CD" ).append("\n"); 
		query.append("            AND   QTA.MQTA_RLSE_VER_NO = VVD.MQTA_RLSE_VER_NO                                                             " ).append("\n"); 
		query.append("            AND   QTA.BSE_YR = DIR.BSE_YR(+)          											   " ).append("\n"); 
		query.append("            AND   DIR.BSE_QTR_CD(+) = @[bse_quarter] 				          	       							   " ).append("\n"); 
		query.append("            AND   QTA.TRD_CD = DIR.TRD_CD(+)       										   		   " ).append("\n"); 
		query.append("            AND   QTA.RLANE_CD = DIR.RLANE_CD(+)       										       " ).append("\n"); 
		query.append("            AND   QTA.DIR_CD = DIR.DIR_CD(+)       										           		" ).append("\n"); 
		query.append("            GROUP BY ROLLUP(NVL(DIR.CONV_DIR_CD, QTA.DIR_CD), QTA.RLANE_CD, QTA.AQ_CD, QTA.RGN_OFC_CD), VVD.SUB_TRD_CD                 " ).append("\n"); 
		query.append("        ) QTA                                                                                          " ).append("\n"); 
		query.append("    WHERE NVL(QTA.DIR_CD, INP.DIR_CD) = INP.DIR_CD                                                                                          		" ).append("\n"); 
		query.append("    UNION ALL                                                                                          " ).append("\n"); 
		query.append("    SELECT -- Performance PFMC                                                                         " ).append("\n"); 
		query.append("           'PFMC_SMR' AS GUBUN,                                                                           " ).append("\n"); 
		query.append("           BPS.KEY,                                                                                       " ).append("\n"); 
		query.append("           BPS.SLEVEL,                                                                                    " ).append("\n"); 
		query.append("           BPS.SUB_TRD_CD,                                                                                " ).append("\n"); 
		query.append("           BPS.RLANE_CD,                                                                                  " ).append("\n"); 
		query.append("           BPS.CTRT_AQ_CD,                                                                                " ).append("\n"); 
		query.append("           BPS.CTRT_RGN_OFC_CD,                                                                           " ).append("\n"); 
		query.append("           '0' AS MON_SEQ,                                                                                " ).append("\n"); 
		query.append("           '00' AS BSE_MON,                                                                               " ).append("\n"); 
		query.append("           (VVD.TOT_VOY) AS TOT_VOY,                                                                      " ).append("\n"); 
		query.append("           (BPS.TOT_LOD) AS TOT_LOD,                                                                      " ).append("\n"); 
		query.append("           (BPS.TOT_REV) AS TOT_REV,                                                                      " ).append("\n"); 
		query.append("           (BPS.TOT_REV)/(BPS.TOT_LOD) AS TOT_RPB,                                                        " ).append("\n"); 
		query.append("           (BPS.TOT_CM) AS TOT_CM,                                                                        " ).append("\n"); 
		query.append("           (BPS.TOT_RA_CM) AS TOT_RA_CM,                                                                  " ).append("\n"); 
		query.append("           (BPS.TOT_CM)/(BPS.TOT_LOD) AS TOT_CMB,                                                         " ).append("\n"); 
		query.append("           (BPS.TOT_RA_CM)/(BPS.TOT_LOD) AS TOT_RA_CMB,                                                   " ).append("\n"); 
		query.append("           (BPS.TOT_OP) AS TOT_OP,                                                                        " ).append("\n"); 
		query.append("           (BPS.TOT_RA_OP) AS TOT_RA_OP,                                                                  " ).append("\n"); 
		query.append("           (BPS.TOT_OP)/(BPS.TOT_LOD) AS TOT_OPB,                                                         " ).append("\n"); 
		query.append("           (BPS.TOT_RA_OP)/(BPS.TOT_LOD) AS TOT_RA_OPB                                                    " ).append("\n"); 
		query.append("    FROM  (					                                                                          " ).append("\n"); 
		query.append("            SELECT -- Performance VOYAGE (선택한 Bound)                                                     " ).append("\n"); 
		query.append("                   BPS.KEY,             																	  " ).append("\n"); 
		query.append("                   BPS.SLEVEL,                                                                                " ).append("\n"); 
		query.append("                   BPS.SUB_TRD_CD,                                                                            " ).append("\n"); 
		query.append("                   BPS.RLANE_CD,                      														  " ).append("\n"); 
		query.append("                   BPS.CTRT_AQ_CD,                															  " ).append("\n"); 
		query.append("                   BPS.CTRT_RGN_OFC_CD, 																	  " ).append("\n"); 
		query.append("                   BPS.TOT_LOD,                                                               				  " ).append("\n"); 
		query.append("                   BPS.TOT_REV,                                               								  " ).append("\n"); 
		query.append("                   BPS.TOT_CM,                                												  " ).append("\n"); 
		query.append("                   BPS.TOT_RA_CM,   																		  " ).append("\n"); 
		query.append("                   BPS.TOT_OP,                         														  " ).append("\n"); 
		query.append("                   BPS.TOT_RA_OP																			  		" ).append("\n"); 
		query.append("            FROM TMP_INPUT_PARMAS INP,   	                                                          	  " ).append("\n"); 
		query.append("        		   ( 																					  	  				" ).append("\n"); 
		query.append("        			SELECT -- Performance VOYAGE (양방향 Bound)                                            " ).append("\n"); 
		query.append("            			   NVL(DIR.CONV_DIR_CD, BPS.DIR_CD) AS DIR_CD,                                       		" ).append("\n"); 
		query.append("            			   MIN(BPS.SUB_TRD_CD||DECODE(BPS.RLANE_CD,'RBCCO','ZZ',SUBSTR(BPS.RLANE_CD,-2))||BPS.RLANE_CD||DECODE(NVL(BPS.CTRT_AQ_CD, 99), '99', 99, 11)||BPS.CTRT_AQ_CD||BPS.CTRT_RGN_OFC_CD) AS KEY,             " ).append("\n"); 
		query.append("            			   DECODE(GROUPING(BPS.RLANE_CD), 1, '1',                                                     " ).append("\n"); 
		query.append("                			  DECODE(GROUPING(BPS.CTRT_AQ_CD), 1, '2',                                               " ).append("\n"); 
		query.append("                    		     DECODE(GROUPING(BPS.CTRT_RGN_OFC_CD), 1, '3', '4')))                               " ).append("\n"); 
		query.append("                		             AS SLEVEL,                                                                                 " ).append("\n"); 
		query.append("            			   BPS.SUB_TRD_CD,                                                                            " ).append("\n"); 
		query.append("            			   DECODE(GROUPING(BPS.RLANE_CD), 1, 'TOTAL', BPS.RLANE_CD) AS RLANE_CD,                      " ).append("\n"); 
		query.append("            			   DECODE(GROUPING(BPS.CTRT_AQ_CD), 1, 'TOTAL', BPS.CTRT_AQ_CD) AS CTRT_AQ_CD,                " ).append("\n"); 
		query.append("            			   DECODE(GROUPING(BPS.CTRT_RGN_OFC_CD), 1, 'TOTAL', BPS.CTRT_RGN_OFC_CD) AS CTRT_RGN_OFC_CD, " ).append("\n"); 
		query.append("            			   SUM(BPS.LOD_QTY) AS TOT_LOD,                                                               " ).append("\n"); 
		query.append("            			   SUM(BPS.GRS_RPB_REV*BPS.LOD_QTY) AS TOT_REV,                                               " ).append("\n"); 
		query.append("            			   SUM((BPS.GRS_RPB_REV-BPS.CM_UC_AMT)*BPS.LOD_QTY) AS TOT_CM,                                " ).append("\n"); 
		query.append("            			   SUM((BPS.GRS_RPB_REV-BPS.RA_CM_UC_AMT)*BPS.LOD_QTY) AS TOT_RA_CM,                          " ).append("\n"); 
		query.append("            			   SUM((BPS.GRS_RPB_REV-BPS.OPFIT_UC_AMT)*BPS.LOD_QTY    ) AS TOT_OP,                         " ).append("\n"); 
		query.append("            			   SUM((BPS.GRS_RPB_REV-BPS.RA_OPFIT_UC_AMT)*BPS.LOD_QTY ) AS TOT_RA_OP                       " ).append("\n"); 
		query.append("        			FROM   SAQ_PERF_OFC_SMRY BPS,                                                                   " ).append("\n"); 
		query.append("              		   SAQ_MON_DIR_CONV  DIR,                                                            	   		" ).append("\n"); 
		query.append("              		 ( SELECT DISTINCT ADJ.TRD_CD, ADJ.DIR_CD, ADJ.RLANE_CD 						               " ).append("\n"); 
		query.append("                		   FROM   SAQ_MON_TGT_VVD_ADJ ADJ, TMP_INPUT_PARMAS INP 					                   " ).append("\n"); 
		query.append("                        WHERE  1=1																               " ).append("\n"); 
		query.append("                        AND    ADJ.GLINE_VER_NO = INP.GLINE_VER_NO   ) ADJ,           			               		" ).append("\n"); 
		query.append("                        TMP_INPUT_PARMAS INP                                                                     " ).append("\n"); 
		query.append("        			WHERE BPS.BSE_YR||BPS.BSE_MON BETWEEN PFMC_FR_YR_MON AND PFMC_TO_YR_MON                        " ).append("\n"); 
		query.append("        			AND   BPS.TRD_CD = INP.TRD_CD                                                                  " ).append("\n"); 
		query.append("        			AND   BPS.CTRT_RHQ_CD = INP.CTRT_RHQ_CD                                                        " ).append("\n"); 
		query.append("        			AND   BPS.LOD_QTY > 0                                                                          " ).append("\n"); 
		query.append("        			AND   BPS.TRD_CD = ADJ.TRD_CD 														           " ).append("\n"); 
		query.append("        			AND   BPS.DIR_CD = ADJ.DIR_CD														           " ).append("\n"); 
		query.append("        			AND   BPS.RLANE_CD = ADJ.RLANE_CD        											           " ).append("\n"); 
		query.append("        			AND   BPS.BSE_YR = DIR.BSE_YR(+)          											       " ).append("\n"); 
		query.append("        			AND   DIR.BSE_QTR_CD(+) = @[bse_quarter] 				          	       							   " ).append("\n"); 
		query.append("        			AND   BPS.TRD_CD = DIR.TRD_CD(+)       										   		       " ).append("\n"); 
		query.append("        			AND   BPS.RLANE_CD = DIR.RLANE_CD(+)       										           " ).append("\n"); 
		query.append("        			AND   BPS.DIR_CD = DIR.DIR_CD(+)       										          	           " ).append("\n"); 
		query.append("        		    GROUP BY ROLLUP(NVL(DIR.CONV_DIR_CD, BPS.DIR_CD), BPS.RLANE_CD, BPS.CTRT_AQ_CD, BPS.CTRT_RGN_OFC_CD), BPS.SUB_TRD_CD    	          " ).append("\n"); 
		query.append("        		) BPS                                                                                     		" ).append("\n"); 
		query.append("        		WHERE NVL(BPS.DIR_CD, INP.DIR_CD) = INP.DIR_CD                                                             		        " ).append("\n"); 
		query.append("        ) BPS, (                                                                                       " ).append("\n"); 
		query.append("        SELECT -- Performance VOYAGE                                              " ).append("\n"); 
		query.append("            VVD.SUB_TRD_CD,                                                                            " ).append("\n"); 
		query.append("            DECODE(GROUPING(VVD.RLANE_CD), 1, 'TOTAL', VVD.RLANE_CD) AS RLANE_CD,                      " ).append("\n"); 
		query.append("            SUM(VVD.TOT_VOY) AS TOT_VOY                                                                " ).append("\n"); 
		query.append("        FROM TMP_INPUT_PARMAS INP, (                                                                                         " ).append("\n"); 
		query.append("             SELECT NVL(DIR.CONV_DIR_CD, BPS.DIR_CD) DIR_CD,                                            		" ).append("\n"); 
		query.append("                    BPS.SUB_TRD_CD,                                                                        " ).append("\n"); 
		query.append("                    BPS.RLANE_CD,                                                                          " ).append("\n"); 
		query.append("                    MIN(PFT.VOY_KNT) AS TOT_VOY                                                            " ).append("\n"); 
		query.append("             FROM   SAQ_PERF_OFC_SMRY BPS,                                                               " ).append("\n"); 
		query.append("                    SAQ_PERF_TGT_LANE PFT,                                                               " ).append("\n"); 
		query.append("                    SAQ_MON_DIR_CONV  DIR,                                                            " ).append("\n"); 
		query.append("                    TMP_INPUT_PARMAS  INP                                                                 " ).append("\n"); 
		query.append("              WHERE BPS.BSE_YR||BPS.BSE_MON BETWEEN PFMC_FR_YR_MON AND PFMC_TO_YR_MON                    " ).append("\n"); 
		query.append("              AND   BPS.TRD_CD = INP.TRD_CD                                                              " ).append("\n"); 
		query.append("              AND   PFT.BSE_YR = BPS.BSE_YR                                                              " ).append("\n"); 
		query.append("              AND   PFT.BSE_MON = BPS.BSE_MON                                                            " ).append("\n"); 
		query.append("              AND   PFT.TRD_CD = BPS.TRD_CD                                                              " ).append("\n"); 
		query.append("              AND   PFT.RLANE_CD = BPS.RLANE_CD                                                          " ).append("\n"); 
		query.append("              AND   PFT.DIR_CD = BPS.DIR_CD                                                              " ).append("\n"); 
		query.append("              AND   BPS.CTRT_RHQ_CD = INP.CTRT_RHQ_CD                                                    " ).append("\n"); 
		query.append("              AND   BPS.LOD_QTY > 0                                                                      " ).append("\n"); 
		query.append("        	     AND   BPS.BSE_YR = DIR.BSE_YR(+)          											       " ).append("\n"); 
		query.append("        		 AND   DIR.BSE_QTR_CD(+) = @[bse_quarter] 				          	       							   " ).append("\n"); 
		query.append("        		 AND   BPS.TRD_CD = DIR.TRD_CD(+)       										   		       " ).append("\n"); 
		query.append("        		 AND   BPS.RLANE_CD = DIR.RLANE_CD(+)       										           " ).append("\n"); 
		query.append("        		 AND   BPS.DIR_CD = DIR.DIR_CD(+)       										          	   		" ).append("\n"); 
		query.append("              GROUP BY BPS.BSE_YR, BPS.BSE_MON, NVL(DIR.CONV_DIR_CD, BPS.DIR_CD), BPS.SUB_TRD_CD, BPS.RLANE_CD                 " ).append("\n"); 
		query.append("            ) VVD                                                                                      " ).append("\n"); 
		query.append("            WHERE NVL(VVD.DIR_CD, INP.DIR_CD) = INP.DIR_CD                                                                                      		" ).append("\n"); 
		query.append("            GROUP BY ROLLUP(VVD.SUB_TRD_CD, VVD.RLANE_CD)                                                  " ).append("\n"); 
		query.append("        ) VVD                                                                                          " ).append("\n"); 
		query.append("    WHERE BPS.SUB_TRD_CD = VVD.SUB_TRD_CD                                                              " ).append("\n"); 
		query.append("    AND   BPS.RLANE_CD = VVD.RLANE_CD                                                                  " ).append("\n"); 
		query.append("    UNION ALL                                                                                          " ).append("\n"); 
		query.append("    SELECT -- MONTHLY Quota (Recent)                                                                        " ).append("\n"); 
		query.append("           QTA.GUBUN,                                                                           " ).append("\n"); 
		query.append("           QTA.KEY,                 " ).append("\n"); 
		query.append("           QTA.SLEVEL,                                                                                 " ).append("\n"); 
		query.append("           QTA.SUB_TRD_CD,                                                                                " ).append("\n"); 
		query.append("           QTA.RLANE_CD,                          " ).append("\n"); 
		query.append("           QTA.CTRT_AQ_CD,                    " ).append("\n"); 
		query.append("           QTA.CTRT_RGN_OFC_CD,     " ).append("\n"); 
		query.append("           QTA.MON_SEQ,                                                                                " ).append("\n"); 
		query.append("           QTA.BSE_MON,                                                                               " ).append("\n"); 
		query.append("           QTA.TOT_VOY,                         " ).append("\n"); 
		query.append("           QTA.TOT_LOD,                                                          " ).append("\n"); 
		query.append("           QTA.TOT_REV ,                                                  " ).append("\n"); 
		query.append("           QTA.TOT_RPB ,                                 " ).append("\n"); 
		query.append("           QTA.TOT_CM ,                                   " ).append("\n"); 
		query.append("           QTA.TOT_RA_CM ,      " ).append("\n"); 
		query.append("           QTA.TOT_CMB,                  " ).append("\n"); 
		query.append("           QTA.TOT_RA_CMB ,                                                          " ).append("\n"); 
		query.append("           QTA.TOT_OP ,                            " ).append("\n"); 
		query.append("           QTA.TOT_RA_OP,   " ).append("\n"); 
		query.append("           QTA.TOT_OPB ,                                                             " ).append("\n"); 
		query.append("           QTA.TOT_RA_OPB                                                            		" ).append("\n"); 
		query.append("    FROM   TMP_INPUT_PARMAS INP, (                                                                 		" ).append("\n"); 
		query.append("           SELECT -- MONTHLY Quota (Recent)                                                                   " ).append("\n"); 
		query.append("                  'MONTHLY' AS GUBUN,                                                                            " ).append("\n"); 
		query.append("                  NVL(DIR.CONV_DIR_CD, QTA.DIR_CD) DIR_CD,                                            " ).append("\n"); 
		query.append("                  MIN(VVD.SUB_TRD_CD||DECODE(QTA.RLANE_CD,'RBCCO','ZZ',SUBSTR(QTA.RLANE_CD,-2))||QTA.RLANE_CD||DECODE(NVL(QTA.AQ_CD, 99), '99', 99, 11)||QTA.AQ_CD||QTA.RGN_OFC_CD) AS KEY,                 " ).append("\n"); 
		query.append("                  DECODE(GROUPING(QTA.RLANE_CD), 1, '1',                                                         " ).append("\n"); 
		query.append("                     DECODE(GROUPING(QTA.AQ_CD), 1, '2',                                                   " ).append("\n"); 
		query.append("                        DECODE(GROUPING(QTA.RGN_OFC_CD), 1, '3', '4')))                                   " ).append("\n"); 
		query.append("                  AS SLEVEL,                                                                                 " ).append("\n"); 
		query.append("                  VVD.SUB_TRD_CD,                                                                                " ).append("\n"); 
		query.append("                  DECODE(GROUPING(QTA.RLANE_CD), 1, 'TOTAL', QTA.RLANE_CD) AS RLANE_CD,                          " ).append("\n"); 
		query.append("                  DECODE(GROUPING(QTA.AQ_CD), 1, 'TOTAL', QTA.AQ_CD) AS CTRT_AQ_CD,                    " ).append("\n"); 
		query.append("                  DECODE(GROUPING(QTA.RGN_OFC_CD), 1, 'TOTAL', QTA.RGN_OFC_CD) AS CTRT_RGN_OFC_CD,     " ).append("\n"); 
		query.append("                  MIN(DECODE(QTA.BSE_YR||QTA.BSE_MON, INP.BEF_YR_MON, '0',                                       " ).append("\n"); 
		query.append("                     INP.ADD1_YR_MON, '2', ADD2_YR_MON, '3', '1')) AS MON_SEQ,                                  " ).append("\n"); 
		query.append("                  QTA.BSE_MON,                                                                                   " ).append("\n"); 
		query.append("                  COUNT(DISTINCT QTA.VSL_CD||QTA.SKD_VOY_NO||QTA.SKD_DIR_CD) AS TOT_VOY,                         " ).append("\n"); 
		query.append("                  SUM(QTA.LOD_QTY         ) AS TOT_LOD,                                                          " ).append("\n"); 
		query.append("                  SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY) AS TOT_REV ,                                                  " ).append("\n"); 
		query.append("                  SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY)/SUM(QTA.LOD_QTY) AS TOT_RPB ,                                 " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY) AS TOT_CM ,                                   " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY) AS TOT_RA_CM ,      		" ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY)/SUM(QTA.LOD_QTY) AS TOT_CMB,                  " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY)                     " ).append("\n"); 
		query.append("                      /SUM(QTA.LOD_QTY) AS TOT_RA_CMB ,                                                          " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    ) AS TOT_OP ,                            " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY ) AS TOT_RA_OP,   " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    )                                        " ).append("\n"); 
		query.append("                      /SUM(QTA.LOD_QTY) AS TOT_OPB ,                                                             " ).append("\n"); 
		query.append("                  SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY )                 " ).append("\n"); 
		query.append("                      /SUM(QTA.LOD_QTY) AS TOT_RA_OPB                                                            " ).append("\n"); 
		query.append("           FROM  (                                                                                            " ).append("\n"); 
		query.append("                   SELECT DISTINCT                                           " ).append("\n"); 
		query.append("                          RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO,                                           		" ).append("\n"); 
		query.append("                          RLS.BSE_YR AS BEF_YR,                                            " ).append("\n"); 
		query.append("                          RLS.BSE_QTR_CD AS BEF_QTR_CD                                            		" ).append("\n"); 
		query.append("                   FROM   SAQ_MON_QTA_RLSE RLS,                                                               " ).append("\n"); 
		query.append("                          TMP_INPUT_PARMAS INP                                                                " ).append("\n"); 
		query.append("                   WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD = INP.BEF_YR_QTR                             " ).append("\n"); 
		query.append("                   AND    RLS.QTA_RLSE_STS_CD = 'R'                                                           		" ).append("\n"); 
		query.append("                  ) RLS,                                                                                       " ).append("\n"); 
		query.append("                  SAQ_MON_DIR_CONV    DIR,                                                            		" ).append("\n"); 
		query.append("                  SAQ_MON_CFM_QTA     QTA,                                                                          " ).append("\n"); 
		query.append("                  SAQ_MON_CFM_TGT_VVD VVD,                                                          " ).append("\n"); 
		query.append("                  TMP_INPUT_PARMAS    INP                                                              " ).append("\n"); 
		query.append("           WHERE QTA.MQTA_RLSE_VER_NO = RLS.MQTA_RLSE_VER_NO                                              " ).append("\n"); 
		query.append("           AND   QTA.BSE_MON = DECODE(RLS.BEF_QTR_CD, '1Q', '03', '2Q', '06', '3Q', '09', '4Q', '12')                 " ).append("\n"); 
		query.append("           AND   QTA.QTA_TGT_CD = 'Q'                                                              " ).append("\n"); 
		query.append("           AND   QTA.TRD_CD = INP.TRD_CD                                                                      " ).append("\n"); 
		query.append("           AND   QTA.RHQ_CD = INP.CTRT_RHQ_CD                                                            " ).append("\n"); 
		query.append("           AND   VVD.MQTA_RLSE_VER_NO = QTA.MQTA_RLSE_VER_NO                                       " ).append("\n"); 
		query.append("           AND   VVD.BSE_YR = QTA.BSE_YR                                                           " ).append("\n"); 
		query.append("           AND   VVD.BSE_QTR_CD = QTA.BSE_QTR_CD                                                   " ).append("\n"); 
		query.append("           AND   VVD.BSE_MON = QTA.BSE_MON                                                         " ).append("\n"); 
		query.append("           AND   VVD.RLANE_CD = QTA.RLANE_CD                                                       " ).append("\n"); 
		query.append("           AND   VVD.TRD_CD = QTA.TRD_CD                                                           " ).append("\n"); 
		query.append("           AND   VVD.DIR_CD = QTA.DIR_CD                                                           " ).append("\n"); 
		query.append("           AND   VVD.VSL_CD = QTA.VSL_CD                                                           " ).append("\n"); 
		query.append("           AND   VVD.SKD_VOY_NO = QTA.SKD_VOY_NO                                                   " ).append("\n"); 
		query.append("           AND   VVD.SKD_DIR_CD = QTA.SKD_DIR_CD                                                   		" ).append("\n"); 
		query.append("           AND   QTA.LOD_QTY > 0                                                                              " ).append("\n"); 
		query.append("           AND   QTA.BSE_YR = DIR.BSE_YR(+)          											   " ).append("\n"); 
		query.append("           AND   DIR.BSE_QTR_CD(+) = @[bse_quarter] 				          	       							   " ).append("\n"); 
		query.append("           AND   QTA.TRD_CD = DIR.TRD_CD(+)       										   		   " ).append("\n"); 
		query.append("           AND   QTA.RLANE_CD = DIR.RLANE_CD(+)       										       " ).append("\n"); 
		query.append("           AND   QTA.DIR_CD = DIR.DIR_CD(+)       										           		" ).append("\n"); 
		query.append("           GROUP BY ROLLUP(NVL(DIR.CONV_DIR_CD, QTA.DIR_CD), QTA.RLANE_CD, QTA.AQ_CD, QTA.RGN_OFC_CD), VVD.SUB_TRD_CD, QTA.BSE_MON    " ).append("\n"); 
		query.append("       ) QTA                                                                                          " ).append("\n"); 
		query.append("    WHERE NVL(QTA.DIR_CD, INP.DIR_CD) = INP.DIR_CD                                                                                          " ).append("\n"); 
		query.append("    UNION ALL                                                                                          " ).append("\n"); 
		query.append("    SELECT -- Model Result                                                                             " ).append("\n"); 
		query.append("        'MODEL' AS GUBUN,                                                                              " ).append("\n"); 
		query.append("        MIN(MRS.SUB_TRD_CD||DECODE(MRS.RLANE_CD,'RBCCO','ZZ',SUBSTR(MRS.RLANE_CD,-2))||MRS.RLANE_CD||DECODE(NVL(MRS.CTRT_AQ_CD, 99), '99', 99, 11)||MRS.CTRT_AQ_CD||MRS.CTRT_RGN_OFC_CD) AS KEY,                 " ).append("\n"); 
		query.append("        DECODE(GROUPING(MRS.RLANE_CD), 1, '1',                                                         " ).append("\n"); 
		query.append("            DECODE(GROUPING(MRS.CTRT_AQ_CD), 1, '2',                                                   " ).append("\n"); 
		query.append("                DECODE(GROUPING(MRS.CTRT_RGN_OFC_CD), 1, '3', '4')))                                   " ).append("\n"); 
		query.append("            AS SLEVEL,                                                                                 " ).append("\n"); 
		query.append("        MRS.SUB_TRD_CD,                                                                                " ).append("\n"); 
		query.append("        DECODE(GROUPING(MRS.RLANE_CD), 1, 'TOTAL', MRS.RLANE_CD) AS RLANE_CD,                          " ).append("\n"); 
		query.append("        DECODE(GROUPING(MRS.CTRT_AQ_CD), 1, 'TOTAL', MRS.CTRT_AQ_CD) AS CTRT_AQ_CD,                    " ).append("\n"); 
		query.append("        DECODE(GROUPING(MRS.CTRT_RGN_OFC_CD), 1, 'TOTAL', MRS.CTRT_RGN_OFC_CD) AS CTRT_RGN_OFC_CD,     " ).append("\n"); 
		query.append("        MIN(DECODE(MRS.BSE_YR||MRS.BSE_MON, INP.ADD1_YR_MON, '2',                                      " ).append("\n"); 
		query.append("               ADD2_YR_MON, '3', '1')) AS MON_SEQ,                                                     " ).append("\n"); 
		query.append("        MRS.BSE_MON,                                                                                   " ).append("\n"); 
		query.append("        COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                         " ).append("\n"); 
		query.append("        SUM(MRS.LOD_QTY         ) AS TOT_LOD ,                                                         " ).append("\n"); 
		query.append("        SUM(MRS.GRS_RPB_REV*MRS.LOD_QTY) AS TOT_REV ,                                                  " ).append("\n"); 
		query.append("        SUM(MRS.GRS_RPB_REV*MRS.LOD_QTY)/SUM(MRS.LOD_QTY) AS TOT_RPB ,                                 " ).append("\n"); 
		query.append("        SUM((MRS.GRS_RPB_REV-MRS.CM_UC_AMT)*MRS.LOD_QTY) AS TOT_CM ,                                   " ).append("\n"); 
		query.append("        SUM((MRS.GRS_RPB_REV-MRS.RA_CM_UC_AMT)*MRS.LOD_QTY) AS TOT_RA_CM ,      " ).append("\n"); 
		query.append("        SUM((MRS.GRS_RPB_REV-MRS.CM_UC_AMT)*MRS.LOD_QTY)/SUM(MRS.LOD_QTY) AS TOT_CMB,                  " ).append("\n"); 
		query.append("        SUM((MRS.GRS_RPB_REV-MRS.RA_CM_UC_AMT)*MRS.LOD_QTY)                     		" ).append("\n"); 
		query.append("            /SUM(MRS.LOD_QTY) AS TOT_RA_CMB ,                                                          " ).append("\n"); 
		query.append("        SUM((MRS.GRS_RPB_REV-MRS.OPFIT_UC_AMT)*MRS.LOD_QTY    ) AS TOT_OP ,                            " ).append("\n"); 
		query.append("        SUM((MRS.GRS_RPB_REV-MRS.RA_OPFIT_UC_AMT)*MRS.LOD_QTY ) AS TOT_RA_OP ,  		" ).append("\n"); 
		query.append("        SUM((MRS.GRS_RPB_REV-MRS.OPFIT_UC_AMT)*MRS.LOD_QTY    )                                        " ).append("\n"); 
		query.append("            /SUM(MRS.LOD_QTY) AS TOT_OPB ,                                                             " ).append("\n"); 
		query.append("        SUM((MRS.GRS_RPB_REV-MRS.RA_OPFIT_UC_AMT)*MRS.LOD_QTY )                 " ).append("\n"); 
		query.append("            /SUM(MRS.LOD_QTY) AS TOT_RA_OPB                                                            " ).append("\n"); 
		query.append("    FROM  SAQ_MON_MDL_CTRT_SMRY MRS,                                                               " ).append("\n"); 
		query.append("          SAQ_MON_TGT_VVD_ADJ VVD,                                                                     " ).append("\n"); 
		query.append("          TMP_INPUT_PARMAS INP                                                                         " ).append("\n"); 
		query.append("    WHERE MRS.MQTA_MDL_VER_NO = INP.MQTA_MDL_VER_NO                                                    " ).append("\n"); 
		query.append("    AND   MRS.TRD_CD = INP.TRD_CD                                                                      " ).append("\n"); 
		query.append("    AND   MRS.DIR_CD = INP.DIR_CD                                                                      " ).append("\n"); 
		query.append("    AND   VVD.BSE_YR = INP.BSE_YR                                                                      " ).append("\n"); 
		query.append("    AND   VVD.BSE_QTR_CD = INP.BSE_QTR_CD                                                                    " ).append("\n"); 
		query.append("    AND   VVD.GLINE_VER_NO = INP.GLINE_VER_NO                                                          " ).append("\n"); 
		query.append("    AND   VVD.BSE_MON = MRS.BSE_MON                                                                    " ).append("\n"); 
		query.append("    AND   VVD.RLANE_CD = MRS.RLANE_CD                                                                  " ).append("\n"); 
		query.append("    AND   VVD.TRD_CD = MRS.TRD_CD                                                                      " ).append("\n"); 
		query.append("    AND   VVD.DIR_CD = MRS.DIR_CD                                                                      " ).append("\n"); 
		query.append("    AND   VVD.VSL_CD = MRS.VSL_CD                                                                      " ).append("\n"); 
		query.append("    AND   VVD.SKD_VOY_NO = MRS.SKD_VOY_NO                                                              " ).append("\n"); 
		query.append("    AND   VVD.SKD_DIR_CD = MRS.SKD_DIR_CD                                                              " ).append("\n"); 
		query.append("    AND   MRS.CTRT_RHQ_CD = INP.CTRT_RHQ_CD                                                            " ).append("\n"); 
		query.append("    AND   MRS.LOD_QTY > 0                                                                              " ).append("\n"); 
		query.append("    GROUP BY ROLLUP(MRS.RLANE_CD, MRS.CTRT_AQ_CD, MRS.CTRT_RGN_OFC_CD), MRS.SUB_TRD_CD, MRS.BSE_MON    " ).append("\n"); 
		query.append("    UNION ALL                                                                                          " ).append("\n"); 
		query.append("    SELECT -- RHQ, RGN, Final                                                                          " ).append("\n"); 
		query.append("        DECODE(RHQ.MQTA_STEP_CD, '04','RHQ', '07','INITIAL') AS GUBUN,                       " ).append("\n"); 
		query.append("        MIN(RHQ.SUB_TRD_CD||DECODE(RHQ.RLANE_CD,'RBCCO','ZZ',SUBSTR(RHQ.RLANE_CD,-2))||RHQ.RLANE_CD||DECODE(NVL(AQV.N3RD_PRNT_OFC_CD, 99), '99', 99, 11)||AQV.N3RD_PRNT_OFC_CD||RHQ.CTRT_RGN_OFC_CD) AS KEY,           " ).append("\n"); 
		query.append("        DECODE(GROUPING(RHQ.RLANE_CD), 1, '1',                                                         " ).append("\n"); 
		query.append("            DECODE(GROUPING(AQV.N3RD_PRNT_OFC_CD), 1, '2',                                             " ).append("\n"); 
		query.append("                DECODE(GROUPING(RHQ.CTRT_RGN_OFC_CD), 1, '3', '4')))                                   " ).append("\n"); 
		query.append("            AS SLEVEL,                                                                                 " ).append("\n"); 
		query.append("        RHQ.SUB_TRD_CD,                                                                                " ).append("\n"); 
		query.append("        DECODE(GROUPING(RHQ.RLANE_CD), 1, 'TOTAL', RHQ.RLANE_CD) AS RLANE_CD,                          " ).append("\n"); 
		query.append("        DECODE(GROUPING(AQV.N3RD_PRNT_OFC_CD), 1, 'TOTAL', AQV.N3RD_PRNT_OFC_CD) AS CTRT_AQ_CD,        " ).append("\n"); 
		query.append("        DECODE(GROUPING(RHQ.CTRT_RGN_OFC_CD), 1, 'TOTAL', RHQ.CTRT_RGN_OFC_CD) AS CTRT_RGN_OFC_CD,     " ).append("\n"); 
		query.append("        MIN(DECODE(RHQ.BSE_YR||RHQ.BSE_MON, INP.ADD1_YR_MON, '2',                                      " ).append("\n"); 
		query.append("               ADD2_YR_MON, '3', '1')) AS MON_SEQ,                                                     " ).append("\n"); 
		query.append("        RHQ.BSE_MON AS BSE_MON,                                                                        " ).append("\n"); 
		query.append("        COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                         " ).append("\n"); 
		query.append("        SUM(RHQ.LOD_QTY) AS TOT_LOD,                                                                   " ).append("\n"); 
		query.append("        SUM(RHQ.GRS_RPB_REV*RHQ.LOD_QTY) AS TOT_REV,                                                   " ).append("\n"); 
		query.append("        DECODE(SUM(RHQ.LOD_QTY), 0, 0,                                                                 " ).append("\n"); 
		query.append("            SUM(RHQ.GRS_RPB_REV*RHQ.LOD_QTY)/SUM(RHQ.LOD_QTY)                                          " ).append("\n"); 
		query.append("            ) AS TOT_RPB,                                                                              " ).append("\n"); 
		query.append("        SUM((RHQ.GRS_RPB_REV-RHQ.CM_UC_AMT)*RHQ.LOD_QTY)                                               " ).append("\n"); 
		query.append("            AS TOT_CM,                                                                                 " ).append("\n"); 
		query.append("        SUM((RHQ.GRS_RPB_REV-RHQ.RA_CM_UC_AMT)*RHQ.LOD_QTY)                     " ).append("\n"); 
		query.append("            AS TOT_RA_CM,                                                                              " ).append("\n"); 
		query.append("        DECODE(SUM(RHQ.LOD_QTY), 0, 0,                                                                 " ).append("\n"); 
		query.append("            SUM((RHQ.GRS_RPB_REV-RHQ.CM_UC_AMT)*RHQ.LOD_QTY)/SUM(RHQ.LOD_QTY)                          " ).append("\n"); 
		query.append("            ) AS TOT_CMB,                                                                              " ).append("\n"); 
		query.append("        DECODE(SUM(RHQ.LOD_QTY), 0, 0,                                                                 " ).append("\n"); 
		query.append("            SUM((RHQ.GRS_RPB_REV-RHQ.RA_CM_UC_AMT)*RHQ.LOD_QTY)                 		" ).append("\n"); 
		query.append("                /SUM(RHQ.LOD_QTY)                                                                      " ).append("\n"); 
		query.append("            ) AS TOT_RA_CMB,                                                                           " ).append("\n"); 
		query.append("        SUM((RHQ.GRS_RPB_REV-RHQ.OPFIT_UC_AMT)*RHQ.LOD_QTY)                                            " ).append("\n"); 
		query.append("            AS TOT_OP,                                                                                 " ).append("\n"); 
		query.append("        SUM((RHQ.GRS_RPB_REV-RHQ.RA_OPFIT_UC_AMT)*RHQ.LOD_QTY)                  " ).append("\n"); 
		query.append("            AS TOT_RA_OP,                                                                              " ).append("\n"); 
		query.append("        DECODE(SUM(RHQ.LOD_QTY), 0, 0,                                                                 " ).append("\n"); 
		query.append("            SUM((RHQ.GRS_RPB_REV-RHQ.OPFIT_UC_AMT)*RHQ.LOD_QTY)                                        " ).append("\n"); 
		query.append("                /SUM(RHQ.LOD_QTY)                                                                      " ).append("\n"); 
		query.append("            ) AS TOT_OPB,                                                                              " ).append("\n"); 
		query.append("        DECODE(SUM(RHQ.LOD_QTY), 0, 0,                                                                 " ).append("\n"); 
		query.append("            SUM((RHQ.GRS_RPB_REV-RHQ.RA_OPFIT_UC_AMT)*RHQ.LOD_QTY)              " ).append("\n"); 
		query.append("                /SUM(RHQ.LOD_QTY)                                                                      " ).append("\n"); 
		query.append("            ) AS TOT_RA_OPB                                                                            " ).append("\n"); 
		query.append("    FROM   TMP_INPUT_PARMAS INP,                                                                       " ).append("\n"); 
		query.append("           SAQ_MON_TGT_VVD_ADJ VVD,                                                                    " ).append("\n"); 
		query.append("           SAQ_MON_QTA_STEP_VER VER,                                                                   " ).append("\n"); 
		query.append("           SAQ_MON_QTA_RHQ RHQ,                                                                        " ).append("\n"); 
		query.append("           SAQ_ORGANIZATION_V AQV                                                                      " ).append("\n"); 
		query.append("    WHERE  VER.MQTA_STEP_CD IN ('04', '07') -- RHQ, Initial                                   " ).append("\n"); 
		query.append("    AND    VER.BSE_YR = INP.BSE_YR                                                                     " ).append("\n"); 
		query.append("    AND    VER.BSE_QTR_CD = INP.BSE_QTR_CD                                                                   " ).append("\n"); 
		query.append("    AND    VER.TRD_CD = INP.TRD_CD                                                                     " ).append("\n"); 
		query.append("    AND    VER.DIR_CD = INP.DIR_CD                                                                     " ).append("\n"); 
		query.append("    AND    VER.GLINE_VER_NO = INP.GLINE_VER_NO                                                         " ).append("\n"); 
		query.append("    AND    ((VER.MQTA_STEP_CD = '04' AND VER.MQTA_VER_NO = INP.MQTA_VER_NO                 " ).append("\n"); 
		query.append("                AND VER.TRD_CD = INP.TRD_CD AND VER.DIR_CD = INP.DIR_CD)                           " ).append("\n"); 
		query.append("            OR (VER.MQTA_STEP_CD = '04'                                                    " ).append("\n"); 
		query.append("                AND NOT(VER.TRD_CD = INP.TRD_CD AND VER.DIR_CD = INP.DIR_CD)                       " ).append("\n"); 
		query.append("                AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                                   " ).append("\n"); 
		query.append("                                  FROM COM_INTG_CD_DTL A,                                          " ).append("\n"); 
		query.append("                                       COM_INTG_CD_DTL B                                           " ).append("\n"); 
		query.append("                                  WHERE A.INTG_CD_ID = 'CD00926'                                   " ).append("\n"); 
		query.append("                                  AND B.INTG_CD_ID = A.INTG_CD_ID                                  " ).append("\n"); 
		query.append("                                  AND B.INTG_CD_VAL_CTNT = 'DC'                                    " ).append("\n"); 
		query.append("                                  AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ))               " ).append("\n"); 
		query.append("            OR                           " ).append("\n"); 
		query.append("			          ( VER.MQTA_STEP_CD = '07' AND VER.SAQ_STS_CD IN  (  " ).append("\n"); 
		query.append("			 		             SELECT A.INTG_CD_VAL_CTNT     " ).append("\n"); 
		query.append("                               FROM COM_INTG_CD_DTL A,                                    " ).append("\n"); 
		query.append("                                     COM_INTG_CD_DTL B                                     " ).append("\n"); 
		query.append("                              WHERE A.INTG_CD_ID = 'CD00926'                             " ).append("\n"); 
		query.append("                               AND B.INTG_CD_ID = A.INTG_CD_ID                            " ).append("\n"); 
		query.append("                               AND B.INTG_CD_VAL_CTNT = '00'                  " ).append("\n"); 
		query.append("                               AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ  )  		" ).append("\n"); 
		query.append("                  )       					             " ).append("\n"); 
		query.append("			)              " ).append("\n"); 
		query.append("    AND    RHQ.MQTA_STEP_CD = VER.MQTA_STEP_CD                                                         " ).append("\n"); 
		query.append("    AND    RHQ.BSE_YR = VER.BSE_YR                                                                     " ).append("\n"); 
		query.append("    AND    RHQ.BSE_QTR_CD = VER.BSE_QTR_CD                                                                   " ).append("\n"); 
		query.append("    AND    RHQ.TRD_CD = VER.TRD_CD                                                                     " ).append("\n"); 
		query.append("    AND    RHQ.DIR_CD = VER.DIR_CD                                                                     " ).append("\n"); 
		query.append("    AND    RHQ.MQTA_VER_NO = VER.MQTA_VER_NO                                                           " ).append("\n"); 
		query.append("    AND    RHQ.CTRT_RHQ_CD = INP.CTRT_RHQ_CD                                                           " ).append("\n"); 
		query.append("    AND    VVD.BSE_YR = VER.BSE_YR                                                                     " ).append("\n"); 
		query.append("    AND    VVD.BSE_QTR_CD = VER.BSE_QTR_CD                                                                   " ).append("\n"); 
		query.append("    AND    VVD.GLINE_VER_NO = VER.GLINE_VER_NO                                                         " ).append("\n"); 
		query.append("    AND    VVD.BSE_MON = RHQ.BSE_MON                                                                   " ).append("\n"); 
		query.append("    AND    VVD.TRD_CD = RHQ.TRD_CD                                                                     " ).append("\n"); 
		query.append("    AND    VVD.DIR_CD = RHQ.DIR_CD                                                                     " ).append("\n"); 
		query.append("    AND    VVD.SUB_TRD_CD = RHQ.SUB_TRD_CD                                                             " ).append("\n"); 
		query.append("    AND    VVD.RLANE_CD = RHQ.RLANE_CD                                                                 " ).append("\n"); 
		query.append("    AND    VVD.SPRT_GRP_CD = RHQ.SPRT_GRP_CD                                                           " ).append("\n"); 
		query.append("    AND    VVD.BSA_GRP_CD = RHQ.BSA_GRP_CD                                                             " ).append("\n"); 
		query.append("    AND    AQV.OFC_CD= RHQ.CTRT_RGN_OFC_CD                                                             " ).append("\n"); 
		query.append("    GROUP BY ROLLUP(RHQ.RLANE_CD, AQV.N3RD_PRNT_OFC_CD, RHQ.CTRT_RGN_OFC_CD),                          " ).append("\n"); 
		query.append("             RHQ.SUB_TRD_CD, RHQ.BSE_MON, RHQ.MQTA_STEP_CD                                             " ).append("\n"); 
		query.append("    ) UNI                                                                                              " ).append("\n"); 
		query.append("    ,     (                                                                                          " ).append("\n"); 
		query.append("          SELECT                                                                                    " ).append("\n"); 
		query.append("              DIR.RLANE_CD,                                                                                " ).append("\n"); 
		query.append("              DIR.DIR_CD                                                                                " ).append("\n"); 
		query.append("          FROM                                                                                    " ).append("\n"); 
		query.append("              SAQ_MON_DIR_CONV DIR,                                                                                " ).append("\n"); 
		query.append("              TMP_INPUT_PARMAS INP                                                                                " ).append("\n"); 
		query.append("          WHERE                                                                                    " ).append("\n"); 
		query.append("                   DIR.BSE_YR = INP.BSE_YR                                                                           " ).append("\n"); 
		query.append("             AND DIR.BSE_QTR_CD = INP.BSE_QTR_CD                                                                                 " ).append("\n"); 
		query.append("             AND DIR.TRD_CD = INP.TRD_CD                                                                                 " ).append("\n"); 
		query.append("             AND DIR.CONV_DIR_CD = INP.DIR_CD                                                                                 " ).append("\n"); 
		query.append("          ) DIR                                                                                 " ).append("\n"); 
		query.append("     WHERE                                                                                 " ).append("\n"); 
		query.append("             DIR.RLANE_CD(+) = UNI.RLANE_CD                                                                                 				" ).append("\n"); 
		query.append("GROUP BY UNI.SLEVEL, UNI.SUB_TRD_CD, UNI.RLANE_CD, UNI.CTRT_AQ_CD, UNI.CTRT_RGN_OFC_CD,                " ).append("\n"); 
		query.append("         ITM.CODE, ITM.TEXT, ITM.ROW_SEQ, DIR.DIR_CD                                                               " ).append("\n"); 
		query.append("ORDER BY KEY, SLEVEL, ROW_SEQ" ).append("\n"); 

	}
}