<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SCReportDBDAOcreatePriMotFileLogDataCSQL">
			<desc><![CDATA[일자별 대상 BKG 을 가져와 해당 일자의 데이터를 생성한다.
-  중복 제거 이전 

PRI_MOT_FILE_RT_LOG
PRI_MOT_FILE_RT_LOG_DTL]]></desc>
			<sql><![CDATA[
INSERT ALL
WHEN    SCG_SEQ = 1 THEN
INTO PRI_MOT_FILE_RT_LOG (BAT_EXE_DT, MOT_FILE_RT_LOG_SEQ, BKG_NO, BKG_SRC_TP_CD, CTRT_NO, CTRT_HLD_NM, ACT_CUST_NM, MOT_FILE_LANE_CD, MOT_FILE_ORG_CD, MOT_FILE_DEST_CD, MOT_FILE_CNTR_TP_CD, MOT_FILE_CMDT_TP_CD, MOT_FILE_CNTR_SZ_CD, MOT_FILE_RT_AMT, CTRT_EFF_DT, CTRT_EXP_DT, MOT_FILE_RMK, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT, SHPR_CNT_CD, SHPR_SEQ, CNEE_NM, OP_AGN_NM, COMM_AMT, FWRD_CNT_CD, FWRD_CUST_SEQ) 
VALUES ( BAT_EXE_DT, MOT_FILE_RT_SEQ, BKG_NO, BKG_SRC_TP_CD, CTRT_NO, CTRT_HLDR, ACT_CUST_NM, MOT_FILE_LANE_CD, MOT_FILE_OLOC_CD, MOT_FILE_DLOC_CD, MOT_FILE_CNTR_TP_CD, 
MOT_FILE_CMDT_TP_CD, MOT_FILE_CNTR_SZ_CD, MOT_FILE_RT_AMT, CTRT_EFF_DT, CTRT_EXP_DT, NULL , 'SYSTEM', SYSDATE, 'SYSTEM', SYSDATE, SHPR_CNT_CD, SHPR_SEQ, CNEE_NM, OP_AGN_NM, COMM_AMT, FWRD_CNT_CD, FWRD_CUST_SEQ)
WHEN    SCG_SEQ > 1 THEN
INTO PRI_MOT_FILE_RT_LOG_DTL (BAT_EXE_DT, MOT_FILE_RT_LOG_SEQ, SCG_SEQ, CHG_CD, RAT_UT_CD, MOT_FILE_CHG_AMT, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT, CURR_CD)
VALUES ( BAT_EXE_DT, MOT_FILE_RT_SEQ, SCG_SEQ - 1, CHG_CD, RAT_UT_CD, MOT_FILE_CHG_AMT, 'SYSTEM', SYSDATE, 'SYSTEM', SYSDATE, CURR_CD )

WITH BKG_NO_LIST AS (
 SELECT  /*+ ORDERED USE_NL */
         'V' AS IND, B.BKG_NO, 'POL' AS O_LOC_GB
   FROM  VSK_VSL_PORT_SKD A
      ,  BKG_BOOKING B
      ,  BKG_VVD     C
      ,  PRI_MOT_FILE_LOC_PPT OL
      ,  PRI_MOT_FILE_LOC_PPT DL
  WHERE  A.VPS_ETD_DT 
         BETWEEN TO_DATE (@[test_exec_dt],'YYYY-MM-DD' ) + 1 
         AND TO_DATE (@[test_exec_dt],'YYYY-MM-DD' ) + 2
    AND  A.VSL_CD = C.VSL_CD
    AND  A.SKD_VOY_NO = C.SKD_VOY_NO
    AND  A.SKD_DIR_CD = C.SKD_DIR_CD
    AND  A.VPS_PORT_CD = C.POL_CD 

    AND  A.CLPT_IND_SEQ = C.POL_CLPT_IND_SEQ
    AND  B.BKG_NO = C.BKG_NO
    AND  B.POL_CD = C.POL_CD
    AND  C.VSL_PRE_PST_CD||C.VSL_SEQ = ( SELECT MIN(VSL_PRE_PST_CD||VSL_SEQ) FROM BKG_VVD VVD2 WHERE VVD2.BKG_NO = B.BKG_NO)
    
    AND  B.RCV_TERM_CD = 'Y'
    AND  B.DE_TERM_CD = 'Y'
    
    AND  OL.ORG_DEST_TP_CD = 'O'
    AND  OL.LOC_CD = B.POL_CD
    AND  DL.ORG_DEST_TP_CD = 'D'
    AND  DL.LOC_CD = B.POD_CD
    AND  B.BKG_STS_CD <> 'X'
    AND  B.BKG_CGO_TP_CD <> 'P'

  UNION ALL

 SELECT  /*+ ORDERED USE_NL */
         'V' AS IND, B.BKG_NO, 'POR' AS O_LOC_GB
   FROM  VSK_VSL_PORT_SKD A
      ,  BKG_BOOKING B
      ,  BKG_VVD     C
      ,  PRI_MOT_FILE_LOC_PPT DL
  WHERE  A.VPS_ETD_DT 
         BETWEEN TO_DATE (@[test_exec_dt],'YYYY-MM-DD' ) + 1 
         AND TO_DATE (@[test_exec_dt],'YYYY-MM-DD' ) + 2
    AND  A.VSL_CD = C.VSL_CD
    AND  A.SKD_VOY_NO = C.SKD_VOY_NO
    AND  A.SKD_DIR_CD = C.SKD_DIR_CD
    AND  A.VPS_PORT_CD = C.POL_CD 

    AND  A.CLPT_IND_SEQ = C.POL_CLPT_IND_SEQ
    AND  B.BKG_NO = C.BKG_NO
    AND  B.POL_CD = C.POL_CD
    AND  C.VSL_PRE_PST_CD||C.VSL_SEQ = ( SELECT MIN(VSL_PRE_PST_CD||VSL_SEQ) FROM BKG_VVD VVD2 WHERE VVD2.BKG_NO = B.BKG_NO)
    
    AND  B.RCV_TERM_CD = 'Y'
    AND  B.DE_TERM_CD = 'Y'
    
    AND  B.POR_CD IN ('CNNKG', 'CNLYG')
    AND  DL.ORG_DEST_TP_CD = 'D'
    AND  DL.LOC_CD = B.POD_CD
    AND  B.BKG_STS_CD <> 'X'
    AND  B.BKG_CGO_TP_CD <> 'P'

  UNION ALL

--  C/A : C/A booking after BDR 
 SELECT  /*+ ORDERED USE_NL */
        'C' AS IND, A.BKG_NO, 'POL' AS O_LOC_GB
   FROM BKG_CORRECTION A
      , BKG_BOOKING B
      , PRI_MOT_FILE_LOC_PPT OL
      , PRI_MOT_FILE_LOC_PPT DL        
  WHERE A.CORR_NO NOT   IN ( '0000000001', 'TMP0000001' )
    AND A.CORR_CXL_FLG  = 'N'
    AND A.CORR_GDT      
        BETWEEN TO_DATE (@[test_exec_dt],'YYYY-MM-DD' ) - 1 
        AND TO_DATE (@[test_exec_dt],'YYYY-MM-DD' )        
    AND A.BKG_NO = B.BKG_NO
    
    AND B.RCV_TERM_CD = 'Y'
    AND B.DE_TERM_CD = 'Y'
    
    AND OL.ORG_DEST_TP_CD = 'O'
    AND OL.LOC_CD = B.POL_CD
    AND DL.ORG_DEST_TP_CD = 'D'
    AND DL.LOC_CD = B.POD_CD
    AND B.BKG_STS_CD <> 'X'
    AND B.BKG_CGO_TP_CD <> 'P'
 
  UNION ALL

 SELECT  /*+ ORDERED USE_NL */
        'C' AS IND, A.BKG_NO, 'POR' AS O_LOC_GB
   FROM BKG_CORRECTION A
      , BKG_BOOKING B
      , PRI_MOT_FILE_LOC_PPT DL        
  WHERE A.CORR_NO NOT   IN ( '0000000001', 'TMP0000001' )
    AND A.CORR_CXL_FLG  = 'N'
    AND A.CORR_GDT      
        BETWEEN TO_DATE (@[test_exec_dt],'YYYY-MM-DD' ) - 1 
        AND TO_DATE (@[test_exec_dt],'YYYY-MM-DD' )        
    AND A.BKG_NO = B.BKG_NO
    
    AND B.RCV_TERM_CD = 'Y'
    AND B.DE_TERM_CD = 'Y'
    
    AND B.POR_CD IN ('CNNKG', 'CNLYG')   
    AND DL.ORG_DEST_TP_CD = 'D'
    AND DL.LOC_CD = B.POD_CD
    AND B.BKG_STS_CD <> 'X'
    AND B.BKG_CGO_TP_CD <> 'P'
 
  UNION ALL

--  BDR : Changed booking during after vessel sailing until BDR	
 SELECT  'B' AS IND, B.BKG_NO, 'POL' AS O_LOC_GB
   FROM  VSK_VSL_PORT_SKD A
      ,  BKG_BOOKING B
      ,  BKG_VVD     C
      ,  BKG_BL_DOC  D
      ,  (SELECT BKG_NO
            FROM BKG_CHG_RT
           WHERE 1=1
             AND UPD_DT BETWEEN TO_DATE (@[test_exec_dt],'YYYY-MM-DD' ) - 1 AND TO_DATE (@[test_exec_dt],'YYYY-MM-DD' )
           GROUP BY BKG_NO
         ) E 
      ,  PRI_MOT_FILE_LOC_PPT OL
      ,  PRI_MOT_FILE_LOC_PPT DL
  WHERE  A.VPS_ETD_DT <= TO_DATE (@[test_exec_dt],'YYYY-MM-DD' ) + 1 
    AND  A.VSL_CD = C.VSL_CD
    AND  A.SKD_VOY_NO = C.SKD_VOY_NO
    AND  A.SKD_DIR_CD = C.SKD_DIR_CD
    AND  A.VPS_PORT_CD = C.POL_CD 

    AND  A.CLPT_IND_SEQ = C.POL_CLPT_IND_SEQ
    AND  B.BKG_NO = C.BKG_NO
    AND  B.POL_CD = C.POL_CD
    AND  C.VSL_PRE_PST_CD||C.VSL_SEQ = ( SELECT MIN(VSL_PRE_PST_CD||VSL_SEQ) FROM BKG_VVD VVD2 WHERE VVD2.BKG_NO = B.BKG_NO)

    AND  B.RCV_TERM_CD = 'Y'
    AND  B.DE_TERM_CD = 'Y'
    
    AND  OL.ORG_DEST_TP_CD = 'O'
    AND  OL.LOC_CD = B.POL_CD
    AND  DL.ORG_DEST_TP_CD = 'D'
    AND  DL.LOC_CD = B.POD_CD
    AND  B.BKG_STS_CD <> 'X'
    AND  B.BKG_CGO_TP_CD <> 'P'

    AND  B.BKG_NO = D.BKG_NO 
    AND  D.BDR_FLG = 'N'
    AND  B.BKG_NO = E.BKG_NO  
 
 UNION ALL

 SELECT  'B' AS IND, B.BKG_NO, 'POR' AS O_LOC_GB
      FROM  VSK_VSL_PORT_SKD A
      ,  BKG_BOOKING B
      ,  BKG_VVD     C
      ,  BKG_BL_DOC  D
      ,  (SELECT BKG_NO
            FROM BKG_CHG_RT
           WHERE 1=1
             AND UPD_DT BETWEEN TO_DATE (@[test_exec_dt],'YYYY-MM-DD' ) - 1 AND TO_DATE (@[test_exec_dt],'YYYY-MM-DD' )
           GROUP BY BKG_NO
         ) E 
      ,  PRI_MOT_FILE_LOC_PPT DL
  WHERE  A.VPS_ETD_DT <= TO_DATE (@[test_exec_dt],'YYYY-MM-DD' ) + 1 
    AND  A.VSL_CD = C.VSL_CD
    AND  A.SKD_VOY_NO = C.SKD_VOY_NO
    AND  A.SKD_DIR_CD = C.SKD_DIR_CD
    AND  A.VPS_PORT_CD = C.POL_CD 

    AND  A.CLPT_IND_SEQ = C.POL_CLPT_IND_SEQ
    AND  B.BKG_NO = C.BKG_NO
    AND  B.POL_CD = C.POL_CD
    AND  C.VSL_PRE_PST_CD||C.VSL_SEQ = ( SELECT MIN(VSL_PRE_PST_CD||VSL_SEQ) FROM BKG_VVD VVD2 WHERE VVD2.BKG_NO = B.BKG_NO)
    
    AND  B.RCV_TERM_CD = 'Y'
    AND  B.DE_TERM_CD = 'Y'
    
    AND  B.POR_CD IN ('CNNKG', 'CNLYG')
    AND  DL.ORG_DEST_TP_CD = 'D'
    AND  DL.LOC_CD = B.POD_CD
    AND  B.BKG_STS_CD <> 'X'
    AND  B.BKG_CGO_TP_CD <> 'P'
    
    AND  B.BKG_NO = D.BKG_NO 
    AND  D.BDR_FLG = 'N'
    AND  B.BKG_NO = E.BKG_NO 
) 
, BKG_INFO_LIST AS (
SELECT  BKG_INFO.IND
      , BKG_INFO.BKG_NO
      , BKG_INFO.CTRT_NO
      , BKG_INFO.RT_APLY_DT
      , BKG_INFO.O_LOC_GB
      , BKG_INFO.POR_CD
      , BKG_INFO.POL_CD
      , BKG_INFO.POD_CD
      , BKG_INFO.BKG_SVC_SCP_CD
      , BKG_INFO.BKG_CGO_CATE
      , BKG_INFO.BKG_SHPR_CNT_CD
      , BKG_INFO.BKG_SHPR_SEQ
      , BKG_INFO.FWRD_CNT_CD
      , BKG_INFO.FWRD_CUST_SEQ
      , BKG_INFO.BKG_CGO_CATE_TPSZ
   FROM (SELECT 
                BL.IND
              , BL.BKG_NO
              , DECODE (BR.BKG_CTRT_TP_CD, 'R', BK.RFA_NO, 'S', BK.SC_NO, 'T', BK.TAA_NO ) 
                AS CTRT_NO
              , BR.RT_APLY_DT
              , BL.O_LOC_GB
              , BK.POR_CD
              , BK.POL_CD
              , BK.POD_CD
              , BK.SVC_SCP_CD AS BKG_SVC_SCP_CD
              , BC.CUST_CNT_CD AS BKG_SHPR_CNT_CD
              , BC.CUST_SEQ AS BKG_SHPR_SEQ
              , BC1.CUST_CNT_CD AS FWRD_CNT_CD
              , BC1.CUST_SEQ AS FWRD_CUST_SEQ
              , CM.CMDT_CD AS BKG_CGO_CATE
              , CM.CNTR_TPSZ_CD AS BKG_CGO_CATE_TPSZ  
           FROM BKG_NO_LIST BL
              , BKG_BOOKING BK
              , BKG_RATE BR
              , BKG_CUSTOMER BC
              , BKG_CUSTOMER BC1
              , ( SELECT DISTINCT B.BKG_NO, C.CNTR_TPSZ_CD
                       , COALESCE( B.HAMO_TRF_CD, B.CMDT_HS_CD , B.NCM_NO ) AS CMDT_CD
                    FROM BKG_CNTR_MF_DESC B, BKG_CONTAINER C 
                   WHERE B.BKG_NO = C.BKG_NO AND B.CNTR_NO = C.CNTR_NO) CM
          WHERE BL.BKG_NO = BK.BKG_NO
            AND BL.BKG_NO = BR.BKG_NO(+)
            AND BR.BKG_CTRT_TP_CD(+) IS NOT NULL
            AND BL.BKG_NO = BC.BKG_NO(+)
            AND BL.BKG_NO = BC1.BKG_NO(+)
            AND BC.BKG_CUST_TP_CD(+)  = 'S'
            AND BC1.BKG_CUST_TP_CD(+) = 'F' 
            AND BL.BKG_NO = CM.BKG_NO
            AND ( (BR.BKG_CTRT_TP_CD = 'R' AND EXISTS (SELECT 
                                                              1 
                                                         FROM PRI_RP_HDR  X 
                                                        WHERE X.RFA_NO = BK.RFA_NO AND ROWNUM = 1 ) ) OR 
                  (BR.BKG_CTRT_TP_CD = 'S' AND EXISTS (SELECT 
                                                              1 
                                                         FROM PRI_SP_HDR  X 
                                                        WHERE X.SC_NO  = BK.SC_NO  AND ROWNUM = 1 ) ) OR  
                  (BR.BKG_CTRT_TP_CD = 'T' AND EXISTS (SELECT 
                                                              1 
                                                         FROM PRI_TAA_HDR X 
                                                        WHERE X.TAA_NO = BK.TAA_NO AND ROWNUM = 1 ) ) ) ) BKG_INFO
     
),  CTRT_INFO_LIST AS (
SELECT  
        DISTINCT SS.CTRT_NO, SS.RT_APLY_DT, SS.PROP_NO, SS.AMDT_SEQ
      , SS.SVC_SCP_CD
      , SD.CTRT_EFF_DT
      , SD.CTRT_EXP_DT                      
      , SS.CCP_NM
      , SS.CUST_CNT_CD
      , SS.CUST_SEQ
   FROM (SELECT
                SCIF.CTRT_NO
              , SCIF.RT_APLY_DT
              , SCIF.PROP_NO
              , SCIF.AMDT_SEQ
              , SCIF.SVC_SCP_CD
              , SCIF.CUST_CNT_CD
              , SCIF.CUST_SEQ
              , SCIF.CCP_NM
           FROM (SELECT  
                        DISTINCT
                        A.CTRT_NO
                      , A.RT_APLY_DT
                      , C.PROP_NO
                      , C.AMDT_SEQ
                      , A.BKG_SVC_SCP_CD AS SVC_SCP_CD
                      , D.CUST_CNT_CD
                      , D.CUST_SEQ
                      , D.CTRT_PTY_NM AS CCP_NM
                   FROM BKG_INFO_LIST A
                      , PRI_SP_HDR B
                      , PRI_SP_MN C
                      , PRI_SP_CTRT_PTY D
                  WHERE 1=1
                    AND A.CTRT_NO != 'DUM000001' 
                    AND A.CTRT_NO  = B.SC_NO
                    AND B.PROP_NO  = C.PROP_NO
                    AND C.AMDT_SEQ = (SELECT 
                                             MAX ( M.AMDT_SEQ ) 
                                        FROM PRI_SP_MN M 
                                       WHERE M.PROP_NO = C.PROP_NO 
                                         AND TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) 
                                             BETWEEN M.EFF_DT AND M.EXP_DT AND M.PROP_STS_CD = 'F')
                   AND C.PROP_NO   = D.PROP_NO
                   AND C.AMDT_SEQ  = D.AMDT_SEQ
                   AND D.PRC_CTRT_PTY_TP_CD = 'C'
                   ) SCIF
          ) SS                       
     , PRI_SP_DUR SD
     , MDM_CUSTOMER MC
 WHERE SS.PROP_NO     = SD.PROP_NO
   AND SS.AMDT_SEQ    = SD.AMDT_SEQ
   AND SS.CUST_CNT_CD = MC.CUST_CNT_CD
   AND SS.CUST_SEQ    = MC.CUST_SEQ
                 
UNION ALL
 
SELECT  
       DISTINCT RS.CTRT_NO, RS.RT_APLY_DT, RS.PROP_NO, RS.AMDT_SEQ
     , RS.SVC_SCP_CD
     , SD.CTRT_EFF_DT
     , SD.CTRT_EXP_DT
     , RS.CCP_NM
     , RS.CUST_CNT_CD
     , RS.CUST_SEQ
  FROM (SELECT
               RFAIF.CTRT_NO
             , RFAIF.RT_APLY_DT
             , RFAIF.PROP_NO
             , RFAIF.AMDT_SEQ
             , RFAIF.SVC_SCP_CD
             , RFAIF.CCP_NM
             , RFAIF.CTRT_CUST_CNT_CD AS CUST_CNT_CD
             , RFAIF.CTRT_CUST_SEQ AS CUST_SEQ
          FROM (SELECT DISTINCT
                       A.CTRT_NO
                     , A.RT_APLY_DT
                     , C.PROP_NO
                     , C.AMDT_SEQ
                     , A.BKG_SVC_SCP_CD AS SVC_SCP_CD
                     , MC.CUST_LGL_ENG_NM AS CCP_NM
                     , C.CTRT_CUST_CNT_CD
                     , C.CTRT_CUST_SEQ
                  FROM BKG_INFO_LIST A
                     , PRI_RP_HDR B
                     , PRI_RP_MN C
                     , MDM_CUSTOMER MC
                 WHERE 1=1
                   AND A.CTRT_NO != 'DUM0000001'
                   AND A.CTRT_NO          = B.RFA_NO
                   AND B.PROP_NO          = C.PROP_NO
                   AND C.AMDT_SEQ         = ( SELECT 
                                                     MAX ( M.AMDT_SEQ ) 
                                                FROM PRI_RP_MN M 
                                               WHERE M.PROP_NO = C.PROP_NO 
                                                 AND TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) 
                                                     BETWEEN M.EFF_DT AND M.EXP_DT AND M.PROP_STS_CD = 'A' )
                   AND C.CTRT_CUST_CNT_CD = MC.CUST_CNT_CD
                   AND C.CTRT_CUST_SEQ    = MC.CUST_SEQ 
                   ) RFAIF

         ) RS                       
     , PRI_RP_MN  RM
     , PRI_RP_DUR SD
 WHERE RS.PROP_NO  = RM.PROP_NO
   AND RS.AMDT_SEQ = RM.AMDT_SEQ
   AND RS.PROP_NO  = SD.PROP_NO
   AND RS.AMDT_SEQ = SD.AMDT_SEQ

 UNION ALL
 
SELECT  
       DISTINCT TS.CTRT_NO, TS.RT_APLY_DT, TS.TAA_PROP_NO, TS.AMDT_SEQ
     , TS.SVC_SCP_CD
     , TM.EFF_DT AS CTRT_EFF_DT
     , TM.EXP_DT AS CTRT_EXP_DT
     , TS.CCP_NM
     , TS.CUST_CNT_CD
     , TS.CUST_SEQ
  FROM PRI_TAA_MN TM
     , (SELECT
               TAAIF.CTRT_NO
             , TAAIF.RT_APLY_DT 
             , TAAIF.TAA_PROP_NO 
             , TAAIF.AMDT_SEQ 
             , TAAIF.SVC_SCP_CD 
             , TAAIF.CCP_NM
             , TAAIF.CTRT_CUST_CNT_CD AS CUST_CNT_CD
             , TAAIF.CTRT_CUST_SEQ AS CUST_SEQ
         FROM (SELECT 
                      DISTINCT A.CTRT_NO
                    , A.RT_APLY_DT
                    , C.TAA_PROP_NO
                    , C.AMDT_SEQ
                    , C.SVC_SCP_CD
                    , MC.CUST_LGL_ENG_NM AS CCP_NM
                    , C.CTRT_CUST_CNT_CD
                    , C.CTRT_CUST_SEQ
                 FROM BKG_INFO_LIST A
                    , PRI_TAA_HDR B
                    , PRI_TAA_MN C
                    , MDM_CUSTOMER MC
                    , BKG_CUSTOMER BC
                WHERE 1=1
                  AND A.CTRT_NO != 'DUM0000001'
                  AND A.CTRT_NO          = B.TAA_NO
                  AND B.TAA_PROP_NO      = C.TAA_PROP_NO
                  AND C.AMDT_SEQ         = (SELECT 
                                                   MAX ( M.AMDT_SEQ ) 
                                              FROM PRI_TAA_MN M 
                                             WHERE M.TAA_PROP_NO = C.TAA_PROP_NO 
                                               AND TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) 
                                                   BETWEEN M.EFF_DT AND M.EXP_DT AND M.CFM_FLG = 'Y' )
                  AND C.SVC_SCP_CD       = A.BKG_SVC_SCP_CD
                  AND C.CTRT_CUST_CNT_CD = MC.CUST_CNT_CD
                  AND C.CTRT_CUST_SEQ    = MC.CUST_SEQ 
                  ) TAAIF

       ) TS
 WHERE TS.TAA_PROP_NO = TM.TAA_PROP_NO
   AND TS.AMDT_SEQ    = TM.AMDT_SEQ
   AND TS.SVC_SCP_CD  = TM.SVC_SCP_CD
) 
, BKG_TPSZ  AS (
SELECT  
        T1.BKG_NO
      , T1.CNTR_TPSZ_KNT
      , T1.TTL_CNTR_QTY
      , T1.CNTR_TPSZ_CD
      , T1.CGO_TP_CD
      , T1.CNTR_QTY
      , (SELECT 
                A.CNTR_SZ_CD 
           FROM PRI_RAT_UT A 
          WHERE A.RAT_UT_CD = T1.CNTR_TPSZ_CD ) AS CNTR_SZ_CD
   FROM (SELECT  
                QD.BKG_NO
              , COUNT(1) OVER () CNTR_TPSZ_KNT
              , (SELECT 
                        SUM(OP_CNTR_QTY) 
                   FROM BKG_QUANTITY A 
                  WHERE A.BKG_NO = QD.BKG_NO ) TTL_CNTR_QTY
              , CASE WHEN QD.CNTR_TPSZ_CD LIKE 'R%' AND
                          QD.DRY_CGO_FLG = 'Y' -- RD 인 경우만 예외처리
                     THEN QD.CNTR_TPSZ_CD
                     ELSE NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)
                 END CNTR_TPSZ_CD
              , CASE WHEN QD.DCGO_FLG    = 'Y' THEN 'DG'
                     WHEN QD.AWK_CGO_FLG = 'Y' THEN 'AK'
                     WHEN QD.RC_FLG      = 'Y' THEN 'RF'
                     WHEN QD.BB_CGO_FLG  = 'Y' THEN 'BB'
                     ELSE 'DR'
                 END CGO_TP_CD
              , SUM(QD.OP_CNTR_QTY) CNTR_QTY
           FROM BKG_QTY_DTL QD
              , ( SELECT
                         BKG_NO 
                    FROM BKG_NO_LIST
                   GROUP BY BKG_NO) BL
          WHERE QD.BKG_NO       = BL.BKG_NO
            AND QD.CNTR_TPSZ_CD NOT LIKE 'Q%'
          GROUP BY QD.BKG_NO
                 , CASE WHEN QD.CNTR_TPSZ_CD LIKE 'R%' AND
                             QD.DRY_CGO_FLG = 'Y'
                        THEN QD.CNTR_TPSZ_CD
                        ELSE NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)
                    END
                 , CASE WHEN  QD.DCGO_FLG    = 'Y' THEN 'DG'
                        WHEN  QD.AWK_CGO_FLG = 'Y' THEN 'AK'
                        WHEN  QD.RC_FLG      = 'Y' THEN 'RF'
                        WHEN  QD.BB_CGO_FLG  = 'Y' THEN 'BB'
                        ELSE  'DR'
                    END ) T1
)
, BKG_RT  AS (    
    SELECT  
           RT.BKG_NO
         , RT.RT_SEQ
         , RT.CGO_CATE_CD
         , RT.CHG_CD
         , RT.RAT_UT_CD
         , RT.RAT_AS_QTY
         , RT.CHG_UT_AMT
         , RT.CHG_AMT
         , (SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = RT.RAT_UT_CD ) AS RAT_SZ_CD
         , RT.CURR_CD
         , RT.FRT_TERM_CD
      FROM BKG_CHG_RT  RT
         , (SELECT BKG_NO FROM BKG_NO_LIST GROUP BY BKG_NO) BL
     WHERE RT.BKG_NO = BL.BKG_NO 
       AND RT.FRT_INCL_XCLD_DIV_CD <> 'I'
       AND RT.CHG_CD IN ( SELECT CHG_CD FROM PRI_MOT_CHG )
       AND RT.RAT_UT_CD <> 'PC'
)
, BKG_RT_PC  AS (    
    SELECT RT.BKG_NO
         , RT.RT_SEQ
         , RT.CGO_CATE_CD
         , RT.CHG_CD
         , RT.RAT_UT_CD
         , RT.RAT_AS_QTY
         , RT.CHG_UT_AMT
         , RT.CHG_AMT
         , (SELECT 
                   A.CNTR_SZ_CD 
              FROM PRI_RAT_UT A 
             WHERE A.RAT_UT_CD = RT.RAT_UT_CD )  
           AS RAT_SZ_CD
         , RT.CURR_CD
         , RT.FRT_TERM_CD
      FROM BKG_CHG_RT  RT
         , (SELECT 
                   BKG_NO 
              FROM BKG_NO_LIST
             GROUP BY BKG_NO) BL
     WHERE RT.BKG_NO = BL.BKG_NO 
       AND RT.FRT_INCL_XCLD_DIV_CD <> 'I'
       AND RT.CHG_CD IN ( SELECT CHG_CD FROM PRI_MOT_CHG )
       AND RT.RAT_UT_CD = 'PC'
)
, RT_TPSZ_MTCH  AS (
    SELECT  T2.BKG_NO  ,
            T2.CNTR_TPSZ_CD, 
            T2.CNTR_QTY, -- 필요한 칼럼 추가해야 함
            T2.CNTR_TPSZ_KNT,
            T2.TTL_CNTR_QTY,
            T2.CGO_TP_CD,
            T2.CNTR_SZ_CD,
            T1.BKG_NO       AS RT_BKG_NO,
            T1.RT_SEQ       ,
            T1.CGO_CATE_CD  ,
            T1.CHG_CD       ,
            T1.RAT_UT_CD    ,
            T1.RAT_AS_QTY   ,
            T1.CHG_UT_AMT   ,
            T1.CHG_AMT      ,
            T1.RAT_SZ_CD    ,
            T1.CURR_CD      ,
            T1.FRT_TERM_CD  ,
        CASE
            WHEN  T1.RAT_UT_CD = T2.CNTR_TPSZ_CD  THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  100
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  95
                    ELSE  90
                    END
    
            WHEN  T1.RAT_SZ_CD  = T2.CNTR_SZ_CD AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT      A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  85
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  80
                    ELSE  75
                    END
    
            WHEN  T1.RAT_SZ_CD  = T2.CNTR_SZ_CD THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  70
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  65
                    ELSE  60
                    END
    
            WHEN  T1.RAT_UT_CD = 'BX' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_SZ_CD   = T2.CNTR_SZ_CD
                      AND     A.RAT_UT_CD   IN ( '20', '40', '45', '53' )
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  55
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  50
                    ELSE  45
                    END
    
            WHEN  T1.RAT_UT_CD = 'BX' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  40
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  35
                    ELSE  30
                    END
    
            WHEN  T1.RAT_UT_CD = 'BL' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_SZ_CD   = T2.CNTR_SZ_CD
                      AND     A.RAT_UT_CD   IN ( '20', '40', '45', '53' )
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.CHG_CD       <> 'OFT'            THEN  100
                    WHEN  T2.CGO_TP_CD    IN ( 'AK', 'BB' )   THEN  25
                    ELSE  20
                    END
    
            WHEN  T1.RAT_UT_CD = 'BL' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.CHG_CD       <> 'OFT'            THEN  100
                    WHEN  T2.CGO_TP_CD    IN ( 'AK', 'BB' )   THEN  15
                    ELSE  10
                    END
    
            WHEN  T1.RAT_UT_CD = 'PC' THEN  100
    
            ELSE  1
            END MTCH_IND
    FROM    BKG_RT    T1  ,
            BKG_TPSZ  T2
    WHERE   T1.BKG_NO(+) = T2.BKG_NO   
      AND   T1.CGO_CATE_CD(+) = T2.CGO_TP_CD
    UNION ALL
    SELECT  T2.BKG_NO  ,
            T2.CNTR_TPSZ_CD, 
            T2.CNTR_QTY, -- 필요한 칼럼 추가해야 함
            T2.CNTR_TPSZ_KNT,
            T2.TTL_CNTR_QTY,
            T2.CGO_TP_CD,
            T2.CNTR_SZ_CD,
            T1.BKG_NO       AS RT_BKG_NO,
            T1.RT_SEQ       ,
            T1.CGO_CATE_CD  ,
            T1.CHG_CD       ,
            T1.RAT_UT_CD    ,
            T1.RAT_AS_QTY   ,
            T1.CHG_UT_AMT   ,
            T1.CHG_AMT      ,
            T1.RAT_SZ_CD    ,
            T1.CURR_CD      ,
            T1.FRT_TERM_CD  ,
        CASE
            WHEN  T1.RAT_UT_CD = T2.CNTR_TPSZ_CD  THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  100
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  95
                    ELSE  90
                    END
    
            WHEN  T1.RAT_SZ_CD  = T2.CNTR_SZ_CD AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT      A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  85
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  80
                    ELSE  75
                    END
    
            WHEN  T1.RAT_SZ_CD  = T2.CNTR_SZ_CD THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  70
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  65
                    ELSE  60
                    END
    
            WHEN  T1.RAT_UT_CD = 'BX' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_SZ_CD   = T2.CNTR_SZ_CD
                      AND     A.RAT_UT_CD   IN ( '20', '40', '45', '53' )
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  55
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  50
                    ELSE  45
                    END
    
            WHEN  T1.RAT_UT_CD = 'BX' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  40
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  35
                    ELSE  30
                    END
    
            WHEN  T1.RAT_UT_CD = 'BL' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_SZ_CD   = T2.CNTR_SZ_CD
                      AND     A.RAT_UT_CD   IN ( '20', '40', '45', '53' )
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.CHG_CD       <> 'OFT'            THEN  100
                    WHEN  T2.CGO_TP_CD    IN ( 'AK', 'BB' )   THEN  25
                    ELSE  20
                    END
    
            WHEN  T1.RAT_UT_CD = 'BL' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.CHG_CD       <> 'OFT'            THEN  100
                    WHEN  T2.CGO_TP_CD    IN ( 'AK', 'BB' )   THEN  15
                    ELSE  10
                    END
    
            WHEN  T1.RAT_UT_CD = 'PC' THEN  100
    
            ELSE  1
            END MTCH_IND
      FROM (SELECT
                   ROW_NUMBER() OVER (PARTITION BY BKG_NO, CGO_CATE_CD, CHG_CD ORDER BY BKG_NO, CGO_CATE_CD, CHG_CD, CHG_AMT DESC) AS BKEY,
                   BKG_NO, RT_SEQ, CGO_CATE_CD, CHG_CD, RAT_UT_CD, RAT_AS_QTY, CHG_UT_AMT, CHG_AMT, RAT_SZ_CD, CURR_CD, FRT_TERM_CD        
              FROM BKG_RT_PC) T1
         , (SELECT ROW_NUMBER() OVER (PARTITION BY BKG_NO, CGO_TP_CD ORDER BY BKG_NO, CGO_TP_CD, CNTR_TPSZ_CD DESC) AS BKEY, 
                   BKG_NO, CNTR_TPSZ_KNT, TTL_CNTR_QTY, CNTR_TPSZ_CD, CGO_TP_CD, CNTR_QTY, CNTR_SZ_CD
              FROM BKG_TPSZ)  T2
     WHERE T1.BKG_NO = T2.BKG_NO   
       AND T1.CGO_CATE_CD = T2.CGO_TP_CD
       AND T1.BKEY = T2.BKEY

), BKG_CHG_LIST AS (

    SELECT  T1.BKG_NO
        ,   T1.CNTR_TPSZ_CD
		,   ( SELECT RM.MOT_FILE_CNTR_TP_CD FROM PRI_MOT_FILE_RAT_UT_MAPG RM WHERE T1.CNTR_TPSZ_CD = RM.RAT_UT_CD ) AS MOT_CNTR_TP_CD 
        ,   T1.CGO_TP_CD
        ,   T1.CHG_CD
        ,   MAX ( T1.RAT_UT_CD ) AS RAT_UT_CD
        ,   CASE WHEN T1.RAT_UT_CD = 'PC' THEN SUM ( T1.CHG_AMT ) ELSE MAX ( T1.CHG_UT_AMT ) END RT_AMT
        ,   MAX(T1.CURR_CD) AS CURR_CD
        ,   T1.FRT_TERM_CD
    FROM    RT_TPSZ_MTCH  T1
    WHERE   NOT EXISTS  (
                        SELECT  'X'
                        FROM    RT_TPSZ_MTCH  T2
                        WHERE   T2.BKG_NO   = T1.BKG_NO
                        AND     T2.RT_SEQ   = T1.RT_SEQ
                        AND     T2.MTCH_IND > T1.MTCH_IND
                        )
    GROUP   BY  
            T1.BKG_NO
        ,   T1.CNTR_TPSZ_CD
        ,   T1.CGO_TP_CD
        ,   T1.CHG_CD
        ,   T1.FRT_TERM_CD
        ,   T1.RAT_UT_CD
    ORDER   BY         
            T1.BKG_NO
        ,   T1.CNTR_TPSZ_CD
        ,   T1.CGO_TP_CD
        ,   T1.CHG_CD
        ,   T1.FRT_TERM_CD
        
)
SELECT A.* FROM (
	SELECT DISTINCT BF.BAT_EXE_DT
             --, BF.MOT_FILE_RT_SEQ
             --, BF.SCG_SEQ
             , DENSE_RANK () OVER ( ORDER BY BF.IND, BF.BKG_NO, BF.CNTR_TPSZ_CD, BF.CGO_TP_CD, BF.BKG_CGO_CATE ) AS MOT_FILE_RT_SEQ
             , ROW_NUMBER () OVER ( PARTITION BY BF.IND, BF.BKG_NO, BF.CNTR_TPSZ_CD, BF.CGO_TP_CD, BF.BKG_CGO_CATE  ORDER BY  DECODE ( BF.CHG_CD, 'OFT', '000', '111' ), BF.CHG_CD, BF.BASE_CUST_NM ) AS SCG_SEQ
             , BF.BKG_NO
             , BF.IND AS BKG_SRC_TP_CD
             , BF.SHPR_CNT_CD
             , BF.SHPR_SEQ
             , BF.CTRT_NO
             , BF.BASE_CUST_NM
             , BF.CTRT_HLDR
             , BF.ACT_CUST AS ACT_CUST_NM
             , BF.CNEE_NM
             , BF.OP_AGN_NM
             , INSTR(NVL(BF.CTRT_HLDR,' '),'*') AS CTRT_HLDR_1
             , INSTR(NVL(BF.ACT_CUST,' '),'*') AS ACT_CUST_NM_1
             , INSTR(NVL(BF.CNEE_NM,' '),'*') AS CNEE_NM_1
             , BF.MOT_FILE_LANE_CD
             , BF.MOT_FILE_OLOC_CD
             , BF.MOT_FILE_DLOC_CD
             , BF.MF_RAT_UT_CD AS MOT_FILE_CNTR_TP_CD
             , BF.BKG_CGO_CATE AS MOT_FILE_CMDT_TP_CD
             , BF.SZ AS MOT_FILE_CNTR_SZ_CD
             , BF.CTRT_EFF_DT
             , BF.CTRT_EXP_DT
             , BF.CHG_CD
             , BF.RAT_UT_CD
             , BF.RT_AMT AS MOT_FILE_CHG_AMT
             , BF.OFT_AMT AS MOT_FILE_RT_AMT
             , BF.CURR_CD
             , NULL AS COMM_AMT --NO USE 
             , BF.FWRD_CNT_CD
             , BF.FWRD_CUST_SEQ 
          FROM (
                --BL.O_LOC_GB = 'POL' 인 경우
                SELECT DISTINCT
                       TO_DATE (@[test_exec_dt], 'YYYY-MM-DD' ) AS BAT_EXE_DT
                     --, DENSE_RANK () OVER ( ORDER BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD ) AS MOT_FILE_RT_SEQ
                     --, RANK () OVER ( PARTITION BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD  ORDER BY  DECODE ( T1.CHG_CD, 'OFT', '000', '111' ), T1.CHG_CD, CL.CCP_NM  ) AS SCG_SEQ
                     , BL.BKG_NO
                     , BL.IND
                     , CL.CUST_CNT_CD  AS SHPR_CNT_CD  --Customer Code
                     , CL.CUST_SEQ     AS SHPR_SEQ     --Customer Seq
                     , BL.CTRT_NO                              --SCRA No.
                     , CL.CCP_NM               AS BASE_CUST_NM --VERIFY FIELD(NOT USE)
                     , INSTR(NVL(CL.CCP_NM,' '),'*') AS CTRT_HLDR_1
                     , CASE WHEN INSTR(NVL(CL.CCP_NM,' '),'SHIPPERS ASSO') >= 1  THEN BC_CNEE.CUST_NM
                                   ELSE CL.CCP_NM
                       END CTRT_HLDR                           --Contractor
                     , CASE WHEN INSTR(NVL(CL.CCP_NM,' '),'SHIPPERS ASSO') >= 1  THEN ''
                            ELSE BC_SHIP.CUST_NM
                        END  ACT_CUST                          --Shipper
                     , CASE WHEN INSTR(NVL(CL.CCP_NM,' '),'SHIPPERS ASSO') >= 1  THEN ''
                            WHEN INSTR(NVL(CL.CCP_NM,' '),'TO ORDER') >= 1  THEN ''
                            ELSE BC_CNEE.CUST_NM
                        END  CNEE_NM                           --Consignee
                     , CASE WHEN INSTR(NVL(CL.CCP_NM,' '),'SHIPPERS ASSO') >= 1  THEN CL.CCP_NM
                            ELSE ''
                        END  OP_AGN_NM                         --Operation Agent  
                     , NVL(DL.MOT_FILE_LANE_CD,'1') AS MOT_FILE_LANE_CD --Lane                     
                     , CASE WHEN BL.POR_CD IN ('CNNKG', 'CNLYG') THEN BL.POR_CD
                            ELSE OL.MOT_FILE_LOC_CD END MOT_FILE_OLOC_CD  --POL
                     , DL.MOT_FILE_LOC_CD AS MOT_FILE_DLOC_CD  --POD
                     , BL.O_LOC_GB
                     , BL.POR_CD
                     , BL.BKG_CGO_CATE
                     , RM.MOT_FILE_CNTR_TP_CD AS MF_RAT_UT_CD  --Container Type
                     , SUBSTR ( CS.CNTR_SZ_DESC, 1, 2 ) AS SZ  --Container Size
                     , CL.CTRT_EFF_DT
                     , CL.CTRT_EXP_DT
                     , T1.CHG_CD
                     , T1.RAT_UT_CD
                     , T1.RT_AMT
                     , MAX ( DECODE ( T1.CHG_CD, 'OFT', T1.RT_AMT, NULL ) ) OVER ( PARTITION BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD ) AS OFT_AMT 
                     , T1.CURR_CD
                     , T1.FRT_TERM_CD --PAY_TERM_CD
                     , BQ.SOC_FLG
                     , T1.CGO_TP_CD
                     , T1.MOT_CNTR_TP_CD
                     , BL.FWRD_CNT_CD
                     , BL.FWRD_CUST_SEQ 
                     , T1.CNTR_TPSZ_CD

                 FROM  BKG_CHG_LIST  T1
                     , BKG_INFO_LIST BL
                     , CTRT_INFO_LIST CL
                     , PRI_MOT_FILE_LOC_PPT OL
                     , PRI_MOT_FILE_LOC_PPT DL
                     , PRI_MOT_FILE_RAT_UT_MAPG RM
                     , MDM_CNTR_TP_SZ  TS
                     , MDM_CNTR_SZ  CS
                     , BKG_CUSTOMER BC_SHIP
                     , BKG_CUSTOMER BC_CNEE
                     , BKG_QTY_DTL BQ

                 WHERE BL.BKG_NO = T1.BKG_NO(+)
                   AND BL.CTRT_NO = CL.CTRT_NO(+)
                   AND NVL ( BL.RT_APLY_DT, SYSDATE ) = NVL ( CL.RT_APLY_DT, SYSDATE ) 
                   AND BL.O_LOC_GB = 'POL' AND BL.POL_CD = OL.LOC_CD AND OL.ORG_DEST_TP_CD = 'O'
                   AND BL.POR_CD NOT IN ('CNNKG', 'CNLYG')
				   AND BL.BKG_CGO_CATE_TPSZ = BQ.CNTR_TPSZ_CD

                   AND BL.POD_CD = DL.LOC_CD
                   AND DL.ORG_DEST_TP_CD = 'D'
                 
                   AND BL.BKG_NO = BC_SHIP.BKG_NO(+)
                   AND BC_SHIP.BKG_CUST_TP_CD (+)= 'S'
                   AND BL.BKG_NO = BC_CNEE.BKG_NO(+)
                   AND BC_CNEE.BKG_CUST_TP_CD (+)= 'C'

                   AND T1.CNTR_TPSZ_CD = RM.RAT_UT_CD(+)
                   AND T1.CNTR_TPSZ_CD = TS.CNTR_TPSZ_CD(+)
                   AND TS.CNTR_SZ_CD   = CS.CNTR_SZ_CD(+) 
                   
                   AND T1.BKG_NO = BQ.BKG_NO(+) 
                   AND T1.CNTR_TPSZ_CD = BQ.CNTR_TPSZ_CD(+)                    
                   AND T1.CHG_CD IS NOT NULL

                 UNION ALL
                --BL.O_LOC_GB = 'POR' 인 경우
                SELECT DISTINCT
                       TO_DATE (@[test_exec_dt], 'YYYY-MM-DD' ) AS BAT_EXE_DT
                     --, DENSE_RANK () OVER ( ORDER BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD ) AS MOT_FILE_RT_SEQ
                     --, RANK () OVER ( PARTITION BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD  ORDER BY  DECODE ( T1.CHG_CD, 'OFT', '000', '111' ), T1.CHG_CD, CL.CCP_NM  ) AS SCG_SEQ
                     , BL.BKG_NO
                     , BL.IND
                     , CL.CUST_CNT_CD  AS SHPR_CNT_CD  --Customer Code
                     , CL.CUST_SEQ     AS SHPR_SEQ     --Customer Seq
                     , BL.CTRT_NO                              --SCRA No.
                     , CL.CCP_NM               AS BASE_CUST_NM --VERIFY FIELD(NOT USE)
                     , INSTR(NVL(CL.CCP_NM,' '),'*') AS CTRT_HLDR_1
                     , CASE WHEN INSTR(NVL(CL.CCP_NM,' '),'SHIPPERS ASSO') >= 1  THEN BC_CNEE.CUST_NM
                                   ELSE CL.CCP_NM
                       END CTRT_HLDR                           --Contractor
                     , CASE WHEN INSTR(NVL(CL.CCP_NM,' '),'SHIPPERS ASSO') >= 1  THEN ''
                            ELSE BC_SHIP.CUST_NM
                        END  ACT_CUST                          --Shipper
                     , CASE WHEN INSTR(NVL(CL.CCP_NM,' '),'SHIPPERS ASSO') >= 1  THEN ''
                            WHEN INSTR(NVL(CL.CCP_NM,' '),'TO ORDER') >= 1  THEN ''
                            ELSE BC_CNEE.CUST_NM
                        END  CNEE_NM                           --Consignee
                     , CASE WHEN INSTR(NVL(CL.CCP_NM,' '),'SHIPPERS ASSO') >= 1  THEN CL.CCP_NM
                            ELSE ''
                        END  OP_AGN_NM                         --Operation Agent  
                     , NVL(DL.MOT_FILE_LANE_CD,'1') AS MOT_FILE_LANE_CD --Lane
                     
                     , BL.POR_CD AS MOT_FILE_OLOC_CD  --POL
                     , DL.MOT_FILE_LOC_CD AS MOT_FILE_DLOC_CD  --POD
                     , BL.O_LOC_GB
                     , BL.POR_CD
                     , BL.BKG_CGO_CATE
                     , RM.MOT_FILE_CNTR_TP_CD AS MF_RAT_UT_CD  --Container Type
                     , SUBSTR ( CS.CNTR_SZ_DESC, 1, 2 ) AS SZ  --Container Size
                     , CL.CTRT_EFF_DT
                     , CL.CTRT_EXP_DT
                     , T1.CHG_CD
                     , T1.RAT_UT_CD
                     , T1.RT_AMT
                     , MAX ( DECODE ( T1.CHG_CD, 'OFT', T1.RT_AMT, NULL ) ) OVER ( PARTITION BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD) AS OFT_AMT 
                     , T1.CURR_CD
                     
                     , T1.FRT_TERM_CD --PAY_TERM_CD
                     , BQ.SOC_FLG
                     , T1.CGO_TP_CD
                     , T1.MOT_CNTR_TP_CD
                     , BL.FWRD_CNT_CD
                     , BL.FWRD_CUST_SEQ 
                     , T1.CNTR_TPSZ_CD

                 FROM  BKG_CHG_LIST  T1
                     , BKG_INFO_LIST BL
                     , CTRT_INFO_LIST CL
                     , PRI_MOT_FILE_LOC_PPT DL
                     , PRI_MOT_FILE_RAT_UT_MAPG RM
                     , MDM_CNTR_TP_SZ  TS
                     , MDM_CNTR_SZ  CS
                     , BKG_CUSTOMER BC_SHIP
                     , BKG_CUSTOMER BC_CNEE
                     , BKG_QTY_DTL BQ

                 WHERE BL.BKG_NO = T1.BKG_NO(+)
                   AND BL.CTRT_NO = CL.CTRT_NO(+)
                   AND NVL ( BL.RT_APLY_DT, SYSDATE ) = NVL ( CL.RT_APLY_DT, SYSDATE ) 
                   AND BL.O_LOC_GB = 'POR' AND BL.POR_CD IN ('CNNKG', 'CNLYG')
	               AND BL.BKG_CGO_CATE_TPSZ = BQ.CNTR_TPSZ_CD
                   
                   AND BL.POD_CD = DL.LOC_CD
                   AND DL.ORG_DEST_TP_CD = 'D'
                 
                   AND BL.BKG_NO = BC_SHIP.BKG_NO(+)
                   AND BC_SHIP.BKG_CUST_TP_CD (+)= 'S'
                   AND BL.BKG_NO = BC_CNEE.BKG_NO(+)
                   AND BC_CNEE.BKG_CUST_TP_CD (+)= 'C'
                 
                   AND T1.CNTR_TPSZ_CD = RM.RAT_UT_CD(+)
                   AND T1.CNTR_TPSZ_CD = TS.CNTR_TPSZ_CD(+)
                   AND TS.CNTR_SZ_CD   = CS.CNTR_SZ_CD(+) 
                   
                   AND T1.BKG_NO = BQ.BKG_NO(+) 
                   AND T1.CNTR_TPSZ_CD = BQ.CNTR_TPSZ_CD(+) 
                   AND T1.CHG_CD IS NOT NULL
	) BF
 ) A
 WHERE ( A.CTRT_HLDR_1 < 1 AND A.ACT_CUST_NM_1 < 1 AND A.CNEE_NM_1 < 1 )
   AND ( A.MOT_FILE_RT_AMT  IS NOT NULL)
 ORDER BY 2, 3, 4, 5, 6, 7, 8, 9			]]></sql>
			<params>
				<param name="test_exec_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
