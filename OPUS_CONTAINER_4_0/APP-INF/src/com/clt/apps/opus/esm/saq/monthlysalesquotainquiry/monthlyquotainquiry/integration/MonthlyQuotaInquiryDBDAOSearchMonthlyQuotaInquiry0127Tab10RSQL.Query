<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaInquiryDBDAOSearchMonthlyQuotaInquiry0127Tab10RSQL">
			<desc><![CDATA[분기별별 확정된 내용을 Week, Sub Trade,Lane, VVD Group, VVD, RHQ, Area Director,C.Office 별로 Grouping 된 형태로 조회 한다. (주요 table saq_mon_cfm_qta, saq_mon_cfm_tgt_vvd)]]></desc>
			<sql><![CDATA[
WITH PARAMS AS ( 																					
	 	SELECT @[rhqCd] OFC_CD, @[year] BSE_YR, @[quarter] BSE_QTR_CD , @[version] VER, @[targetGrp] SAQ_TGT_GRP_CD 											

	 		, TO_CHAR(ADD_MONTHS(TO_DATE( 

#if (${month} < 10) 
'0' + 
#end
@[month] ,'MM'),0),'MM') MON_0  

	 		, TO_CHAR(ADD_MONTHS(TO_DATE( 

#if (${month} < 10) 
'0' + 
#end
@[month] ,'MM'),1),'MM') MON_1 

	 		, TO_CHAR(ADD_MONTHS(TO_DATE( 

#if (${month} < 10) 
'0' + 
#end
@[month] ,'MM'),2),'MM') MON_2 														

	 	FROM DUAL 																					
	 )  , 																							
	 VVD_VIEW AS ( 																						
	 	SELECT VVD.SKD_VOY_NO,VVD.VSL_CD,VVD.SKD_DIR_CD,QTA.RHQ_CD, NVL(QTA.AQ_CD,'000000') AQ_CD, GRP_TRD.SAQ_TGT_GRP_CD ,VVD.BSE_MON 							
	 	FROM SAQ_MON_CFM_TGT_VVD VVD  																			
	 		, SAQ_MON_CFM_QTA QTA 																			
	 		, SAQ_TGT_GRP_TRD GRP_TRD 																		
	 	WHERE QTA.MQTA_RLSE_VER_NO = VVD.MQTA_RLSE_VER_NO 																
	 		AND QTA.BSE_YR = VVD.BSE_YR 																		
	 		AND QTA.BSE_QTR_CD = VVD.BSE_QTR_CD 																	
	 		AND QTA.BSE_MON = VVD.BSE_MON 																		
	 		AND QTA.TRD_CD = VVD.TRD_CD 																		
	 		AND QTA.RLANE_CD = VVD.RLANE_CD 																	
	 		AND QTA.DIR_CD = VVD.DIR_CD 																		
	 		AND QTA.VSL_CD = VVD.VSL_CD 																		
	 		AND QTA.SKD_VOY_NO = VVD.SKD_VOY_NO 																	
	 		AND QTA.SKD_DIR_CD = VVD.SKD_DIR_CD 																	
	 		AND QTA.QTA_TGT_CD = @[selType]  																		
	 		AND QTA.TRD_CD = GRP_TRD.TRD_CD 																	
	 		AND VVD.SUB_TRD_CD = GRP_TRD.SUB_TRD_CD 																
	 		AND QTA.DIR_CD = GRP_TRD.DIR_CD

#if (${isRhq} == 'true')
    AND ( QTA.RHQ_CD,QTA.BSE_YR,QTA.BSE_QTR_CD,QTA.MQTA_RLSE_VER_NO ) = ( SELECT  OFC_CD , BSE_YR, BSE_QTR_CD,VER  FROM PARAMS ) 
#else 
    AND ( NVL(QTA.AQ_CD, '  '),QTA.BSE_YR,QTA.BSE_QTR_CD,QTA.MQTA_RLSE_VER_NO ) = ( SELECT  OFC_CD, BSE_YR, BSE_QTR_CD,VER  FROM PARAMS )       
#end
 																	
	 ), 																							
	 ITEM_VIEW AS ( 																						
	 	SELECT  INTG_CD_VAL_CTNT AS CODE,  																		
	 			    INTG_CD_VAL_DP_DESC AS TEXT,  																
	 			    INTG_CD_VAL_DP_SEQ AS ROW_SEQ , 																
	 			    0 AS GRP 																			
	 		    FROM  COM_INTG_CD_DTL  																		
	 		    WHERE INTG_CD_ID = 'CD01388'  																	
	 		    AND INTG_CD_VAL_CTNT NOT IN ('00') 																
	 ) 																							
	  																							
	 SELECT VAL.BSE_YR,VAL.BSE_QTR_CD,VAL.AQ_CD,VAL.SAQ_TGT_GRP_CD,VAL.TRD_CD,VAL.DIR_CD
         ,DECODE(ITM.TEXT,'G.REV','G.REV*','CM(P)','CM*','CMPB(P)','CMPB',ITM.TEXT)AS TEXT,ITM.CODE 											
	     ,GRP_CD, GRP_AQ_CD,GRP_SAQ_TGT_GRP_CD,GRP_TRD_CD,GRP_DIR_CD    															
	 	, NVL(DECODE(ITM.CODE, 																				
	 		 '02', SUM(DECODE(BSE_MON,P.MON_0, VAL.VOYAGE,0)),                           			 									
	 		 '03', SUM(DECODE(BSE_MON,P.MON_0,VAL.LOD,0)),                                 			 									
	 		 '05', SUM(DECODE(BSE_MON,P.MON_0,VAL.REV,0))/1000,                                 		 									
	 		 '06', DECODE(NVL(SUM(DECODE(BSE_MON,P.MON_0,VAL.LOD,0)),0), 0, 0, SUM(DECODE(BSE_MON,P.MON_0,VAL.REV,0))/SUM(DECODE(BSE_MON,P.MON_0,VAL.LOD,0))), --수정
	 		 '07', SUM(DECODE(BSE_MON,P.MON_0,VAL.CM,0))/1000,                                  		 									
	 		 '08', SUM(DECODE(BSE_MON,P.MON_0,VAL.RA_CM,0))/1000,	   					
	 		 '09', SUM(DECODE(BSE_MON,P.MON_0,DECODE(NVL(VAL.LOD,0),0,0,VAL.CM/(VAL.LOD)),0)),     --수정
	 		 '10', SUM(DECODE(BSE_MON,P.MON_0,DECODE(NVL(VAL.LOD,0),0,0,VAL.RA_CM/(VAL.LOD)),0)),  --수정
	 		 '12', SUM(DECODE(BSE_MON,P.MON_0,VAL.RA_OP,0))/1000,                                  		 									
	 		 '14', SUM(DECODE(BSE_MON,P.MON_0,DECODE(NVL(VAL.LOD,0),0,0,VAL.RA_OP/(VAL.LOD)),0))), 0) AS CAL_VAL_01  --수정
	 	, NVL(DECODE(ITM.CODE, 																				
	 		 '02', SUM(DECODE(BSE_MON,P.MON_1, VAL.VOYAGE,0)),                           			 									
	 		 '03', SUM(DECODE(BSE_MON,P.MON_1,VAL.LOD,0)),                                 			 									
	 		 '05', SUM(DECODE(BSE_MON,P.MON_1,VAL.REV,0))/1000,                                 		 									
	 		 '06', DECODE(NVL(SUM(DECODE(BSE_MON,P.MON_1,VAL.LOD,0)),0), 0, 0, SUM(DECODE(BSE_MON,P.MON_1,VAL.REV,0))/SUM(DECODE(BSE_MON,P.MON_1,VAL.LOD,0))), --수정
	 		 '07', SUM(DECODE(BSE_MON,P.MON_1,VAL.CM,0))/1000,                                  		 									
	 		 '08', SUM(DECODE(BSE_MON,P.MON_1,VAL.RA_CM,0))/1000,	   					
	 		 '09', SUM(DECODE(BSE_MON,P.MON_1,DECODE(NVL(VAL.LOD,0),0,0,VAL.CM/(VAL.LOD)),0)),     --수정
	 		 '10', SUM(DECODE(BSE_MON,P.MON_1,DECODE(NVL(VAL.LOD,0),0,0,VAL.RA_CM/(VAL.LOD)),0)),  --수정
	 		 '12', SUM(DECODE(BSE_MON,P.MON_1,VAL.RA_OP,0))/1000,                                  		 									
	 		 '14', SUM(DECODE(BSE_MON,P.MON_1,DECODE(NVL(VAL.LOD,0),0,0,VAL.RA_OP/(VAL.LOD)),0))), 0) AS CAL_VAL_02  --수정
	 	, NVL(DECODE(ITM.CODE, 																				
	 		 '02', SUM(DECODE(BSE_MON,P.MON_2, VAL.VOYAGE,0)),                           			 									
	 		 '03', SUM(DECODE(BSE_MON,P.MON_2,VAL.LOD,0)),                                 			 									
	 		 '05', SUM(DECODE(BSE_MON,P.MON_2,VAL.REV,0))/1000,                                 		 									
	 		 '06', DECODE(NVL(SUM(DECODE(BSE_MON,P.MON_2,VAL.LOD,0)),0), 0, 0, SUM(DECODE(BSE_MON,P.MON_2,VAL.REV,0))/SUM(DECODE(BSE_MON,P.MON_2,VAL.LOD,0))), --수정
	 		 '07', SUM(DECODE(BSE_MON,P.MON_2,VAL.CM,0))/1000,                                  		 									
	 		 '08', SUM(DECODE(BSE_MON,P.MON_2,VAL.RA_CM,0))/1000,	  		  			
	 		 '09', SUM(DECODE(BSE_MON,P.MON_2,DECODE(NVL(VAL.LOD,0),0,0,VAL.CM/(VAL.LOD)),0)),     --수정
	 		 '10', SUM(DECODE(BSE_MON,P.MON_2,DECODE(NVL(VAL.LOD,0),0,0,VAL.RA_CM/(VAL.LOD)),0)),  --수정
	 		 '12', SUM(DECODE(BSE_MON,P.MON_2,VAL.RA_OP,0))/1000,                                  		 									
	 		 '14', SUM(DECODE(BSE_MON,P.MON_2,DECODE(NVL(VAL.LOD,0),0,0,VAL.RA_OP/(VAL.LOD)),0))), 0) AS CAL_VAL_03  --수정
	 	, NVL(DECODE(ITM.CODE, 																				
	 		 '02', SUM( VAL.VOYAGE),                           			 												
	 		 '03', SUM(VAL.LOD),                                 			 												
	 		 '05', SUM(VAL.REV)/1000,                                 		 												
	 		 '06', DECODE(NVL(SUM(VAL.LOD),0), 0, 0, SUM(VAL.REV)/SUM(VAL.LOD)), --수정
	 		 '07', SUM(VAL.CM)/1000,                                  		 												
	 		 '08', SUM(VAL.RA_CM)/1000,
	 		 '09', DECODE(NVL(SUM(VAL.LOD),0),0,0,SUM(VAL.CM)/SUM(VAL.LOD)),    --수정
	 		 '10', DECODE(NVL(SUM(VAL.LOD),0),0,0,SUM(VAL.RA_CM)/SUM(VAL.LOD)), --수정
	 		 '12', SUM(VAL.RA_OP)/1000,                                  		 									
	 		 '14', DECODE(NVL(SUM(VAL.LOD),0),0,0,SUM(VAL.RA_OP)/SUM(VAL.LOD)),0),0) AS CAL_TOT --수정
	 FROM ( 																							
	 	SELECT BSE_YR,BSE_QTR_CD,BSE_MON,AQ_CD,SAQ_TGT_GRP_CD,TRD_CD,CONV_DIR_CD DIR_CD 														
	 		,LOD 																					
	 		,REV 																					
	 		,CM 																					
	 		,RA_CM 																					
	 		,RA_OP 																							
	 		,DECODE( GRP_CD 																			
	 			, '1111'  -- AREA DIRECTOR TOTAL 																
	 			, (SELECT COUNT(DISTINCT VVD.SKD_VOY_NO||VVD.VSL_CD||VVD.SKD_DIR_CD)  												
	 				FROM VVD_VIEW VVD  																	
	 				WHERE  VVD.RHQ_CD = VL.RHQ_CD  AND VVD.BSE_MON = VL.BSE_MON 												
	 				)  																			
	 			, '0111'  -- TARGET GROUP TOTAL 																
	 			, (SELECT COUNT(DISTINCT VVD.SKD_VOY_NO||VVD.VSL_CD||VVD.SKD_DIR_CD)  												
	 				FROM VVD_VIEW VVD  																	
	 				WHERE  VVD.RHQ_CD = VL.RHQ_CD 																
	 					AND VVD.AQ_CD = VL.AQ_CD AND VVD.BSE_MON = VL.BSE_MON 												
	 				)  																			
	 			, '0011'  -- TRADE TOTAL 																	
	 			, (SELECT COUNT(DISTINCT VVD.SKD_VOY_NO||VVD.VSL_CD||VVD.SKD_DIR_CD)  												
	 				FROM VVD_VIEW VVD  																	
	 				WHERE  VVD.SAQ_TGT_GRP_CD = VL.SAQ_TGT_GRP_CD 														
	 					AND VVD.RHQ_CD = VL.RHQ_CD 															
	 					AND VVD.AQ_CD = VL.AQ_CD AND VVD.BSE_MON = VL.BSE_MON 												
	 				)  																			
	 			,VOYAGE ) VOYAGE 																		
	 		,GRP_AQ_CD 																				
	 		,GRP_SAQ_TGT_GRP_CD 																			
	 		,GRP_TRD_CD 																				
	 		,GRP_DIR_CD,GRP_CD 																			
	 	FROM ( 																						
	 		SELECT QTA.MQTA_RLSE_VER_NO,QTA.RHQ_CD,QTA.BSE_YR,QTA.BSE_QTR_CD BSE_QTR_CD,QTA.BSE_MON,NVL(QTA.AQ_CD,'000000') AQ_CD,GRP_TRD.SAQ_TGT_GRP_CD,QTA.TRD_CD,QTA.CONV_DIR_CD 	
	 			,SUM(QTA.LOD_QTY) AS LOD 																	
	 			,SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY) AS REV 															
	 			,SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY) AS CM 													
	 			,SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY) AS RA_CM 													
	 			,SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY) AS RA_OP 															
	 			,COUNT(DISTINCT VVD.SKD_VOY_NO||VVD.VSL_CD||VVD.SKD_DIR_CD) VOYAGE 												
	 			,GROUPING(QTA.AQ_CD) GRP_AQ_CD 																	
	 			,GROUPING(GRP_TRD.SAQ_TGT_GRP_CD) GRP_SAQ_TGT_GRP_CD 														
	 			,GROUPING(QTA.TRD_CD) GRP_TRD_CD 																
	 			,GROUPING(QTA.CONV_DIR_CD) GRP_DIR_CD 																
	 			,GROUPING(QTA.AQ_CD) || GROUPING(GRP_TRD.SAQ_TGT_GRP_CD) || GROUPING(QTA.TRD_CD) || GROUPING(QTA.CONV_DIR_CD) GRP_CD 						
	 		FROM SAQ_MON_CFM_QTA QTA 																		
	 			, SAQ_MON_CFM_TGT_VVD VVD 																	
	 			, SAQ_TGT_GRP_TRD GRP_TRD 																	
	 		WHERE QTA.MQTA_RLSE_VER_NO = VVD.MQTA_RLSE_VER_NO 															
	 			AND QTA.BSE_YR = VVD.BSE_YR 																	
	 			AND QTA.BSE_QTR_CD = VVD.BSE_QTR_CD 																
	 			AND QTA.BSE_MON = VVD.BSE_MON 																	
	 			AND QTA.TRD_CD = VVD.TRD_CD 																	
	 			AND QTA.RLANE_CD = VVD.RLANE_CD 																
	 			AND QTA.DIR_CD = VVD.DIR_CD 																	
	 			AND QTA.VSL_CD = VVD.VSL_CD 																	
	 			AND QTA.SKD_VOY_NO = VVD.SKD_VOY_NO 																
	 			AND QTA.QTA_TGT_CD = @[selType]  																		
	 			AND QTA.SKD_DIR_CD = VVD.SKD_DIR_CD 																
	 			AND QTA.TRD_CD = GRP_TRD.TRD_CD 																
	 			AND VVD.SUB_TRD_CD = GRP_TRD.SUB_TRD_CD 															
	 			AND QTA.DIR_CD = GRP_TRD.DIR_CD 	

#if (${isRhq} == 'true')
    AND ( QTA.RHQ_CD,QTA.BSE_YR,QTA.BSE_QTR_CD,QTA.MQTA_RLSE_VER_NO ) = ( SELECT  OFC_CD , BSE_YR, BSE_QTR_CD,VER  FROM PARAMS ) 
#else 
    AND ( NVL(QTA.AQ_CD, '  '),QTA.BSE_YR,QTA.BSE_QTR_CD,QTA.MQTA_RLSE_VER_NO ) = ( SELECT  OFC_CD, BSE_YR, BSE_QTR_CD,VER  FROM PARAMS )       
#end															
																									
	 		GROUP BY GROUPING SETS(  																		
	 			 (QTA.MQTA_RLSE_VER_NO,QTA.RHQ_CD,QTA.BSE_YR,QTA.BSE_QTR_CD,QTA.BSE_MON) 											
	 			,(QTA.MQTA_RLSE_VER_NO,QTA.RHQ_CD,QTA.BSE_YR,QTA.BSE_QTR_CD,QTA.BSE_MON,QTA.AQ_CD) 										
	 			,(QTA.MQTA_RLSE_VER_NO,QTA.RHQ_CD,QTA.BSE_YR,QTA.BSE_QTR_CD,QTA.BSE_MON,QTA.AQ_CD,GRP_TRD.SAQ_TGT_GRP_CD) 							
	 			,(QTA.MQTA_RLSE_VER_NO,QTA.RHQ_CD,QTA.BSE_YR,QTA.BSE_QTR_CD,QTA.BSE_MON,QTA.AQ_CD,GRP_TRD.SAQ_TGT_GRP_CD,QTA.TRD_CD,QTA.CONV_DIR_CD) 				
	 		) 																					
	 	) VL 																						
	 ) VAL 																							
	 , ITEM_VIEW ITM 																					
	 , PARAMS P 																						
	 GROUP BY VAL.BSE_YR,VAL.BSE_QTR_CD,VAL.AQ_CD,VAL.SAQ_TGT_GRP_CD,VAL.TRD_CD,VAL.DIR_CD,ITM.CODE,ITM.TEXT,ITM.ROW_SEQ,GRP_AQ_CD,GRP_SAQ_TGT_GRP_CD,GRP_TRD_CD,GRP_DIR_CD , GRP_CD		
	 ORDER BY VAL.GRP_AQ_CD DESC , VAL.AQ_CD, VAL.GRP_SAQ_TGT_GRP_CD DESC, VAL.SAQ_TGT_GRP_CD,VAL.GRP_TRD_CD DESC, VAL.TRD_CD,VAL.DIR_CD,ITM.ROW_SEQ			]]></sql>
			<params>
				<param name="rhqCd" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="quarter" type="12" value="" out="N"/>
				<param name="version" type="12" value="" out="N"/>
				<param name="targetGrp" type="12" value="" out="N"/>
				<param name="month" type="12" value="" out="N"/>
				<param name="selType" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
