/*=========================================================
*Copyright(c) 2011 CyberLogitec
*@FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0047DetailListVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2011.03.18
*@LastModifier : 최윤성
*@LastVersion : 1.0
* 2011.03.18 최윤성
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.spc.spaceallocationmanage.spaceallocationmanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author CHOI Yun Sung
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpaceAllocationManageDBDAOSearchSpaceAllocation0047DetailListVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * SpaceAllocationManage의 데이타 모델에 해당되는 값을 불러온다.
	  * </pre>
	  */
	public SpaceAllocationManageDBDAOSearchSpaceAllocation0047DetailListVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("office",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fcast",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_dir_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_voy_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vsl_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.spc.spaceallocationmanage.spaceallocationmanage.integration").append("\n"); 
		query.append("FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0047DetailListVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH base_key AS (" ).append("\n"); 
		query.append("    SELECT @[year]       AS YEAR      ," ).append("\n"); 
		query.append("           @[week]       AS WEEK      ," ).append("\n"); 
		query.append("           @[office]     AS RHQ_CD    ," ).append("\n"); 
		query.append("           @[lane]       AS RLANE_CD  ," ).append("\n"); 
		query.append("           @[bound]      AS DIR_CD    ," ).append("\n"); 
		query.append("           @[vsl_cd]     AS VSL_CD    ," ).append("\n"); 
		query.append("           @[skd_voy_no] AS SKD_VOY_NO," ).append("\n"); 
		query.append("           @[skd_dir_cd] AS SKD_DIR_CD," ).append("\n"); 
		query.append("           @[fcast]      AS FCAST     ," ).append("\n"); 
		query.append("           L.CONTI_CD    AS OFC_CONTI ," ).append("\n"); 
		query.append("           O.OFC_CD      AS OFC_CD" ).append("\n"); 
		query.append("      FROM MDM_LOCATION     L," ).append("\n"); 
		query.append("           MDM_ORGANIZATION O" ).append("\n"); 
		query.append("     WHERE L.LOC_CD = O.LOC_CD" ).append("\n"); 
		query.append("       AND O.OFC_CD = @[office]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BASE AS (" ).append("\n"); 
		query.append("    SELECT B.YEAR," ).append("\n"); 
		query.append("           B.WEEK," ).append("\n"); 
		query.append("           SUBSTR(T.SLS_YRMON, 1, 4) AS COST_YR," ).append("\n"); 
		query.append("           SUBSTR(T.SLS_YRMON, 5)    AS MON    ," ).append("\n"); 
		query.append("           T.COST_WK   ," ).append("\n"); 
		query.append("           B.RHQ_CD    ," ).append("\n"); 
		query.append("           T.TRD_CD    ," ).append("\n"); 
		query.append("           B.RLANE_CD  ," ).append("\n"); 
		query.append("           B.DIR_CD    ," ).append("\n"); 
		query.append("           B.VSL_CD    ," ).append("\n"); 
		query.append("           B.SKD_VOY_NO," ).append("\n"); 
		query.append("           B.SKD_DIR_CD," ).append("\n"); 
		query.append("           B.FCAST     ," ).append("\n"); 
		query.append("           NVL((O.CTRL_PORT_FLG)   , 'N') AS POL_POD," ).append("\n"); 
		query.append("           NVL((O.CTRL_40FT_HC_FLG), 'N') AS HC40   ," ).append("\n"); 
		query.append("           NVL((O.CTRL_45FT_HC_FLG), 'N') AS HC45   ," ).append("\n"); 
		query.append("           NVL((O.CTRL_53FT_FLG)   , 'N') AS HC53   ," ).append("\n"); 
		query.append("           NVL((O.CTRL_RF_FLG)     , 'N') AS REEFER ," ).append("\n"); 
		query.append("           NVL((O.CTRL_WGT_FLG)    , 'N') AS WEIGHT ," ).append("\n"); 
		query.append("           NVL((O.CTRL_SPC_FLG)    , 'N') AS VOLUME ," ).append("\n"); 
		query.append("           B.OFC_CD   ," ).append("\n"); 
		query.append("           B.OFC_CONTI" ).append("\n"); 
		query.append("      FROM COA_MON_VVD       T," ).append("\n"); 
		query.append("           BASE_KEY          B," ).append("\n"); 
		query.append("           SPC_ALOC_CTRL_OPT O" ).append("\n"); 
		query.append("     WHERE T.RLANE_CD      = B.RLANE_CD" ).append("\n"); 
		query.append("       AND T.VSL_CD        = B.VSL_CD" ).append("\n"); 
		query.append("       AND T.SKD_VOY_NO    = B.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND T.DIR_CD        = B.DIR_CD" ).append("\n"); 
		query.append("       AND O.RLANE_CD  (+) = B.RLANE_CD" ).append("\n"); 
		query.append("       AND O.DIR_CD    (+) = B.DIR_CD" ).append("\n"); 
		query.append("       AND O.VSL_CD    (+) = B.VSL_CD" ).append("\n"); 
		query.append("       AND O.SKD_VOY_NO(+) = B.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND O.SKD_DIR_CD(+) = B.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND T.TRD_CD        = SAQ_GET_REP_TRD_FNC(B.RLANE_CD)" ).append("\n"); 
		query.append("       AND SUBSTR(T.SLS_YRMON, 1, 4)||T.COST_WK = B.YEAR||B.WEEK" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", REP_VVDS AS (" ).append("\n"); 
		query.append("    SELECT V.TRD_CD     AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           V.SUB_TRD_CD AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD," ).append("\n"); 
		query.append("           V.DIR_CD  ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON," ).append("\n"); 
		query.append("           V.COST_WK   ," ).append("\n"); 
		query.append("           V.VSL_CD    ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO," ).append("\n"); 
		query.append("           V.DIR_CD AS SKD_DIR_CD," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           P.OFC_CD   ," ).append("\n"); 
		query.append("           P.OFC_CONTI," ).append("\n"); 
		query.append("           '1' AS STS" ).append("\n"); 
		query.append("      FROM COA_MON_VVD V," ).append("\n"); 
		query.append("           BASE_KEY    P" ).append("\n"); 
		query.append("     WHERE V.TRD_CD     = SAQ_GET_REP_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.SUB_TRD_CD = SAQ_GET_REP_SUB_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("       AND V.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND V.DIR_CD     = P.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                                                                 FROM COA_MON_VVD N" ).append("\n"); 
		query.append("                                                                WHERE N.SLAN_CD    = SUBSTR(V.RLANE_CD, 1, 3)" ).append("\n"); 
		query.append("                                                                  AND N.VSL_CD      = V.VSL_CD" ).append("\n"); 
		query.append("                                                                  AND N.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                  AND N.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("                                                                  AND N.DELT_FLG   = 'N' ))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT V.VSL_CD       ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO   ," ).append("\n"); 
		query.append("           V.SKD_DIR_CD   ," ).append("\n"); 
		query.append("           VPS.VPS_PORT_CD," ).append("\n"); 
		query.append("           VPS.YD_CD      ," ).append("\n"); 
		query.append("           VPS.CLPT_SEQ   ," ).append("\n"); 
		query.append("           VPS.CLPT_SEQ AS PORT_SEQ," ).append("\n"); 
		query.append("           VPS.VPS_ETD_DT ," ).append("\n"); 
		query.append("           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MAX_SEQ" ).append("\n"); 
		query.append("      FROM MDM_LOCATION     L  ," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD VPS," ).append("\n"); 
		query.append("           REP_VVDS         V" ).append("\n"); 
		query.append("     WHERE L.LOC_CD       = VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("       AND VPS.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VSL_PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD  ," ).append("\n"); 
		query.append("           DIR_CD    ," ).append("\n"); 
		query.append("           RHQ_CD    ," ).append("\n"); 
		query.append("           VSL_CD    ," ).append("\n"); 
		query.append("           SKD_VOY_NO," ).append("\n"); 
		query.append("           SKD_DIR_CD," ).append("\n"); 
		query.append("           COST_YR_WK," ).append("\n"); 
		query.append("           POL_CD    ," ).append("\n"); 
		query.append("           POD_CD    ," ).append("\n"); 
		query.append("           MAX(POL_SEQ) AS POL_SEQ," ).append("\n"); 
		query.append("           MIN(POD_SEQ) AS POD_SEQ," ).append("\n"); 
		query.append("           POL_CONTI," ).append("\n"); 
		query.append("           IOC_CD   ," ).append("\n"); 
		query.append("           PAST     ," ).append("\n"); 
		query.append("           POL_POD  ," ).append("\n"); 
		query.append("           HC40     ," ).append("\n"); 
		query.append("           HC45     ," ).append("\n"); 
		query.append("           HC53     ," ).append("\n"); 
		query.append("           REEFER   ," ).append("\n"); 
		query.append("           WEIGHT   ," ).append("\n"); 
		query.append("           VOLUME   ," ).append("\n"); 
		query.append("           OFC_CD   ," ).append("\n"); 
		query.append("           OFC_CONTI" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT V.RLANE_CD  ," ).append("\n"); 
		query.append("                     V.DIR_CD    ," ).append("\n"); 
		query.append("                     V.RHQ_CD    ," ).append("\n"); 
		query.append("                     V.VSL_CD    ," ).append("\n"); 
		query.append("                     V.SKD_VOY_NO," ).append("\n"); 
		query.append("                     V.SKD_DIR_CD," ).append("\n"); 
		query.append("                     V.COST_YR||V.COST_WK          AS COST_YR_WK," ).append("\n"); 
		query.append("                     NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD    ," ).append("\n"); 
		query.append("                     NVL(S2.YD_CD, S2.VPS_PORT_CD) AS POD_CD    ," ).append("\n"); 
		query.append("                     S1.CLPT_SEQ AS POL_SEQ," ).append("\n"); 
		query.append("                     S2.CLPT_SEQ AS POD_SEQ," ).append("\n"); 
		query.append("                     L1.CONTI_CD AS POL_CONTI," ).append("\n"); 
		query.append("                     ( SELECT L.CONTI_CD" ).append("\n"); 
		query.append("                         FROM MDM_LOCATION L" ).append("\n"); 
		query.append("                        WHERE L.LOC_CD = S2.VPS_PORT_CD" ).append("\n"); 
		query.append("                     ) AS POD_CONTI," ).append("\n"); 
		query.append("                     SAQ_GET_OCN_IPC_FNC(V.RLANE_CD, S1.VPS_PORT_CD, S2.VPS_PORT_CD) AS IOC_CD," ).append("\n"); 
		query.append("                     (DECODE(V.FCAST, '1', CASE" ).append("\n"); 
		query.append("                                                WHEN S1.VPS_ETD_DT < GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), S1.VPS_PORT_CD ) THEN 'Y'" ).append("\n"); 
		query.append("                                                                                                                                                         ELSE 'N'" ).append("\n"); 
		query.append("                                            END, '2', 'N', '3', 'Y')" ).append("\n"); 
		query.append("                     ) AS PAST," ).append("\n"); 
		query.append("                     POL_POD ," ).append("\n"); 
		query.append("                     HC40    ," ).append("\n"); 
		query.append("                     HC45    ," ).append("\n"); 
		query.append("                     HC53    ," ).append("\n"); 
		query.append("                     REEFER  ," ).append("\n"); 
		query.append("                     WEIGHT  ," ).append("\n"); 
		query.append("                     VOLUME  ," ).append("\n"); 
		query.append("                     V.OFC_CD," ).append("\n"); 
		query.append("                     V.OFC_CONTI" ).append("\n"); 
		query.append("                FROM BASE         V ," ).append("\n"); 
		query.append("                     PORT_SKD     S1," ).append("\n"); 
		query.append("                     PORT_SKD     S2," ).append("\n"); 
		query.append("                     MDM_LOCATION L1" ).append("\n"); 
		query.append("               WHERE S1.VSL_CD      = V.VSL_CD" ).append("\n"); 
		query.append("                 AND S1.SKD_VOY_NO  = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND S1.SKD_DIR_CD  = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND S1.VSL_CD      = S2.VSL_CD" ).append("\n"); 
		query.append("                 AND S1.SKD_VOY_NO  = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND S1.SKD_DIR_CD  = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND (    S1.PORT_SEQ = S1.MAX_SEQ   -- 단독 CALLING 또는 DOUBLE CALLING 인데 마지막 PORT 경우는 모두" ).append("\n"); 
		query.append("                       OR S2.PORT_SEQ < S1.MAX_SEQ ) -- DOUBLE CALLING PORT중 POD 가 LAST DOUBLE CALLING PORT 보다 앞인 경우만 FILTERING" ).append("\n"); 
		query.append("                 AND S1.VPS_PORT_CD = L1.LOC_CD" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              SELECT V.RLANE_CD  ," ).append("\n"); 
		query.append("                     V.DIR_CD    ," ).append("\n"); 
		query.append("                     V.RHQ_CD    ," ).append("\n"); 
		query.append("                     V.VSL_CD    ," ).append("\n"); 
		query.append("                     V.SKD_VOY_NO," ).append("\n"); 
		query.append("                     V.SKD_DIR_CD," ).append("\n"); 
		query.append("                     V.COST_YR||V.COST_WK AS COST_YR_WK," ).append("\n"); 
		query.append("                     '0000000' AS POL_CD   ," ).append("\n"); 
		query.append("                     '0000000' AS POD_CD   ," ).append("\n"); 
		query.append("                     0         AS POL_SEQ  ," ).append("\n"); 
		query.append("                     0         AS POD_SEQ  ," ).append("\n"); 
		query.append("                     ' '       AS POL_CONTI," ).append("\n"); 
		query.append("                     ''        AS POD_CONTI," ).append("\n"); 
		query.append("                     DECODE(SUBSTR(V.TRD_CD, 0, 1), 'I', 'I', 'O') AS IOC_CD," ).append("\n"); 
		query.append("                     DECODE(V.FCAST, '1', '', '2', 'N', '3', 'Y')  AS PAST  ," ).append("\n"); 
		query.append("                     POL_POD," ).append("\n"); 
		query.append("                     HC40   ," ).append("\n"); 
		query.append("                     HC45   ," ).append("\n"); 
		query.append("                     HC53    ," ).append("\n"); 
		query.append("                     REEFER ," ).append("\n"); 
		query.append("                     WEIGHT ," ).append("\n"); 
		query.append("                     VOLUME ," ).append("\n"); 
		query.append("                     OFC_CD ," ).append("\n"); 
		query.append("                     OFC_CONTI" ).append("\n"); 
		query.append("                FROM BASE V" ).append("\n"); 
		query.append("           ) Z" ).append("\n"); 
		query.append("  GROUP BY RLANE_CD  ," ).append("\n"); 
		query.append("           DIR_CD    ," ).append("\n"); 
		query.append("           RHQ_CD    ," ).append("\n"); 
		query.append("           VSL_CD    ," ).append("\n"); 
		query.append("           SKD_VOY_NO," ).append("\n"); 
		query.append("           SKD_DIR_CD," ).append("\n"); 
		query.append("           COST_YR_WK," ).append("\n"); 
		query.append("           POL_CD    ," ).append("\n"); 
		query.append("           POD_CD    ," ).append("\n"); 
		query.append("           POL_CONTI ," ).append("\n"); 
		query.append("           POD_CONTI ," ).append("\n"); 
		query.append("           IOC_CD    ," ).append("\n"); 
		query.append("           PAST      ," ).append("\n"); 
		query.append("           POL_POD   ," ).append("\n"); 
		query.append("           HC40      ," ).append("\n"); 
		query.append("           HC45      ," ).append("\n"); 
		query.append("           HC53      ," ).append("\n"); 
		query.append("           REEFER    ," ).append("\n"); 
		query.append("           WEIGHT    ," ).append("\n"); 
		query.append("           VOLUME    ," ).append("\n"); 
		query.append("           OFC_CD    ," ).append("\n"); 
		query.append("           OFC_CONTI" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("  SELECT MAX(TRD_CD)     AS TRD_CD    ," ).append("\n"); 
		query.append("         MAX(SUB_TRD_CD) AS SUB_TRD_CD," ).append("\n"); 
		query.append("         BASE_RHQ_CD," ).append("\n"); 
		query.append("         RHQ_CD     ," ).append("\n"); 
		query.append("         IOC_CD     ," ).append("\n"); 
		query.append("         NVL(OFC_CD, '+') AS OFC_CD   ," ).append("\n"); 
		query.append("         NVL(POL_CD, '+') AS POL_CD   ," ).append("\n"); 
		query.append("         NVL(POD_CD, '+') AS POD_CD   ," ).append("\n"); 
		query.append("         SUM(BKG_QUOTA)   AS BKG_QUOTA," ).append("\n"); 
		query.append("         (" ).append("\n"); 
		query.append("           SELECT (BAR.BKG_REV - BAR.ESTM_CM_COST_AMT) / BAR.BKG_TTL_QTY" ).append("\n"); 
		query.append("             FROM SPC_BKG_AVG_REV BAR," ).append("\n"); 
		query.append("                  BASE_KEY        P" ).append("\n"); 
		query.append("            WHERE BAR.OFC_KND_CD IN ('1', '3')" ).append("\n"); 
		query.append("              AND BAR.RLANE_CD    = P.RLANE_CD" ).append("\n"); 
		query.append("              AND BAR.DIR_CD      = P.DIR_CD" ).append("\n"); 
		query.append("              AND BAR.SLS_OFC_CD  = NVL(NVL(Z.OFC_CD, Z.RHQ_CD), '00000')" ).append("\n"); 
		query.append("              AND BAR.TS_FLG      = DECODE(SUBSTR(Z.IOC_CD, LENGTH(Z.IOC_CD) - 2), 'T/S', 'Y', 'N')" ).append("\n"); 
		query.append("              AND BAR.IOC_CD      = DECODE(SUBSTR(Z.IOC_CD, LENGTH(Z.IOC_CD) - 2), 'OCN', 'O', 'I')" ).append("\n"); 
		query.append("              AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("              AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("              AND BAR.TRD_CD     <> 'IAS'" ).append("\n"); 
		query.append("         ) AS CMB," ).append("\n"); 
		query.append("         DECODE(SUM(CMB2), 0, 0, SUM(CMB1) / SUM(CMB2)) AS FCT_CMB," ).append("\n"); 
		query.append("         (SUM(DECODE(@[fcast], '2', NVL(FC_TEU, 0) + NVL(FC_HC, 0) * 2 + NVL(FC_45, 0) * 2 + NVL(FC_53, 0) * 2," ).append("\n"); 
		query.append("                               '3', NVL(FC_TEU, 0)," ).append("\n"); 
		query.append("                               '1', DECODE(PAST, 'Y', NVL(FC_TEU, 0), NVL(FC_TEU, 0) + NVL(FC_HC, 0) * 2 + NVL(FC_45, 0) * 2 + NVL(FC_53, 0) * 2)))" ).append("\n"); 
		query.append("         ) AS FC_TTL_TEU," ).append("\n"); 
		query.append("         SUM(FC_TEU) AS FC_TEU," ).append("\n"); 
		query.append("         SUM(FC_20)  AS FC_20 ," ).append("\n"); 
		query.append("         SUM(FC_40)  AS FC_40 ," ).append("\n"); 
		query.append("         SUM(FC_HC)  AS FC_HC ," ).append("\n"); 
		query.append("         SUM(FC_45)  AS FC_45 ," ).append("\n"); 
		query.append("         SUM(FC_53)  AS FC_53 ," ).append("\n"); 
		query.append("         SUM(FC_RF)  AS FC_RF ," ).append("\n"); 
		query.append("         SUM(FC_WGT) AS FC_WGT," ).append("\n"); 
		query.append("         SUM(UG_TEU) AS UG_TEU," ).append("\n"); 
		query.append("         SUM(UG_20)  AS UG_20 ," ).append("\n"); 
		query.append("         SUM(UG_40)  AS UG_40 ," ).append("\n"); 
		query.append("         SUM(UG_HC)  AS UG_HC ," ).append("\n"); 
		query.append("         SUM(UG_45)  AS UG_45 ," ).append("\n"); 
		query.append("         SUM(UG_53)  AS UG_53 ," ).append("\n"); 
		query.append("         SUM(UG_RF)  AS UG_RF ," ).append("\n"); 
		query.append("         SUM(UG_WGT) AS UG_WGT," ).append("\n"); 
		query.append("         SUM(MR_TEU) AS MR_TEU," ).append("\n"); 
		query.append("         SUM(MR_20)  AS MR_20 ," ).append("\n"); 
		query.append("         SUM(MR_40)  AS MR_40 ," ).append("\n"); 
		query.append("         SUM(MR_HC)  AS MR_HC ," ).append("\n"); 
		query.append("         SUM(MR_45)  AS MR_45 ," ).append("\n"); 
		query.append("         SUM(MR_53)  AS MR_53 ," ).append("\n"); 
		query.append("         SUM(MR_RF)  AS MR_RF ," ).append("\n"); 
		query.append("         SUM(MR_WGT) AS MR_WGT," ).append("\n"); 
		query.append("         SUM(AP_TEU) AS AP_TEU," ).append("\n"); 
		query.append("         SUM(AP_20)  AS AP_20 ," ).append("\n"); 
		query.append("         SUM(AP_40)  AS AP_40 ," ).append("\n"); 
		query.append("         SUM(AP_HC)  AS AP_HC ," ).append("\n"); 
		query.append("         SUM(AP_45)  AS AP_45 ," ).append("\n"); 
		query.append("         SUM(AP_53)  AS AP_53 ," ).append("\n"); 
		query.append("         SUM(AP_RF)  AS AP_RF ," ).append("\n"); 
		query.append("         SUM(AP_WGT) AS AP_WGT," ).append("\n"); 
		query.append("         SUM(BK_TEU) AS BK_TEU," ).append("\n"); 
		query.append("         SUM(BK_20)  AS BK_20 ," ).append("\n"); 
		query.append("         SUM(BK_40)  AS BK_40 ," ).append("\n"); 
		query.append("         SUM(BK_HC)  AS BK_HC ," ).append("\n"); 
		query.append("         SUM(BK_45)  AS BK_45 ," ).append("\n"); 
		query.append("         SUM(BK_53)  AS BK_53 ," ).append("\n"); 
		query.append("         SUM(BK_RF)  AS BK_RF ," ).append("\n"); 
		query.append("         SUM(BK_WGT) AS BK_WGT," ).append("\n"); 
		query.append("         SUM(BT_TEU) AS BT_TEU," ).append("\n"); 
		query.append("         SUM(BT_20)  AS BT_20 ," ).append("\n"); 
		query.append("         SUM(BT_40)  AS BT_40 ," ).append("\n"); 
		query.append("         SUM(BT_HC)  AS BT_HC ," ).append("\n"); 
		query.append("         SUM(BT_45)  AS BT_45 ," ).append("\n"); 
		query.append("         SUM(BT_53)  AS BT_53 ," ).append("\n"); 
		query.append("         SUM(BT_RF)  AS BT_RF ," ).append("\n"); 
		query.append("         SUM(BT_WGT) AS BT_WGT," ).append("\n"); 
		query.append("         SUM(GT_TEU) AS GT_TEU," ).append("\n"); 
		query.append("         SUM(GT_20)  AS GT_20 ," ).append("\n"); 
		query.append("         SUM(GT_40)  AS GT_40 ," ).append("\n"); 
		query.append("         SUM(GT_HC)  AS GT_HC ," ).append("\n"); 
		query.append("         SUM(GT_45)  AS GT_45 ," ).append("\n"); 
		query.append("         SUM(GT_53)  AS GT_53 ," ).append("\n"); 
		query.append("         SUM(GT_RF)  AS GT_RF ," ).append("\n"); 
		query.append("         SUM(GT_WGT) AS GT_WGT," ).append("\n"); 
		query.append("         SUM(AP_MD)  AS AP_MD ," ).append("\n"); 
		query.append("         MIN(PAST)   AS PAST  ," ).append("\n"); 
		query.append("         'Y' AS EDIT," ).append("\n"); 
		query.append("         COUNT(DISTINCT DECODE(POL_CD||POD_CD, '0000000000', NULL, POL_CD||POD_CD)) + DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, '00000', NULL, POL_CD)), 0) AS CHILD_CNT," ).append("\n"); 
		query.append("         COUNT(DISTINCT DECODE(POL_CD||POD_CD, '0000000000', NULL, POL_CD||POD_CD)) AS LEAF_CNT," ).append("\n"); 
		query.append("         DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, '00000', NULL, POL_CD)), 0) AS POD_CNT," ).append("\n"); 
		query.append("         NVL(MAX(CFM_FLG), 'N') AS CFM_FLG," ).append("\n"); 
		query.append("         ( CASE" ).append("\n"); 
		query.append("                WHEN POL_CD IS NULL AND POD_CD IS NULL AND OFC_CD IS NOT NULL THEN MAX(SPC_CTRL_ALOC_RMK)" ).append("\n"); 
		query.append("                                                                              ELSE NULL" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("         ) AS SPC_CTRL_ALOC_RMK," ).append("\n"); 
		query.append("         ( CASE" ).append("\n"); 
		query.append("                WHEN POL_CD IS NOT NULL AND POD_CD IS NULL THEN MAX(SPC_CTRL_ALOC_POL_RMK)" ).append("\n"); 
		query.append("                                                           ELSE NULL" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("         ) AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("         ( CASE" ).append("\n"); 
		query.append("                WHEN POD_CD IS NOT NULL THEN MAX(SPC_CTRL_ALOC_POD_RMK)" ).append("\n"); 
		query.append("                                        ELSE NULL" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("         ) AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("            SELECT MAX(TRD_CD)     AS TRD_CD    ," ).append("\n"); 
		query.append("                   MAX(SUB_TRD_CD) AS SUB_TRD_CD," ).append("\n"); 
		query.append("                   U.BASE_RHQ_CD," ).append("\n"); 
		query.append("                   U.RHQ_CD     ," ).append("\n"); 
		query.append("                   U.IOC_CD     ," ).append("\n"); 
		query.append("                   U.OFC_CD     ," ).append("\n"); 
		query.append("                   U.POL_CD     ," ).append("\n"); 
		query.append("                   U.POD_CD     ," ).append("\n"); 
		query.append("                   U.POL_SEQ    ," ).append("\n"); 
		query.append("                   U.POD_SEQ    ," ).append("\n"); 
		query.append("                   SUM(U.BKG_QUOTA) AS BKG_QUOTA," ).append("\n"); 
		query.append("                   SUM(U.CMB1) AS CMB1  ," ).append("\n"); 
		query.append("                   SUM(CMB2)   AS CMB2  ," ).append("\n"); 
		query.append("                   SUM(FC_TEU) AS FC_TEU," ).append("\n"); 
		query.append("                   SUM(FC_20)  AS FC_20 ," ).append("\n"); 
		query.append("                   SUM(FC_40)  AS FC_40 ," ).append("\n"); 
		query.append("                   SUM(FC_HC)  AS FC_HC ," ).append("\n"); 
		query.append("                   SUM(FC_45)  AS FC_45 ," ).append("\n"); 
		query.append("                   SUM(FC_53)  AS FC_53 ," ).append("\n"); 
		query.append("                   SUM(FC_RF)  AS FC_RF ," ).append("\n"); 
		query.append("                   SUM(FC_WGT) AS FC_WGT," ).append("\n"); 
		query.append("                   SUM(UG_TEU) AS UG_TEU," ).append("\n"); 
		query.append("                   SUM(UG_20)  AS UG_20 ," ).append("\n"); 
		query.append("                   SUM(UG_40)  AS UG_40 ," ).append("\n"); 
		query.append("                   SUM(UG_HC)  AS UG_HC ," ).append("\n"); 
		query.append("                   SUM(UG_45)  AS UG_45 ," ).append("\n"); 
		query.append("                   SUM(UG_53)  AS UG_53 ," ).append("\n"); 
		query.append("                   SUM(UG_RF)  AS UG_RF ," ).append("\n"); 
		query.append("                   SUM(UG_WGT) AS UG_WGT," ).append("\n"); 
		query.append("                   SUM(MR_TEU) AS MR_TEU," ).append("\n"); 
		query.append("                   SUM(MR_20)  AS MR_20 ," ).append("\n"); 
		query.append("                   SUM(MR_40)  AS MR_40 ," ).append("\n"); 
		query.append("                   SUM(MR_HC)  AS MR_HC ," ).append("\n"); 
		query.append("                   SUM(MR_45)  AS MR_45 ," ).append("\n"); 
		query.append("                   SUM(MR_53)  AS MR_53 ," ).append("\n"); 
		query.append("                   SUM(MR_RF)  AS MR_RF ," ).append("\n"); 
		query.append("                   SUM(MR_WGT) AS MR_WGT," ).append("\n"); 
		query.append("                   SUM(AP_TEU) AS AP_TEU," ).append("\n"); 
		query.append("                   SUM(AP_20)  AS AP_20 ," ).append("\n"); 
		query.append("                   SUM(AP_40)  AS AP_40 ," ).append("\n"); 
		query.append("                   SUM(AP_HC)  AS AP_HC ," ).append("\n"); 
		query.append("                   SUM(AP_45)  AS AP_45 ," ).append("\n"); 
		query.append("                   SUM(AP_53)  AS AP_53 ," ).append("\n"); 
		query.append("                   SUM(AP_RF)  AS AP_RF ," ).append("\n"); 
		query.append("                   SUM(AP_WGT) AS AP_WGT," ).append("\n"); 
		query.append("                   SUM(BK_TEU) AS BK_TEU," ).append("\n"); 
		query.append("                   SUM(BK_20)  AS BK_20 ," ).append("\n"); 
		query.append("                   SUM(BK_40)  AS BK_40 ," ).append("\n"); 
		query.append("                   SUM(BK_HC)  AS BK_HC ," ).append("\n"); 
		query.append("                   SUM(BK_45)  AS BK_45 ," ).append("\n"); 
		query.append("                   SUM(BK_53)  AS BK_53 ," ).append("\n"); 
		query.append("                   SUM(BK_RF)  AS BK_RF ," ).append("\n"); 
		query.append("                   SUM(BK_WGT) AS BK_WGT," ).append("\n"); 
		query.append("                   SUM(BT_TEU) AS BT_TEU," ).append("\n"); 
		query.append("                   SUM(BT_20)  AS BT_20 ," ).append("\n"); 
		query.append("                   SUM(BT_40)  AS BT_40 ," ).append("\n"); 
		query.append("                   SUM(BT_HC)  AS BT_HC ," ).append("\n"); 
		query.append("                   SUM(BT_45)  AS BT_45 ," ).append("\n"); 
		query.append("                   SUM(BT_53)  AS BT_53 ," ).append("\n"); 
		query.append("                   SUM(BT_RF)  AS BT_RF ," ).append("\n"); 
		query.append("                   SUM(BT_WGT) AS BT_WGT," ).append("\n"); 
		query.append("                   SUM(GT_TEU) AS GT_TEU," ).append("\n"); 
		query.append("                   SUM(GT_20)  AS GT_20 ," ).append("\n"); 
		query.append("                   SUM(GT_40)  AS GT_40 ," ).append("\n"); 
		query.append("                   SUM(GT_HC)  AS GT_HC ," ).append("\n"); 
		query.append("                   SUM(GT_45)  AS GT_45 ," ).append("\n"); 
		query.append("                   SUM(GT_53)  AS GT_53 ," ).append("\n"); 
		query.append("                   SUM(GT_RF)  AS GT_RF ," ).append("\n"); 
		query.append("                   SUM(GT_WGT) AS GT_WGT," ).append("\n"); 
		query.append("                   SUM(DECODE(FLG, 103, 1, 203, 1, 0)) AS AP_MD," ).append("\n"); 
		query.append("                   PAST," ).append("\n"); 
		query.append("                   DECODE(POD_CD, '00000', DECODE(SUM(UG_WGT), 0, MAX(CFM_FLG), MIN(CFM_FLG))) AS CFM_FLG," ).append("\n"); 
		query.append("                   MAX(SPC_CTRL_ALOC_RMK)     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                   MAX(SPC_CTRL_ALOC_POL_RMK) AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                   MAX(SPC_CTRL_ALOC_POD_RMK) AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      -- Trunk Forecast" ).append("\n"); 
		query.append("                      SELECT 101 AS FLG," ).append("\n"); 
		query.append("                             T.TRD_CD    ," ).append("\n"); 
		query.append("                             T.SUB_TRD_CD," ).append("\n"); 
		query.append("                             B.RHQ_CD     AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                             T.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                             DECODE(T.IOC_TS_CD, 'O', 'OCN', 'I', 'IPC', '') AS IOC_CD," ).append("\n"); 
		query.append("                             T.SLS_RGN_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("                             B.POL_CD ," ).append("\n"); 
		query.append("                             B.POD_CD ," ).append("\n"); 
		query.append("                             B.POL_SEQ," ).append("\n"); 
		query.append("                             B.POD_SEQ," ).append("\n"); 
		query.append("                             0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                             0 AS CMB1     ," ).append("\n"); 
		query.append("                             0 AS CMB2     ," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_TTL_QTY)) AS FC_TEU," ).append("\n"); 
		query.append("                             0 AS FC_20," ).append("\n"); 
		query.append("                             0 AS FC_40," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_40FT_HC_QTY)) AS FC_HC ," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_45FT_HC_QTY)) AS FC_45 ," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_53FT_QTY))    AS FC_53 ," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_RF_QTY))      AS FC_RF ," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_TTL_WGT))     AS FC_WGT," ).append("\n"); 
		query.append("                             0 AS UG_TEU," ).append("\n"); 
		query.append("                             0 AS UG_20 ," ).append("\n"); 
		query.append("                             0 AS UG_40 ," ).append("\n"); 
		query.append("                             0 AS UG_HC ," ).append("\n"); 
		query.append("                             0 AS UG_45 ," ).append("\n"); 
		query.append("                             0 AS UG_53 ," ).append("\n"); 
		query.append("                             0 AS UG_RF ," ).append("\n"); 
		query.append("                             0 AS UG_WGT," ).append("\n"); 
		query.append("                             0 AS MR_TEU," ).append("\n"); 
		query.append("                             0 AS MR_20 ," ).append("\n"); 
		query.append("                             0 AS MR_40 ," ).append("\n"); 
		query.append("                             0 AS MR_HC ," ).append("\n"); 
		query.append("                             0 AS MR_45 ," ).append("\n"); 
		query.append("                             0 AS MR_53 ," ).append("\n"); 
		query.append("                             0 AS MR_RF ," ).append("\n"); 
		query.append("                             0 AS MR_WGT," ).append("\n"); 
		query.append("                             0 AS AP_TEU," ).append("\n"); 
		query.append("                             0 AS AP_20 ," ).append("\n"); 
		query.append("                             0 AS AP_40 ," ).append("\n"); 
		query.append("                             0 AS AP_HC ," ).append("\n"); 
		query.append("                             0 AS AP_45 ," ).append("\n"); 
		query.append("                             0 AS AP_53 ," ).append("\n"); 
		query.append("                             0 AS AP_RF ," ).append("\n"); 
		query.append("                             0 AS AP_WGT," ).append("\n"); 
		query.append("                             0 AS BK_TEU," ).append("\n"); 
		query.append("                             0 AS BK_20 ," ).append("\n"); 
		query.append("                             0 AS BK_40 ," ).append("\n"); 
		query.append("                             0 AS BK_HC ," ).append("\n"); 
		query.append("                             0 AS BK_45 ," ).append("\n"); 
		query.append("                             0 AS BK_53 ," ).append("\n"); 
		query.append("                             0 AS BK_RF ," ).append("\n"); 
		query.append("                             0 AS BK_WGT," ).append("\n"); 
		query.append("                             0 AS BT_TEU," ).append("\n"); 
		query.append("                             0 AS BT_20 ," ).append("\n"); 
		query.append("                             0 AS BT_40 ," ).append("\n"); 
		query.append("                             0 AS BT_HC ," ).append("\n"); 
		query.append("                             0 AS BT_45 ," ).append("\n"); 
		query.append("                             0 AS BT_53 ," ).append("\n"); 
		query.append("                             0 AS BT_RF ," ).append("\n"); 
		query.append("                             0 AS BT_WGT," ).append("\n"); 
		query.append("                             0 AS GT_TEU," ).append("\n"); 
		query.append("                             0 AS GT_20 ," ).append("\n"); 
		query.append("                             0 AS GT_40 ," ).append("\n"); 
		query.append("                             0 AS GT_HC ," ).append("\n"); 
		query.append("                             0 AS GT_45 ," ).append("\n"); 
		query.append("                             0 AS GT_53 ," ).append("\n"); 
		query.append("                             0 AS GT_RF ," ).append("\n"); 
		query.append("                             0 AS GT_WGT," ).append("\n"); 
		query.append("                             B.PAST," ).append("\n"); 
		query.append("                             NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                        FROM SPC_DLY_FCAST_CUST T," ).append("\n"); 
		query.append("                             VSL_PORT_SKD       B" ).append("\n"); 
		query.append("                       WHERE T.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("                         AND T.DIR_CD     = B.DIR_CD" ).append("\n"); 
		query.append("                         AND T.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                         AND T.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND T.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(T.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(T.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD" ).append("\n"); 
		query.append("                         AND (T.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI) " ).append("\n"); 
		query.append("                         AND T.IOC_TS_CD IN ('I','O')" ).append("\n"); 
		query.append("                         AND NVL(T.CFM_TTL_QTY,0) + NVL(T.CFM_TTL_WGT,0) > 0" ).append("\n"); 
		query.append("                    GROUP BY T.TRD_CD        ," ).append("\n"); 
		query.append("                             T.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                             B.RHQ_CD        ," ).append("\n"); 
		query.append("                             T.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                             T.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                             B.POL_CD        ," ).append("\n"); 
		query.append("                             B.POD_CD        ," ).append("\n"); 
		query.append("                             B.POL_SEQ       ," ).append("\n"); 
		query.append("                             B.POD_SEQ       ," ).append("\n"); 
		query.append("                             T.IOC_TS_CD     ," ).append("\n"); 
		query.append("                             B.PAST" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT 103 AS FLG," ).append("\n"); 
		query.append("                             D.TRD_CD    ," ).append("\n"); 
		query.append("                             D.SUB_TRD_CD," ).append("\n"); 
		query.append("                             B.RHQ_CD     AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                             D.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                             DECODE(D.MNL_FLG, 'Y', 'T-','')||DECODE(D.IOC_CD,'O','OCN','I','IPC','') AS IOC_CD," ).append("\n"); 
		query.append("                             D.SLS_RGN_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("                             B.POL_CD ," ).append("\n"); 
		query.append("                             B.POD_CD ," ).append("\n"); 
		query.append("                             B.POL_SEQ," ).append("\n"); 
		query.append("                             B.POD_SEQ," ).append("\n"); 
		query.append("                             0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                             0 AS CMB1     ," ).append("\n"); 
		query.append("                             0 AS CMB2     ," ).append("\n"); 
		query.append("                             0 AS FC_TEU   ," ).append("\n"); 
		query.append("                             0 AS FC_20    ," ).append("\n"); 
		query.append("                             0 AS FC_40    ," ).append("\n"); 
		query.append("                             0 AS FC_HC    ," ).append("\n"); 
		query.append("                             0 AS FC_45    ," ).append("\n"); 
		query.append("                             0 AS FC_53    ," ).append("\n"); 
		query.append("                             0 AS FC_RF    ," ).append("\n"); 
		query.append("                             0 AS FC_WGT   ," ).append("\n"); 
		query.append("                             0 AS UG_TEU   ," ).append("\n"); 
		query.append("                             0 AS UG_20    ," ).append("\n"); 
		query.append("                             0 AS UG_40    ," ).append("\n"); 
		query.append("                             0 AS UG_HC    ," ).append("\n"); 
		query.append("                             0 AS UG_45    ," ).append("\n"); 
		query.append("                             0 AS UG_53    ," ).append("\n"); 
		query.append("                             0 AS UG_RF    ," ).append("\n"); 
		query.append("                             0 AS UG_WGT   ," ).append("\n"); 
		query.append("                             0 AS MR_TEU   ," ).append("\n"); 
		query.append("                             0 AS MR_20    ," ).append("\n"); 
		query.append("                             0 AS MR_40    ," ).append("\n"); 
		query.append("                             0 AS MR_HC    ," ).append("\n"); 
		query.append("                             0 AS MR_45    ," ).append("\n"); 
		query.append("                             0 AS MR_53    ," ).append("\n"); 
		query.append("                             0 AS MR_RF    ," ).append("\n"); 
		query.append("                             0 AS MR_WGT   ," ).append("\n"); 
		query.append("                             D.ASGN_TTL_QTY     AS AP_TEU," ).append("\n"); 
		query.append("                             D.ASGN_20FT_QTY    AS AP_20 ," ).append("\n"); 
		query.append("                             D.ASGN_40FT_QTY    AS AP_40 ," ).append("\n"); 
		query.append("                             D.ASGN_40FT_HC_QTY AS AP_HC ," ).append("\n"); 
		query.append("                             D.ASGN_45FT_HC_QTY AS AP_45 ," ).append("\n"); 
		query.append("                             D.ASGN_53FT_QTY    AS AP_53 ," ).append("\n"); 
		query.append("                             D.ASGN_RF_QTY      AS AP_RF ," ).append("\n"); 
		query.append("                             D.ASGN_TTL_WGT     AS AP_WGT," ).append("\n"); 
		query.append("                             0 BK_TEU," ).append("\n"); 
		query.append("                             0 BK_20 ," ).append("\n"); 
		query.append("                             0 BK_40 ," ).append("\n"); 
		query.append("                             0 BK_HC ," ).append("\n"); 
		query.append("                             0 BK_45 ," ).append("\n"); 
		query.append("                             0 BK_53 ," ).append("\n"); 
		query.append("                             0 BK_RF ," ).append("\n"); 
		query.append("                             0 BK_WGT," ).append("\n"); 
		query.append("                             0 BT_TEU," ).append("\n"); 
		query.append("                             0 BT_20 ," ).append("\n"); 
		query.append("                             0 BT_40 ," ).append("\n"); 
		query.append("                             0 BT_HC ," ).append("\n"); 
		query.append("                             0 BT_45 ," ).append("\n"); 
		query.append("                             0 BT_53 ," ).append("\n"); 
		query.append("                             0 BT_RF ," ).append("\n"); 
		query.append("                             0 BT_WGT," ).append("\n"); 
		query.append("                             0 GT_TEU," ).append("\n"); 
		query.append("                             0 GT_20 ," ).append("\n"); 
		query.append("                             0 GT_40 ," ).append("\n"); 
		query.append("                             0 GT_HC ," ).append("\n"); 
		query.append("                             0 GT_45 ," ).append("\n"); 
		query.append("                             0 GT_53 ," ).append("\n"); 
		query.append("                             0 GT_RF ," ).append("\n"); 
		query.append("                             0 GT_WGT," ).append("\n"); 
		query.append("                             B.PAST," ).append("\n"); 
		query.append("                             NULL AS CFM_FLG," ).append("\n"); 
		query.append("                             D.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                             D.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                             D.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                        FROM SPC_ALOC_POL_POD D," ).append("\n"); 
		query.append("                             VSL_PORT_SKD     B" ).append("\n"); 
		query.append("                       WHERE D.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("                         AND D.DIR_CD     = B.DIR_CD" ).append("\n"); 
		query.append("                         AND D.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                         AND D.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND D.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(D.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(D.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD" ).append("\n"); 
		query.append("                         AND (D.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI)" ).append("\n"); 
		query.append("                         AND D.TS_FLG     = 'N'" ).append("\n"); 
		query.append("                         AND D.SLS_OFC_CD = D.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT FLG        ," ).append("\n"); 
		query.append("                             TRD_CD     ," ).append("\n"); 
		query.append("                             SUB_TRD_CD ," ).append("\n"); 
		query.append("                             BASE_RHQ_CD," ).append("\n"); 
		query.append("                             RHQ_CD     ," ).append("\n"); 
		query.append("                             IOC_CD     ," ).append("\n"); 
		query.append("                             OFC_CD     ," ).append("\n"); 
		query.append("                             POL_CD     ," ).append("\n"); 
		query.append("                             POD_CD     ," ).append("\n"); 
		query.append("                             POL_SEQ    ," ).append("\n"); 
		query.append("                             POD_SEQ    ," ).append("\n"); 
		query.append("                             BKG_QUOTA  ," ).append("\n"); 
		query.append("                             CMB1       ," ).append("\n"); 
		query.append("                             CMB2       ," ).append("\n"); 
		query.append("                             SUM(FC_TEU) AS FC_TEU," ).append("\n"); 
		query.append("                             SUM(FC_20)  AS FC_20 ," ).append("\n"); 
		query.append("                             SUM(FC_40)  AS FC_40 ," ).append("\n"); 
		query.append("                             SUM(FC_HC)  AS FC_HC ," ).append("\n"); 
		query.append("                             SUM(FC_45)  AS FC_45 ," ).append("\n"); 
		query.append("                             SUM(FC_53)  AS FC_53 ," ).append("\n"); 
		query.append("                             SUM(FC_RF)  AS FC_RF ," ).append("\n"); 
		query.append("                             SUM(FC_WGT) AS FC_WGT," ).append("\n"); 
		query.append("                             UG_TEU," ).append("\n"); 
		query.append("                             UG_20 ," ).append("\n"); 
		query.append("                             UG_40 ," ).append("\n"); 
		query.append("                             UG_HC ," ).append("\n"); 
		query.append("                             UG_45 ," ).append("\n"); 
		query.append("                             UG_53 ," ).append("\n"); 
		query.append("                             UG_RF ," ).append("\n"); 
		query.append("                             UG_WGT," ).append("\n"); 
		query.append("                             MR_TEU," ).append("\n"); 
		query.append("                             MR_20 ," ).append("\n"); 
		query.append("                             MR_40 ," ).append("\n"); 
		query.append("                             MR_HC ," ).append("\n"); 
		query.append("                             MR_45 ," ).append("\n"); 
		query.append("                             MR_53 ," ).append("\n"); 
		query.append("                             MR_RF ," ).append("\n"); 
		query.append("                             MR_WGT," ).append("\n"); 
		query.append("                             AP_TEU," ).append("\n"); 
		query.append("                             AP_20 ," ).append("\n"); 
		query.append("                             AP_40 ," ).append("\n"); 
		query.append("                             AP_HC ," ).append("\n"); 
		query.append("                             AP_45 ," ).append("\n"); 
		query.append("                             AP_53 ," ).append("\n"); 
		query.append("                             AP_RF ," ).append("\n"); 
		query.append("                             AP_WGT," ).append("\n"); 
		query.append("                             SUM(BK_TEU) AS BK_TEU," ).append("\n"); 
		query.append("                             SUM(BK_20)  AS BK_20 ," ).append("\n"); 
		query.append("                             SUM(BK_40)  AS BK_40 ," ).append("\n"); 
		query.append("                             SUM(BK_HC)  AS BK_HC ," ).append("\n"); 
		query.append("                             SUM(BK_45)  AS BK_45 ," ).append("\n"); 
		query.append("                             SUM(BK_53)  AS BK_53 ," ).append("\n"); 
		query.append("                             SUM(BK_RF)  AS BK_RF ," ).append("\n"); 
		query.append("                             SUM(BK_WGT) AS BK_WGT," ).append("\n"); 
		query.append("                             SUM(BT_TEU) AS BT_TEU," ).append("\n"); 
		query.append("                             SUM(BT_20)  AS BT_20 ," ).append("\n"); 
		query.append("                             SUM(BT_40)  AS BT_40 ," ).append("\n"); 
		query.append("                             SUM(BT_HC)  AS BT_HC ," ).append("\n"); 
		query.append("                             SUM(BT_45)  AS BT_45 ," ).append("\n"); 
		query.append("                             SUM(BT_53)  AS BT_53 ," ).append("\n"); 
		query.append("                             SUM(BT_RF)  AS BT_RF ," ).append("\n"); 
		query.append("                             SUM(BT_WGT) AS BT_WGT," ).append("\n"); 
		query.append("                             GT_TEU ," ).append("\n"); 
		query.append("                             GT_20  ," ).append("\n"); 
		query.append("                             GT_40  ," ).append("\n"); 
		query.append("                             GT_HC  ," ).append("\n"); 
		query.append("                             GT_45  ," ).append("\n"); 
		query.append("                             GT_53  ," ).append("\n"); 
		query.append("                             GT_RF  ," ).append("\n"); 
		query.append("                             GT_WGT ," ).append("\n"); 
		query.append("                             PAST   ," ).append("\n"); 
		query.append("                             CFM_FLG," ).append("\n"); 
		query.append("                             SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                             SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                             SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                        FROM (" ).append("\n"); 
		query.append("                                SELECT /*+ OPT_PARAM('_COMPLEX_VIEW_MERGING', 'FALSE') */" ).append("\n"); 
		query.append("                                       104 AS FLG," ).append("\n"); 
		query.append("                                       D.TRD_CD    ," ).append("\n"); 
		query.append("                                       D.SUB_TRD_CD," ).append("\n"); 
		query.append("                                       B.RHQ_CD     AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                                       D.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                                       DECODE(D.VSL_PRE_PST_CD, 'T', DECODE(D.BKG_CGO_TP_CD, 'P', 'EQ', DECODE(D.IOC_CD, 'O', 'OCN', 'I', 'IPC', '')), 'T/S') AS IOC_CD," ).append("\n"); 
		query.append("                                       D.SLS_RGN_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("                                       B.POL_CD ," ).append("\n"); 
		query.append("                                       B.POD_CD ," ).append("\n"); 
		query.append("                                       B.POL_SEQ," ).append("\n"); 
		query.append("                                       B.POD_SEQ," ).append("\n"); 
		query.append("                                       0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                                       0 AS CMB1     ," ).append("\n"); 
		query.append("                                       0 AS CMB2     ," ).append("\n"); 
		query.append("                                       DECODE(B.PAST, 'N', 0, D.BKG_TTL_QTY)     AS FC_TEU," ).append("\n"); 
		query.append("                                       DECODE(B.PAST, 'N', 0, D.BKG_20FT_QTY)    AS FC_20 ," ).append("\n"); 
		query.append("                                       DECODE(B.PAST, 'N', 0, D.BKG_40FT_QTY)    AS FC_40 ," ).append("\n"); 
		query.append("                                       DECODE(B.PAST, 'N', 0, D.BKG_40FT_HC_QTY) AS FC_HC ," ).append("\n"); 
		query.append("                                       DECODE(B.PAST, 'N', 0, D.BKG_45FT_HC_QTY) AS FC_45 ," ).append("\n"); 
		query.append("                                       DECODE(B.PAST, 'N', 0, D.BKG_53FT_QTY)    AS FC_53 ," ).append("\n"); 
		query.append("                                       DECODE(B.PAST, 'N', 0, D.BKG_RF_QTY)      AS FC_RF ," ).append("\n"); 
		query.append("                                       DECODE(B.PAST, 'N', 0, D.BKG_TTL_WGT)     AS FC_WGT," ).append("\n"); 
		query.append("                                       0 AS UG_TEU," ).append("\n"); 
		query.append("                                       0 AS UG_20 ," ).append("\n"); 
		query.append("                                       0 AS UG_40 ," ).append("\n"); 
		query.append("                                       0 AS UG_HC ," ).append("\n"); 
		query.append("                                       0 AS UG_45 ," ).append("\n"); 
		query.append("                                       0 AS UG_53 ," ).append("\n"); 
		query.append("                                       0 AS UG_RF ," ).append("\n"); 
		query.append("                                       0 AS UG_WGT," ).append("\n"); 
		query.append("                                       0 AS MR_TEU," ).append("\n"); 
		query.append("                                       0 AS MR_20 ," ).append("\n"); 
		query.append("                                       0 AS MR_40 ," ).append("\n"); 
		query.append("                                       0 AS MR_HC ," ).append("\n"); 
		query.append("                                       0 AS MR_45 ," ).append("\n"); 
		query.append("                                       0 AS MR_53 ," ).append("\n"); 
		query.append("                                       0 AS MR_RF ," ).append("\n"); 
		query.append("                                       0 AS MR_WGT," ).append("\n"); 
		query.append("                                       0 AS AP_TEU," ).append("\n"); 
		query.append("                                       0 AS AP_20 ," ).append("\n"); 
		query.append("                                       0 AS AP_40 ," ).append("\n"); 
		query.append("                                       0 AS AP_HC ," ).append("\n"); 
		query.append("                                       0 AS AP_45 ," ).append("\n"); 
		query.append("                                       0 AS AP_53 ," ).append("\n"); 
		query.append("                                       0 AS AP_RF ," ).append("\n"); 
		query.append("                                       0 AS AP_WGT," ).append("\n"); 
		query.append("                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_TTL_QTY)     AS BK_TEU," ).append("\n"); 
		query.append("                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_20FT_QTY)    AS BK_20 ," ).append("\n"); 
		query.append("                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_40FT_QTY)    AS BK_40 ," ).append("\n"); 
		query.append("                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_40FT_HC_QTY) AS BK_HC ," ).append("\n"); 
		query.append("                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_45FT_HC_QTY) AS BK_45 ," ).append("\n"); 
		query.append("                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_53FT_QTY)    AS BK_53 ," ).append("\n"); 
		query.append("                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_RF_QTY)      AS BK_RF ," ).append("\n"); 
		query.append("                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_TTL_WGT)     AS BK_WGT," ).append("\n"); 
		query.append("                                       D.BKG_TTL_QTY     AS BT_TEU," ).append("\n"); 
		query.append("                                       D.BKG_20FT_QTY    AS BT_20 ," ).append("\n"); 
		query.append("                                       D.BKG_40FT_QTY    AS BT_40 ," ).append("\n"); 
		query.append("                                       D.BKG_40FT_HC_QTY AS BT_HC ," ).append("\n"); 
		query.append("                                       D.BKG_45FT_HC_QTY AS BT_45 ," ).append("\n"); 
		query.append("                                       D.BKG_53FT_QTY    AS BT_53 ," ).append("\n"); 
		query.append("                                       D.BKG_RF_QTY      AS BT_RF ," ).append("\n"); 
		query.append("                                       D.BKG_TTL_WGT     AS BT_WGT," ).append("\n"); 
		query.append("                                       0 AS GT_TEU," ).append("\n"); 
		query.append("                                       0 AS GT_20 ," ).append("\n"); 
		query.append("                                       0 AS GT_40 ," ).append("\n"); 
		query.append("                                       0 AS GT_HC ," ).append("\n"); 
		query.append("                                       0 AS GT_45 ," ).append("\n"); 
		query.append("                                       0 AS GT_53 ," ).append("\n"); 
		query.append("                                       0 AS GT_RF ," ).append("\n"); 
		query.append("                                       0 AS GT_WGT," ).append("\n"); 
		query.append("                                       B.PAST," ).append("\n"); 
		query.append("                                       NULL AS CFM_FLG," ).append("\n"); 
		query.append("                                       NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                                       NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                                       NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                                  FROM SPC_BKG_V    D," ).append("\n"); 
		query.append("                                       VSL_PORT_SKD B" ).append("\n"); 
		query.append("                                 WHERE D.RLANE_CD         = B.RLANE_CD" ).append("\n"); 
		query.append("                                   AND D.DIR_CD           = B.DIR_CD" ).append("\n"); 
		query.append("                                   AND D.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                                   AND D.SKD_VOY_NO       = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                   AND D.SKD_DIR_CD       = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                   AND D.POL_CD           = SUBSTR(B.POL_CD, 1, 5)" ).append("\n"); 
		query.append("                                   AND D.POD_CD           = SUBSTR(B.POD_CD, 1, 5)" ).append("\n"); 
		query.append("                                   AND (D.VSL_PRE_PST_CD  = 'T' OR B.POL_CONTI <> 'A')" ).append("\n"); 
		query.append("                                   AND D.BKG_CGO_TP_CD   IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("                                   AND D.BKG_STS_CD      IN ('F', 'W')" ).append("\n"); 
		query.append("                                   AND D.RLANE_CD        <> 'RBCCO'" ).append("\n"); 
		query.append("                                   AND ((D.VSL_PRE_PST_CD = 'T' AND (D.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI)) OR (D.VSL_PRE_PST_CD <> 'T' AND ((D.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI))))" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("                    GROUP BY FLG        ," ).append("\n"); 
		query.append("                             TRD_CD     ," ).append("\n"); 
		query.append("                             SUB_TRD_CD ," ).append("\n"); 
		query.append("                             BASE_RHQ_CD," ).append("\n"); 
		query.append("                             RHQ_CD     ," ).append("\n"); 
		query.append("                             IOC_CD     ," ).append("\n"); 
		query.append("                             OFC_CD     ," ).append("\n"); 
		query.append("                             POL_CD     ," ).append("\n"); 
		query.append("                             POD_CD     ," ).append("\n"); 
		query.append("                             POL_SEQ    ," ).append("\n"); 
		query.append("                             POD_SEQ    ," ).append("\n"); 
		query.append("                             BKG_QUOTA  ," ).append("\n"); 
		query.append("                             CMB1       ," ).append("\n"); 
		query.append("                             CMB2       ," ).append("\n"); 
		query.append("                             UG_TEU     ," ).append("\n"); 
		query.append("                             UG_20      ," ).append("\n"); 
		query.append("                             UG_40      ," ).append("\n"); 
		query.append("                             UG_HC      ," ).append("\n"); 
		query.append("                             UG_45      ," ).append("\n"); 
		query.append("                             UG_53      ," ).append("\n"); 
		query.append("                             UG_RF      ," ).append("\n"); 
		query.append("                             UG_WGT     ," ).append("\n"); 
		query.append("                             MR_TEU     ," ).append("\n"); 
		query.append("                             MR_20      ," ).append("\n"); 
		query.append("                             MR_40      ," ).append("\n"); 
		query.append("                             MR_HC      ," ).append("\n"); 
		query.append("                             MR_45      ," ).append("\n"); 
		query.append("                             MR_53      ," ).append("\n"); 
		query.append("                             MR_RF      ," ).append("\n"); 
		query.append("                             MR_WGT     ," ).append("\n"); 
		query.append("                             AP_TEU     ," ).append("\n"); 
		query.append("                             AP_20      ," ).append("\n"); 
		query.append("                             AP_40      ," ).append("\n"); 
		query.append("                             AP_HC      ," ).append("\n"); 
		query.append("                             AP_45      ," ).append("\n"); 
		query.append("                             AP_53      ," ).append("\n"); 
		query.append("                             AP_RF      ," ).append("\n"); 
		query.append("                             AP_WGT     ," ).append("\n"); 
		query.append("                             GT_TEU     ," ).append("\n"); 
		query.append("                             GT_20      ," ).append("\n"); 
		query.append("                             GT_40      ," ).append("\n"); 
		query.append("                             GT_HC      ," ).append("\n"); 
		query.append("                             GT_45      ," ).append("\n"); 
		query.append("                             GT_53      ," ).append("\n"); 
		query.append("                             GT_RF      ," ).append("\n"); 
		query.append("                             GT_WGT     ," ).append("\n"); 
		query.append("                             PAST       ," ).append("\n"); 
		query.append("                             CFM_FLG    ," ).append("\n"); 
		query.append("                             SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                             SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                             SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- Booking Quota" ).append("\n"); 
		query.append("                      SELECT 106 AS FLG," ).append("\n"); 
		query.append("                             MQ.TRD_CD," ).append("\n"); 
		query.append("                             ''        AS SUB_TRD_CD ," ).append("\n"); 
		query.append("                             M.RHQ_CD  AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                             MQ.RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                             DECODE(SUBSTR(MQ.TRD_CD, 1, 1), 'I', 'IPC', 'OCN') AS IOC_CD," ).append("\n"); 
		query.append("                             NVL(O.CONV_RGN_OFC_CD, MQ.RGN_OFC_CD) AS OFC_CD," ).append("\n"); 
		query.append("                             MQ.POL_CD  ," ).append("\n"); 
		query.append("                             MQ.POD_CD  ," ).append("\n"); 
		query.append("                             VPS.POL_SEQ," ).append("\n"); 
		query.append("                             VPS.POD_SEQ," ).append("\n"); 
		query.append("                             ROUND(SUM(MQ.LOD_QTY)) AS BKG_QUOTA," ).append("\n"); 
		query.append("                             0 AS CMB1  ," ).append("\n"); 
		query.append("                             0 AS CMB2  ," ).append("\n"); 
		query.append("                             0 AS FC_TEU," ).append("\n"); 
		query.append("                             0 AS FC_20 ," ).append("\n"); 
		query.append("                             0 AS FC_40 ," ).append("\n"); 
		query.append("                             0 AS FC_HC ," ).append("\n"); 
		query.append("                             0 AS FC_45 ," ).append("\n"); 
		query.append("                             0 AS FC_53 ," ).append("\n"); 
		query.append("                             0 AS FC_RF ," ).append("\n"); 
		query.append("                             0 AS FC_WGT," ).append("\n"); 
		query.append("                             0 AS UG_TEU," ).append("\n"); 
		query.append("                             0 AS UG_20 ," ).append("\n"); 
		query.append("                             0 AS UG_40 ," ).append("\n"); 
		query.append("                             0 AS UG_HC ," ).append("\n"); 
		query.append("                             0 AS UG_45 ," ).append("\n"); 
		query.append("                             0 AS UG_53 ," ).append("\n"); 
		query.append("                             0 AS UG_RF ," ).append("\n"); 
		query.append("                             0 AS UG_WGT," ).append("\n"); 
		query.append("                             0 AS MR_TEU," ).append("\n"); 
		query.append("                             0 AS MR_20 ," ).append("\n"); 
		query.append("                             0 AS MR_40 ," ).append("\n"); 
		query.append("                             0 AS MR_HC ," ).append("\n"); 
		query.append("                             0 AS MR_45 ," ).append("\n"); 
		query.append("                             0 AS MR_53 ," ).append("\n"); 
		query.append("                             0 AS MR_RF ," ).append("\n"); 
		query.append("                             0 AS MR_WGT," ).append("\n"); 
		query.append("                             0 AS AP_TEU," ).append("\n"); 
		query.append("                             0 AS AP_20 ," ).append("\n"); 
		query.append("                             0 AS AP_40 ," ).append("\n"); 
		query.append("                             0 AS AP_HC ," ).append("\n"); 
		query.append("                             0 AS AP_45 ," ).append("\n"); 
		query.append("                             0 AS AP_53 ," ).append("\n"); 
		query.append("                             0 AS AP_RF ," ).append("\n"); 
		query.append("                             0 AS AP_WGT," ).append("\n"); 
		query.append("                             0 AS BK_TEU," ).append("\n"); 
		query.append("                             0 AS BK_20 ," ).append("\n"); 
		query.append("                             0 AS BK_40 ," ).append("\n"); 
		query.append("                             0 AS BK_HC ," ).append("\n"); 
		query.append("                             0 AS BK_45 ," ).append("\n"); 
		query.append("                             0 AS BK_53 ," ).append("\n"); 
		query.append("                             0 AS BK_RF ," ).append("\n"); 
		query.append("                             0 AS BK_WGT," ).append("\n"); 
		query.append("                             0 AS BT_TEU," ).append("\n"); 
		query.append("                             0 AS BT_20 ," ).append("\n"); 
		query.append("                             0 AS BT_40 ," ).append("\n"); 
		query.append("                             0 AS BT_HC ," ).append("\n"); 
		query.append("                             0 AS BT_45 ," ).append("\n"); 
		query.append("                             0 AS BT_53 ," ).append("\n"); 
		query.append("                             0 AS BT_RF ," ).append("\n"); 
		query.append("                             0 AS BT_WGT," ).append("\n"); 
		query.append("                             0 AS GT_TEU," ).append("\n"); 
		query.append("                             0 AS GT_20 ," ).append("\n"); 
		query.append("                             0 AS GT_40 ," ).append("\n"); 
		query.append("                             0 AS GT_HC ," ).append("\n"); 
		query.append("                             0 AS GT_45 ," ).append("\n"); 
		query.append("                             0 AS GT_53 ," ).append("\n"); 
		query.append("                             0 AS GT_RF ," ).append("\n"); 
		query.append("                             0 AS GT_WGT," ).append("\n"); 
		query.append("                             NVL(VPS.PAST, 'N') AS PAST," ).append("\n"); 
		query.append("                             NULL AS CFM_FLG," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                        FROM BASE             M  ," ).append("\n"); 
		query.append("                             VSL_PORT_SKD     VPS," ).append("\n"); 
		query.append("                             SAQ_MON_CFM_QTA  MQ ," ).append("\n"); 
		query.append("                             SAQ_MON_QTA_RLSE MQR," ).append("\n"); 
		query.append("                             SPC_RGN_OFC_CONV O" ).append("\n"); 
		query.append("                       WHERE MQR.BSE_YR          = M.YEAR" ).append("\n"); 
		query.append("                         AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(M.MON) / 3)||'Q'" ).append("\n"); 
		query.append("                         AND MQR.QTA_RLSE_STS_CD = 'R'" ).append("\n"); 
		query.append("                         AND MQ.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                         AND MQ.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                         AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                         AND MQ.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                         AND MQ.RLANE_CD         = M.RLANE_CD" ).append("\n"); 
		query.append("                         AND MQ.DIR_CD           = M.DIR_CD" ).append("\n"); 
		query.append("                         AND MQ.VSL_CD           = M.VSL_CD" ).append("\n"); 
		query.append("                         AND MQ.SKD_VOY_NO       = M.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND MQ.SKD_DIR_CD       = M.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND MQ.RHQ_CD           = M.RHQ_CD" ).append("\n"); 
		query.append("                         AND MQ.RGN_OFC_CD       = O.SLS_RGN_OFC_CD(+)" ).append("\n"); 
		query.append("                         AND VPS.RLANE_CD        = MQ.RLANE_CD" ).append("\n"); 
		query.append("                         AND VPS.DIR_CD          = MQ.DIR_CD" ).append("\n"); 
		query.append("                         AND VPS.VSL_CD          = MQ.VSL_CD" ).append("\n"); 
		query.append("                         AND VPS.SKD_VOY_NO      = MQ.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND VPS.SKD_DIR_CD      = MQ.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(VPS.POL_CD, 1, LENGTH(MQ.POL_CD)) = MQ.POL_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(VPS.POD_CD, 1, LENGTH(MQ.POD_CD)) = MQ.POD_CD" ).append("\n"); 
		query.append("                         AND MQ.LOD_QTY > 0" ).append("\n"); 
		query.append("                    GROUP BY MQ.TRD_CD," ).append("\n"); 
		query.append("                             M.RHQ_CD ," ).append("\n"); 
		query.append("                             MQ.RHQ_CD," ).append("\n"); 
		query.append("                             DECODE(SUBSTR(MQ.TRD_CD, 1, 1), 'I', 'IPC', 'OCN')," ).append("\n"); 
		query.append("                             NVL(O.CONV_RGN_OFC_CD, MQ.RGN_OFC_CD)," ).append("\n"); 
		query.append("                             MQ.POL_CD  ," ).append("\n"); 
		query.append("                             MQ.POD_CD  ," ).append("\n"); 
		query.append("                             VPS.POL_SEQ," ).append("\n"); 
		query.append("                             VPS.POD_SEQ," ).append("\n"); 
		query.append("                             NVL(VPS.PAST, 'N')" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- TS Forecast" ).append("\n"); 
		query.append("                      SELECT 201 AS FLG," ).append("\n"); 
		query.append("                             T.TRD_CD    ," ).append("\n"); 
		query.append("                             T.SUB_TRD_CD," ).append("\n"); 
		query.append("                             B.RHQ_CD         AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                             T.SLS_RHQ_CD     AS RHQ_CD     ," ).append("\n"); 
		query.append("                             'T/S'            AS IOC_CD     ," ).append("\n"); 
		query.append("                             T.SLS_RGN_OFC_CD AS OFC_CD     ," ).append("\n"); 
		query.append("                             B.POL_CD ," ).append("\n"); 
		query.append("                             B.POD_CD ," ).append("\n"); 
		query.append("                             B.POL_SEQ," ).append("\n"); 
		query.append("                             B.POD_SEQ," ).append("\n"); 
		query.append("                             0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                             0 AS CMB1     ," ).append("\n"); 
		query.append("                             0 AS CMB2     ," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_TTL_QTY)) AS FC_TEU," ).append("\n"); 
		query.append("                             0 AS FC_20," ).append("\n"); 
		query.append("                             0 AS FC_40," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_40FT_HC_QTY)) AS FC_HC ," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_45FT_HC_QTY)) AS FC_45 ," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_53FT_QTY))    AS FC_53 ," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_RF_QTY))      AS FC_RF ," ).append("\n"); 
		query.append("                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_TTL_WGT))     AS FC_WGT," ).append("\n"); 
		query.append("                             0 AS UG_TEU," ).append("\n"); 
		query.append("                             0 AS UG_20 ," ).append("\n"); 
		query.append("                             0 AS UG_40 ," ).append("\n"); 
		query.append("                             0 AS UG_HC ," ).append("\n"); 
		query.append("                             0 AS UG_45 ," ).append("\n"); 
		query.append("                             0 AS UG_53 ," ).append("\n"); 
		query.append("                             0 AS UG_RF ," ).append("\n"); 
		query.append("                             0 AS UG_WGT," ).append("\n"); 
		query.append("                             0 AS MR_TEU," ).append("\n"); 
		query.append("                             0 AS MR_20 ," ).append("\n"); 
		query.append("                             0 AS MR_40 ," ).append("\n"); 
		query.append("                             0 AS MR_HC ," ).append("\n"); 
		query.append("                             0 AS MR_45 ," ).append("\n"); 
		query.append("                             0 AS MR_53 ," ).append("\n"); 
		query.append("                             0 AS MR_RF ," ).append("\n"); 
		query.append("                             0 AS MR_WGT," ).append("\n"); 
		query.append("                             0 AS AP_TEU," ).append("\n"); 
		query.append("                             0 AS AP_20 ," ).append("\n"); 
		query.append("                             0 AS AP_40 ," ).append("\n"); 
		query.append("                             0 AS AP_HC ," ).append("\n"); 
		query.append("                             0 AS AP_45 ," ).append("\n"); 
		query.append("                             0 AS AP_53 ," ).append("\n"); 
		query.append("                             0 AS AP_RF ," ).append("\n"); 
		query.append("                             0 AS AP_WGT," ).append("\n"); 
		query.append("                             0 AS BK_TEU," ).append("\n"); 
		query.append("                             0 AS BK_20 ," ).append("\n"); 
		query.append("                             0 AS BK_40 ," ).append("\n"); 
		query.append("                             0 AS BK_HC ," ).append("\n"); 
		query.append("                             0 AS BK_45 ," ).append("\n"); 
		query.append("                             0 AS BK_53 ," ).append("\n"); 
		query.append("                             0 AS BK_RF ," ).append("\n"); 
		query.append("                             0 AS BK_WGT," ).append("\n"); 
		query.append("                             0 AS BT_TEU," ).append("\n"); 
		query.append("                             0 AS BT_20 ," ).append("\n"); 
		query.append("                             0 AS BT_40 ," ).append("\n"); 
		query.append("                             0 AS BT_HC ," ).append("\n"); 
		query.append("                             0 AS BT_45 ," ).append("\n"); 
		query.append("                             0 AS BT_53 ," ).append("\n"); 
		query.append("                             0 AS BT_RF ," ).append("\n"); 
		query.append("                             0 AS BT_WGT," ).append("\n"); 
		query.append("                             0 AS GT_TEU," ).append("\n"); 
		query.append("                             0 AS GT_20 ," ).append("\n"); 
		query.append("                             0 AS GT_40 ," ).append("\n"); 
		query.append("                             0 AS GT_HC ," ).append("\n"); 
		query.append("                             0 AS GT_45 ," ).append("\n"); 
		query.append("                             0 AS GT_53 ," ).append("\n"); 
		query.append("                             0 AS GT_RF ," ).append("\n"); 
		query.append("                             0 AS GT_WGT," ).append("\n"); 
		query.append("                             PAST," ).append("\n"); 
		query.append("                             NULL AS CFM_FLG," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                        FROM SPC_DLY_FCAST_CUST T," ).append("\n"); 
		query.append("                             VSL_PORT_SKD       B" ).append("\n"); 
		query.append("                       WHERE T.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("                         AND T.DIR_CD     = B.DIR_CD" ).append("\n"); 
		query.append("                         AND T.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                         AND T.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND T.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(T.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(T.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD" ).append("\n"); 
		query.append("                         AND B.POL_CONTI <> 'A'" ).append("\n"); 
		query.append("                         AND NVL(T.CFM_TTL_QTY,0) + NVL(T.CFM_TTL_WGT,0) > 0" ).append("\n"); 
		query.append("                         AND ((T.SLS_RHQ_CD = B.RHQ_CD  OR B.OFC_CONTI = B.POL_CONTI))" ).append("\n"); 
		query.append("                         AND T.IOC_TS_CD = 'T'" ).append("\n"); 
		query.append("                    GROUP BY T.TRD_CD        ," ).append("\n"); 
		query.append("                             T.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                             B.RHQ_CD        ," ).append("\n"); 
		query.append("                             T.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                             T.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                             B.POL_CD        ," ).append("\n"); 
		query.append("                             B.POD_CD        ," ).append("\n"); 
		query.append("                             B.POL_SEQ       ," ).append("\n"); 
		query.append("                             B.POD_SEQ       ," ).append("\n"); 
		query.append("                             T.IOC_TS_CD     ," ).append("\n"); 
		query.append("                             B.PAST" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- TS Allocation" ).append("\n"); 
		query.append("                      SELECT 203 AS FLG," ).append("\n"); 
		query.append("                             D.TRD_CD    ," ).append("\n"); 
		query.append("                             D.SUB_TRD_CD," ).append("\n"); 
		query.append("                             B.RHQ_CD     AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                             D.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                             DECODE(D.MNL_FLG, 'Y', 'T-', '')||'T/S' AS IOC_CD," ).append("\n"); 
		query.append("                             D.SLS_RGN_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("                             D.POL_YD_CD," ).append("\n"); 
		query.append("                             D.POD_YD_CD," ).append("\n"); 
		query.append("                             B.POL_SEQ  ," ).append("\n"); 
		query.append("                             B.POD_SEQ  ," ).append("\n"); 
		query.append("                             0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                             0 AS CMB1     ," ).append("\n"); 
		query.append("                             0 AS CMB2     ," ).append("\n"); 
		query.append("                             0 AS FC_TEU   ," ).append("\n"); 
		query.append("                             0 AS FC_20    ," ).append("\n"); 
		query.append("                             0 AS FC_40    ," ).append("\n"); 
		query.append("                             0 AS FC_HC    ," ).append("\n"); 
		query.append("                             0 AS FC_45    ," ).append("\n"); 
		query.append("                             0 AS FC_53    ," ).append("\n"); 
		query.append("                             0 AS FC_RF    ," ).append("\n"); 
		query.append("                             0 AS FC_WGT   ," ).append("\n"); 
		query.append("                             0 AS UG_TEU   ," ).append("\n"); 
		query.append("                             0 AS UG_20    ," ).append("\n"); 
		query.append("                             0 AS UG_40    ," ).append("\n"); 
		query.append("                             0 AS UG_HC    ," ).append("\n"); 
		query.append("                             0 AS UG_45    ," ).append("\n"); 
		query.append("                             0 AS UG_53    ," ).append("\n"); 
		query.append("                             0 AS UG_RF    ," ).append("\n"); 
		query.append("                             0 AS UG_WGT   ," ).append("\n"); 
		query.append("                             0 AS MR_TEU   ," ).append("\n"); 
		query.append("                             0 AS MR_20    ," ).append("\n"); 
		query.append("                             0 AS MR_40    ," ).append("\n"); 
		query.append("                             0 AS MR_HC    ," ).append("\n"); 
		query.append("                             0 AS MR_45    ," ).append("\n"); 
		query.append("                             0 AS MR_53    ," ).append("\n"); 
		query.append("                             0 AS MR_RF    ," ).append("\n"); 
		query.append("                             0 AS MR_WGT   ," ).append("\n"); 
		query.append("                             D.ASGN_TTL_QTY     AS AP_TEU," ).append("\n"); 
		query.append("                             D.ASGN_20FT_QTY    AS AP_20 ," ).append("\n"); 
		query.append("                             D.ASGN_40FT_QTY    AS AP_40 ," ).append("\n"); 
		query.append("                             D.ASGN_40FT_HC_QTY AS AP_HC ," ).append("\n"); 
		query.append("                             D.ASGN_45FT_HC_QTY AS AP_45 ," ).append("\n"); 
		query.append("                             D.ASGN_53FT_QTY    AS AP_53 ," ).append("\n"); 
		query.append("                             D.ASGN_RF_QTY      AS AP_RF ," ).append("\n"); 
		query.append("                             D.ASGN_TTL_WGT     AS AP_WGT," ).append("\n"); 
		query.append("                             0 AS BK_TEU," ).append("\n"); 
		query.append("                             0 AS BK_20 ," ).append("\n"); 
		query.append("                             0 AS BK_40 ," ).append("\n"); 
		query.append("                             0 AS BK_HC ," ).append("\n"); 
		query.append("                             0 AS BK_45 ," ).append("\n"); 
		query.append("                             0 AS BK_53 ," ).append("\n"); 
		query.append("                             0 AS BK_RF ," ).append("\n"); 
		query.append("                             0 AS BK_WGT," ).append("\n"); 
		query.append("                             0 AS BT_TEU," ).append("\n"); 
		query.append("                             0 AS BT_20 ," ).append("\n"); 
		query.append("                             0 AS BT_40 ," ).append("\n"); 
		query.append("                             0 AS BT_HC ," ).append("\n"); 
		query.append("                             0 AS BT_45 ," ).append("\n"); 
		query.append("                             0 AS BT_53 ," ).append("\n"); 
		query.append("                             0 AS BT_RF ," ).append("\n"); 
		query.append("                             0 AS BT_WGT," ).append("\n"); 
		query.append("                             0 AS GT_TEU," ).append("\n"); 
		query.append("                             0 AS GT_20 ," ).append("\n"); 
		query.append("                             0 AS GT_40 ," ).append("\n"); 
		query.append("                             0 AS GT_HC ," ).append("\n"); 
		query.append("                             0 AS GT_45 ," ).append("\n"); 
		query.append("                             0 AS GT_53 ," ).append("\n"); 
		query.append("                             0 AS GT_RF ," ).append("\n"); 
		query.append("                             0 AS GT_WGT," ).append("\n"); 
		query.append("                             PAST," ).append("\n"); 
		query.append("                             NULL AS CFM_FLG," ).append("\n"); 
		query.append("                             D.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                             D.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                             D.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                        FROM SPC_ALOC_POL_POD D," ).append("\n"); 
		query.append("                             VSL_PORT_SKD     B" ).append("\n"); 
		query.append("                       WHERE D.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("                         AND D.DIR_CD     = B.DIR_CD" ).append("\n"); 
		query.append("                         AND D.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                         AND D.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND D.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(D.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(D.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD" ).append("\n"); 
		query.append("                         AND B.POL_CONTI <> 'A'" ).append("\n"); 
		query.append("                         AND D.TS_FLG     = 'Y'" ).append("\n"); 
		query.append("                         AND D.SLS_OFC_CD = D.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("                         AND ((D.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI ))" ).append("\n"); 
		query.append("                   ) U" ).append("\n"); 
		query.append("          GROUP BY U.BASE_RHQ_CD," ).append("\n"); 
		query.append("                   U.RHQ_CD     ," ).append("\n"); 
		query.append("                   U.IOC_CD     ," ).append("\n"); 
		query.append("                   U.OFC_CD     ," ).append("\n"); 
		query.append("                   U.POL_CD     ," ).append("\n"); 
		query.append("                   U.POD_CD     ," ).append("\n"); 
		query.append("                   U.POL_SEQ    ," ).append("\n"); 
		query.append("                   U.POD_SEQ    ," ).append("\n"); 
		query.append("                   U.PAST" ).append("\n"); 
		query.append("            HAVING U.IOC_CD LIKE 'T-%'" ).append("\n"); 
		query.append("                OR U.POD_CD = '00000'" ).append("\n"); 
		query.append("                OR ROUND(SUM(BKG_QUOTA), 1) > 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(NVL(FC_TEU, 0) + NVL(FC_WGT, 0) + NVL(FC_HC, 0) + NVL(FC_45, 0) + NVL(FC_53, 0)), 1) > 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(UG_TEU + UG_WGT), 1) > 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(MR_TEU + MR_WGT), 1) > 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(AP_TEU + AP_WGT), 1) > 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(BK_TEU + BK_WGT), 1) > 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(BT_TEU + BT_WGT), 1) > 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(GT_TEU + GT_WGT), 1) > 0" ).append("\n"); 
		query.append("         ) Z" ).append("\n"); 
		query.append("GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                         (BASE_RHQ_CD, RHQ_CD, IOC_CD, OFC_CD, POL_CD, POL_SEQ, POD_CD, POD_SEQ)," ).append("\n"); 
		query.append("                         (BASE_RHQ_CD, RHQ_CD, IOC_CD, OFC_CD, POL_CD, POL_SEQ)," ).append("\n"); 
		query.append("                         (BASE_RHQ_CD, RHQ_CD, IOC_CD, OFC_CD)," ).append("\n"); 
		query.append("                         (BASE_RHQ_CD, IOC_CD)" ).append("\n"); 
		query.append("                       )" ).append("\n"); 
		query.append("  HAVING (POL_CD IS NULL OR POL_CD <> '00000')" ).append("\n"); 
		query.append("     AND (POD_CD IS NULL OR POD_CD <> '00000')" ).append("\n"); 
		query.append("     AND (    IOC_CD LIKE 'T-%'" ).append("\n"); 
		query.append("           OR ROUND(SUM(BKG_QUOTA), 1) > 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(NVL(FC_TEU, 0) + NVL(FC_WGT, 0) + NVL(FC_HC, 0) + NVL(FC_45, 0) + NVL(FC_53, 0)), 1) > 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(UG_TEU + UG_WGT), 1) > 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(MR_TEU + MR_WGT), 1) > 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(AP_TEU + AP_WGT), 1) > 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(BK_TEU + BK_WGT), 1) > 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(BT_TEU + BT_WGT), 1) > 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(GT_TEU + GT_WGT), 1) > 0 )" ).append("\n"); 
		query.append("ORDER BY DECODE(IOC_CD, 'OCN', 1, 'IPC', 2, 'EQ', 3, 'T/S', 4, 'T-OCN', 5, 'T-IPC', 6, 'T-T/S', 7, 10)," ).append("\n"); 
		query.append("         DECODE(BASE_RHQ_CD, RHQ_CD, 0, 1)," ).append("\n"); 
		query.append("         RHQ_CD," ).append("\n"); 
		query.append("         DECODE(OFC_CD, '+', 'ZZZZZ', OFC_CD)," ).append("\n"); 
		query.append("         NVL(POL_SEQ, -1)," ).append("\n"); 
		query.append("         NVL(POD_SEQ, -1)" ).append("\n"); 

	}
}