<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpecialManifestDBDAOsearchDgInfoAtBkgDgRSQL">
			<desc><![CDATA[BKG의 위험물 테이블에서 데이타를 조회해온다.]]></desc>
			<sql><![CDATA[
SELECT DENSE_RANK() OVER (ORDER BY POL_CD, POD_CD, BL_NO, CGO_OPR_CD) AS SEQ
      ,COUNT(DISTINCT CNTR_NO) OVER() AS CNTR_CNT
      ,CGO_OPR_CD
      ,MERGE_BL_NO
      ,BL_NO 
      ,POL_CD
      ,POD_CD
      ,CNTR_NO
      ,CNTR_CGO_SEQ
      ,CNTR_TPSZ_CD
      ,CELL_PSN_NO
      ,IMDG_COMP_GRP_CD
      ,IMDG_UN_NO
      ,IMDG_UN_NO_SEQ
      ,IMDG_CLSS_CD
      ,FLSH_PNT_CDO_TEMP
      ,AGENT         --AGENT
      ,FWRD_ID       --FOWDER CODE
      ,C_TYPE        --CARRIAGE TYPE
      ,SVC_RQST_NO   --SSR(FEEDER)
      ,IMDG_PCK_GRP_CD
      ,IN_IMDG_PCK_QTY1
      ,IN_IMDG_PCK_CD1
      ,EUR_INR_PCK_DESC
      ,OUT_IMDG_PCK_QTY1
      ,OUT_IMDG_PCK_CD1
      ,EUR_OUTR_PCK_DESC
      ,EMS_NO
      ,NET_WGT
      ,GRS_WGT
      ,PRP_SHP_NM
      ,HZD_DESC
      ,MRN_POLUT_FLG AS EUR_DCGO_MRN_POLUT_CD
      ,IMDG_LMT_QTY_FLG
      ,NET_EXPLO_WGT
      ,CNTR_NO_OLD
      ,DCGO_REF_NO
      ,CNTR_REF_NO
      ,IMDG_SUBS_RSK_LBL_CD1
      ,IMDG_SUBS_RSK_LBL_CD2
      ,IMDG_SUBS_RSK_LBL_CD3
      ,IMDG_SUBS_RSK_LBL_CD4
      ,EMER_RSPN_GID_NO
      ,EMER_CNTC_PHN_NO
      ,EMER_CNTC_PSON_NM
      ,SPCL_CGO_SEQ
      ,SPCL_CNTR_SEQ
   FROM ((
-- Booking Data
                SELECT CASE WHEN HIS.CGO_OPR_CD IS NOT NULL THEN HIS.CGO_OPR_CD -- CGO_OPR_CD of the latest Transit port history
                    ELSE BVD.CGO_OPR_CD
                END AS CGO_OPR_CD
              ,CASE WHEN HIS.BL_NO IS NOT NULL THEN HIS.BL_NO -- BL_NO of the latest Transit port history
                    ELSE BVD.BL_NO
                END AS BL_NO
              ,CASE WHEN HIS.BL_NO IS NOT NULL THEN HIS.BL_NO -- MERGE_BL_NO of the latest Transit port history
                    ELSE BVD.BL_NO
                END AS MERGE_BL_NO
              ,CASE WHEN HIS.POL_CD IS NOT NULL THEN HIS.POL_CD -- POL_CD of the latest Transit port history
                    ELSE BVD.POL_CD
                END AS POL_CD
              ,CASE WHEN HIS.POD_CD IS NOT NULL THEN HIS.POD_CD -- POD_CD of the latest Transit port history
                    ELSE BVD.POD_CD
                END AS POD_CD
              ,CASE WHEN HIS.CNTR_NO IS NOT NULL THEN HIS.CNTR_NO -- CNTR_NO of the latest Transit port history
                    ELSE BVD.CNTR_NO
                END AS CNTR_NO
              ,CASE WHEN HIS.CNTR_CGO_SEQ IS NOT NULL THEN HIS.CNTR_CGO_SEQ -- CNTR_CGO_SEQ of the latest Transit port history
                    ELSE BVD.CNTR_CGO_SEQ
                END AS CNTR_CGO_SEQ
              ,CASE WHEN HIS.CNTR_TPSZ_CD IS NOT NULL THEN HIS.CNTR_TPSZ_CD -- CNTR_TPSZ_CD of the latest Transit port history
                    ELSE BVD.CNTR_TPSZ_CD
                END AS CNTR_TPSZ_CD
              ,CASE WHEN HIS.CELL_PSN_NO IS NOT NULL THEN HIS.CELL_PSN_NO -- CELL_PSN_NO of the latest Transit port history
                    ELSE DECODE(NVL(null, ''), '', BVD.CELL_PSN_NO, BAY.CELL_PSN_NO )
                END AS CELL_PSN_NO
              ,BVD.IMDG_COMP_GRP_CD
              ,CASE WHEN HIS.IMDG_UN_NO IS NOT NULL THEN HIS.IMDG_UN_NO -- IMDG_UN_NO of the latest Transit port history
                    ELSE BVD.IMDG_UN_NO
               END AS IMDG_UN_NO
              ,CASE WHEN HIS.IMDG_UN_NO_SEQ IS NOT NULL THEN HIS.IMDG_UN_NO_SEQ -- IMDG_UN_NO_SEQ of the latest Transit port history
                    ELSE BVD.IMDG_UN_NO_SEQ
               END AS IMDG_UN_NO_SEQ
              ,CASE WHEN HIS.IMDG_CLSS_CD IS NOT NULL THEN HIS.IMDG_CLSS_CD -- IMDG_CLSS_CD of the latest Transit port history
                    ELSE BVD.IMDG_CLSS_CD
                END AS IMDG_CLSS_CD
              ,CASE WHEN HIS.FLSH_PNT_CDO_TEMP IS NOT NULL THEN HIS.FLSH_PNT_CDO_TEMP -- FLSH_PNT_CDO_TEMP of the latest Transit port history
               ELSE BVD.FLSH_PNT_CDO_TEMP
               END AS FLSH_PNT_CDO_TEMP
              ,'' AS AGENT         --AGENT
              ,'' AS FWRD_ID       --FOWDER CODE
              ,'' AS C_TYPE        --CARRIAGE TYPE
              ,'' AS SVC_RQST_NO   --SSR(FEEDER)
              ,CASE WHEN HIS.IMDG_PCK_GRP_CD IS NOT NULL THEN HIS.IMDG_PCK_GRP_CD -- IMDG_PCK_GRP_CD of the latest Transit port history
               ELSE NVL(BVD.IMDG_PCK_GRP_CD,'N')
               END AS IMDG_PCK_GRP_CD
              ,CASE WHEN HIS.IN_IMDG_PCK_QTY1 IS NOT NULL THEN HIS.IN_IMDG_PCK_QTY1 -- IN_IMDG_PCK_QTY1 of the latest Transit port history
               ELSE BVD.IN_IMDG_PCK_QTY1
               END AS IN_IMDG_PCK_QTY1
               ,CASE WHEN HIS.IN_IMDG_PCK_CD1 IS NOT NULL THEN HIS.IN_IMDG_PCK_CD1 -- IN_IMDG_PCK_CD1 of the latest Transit port history
               ELSE BVD.IN_IMDG_PCK_CD1
               END AS IN_IMDG_PCK_CD1
              ,CASE WHEN HIS.EUR_INR_PCK_DESC IS NOT NULL THEN HIS.EUR_INR_PCK_DESC -- EUR_INR_PCK_DESC of the latest Transit port history
               ELSE BVD.IN_N1ST_IMDG_PCK_DESC
               END AS EUR_INR_PCK_DESC
              ,CASE WHEN HIS.OUT_IMDG_PCK_QTY1 IS NOT NULL THEN HIS.OUT_IMDG_PCK_QTY1 -- OUT_IMDG_PCK_QTY1 of the latest Transit port history
               ELSE BVD.OUT_IMDG_PCK_QTY1
               END AS OUT_IMDG_PCK_QTY1
              ,CASE WHEN HIS.OUT_IMDG_PCK_CD1 IS NOT NULL THEN HIS.OUT_IMDG_PCK_CD1 -- OUT_IMDG_PCK_QTY1 of the latest Transit port history
               ELSE BVD.OUT_IMDG_PCK_CD1
               END AS OUT_IMDG_PCK_CD1
              ,CASE WHEN BVD.CGO_OPR_CD = 'NYK' THEN NVL2(HIS.OUT_IMDG_PCK_QTY1, HIS.OUT_IMDG_PCK_QTY1 || ' ', BVD.OUT_IMDG_PCK_QTY1 || ' ')
               || (SELECT IMDG_PCK_DESC 
                     FROM SCG_IMDG_PCK_CD
                    WHERE IMDG_PCK_CD = NVL(HIS.OUT_IMDG_PCK_CD1,BVD.OUT_IMDG_PCK_CD1)
                  )
               ELSE 
               NVL2(BVD.OUT_N1ST_IMDG_PCK_DESC, BVD.OUT_IMDG_PCK_QTY1||' '||BVD.OUT_N1ST_IMDG_PCK_DESC ,'')
               END AS EUR_OUTR_PCK_DESC
              ,CASE WHEN HIS.EMS_NO IS NOT NULL THEN HIS.EMS_NO -- EMS_NO of the latest Transit port history
               ELSE BVD.EMS_NO
               END AS EMS_NO
              ,CASE WHEN HIS.NET_WGT IS NOT NULL THEN HIS.NET_WGT -- NET_WGT of the latest Transit port history
               ELSE BVD.NET_WGT
               END AS NET_WGT
              ,CASE WHEN HIS.GRS_WGT IS NOT NULL THEN HIS.GRS_WGT -- GRS_WGT of the latest Transit port history
               ELSE BVD.GRS_WGT
               END AS GRS_WGT
              ,CASE WHEN HIS.PRP_SHP_NM IS NOT NULL THEN HIS.PRP_SHP_NM -- PRP_SHP_NM of the latest Transit port history
               ELSE BVD.PRP_SHP_NM
               END AS PRP_SHP_NM
              ,CASE WHEN HIS.HZD_DESC IS NOT NULL THEN HIS.HZD_DESC -- HZD_DESC of the latest Transit port history
               ELSE BVD.HZD_DESC
               END AS HZD_DESC
              ,CASE WHEN HIS.EUR_DCGO_MRN_POLUT_CD IS NOT NULL THEN HIS.EUR_DCGO_MRN_POLUT_CD -- MRN_POLUT_FLG of the latest Transit port history
               ELSE BVD.MRN_POLUT_FLG
               END AS MRN_POLUT_FLG
              ,CASE WHEN HIS.IMDG_LMT_QTY_FLG IS NOT NULL THEN HIS.IMDG_LMT_QTY_FLG -- IMDG_LMT_QTY_FLG of the latest Transit port history
               ELSE BVD.IMDG_LMT_QTY_FLG
               END AS IMDG_LMT_QTY_FLG
              ,CASE WHEN HIS.NET_EXPLO_WGT IS NOT NULL THEN HIS.NET_EXPLO_WGT -- NET_EXPLO_WGT of the latest Transit port history
               ELSE BVD.NET_EXPLO_WGT
               END AS NET_EXPLO_WGT
              ,CASE WHEN HIS.CNTR_REF_NO IS NOT NULL THEN HIS.CNTR_REF_NO -- CNTR_REF_NO of the latest Transit port history
               ELSE BVD.CNTR_REF_NO
               END AS CNTR_NO_OLD
              ,CASE WHEN HIS.DCGO_REF_NO IS NOT NULL THEN HIS.DCGO_REF_NO -- DCGO_REF_NO of the latest Transit port history
               ELSE BVD.DCGO_REF_NO
               END AS DCGO_REF_NO
              ,CASE WHEN HIS.EMER_CNTC_PHN_NO IS NOT NULL THEN HIS.EMER_CNTC_PHN_NO -- EMER_CNTC_PHN_NO of the latest Transit port history
               ELSE BVD.EMER_CNTC_PHN_NO_CTNT
               END AS EMER_CNTC_PHN_NO
              ,CASE WHEN HIS.EMER_CNTC_PSON_NM IS NOT NULL THEN HIS.EMER_CNTC_PSON_NM -- EMER_CNTC_PSON_NM of the latest Transit port history
               ELSE BVD.EMER_CNTC_PSON_NM
               END AS EMER_CNTC_PSON_NM
              ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD1 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD1 -- IMDG_SUBS_RSK_LBL_CD1 of the latest Transit port history
               ELSE BVD.IMDG_SUBS_RSK_LBL_CD1
               END AS IMDG_SUBS_RSK_LBL_CD1
               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD2 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD2 -- IMDG_SUBS_RSK_LBL_CD2 of the latest Transit port history
               ELSE BVD.IMDG_SUBS_RSK_LBL_CD2
               END AS IMDG_SUBS_RSK_LBL_CD2
               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD3 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD3 -- IMDG_SUBS_RSK_LBL_CD3 of the latest Transit port history
               ELSE BVD.IMDG_SUBS_RSK_LBL_CD3
               END AS IMDG_SUBS_RSK_LBL_CD3
               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD4 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD4 -- IMDG_SUBS_RSK_LBL_CD4 of the latest Transit port history
               ELSE BVD.IMDG_SUBS_RSK_LBL_CD4
               END AS IMDG_SUBS_RSK_LBL_CD4
              ,CASE WHEN HIS.CNTR_REF_NO IS NOT NULL THEN HIS.CNTR_REF_NO -- CNTR_REF_NO of the latest Transit port history
               ELSE BVD.CNTR_REF_NO
               END AS CNTR_REF_NO
              ,CASE WHEN HIS.EMER_RSPN_GID_NO IS NOT NULL THEN HIS.EMER_RSPN_GID_NO -- EMER_RSPN_GID_NO of the latest Transit port history
               ELSE BVD.EMER_RSPN_GID_NO
               END AS EMER_RSPN_GID_NO
              ,CASE WHEN HIS.SPCL_CNTR_SEQ IS NOT NULL THEN HIS.SPCL_CNTR_SEQ -- CNTR_REF_NO of the latest Transit port history
               ELSE BVD.SPCL_CNTR_SEQ
               END AS SPCL_CNTR_SEQ
              ,CASE WHEN HIS.SPCL_CGO_SEQ IS NOT NULL THEN HIS.SPCL_CGO_SEQ -- EMER_RSPN_GID_NO of the latest Transit port history
               ELSE BVD.SPCL_CGO_SEQ
               END AS SPCL_CGO_SEQ
          FROM (SELECT 'NYK'      AS CGO_OPR_CD
                      ,BV.BKG_NO     BKG_NO
                      ,BK.BL_NO      BL_NO
                      ,BV.POL_CD     POL_CD
                      ,BV.POD_CD     POD_CD
                      ,BV.VSL_CD     VSL_CD
                      ,BV.SKD_VOY_NO SKD_VOY_NO
                      ,BV.SKD_DIR_CD SKD_DIR_CD
                      ,BDC.CNTR_NO           CNTR_NO
                      ,BDC.CNTR_CGO_SEQ      CNTR_CGO_SEQ
                      ,BDC.CNTR_TPSZ_CD      CNTR_TPSZ_CD
                      ,SIUN.IMDG_COMP_GRP_CD
                      ,BDC.IMDG_UN_NO        IMDG_UN_NO
                      ,BDC.IMDG_UN_NO_SEQ
                      ,BDC.IMDG_CLSS_CD
                      ,BDC.FLSH_PNT_CDO_TEMP FLSH_PNT_CDO_TEMP
                      ,BDC.IMDG_PCK_GRP_CD   IMDG_PCK_GRP_CD
                      ,BDC.IN_IMDG_PCK_QTY1  IN_IMDG_PCK_QTY1
                      ,BDC.IN_IMDG_PCK_CD1   IN_IMDG_PCK_CD1
                      ,BDC.OUT_IMDG_PCK_QTY1 OUT_IMDG_PCK_QTY1
                      ,BDC.OUT_IMDG_PCK_CD1  OUT_IMDG_PCK_CD1
                      ,BDC.EMS_NO            EMS_NO
                      ,BDC.NET_WGT           NET_WGT
                      ,BDC.GRS_WGT           GRS_WGT
                      ,BDC.PRP_SHP_NM        PRP_SHP_NM
                      ,BDC.HZD_DESC          HZD_DESC
                      ,BDC.MRN_POLUT_FLG      MRN_POLUT_FLG
                      ,BDC.IMDG_LMT_QTY_FLG  IMDG_LMT_QTY_FLG
                      ,(SELECT LPAD(OPF.VSL_BAY_NO || OPF.VSL_ROW_NO || OPF.VSL_TR_NO, 7,0 ) CELL_PSN_NO
                          FROM OPF_BAY_PLN_LDIS OPF
                         WHERE 1=1
                           AND OPF.VSL_CD = BV.VSL_CD
                           AND OPF.SKD_VOY_NO = BV.SKD_VOY_NO
                           AND OPF.CLPT_IND_SEQ = '1'
                           AND OPF.POD_CD = BV.POD_CD
                           AND OPF.POL_CD = BV.POL_CD
                           AND OPF.CNTR_REF_NO = BDC.CNTR_NO
                           AND ROWNUM = 1
                       ) CELL_PSN_NO
                      ,BDC.NET_EXPLO_WGT
                      ,BDC.DCGO_REF_NO
                      ,BDC.EMER_CNTC_PHN_NO_CTNT
                      ,BDC.EMER_CNTC_PSON_NM
                      ,BDC.CNTR_NO AS CNTR_REF_NO
                      ,BDC.IMDG_SUBS_RSK_LBL_CD1
                      ,BDC.IMDG_SUBS_RSK_LBL_CD2
                      ,BDC.IMDG_SUBS_RSK_LBL_CD3
                      ,BDC.IMDG_SUBS_RSK_LBL_CD4
                      ,BDC.EMER_RSPN_GID_NO
                      ,'' AS IN_N1ST_IMDG_PCK_DESC
                      ,BDC.DG_CNTR_SEQ AS SPCL_CNTR_SEQ
                      ,BDC.CNTR_CGO_SEQ AS SPCL_CGO_SEQ
                      ,'' AS OUT_N1ST_IMDG_PCK_DESC
                  FROM (

#if(${d_type} != 'T')
    #if(${barge_flag} == 'Y')
        #if (${d_type} == 'P' || ${d_type} == 'O')
            #if (${d_type} == 'P') -- Pre-Carriage
                        SELECT SUBSTR(@[vvd_cd], 1, 4) VSL_CD
                              ,SUBSTR(@[vvd_cd], 5, 4) SKD_VOY_NO
                              ,SUBSTR(@[vvd_cd], 9, 1) SKD_DIR_CD
                              ,BKG_NO
                              ,POL_CD
                              ,POD_CD
                          FROM BKG_VVD
                         WHERE BKG_NO IN (SELECT BKG_NO
                                            FROM BKG_VVD
                                           WHERE VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)
                                             AND SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                                             AND SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
                                             AND (POL_CD IN ('NLRTM', @[port_cd]) OR POD_CD IN ('NLRTM', @[port_cd]))
                            )
                        AND POL_CD = 'NLRTM'
                        AND POD_CD = @[port_cd]
            #else  -- On-Carriage
                        SELECT SUBSTR(@[vvd_cd], 1, 4) VSL_CD
                              ,SUBSTR(@[vvd_cd], 5, 4) SKD_VOY_NO
                              ,SUBSTR(@[vvd_cd], 9, 1) SKD_DIR_CD
                              ,BKG_NO
                              ,POL_CD
                              ,POD_CD
                          FROM BKG_VVD
                         WHERE BKG_NO IN (SELECT BKG_NO
                                            FROM BKG_VVD
                                           WHERE VSL_CD    = SUBSTR(@[vvd_cd], 1, 4)
                                             AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                             AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                             AND (POL_CD IN ('NLRTM', @[port_cd]) OR POD_CD IN ('NLRTM', @[port_cd]))
                                )
                            AND POL_CD = @[port_cd]
                            AND POD_CD = 'NLRTM'
            #end
        #else -- Discharging or Discharging + On-Carriage or Loading or Loading + Pre-Carriage
                        SELECT *
                          FROM BKG_VVD BV
                         WHERE 1=1
                           AND BV.VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)
                           AND BV.SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)
                           AND BV.SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)
            #if (${d_type} == 'D' || ${d_type} == 'DO') -- Discharging or Discharging + On-Carriage
                           AND BV.POD_CD      = @[port_cd]
            #elseif (${d_type} == 'L' || ${d_type} == 'PL') -- Loading or Loading + Pre-Carriage
                           AND BV.POL_CD      = @[port_cd]
            #else
                           AND BV.POL_CD      = @[port_cd]
            #end
        #end
    #else -- exclude barge

                        SELECT *
                          FROM BKG_VVD BV
                         WHERE 1=1
                           AND BV.VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)
                           AND BV.SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)
                           AND BV.SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)

        #if (${d_type} == 'D' || ${d_type} == 'DO' || ${d_type} == 'O') -- Discharging or Discharging + On-Carriage
                           AND BV.POD_CD      = @[port_cd]
        #elseif (${d_type} == 'L' || ${d_type} == 'PL' || ${d_type} == 'P') -- Loading or Loading + Pre-Carriage
                           AND BV.POL_CD      = @[port_cd]
        #else
                           AND BV.POL_CD      = @[port_cd]
        #end

        #if(${ui_type} == 'ESM_BKG_0965')
                           AND (BV.POL_CD = @[port_cd] OR BV.POD_CD = @[port_cd])
        #end
    #end
#else -- d_type = 'T' 의 경우
                        SELECT *
                          FROM BKG_VVD BV
                         WHERE 1=1
                           AND BV.VSL_CD        =  SUBSTR(@[vvd_cd], 1, 4)
                           AND BV.SKD_VOY_NO    =  SUBSTR(@[vvd_cd], 5, 4)
                           AND BV.SKD_DIR_CD    =  SUBSTR(@[vvd_cd], 9, 1)
                           AND BV.POL_CD        IN  (SELECT VPS_PORT_CD
                                                       FROM VSK_VSL_PORT_SKD
                                                      WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                        AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                        AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                        AND CLPT_SEQ < (SELECT MAX(CLPT_SEQ)
                                                                          FROM VSK_VSL_PORT_SKD
                                                                         WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                                           AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                                           AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                                           AND VPS_PORT_CD = @[port_cd]
                                                                       )
                                                        AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
                                                    )
                           AND BV.POD_CD        IN  (SELECT VPS_PORT_CD
                                                       FROM VSK_VSL_PORT_SKD
                                                      WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                        AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                        AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                        AND CLPT_SEQ  > (SELECT MIN(CLPT_SEQ)
                                                                           FROM VSK_VSL_PORT_SKD
                                                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                                            AND VPS_PORT_CD = @[port_cd]
                                                                        )
                                                        AND  CLPT_SEQ < (SELECT NVL(MIN(V2.CLPT_SEQ),50)
                                                                           FROM VSK_VSL_PORT_SKD V1, VSK_VSL_PORT_SKD V2
                                                                          WHERE 1=1
                                                                            AND V1.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)
                                                                            AND V1.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                                                                            AND V1.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
                                                                            AND V1.VSL_CD = V2.VSL_CD
                                                                            AND V1.SKD_VOY_NO = V2.SKD_VOY_NO
                                                                            AND V1.SKD_DIR_CD = V2.SKD_DIR_CD
                                                                            AND NVL(V1.SKD_CNG_STS_CD,'X') = 'O'
                                                                            AND NVL(V2.SKD_CNG_STS_CD,'X') = 'A'
                                                                            AND V1.CLPT_SEQ < V2.CLPT_SEQ
                                                                        )
                                                        AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
                                                    )
#end
                       ) BV
                      ,BKG_DG_CGO BDC
                      ,BKG_BOOKING BK
                      ,SCG_IMDG_UN_NO SIUN
                 WHERE 1=1
                   AND BV.BKG_NO        =   BK.BKG_NO
                   AND BV.BKG_NO        =   BDC.BKG_NO

                   AND BDC.IMDG_UN_NO    =     SIUN.IMDG_UN_NO(+)
                   AND BDC.IMDG_UN_NO_SEQ = SIUN.IMDG_UN_NO_SEQ(+)
                   AND 'Y' = NVL2(BDC.CSTMS_EXPT_FLG , DECODE(BDC.N1ST_PRE_VVD_CD,@[vvd_cd],'N','','N','Y'),'Y') -- row delete를 해서 데이터를 삭제 한 경우에 flg에 'Y'가 입력되는데
                                                                                                        -- 그 경우에도 VVD가 change되는 경우에는 바뀐 VVD로 조회가 가능하도록 만든 로직
                   AND BK.DCGO_FLG      =   'Y'
                   AND BK.BKG_STS_CD    <>  'X'
				   AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')
                          	  FROM BKG_CSTMS_EUR_DG_VSL_SKD
                              WHERE EUR_DG_DECL_TP_CD = @[d_type]
	                          AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)
    	                      AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)
        	                  AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)
            	              AND PORT_CD      = @[port_cd])
                   AND NOT EXISTS (SELECT *
                                     FROM BKG_CSTMS_EUR_DG EUDG
                                    WHERE EUDG.EUR_DG_DECL_TP_CD IN ('L','D')
                                      #if(${d_type}=='L')
                                      AND EUDG.POL_CD = @[port_cd] 
								      #elseif(${d_type}=='D')
                                      AND EUDG.POD_CD = @[port_cd] 
                                      #end
                                      AND EUDG.VSL_CD            = BV.VSL_CD
                                      AND EUDG.SKD_VOY_NO        = BV.SKD_VOY_NO
                                      AND EUDG.SKD_DIR_CD        = BV.SKD_DIR_CD
                                      AND EUDG.BL_NO             = BK.BL_NO
                                      AND EUDG.CNTR_NO           = BDC.CNTR_NO
                                      AND EUDG.SPCL_CNTR_SEQ      = BDC.DG_CNTR_SEQ
                                      AND EUDG.SPCL_CGO_SEQ      = BDC.CNTR_CGO_SEQ
                                  )

                UNION ALL

                SELECT CGO.CGO_OPR_CD
                      ,RQST.BKG_REF_NO BKG_NO
                      ,RQST.BKG_REF_NO BL_NO
                      ,RQST.POL_CD POL_CD
                      ,RQST.POD_CD POD_CD
                      ,RQST.VSL_CD
                      ,RQST.SKD_VOY_NO
                      ,RQST.SKD_DIR_CD
                      ,CGO.CNTR_REF_NO AS CNTR_NO
                      ,CGO.SPCL_CGO_SEQ 
                      ,CGO.CNTR_TPSZ_CD
                      ,SIUN.IMDG_COMP_GRP_CD
                      ,CGO.IMDG_UN_NO
                      ,CGO.IMDG_UN_NO_SEQ
                      ,CGO.IMDG_CLSS_CD
                      ,CGO.FLSH_PNT_CDO_TEMP
                      ,CGO.IMDG_PCK_GRP_CD
                      ,CGO.IN_N1ST_IMDG_PCK_QTY
                      ,CGO.IN_N1ST_IMDG_PCK_CD
                      ,CGO.OUT_N1ST_IMDG_PCK_QTY
                      ,CGO.OUT_N1ST_IMDG_PCK_CD
                      ,CGO.EMS_NO
                      ,CGO.NET_WGT
                      ,CGO.GRS_WGT
                      ,CGO.PRP_SHP_NM
                      ,HZD_DESC
                      ,MRN_POLUT_FLG
                      ,IMDG_LMT_QTY_FLG
                      ,(SELECT LPAD(OPF.VSL_BAY_NO || OPF.VSL_ROW_NO || OPF.VSL_TR_NO, 7,0 ) AS CELL_PSN_NO
                          FROM OPF_BAY_PLN_LDIS OPF
                         WHERE 1=1
                           AND OPF.VSL_CD = RQST.VSL_CD
                           AND OPF.SKD_VOY_NO = RQST.SKD_VOY_NO
                           AND OPF.CLPT_IND_SEQ = '1'
                           AND OPF.POD_CD = RQST.POD_CD
                           AND OPF.POL_CD = RQST.POL_CD
                           AND OPF.CNTR_REF_NO = CGO.CNTR_REF_NO
                           AND ROWNUM = 1
                       ) CELL_PSN_NO 
                      ,NULL AS NET_EXPLO_WGT
                      ,CGO.DCGO_REF_NO
                      ,CGO.EMER_CNTC_PHN_NO
                      ,CGO.EMER_CNTC_PSON_NM
                      ,CGO.CNTR_REF_NO
                      ,CGO.N1ST_IMDG_SUBS_RSK_LBL_CD
                      ,CGO.N2ND_IMDG_SUBS_RSK_LBL_CD
                      ,CGO.N3RD_IMDG_SUBS_RSK_LBL_CD
                      ,CGO.N4TH_IMDG_SUBS_RSK_LBL_CD
                      ,CGO.EMER_RSPN_GID_NO
                      ,CGO.IN_N1ST_IMDG_PCK_DESC
                      ,CGO.SPCL_CNTR_SEQ
                      ,CGO.SPCL_CGO_SEQ
                      ,CGO.OUT_N1ST_IMDG_PCK_DESC
                  FROM SCG_PRNR_APRO_RQST RQST
                      ,SCG_PRNR_APRO_RQST_CGO CGO
                      ,SCG_IMDG_UN_NO SIUN
                 WHERE 1=1
                   AND RQST.VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)
                   AND RQST.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                   AND RQST.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
#if ( ${d_type} == 'T' )
                   AND RQST.POL_CD  IN  (SELECT VPS_PORT_CD
                                           FROM VSK_VSL_PORT_SKD
                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                            AND CLPT_SEQ < (     SELECT MAX(CLPT_SEQ)
                                                                   FROM VSK_VSL_PORT_SKD
                                                                  WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                                    AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                                    AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                                    AND VPS_PORT_CD = @[port_cd]
                                                                )
                                            AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
                                        )
                   AND RQST.POD_CD  IN  (SELECT VPS_PORT_CD
                                           FROM VSK_VSL_PORT_SKD
                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                            AND CLPT_SEQ  > (    SELECT MIN(CLPT_SEQ)
                                                                   FROM VSK_VSL_PORT_SKD
                                                                  WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                                    AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                                    AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                                    AND VPS_PORT_CD = @[port_cd]
                                                             )
                                            AND  CLPT_SEQ  < (    SELECT NVL(MIN(V2.CLPT_SEQ),50)
                                                                    FROM VSK_VSL_PORT_SKD V1, VSK_VSL_PORT_SKD V2
                                                                   WHERE 1=1
                                                                     AND  V1.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)
                                                                     AND V1.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                                                                     AND V1.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
                                                                     AND V1.VSL_CD = V2.VSL_CD
                                                                     AND V1.SKD_VOY_NO = V2.SKD_VOY_NO
                                                                     AND V1.SKD_DIR_CD = V2.SKD_DIR_CD
                                                                     AND NVL(V1.SKD_CNG_STS_CD,'X') = 'O'
                                                                     AND NVL(V2.SKD_CNG_STS_CD,'X') = 'A'
                                                                     AND V1.CLPT_SEQ < V2.CLPT_SEQ
                                                             )
                                            AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
                                         )
#elseif ( ${d_type} == 'D' )
                   AND RQST.POD_CD = @[port_cd]
#elseif ( ${d_type} == 'L' )
                   AND RQST.POL_CD = @[port_cd]
#end
                   AND RQST.CRR_CD = CGO.CRR_CD
                   AND RQST.BKG_REF_NO = CGO.BKG_REF_NO
                   AND RQST.SPCL_CGO_RQST_SEQ = CGO.SPCL_CGO_RQST_SEQ
				   AND RQST.LST_RQST_DAT_FLG = 'Y'
                   AND CGO.IMDG_UN_NO    =     SIUN.IMDG_UN_NO(+)
                   AND CGO.IMDG_UN_NO_SEQ = SIUN.IMDG_UN_NO_SEQ(+)
                   AND CGO.CSTMS_EXPT_FLG IS NULL
				   AND RQST.DG_FLG = 'Y'
                   AND CGO.AUTH_STS_CD ='Y'
                   AND RQST.PRNR_CGO_RQST_SEQ = CGO.PRNR_CGO_RQST_SEQ
                   AND NVL(CGO.IMDG_UN_NO,'0') <> '0'
                   AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')
                                FROM BKG_CSTMS_EUR_DG_VSL_SKD
                               WHERE EUR_DG_DECL_TP_CD = @[d_type]
                                 AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)
                                 AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)
                                 AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)
                                 AND PORT_CD      = @[port_cd]
                              )
                   AND NOT EXISTS (SELECT *
                                     FROM BKG_CSTMS_EUR_DG EUDG
                                    WHERE EUDG.EUR_DG_DECL_TP_CD IN ( 'L','D')
                                      #if(${d_type}=='L')
                                      AND EUDG.POL_CD = @[port_cd] 
								      #elseif(${d_type}=='D')
                                      AND EUDG.POD_CD = @[port_cd] 
                                      #end
                                      AND EUDG.VSL_CD            = RQST.VSL_CD
                                      AND EUDG.SKD_VOY_NO        = RQST.SKD_VOY_NO
                                      AND EUDG.SKD_DIR_CD        = RQST.SKD_DIR_CD
                                      AND EUDG.BL_NO             = CGO.BKG_REF_NO
                                      AND EUDG.SPCL_CGO_SEQ      = CGO.SPCL_CGO_SEQ
                                      AND EUDG.SPCL_CNTR_SEQ     = CGO.SPCL_CNTR_SEQ
                                      AND EUDG.DCGO_REF_NO       = CGO.DCGO_REF_NO
                                      AND RQST.LST_RQST_DAT_FLG   = 'Y'
                                  )
               ) BVD
              ,(SELECT A.BAY_PLN_ID
                      ,A.VSL_CD
                      ,A.ETA_DT
                      ,A.ETD_DT
                      ,B.EUR_DG_CNTR_ID CNTR_NO
                      ,LPAD(B.CELL_PSN_NO, 7,0 ) CELL_PSN_NO
                      ,B.POL_CD
                      ,B.POD_CD
                  FROM BKG_CSTMS_EUR_DG_BAY_PLN A
                      ,BKG_CSTMS_EUR_DG_BAY_DTL B
                 WHERE A.BAY_PLN_ID = B.BAY_PLN_ID
                   AND A.BAY_PLN_ID  = NVL(@[bay_pln_id], ' ')
               ) BAY
             ,(SELECT HIS.VSL_CD
                     ,HIS.SKD_VOY_NO
                     ,HIS.SKD_DIR_CD
                     ,HIS.BL_NO
                     ,HIS.CNTR_NO
                     ,HIS.CELL_PSN_NO
                     ,HIS.CNTR_REF_NO
                     ,HIS.CNTR_TPSZ_CD
                     ,HIS.IMDG_PCK_GRP_CD
                     ,HIS.IMDG_CLSS_CD
                     ,HIS.IMDG_UN_NO
                     ,HIS.FLSH_PNT_CDO_TEMP
                     ,HIS.NET_WGT
                     ,HIS.GRS_WGT
                     ,HIS.EMS_NO
                     ,HIS.DCGO_PCK_GRP_CD1
                     ,HIS.EUR_DCGO_MRN_POLUT_CD
                     ,HIS.IMDG_LMT_QTY_FLG
                     ,HIS.NET_EXPLO_WGT
                     ,HIS.OUT_IMDG_PCK_QTY1
                     ,HIS.OUT_IMDG_PCK_CD1
                     ,HIS.PRP_SHP_NM
                     ,HIS.HZD_DESC
                     ,HIS.EMER_CNTC_PHN_NO
                     ,HIS.EMER_CNTC_PSON_NM
                     ,HIS.POL_CD
                     ,HIS.POD_CD
                     ,HIS.IMDG_UN_NO_SEQ
                     ,HIS.CGO_OPR_CD
                     ,HIS.IN_IMDG_PCK_QTY1
                     ,HIS.EUR_INR_PCK_DESC
                     ,HIS.IN_IMDG_PCK_CD1
                     ,HIS.IMDG_SUBS_RSK_LBL_CD1
                     ,HIS.IMDG_SUBS_RSK_LBL_CD2
                     ,HIS.IMDG_SUBS_RSK_LBL_CD3
                     ,HIS.IMDG_SUBS_RSK_LBL_CD4
                     ,HIS.DCGO_REF_NO
                     ,HIS.CNTR_CGO_SEQ
                     ,HIS.EMER_RSPN_GID_NO
                     ,HIS.EUR_OUTR_PCK_DESC
                     ,HIS.SPCL_CNTR_SEQ
                     ,HIS.SPCL_CGO_SEQ
					 ,HIS.IMDG_COMP_GRP_CD
                         FROM BKG_CSTMS_EUR_DG_HIS HIS
                              ,(SELECT A.VSL_CD
                              ,A.SKD_VOY_NO 
                              ,A.SKD_DIR_CD 
                              ,A.BL_NO 
                              ,A.CNTR_NO AS CNTR_NO 
                              ,MAX(A.CRE_DT) AS CRE_DT 
                              ,A.DCGO_REF_NO AS DCGO_REF_NO
                          FROM BKG_CSTMS_EUR_DG_HIS A
                              ,BKG_CSTMS_EUR_DG B
                         WHERE 1=1
                           AND A.BL_NO = B.BL_NO
                           AND A.CNTR_NO = B.CNTR_NO
                           AND A.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)
                           AND A.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                           AND A.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
                           AND A.CNTR_CGO_SEQ = B.CNTR_CGO_SEQ
                           AND A.DCGO_REF_NO = B.DCGO_REF_NO
						   #if (${d_type} == 'D' )
                           AND A.POD_CD = @[port_cd]
                           #elseif (${d_type} == 'L')
                           AND A.POL_CD = @[port_cd]
                           #end
                         GROUP BY A.VSL_CD
                               ,A.SKD_VOY_NO
                               ,A.SKD_DIR_CD
                               ,A.BL_NO
                               ,A.CNTR_NO
                               ,A.DCGO_REF_NO) HIS_SEQ
                        WHERE 1=1
                          AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')
                                     FROM BKG_CSTMS_EUR_DG_VSL_SKD
                                     WHERE EUR_DG_DECL_TP_CD = @[d_type]
                                     AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)
                                     AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)
                                     AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)
                                     AND PORT_CD      = @[port_cd])
                          AND HIS.DCGO_REF_NO = HIS_SEQ.DCGO_REF_NO
                          AND HIS.CRE_DT = HIS_SEQ.CRE_DT
                          AND HIS.BL_NO = HIS_SEQ.BL_NO
                          AND HIS.VSL_CD = HIS_SEQ.VSL_CD
                          AND HIS.SKD_VOY_NO = HIS_SEQ.SKD_VOY_NO
                          AND HIS.SKD_DIR_CD = HIS_SEQ.SKD_DIR_CD
                          AND HIS.CNTR_NO = HIS_SEQ.CNTR_NO
						  #if (${d_type} == 'D' )
                          AND HIS.POD_CD = @[port_cd]
                          #elseif (${d_type} == 'L')
                          AND HIS.POL_CD = @[port_cd]
                          AND NOT EXISTS (SELECT *
                                         FROM BKG_CSTMS_EUR_DG EUDG
                                         WHERE EUDG.EUR_DG_DECL_TP_CD = @[d_type]
                                          AND EUDG.PORT_CD           = @[port_cd]
                                          AND EUDG.VSL_CD            = HIS.VSL_CD
                                          AND EUDG.SKD_VOY_NO        = HIS.SKD_VOY_NO
                                          AND EUDG.SKD_DIR_CD        = HIS.SKD_DIR_CD
                                          AND EUDG.BL_NO             = HIS.BL_NO
                                          AND EUDG.CNTR_NO           = HIS.CNTR_NO
                                          AND EUDG.CNTR_CGO_SEQ      = HIS.CNTR_CGO_SEQ)
                          #end
               ) HIS
         WHERE 1=1
           AND BVD.VSL_CD      = BAY.VSL_CD(+)
           AND BVD.POL_CD      = BAY.POL_CD(+)
           AND BVD.POD_CD      = BAY.POD_CD(+)
           AND BVD.CNTR_NO     = BAY.CNTR_NO(+)

           AND BVD.VSL_CD      = HIS.VSL_CD(+)
           AND BVD.SKD_VOY_NO  = HIS.SKD_VOY_NO(+)
           AND BVD.SKD_DIR_CD  = HIS.SKD_DIR_CD(+)
           AND BVD.BL_NO       = HIS.BL_NO(+)
           AND BVD.CNTR_REF_NO = HIS.CNTR_REF_NO(+)
           AND BVD.DCGO_REF_NO = HIS.DCGO_REF_NO(+)) 
	 	   
 			UNION

			(
-- Booking Data
                SELECT CASE WHEN HIS.CGO_OPR_CD IS NOT NULL THEN HIS.CGO_OPR_CD -- CGO_OPR_CD of the latest Transit port history
                    ELSE BVD.CGO_OPR_CD
                END AS CGO_OPR_CD
              ,CASE WHEN HIS.BL_NO IS NOT NULL THEN HIS.BL_NO -- BL_NO of the latest Transit port history
                    ELSE BVD.BL_NO
                END AS BL_NO
              ,CASE WHEN HIS.BL_NO IS NOT NULL THEN HIS.BL_NO -- MERGE_BL_NO of the latest Transit port history
                    ELSE BVD.BL_NO
                END AS MERGE_BL_NO
              ,CASE WHEN HIS.POL_CD IS NOT NULL THEN HIS.POL_CD -- POL_CD of the latest Transit port history
                    ELSE BVD.POL_CD
                END AS POL_CD
              ,CASE WHEN HIS.POD_CD IS NOT NULL THEN HIS.POD_CD -- POD_CD of the latest Transit port history
                    ELSE BVD.POD_CD
                END AS POD_CD
              ,CASE WHEN HIS.CNTR_NO IS NOT NULL THEN HIS.CNTR_NO -- CNTR_NO of the latest Transit port history
                    ELSE BVD.CNTR_NO
                END AS CNTR_NO
              ,CASE WHEN HIS.CNTR_CGO_SEQ IS NOT NULL THEN HIS.CNTR_CGO_SEQ -- CNTR_CGO_SEQ of the latest Transit port history
                    ELSE BVD.CNTR_CGO_SEQ
                END AS CNTR_CGO_SEQ
              ,CASE WHEN HIS.CNTR_TPSZ_CD IS NOT NULL THEN HIS.CNTR_TPSZ_CD -- CNTR_TPSZ_CD of the latest Transit port history
                    ELSE BVD.CNTR_TPSZ_CD
                END AS CNTR_TPSZ_CD
              ,CASE WHEN HIS.CELL_PSN_NO IS NOT NULL THEN HIS.CELL_PSN_NO -- CELL_PSN_NO of the latest Transit port history
                    ELSE DECODE(NVL(null, ''), '', BVD.CELL_PSN_NO, BAY.CELL_PSN_NO )
                END AS CELL_PSN_NO
              ,BVD.IMDG_COMP_GRP_CD
              ,CASE WHEN HIS.IMDG_UN_NO IS NOT NULL THEN HIS.IMDG_UN_NO -- IMDG_UN_NO of the latest Transit port history
                    ELSE BVD.IMDG_UN_NO
               END AS IMDG_UN_NO
              ,CASE WHEN HIS.IMDG_UN_NO_SEQ IS NOT NULL THEN HIS.IMDG_UN_NO_SEQ -- IMDG_UN_NO_SEQ of the latest Transit port history
                    ELSE BVD.IMDG_UN_NO_SEQ
               END AS IMDG_UN_NO_SEQ
              ,CASE WHEN HIS.IMDG_CLSS_CD IS NOT NULL THEN HIS.IMDG_CLSS_CD -- IMDG_CLSS_CD of the latest Transit port history
                    ELSE BVD.IMDG_CLSS_CD
                END AS IMDG_CLSS_CD
              ,CASE WHEN HIS.FLSH_PNT_CDO_TEMP IS NOT NULL THEN HIS.FLSH_PNT_CDO_TEMP -- FLSH_PNT_CDO_TEMP of the latest Transit port history
               ELSE BVD.FLSH_PNT_CDO_TEMP
               END AS FLSH_PNT_CDO_TEMP
              ,'' AS AGENT         --AGENT
              ,'' AS FWRD_ID       --FOWDER CODE
              ,'' AS C_TYPE        --CARRIAGE TYPE
              ,'' AS SVC_RQST_NO   --SSR(FEEDER)
              ,CASE WHEN HIS.IMDG_PCK_GRP_CD IS NOT NULL THEN HIS.IMDG_PCK_GRP_CD -- IMDG_PCK_GRP_CD of the latest Transit port history
               ELSE NVL(BVD.IMDG_PCK_GRP_CD,'N')
               END AS IMDG_PCK_GRP_CD
              ,CASE WHEN HIS.IN_IMDG_PCK_QTY1 IS NOT NULL THEN HIS.IN_IMDG_PCK_QTY1 -- IN_IMDG_PCK_QTY1 of the latest Transit port history
               ELSE BVD.IN_IMDG_PCK_QTY1
               END AS IN_IMDG_PCK_QTY1
               ,CASE WHEN HIS.IN_IMDG_PCK_CD1 IS NOT NULL THEN HIS.IN_IMDG_PCK_CD1 -- IN_IMDG_PCK_CD1 of the latest Transit port history
               ELSE BVD.IN_IMDG_PCK_CD1
               END AS IN_IMDG_PCK_CD1
              ,CASE WHEN HIS.EUR_INR_PCK_DESC IS NOT NULL THEN HIS.EUR_INR_PCK_DESC -- EUR_INR_PCK_DESC of the latest Transit port history
               ELSE BVD.IN_N1ST_IMDG_PCK_DESC
               END AS EUR_INR_PCK_DESC
              ,CASE WHEN HIS.OUT_IMDG_PCK_QTY1 IS NOT NULL THEN HIS.OUT_IMDG_PCK_QTY1 -- OUT_IMDG_PCK_QTY1 of the latest Transit port history
               ELSE BVD.OUT_IMDG_PCK_QTY1
               END AS OUT_IMDG_PCK_QTY1
              ,CASE WHEN HIS.OUT_IMDG_PCK_CD1 IS NOT NULL THEN HIS.OUT_IMDG_PCK_CD1 -- OUT_IMDG_PCK_QTY1 of the latest Transit port history
               ELSE BVD.OUT_IMDG_PCK_CD1
               END AS OUT_IMDG_PCK_CD1
              ,CASE WHEN BVD.CGO_OPR_CD = 'NYK' THEN NVL2(HIS.OUT_IMDG_PCK_QTY1, HIS.OUT_IMDG_PCK_QTY1 || ' ', BVD.OUT_IMDG_PCK_QTY1 || ' ')
               || (SELECT IMDG_PCK_DESC 
                     FROM SCG_IMDG_PCK_CD
                    WHERE IMDG_PCK_CD = NVL(HIS.OUT_IMDG_PCK_CD1,BVD.OUT_IMDG_PCK_CD1)
                  )
               ELSE 
               NVL2(BVD.OUT_N1ST_IMDG_PCK_DESC, BVD.OUT_IMDG_PCK_QTY1||' '||BVD.OUT_N1ST_IMDG_PCK_DESC ,'')
               END AS EUR_OUTR_PCK_DESC
              ,CASE WHEN HIS.EMS_NO IS NOT NULL THEN HIS.EMS_NO -- EMS_NO of the latest Transit port history
               ELSE BVD.EMS_NO
               END AS EMS_NO
              ,CASE WHEN HIS.NET_WGT IS NOT NULL THEN HIS.NET_WGT -- NET_WGT of the latest Transit port history
               ELSE BVD.NET_WGT
               END AS NET_WGT
              ,CASE WHEN HIS.GRS_WGT IS NOT NULL THEN HIS.GRS_WGT -- GRS_WGT of the latest Transit port history
               ELSE BVD.GRS_WGT
               END AS GRS_WGT
              ,CASE WHEN HIS.PRP_SHP_NM IS NOT NULL THEN HIS.PRP_SHP_NM -- PRP_SHP_NM of the latest Transit port history
               ELSE BVD.PRP_SHP_NM
               END AS PRP_SHP_NM
              ,CASE WHEN HIS.HZD_DESC IS NOT NULL THEN HIS.HZD_DESC -- HZD_DESC of the latest Transit port history
               ELSE BVD.HZD_DESC
               END AS HZD_DESC
              ,CASE WHEN HIS.EUR_DCGO_MRN_POLUT_CD IS NOT NULL THEN HIS.EUR_DCGO_MRN_POLUT_CD -- MRN_POLUT_FLG of the latest Transit port history
               ELSE BVD.MRN_POLUT_FLG
               END AS MRN_POLUT_FLG
              ,CASE WHEN HIS.IMDG_LMT_QTY_FLG IS NOT NULL THEN HIS.IMDG_LMT_QTY_FLG -- IMDG_LMT_QTY_FLG of the latest Transit port history
               ELSE BVD.IMDG_LMT_QTY_FLG
               END AS IMDG_LMT_QTY_FLG
              ,CASE WHEN HIS.NET_EXPLO_WGT IS NOT NULL THEN HIS.NET_EXPLO_WGT -- NET_EXPLO_WGT of the latest Transit port history
               ELSE BVD.NET_EXPLO_WGT
               END AS NET_EXPLO_WGT
              ,CASE WHEN HIS.CNTR_REF_NO IS NOT NULL THEN HIS.CNTR_REF_NO -- CNTR_REF_NO of the latest Transit port history
               ELSE BVD.CNTR_REF_NO
               END AS CNTR_NO_OLD
              ,CASE WHEN HIS.DCGO_REF_NO IS NOT NULL THEN HIS.DCGO_REF_NO -- DCGO_REF_NO of the latest Transit port history
               ELSE BVD.DCGO_REF_NO
               END AS DCGO_REF_NO
              ,CASE WHEN HIS.EMER_CNTC_PHN_NO IS NOT NULL THEN HIS.EMER_CNTC_PHN_NO -- EMER_CNTC_PHN_NO of the latest Transit port history
               ELSE BVD.EMER_CNTC_PHN_NO_CTNT
               END AS EMER_CNTC_PHN_NO
              ,CASE WHEN HIS.EMER_CNTC_PSON_NM IS NOT NULL THEN HIS.EMER_CNTC_PSON_NM -- EMER_CNTC_PSON_NM of the latest Transit port history
               ELSE BVD.EMER_CNTC_PSON_NM
               END AS EMER_CNTC_PSON_NM
              ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD1 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD1 -- IMDG_SUBS_RSK_LBL_CD1 of the latest Transit port history
               ELSE BVD.IMDG_SUBS_RSK_LBL_CD1
               END AS IMDG_SUBS_RSK_LBL_CD1
               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD2 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD2 -- IMDG_SUBS_RSK_LBL_CD2 of the latest Transit port history
               ELSE BVD.IMDG_SUBS_RSK_LBL_CD2
               END AS IMDG_SUBS_RSK_LBL_CD2
               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD3 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD3 -- IMDG_SUBS_RSK_LBL_CD3 of the latest Transit port history
               ELSE BVD.IMDG_SUBS_RSK_LBL_CD3
               END AS IMDG_SUBS_RSK_LBL_CD3
               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD4 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD4 -- IMDG_SUBS_RSK_LBL_CD4 of the latest Transit port history
               ELSE BVD.IMDG_SUBS_RSK_LBL_CD4
               END AS IMDG_SUBS_RSK_LBL_CD4
              ,CASE WHEN HIS.CNTR_REF_NO IS NOT NULL THEN HIS.CNTR_REF_NO -- CNTR_REF_NO of the latest Transit port history
               ELSE BVD.CNTR_REF_NO
               END AS CNTR_REF_NO
              ,CASE WHEN HIS.EMER_RSPN_GID_NO IS NOT NULL THEN HIS.EMER_RSPN_GID_NO -- EMER_RSPN_GID_NO of the latest Transit port history
               ELSE BVD.EMER_RSPN_GID_NO
               END AS EMER_RSPN_GID_NO
              ,CASE WHEN HIS.SPCL_CNTR_SEQ IS NOT NULL THEN HIS.SPCL_CNTR_SEQ -- CNTR_REF_NO of the latest Transit port history
               ELSE BVD.SPCL_CNTR_SEQ
               END AS SPCL_CNTR_SEQ
              ,CASE WHEN HIS.SPCL_CGO_SEQ IS NOT NULL THEN HIS.SPCL_CGO_SEQ -- EMER_RSPN_GID_NO of the latest Transit port history
               ELSE BVD.SPCL_CGO_SEQ
               END AS SPCL_CGO_SEQ
          FROM (SELECT 'NYK'      AS CGO_OPR_CD
                      ,BV.BKG_NO     BKG_NO
                      ,BK.BL_NO      BL_NO
                      ,BV.POL_CD     POL_CD
                      ,BV.POD_CD     POD_CD
                      ,BV.VSL_CD     VSL_CD
                      ,BV.SKD_VOY_NO SKD_VOY_NO
                      ,BV.SKD_DIR_CD SKD_DIR_CD
                      ,BDC.CNTR_NO           CNTR_NO
                      ,BDC.CNTR_CGO_SEQ      CNTR_CGO_SEQ
                      ,BDC.CNTR_TPSZ_CD      CNTR_TPSZ_CD
                      ,SIUN.IMDG_COMP_GRP_CD
                      ,BDC.IMDG_UN_NO        IMDG_UN_NO
                      ,BDC.IMDG_UN_NO_SEQ
                      ,BDC.IMDG_CLSS_CD
                      ,BDC.FLSH_PNT_CDO_TEMP FLSH_PNT_CDO_TEMP
                      ,BDC.IMDG_PCK_GRP_CD   IMDG_PCK_GRP_CD
                      ,BDC.IN_IMDG_PCK_QTY1  IN_IMDG_PCK_QTY1
                      ,BDC.IN_IMDG_PCK_CD1   IN_IMDG_PCK_CD1
                      ,BDC.OUT_IMDG_PCK_QTY1 OUT_IMDG_PCK_QTY1
                      ,BDC.OUT_IMDG_PCK_CD1  OUT_IMDG_PCK_CD1
                      ,BDC.EMS_NO            EMS_NO
                      ,BDC.NET_WGT           NET_WGT
                      ,BDC.GRS_WGT           GRS_WGT
                      ,BDC.PRP_SHP_NM        PRP_SHP_NM
                      ,BDC.HZD_DESC          HZD_DESC
                      ,BDC.MRN_POLUT_FLG      MRN_POLUT_FLG
                      ,BDC.IMDG_LMT_QTY_FLG  IMDG_LMT_QTY_FLG
                      ,(SELECT LPAD(OPF.VSL_BAY_NO || OPF.VSL_ROW_NO || OPF.VSL_TR_NO, 7,0 ) CELL_PSN_NO
                          FROM OPF_BAY_PLN_LDIS OPF
                         WHERE 1=1
                           AND OPF.VSL_CD = BV.VSL_CD
                           AND OPF.SKD_VOY_NO = BV.SKD_VOY_NO
                           AND OPF.CLPT_IND_SEQ = '1'
                           AND OPF.POD_CD = BV.POD_CD
                           AND OPF.POL_CD = BV.POL_CD
                           AND OPF.CNTR_REF_NO = BDC.CNTR_NO
                           AND ROWNUM = 1
                       ) CELL_PSN_NO
                      ,BDC.NET_EXPLO_WGT
                      ,BDC.DCGO_REF_NO
                      ,BDC.EMER_CNTC_PHN_NO_CTNT
                      ,BDC.EMER_CNTC_PSON_NM
                      ,BDC.CNTR_NO AS CNTR_REF_NO
                      ,BDC.IMDG_SUBS_RSK_LBL_CD1
                      ,BDC.IMDG_SUBS_RSK_LBL_CD2
                      ,BDC.IMDG_SUBS_RSK_LBL_CD3
                      ,BDC.IMDG_SUBS_RSK_LBL_CD4
                      ,BDC.EMER_RSPN_GID_NO
                      ,'' AS IN_N1ST_IMDG_PCK_DESC
                      ,BDC.DG_CNTR_SEQ AS SPCL_CNTR_SEQ
                      ,BDC.CNTR_CGO_SEQ AS SPCL_CGO_SEQ
                      ,'' AS OUT_N1ST_IMDG_PCK_DESC
                  FROM (

#if(${d_type} != 'T')
    #if(${barge_flag} == 'Y')
        #if (${d_type} == 'P' || ${d_type} == 'O')
            #if (${d_type} == 'P') -- Pre-Carriage
                        SELECT SUBSTR(@[vvd_cd], 1, 4) VSL_CD
                              ,SUBSTR(@[vvd_cd], 5, 4) SKD_VOY_NO
                              ,SUBSTR(@[vvd_cd], 9, 1) SKD_DIR_CD
                              ,BKG_NO
                              ,POL_CD
                              ,POD_CD
                          FROM BKG_VVD
                         WHERE BKG_NO IN (SELECT BKG_NO
                                            FROM BKG_VVD
                                           WHERE VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)
                                             AND SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                                             AND SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
                                             AND (POL_CD IN ('NLRTM', @[port_cd]) OR POD_CD IN ('NLRTM', @[port_cd]))
                            )
                        AND POL_CD = 'NLRTM'
                        AND POD_CD = @[port_cd]
            #else  -- On-Carriage
                        SELECT SUBSTR(@[vvd_cd], 1, 4) VSL_CD
                              ,SUBSTR(@[vvd_cd], 5, 4) SKD_VOY_NO
                              ,SUBSTR(@[vvd_cd], 9, 1) SKD_DIR_CD
                              ,BKG_NO
                              ,POL_CD
                              ,POD_CD
                          FROM BKG_VVD
                         WHERE BKG_NO IN (SELECT BKG_NO
                                            FROM BKG_VVD
                                           WHERE VSL_CD    = SUBSTR(@[vvd_cd], 1, 4)
                                             AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                             AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                             AND (POL_CD IN ('NLRTM', @[port_cd]) OR POD_CD IN ('NLRTM', @[port_cd]))
                                )
                            AND POL_CD = @[port_cd]
                            AND POD_CD = 'NLRTM'
            #end
        #else -- Discharging or Discharging + On-Carriage or Loading or Loading + Pre-Carriage
                        SELECT *
                          FROM BKG_VVD BV
                         WHERE 1=1
                           AND BV.VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)
                           AND BV.SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)
                           AND BV.SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)
            #if (${d_type} == 'D' || ${d_type} == 'DO') -- Discharging or Discharging + On-Carriage
                           AND BV.POD_CD      = @[port_cd]
            #elseif (${d_type} == 'L' || ${d_type} == 'PL') -- Loading or Loading + Pre-Carriage
                           AND BV.POL_CD      = @[port_cd]
            #else
                           AND BV.POL_CD      = @[port_cd]
            #end
        #end
    #else -- exclude barge

                        SELECT *
                          FROM BKG_VVD BV
                         WHERE 1=1
                           AND BV.VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)
                           AND BV.SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)
                           AND BV.SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)

        #if (${d_type} == 'D' || ${d_type} == 'DO' || ${d_type} == 'O') -- Discharging or Discharging + On-Carriage
                           AND BV.POD_CD      = @[port_cd]
        #elseif (${d_type} == 'L' || ${d_type} == 'PL' || ${d_type} == 'P') -- Loading or Loading + Pre-Carriage
                           AND BV.POL_CD      = @[port_cd]
        #else
                           AND BV.POL_CD      = @[port_cd]
        #end

        #if(${ui_type} == 'ESM_BKG_0965')
                           AND (BV.POL_CD = @[port_cd] OR BV.POD_CD = @[port_cd])
        #end
    #end
#else -- d_type = 'T' 의 경우
                        SELECT *
                          FROM BKG_VVD BV
                         WHERE 1=1
                           AND BV.VSL_CD        =  SUBSTR(@[vvd_cd], 1, 4)
                           AND BV.SKD_VOY_NO    =  SUBSTR(@[vvd_cd], 5, 4)
                           AND BV.SKD_DIR_CD    =  SUBSTR(@[vvd_cd], 9, 1)
                           AND BV.POL_CD        IN  (SELECT VPS_PORT_CD
                                                       FROM VSK_VSL_PORT_SKD
                                                      WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                        AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                        AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                        AND CLPT_SEQ < (SELECT MAX(CLPT_SEQ)
                                                                          FROM VSK_VSL_PORT_SKD
                                                                         WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                                           AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                                           AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                                           AND VPS_PORT_CD = @[port_cd]
                                                                       )
                                                        AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
                                                    )
                           AND BV.POD_CD        IN  (SELECT VPS_PORT_CD
                                                       FROM VSK_VSL_PORT_SKD
                                                      WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                        AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                        AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                        AND CLPT_SEQ  > (SELECT MIN(CLPT_SEQ)
                                                                           FROM VSK_VSL_PORT_SKD
                                                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                                            AND VPS_PORT_CD = @[port_cd]
                                                                        )
                                                        AND  CLPT_SEQ < (SELECT NVL(MIN(V2.CLPT_SEQ),50)
                                                                           FROM VSK_VSL_PORT_SKD V1, VSK_VSL_PORT_SKD V2
                                                                          WHERE 1=1
                                                                            AND V1.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)
                                                                            AND V1.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                                                                            AND V1.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
                                                                            AND V1.VSL_CD = V2.VSL_CD
                                                                            AND V1.SKD_VOY_NO = V2.SKD_VOY_NO
                                                                            AND V1.SKD_DIR_CD = V2.SKD_DIR_CD
                                                                            AND NVL(V1.SKD_CNG_STS_CD,'X') = 'O'
                                                                            AND NVL(V2.SKD_CNG_STS_CD,'X') = 'A'
                                                                            AND V1.CLPT_SEQ < V2.CLPT_SEQ
                                                                        )
                                                        AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
                                                    )
#end
                       ) BV
                      ,BKG_DG_CGO BDC
                      ,BKG_BOOKING BK
                      ,SCG_IMDG_UN_NO SIUN
                 WHERE 1=1
                   AND BV.BKG_NO        =   BK.BKG_NO
                   AND BV.BKG_NO        =   BDC.BKG_NO

                   AND BDC.IMDG_UN_NO    =     SIUN.IMDG_UN_NO(+)
                   AND BDC.IMDG_UN_NO_SEQ = SIUN.IMDG_UN_NO_SEQ(+)

                   AND BK.DCGO_FLG      =   'Y'
                   AND BK.BKG_STS_CD    <>  'X'
				   AND BDC.CSTMS_EXPT_FLG IS NULL
				   AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')
                          	  FROM BKG_CSTMS_EUR_DG_VSL_SKD
                              WHERE EUR_DG_DECL_TP_CD = @[d_type]
	                          AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)
    	                      AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)
        	                  AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)
            	              AND PORT_CD      = @[port_cd])
                   AND NOT EXISTS (SELECT *
                                     FROM BKG_CSTMS_EUR_DG EUDG
                                    WHERE EUDG.EUR_DG_DECL_TP_CD = @[d_type]
                                      AND EUDG.PORT_CD           = @[port_cd]
                                      AND EUDG.VSL_CD            = BV.VSL_CD
                                      AND EUDG.SKD_VOY_NO        = BV.SKD_VOY_NO
                                      AND EUDG.SKD_DIR_CD        = BV.SKD_DIR_CD
                                      AND EUDG.BL_NO             = BK.BL_NO
                                      AND EUDG.CNTR_NO           = BDC.CNTR_NO
                                      AND EUDG.SPCL_CNTR_SEQ      = BDC.DG_CNTR_SEQ
                                      AND EUDG.SPCL_CGO_SEQ      = BDC.CNTR_CGO_SEQ
                                  )

                UNION ALL

                SELECT CGO.CGO_OPR_CD
                      ,RQST.BKG_REF_NO BKG_NO
                      ,RQST.BKG_REF_NO BL_NO
                      ,RQST.POL_CD POL_CD
                      ,RQST.POD_CD POD_CD
                      ,RQST.VSL_CD
                      ,RQST.SKD_VOY_NO
                      ,RQST.SKD_DIR_CD
                      ,CGO.CNTR_REF_NO AS CNTR_NO
                      ,CGO.SPCL_CGO_SEQ 
                      ,CGO.CNTR_TPSZ_CD
                      ,SIUN.IMDG_COMP_GRP_CD
                      ,CGO.IMDG_UN_NO
                      ,CGO.IMDG_UN_NO_SEQ
                      ,CGO.IMDG_CLSS_CD
                      ,CGO.FLSH_PNT_CDO_TEMP
                      ,CGO.IMDG_PCK_GRP_CD
                      ,CGO.IN_N1ST_IMDG_PCK_QTY
                      ,CGO.IN_N1ST_IMDG_PCK_CD
                      ,CGO.OUT_N1ST_IMDG_PCK_QTY
                      ,CGO.OUT_N1ST_IMDG_PCK_CD
                      ,CGO.EMS_NO
                      ,CGO.NET_WGT
                      ,CGO.GRS_WGT
                      ,CGO.PRP_SHP_NM
                      ,HZD_DESC
                      ,MRN_POLUT_FLG
                      ,IMDG_LMT_QTY_FLG
                      ,(SELECT LPAD(OPF.VSL_BAY_NO || OPF.VSL_ROW_NO || OPF.VSL_TR_NO, 7,0 ) AS CELL_PSN_NO
                          FROM OPF_BAY_PLN_LDIS OPF
                         WHERE 1=1
                           AND OPF.VSL_CD = RQST.VSL_CD
                           AND OPF.SKD_VOY_NO = RQST.SKD_VOY_NO
                           AND OPF.CLPT_IND_SEQ = '1'
                           AND OPF.POD_CD = RQST.POD_CD
                           AND OPF.POL_CD = RQST.POL_CD
                           AND OPF.CNTR_REF_NO = CGO.CNTR_REF_NO
                           AND ROWNUM = 1
                       ) CELL_PSN_NO 
                      ,NULL AS NET_EXPLO_WGT
                      ,CGO.DCGO_REF_NO
                      ,CGO.EMER_CNTC_PHN_NO
                      ,CGO.EMER_CNTC_PSON_NM
                      ,CGO.CNTR_REF_NO
                      ,CGO.N1ST_IMDG_SUBS_RSK_LBL_CD
                      ,CGO.N2ND_IMDG_SUBS_RSK_LBL_CD
                      ,CGO.N3RD_IMDG_SUBS_RSK_LBL_CD
                      ,CGO.N4TH_IMDG_SUBS_RSK_LBL_CD
                      ,CGO.EMER_RSPN_GID_NO
                      ,CGO.IN_N1ST_IMDG_PCK_DESC
                      ,CGO.SPCL_CNTR_SEQ
                      ,CGO.SPCL_CGO_SEQ
                      ,CGO.OUT_N1ST_IMDG_PCK_DESC
                  FROM SCG_PRNR_APRO_RQST RQST
                      ,SCG_PRNR_APRO_RQST_CGO CGO
                      ,SCG_IMDG_UN_NO SIUN
                 WHERE 1=1
                   AND RQST.VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)
                   AND RQST.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                   AND RQST.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
#if ( ${d_type} == 'T' )
                   AND RQST.POL_CD  IN  (SELECT VPS_PORT_CD
                                           FROM VSK_VSL_PORT_SKD
                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                            AND CLPT_SEQ < (     SELECT MAX(CLPT_SEQ)
                                                                   FROM VSK_VSL_PORT_SKD
                                                                  WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                                    AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                                    AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                                    AND VPS_PORT_CD = @[port_cd]
                                                                )
                                            AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
                                        )
                   AND RQST.POD_CD  IN  (SELECT VPS_PORT_CD
                                           FROM VSK_VSL_PORT_SKD
                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                            AND CLPT_SEQ  > (    SELECT MIN(CLPT_SEQ)
                                                                   FROM VSK_VSL_PORT_SKD
                                                                  WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                                                                    AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                                                                    AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                                                                    AND VPS_PORT_CD = @[port_cd]
                                                             )
                                            AND  CLPT_SEQ  < (    SELECT NVL(MIN(V2.CLPT_SEQ),50)
                                                                    FROM VSK_VSL_PORT_SKD V1, VSK_VSL_PORT_SKD V2
                                                                   WHERE 1=1
                                                                     AND  V1.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)
                                                                     AND V1.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                                                                     AND V1.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
                                                                     AND V1.VSL_CD = V2.VSL_CD
                                                                     AND V1.SKD_VOY_NO = V2.SKD_VOY_NO
                                                                     AND V1.SKD_DIR_CD = V2.SKD_DIR_CD
                                                                     AND NVL(V1.SKD_CNG_STS_CD,'X') = 'O'
                                                                     AND NVL(V2.SKD_CNG_STS_CD,'X') = 'A'
                                                                     AND V1.CLPT_SEQ < V2.CLPT_SEQ
                                                             )
                                            AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
                                         )
#elseif ( ${d_type} == 'D' )
                   AND RQST.POD_CD = @[port_cd]
#elseif ( ${d_type} == 'L' )
                   AND RQST.POL_CD = @[port_cd]
#end
                   AND RQST.CRR_CD = CGO.CRR_CD
                   AND RQST.BKG_REF_NO = CGO.BKG_REF_NO
                   AND RQST.SPCL_CGO_RQST_SEQ = CGO.SPCL_CGO_RQST_SEQ
				   AND RQST.LST_RQST_DAT_FLG = 'Y'
                   AND CGO.IMDG_UN_NO    =     SIUN.IMDG_UN_NO(+)
                   AND CGO.IMDG_UN_NO_SEQ = SIUN.IMDG_UN_NO_SEQ(+)
                   AND CGO.CSTMS_EXPT_FLG IS NULL
				   AND RQST.DG_FLG = 'Y'
                   AND CGO.AUTH_STS_CD ='Y'
                   AND RQST.PRNR_CGO_RQST_SEQ = CGO.PRNR_CGO_RQST_SEQ
                   AND NVL(CGO.IMDG_UN_NO,'0') <> '0'
                   AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')
                                FROM BKG_CSTMS_EUR_DG_VSL_SKD
                               WHERE EUR_DG_DECL_TP_CD = @[d_type]
                                 AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)
                                 AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)
                                 AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)
                                 AND PORT_CD      = @[port_cd]
                              )
                   AND NOT EXISTS (SELECT *
                                     FROM BKG_CSTMS_EUR_DG EUDG
                                    WHERE EUDG.EUR_DG_DECL_TP_CD = @[d_type]
                                      AND EUDG.PORT_CD           = @[port_cd]
                                      AND EUDG.VSL_CD            = RQST.VSL_CD
                                      AND EUDG.SKD_VOY_NO        = RQST.SKD_VOY_NO
                                      AND EUDG.SKD_DIR_CD        = RQST.SKD_DIR_CD
                                      AND EUDG.BL_NO             = CGO.BKG_REF_NO
                                      AND EUDG.SPCL_CGO_SEQ      = CGO.SPCL_CGO_SEQ
                                      AND EUDG.SPCL_CNTR_SEQ     = CGO.SPCL_CNTR_SEQ
                                      AND EUDG.DCGO_REF_NO       = CGO.DCGO_REF_NO
                                      AND RQST.LST_RQST_DAT_FLG   = 'Y'
                                  )
               ) BVD
              ,(SELECT A.BAY_PLN_ID
                      ,A.VSL_CD
                      ,A.ETA_DT
                      ,A.ETD_DT
                      ,B.EUR_DG_CNTR_ID CNTR_NO
                      ,LPAD(B.CELL_PSN_NO, 7,0 ) CELL_PSN_NO
                      ,B.POL_CD
                      ,B.POD_CD
                  FROM BKG_CSTMS_EUR_DG_BAY_PLN A
                      ,BKG_CSTMS_EUR_DG_BAY_DTL B
                 WHERE A.BAY_PLN_ID = B.BAY_PLN_ID
                   AND A.BAY_PLN_ID  = NVL(@[bay_pln_id], ' ')
               ) BAY
             ,(SELECT HIS.VSL_CD
                     ,HIS.SKD_VOY_NO
                     ,HIS.SKD_DIR_CD
                     ,HIS.BL_NO
                     ,HIS.CNTR_NO
                     ,HIS.CELL_PSN_NO
                     ,HIS.CNTR_REF_NO
                     ,HIS.CNTR_TPSZ_CD
                     ,HIS.IMDG_PCK_GRP_CD
                     ,HIS.IMDG_CLSS_CD
                     ,HIS.IMDG_UN_NO
                     ,HIS.FLSH_PNT_CDO_TEMP
                     ,HIS.NET_WGT
                     ,HIS.GRS_WGT
                     ,HIS.EMS_NO
                     ,HIS.DCGO_PCK_GRP_CD1
                     ,HIS.EUR_DCGO_MRN_POLUT_CD
                     ,HIS.IMDG_LMT_QTY_FLG
                     ,HIS.NET_EXPLO_WGT
                     ,HIS.OUT_IMDG_PCK_QTY1
                     ,HIS.OUT_IMDG_PCK_CD1
                     ,HIS.PRP_SHP_NM
                     ,HIS.HZD_DESC
                     ,HIS.EMER_CNTC_PHN_NO
                     ,HIS.EMER_CNTC_PSON_NM
                     ,HIS.POL_CD
                     ,HIS.POD_CD
                     ,HIS.IMDG_UN_NO_SEQ
                     ,HIS.CGO_OPR_CD
                     ,HIS.IN_IMDG_PCK_QTY1
                     ,HIS.EUR_INR_PCK_DESC
                     ,HIS.IN_IMDG_PCK_CD1
                     ,HIS.IMDG_SUBS_RSK_LBL_CD1
                     ,HIS.IMDG_SUBS_RSK_LBL_CD2
                     ,HIS.IMDG_SUBS_RSK_LBL_CD3
                     ,HIS.IMDG_SUBS_RSK_LBL_CD4
                     ,HIS.DCGO_REF_NO
                     ,HIS.CNTR_CGO_SEQ
                     ,HIS.EMER_RSPN_GID_NO
                     ,HIS.EUR_OUTR_PCK_DESC
                     ,HIS.SPCL_CNTR_SEQ
                     ,HIS.SPCL_CGO_SEQ
					 ,HIS.IMDG_COMP_GRP_CD
                         FROM BKG_CSTMS_EUR_DG_HIS HIS
                              ,(SELECT A.VSL_CD
                              ,A.SKD_VOY_NO 
                              ,A.SKD_DIR_CD 
                              ,A.BL_NO 
                              ,A.CNTR_NO AS CNTR_NO 
                              ,MAX(A.CRE_DT) AS CRE_DT 
                              ,A.DCGO_REF_NO AS DCGO_REF_NO
                          FROM BKG_CSTMS_EUR_DG_HIS A
                              ,BKG_CSTMS_EUR_DG B
                         WHERE 1=1
                           AND A.BL_NO = B.BL_NO
                           AND A.CNTR_NO = B.CNTR_NO
                           AND A.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)
                           AND A.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                           AND A.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
                           AND A.CNTR_CGO_SEQ = B.CNTR_CGO_SEQ
                           AND A.DCGO_REF_NO = B.DCGO_REF_NO
						   #if (${d_type} == 'D' )
                           AND A.POD_CD = @[port_cd]
                           #elseif (${d_type} == 'L')
                           AND A.POL_CD = @[port_cd]
                           #end
                         GROUP BY A.VSL_CD
                               ,A.SKD_VOY_NO
                               ,A.SKD_DIR_CD
                               ,A.BL_NO
                               ,A.CNTR_NO
                               ,A.DCGO_REF_NO) HIS_SEQ
                        WHERE 1=1
                          AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')
                                     FROM BKG_CSTMS_EUR_DG_VSL_SKD
                                     WHERE EUR_DG_DECL_TP_CD = @[d_type]
                                     AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)
                                     AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)
                                     AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)
                                     AND PORT_CD      = @[port_cd])
                          AND HIS.DCGO_REF_NO = HIS_SEQ.DCGO_REF_NO
                          AND HIS.CRE_DT = HIS_SEQ.CRE_DT
                          AND HIS.BL_NO = HIS_SEQ.BL_NO
                          AND HIS.VSL_CD = HIS_SEQ.VSL_CD
                          AND HIS.SKD_VOY_NO = HIS_SEQ.SKD_VOY_NO
                          AND HIS.SKD_DIR_CD = HIS_SEQ.SKD_DIR_CD
                          AND HIS.CNTR_NO = HIS_SEQ.CNTR_NO
						  #if (${d_type} == 'D' )
                          AND HIS.POD_CD = @[port_cd]
                          #elseif (${d_type} == 'L')
                          AND HIS.POL_CD = @[port_cd]
                          #end
                          AND NOT EXISTS (SELECT *
                                         FROM BKG_CSTMS_EUR_DG EUDG
                                         WHERE EUDG.EUR_DG_DECL_TP_CD = @[d_type]
                                          AND EUDG.PORT_CD           = @[port_cd]
                                          AND EUDG.VSL_CD            = HIS.VSL_CD
                                          AND EUDG.SKD_VOY_NO        = HIS.SKD_VOY_NO
                                          AND EUDG.SKD_DIR_CD        = HIS.SKD_DIR_CD
                                          AND EUDG.BL_NO             = HIS.BL_NO
                                     	  AND EUDG.CNTR_NO           = HIS.CNTR_NO
                                     	  AND EUDG.SPCL_CNTR_SEQ     = HIS.SPCL_CNTR_SEQ
                                          AND EUDG.SPCL_CGO_SEQ      = HIS.SPCL_CGO_SEQ)
               ) HIS
         WHERE 1=1
           AND BVD.VSL_CD      = BAY.VSL_CD(+)
           AND BVD.POL_CD      = BAY.POL_CD(+)
           AND BVD.POD_CD      = BAY.POD_CD(+)
           AND BVD.CNTR_NO     = BAY.CNTR_NO(+)

           AND BVD.VSL_CD(+)      = HIS.VSL_CD
           AND BVD.SKD_VOY_NO(+)  = HIS.SKD_VOY_NO
           AND BVD.SKD_DIR_CD(+)  = HIS.SKD_DIR_CD
           AND BVD.BL_NO(+)       = HIS.BL_NO
           AND BVD.CNTR_REF_NO(+) = HIS.CNTR_REF_NO
           AND BVD.DCGO_REF_NO(+) = HIS.DCGO_REF_NO
)) 
WHERE 1=1 
#if(${cargo_oper_cd} != '')
AND CGO_OPR_CD = @[cargo_oper_cd]
#end
#if(${pol_code} != '')
AND POL_CD = @[pol_code]
#end
#if(${pod_code} != '')
AND POD_CD = @[pod_code]
#end
#if(${bl_number} != '')
AND BL_NO = @[bl_number]
#end
ORDER BY  SEQ, POL_CD, POD_CD, BL_NO, DCGO_REF_NO, CGO_OPR_CD			]]></sql>
			<params>
				<param name="vvd_cd" type="12" value="HJLA0082W" out="N"/>
				<param name="port_cd" type="12" value="BEANR" out="N"/>
				<param name="d_type" type="12" value="" out="N"/>
				<param name="bay_pln_id" type="12" value="" out="N"/>
				<param name="cargo_oper_cd" type="12" value="" out="N"/>
				<param name="pol_code" type="12" value="" out="N"/>
				<param name="pod_code" type="12" value="" out="N"/>
				<param name="bl_number" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
