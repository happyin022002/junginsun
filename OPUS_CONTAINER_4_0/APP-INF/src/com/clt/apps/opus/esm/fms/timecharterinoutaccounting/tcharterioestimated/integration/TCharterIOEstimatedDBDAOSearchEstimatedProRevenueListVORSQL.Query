<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TCharterIOEstimatedDBDAOSearchEstimatedProRevenueListVORSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
WITH V_FMS_CONTRACT AS (
        SELECT VSL_CD
             , FLET_CTRT_NO
             , FLET_CTRT_TP_CD
             , FLET_CTRT_FACT_CD
          FROM FMS_CONTRACT
         WHERE 1=1
           AND FLET_CTRT_FACT_CD = 'ACT'
         UNION ALL
        SELECT FI.VSL_CD
             , FC.FLET_CTRT_NO
             , FLET_CTRT_TP_CD
             , FLET_CTRT_FACT_CD
          FROM FMS_CONTRACT FC
             , FMS_ID_VSL FI
         WHERE FC.FLET_CTRT_NO = FI.FLET_CTRT_NO
           AND FC.FLET_CTRT_FACT_CD = 'ACT'
    )
, V_ESTM_REV_VVD AS (
    SELECT DISTINCT A.EXE_YRMON
         , A.REV_YRMON
         , A.RLANE_CD
         , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD VVD_CD
         , A.VSL_CD
         , A.SKD_VOY_NO
         , A.SKD_DIR_CD
         , A.REV_DIR_CD
         , A.VST_DT
         , A.VED_DT
         , A.ESTM_IOC_DIV_CD
         , B.FLET_CTRT_NO
         , B.FLET_CTRT_TP_CD
         , B.FLET_CTRT_FACT_CD
      FROM (SELECT *
              FROM GL_ESTM_REV_VVD G
             WHERE 1=1
               AND G.EXE_YRMON      = REPLACE(@[exe_yrmon],'-')
               AND G.REV_YRMON      BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')
               AND G.ESTM_VVD_TP_CD = 'PV'
               AND G.ESTM_IOC_DIV_CD = 'OO'
               AND NOT EXISTS ( SELECT NULL
                                  FROM FMS_VVD
                                 WHERE VSL_CD = G.VSL_CD
                                   AND REV_YRMON BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')
                                   AND SKD_VOY_NO = SUBSTR(REPLACE(@[exe_yrmon],'-'), 3, 4)
                                   AND SKD_DIR_CD = 'V'
                                   AND REV_DIR_CD = 'V')
             UNION ALL
            SELECT *
              FROM GL_ESTM_REV_VVD G
             WHERE G.EXE_YRMON      = REPLACE(@[exe_yrmon],'-')
               AND G.REV_YRMON      BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')
               AND G.ESTM_VVD_TP_CD = 'PV'
               AND NOT (SUBSTRB(G.RLANE_CD, 4, 1) <> 'I' AND SUBSTRB(G.ESTM_IOC_DIV_CD, 1, 1) = 'I')
               AND NOT EXISTS ( SELECT NULL
                                  FROM GL_ESTM_REV_VVD
                                 WHERE EXE_YRMON = G.EXE_YRMON
                                   AND REV_YRMON = G.REV_YRMON
                                   AND VSL_CD = G.VSL_CD
                                   AND SKD_VOY_NO = G.SKD_VOY_NO
                                   AND SKD_DIR_CD = G.SKD_DIR_CD
                                   AND REV_DIR_CD = G.REV_DIR_CD
                                   AND ESTM_VVD_TP_CD = G.ESTM_VVD_TP_CD
                                   AND ESTM_IOC_DIV_CD = 'OO')
           ) A
         , V_FMS_CONTRACT B
     WHERE A.VSL_CD = B.VSL_CD 
    )

SELECT 'I' AS IBFLAG
     , A.EXE_YRMON
     , A.REV_YRMON
     , A.REV_YRMON||A.FLET_CTRT_TP_CD AS SUBSUMCOL
     , A.FLET_CTRT_TP_CD
     , A.FLET_CTRT_TP_CD
     , A.RLANE_CD
     , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS VVD_CD
     , A.VSL_CD
     , A.SKD_VOY_NO
     , A.SKD_DIR_CD
     , A.REV_DIR_CD
     , A.VST_DT
     , A.VED_DT
     , A.ESTM_IOC_DIV_CD
     , ROUND(A.HIRE_AMT, 3) AS HIRE_AMT
     , ROUND(SUM(A.EST_AMT), 3) AS EST_AMT
  FROM (SELECT VSL_CD
             , SKD_VOY_NO
             , SKD_DIR_CD
             , REV_DIR_CD
             , EXE_YRMON
             , REV_YRMON
             , FLET_CTRT_NO
             , MIN(HIRE_EFF_DT) HIRE_EFF_DT
             , MAX(HIRE_EXP_DT) HIRE_EXP_DT
             , MIN(HIRE_N1ST_AMT + HIRE_N2ND_AMT) HIRE_AMT
             , SUM(DAYS*(HIRE_N1ST_AMT + HIRE_N2ND_AMT)) EST_AMT
             , VST_DT
             , VED_DT
             , ESTM_IOC_DIV_CD
             , FLET_CTRT_TP_CD
             , RLANE_CD
          FROM (SELECT A.VSL_CD
                     , A.SKD_VOY_NO
                     , A.SKD_DIR_CD
                     , A.REV_DIR_CD
                     , A.EXE_YRMON
                     , A.REV_YRMON
                     , C.FLET_CTRT_NO
                     , CASE WHEN A.VST_DT >= TO_CHAR(C.EFF_DT,'YYYYMMDD') THEN TO_DATE(A.VST_DT, 'YYYYMMDD')
                            ELSE TRUNC(C.EFF_DT)
                       END HIRE_EFF_DT
                     , CASE WHEN A.VED_DT > TO_CHAR(C.EXP_DT,'YYYYMMDD') THEN TRUNC(C.EXP_DT)-1
                            ELSE TO_DATE(A.VED_DT, 'YYYYMMDD')
                       END HIRE_EXP_DT
                     , CASE WHEN A.VED_DT > TO_CHAR(C.EXP_DT,'YYYYMMDD') THEN TRUNC(C.EXP_DT)-1
                            ELSE TO_DATE(A.VED_DT, 'YYYYMMDD')
                       END - 
                       CASE WHEN A.VST_DT >= TO_CHAR(C.EFF_DT,'YYYYMMDD') THEN TO_DATE(A.VST_DT, 'YYYYMMDD')
                            ELSE TRUNC(C.EFF_DT)
                       END +1 DAYS
                     , CASE WHEN SUBSTR(TO_CHAR(FIRST_VALUE(C.EXP_DT) OVER(PARTITION BY C.FLET_CTRT_NO, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD ORDER BY C.EXP_DT),'YYYYMMDDHH24MISS'),9,4) = '0000'
                                 AND C.HIR_CURR_N2ND_CD IS NULL THEN NVL(C.HIR_RT_N1ST_AMT/DECODE(C.HIR_CURR_N1ST_CD, 'USD', 1, (
                                                            SELECT NVL(EX1.USD_LOCL_XCH_RT,1)
                                                              FROM GL_MON_XCH_RT EX1
                                                             WHERE C.HIR_CURR_N1ST_CD = EX1.CURR_CD
                                                               AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON
                                                               AND EX1.ACCT_XCH_RT_LVL = '1')),0)
                            ELSE FIRST_VALUE(NVL(C.HIR_RT_N1ST_AMT/DECODE(C.HIR_CURR_N1ST_CD, 'USD', 1, (
                                                            SELECT NVL(EX1.USD_LOCL_XCH_RT,1)
                                                              FROM GL_MON_XCH_RT EX1
                                                             WHERE C.HIR_CURR_N1ST_CD = EX1.CURR_CD
                                                               AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON
                                                               AND EX1.ACCT_XCH_RT_LVL = '1')),0)) OVER(PARTITION BY C.FLET_CTRT_NO, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD ORDER BY C.EXP_DT DESC)
                       END HIRE_N1ST_AMT
                     , CASE WHEN SUBSTR(TO_CHAR(FIRST_VALUE(C.EXP_DT) OVER(PARTITION BY C.FLET_CTRT_NO, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD ORDER BY C.EXP_DT),'YYYYMMDDHH24MISS'),9,4) = '0000'
                                 AND C.HIR_CURR_N2ND_CD IS NULL THEN NVL(C.HIR_RT_N2ND_AMT/DECODE(C.HIR_CURR_N2ND_CD, 'USD', 1, (
                                                            SELECT NVL(EX1.USD_LOCL_XCH_RT,1)
                                                              FROM GL_MON_XCH_RT EX1
                                                             WHERE C.HIR_CURR_N2ND_CD = EX1.CURR_CD
                                                               AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON
                                                               AND EX1.ACCT_XCH_RT_LVL = '1')),0)
                            ELSE FIRST_VALUE(NVL(C.HIR_RT_N2ND_AMT/DECODE(C.HIR_CURR_N2ND_CD, 'USD', 1, (
                                                            SELECT NVL(EX1.USD_LOCL_XCH_RT,1)
                                                              FROM GL_MON_XCH_RT EX1
                                                             WHERE C.HIR_CURR_N2ND_CD = EX1.CURR_CD
                                                               AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON
                                                               AND EX1.ACCT_XCH_RT_LVL = '1')),0)) OVER(PARTITION BY C.FLET_CTRT_NO, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD ORDER BY C.EXP_DT DESC)
                       END HIRE_N2ND_AMT
                     , A.VST_DT
                     , A.VED_DT
                     , A.ESTM_IOC_DIV_CD
                     , A.FLET_CTRT_TP_CD
                     , A.RLANE_CD
                  FROM V_ESTM_REV_VVD A
                     , FMS_HIRE C
                 WHERE 1=1
                   AND A.FLET_CTRT_TP_CD = 'TI'
                   AND A.FLET_CTRT_FACT_CD = 'ACT'
                   AND A.FLET_CTRT_NO = C.FLET_CTRT_NO
                   AND A.VST_DT <= TO_CHAR(C.EXP_DT,'YYYYMMDD')
                   AND A.VED_DT >= TO_CHAR(C.EFF_DT,'YYYYMMDD') 
               )
         GROUP BY VSL_CD
             , SKD_VOY_NO
             , SKD_DIR_CD
             , REV_DIR_CD
             , EXE_YRMON
             , REV_YRMON
             , FLET_CTRT_NO
             , VST_DT
             , VED_DT
             , ESTM_IOC_DIV_CD
             , FLET_CTRT_TP_CD
             , RLANE_CD 
       ) A
 GROUP BY A.EXE_YRMON
     , A.REV_YRMON
     , A.FLET_CTRT_TP_CD
     , A.FLET_CTRT_TP_CD
     , A.RLANE_CD
     , A.VSL_CD
     , A.SKD_VOY_NO
     , A.SKD_DIR_CD
     , A.REV_DIR_CD
     , A.VST_DT
     , A.VED_DT
     , A.HIRE_AMT
     , A.VST_DT
     , A.VED_DT
     , A.ESTM_IOC_DIV_CD
     , A.FLET_CTRT_TP_CD
 ORDER BY A.REV_YRMON
     , A.FLET_CTRT_TP_CD 			]]></sql>
			<params>
				<param name="exe_yrmon" type="12" value="" out="N"/>
				<param name="fr_duration" type="12" value="" out="N"/>
				<param name="to_duration" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
