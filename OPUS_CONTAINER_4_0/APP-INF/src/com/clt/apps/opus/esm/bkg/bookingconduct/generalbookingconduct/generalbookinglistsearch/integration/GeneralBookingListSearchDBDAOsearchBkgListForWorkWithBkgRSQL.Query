<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralBookingListSearchDBDAOsearchBkgListForWorkWithBkgRSQL">
			<desc><![CDATA[searchBkgListForWorkWithBkg]]></desc>
			<sql><![CDATA[
SELECT
#if(${bkg_no} == '' && ${mult_bkg_no} == '' && ${bkg_from_dt} != '')
	#if (${date_gbn} == 'Y')
		/*+ INDEX (BK XAK3BKG_BOOKING) ORDERED USE_NL(BK BL REFNO CUST) */
	#else 
		/*+ INDEX (BL XAK2BKG_BL_DOC) ORDERED USE_NL(BK BL REFNO CUST) */
	#end
#end
#if(${bkg_no} == '' && ${mult_bkg_no} == '' && ${vvd} != '')
	#if(${pol_cd} != '')
		/*+ INDEX (VVD XAK2BKG_VVD) */
	#end
	#if(${pod_cd} != '')
		/*+ INDEX (VVD XAK3BKG_VVD) */
	#end	
	#if(${pol_cd} == '' && ${pod_cd} == '')
		/*+ INDEX (VVD XAK1BKG_VVD) */
	#end
#end
        --ROWNUM              SEQ
        DISTINCT BK.BKG_NO         BKG_NO
        , REPLACE((SELECT CUST_NM FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = BK.BKG_NO AND BKG_CUST_TP_CD = 'S'), CHR(10), ' ') SHIPPER
        , REPLACE((SELECT cust.CUST_CNT_CD||cust.CUST_SEQ FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = BK.BKG_NO AND BKG_CUST_TP_CD = 'S'), CHR(10), ' ') SHIPPER_CODE
        , BK.VSL_CD||BK.SKD_VOY_NO||BK.SKD_DIR_CD TVVD
        , BKG_JOIN_FNC( CURSOR(SELECT CNTR_TPSZ_CD||'-'||LTRIM(TO_CHAR(NVL(OP_CNTR_QTY, 0),'990.99'))
                                  FROM BKG_QUANTITY
                                 WHERE BKG_NO = BK.BKG_NO
                                   AND CNTR_TPSZ_CD IS NOT NULL)) CNTR_VOL
        , BK.POR_CD         POR
        , SUBSTR(BK.POR_NOD_CD,      6, 2) POR_NOD_CD
        , BK.POL_CD         POL
        , SUBSTR(BK.POL_NOD_CD,      6, 2) POL_NOD_CD
        , SUBSTR(BK.PRE_RLY_PORT_CD, 1, 5) PRE_LOC
        , SUBSTR(BK.PRE_RLY_PORT_CD, 6, 2) PRE_YD
        , SUBSTR(BK.PST_RLY_PORT_CD, 1, 5) PST_LOC
        , SUBSTR(BK.PST_RLY_PORT_CD, 6, 2) PST_YD        
        , BK.POD_CD         POD
        , SUBSTR(BK.POD_NOD_CD, 	 6, 2) POD_NOD_CD
        , BK.DEL_CD         DEL
        , SUBSTR(BK.DEL_NOD_CD,      6, 2) DEL_NOD_CD
        , BK.BKG_STS_CD     ST
        , BK.RCV_TERM_CD    R
        , BK.DE_TERM_CD     D
        , DECODE(BL.BDR_FLG, 'N', 'NO', 'YES') BDR
        --A:APPROVE -> 파랑, N:REJECT -> 빨강, P:PENDING, R:RQST, OTHER:SPECIAL CARGO EXIST
        , NVL((SELECT SUBSTR(MIN(CD.INTG_CD_VAL_DP_SEQ || DG.SPCL_CGO_APRO_CD),2,1)
                 FROM COM_INTG_CD_DTL CD
                    , BKG_DG_CGO DG
                WHERE DG.BKG_NO = BK.BKG_NO
                  AND 'CD01955' = CD.INTG_CD_ID(+)
                  AND DG.SPCL_CGO_APRO_CD = CD.INTG_CD_VAL_CTNT(+)),DECODE(BK.DCGO_FLG, 'Y', 'X', NULL)) AS DG
        , NVL((SELECT SUBSTR(MIN(CD.INTG_CD_VAL_DP_SEQ || RF.SPCL_CGO_APRO_CD),2,1)
                 FROM COM_INTG_CD_DTL CD
                    , BKG_RF_CGO RF
                WHERE RF.BKG_NO = BK.BKG_NO
                  AND 'CD01955' = CD.INTG_CD_ID(+)
                  AND RF.SPCL_CGO_APRO_CD = CD.INTG_CD_VAL_CTNT(+)),DECODE(BK.RC_FLG, 'Y', 'X', NULL)) AS RF
        , NVL((SELECT SUBSTR(MIN(CD.INTG_CD_VAL_DP_SEQ || AK.SPCL_CGO_APRO_CD),2,1)
                 FROM COM_INTG_CD_DTL CD
                    , BKG_AWK_CGO AK
                WHERE AK.BKG_NO = BK.BKG_NO
                  AND 'CD01955' = CD.INTG_CD_ID(+)
                  AND AK.SPCL_CGO_APRO_CD = CD.INTG_CD_VAL_CTNT(+)),DECODE(BK.AWK_CGO_FLG, 'Y', 'X', NULL)) AS AWK
        , NVL((SELECT SUBSTR(MIN(CD.INTG_CD_VAL_DP_SEQ || BB.SPCL_CGO_APRO_CD),2,1)
                 FROM COM_INTG_CD_DTL CD
                    , BKG_BB_CGO BB
                WHERE BB.BKG_NO = BK.BKG_NO
                  AND 'CD01955' = CD.INTG_CD_ID(+)
                  AND BB.SPCL_CGO_APRO_CD = CD.INTG_CD_VAL_CTNT(+)),DECODE(BK.BB_CGO_FLG, 'Y', 'X', NULL)) AS BB
        , DECODE(BK.RD_CGO_FLG, 'Y', 'Y', 'N', NULL) RD
        , DECODE(BK.HNGR_FLG, 'Y', 'Y', 'N', NULL) HG
        , DECODE(BK.SI_FLG, 'N', 'NO', 'YES') SI
        , DECODE(BK.XTER_BKG_RQST_CD, 'CLT', 'OFF', BK.XTER_BKG_RQST_CD)  BKG_VIA
        , DECODE(BK.XTER_SI_CD,       'CLT', 'OFF', BK.XTER_SI_CD)        SI_VIA
        , REPLACE((SELECT CUST_NM FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = BK.BKG_NO AND BKG_CUST_TP_CD = 'F'), CHR(10), ' ') FORWARDER
        , DECODE(BK.CUST_TO_ORD_FLG, 'Y'
        , REPLACE((SELECT CUST_NM FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = BK.BKG_NO AND BKG_CUST_TP_CD = 'N'), CHR(10), ' ')
        , REPLACE((SELECT CUST_NM FROM BKG_CUSTOMER CUST WHERE CUST.BKG_NO = BK.BKG_NO AND BKG_CUST_TP_CD = 'C'), CHR(10), ' ')) CN_NT
        , REFNO.CUST_REF_NO_CTNT CUST_REF_NO
        , BK.OB_SREP_CD     SREP_CD
        , (SELECT SREP.srep_nm FROM MDM_SLS_REP SREP WHERE SREP.SREP_CD = BK.OB_SREP_CD) SREP_NM
        , BK.REP_CMDT_CD    REP_CMDT
        , BK.CMDT_CD        CMDT
        , (SELECT CMDT.CMDT_NM FROM MDM_COMMODITY CMDT WHERE CMDT.CMDT_CD = BK.CMDT_CD) CMDT_NM
        , BK.OB_SLS_OFC_CD  SALES_OFC
        , NVL(BK.SC_NO, NVL(BK.RFA_NO, BK.TAA_NO)) SC_RFA
		, (SELECT CUST_CNT_CD||CUST_SEQ FROM BKG_CUSTOMER BROKER WHERE BROKER.BKG_CUST_TP_CD = 'B' AND BROKER.BKG_NO = BK.BKG_NO) BROKER
		, BK.BKG_OFC_CD
		, (	SELECT COUNT(1) VVD_COUNT FROM BKG_VVD VVD WHERE VVD.BKG_NO = BK.BKG_NO AND VSL_CD IS NOT NULL) - 
          (	SELECT 
				COUNT(1) SKD_COUNT
			FROM VSK_VSL_PORT_SKD POL, 
				 VSK_VSL_PORT_SKD POD,
				 BKG_VVD VVD
         	WHERE VVD.BKG_NO = BK.BKG_NO
			AND VVD.VSL_CD       = POL.VSL_CD
			AND VVD.SKD_VOY_NO   = POL.SKD_VOY_NO
			AND VVD.SKD_DIR_CD   = POL.SKD_DIR_CD
			AND VVD.POL_CD       = POL.VPS_PORT_CD
			AND VVD.POL_YD_CD    = POL.YD_CD
			AND NVL(VVD.POL_CLPT_IND_SEQ, 1) = POL.CLPT_IND_SEQ
			AND POL.TURN_PORT_IND_CD         IN ('Y','N') 
         	AND NVL(POL.VT_ADD_CALL_FLG,'N') <> 'Y' 
			AND NVL(POL.SKD_CNG_STS_CD, 'X') <> 'S'
			AND VVD.VSL_CD       = POD.VSL_CD
			AND VVD.SKD_VOY_NO   = POD.SKD_VOY_NO
			AND VVD.SKD_DIR_CD   = POD.SKD_DIR_CD
			AND VVD.POD_CD       = POD.VPS_PORT_CD
			AND VVD.POD_YD_CD	= POD.YD_CD
			AND NVL(VVD.POD_CLPT_IND_SEQ, 1) = POD.CLPT_IND_SEQ					
			AND NVL(POD.SKD_CNG_STS_CD, 'X') <> 'S'
		  ) AS BRO_KEN_ROUTE
#if (${date_gbn} == 'Y')
  FROM BKG_BOOKING BK
        , BKG_BL_DOC BL
#else 
  FROM BKG_BL_DOC BL
        , BKG_BOOKING BK
#end

        , BKG_REFERENCE REFNO
#if (${bkg_no} == '' && ${mult_bkg_no} == '' && (${vvd} != '' || ${pol_cd} != '' || ${pod_cd} != '' || ${pol_yd_cd} != '' || ${pod_yd_cd} != ''))
        --vvd나 ROUTE 입력시
		, BKG_VVD VVD
#end
#if (${bkg_cust_tp_cd} != '' || ${cust_cnt_cd} != '' || ${cust_seq} != '' || ${cust_nm} != '') 
        --customer 입력시 
        , BKG_CUSTOMER CUST
#end
#if (${eqTpSzCd} != '') 
        --E/Q Type Size 입력시 
        , BKG_QUANTITY QTY
#end
 WHERE BK.BKG_NO = BL.BKG_NO
   AND BK.BKG_CGO_TP_CD <> 'P'
   AND BK.BKG_NO = REFNO.BKG_NO(+)
#if (${bkg_no} != '')
   --booking no 입력시 (다른 조건 전부 비활성화)
   AND BK.BKG_NO = @[bkg_no]
   AND 'EBRF' = REFNO.BKG_REF_TP_CD(+)
#elseif (${multiBkgNo} != '')
	AND BK.BKG_NO IN (
	#foreach($multiBkgNoVal IN ${multiBkgNo})        
		#if($velocityCount < $multiBkgNo.size()) '$multiBkgNoVal', #else '$multiBkgNoVal' #end
	#end
	)
	AND 'EBRF' = REFNO.BKG_REF_TP_CD(+)
#else
	#if (${bkg_cust_tp_cd} != '' || ${cust_cnt_cd} != '' || ${cust_seq} != '' || ${cust_nm} != '') 
	   --customer 입력시  
	   AND BK.BKG_NO = CUST.BKG_NO
	#end
    #if (${date_gbn} == 'Y') 
        --date : Booking 선택시
    	#if (${bkg_from_dt} != '')
    	       AND BK.BKG_CRE_DT >= TO_DATE(@[bkg_from_dt], 'YYYY-MM-DD')
    	#end
    	#if (${bkg_to_dt} != '')
    	       AND BK.BKG_CRE_DT < TO_DATE(@[bkg_to_dt], 'YYYY-MM-DD') + 1
    	#end
    #else
        --date : on board 선택시   
    	#if (${bkg_from_dt} != '')
    	     AND BL.BL_OBRD_DT >= TO_DATE(@[bkg_from_dt], 'YYYY-MM-DD')
    	#end
    	#if (${bkg_to_dt} != '')
    		 AND Bl.BL_OBRD_DT < TO_DATE(@[bkg_to_dt], 'YYYY-MM-DD') + 1
    	#end
    #end    
    #if (${vvd} != '')
       --vvd 입력시
	   AND BK.BKG_NO = VVD.BKG_NO
       AND VVD.VSL_CD     = SUBSTR(@[vvd],1,4)
       AND VVD.SKD_VOY_NO = SUBSTR(@[vvd],5,4)
       AND VVD.SKD_DIR_CD = SUBSTR(@[vvd],9,1)
    #end
	#if (${pol_cd} != '' || ${pol_yd_cd} != '' ||${pod_cd} != '' || ${pod_yd_cd} != '')
	   --por~del 입력시
 	   AND BK.BKG_NO = VVD.BKG_NO
 		#if (${pol_cd} != '')
 	       AND VVD.POL_CD        like @[pol_cd]||'%'
     	#end
	    #if (${pol_yd_cd} != '')
    	   AND VVD.POL_YD_CD    like '%'||@[pol_yd_cd]
	    #end
    	#if (${pod_cd} != '')
	       AND VVD.POD_CD        like @[pod_cd]||'%'
    	#end
	    #if (${pod_yd_cd} != '')
    	   AND VVD.POD_YD_CD    like '%'||@[pod_yd_cd]
	    #end
    #end    
    #if (${por_cd} != '')
	   AND BK.POR_CD        like @[por_cd]||'%'
    #end
	#if (${del_cd} != '')
       AND BK.DEL_CD        like @[del_cd]||'%'
	#end

    #if (${dlv_ctnt_cd} != 'All' && ${dlv_ctnt_cd} != '')
       --continent 선택시
       AND @[dlv_ctnt_cd] = (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = BK.DEL_CD)
    #end    
    #if (${bkg_sts_cd} != 'All' && ${bkg_sts_cd} != '')
       --bkg status 선택시 (CD00769, all이면 조건 제외)
       AND BK.BKG_STS_CD = @[bkg_sts_cd]
	#else
	   AND BK.BKG_STS_CD <>'X'
    #end    
    #if (${bkg_ofc_cd} != '')
       --bkg office 입력시
       AND BK.BKG_OFC_CD = @[bkg_ofc_cd]
    #end    
    #if (${bkg_stf_cd} != '')
       --bkg staff 입력시
       AND BK.DOC_USR_ID = @[bkg_stf_cd]
    #end    
    #if (${sls_ofc_cd} != '')
       --sales office 입력시
       AND BK.OB_SLS_OFC_CD = @[sls_ofc_cd]
    #end    
    #if (${srep_cd} != '')
       --sales rep 입력시
       AND BK.OB_SREP_CD = @[srep_cd]
    #end    
	#if (${dcgo_flg}!=''||${rf_flg}!=''||${awk_cgo_flg}!=''||${bb_cgo_flg}!=''||${rd_cgo_flg}!=''||${hngr_flg}!='')
	   AND ( 1 = 0
        #if (${dcgo_flg} != '')
    	--dg check시
           OR BK.DCGO_FLG = 'Y'
        #end        
        #if (${rf_flg} != '')
        --rf check시
           OR BK.RC_FLG = 'Y'
        #end        
        #if (${awk_cgo_flg} != '')
        --ak check시
           OR BK.AWK_CGO_FLG = 'Y'
        #end        
        #if (${bb_cgo_flg} != '')
        --bb check시
           OR BK.BB_CGO_FLG = 'Y'
        #end        
        #if (${rd_cgo_flg} != '')
        --rd check시 
           OR BK.RD_CGO_FLG = 'Y'
        #end
        #if (${hngr_flg} != '')
        --hg check시 
           OR BK.HNGR_FLG = 'Y'
        #end
    	)
	#end    
    #if (${bkg_cust_tp_cd} != 'All' && ${bkg_cust_tp_cd} != '')
       --customer 입력시 
       AND CUST.BKG_CUST_TP_CD = @[bkg_cust_tp_cd]--:bkgCustTpCd --drop down 선택값(CD00880, B 제외, null 선택 가능)
    #end
    #if (${cust_cnt_cd} != '')
       AND CUST.CUST_CNT_CD    = @[cust_cnt_cd]--:custCnt값
    #end
    #if (${cust_seq} != '')
       AND CUST.CUST_SEQ       = to_number(@[cust_seq])--:custSeq
    #end
    #if (${cust_nm} != '')
       AND CUST.CUST_NM  like @[cust_nm]||'%'
    #end    
	#if(${cust_ref_tp_cd} == 'All' || ${cust_ref_tp_cd} == '')
        #if(${cust_ref_no} == '')
            AND 'EBRF' = REFNO.BKG_REF_TP_CD(+)
        #end
	#else
        --customer ref No 선택 입력시
		#if(${cust_ref_tp_cd} == 'BKPO')
		    AND REFNO.BKG_REF_TP_CD IN ('BKPO','CMPO','CTPO')
			AND REFNO.CUST_REF_NO_CTNT is not null
		#else
	       AND REFNO.BKG_REF_TP_CD = @[cust_ref_tp_cd]--(CD01658, null 선택 가능)
		   AND REFNO.CUST_REF_NO_CTNT is not null
		#end
    #end
	#if (${cust_ref_no} != '')
		AND REFNO.CUST_REF_NO_CTNT = @[cust_ref_no]
	#end   
    #if (${sc_rfa_gbn} == 'S' && ${sc_rfa_no} != '')
        --s/c check시
   	    AND BK.SC_NO = @[sc_rfa_no]
	#end
    #if (${sc_rfa_gbn} == 'R' && ${sc_rfa_no} != '')
        --rfa check시   
    	AND BK.RFA_NO = @[sc_rfa_no]
	#end 
    #if (${sc_rfa_gbn} == 'T' && ${sc_rfa_no} != '')
		--taa check시
    	AND BK.TAA_NO = @[sc_rfa_no]
	#end    
    #if (${bdr_flg} != '')
       --bdr 선택시(all 제외)
       AND BL.BDR_FLG = @[bdr_flg]
    #end    
    #if (${si_cd} != '')
       --s/i 선택시(all 제외)
       AND BK.SI_FLG = @[si_cd]
    #end    
	#if (${bkgViaCd} != '')
       AND BK.XTER_BKG_RQST_CD IN (
       #foreach($bkgViaCdVal IN ${bkgViaCd})        
          #if($velocityCount < $bkgViaCd.size()) '$bkgViaCdVal', #else '$bkgViaCdVal' #end
       #end
	   )	
	#end
	#if (${siViaCd} != '')
       AND BK.XTER_SI_CD IN (
       #foreach($siViaCdVal IN ${siViaCd})        
          #if($velocityCount < $siViaCd.size()) '$siViaCdVal', #else '$siViaCdVal' #end
       #end
       )
	#end
	#if (${eqTpSzCd} != '')
       AND QTY.BKG_NO  = BK.BKG_NO
       AND QTY.CNTR_TPSZ_CD IN (
       #foreach($eqTpSzCdVal IN ${eqTpSzCd})        
          #if($velocityCount < $eqTpSzCd.size()) '$eqTpSzCdVal', #else '$eqTpSzCdVal' #end
       #end
       )
    #end
#end    
#if (${bro_ken_route} == 'on')
		AND nvl((SELECT COUNT(1) VVD_COUNT
                          FROM BKG_VVD V
                         WHERE 1=1
                           AND V.VSL_CD IS NOT NULL
                           and v.bkg_no = bk.bkg_no
                         GROUP BY V.BKG_NO),0)>
             nvl((SELECT COUNT(1) SKD_COUNT
                          FROM VSK_VSL_PORT_SKD POL,
                               VSK_VSL_PORT_SKD POD,
                               BKG_VVD VVD
                         WHERE 1=1
                           AND VVD.VSL_CD = POL.VSL_CD
                           AND VVD.SKD_VOY_NO = POL.SKD_VOY_NO
                           AND VVD.SKD_DIR_CD = POL.SKD_DIR_CD
                           AND VVD.POL_CD = POL.VPS_PORT_CD
                           AND VVD.POL_YD_CD = POL.YD_CD
                           AND NVL(VVD.POL_CLPT_IND_SEQ, 1) = POL.CLPT_IND_SEQ
                           AND NVL(POL.SKD_CNG_STS_CD, 'X') <> 'S'
                           AND VVD.VSL_CD = POD.VSL_CD
                           AND VVD.SKD_VOY_NO = POD.SKD_VOY_NO
                           AND VVD.SKD_DIR_CD = POD.SKD_DIR_CD
                           AND VVD.POD_CD = POD.VPS_PORT_CD
                           AND VVD.POD_YD_CD = POD.YD_CD
                           AND NVL(VVD.POD_CLPT_IND_SEQ, 1) = POD.CLPT_IND_SEQ
                           AND NVL(POD.SKD_CNG_STS_CD, 'X') <> 'S'
                                                      and vvd.bkg_no = bk.bkg_no
                         GROUP BY VVD.BKG_NO),0)  
#end
#if (${bkg_no} == '' && ${vvd} == '' && ${bkg_from_dt} == '' && ${multiBkgNo} == '')
and 1=2
#end
ORDER BY BK.BKG_NO			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="bkg_from_dt" type="12" value="2009-09-01" out="N"/>
				<param name="bkg_to_dt" type="12" value="2009-09-02" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pol_yd_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="pod_yd_cd" type="12" value="" out="N"/>
				<param name="por_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="dlv_ctnt_cd" type="12" value="" out="N"/>
				<param name="bkg_sts_cd" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="bkg_stf_cd" type="12" value="" out="N"/>
				<param name="sls_ofc_cd" type="12" value="" out="N"/>
				<param name="srep_cd" type="12" value="" out="N"/>
				<param name="bkg_cust_tp_cd" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="cust_nm" type="12" value="" out="N"/>
				<param name="cust_ref_tp_cd" type="12" value="" out="N"/>
				<param name="cust_ref_no" type="12" value="111" out="N"/>
				<param name="sc_rfa_no" type="12" value="" out="N"/>
				<param name="bdr_flg" type="12" value="" out="N"/>
				<param name="si_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
