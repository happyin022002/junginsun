/*=========================================================
*Copyright(c) 2014 CyberLogitec
*@FileName : CLLCDLManifestDBDAOsearchCllCdlForODCYRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2014.12.30
*@LastModifier : 
*@LastVersion : 1.0
* 2014.12.30 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.bkg.terminaldocumentation.cllcdlmanifest.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CLLCDLManifestDBDAOsearchCllCdlForODCYRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * searchCllCdlForODCY
	  * </pre>
	  */
	public CLLCDLManifestDBDAOsearchCllCdlForODCYRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("in_pod_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("in_vvd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("in_pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.bkg.terminaldocumentation.cllcdlmanifest.integration").append("\n"); 
		query.append("FileName : CLLCDLManifestDBDAOsearchCllCdlForODCYRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("#if (${in_list_type} == 'L' ) 	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT  " ).append("\n"); 
		query.append("       DISTINCT" ).append("\n"); 
		query.append("       'O' AS BOUND" ).append("\n"); 
		query.append("       , BK.BKG_NO AS BKG_NO " ).append("\n"); 
		query.append("       , BK.BL_NO||BK.BL_TP_CD AS BL_NO " ).append("\n"); 
		query.append("       , BK.SPLIT_FLG AS SPLIT" ).append("\n"); 
		query.append("       , NVL(TO_CHAR(VA.ACT_ATD_INP_DT, 'YYYY-MM-DD HH24:MI:SS'), '') AS ATD_DT --UPDATE: NULL" ).append("\n"); 
		query.append("       , NVL(TO_CHAR(VA.ACT_ATA_INP_DT, 'YYYY-MM-DD HH24:MI:SS'), '') AS ATA_DT --UPDATE:" ).append("\n"); 
		query.append("       , NVL(AK.OVR_FWRD_LEN, '') AS AWK_FRONT" ).append("\n"); 
		query.append("       , NVL(AK.OVR_HGT, '') AS AWK_HEIGHT" ).append("\n"); 
		query.append("       , NVL(AK.OVR_LF_LEN, '') AS AWK_LEFT" ).append("\n"); 
		query.append("       , NVL(AK.OVR_BKWD_LEN, '') AS AWK_REAR" ).append("\n"); 
		query.append("       , NVL(AK.OVR_RT_LEN, '') AS AWK_RIGHT" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , ROUND(BD.ACT_WGT, 0) AS BKG_ACT_WGT " ).append("\n"); 
		query.append("       , BD.WGT_UT_CD AS BKG_ACT_WGT_TP_CD" ).append("\n"); 
		query.append("       , DECODE(BK.BKG_CGO_TP_CD, 'F', 'F', 'E') AS BKG_CGO_TP_CD" ).append("\n"); 
		query.append("       , BK.HOT_DE_FLG AS BKG_HOT_DEL_FLG" ).append("\n"); 
		query.append("       , BD.MEAS_QTY AS BKG_MEAS_QTY " ).append("\n"); 
		query.append("       , BD.MEAS_UT_CD AS BKG_MEAS_TP_CD" ).append("\n"); 
		query.append("       , BK.BKG_STS_CD AS BKG_STS_CD" ).append("\n"); 
		query.append("       , BV.VSL_CD AS CARRIER_VSL_CD" ).append("\n"); 
		query.append("       , BV.SKD_VOY_NO||BV.SKD_DIR_CD AS CARRIERS_VOY_NO" ).append("\n"); 
		query.append("       , MC.CMDT_NM AS CMDY_NM" ).append("\n"); 
		query.append("       , REPLACE(TRANSLATE(NVL(CU.CUST_NM, ''),CHR(10), ' '), '''', ' ') AS CNEE_NM" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , BC.MEAS_QTY AS CNTR_MEAS_QTY" ).append("\n"); 
		query.append("       , BC.MEAS_UT_CD AS CNTR_MEAS_TP_CD" ).append("\n"); 
		query.append("       , BC.CNTR_NO AS CNTR_NO" ).append("\n"); 
		query.append("       , BC.CNTR_TPSZ_CD AS CNTR_TPSZ_CD --NVL(BC.CNTR_TPSZ_CD, BQ.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("       , ROUND(BC.CNTR_WGT, 0) AS CNTR_WGT_QTY" ).append("\n"); 
		query.append("       , BC.WGT_UT_CD AS CNTR_WGT_TP_CD" ).append("\n"); 
		query.append("       , BD.CSTMS_DESC AS CSTMS_RMK" ).append("\n"); 
		query.append("       , BK.DEL_CD AS DEL_LOC" ).append("\n"); 
		query.append("       --, DECODE(BK.BKG_CGO_TP_CD, 'F', 'B', 'A') AS DEPOT_CD --UPDATE: DELETE DEFAULT: MT-A(물류1), FULL-B(명강)" ).append("\n"); 
		query.append("       , NULL AS DEPOT_CD" ).append("\n"); 
		query.append("       , MAX(NVL(DG.IMDG_CLSS_CD, '')) AS DG_CLS" ).append("\n"); 
		query.append("       --, DECODE(NVL(MO.DMG_FLG, ''), 'Y', 'D', 'S') AS DMG_STS" ).append("\n"); 
		query.append("       , NULL AS DMG_STS" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , MAX(NVL(DG.EMS_NO, '')) AS EMS" ).append("\n"); 
		query.append("       , TO_CHAR(VS.VPS_ETA_DT, 'YYYY-MM-DD HH24:MI:SS') AS ETA_DT" ).append("\n"); 
		query.append("       , TO_CHAR(VS.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI:SS') AS ETD_DT" ).append("\n"); 
		query.append("       , MAX(NVL(DG.FLSH_PNT_CDO_TEMP, '')) AS FSH_POINT" ).append("\n"); 
		query.append("       , NVL(RF.HUMID_NO, '') AS HUMIDITY " ).append("\n"); 
		query.append("       --, BV.SLAN_CD AS LANE_CODE " ).append("\n"); 
		query.append("       , (SELECT SLAN_CD FROM BKG_VVD WHERE BKG_NO = BK.BKG_NO AND VSL_PRE_PST_CD = 'T') AS LANE_CODE" ).append("\n"); 
		query.append("       , MAX(NVL(DG.MRN_POLUT_FLG, '')) AS MAR_POL" ).append("\n"); 
		query.append("       , MAX(NVL(DG.IMDG_PCK_GRP_CD, '')) AS PKG_GRP" ).append("\n"); 
		query.append("       , BD.PCK_QTY AS BKG_PKG_QTY " ).append("\n"); 
		query.append("       , BD.PCK_TP_CD AS BKG_PKG_TP_CD " ).append("\n"); 
		query.append("       , BV.POD_CD AS POD_LOC --UPDATE: BK -> BV" ).append("\n"); 
		query.append("       , BV.POL_CD AS POL_LOC --UPDATE: BK -> BV" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , MR.REP_CMDT_NM AS RE_CMMD_NM" ).append("\n"); 
		query.append("       , NVL(RF.CDO_TEMP, '') AS RF_TEMP" ).append("\n"); 
		query.append("       --, NVL(RF.CNTR_VENT_TP_CD, '') AS VENT" ).append("\n"); 
		query.append("       , NVL(RF.VENT_RTO, '') AS VENT" ).append("\n"); 
		query.append("       , NVL(CS.CNTR_SEAL_NO, '') AS SEAL_NO" ).append("\n"); 
		query.append("       , REPLACE(TRANSLATE(NVL(CU2.CUST_NM, ''),CHR(10), ' '), '''', ' ') AS SHPR_NM" ).append("\n"); 
		query.append("       , BC.SOC_FLG AS SOC_IND " ).append("\n"); 
		query.append("       , MAX(DECODE(DG.IMDG_SUBS_RSK_LBL_CD1, NULL, 'N', 'Y')) AS SUBSI_RSK_FLG --NVL(DG.imdg_subs_rsk_lbl_cd1, 'N')" ).append("\n"); 
		query.append("       , MAX(NVL(DG.IMDG_UN_NO, '')) AS UN_CD" ).append("\n"); 
		query.append("       --ADD" ).append("\n"); 
		query.append("       , BC.PCK_QTY AS CNTR_PKG_QTY " ).append("\n"); 
		query.append("       , BC.PCK_TP_CD AS CNTR_PKG_TP_CD " ).append("\n"); 
		query.append("       , BK.DCGO_FLG AS DG_CGO_FLAG" ).append("\n"); 
		query.append("       , BK.RC_FLG AS RF_FLAG" ).append("\n"); 
		query.append("       , BK.AWK_CGO_FLG AS AK_FLAG" ).append("\n"); 
		query.append("       , BK.HNGR_FLG AS HG_FLAG" ).append("\n"); 
		query.append("       , BK.EQ_SUBST_FLG AS EQ_SUB_FLAG" ).append("\n"); 
		query.append("       , BK.RD_CGO_FLG AS RD_FLAG" ).append("\n"); 
		query.append("       , BK.FULL_RTN_YD_CD AS DST_SVC_ROUT" ).append("\n"); 
		query.append("       , BK.XTER_RMK AS EXT_REMARK" ).append("\n"); 
		query.append("       , (CASE" ).append("\n"); 
		query.append("            WHEN BK.SPLIT_FLG = 'Y' AND BK.FM_BKG_NO IS NULL THEN 'M'   --MASTER" ).append("\n"); 
		query.append("            WHEN BK.SPLIT_FLG = 'Y' AND BK.FM_BKG_NO IS NOT NULL AND" ).append("\n"); 
		query.append("              (SELECT 'X' " ).append("\n"); 
		query.append("              FROM BKG_BOOKING B, BKG_VVD V" ).append("\n"); 
		query.append("              WHERE B.BKG_NO = BK.FM_BKG_NO " ).append("\n"); 
		query.append("              AND   B.BKG_NO = V.BKG_NO" ).append("\n"); 
		query.append("              AND   V.VSL_CD = BV.VSL_CD" ).append("\n"); 
		query.append("              AND   V.SKD_VOY_NO = BV.SKD_VOY_NO" ).append("\n"); 
		query.append("              AND   V.SKD_DIR_CD = BV.SKD_DIR_CD) IS NOT NULL THEN 'S'   --SPLIT" ).append("\n"); 
		query.append("            ELSE 'B'" ).append("\n"); 
		query.append("         END) BKG_TP" ).append("\n"); 
		query.append("       , DECODE(BK.SPLIT_FLG,'Y',BK.FM_BKG_NO,NULL) AS MST_BKG_NO " ).append("\n"); 
		query.append("FROM   BKG_VVD BV" ).append("\n"); 
		query.append("       , BKG_BOOKING BK" ).append("\n"); 
		query.append("       , BKG_CONTAINER BC       " ).append("\n"); 
		query.append("       , BKG_CUSTOMER CU" ).append("\n"); 
		query.append("       , BKG_CUSTOMER CU2" ).append("\n"); 
		query.append("       , BKG_BL_DOC BD" ).append("\n"); 
		query.append("       , MDM_COMMODITY MC" ).append("\n"); 
		query.append("       , MDM_REP_CMDT MR" ).append("\n"); 
		query.append("       , MST_CONTAINER MO" ).append("\n"); 
		query.append("       , BKG_CNTR_SEAL_NO CS" ).append("\n"); 
		query.append("       , VSK_VSL_PORT_SKD VS" ).append("\n"); 
		query.append("       , VSK_ACT_PORT_SKD VA" ).append("\n"); 
		query.append("       , BKG_DG_CGO DG" ).append("\n"); 
		query.append("       , BKG_RF_CGO RF" ).append("\n"); 
		query.append("       , BKG_AWK_CGO AK  " ).append("\n"); 
		query.append("--          " ).append("\n"); 
		query.append("WHERE  BV.vsl_cd           = SUBSTR(@[in_vvd_cd],1,4)" ).append("\n"); 
		query.append("AND    BV.skd_voy_no       = SUBSTR(@[in_vvd_cd],5,4)" ).append("\n"); 
		query.append("AND    BV.skd_dir_cd       = SUBSTR(@[in_vvd_cd],9,1)" ).append("\n"); 
		query.append("AND    BV.pol_cd           = @[in_pol_cd] --OUTBOUND" ).append("\n"); 
		query.append("AND    BV.bkg_no           = BK.bkg_no" ).append("\n"); 
		query.append("AND    BV.pol_cd           = BK.pol_cd --OUTBOUND (LOCAL, EXCEPT T/S CARGO)" ).append("\n"); 
		query.append("AND    BK.bkg_sts_cd       IN ('F', 'W', 'A') --F:Firm, W:Wait, A:Advanced" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.bkg_no           = BC.bkg_no" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.bkg_no           = CU.bkg_no" ).append("\n"); 
		query.append("AND    CU.bkg_cust_tp_cd   = 'C' --CONSIGNEE" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.bkg_no           = CU2.bkg_no" ).append("\n"); 
		query.append("AND    CU2.bkg_cust_tp_cd  = 'S' --SHIPPER" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.bkg_no           = BD.bkg_no" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.CMDT_CD          = MC.CMDT_CD(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.REP_CMDT_CD      = MR.REP_CMDT_CD(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BC.cntr_no          = MO.cntr_no(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BC.bkg_no           = CS.bkg_no(+)" ).append("\n"); 
		query.append("AND    BC.cntr_no          = CS.cntr_no(+)" ).append("\n"); 
		query.append("AND    CS.cntr_seal_seq(+) = 1" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BV.vsl_cd           = VS.vsl_cd" ).append("\n"); 
		query.append("AND    BV.skd_voy_no       = VS.skd_voy_no" ).append("\n"); 
		query.append("AND    BV.skd_dir_cd       = VS.skd_dir_cd" ).append("\n"); 
		query.append("AND    BV.pol_cd           = VS.vps_port_cd  --OUTBOUND" ).append("\n"); 
		query.append("AND    VS.clpt_ind_seq     = '1'" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    VS.VSL_CD           = VA.VSL_CD(+)" ).append("\n"); 
		query.append("AND    VS.SKD_VOY_NO       = VA.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("AND    VS.SKD_DIR_CD       = VA.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND    VS.VPS_PORT_CD      = VA.VPS_PORT_CD(+)" ).append("\n"); 
		query.append("AND    VA.CLPT_IND_SEQ(+)  = '1'" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BC.bkg_no           = DG.bkg_no(+)" ).append("\n"); 
		query.append("AND    BC.cntr_no          = DG.cntr_no(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BC.bkg_no           = RF.bkg_no(+)" ).append("\n"); 
		query.append("AND    BC.cntr_no          = RF.cntr_no(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BC.bkg_no           = AK.bkg_no(+)" ).append("\n"); 
		query.append("AND    BC.cntr_no          = AK.cntr_no(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("       'O' " ).append("\n"); 
		query.append("       , BK.BKG_NO  " ).append("\n"); 
		query.append("       , BK.BL_NO||BK.BL_TP_CD  " ).append("\n"); 
		query.append("       , BK.SPLIT_FLG " ).append("\n"); 
		query.append("       , NVL(TO_CHAR(VA.ACT_ATD_INP_DT, 'YYYY-MM-DD HH24:MI:SS'), '')" ).append("\n"); 
		query.append("       , NVL(TO_CHAR(VA.ACT_ATA_INP_DT, 'YYYY-MM-DD HH24:MI:SS'), '')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       , NVL(AK.OVR_FWRD_LEN, '') " ).append("\n"); 
		query.append("       , NVL(AK.OVR_HGT, '') " ).append("\n"); 
		query.append("       , NVL(AK.OVR_LF_LEN, '') " ).append("\n"); 
		query.append("       , NVL(AK.OVR_BKWD_LEN, '') " ).append("\n"); 
		query.append("       , NVL(AK.OVR_RT_LEN, '') " ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , ROUND(BD.ACT_WGT, 0)  " ).append("\n"); 
		query.append("       , BD.WGT_UT_CD " ).append("\n"); 
		query.append("       , DECODE(BK.BKG_CGO_TP_CD, 'F', 'F', 'E') " ).append("\n"); 
		query.append("       , BK.HOT_DE_FLG " ).append("\n"); 
		query.append("       , BD.MEAS_QTY " ).append("\n"); 
		query.append("       , BD.MEAS_UT_CD " ).append("\n"); 
		query.append("       , BK.BKG_STS_CD " ).append("\n"); 
		query.append("       , BV.VSL_CD " ).append("\n"); 
		query.append("       , BV.SKD_VOY_NO" ).append("\n"); 
		query.append("       , BV.SKD_DIR_CD " ).append("\n"); 
		query.append("       , MC.CMDT_NM " ).append("\n"); 
		query.append("       , REPLACE(TRANSLATE(NVL(CU.CUST_NM, ''),CHR(10), ' '), '''', ' ') " ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , BC.MEAS_QTY " ).append("\n"); 
		query.append("       , BC.MEAS_UT_CD " ).append("\n"); 
		query.append("       , BC.CNTR_NO " ).append("\n"); 
		query.append("       , BC.CNTR_TPSZ_CD " ).append("\n"); 
		query.append("       , ROUND(BC.CNTR_WGT, 0) " ).append("\n"); 
		query.append("       , BC.WGT_UT_CD " ).append("\n"); 
		query.append("       , BD.CSTMS_DESC " ).append("\n"); 
		query.append("       , BK.DEL_CD " ).append("\n"); 
		query.append("       , DECODE(BK.BKG_CGO_TP_CD, 'F', 'B', 'A') " ).append("\n"); 
		query.append("       , DECODE(NVL(MO.DMG_FLG, ''), 'Y', 'D', 'S') " ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , TO_CHAR(VS.VPS_ETA_DT, 'YYYY-MM-DD HH24:MI:SS') " ).append("\n"); 
		query.append("       , TO_CHAR(VS.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI:SS') " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       , NVL(RF.HUMID_NO, '') " ).append("\n"); 
		query.append("       , BV.SLAN_CD " ).append("\n"); 
		query.append("       , BD.PCK_QTY " ).append("\n"); 
		query.append("       , BD.PCK_TP_CD " ).append("\n"); 
		query.append("       , BV.POD_CD --UPDATE:" ).append("\n"); 
		query.append("       , BV.POL_CD --UPDATE:" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , MR.REP_CMDT_NM " ).append("\n"); 
		query.append("       , NVL(RF.CDO_TEMP, '') " ).append("\n"); 
		query.append("       , NVL(RF.VENT_RTO, '') " ).append("\n"); 
		query.append("       , NVL(CS.CNTR_SEAL_NO, '') " ).append("\n"); 
		query.append("       , REPLACE(TRANSLATE(NVL(CU2.CUST_NM, ''),CHR(10), ' '), '''', ' ') " ).append("\n"); 
		query.append("       , BC.PCK_QTY " ).append("\n"); 
		query.append("       , BC.PCK_TP_CD        " ).append("\n"); 
		query.append("       , BC.SOC_FLG" ).append("\n"); 
		query.append("       , BK.DCGO_FLG" ).append("\n"); 
		query.append("       , BK.RC_FLG" ).append("\n"); 
		query.append("       , BK.AWK_CGO_FLG" ).append("\n"); 
		query.append("       , BK.HNGR_FLG" ).append("\n"); 
		query.append("       , BK.EQ_SUBST_FLG " ).append("\n"); 
		query.append("       , BK.RD_CGO_FLG" ).append("\n"); 
		query.append("       , BK.FULL_RTN_YD_CD" ).append("\n"); 
		query.append("       , BK.XTER_RMK  " ).append("\n"); 
		query.append("       , BK.FM_BKG_NO" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-------------------------------------NOT EXIST CONTAINER NO." ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("       'O' AS BOUND" ).append("\n"); 
		query.append("       , BB.BKG_NO " ).append("\n"); 
		query.append("       , BB.BL_NO " ).append("\n"); 
		query.append("       , BB.SPLIT" ).append("\n"); 
		query.append("       , TO_CHAR(BB.ATD_DT, 'YYYY-MM-DD HH24:MI:SS') ATD_DT" ).append("\n"); 
		query.append("       , TO_CHAR(BB.ATA_DT, 'YYYY-MM-DD HH24:MI:SS') ATA_DT" ).append("\n"); 
		query.append("       , BB.AWK_FRONT" ).append("\n"); 
		query.append("       , BB.AWK_HEIGHT" ).append("\n"); 
		query.append("       , BB.AWK_LEFT" ).append("\n"); 
		query.append("       , BB.AWK_REAR" ).append("\n"); 
		query.append("       , BB.AWK_RIGHT" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , BB.BKG_ACT_WGT " ).append("\n"); 
		query.append("       , BB.BKG_ACT_WGT_TP_CD" ).append("\n"); 
		query.append("       , BB.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("       , BB.BKG_HOT_DEL_FLG" ).append("\n"); 
		query.append("       , BB.BKG_MEAS_QTY " ).append("\n"); 
		query.append("       , BB.BKG_MEAS_TP_CD" ).append("\n"); 
		query.append("       , BB.BKG_STS_CD" ).append("\n"); 
		query.append("       , BB.CARRIER_VSL_CD" ).append("\n"); 
		query.append("       , BB.CARRIERS_VOY_NO" ).append("\n"); 
		query.append("       , BB.CMDY_NM" ).append("\n"); 
		query.append("       , BB.CNEE_NM" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , BB.CNTR_MEAS_QTY" ).append("\n"); 
		query.append("       , BB.CNTR_MEAS_TP_CD" ).append("\n"); 
		query.append("       , '' AS CNTR_NO" ).append("\n"); 
		query.append("       , BB.CNTR_TPSZ_CD " ).append("\n"); 
		query.append("       , BB.CNTR_WGT_QTY" ).append("\n"); 
		query.append("       , BB.CNTR_WGT_TP_CD" ).append("\n"); 
		query.append("       , BB.CSTMS_RMK" ).append("\n"); 
		query.append("       , BB.DEL_LOC" ).append("\n"); 
		query.append("       , BB.DEPOT_CD " ).append("\n"); 
		query.append("       , BB.DG_CLS" ).append("\n"); 
		query.append("       , NULL AS DMG_STS" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , BB.EMS" ).append("\n"); 
		query.append("       , TO_CHAR(BB.ETA_DT, 'YYYY-MM-DD HH24:MI:SS') ETA_DT" ).append("\n"); 
		query.append("       , TO_CHAR(BB.ETD_DT, 'YYYY-MM-DD HH24:MI:SS') ETD_DT" ).append("\n"); 
		query.append("       , BB.FSH_POINT" ).append("\n"); 
		query.append("       , BB.HUMIDITY " ).append("\n"); 
		query.append("       , BB.LANE_CODE " ).append("\n"); 
		query.append("       , BB.MAR_POL" ).append("\n"); 
		query.append("       , BB.PKG_GRP" ).append("\n"); 
		query.append("       , BB.BKG_PKG_QTY " ).append("\n"); 
		query.append("       , BB.BKG_PKG_TP_CD " ).append("\n"); 
		query.append("       , BB.POD_LOC" ).append("\n"); 
		query.append("       , BB.POL_LOC" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , BB.RE_CMMD_NM" ).append("\n"); 
		query.append("       , BB.RF_TEMP" ).append("\n"); 
		query.append("       , BB.VENT" ).append("\n"); 
		query.append("       , '' AS SEAL_NO" ).append("\n"); 
		query.append("       , BB.SHPR_NM" ).append("\n"); 
		query.append("       , '' AS SOC_IND       " ).append("\n"); 
		query.append("       , BB.SUBSI_RSK_FLG " ).append("\n"); 
		query.append("       , BB.UN_CD" ).append("\n"); 
		query.append("       --ADD" ).append("\n"); 
		query.append("       , BB.CNTR_PKG_QTY" ).append("\n"); 
		query.append("       , BB.CNTR_PKG_TP_CD" ).append("\n"); 
		query.append("       , BB.DG_CGO_FLAG" ).append("\n"); 
		query.append("       , BB.RF_FLAG" ).append("\n"); 
		query.append("       , BB.AK_FLAG" ).append("\n"); 
		query.append("       , BB.HG_FLAG" ).append("\n"); 
		query.append("       , BB.EQ_SUB_FLAG" ).append("\n"); 
		query.append("       , BB.RD_FLAG" ).append("\n"); 
		query.append("       , BB.DST_SVC_ROUT" ).append("\n"); 
		query.append("       , BB.EXT_REMARK    " ).append("\n"); 
		query.append("       , (CASE" ).append("\n"); 
		query.append("            WHEN BB.SPLIT = 'Y' AND BB.FM_BKG_NO IS NULL THEN 'M'   --MASTER" ).append("\n"); 
		query.append("            WHEN BB.SPLIT = 'Y' AND BB.FM_BKG_NO IS NOT NULL AND" ).append("\n"); 
		query.append("              (SELECT 'X' " ).append("\n"); 
		query.append("              FROM BKG_BOOKING B, BKG_VVD V" ).append("\n"); 
		query.append("              WHERE B.BKG_NO = BB.FM_BKG_NO " ).append("\n"); 
		query.append("              AND   B.BKG_NO = V.BKG_NO" ).append("\n"); 
		query.append("              AND   V.VSL_CD = BB.CARRIER_VSL_CD" ).append("\n"); 
		query.append("              AND   V.SKD_VOY_NO = BB.SKD_VOY_NO" ).append("\n"); 
		query.append("              AND   V.SKD_DIR_CD = BB.SKD_DIR_CD) IS NOT NULL THEN 'S'   --SPLIT" ).append("\n"); 
		query.append("            ELSE 'B'" ).append("\n"); 
		query.append("         END) BKG_TP" ).append("\n"); 
		query.append("       , DECODE(BB.SPLIT,'Y',BB.FM_BKG_NO,NULL) AS MST_BKG_NO      " ).append("\n"); 
		query.append("--       " ).append("\n"); 
		query.append("FROM   (       " ).append("\n"); 
		query.append("        SELECT  " ).append("\n"); 
		query.append("               DISTINCT" ).append("\n"); 
		query.append("               BQ.OP_CNTR_QTY AS QTY_CNT, AA.CNTR_CNT AS CNTR_CNT, CEIL(BQ.OP_CNTR_QTY - NVL(AA.CNTR_CNT, 0)) AS QTY" ).append("\n"); 
		query.append("               , BK.BKG_NO AS BKG_NO" ).append("\n"); 
		query.append("               , BK.BL_NO||BK.BL_TP_CD AS BL_NO" ).append("\n"); 
		query.append("               , BK.SPLIT_FLG AS SPLIT" ).append("\n"); 
		query.append("               , NVL(VA.ACT_ATD_INP_DT, '') AS ATD_DT" ).append("\n"); 
		query.append("               , NVL(VA.ACT_ATA_INP_DT, '') AS ATA_DT" ).append("\n"); 
		query.append("               , NVL(AK.OVR_FWRD_LEN, '') AS AWK_FRONT" ).append("\n"); 
		query.append("               , NVL(AK.OVR_HGT, '') AS AWK_HEIGHT" ).append("\n"); 
		query.append("               , NVL(AK.OVR_LF_LEN, '') AS AWK_LEFT" ).append("\n"); 
		query.append("               , NVL(AK.OVR_BKWD_LEN, '') AS AWK_REAR" ).append("\n"); 
		query.append("               , NVL(AK.OVR_RT_LEN, '') AS AWK_RIGHT" ).append("\n"); 
		query.append("               , ROUND(BD.ACT_WGT, 0) AS BKG_ACT_WGT" ).append("\n"); 
		query.append("               , BD.WGT_UT_CD AS BKG_ACT_WGT_TP_CD" ).append("\n"); 
		query.append("               , DECODE(BK.BKG_CGO_TP_CD, 'F', 'F', 'E') AS BKG_CGO_TP_CD" ).append("\n"); 
		query.append("               , BK.HOT_DE_FLG AS BKG_HOT_DEL_FLG" ).append("\n"); 
		query.append("               , BD.MEAS_QTY AS BKG_MEAS_QTY" ).append("\n"); 
		query.append("               , BD.MEAS_UT_CD AS BKG_MEAS_TP_CD" ).append("\n"); 
		query.append("               , BK.BKG_STS_CD AS BKG_STS_CD" ).append("\n"); 
		query.append("               , BV.VSL_CD AS CARRIER_VSL_CD" ).append("\n"); 
		query.append("               , BV.SKD_VOY_NO||BV.SKD_DIR_CD AS CARRIERS_VOY_NO" ).append("\n"); 
		query.append("               , BV.SKD_VOY_NO" ).append("\n"); 
		query.append("               , BV.SKD_DIR_CD" ).append("\n"); 
		query.append("               , MC.CMDT_NM AS CMDY_NM" ).append("\n"); 
		query.append("               , REPLACE(TRANSLATE(NVL(CU.CUST_NM, ''),CHR(10), ' '), '''', ' ') AS CNEE_NM" ).append("\n"); 
		query.append("               --, ROUND(BD.MEAS_QTY/BQ.OP_CNTR_QTY, 0) AS CNTR_MEAS_QTY" ).append("\n"); 
		query.append("               , NULL AS CNTR_MEAS_QTY" ).append("\n"); 
		query.append("               , BD.MEAS_UT_CD AS CNTR_MEAS_TP_CD" ).append("\n"); 
		query.append("               , BQ.CNTR_TPSZ_CD AS CNTR_TPSZ_CD" ).append("\n"); 
		query.append("               --, ROUND(BD.ACT_WGT/BQ.OP_CNTR_QTY, 0) AS CNTR_WGT_QTY" ).append("\n"); 
		query.append("               , NULL AS CNTR_WGT_QTY" ).append("\n"); 
		query.append("               , BD.WGT_UT_CD AS CNTR_WGT_TP_CD" ).append("\n"); 
		query.append("               , BD.CSTMS_DESC AS CSTMS_RMK" ).append("\n"); 
		query.append("               , BK.DEL_CD AS DEL_LOC" ).append("\n"); 
		query.append("               --, DECODE(BK.BKG_CGO_TP_CD, 'F', 'B', 'A') AS DEPOT_CD --DEFAULT: MT-A(물류1), FULL-B(명강)" ).append("\n"); 
		query.append("               , NULL AS DEPOT_CD" ).append("\n"); 
		query.append("               , MAX(NVL(DG.IMDG_CLSS_CD, '')) AS DG_CLS" ).append("\n"); 
		query.append("               , MAX(NVL(DG.EMS_NO, '')) AS EMS" ).append("\n"); 
		query.append("               , VS.VPS_ETA_DT AS ETA_DT" ).append("\n"); 
		query.append("               , VS.VPS_ETD_DT AS ETD_DT" ).append("\n"); 
		query.append("               , MAX(NVL(DG.FLSH_PNT_CDO_TEMP, '')) AS FSH_POINT" ).append("\n"); 
		query.append("               , NVL(RF.HUMID_NO, '') AS HUMIDITY " ).append("\n"); 
		query.append("               -- BV.SLAN_CD AS LANE_CODE " ).append("\n"); 
		query.append("               , (SELECT SLAN_CD FROM BKG_VVD WHERE BKG_NO = BK.BKG_NO AND VSL_PRE_PST_CD = 'T') AS LANE_CODE" ).append("\n"); 
		query.append("               , MAX(NVL(DG.MRN_POLUT_FLG, '')) AS MAR_POL" ).append("\n"); 
		query.append("               , MAX(NVL(DG.IMDG_PCK_GRP_CD, '')) AS PKG_GRP" ).append("\n"); 
		query.append("               , BD.PCK_QTY AS BKG_PKG_QTY " ).append("\n"); 
		query.append("               , BD.PCK_TP_CD AS BKG_PKG_TP_CD" ).append("\n"); 
		query.append("               , BV.POD_CD AS POD_LOC --UPDATE: BK -> BV" ).append("\n"); 
		query.append("               , BV.POL_CD AS POL_LOC --UPDATE: BK -> BV" ).append("\n"); 
		query.append("               , MR.REP_CMDT_NM AS RE_CMMD_NM" ).append("\n"); 
		query.append("               , NVL(RF.CDO_TEMP, '') AS RF_TEMP" ).append("\n"); 
		query.append("               , NVL(RF.VENT_RTO, '') AS VENT" ).append("\n"); 
		query.append("               , REPLACE(TRANSLATE(NVL(CU2.CUST_NM, ''),CHR(10), ' '), '''', ' ') AS SHPR_NM" ).append("\n"); 
		query.append("               , MAX(DECODE(DG.IMDG_SUBS_RSK_LBL_CD1, NULL, 'N', 'Y')) AS SUBSI_RSK_FLG --NVL(DG.imdg_subs_rsk_lbl_cd1, 'N')" ).append("\n"); 
		query.append("               , MAX(NVL(DG.IMDG_UN_NO, '')) AS UN_CD" ).append("\n"); 
		query.append("               --ADD" ).append("\n"); 
		query.append("               , NULL AS CNTR_PKG_QTY" ).append("\n"); 
		query.append("               , NULL AS CNTR_PKG_TP_CD" ).append("\n"); 
		query.append("               , BK.DCGO_FLG AS DG_CGO_FLAG" ).append("\n"); 
		query.append("               , BK.RC_FLG AS RF_FLAG" ).append("\n"); 
		query.append("               , BK.AWK_CGO_FLG AS AK_FLAG" ).append("\n"); 
		query.append("               , BK.HNGR_FLG AS HG_FLAG" ).append("\n"); 
		query.append("               , BK.EQ_SUBST_FLG AS EQ_SUB_FLAG" ).append("\n"); 
		query.append("               , BK.RD_CGO_FLG AS RD_FLAG" ).append("\n"); 
		query.append("               , BK.FULL_RTN_YD_CD AS DST_SVC_ROUT" ).append("\n"); 
		query.append("               , BK.XTER_RMK AS EXT_REMARK          " ).append("\n"); 
		query.append("               , BK.FM_BKG_NO    " ).append("\n"); 
		query.append("        --       " ).append("\n"); 
		query.append("        FROM   BKG_VVD BV" ).append("\n"); 
		query.append("               , BKG_BOOKING BK" ).append("\n"); 
		query.append("               , BKG_QUANTITY BQ       " ).append("\n"); 
		query.append("               , BKG_CUSTOMER CU" ).append("\n"); 
		query.append("               , BKG_CUSTOMER CU2" ).append("\n"); 
		query.append("               , BKG_BL_DOC BD" ).append("\n"); 
		query.append("               , MDM_COMMODITY MC" ).append("\n"); 
		query.append("               , MDM_REP_CMDT MR" ).append("\n"); 
		query.append("               , VSK_VSL_PORT_SKD VS" ).append("\n"); 
		query.append("               , VSK_ACT_PORT_SKD VA" ).append("\n"); 
		query.append("               , BKG_DG_CGO DG" ).append("\n"); 
		query.append("               , BKG_RF_CGO RF" ).append("\n"); 
		query.append("               , BKG_AWK_CGO AK " ).append("\n"); 
		query.append("               ," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                    SELECT DISTINCT" ).append("\n"); 
		query.append("                           BC.bkg_no AS BKGNO, BC.cntr_tpsz_cd AS TPSZ, COUNT(*) AS CNTR_CNT" ).append("\n"); 
		query.append("                    FROM   bkg_vvd BV" ).append("\n"); 
		query.append("                           , bkg_booking BK" ).append("\n"); 
		query.append("                           , bkg_container BC" ).append("\n"); 
		query.append("                    WHERE  BV.vsl_cd     = SUBSTR(@[in_vvd_cd],1,4)" ).append("\n"); 
		query.append("                    AND    BV.skd_voy_no = SUBSTR(@[in_vvd_cd],5,4)" ).append("\n"); 
		query.append("                    AND    BV.skd_dir_cd = SUBSTR(@[in_vvd_cd],9,1)" ).append("\n"); 
		query.append("                    AND    BV.pol_cd     = @[in_pol_cd]  --OUTBOUND" ).append("\n"); 
		query.append("                    AND    BV.bkg_no     = BK.bkg_no" ).append("\n"); 
		query.append("                    AND    BV.pol_cd     = BK.pol_cd --OUTBOUND(LOCAL, EXCEPT T/S)" ).append("\n"); 
		query.append("                    AND    BK.bkg_sts_cd IN ('F', 'W', 'A') --F:Firm, W:Wait, A:Advanced" ).append("\n"); 
		query.append("                    AND    BK.bkg_no     = BC.bkg_no    " ).append("\n"); 
		query.append("                    GROUP BY BC.bkg_no, BC.cntr_tpsz_cd     " ).append("\n"); 
		query.append("                 ) AA               " ).append("\n"); 
		query.append("        --          " ).append("\n"); 
		query.append("        WHERE  BV.vsl_cd           = SUBSTR(@[in_vvd_cd],1,4)" ).append("\n"); 
		query.append("        AND    BV.skd_voy_no       = SUBSTR(@[in_vvd_cd],5,4)" ).append("\n"); 
		query.append("        AND    BV.skd_dir_cd       = SUBSTR(@[in_vvd_cd],9,1)" ).append("\n"); 
		query.append("        AND    BV.pol_cd           = @[in_pol_cd]  --OUTBOUND" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BV.bkg_no           = BK.bkg_no" ).append("\n"); 
		query.append("        AND    BV.pol_cd           = BK.pol_cd --OUTBOUND(LOCAL, EXCEPT T/S CARGO)" ).append("\n"); 
		query.append("        AND    BK.bkg_sts_cd       IN ('F', 'W', 'A') --F:Firm, W:Wait, A:Advanced" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BK.bkg_no           = BQ.bkg_no" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BK.bkg_no           = CU.bkg_no" ).append("\n"); 
		query.append("        AND    CU.bkg_cust_tp_cd   = 'C' --CONSIGNEE" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BK.bkg_no           = CU2.bkg_no" ).append("\n"); 
		query.append("        AND    CU2.bkg_cust_tp_cd  = 'S' --SHIPPER" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BK.bkg_no           = BD.bkg_no" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BK.CMDT_CD          = MC.CMDT_CD(+)" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BK.REP_CMDT_CD      = MR.REP_CMDT_CD(+)" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BV.VSL_CD           = VS.VSL_CD" ).append("\n"); 
		query.append("        AND    BV.SKD_VOY_NO       = VS.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND    BV.SKD_DIR_CD       = VS.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND    BV.pol_cd           = VS.vps_port_cd  --OUTBOUND" ).append("\n"); 
		query.append("        AND    VS.clpt_ind_seq     = '1'" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    VS.VSL_CD           = VA.VSL_CD(+)" ).append("\n"); 
		query.append("        AND    VS.SKD_VOY_NO       = VA.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("        AND    VS.SKD_DIR_CD       = VA.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("        AND    VS.VPS_PORT_CD      = VA.VPS_PORT_CD(+)" ).append("\n"); 
		query.append("        AND    VA.CLPT_IND_SEQ(+)  = '1'" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BQ.bkg_no           = DG.bkg_no(+)" ).append("\n"); 
		query.append("        AND    BQ.cntr_tpsz_cd     = DG.cntr_tpsz_cd(+)" ).append("\n"); 
		query.append("        AND    DG.dcgo_seq(+)      = '1' --?" ).append("\n"); 
		query.append("        AND    DG.cntr_no          IS NULL" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BQ.bkg_no           = RF.bkg_no(+)" ).append("\n"); 
		query.append("        AND    BQ.cntr_tpsz_cd     = RF.cntr_tpsz_cd(+)" ).append("\n"); 
		query.append("        AND    RF.rc_seq(+)        = 1" ).append("\n"); 
		query.append("        AND    RF.cntr_no          IS NULL" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BQ.bkg_no           = AK.bkg_no(+)" ).append("\n"); 
		query.append("        AND    BQ.cntr_tpsz_cd     = AK.cntr_tpsz_cd(+)" ).append("\n"); 
		query.append("        AND    AK.awk_cgo_seq(+)   = 1" ).append("\n"); 
		query.append("        AND    AK.cntr_no          IS NULL" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        AND    BQ.BKG_NO           = AA.BKGNO(+)" ).append("\n"); 
		query.append("        AND    BQ.CNTR_TPSZ_CD     = AA.TPSZ(+)" ).append("\n"); 
		query.append("        --" ).append("\n"); 
		query.append("        GROUP BY" ).append("\n"); 
		query.append("               BQ.OP_CNTR_QTY, AA.CNTR_CNT, CEIL(BQ.OP_CNTR_QTY - NVL(AA.CNTR_CNT, 0))" ).append("\n"); 
		query.append("               , BK.BKG_NO  " ).append("\n"); 
		query.append("               , BK.BL_NO||BK.BL_TP_CD  " ).append("\n"); 
		query.append("               , BK.SPLIT_FLG " ).append("\n"); 
		query.append("       		   , NVL(VA.ACT_ATD_INP_DT, '')" ).append("\n"); 
		query.append("       		   , NVL(VA.ACT_ATA_INP_DT, '')" ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("               , NVL(AK.OVR_FWRD_LEN, '') " ).append("\n"); 
		query.append("               , NVL(AK.OVR_HGT, '') " ).append("\n"); 
		query.append("               , NVL(AK.OVR_LF_LEN, '') " ).append("\n"); 
		query.append("               , NVL(AK.OVR_BKWD_LEN, '') " ).append("\n"); 
		query.append("               , NVL(AK.OVR_RT_LEN, '') " ).append("\n"); 
		query.append("               , ROUND(BD.ACT_WGT, 0)  " ).append("\n"); 
		query.append("               , BD.WGT_UT_CD " ).append("\n"); 
		query.append("               , DECODE(BK.BKG_CGO_TP_CD, 'F', 'F', 'E') " ).append("\n"); 
		query.append("               , BK.HOT_DE_FLG " ).append("\n"); 
		query.append("               , BD.MEAS_QTY " ).append("\n"); 
		query.append("               , BD.MEAS_UT_CD " ).append("\n"); 
		query.append("               , BK.BKG_STS_CD " ).append("\n"); 
		query.append("               , BV.VSL_CD " ).append("\n"); 
		query.append("               , BV.SKD_VOY_NO" ).append("\n"); 
		query.append("               , BV.SKD_DIR_CD" ).append("\n"); 
		query.append("               , MC.CMDT_NM " ).append("\n"); 
		query.append("               , REPLACE(TRANSLATE(NVL(CU.CUST_NM, ''),CHR(10), ' '), '''', ' ') " ).append("\n"); 
		query.append("               , ROUND(BD.MEAS_QTY/BQ.OP_CNTR_QTY, 0) " ).append("\n"); 
		query.append("               , BD.MEAS_UT_CD " ).append("\n"); 
		query.append("               , BQ.CNTR_TPSZ_CD " ).append("\n"); 
		query.append("               , ROUND(BD.ACT_WGT/BQ.OP_CNTR_QTY, 0) " ).append("\n"); 
		query.append("               , BD.WGT_UT_CD " ).append("\n"); 
		query.append("               , BD.CSTMS_DESC " ).append("\n"); 
		query.append("               , BK.DEL_CD " ).append("\n"); 
		query.append("               , DECODE(BK.BKG_CGO_TP_CD, 'F', 'B', 'A') " ).append("\n"); 
		query.append("               , VS.VPS_ETA_DT" ).append("\n"); 
		query.append("               , VS.VPS_ETD_DT" ).append("\n"); 
		query.append("               , NVL(RF.HUMID_NO, '') " ).append("\n"); 
		query.append("               , BV.SLAN_CD " ).append("\n"); 
		query.append("               , BD.PCK_QTY " ).append("\n"); 
		query.append("               , BD.PCK_TP_CD                " ).append("\n"); 
		query.append("               , BV.POD_CD" ).append("\n"); 
		query.append("               , BV.POL_CD " ).append("\n"); 
		query.append("               , MR.REP_CMDT_NM " ).append("\n"); 
		query.append("               , NVL(RF.CDO_TEMP, '') " ).append("\n"); 
		query.append("               , NVL(RF.VENT_RTO, '') " ).append("\n"); 
		query.append("               , REPLACE(TRANSLATE(NVL(CU2.CUST_NM, ''),CHR(10), ' '), '''', ' ') " ).append("\n"); 
		query.append("               , BK.DCGO_FLG" ).append("\n"); 
		query.append("               , BK.RC_FLG" ).append("\n"); 
		query.append("               , BK.AWK_CGO_FLG" ).append("\n"); 
		query.append("               , BK.HNGR_FLG" ).append("\n"); 
		query.append("               , BK.EQ_SUBST_FLG " ).append("\n"); 
		query.append("               , BK.RD_CGO_FLG" ).append("\n"); 
		query.append("               , BK.FULL_RTN_YD_CD" ).append("\n"); 
		query.append("               , BK.XTER_RMK  " ).append("\n"); 
		query.append("               , BK.FM_BKG_NO" ).append("\n"); 
		query.append("       ) BB," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("        SELECT ROWNUM RN" ).append("\n"); 
		query.append("        FROM   DUAL" ).append("\n"); 
		query.append("        CONNECT BY LEVEL < 501       " ).append("\n"); 
		query.append("       ) CC" ).append("\n"); 
		query.append("--       " ).append("\n"); 
		query.append("WHERE  BB.QTY >= CC.RN" ).append("\n"); 
		query.append("ORDER BY BKG_NO" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT  --COUNT(*)" ).append("\n"); 
		query.append("       DISTINCT" ).append("\n"); 
		query.append("       'I' AS BOUND" ).append("\n"); 
		query.append("       , BK.BKG_NO AS BKG_NO " ).append("\n"); 
		query.append("       , BK.BL_NO||BK.BL_TP_CD AS BL_NO " ).append("\n"); 
		query.append("       , BK.SPLIT_FLG AS SPLIT" ).append("\n"); 
		query.append("       , NVL(TO_CHAR(VA.ACT_ATD_INP_DT, 'YYYY-MM-DD HH24:MI:SS'), NULL) AS ATD_DT --***" ).append("\n"); 
		query.append("       , NVL(TO_CHAR(VA.ACT_ATA_INP_DT, 'YYYY-MM-DD HH24:MI:SS'), NULL) AS ATA_DT --***" ).append("\n"); 
		query.append("       , NVL(AK.OVR_FWRD_LEN, '') AS AWK_FRONT     " ).append("\n"); 
		query.append("       , NVL(AK.OVR_HGT, '') AS AWK_HEIGHT" ).append("\n"); 
		query.append("       , NVL(AK.OVR_LF_LEN, '') AS AWK_LEFT" ).append("\n"); 
		query.append("       , NVL(AK.OVR_BKWD_LEN, '') AS AWK_REAR" ).append("\n"); 
		query.append("       , NVL(AK.OVR_RT_LEN, '') AS AWK_RIGHT" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , ROUND(BD.ACT_WGT, 0) AS BKG_ACT_WGT " ).append("\n"); 
		query.append("       , BD.WGT_UT_CD AS BKG_ACT_WGT_TP_CD" ).append("\n"); 
		query.append("       , DECODE(BK.BKG_CGO_TP_CD, 'F', 'F', 'E') AS BKG_CGO_TP_CD" ).append("\n"); 
		query.append("       , BK.HOT_DE_FLG AS BKG_HOT_DEL_FLG" ).append("\n"); 
		query.append("       , BD.MEAS_QTY AS BKG_MEAS_QTY " ).append("\n"); 
		query.append("       , BD.MEAS_UT_CD AS BKG_MEAS_TP_CD" ).append("\n"); 
		query.append("       , BK.BKG_STS_CD AS BKG_STS_CD" ).append("\n"); 
		query.append("       , BV.VSL_CD AS CARRIER_VSL_CD" ).append("\n"); 
		query.append("       , BV.SKD_VOY_NO||BV.SKD_DIR_CD AS CARRIERS_VOY_NO" ).append("\n"); 
		query.append("       , MC.CMDT_NM AS CMDY_NM" ).append("\n"); 
		query.append("       , REPLACE(TRANSLATE(NVL(CU.CUST_NM, ''),CHR(10), ' '), '''', ' ') AS CNEE_NM" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , BC.MEAS_QTY AS CNTR_MEAS_QTY" ).append("\n"); 
		query.append("       , BC.MEAS_UT_CD AS CNTR_MEAS_TP_CD" ).append("\n"); 
		query.append("       , BC.CNTR_NO AS CNTR_NO" ).append("\n"); 
		query.append("       , BC.CNTR_TPSZ_CD AS CNTR_TPSZ_CD " ).append("\n"); 
		query.append("       , ROUND(BC.CNTR_WGT, 0) AS CNTR_WGT_QTY" ).append("\n"); 
		query.append("       , BC.WGT_UT_CD AS CNTR_WGT_TP_CD" ).append("\n"); 
		query.append("       , BD.CSTMS_DESC AS CSTMS_RMK --***" ).append("\n"); 
		query.append("       , BK.DEL_CD AS DEL_LOC" ).append("\n"); 
		query.append("       --, DECODE(BK.BKG_CGO_TP_CD, 'F', 'B', 'A') AS DEPOT_CD --*** --DEFAULT: MT-A(물류1), FULL-B(명강)" ).append("\n"); 
		query.append("       , NULL AS DEPOT_CD --*** --DEFAULT: MT-A(물류1), FULL-B(명강)" ).append("\n"); 
		query.append("       , MAX(NVL(DG.IMDG_CLSS_CD, '')) AS DG_CLS" ).append("\n"); 
		query.append("       --, DECODE(NVL(MO.DMG_FLG, ''), 'Y', 'D', 'S') AS DMG_STS" ).append("\n"); 
		query.append("       , NULL AS DMG_STS" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , MAX(NVL(DG.EMS_NO, '')) AS EMS" ).append("\n"); 
		query.append("       , TO_CHAR(VS.VPS_ETA_DT, 'YYYY-MM-DD HH24:MI:SS') AS ETA_DT" ).append("\n"); 
		query.append("       , TO_CHAR(VS.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI:SS') AS ETD_DT" ).append("\n"); 
		query.append("       , NVL(DG.FLSH_PNT_CDO_TEMP, '') AS FSH_POINT" ).append("\n"); 
		query.append("       , NVL(RF.HUMID_NO, '') AS HUMIDITY" ).append("\n"); 
		query.append("       , BV.SLAN_CD AS LANE_CODE " ).append("\n"); 
		query.append("       , MAX(NVL(DG.MRN_POLUT_FLG, '')) AS MAR_POL" ).append("\n"); 
		query.append("       , MAX(NVL(DG.IMDG_PCK_GRP_CD, '')) AS PKG_GRP" ).append("\n"); 
		query.append("       , BD.PCK_QTY AS BKG_PKG_QTY " ).append("\n"); 
		query.append("       , BD.PCK_TP_CD AS BKG_PKG_TP_CD " ).append("\n"); 
		query.append("       , BV.POD_CD AS POD_LOC --***" ).append("\n"); 
		query.append("       , BV.POL_CD AS POL_LOC --***" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , MR.REP_CMDT_NM AS RE_CMMD_NM" ).append("\n"); 
		query.append("       , NVL(RF.CDO_TEMP, '') AS RF_TEMP" ).append("\n"); 
		query.append("       , NVL(RF.VENT_RTO, '') AS VENT" ).append("\n"); 
		query.append("       , NVL(CS.CNTR_SEAL_NO, '') AS SEAL_NO" ).append("\n"); 
		query.append("       , REPLACE(TRANSLATE(NVL(CU2.CUST_NM, ''),CHR(10), ' '), '''', ' ') AS SHPR_NM" ).append("\n"); 
		query.append("       , BC.SOC_FLG AS SOC_IND " ).append("\n"); 
		query.append("       , MAX(DECODE(DG.IMDG_SUBS_RSK_LBL_CD1, NULL, 'N', 'Y')) AS SUBSI_RSK_FLG " ).append("\n"); 
		query.append("       , MAX(NVL(DG.IMDG_UN_NO, '')) AS UN_CD" ).append("\n"); 
		query.append("       --ADD" ).append("\n"); 
		query.append("       , BC.PCK_QTY AS CNTR_PKG_QTY " ).append("\n"); 
		query.append("       , BC.PCK_TP_CD AS CNTR_PKG_TP_CD        " ).append("\n"); 
		query.append("       , BK.DCGO_FLG AS DG_CGO_FLAG" ).append("\n"); 
		query.append("       , BK.RC_FLG AS RF_FLAG" ).append("\n"); 
		query.append("       , BK.AWK_CGO_FLG AS AK_FLAG" ).append("\n"); 
		query.append("       , BK.HNGR_FLG AS HG_FLAG" ).append("\n"); 
		query.append("       , BK.EQ_SUBST_FLG AS EQ_SUB_FLAG" ).append("\n"); 
		query.append("       , BK.RD_CGO_FLG AS RD_FLAG" ).append("\n"); 
		query.append("       , BK.XTER_RMK AS EXT_REMARK" ).append("\n"); 
		query.append("       , (CASE" ).append("\n"); 
		query.append("            WHEN BK.SPLIT_FLG = 'Y' AND BK.FM_BKG_NO IS NULL THEN 'M'   --MASTER" ).append("\n"); 
		query.append("            WHEN BK.SPLIT_FLG = 'Y' AND BK.FM_BKG_NO IS NOT NULL AND" ).append("\n"); 
		query.append("              (SELECT 'X' " ).append("\n"); 
		query.append("              FROM BKG_BOOKING B, BKG_VVD V" ).append("\n"); 
		query.append("              WHERE B.BKG_NO = BK.FM_BKG_NO " ).append("\n"); 
		query.append("              AND   B.BKG_NO = V.BKG_NO" ).append("\n"); 
		query.append("              AND   V.VSL_CD = BV.VSL_CD" ).append("\n"); 
		query.append("              AND   V.SKD_VOY_NO = BV.SKD_VOY_NO" ).append("\n"); 
		query.append("              AND   V.SKD_DIR_CD = BV.SKD_DIR_CD) IS NOT NULL THEN 'S'   --SPLIT" ).append("\n"); 
		query.append("            ELSE 'B'" ).append("\n"); 
		query.append("         END) BKG_TP" ).append("\n"); 
		query.append("       , DECODE(BK.SPLIT_FLG,'Y',BK.FM_BKG_NO,NULL) AS MST_BKG_NO   " ).append("\n"); 
		query.append("FROM   BKG_VVD BV" ).append("\n"); 
		query.append("       , BKG_BOOKING BK" ).append("\n"); 
		query.append("       , BKG_BL_DOC BD" ).append("\n"); 
		query.append("       , BKG_CUSTOMER CU" ).append("\n"); 
		query.append("       , BKG_CUSTOMER CU2" ).append("\n"); 
		query.append("       , BKG_CONTAINER BC" ).append("\n"); 
		query.append("       , MST_CONTAINER MO" ).append("\n"); 
		query.append("       , VSK_VSL_PORT_SKD VS" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       , VSK_ACT_PORT_SKD VA       " ).append("\n"); 
		query.append("       , MDM_COMMODITY MC" ).append("\n"); 
		query.append("       , MDM_REP_CMDT MR" ).append("\n"); 
		query.append("       , BKG_CNTR_SEAL_NO CS" ).append("\n"); 
		query.append("       , BKG_DG_CGO DG" ).append("\n"); 
		query.append("       , BKG_RF_CGO RF" ).append("\n"); 
		query.append("       , BKG_AWK_CGO AK  " ).append("\n"); 
		query.append("--          " ).append("\n"); 
		query.append("WHERE  BV.VSL_CD           = SUBSTR(@[in_vvd_cd],1,4)" ).append("\n"); 
		query.append("AND    BV.SKD_VOY_NO       = SUBSTR(@[in_vvd_cd],5,4)" ).append("\n"); 
		query.append("AND    BV.SKD_DIR_CD       = SUBSTR(@[in_vvd_cd],9,1)" ).append("\n"); 
		query.append("AND    BV.POD_CD           = @[in_pod_cd] --(INBOUND)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BV.BKG_NO           = BK.BKG_NO" ).append("\n"); 
		query.append("AND    BV.POD_CD           = BK.POD_CD --(INBOUND) LOCAL, EXCEPT T/S CARGO" ).append("\n"); 
		query.append("AND    BK.BKG_STS_CD       IN ('F', 'W', 'A') --F:Firm, W:Wait, A:Advanced" ).append("\n"); 
		query.append("AND    BK.POD_CD           <> 'XXXXX' --(INBOUND) NOT CONFIRMED THE DISCHARGING PORT" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.BKG_NO           = BD.BKG_NO" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.BKG_NO           = CU.BKG_NO" ).append("\n"); 
		query.append("AND    CU.BKG_CUST_TP_CD   = 'C' --CONSIGNEE" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.BKG_NO           = CU2.BKG_NO" ).append("\n"); 
		query.append("AND    CU2.BKG_CUST_TP_CD  = 'S' --SHIPPER" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.BKG_NO           = BC.BKG_NO" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BC.CNTR_NO          = MO.CNTR_NO --(INBOUND)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BV.VSL_CD           = VS.VSL_CD" ).append("\n"); 
		query.append("AND    BV.SKD_VOY_NO       = VS.SKD_VOY_NO" ).append("\n"); 
		query.append("AND    BV.SKD_DIR_CD       = VS.SKD_DIR_CD" ).append("\n"); 
		query.append("AND    BV.POD_CD           = VS.VPS_PORT_CD --(INBOUND)" ).append("\n"); 
		query.append("AND    VS.CLPT_IND_SEQ     = '1'" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    VS.VSL_CD           = VA.VSL_CD(+)" ).append("\n"); 
		query.append("AND    VS.SKD_VOY_NO       = VA.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("AND    VS.SKD_DIR_CD       = VA.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND    VS.VPS_PORT_CD      = VA.VPS_PORT_CD(+)" ).append("\n"); 
		query.append("AND    VA.CLPT_IND_SEQ(+)  = '1'" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.CMDT_CD          = MC.CMDT_CD(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BK.REP_CMDT_CD      = MR.REP_CMDT_CD(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BC.BKG_NO           = CS.BKG_NO(+)" ).append("\n"); 
		query.append("AND    BC.CNTR_NO          = CS.CNTR_NO(+)" ).append("\n"); 
		query.append("AND    CS.CNTR_SEAL_SEQ(+) = 1" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BC.BKG_NO           = DG.BKG_NO(+)" ).append("\n"); 
		query.append("AND    BC.CNTR_NO          = DG.CNTR_NO(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BC.BKG_NO           = RF.BKG_NO(+)" ).append("\n"); 
		query.append("AND    BC.CNTR_NO          = RF.CNTR_NO(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("AND    BC.BKG_NO           = AK.BKG_NO(+)" ).append("\n"); 
		query.append("AND    BC.CNTR_NO          = AK.CNTR_NO(+)" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("       'I' " ).append("\n"); 
		query.append("       , BK.BKG_NO  " ).append("\n"); 
		query.append("       , BK.BL_NO||BK.BL_TP_CD  " ).append("\n"); 
		query.append("       , BK.SPLIT_FLG " ).append("\n"); 
		query.append("       , NVL(TO_CHAR(VA.ACT_ATD_INP_DT, 'YYYY-MM-DD HH24:MI:SS'), NULL)" ).append("\n"); 
		query.append("       , NVL(TO_CHAR(VA.ACT_ATA_INP_DT, 'YYYY-MM-DD HH24:MI:SS'), NULL)" ).append("\n"); 
		query.append("       , NVL(AK.OVR_FWRD_LEN, '') " ).append("\n"); 
		query.append("       , NVL(AK.OVR_HGT, '') " ).append("\n"); 
		query.append("       , NVL(AK.OVR_LF_LEN, '') " ).append("\n"); 
		query.append("       , NVL(AK.OVR_BKWD_LEN, '') " ).append("\n"); 
		query.append("       , NVL(AK.OVR_RT_LEN, '') " ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , ROUND(BD.ACT_WGT, 0)  " ).append("\n"); 
		query.append("       , BD.WGT_UT_CD " ).append("\n"); 
		query.append("       , DECODE(BK.BKG_CGO_TP_CD, 'F', 'F', 'E') " ).append("\n"); 
		query.append("       , BK.HOT_DE_FLG " ).append("\n"); 
		query.append("       , BD.MEAS_QTY " ).append("\n"); 
		query.append("       , BD.MEAS_UT_CD " ).append("\n"); 
		query.append("       , BK.BKG_STS_CD " ).append("\n"); 
		query.append("       , BV.VSL_CD " ).append("\n"); 
		query.append("       , BV.SKD_VOY_NO" ).append("\n"); 
		query.append("       , BV.SKD_DIR_CD " ).append("\n"); 
		query.append("       , MC.CMDT_NM " ).append("\n"); 
		query.append("       , REPLACE(TRANSLATE(NVL(CU.CUST_NM, ''),CHR(10), ' '), '''', ' ') " ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , BC.MEAS_QTY " ).append("\n"); 
		query.append("       , BC.MEAS_UT_CD " ).append("\n"); 
		query.append("       , BC.CNTR_NO " ).append("\n"); 
		query.append("       , BC.CNTR_TPSZ_CD " ).append("\n"); 
		query.append("       , ROUND(BC.CNTR_WGT, 0) " ).append("\n"); 
		query.append("       , BC.WGT_UT_CD " ).append("\n"); 
		query.append("       , BD.CSTMS_DESC " ).append("\n"); 
		query.append("       , BK.DEL_CD " ).append("\n"); 
		query.append("       , DECODE(BK.BKG_CGO_TP_CD, 'F', 'B', 'A') " ).append("\n"); 
		query.append("       , DECODE(NVL(MO.DMG_FLG, ''), 'Y', 'D', 'S') " ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , TO_CHAR(VS.VPS_ETA_DT, 'YYYY-MM-DD HH24:MI:SS')" ).append("\n"); 
		query.append("       , TO_CHAR(VS.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI:SS')" ).append("\n"); 
		query.append("       , NVL(DG.FLSH_PNT_CDO_TEMP, '') " ).append("\n"); 
		query.append("       , NVL(RF.HUMID_NO, '') " ).append("\n"); 
		query.append("       , BV.SLAN_CD " ).append("\n"); 
		query.append("       , BD.PCK_QTY " ).append("\n"); 
		query.append("       , BD.PCK_TP_CD " ).append("\n"); 
		query.append("       , BV.POD_CD" ).append("\n"); 
		query.append("       , BV.POL_CD" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , MR.REP_CMDT_NM " ).append("\n"); 
		query.append("       , NVL(RF.CDO_TEMP, '') " ).append("\n"); 
		query.append("       , NVL(RF.VENT_RTO, '') " ).append("\n"); 
		query.append("       , NVL(CS.CNTR_SEAL_NO, '') " ).append("\n"); 
		query.append("       , REPLACE(TRANSLATE(NVL(CU2.CUST_NM, ''),CHR(10), ' '), '''', ' ') " ).append("\n"); 
		query.append("       , BC.SOC_FLG" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       , BC.PCK_QTY " ).append("\n"); 
		query.append("       , BC.PCK_TP_CD        " ).append("\n"); 
		query.append("       , BK.DCGO_FLG" ).append("\n"); 
		query.append("       , BK.RC_FLG" ).append("\n"); 
		query.append("       , BK.AWK_CGO_FLG" ).append("\n"); 
		query.append("       , BK.HNGR_FLG" ).append("\n"); 
		query.append("       , BK.EQ_SUBST_FLG " ).append("\n"); 
		query.append("       , BK.RD_CGO_FLG" ).append("\n"); 
		query.append("       , BK.XTER_RMK" ).append("\n"); 
		query.append("       , BK.FM_BKG_NO " ).append("\n"); 
		query.append("ORDER BY BKG_NO" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 

	}
}