<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralBookingSplitCombineDBDAOsearchBkgListForCombineByRouteRSQL">
			<desc><![CDATA[searchBkgListForCombineByRoute]]></desc>
			<sql><![CDATA[
SELECT BK.BKG_NO
        , BK.BL_NO
		, NVL(BK.IRR_BL_NO_FLG, 'N') AS IRR_BL_NO_FLG
        , BK.BKG_STS_CD
        , REPLACE(CUST.CUST_NM, CHR(13)||CHR(10), ' ') CUST_NM 
        , BK.POR_CD
        , SUBSTR(BK.POR_NOD_CD, 6, 2) POR_NOD_CD
        , BK.POL_CD
        , SUBSTR(BK.POL_NOD_CD, 6, 2) POL_NOD_CD
        , BK.POD_CD
        , SUBSTR(BK.POD_NOD_CD, 6, 2) POD_NOD_CD
        , BK.DEL_CD
        , SUBSTR(BK.DEL_NOD_CD, 6, 2) DEL_NOD_CD
        , BKG_JOIN_FNC( CURSOR(SELECT CNTR_TPSZ_CD||'-'||LTRIM(TO_CHAR(SUM(CNTR_VOL_QTY),'990.99'))
                                 FROM BKG_CONTAINER
                                WHERE BKG_NO = BK.BKG_NO
                                GROUP BY CNTR_TPSZ_CD)) CNTR_VOL
        , BK.VSL_CD||BK.SKD_VOY_NO||BK.SKD_DIR_CD VVD
		, CUST.CUST_CNT_CD||CUST.CUST_SEQ CUST_CD
		, BL.BDR_FLG
		, (SELECT CUST_CNT_CD||CUST_SEQ FROM BKG_CUSTOMER BROKER WHERE BROKER.BKG_CUST_TP_CD = 'B' AND BROKER.BKG_NO = BK.BKG_NO) BROKER
		, BK.BKG_OFC_CD 
  FROM BKG_BOOKING BK
		, BKG_BL_DOC BL
        , BKG_CUSTOMER CUST 
        , BKG_VVD VVD
		, BKG_BL_ISS ISS
 WHERE BK.BKG_NO            = CUST.BKG_NO 
   AND BK.BKG_NO			= BL.BKG_NO
   AND CUST.BKG_CUST_TP_CD  = 'S' 
   AND BK.BKG_NO            = ISS.BKG_NO(+)  
   AND BK.BKG_NO            = VVD.BKG_NO
   AND BK.POL_CD            = VVD.POL_CD
   AND VVD.VSL_PRE_PST_CD   IN ('S', 'T')
   AND BK.BKG_STS_CD        <> 'X'             --cancel 제외
   AND BK.BKG_CGO_TP_CD     <> 'P'             --empty repo 제외 
   AND nvl(ISS.OBL_ISS_FLG(+), 'N')      = 'N' --B/L ISSUE 되면 제외
   AND NVL(BK.SPLIT_RSN_CD, 'X') <> 'M'        --memo split mst 제외  
#if (${cust_cnt_cd} !='')
   --shpper cnt_cd 입력시 
   AND CUST.CUST_CNT_CD = @[cust_cnt_cd]
#end
#if (${cust_seq} !='')
   --shpper cust Seq 입력시   
   AND CUST.CUST_SEQ = @[cust_seq]
#end
#if (${cust_nm} !='')
   --shpper cust name 입력시   
   AND UPPER(CUST.CUST_NM) LIKE UPPER(@[cust_nm]||'%')
#end
#if (${vvd} !='')
   --vvd 입력 mandatory
   AND VVD.VSL_CD     = SUBSTR(@[vvd], 1, 4)
   AND VVD.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
   AND VVD.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
#end
#if (${pol_cd} !='')
   --pol 입력 <- hitchment check시 mandatory가 아님
   AND BK.POL_CD = @[pol_cd]
#end
#if (${pol_nod_cd} !='')
   --node 입력시   
   AND BK.POL_NOD_CD = @[pol_cd]||@[pol_nod_cd]
#end
#if (${pod_cd} !='')
   --pod 입력 mandatory
   AND BK.POD_CD = @[pod_cd]
#end
#if (${pod_nod_cd} !='')
   --node 입력시   
   AND BK.POD_NOD_CD = @[pod_cd]||@[pod_nod_cd]
#end
#if (${del_cd} !='')
   --del 입력시
   AND BK.DEL_CD = @[del_cd]
#end
#if (${del_nod_cd} !='')
   --node 입력시   
   AND BK.DEL_NOD_CD = @[del_cd]||@[del_nod_cd]
#end			]]></sql>
			<params>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="cust_nm" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pol_nod_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="pod_nod_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="del_nod_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
