<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AGNCommRequestDBDAOAddAcmAgnCommDtlFxCSQL">
			<desc><![CDATA[Fix base 일 경우, ACM_AGN_COMM_DTL 테이블에 insert

2016.06.03 박다은 EQ Sub qty 처리 보완
2016.06.09 박다은 Route level 에 따른 우선 순위 추가]]></desc>
			<sql><![CDATA[
INSERT INTO ACM_AGN_COMM_DTL
( BKG_NO, AGN_CD, IO_BND_CD, AC_TP_CD, AC_SEQ, CNTR_TPSZ_CD, BKG_VOL_QTY, IF_DTRB_AMT, CURR_CD
, PAY_IF_DTRB_AMT, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT )

SELECT 
        ARR.BKG_NO
      , ARR.AGN_CD
      , IO_BND_CD
      , AC_TP_CD
      , AC_SEQ
      , CNTR_TPSZ_CD
      , BKG_VOL_QTY
      , USD_FX_AMT AS IF_DTRB_AMT
      , CURR_CD
--      , COMM_FX_AMT
      , ROUND((USD_FX_AMT * @[pay_xch_rt]), 2) AS PAY_IF_DTRB_AMT
      , CRE_USR_ID
      , CRE_DT
      , UPD_USR_ID
      , UPD_DT

 FROM
        (
        SELECT
          @[bkg_no]    AS BKG_NO
        , @[agn_cd]    AS AGN_CD
        , @[io_bnd_cd] AS IO_BND_CD
        , @[ac_tp_cd]  AS AC_TP_CD
        , @[max_ac_seq] AS AC_SEQ
        , INFO.CNTR_TPSZ_CD
        , SUM(OP_CNTR_QTY) AS BKG_VOL_QTY
        , INFO.OFC_CURR_CD AS CURR_CD 
        , CASE WHEN AGMT_CURR_CD = OFC_CURR_CD
               THEN
                   CASE WHEN AGMT_CURR_CD = 'USD'
                        THEN ROUND(SUM(REAL_FX_AMT)- SUM(NVL(AMT.IF_DTRB_AMT,0)), 2)
                        ELSE ROUND(SUM(USD_FX_COMM)- SUM(NVL(AMT.IF_DTRB_AMT,0)), 2)
                    END
              WHEN AGMT_CURR_CD <> OFC_CURR_CD
              THEN 
                  CASE WHEN AGMT_CURR_CD = 'USD'
                       THEN ROUND(SUM(REAL_FX_AMT)- SUM(NVL(AMT.IF_DTRB_AMT,0)), 2)
                       WHEN OFC_CURR_CD = 'USD'
                       THEN ROUND(SUM(USD_FX_COMM2)- SUM(NVL(AMT.IF_DTRB_AMT,0)), 2)
                       WHEN AGMT_CURR_CD <> 'USD' AND OFC_CURR_CD <> 'USD'
                       THEN ROUND(SUM((USD_FX_COMM2 * @[pay_xch_rt]))- SUM(NVL(AMT.IF_DTRB_AMT,0)), 2)
                 END      
          END AS USD_FX_AMT  
        , @[usr_id] AS CRE_USR_ID
        , SYSDATE AS CRE_DT
        , @[usr_id] AS UPD_USR_ID
        , SYSDATE AS UPD_DT
        FROM ( 
            SELECT 
                CNTR_NON_EXISTS_SCORE+CNTR_MAT_SCORE+ROUTE_NON_EXISTS_SCORE+DECODE(ROUTE_MAT_SCORE,ROUTE_TTL_SCORE,ROUTE_MAT_SCORE,0)+ROUTE_MAT_SCORE_RNK AS TTL_SCORE
                ,RANK() OVER (PARTITION BY CNTR_TPSZ_CD ORDER BY CNTR_NON_EXISTS_SCORE+CNTR_MAT_SCORE+ROUTE_NON_EXISTS_SCORE+DECODE(ROUTE_MAT_SCORE,ROUTE_TTL_SCORE,ROUTE_MAT_SCORE,0)+ROUTE_MAT_SCORE_RNK DESC ) RNK
                ,I.*
                ,DECODE( @[pay_xch_rt],0,0,ROUND ( I.REAL_FX_AMT / @[pay_xch_rt],13)) AS USD_FX_COMM
                ,DECODE( @[pay_xch_rt2],0,0,ROUND ( I.REAL_FX_AMT / @[pay_xch_rt2],13)) AS USD_FX_COMM2
                ,ROUND ( I.REAL_FX_AMT * @[pay_xch_rt],13) AS PAY_FX_COMM
                ,@[ofc_curr_cd] AS OFC_CURR_CD
            FROM (
            
            SELECT  Q.CNTR_TPSZ_CD ,( Q.OP_CNTR_QTY * D.COMM_FX_AMT ) AS REAL_FX_AMT
                   ,Q.OP_CNTR_QTY  ,D.CURR_CD AS AGMT_CURR_CD ,D.COMM_FX_AMT , D.AGN_AGMT_NO ,D.AGN_AGMT_SEQ
             ,( 
             SELECT CASE WHEN COUNT(*) = 0 THEN 1 ELSE 0 END  
               FROM ACM_AGN_AGMT_DTL_CNTR C
              WHERE 1=1
                AND D.AGN_CD      = C.AGN_CD
                AND D.AGN_AGMT_NO = C.AGN_AGMT_NO
                AND D.IO_BND_CD   = C.IO_BND_CD
                AND D.AC_TP_CD    = C.AC_TP_CD
                AND D.AGN_AGMT_SEQ= C.AGN_AGMT_SEQ
            )AS CNTR_NON_EXISTS_SCORE
            ,(
             SELECT CASE WHEN COUNT(*) > 0 THEN 2 ELSE 0 END 
               FROM ACM_AGN_AGMT_DTL_CNTR C
              WHERE 1=1
                AND D.AGN_CD      = C.AGN_CD
                AND D.AGN_AGMT_NO = C.AGN_AGMT_NO
                AND D.IO_BND_CD   = C.IO_BND_CD
                AND D.AC_TP_CD    = C.AC_TP_CD
                AND D.AGN_AGMT_SEQ= C.AGN_AGMT_SEQ
                AND C.CNTR_TPSZ_CD= Q.CNTR_TPSZ_CD
            )AS CNTR_MAT_SCORE
            ,( SELECT CASE WHEN COUNT(1) = 0 THEN 1 ELSE 0 END 
               FROM ACM_AGN_AGMT_DTL_ROUT R
              WHERE 1=1
                AND D.AGN_CD      = R.AGN_CD
                AND D.AGN_AGMT_NO = R.AGN_AGMT_NO
                AND D.IO_BND_CD   = R.IO_BND_CD
                AND D.AC_TP_CD    = R.AC_TP_CD
                AND D.AGN_AGMT_SEQ= R.AGN_AGMT_SEQ
                AND LENGTH(R.ROUT_REF_DIV_CD) = 3
            )AS ROUTE_NON_EXISTS_SCORE
            ,( SELECT CASE WHEN COUNT(1) > 0 THEN COUNT(1) * 2 ELSE 0 END 
               FROM ACM_AGN_AGMT_DTL_ROUT R
              WHERE 1=1
                AND D.AGN_CD      = R.AGN_CD
                AND D.AGN_AGMT_NO = R.AGN_AGMT_NO
                AND D.IO_BND_CD   = R.IO_BND_CD
                AND D.AC_TP_CD    = R.AC_TP_CD
                AND D.AGN_AGMT_SEQ= R.AGN_AGMT_SEQ
                AND LENGTH(R.ROUT_REF_DIV_CD) = 3
                AND R.ROUT_INFO_CD = 
                    CASE 
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.CNT_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POR' THEN B.POR_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POL' THEN B.POL_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POD' THEN B.POD_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'DEL' THEN B.DEL_CD
                     END)AS ROUTE_MAT_SCORE
            , (SELECT COUNT(COUNT(ROUT_REF_DIV_CD)) * 2  -- ROUT_REF_DIV_CD 
                          FROM  ACM_AGN_AGMT_DTL_ROUT R
                          WHERE 1=1
                            AND R.AGN_CD       = D.AGN_CD 
                            AND R.AGN_AGMT_NO  = D.AGN_AGMT_NO 
                            AND R.IO_BND_CD    = D.IO_BND_CD 
                            AND R.AC_TP_CD     = D.AC_TP_CD 
                            AND R.AGN_AGMT_SEQ = D.AGN_AGMT_SEQ 
                            AND LENGTH(R.ROUT_REF_DIV_CD) = 3
                          GROUP BY ROUT_REF_DIV_CD 
                            )                                       AS ROUTE_TTL_SCORE
             -- ROUTE LEVEL 에 따른 우선 순위 추가
            , (SELECT NVL(SUM(R.ROUT_LVL_CD*2),0) 
               FROM ACM_AGN_AGMT_DTL_ROUT R
              WHERE 1=1
                AND D.AGN_CD      = R.AGN_CD
                AND D.AGN_AGMT_NO = R.AGN_AGMT_NO
                AND D.IO_BND_CD   = R.IO_BND_CD
                AND D.AC_TP_CD    = R.AC_TP_CD
                AND D.AGN_AGMT_SEQ= R.AGN_AGMT_SEQ
                AND LENGTH(R.ROUT_REF_DIV_CD) = 3
                AND R.ROUT_INFO_CD = 
                    CASE 
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.CNT_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POR' THEN B.POR_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POL' THEN B.POL_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POD' THEN B.POD_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'DEL' THEN B.DEL_CD
                     END)AS ROUTE_MAT_SCORE_RNK 
            --,D.*,Q.*
            FROM ACM_AGN_AGMT_DTL D --, BKG_QUANTITY Q
            , BKG_BOOKING B
            , MDM_LOCATION L1, MDM_LOCATION L2, MDM_LOCATION L3, MDM_LOCATION L4
            , (
        		SELECT BKG_NO
             		 , CNTR_TPSZ_CD
             		 , SUM(OP_CNTR_QTY) AS OP_CNTR_QTY
        		FROM (
                		SELECT BKG_NO
                			 , CASE WHEN EQ_SUBST_CNTR_TPSZ_CD IS NOT NULL
                       				THEN DECODE(SUBSTR(CNTR_TPSZ_CD,1,1), 'R', DECODE(SUBSTR(EQ_SUBST_CNTR_TPSZ_CD,1,1),'D', SUBSTR(CNTR_TPSZ_CD,1,1)||EQ_SUBST_CNTR_TPSZ_CD, EQ_SUBST_CNTR_TPSZ_CD), EQ_SUBST_CNTR_TPSZ_CD)--SUBSTR(CNTR_TPSZ_CD,1,1)||EQ_SUBST_CNTR_TPSZ_CD
                       				ELSE DECODE(RC_FLG, 'Y', 'R'||DECODE(SUBSTR(CNTR_TPSZ_CD, 2), 2, 2, 5), CNTR_TPSZ_CD)
                   				END CNTR_TPSZ_CD
                			, SUM(OP_CNTR_QTY) AS OP_CNTR_QTY
                  		 FROM BKG_QTY_DTL
                 		WHERE BKG_NO = @[bkg_no]
                 		GROUP BY BKG_NO, CNTR_TPSZ_CD, RC_FLG, EQ_SUBST_CNTR_TPSZ_CD
            			)
        		GROUP BY BKG_NO, CNTR_TPSZ_CD
                ) Q -- Running Reefer 인지 아닌지 구분하여 계산 로직 처리
            WHERE 1=1
            AND D.AGN_CD      = @[agn_cd]
            AND D.AGN_AGMT_NO = @[agn_agmt_no]
            AND D.IO_BND_CD   = @[io_bnd_cd]
            AND D.AC_TP_CD    = @[ac_tp_cd]
            AND NVL(D.COMM_FX_AMT,-1) <> -1 -- 2013.05.20 [CHM-201324774] Agreement 입력시 Fixed AMT=0 입력 가능하도록 로직 변경 요청
            AND B.BKG_NO      = Q.BKG_NO 
            AND B.BKG_STS_CD <> 'X' -- 2013.01.08 [선반영] 물량 계산 시 Cancel 부킹 제외
            AND B.BL_NO_TP   <> '9' 
            AND B.POR_CD = L1.LOC_CD
            AND B.POL_CD = L2.LOC_CD
            AND B.POD_CD = L3.LOC_CD
            AND B.DEL_CD = L4.LOC_CD
            AND Q.BKG_NO IN (
                            SELECT DISTINCT BKG_NO 
                              FROM BKG_BL_DOC 
                             WHERE BKG_NO = @[bkg_no] OR (BL_CVRD_TP_CD = 'C' AND MST_CVRD_BL_NO = @[bkg_no])
                             )
            AND Q.CNTR_TPSZ_CD NOT LIKE 'Q%'  
            AND D.FULL_MTY_CD = @[full_mty_cd]  
            AND D.OFC_CD = CASE WHEN @[ofc_chr_cd] IN (3,4)
                            THEN
                                CASE
                                    WHEN D.OFC_SET_TP_CD = 'B' AND D.IO_BND_CD = 'O' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'B' AND D.IO_BND_CD = 'I' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
                                    WHEN D.OFC_SET_TP_CD = 'C' THEN @[clt_ofc_cd] 
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'O' THEN NVL(@[cn_ob_finc],@[cn_ob_ar]) -- Contract Office 추가
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'I' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
                                    WHEN D.OFC_SET_TP_CD = 'G' THEN @[chn_agn_cd]
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POR' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POL' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POD' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'DEL' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
        
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POR' THEN @[cn_ob_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POL' THEN @[cn_ob_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POD' THEN @[cn_ib_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'DEL' THEN @[cn_ib_ar]
        
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.IO_BND_CD = 'O' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.IO_BND_CD = 'I' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.IO_BND_CD = 'O' THEN @[cn_ob_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.IO_BND_CD = 'I' THEN @[cn_ib_ar]
                                END
                            ELSE
                                CASE
                                    WHEN D.OFC_SET_TP_CD = 'B' THEN NVL(@[bkg_ofc],@[bkg_ar])
                                    WHEN D.OFC_SET_TP_CD = 'C' THEN @[clt_ofc_cd]
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'O' THEN NVL(@[bkg_ofc],@[bkg_ar])-- Contract Office 추가
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'I' AND D.OFC_CVRG_CD = 'PFO' THEN NVL(@[pod_finc],@[pod_ar])
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'I' AND D.OFC_CVRG_CD = 'DFO' THEN NVL(@[del_finc],@[del_ar])
                                    WHEN D.OFC_SET_TP_CD = 'G' THEN @[chn_agn_cd]
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POR' THEN NVL(@[por_finc],@[por_ar]) -->  D.OFC_CD = :POR_FINC 조건 추가 이유 = POR_FINC 와 Match 되는 계약이 없을 경우는 POR_FINC 의 AR_OFC_CD 로 계약을 찾는다.
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POL' THEN NVL(@[pol_finc],@[pol_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POD' THEN NVL(@[pod_finc],@[pod_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'DEL' THEN NVL(@[del_finc],@[del_ar])
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POR' THEN @[por_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POL' THEN @[pol_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POD' THEN @[pod_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'DEL' THEN @[del_ar]
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'PRE' AND  @[vsl_pre_pst_cd] =  'S' THEN NVL(@[ts_finc],@[ts_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'PST' AND  @[vsl_pre_pst_cd] <> 'S' THEN NVL(@[ts_finc],@[ts_ar])
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'PRE' AND  @[vsl_pre_pst_cd] =  'S' THEN @[ts_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'PST' AND  @[vsl_pre_pst_cd] <> 'S' THEN @[ts_ar]
                                END
                       END
         
            )I    
        )INFO
        ,
        (
            SELECT CNTR_TPSZ_CD
             , NVL(SUM(IF_DTRB_AMT),0) AS IF_DTRB_AMT
             , NVL(SUM(PAY_IF_DTRB_AMT),0) AS PAY_IF_DTRB_AMT 
             , CURR_CD
              FROM ACM_AGN_COMM_DTL DTL
             WHERE DTL.BKG_NO = @[bkg_no]
               AND DTL.AGN_CD = @[agn_cd]
               AND DTL.IO_BND_CD = @[io_bnd_cd]
               AND DTL.AC_TP_CD = @[ac_tp_cd]
               AND DTL.AC_SEQ <= TO_NUMBER(@[max_ac_seq]) -1
             GROUP BY CNTR_TPSZ_CD, CURR_CD  
        )AMT
        WHERE RNK = 1
          AND CNTR_MAT_SCORE <> 0
          AND (ROUTE_NON_EXISTS_SCORE <> 0 OR ROUTE_MAT_SCORE <> 0)
          AND INFO.CNTR_TPSZ_CD = AMT.CNTR_TPSZ_CD(+)
        GROUP BY INFO.CNTR_TPSZ_CD, INFO.OP_CNTR_QTY, INFO.OFC_CURR_CD, INFO.AGMT_CURR_CD
)ARR			]]></sql>
			<params>
				<param name="pay_xch_rt" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="agn_cd" type="12" value="" out="N"/>
				<param name="io_bnd_cd" type="12" value="" out="N"/>
				<param name="ac_tp_cd" type="12" value="" out="N"/>
				<param name="max_ac_seq" type="12" value="" out="N"/>
				<param name="usr_id" type="12" value="" out="N"/>
				<param name="pay_xch_rt2" type="12" value="" out="N"/>
				<param name="ofc_curr_cd" type="12" value="" out="N"/>
				<param name="agn_agmt_no" type="12" value="" out="N"/>
				<param name="full_mty_cd" type="12" value="" out="N"/>
				<param name="ofc_chr_cd" type="12" value="" out="N"/>
				<param name="cn_ob_finc" type="12" value="" out="N"/>
				<param name="cn_ob_ar" type="12" value="" out="N"/>
				<param name="cn_ib_finc" type="12" value="" out="N"/>
				<param name="cn_ib_ar" type="12" value="" out="N"/>
				<param name="clt_ofc_cd" type="12" value="" out="N"/>
				<param name="chn_agn_cd" type="12" value="" out="N"/>
				<param name="bkg_ofc" type="12" value="" out="N"/>
				<param name="bkg_ar" type="12" value="" out="N"/>
				<param name="pod_finc" type="12" value="" out="N"/>
				<param name="pod_ar" type="12" value="" out="N"/>
				<param name="del_finc" type="12" value="" out="N"/>
				<param name="del_ar" type="12" value="" out="N"/>
				<param name="por_finc" type="12" value="" out="N"/>
				<param name="por_ar" type="12" value="" out="N"/>
				<param name="pol_finc" type="12" value="" out="N"/>
				<param name="pol_ar" type="12" value="" out="N"/>
				<param name="vsl_pre_pst_cd" type="12" value="" out="N"/>
				<param name="ts_finc" type="12" value="" out="N"/>
				<param name="ts_ar" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
