<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CLLCDLManifestDBDAOsearchCllSpclStowRqstByPodRSQL">
			<desc><![CDATA[searchCllSpclStowRqstByPod]]></desc>
			<sql><![CDATA[
SELECT *
FROM (

#if (${in_pgm_no} == 'ESM_BKG_0951') 
/**************************** ESM_BKG_0951에서 조회된 경우  *****************************/
		SELECT GUBUN_CD3,
		'' GUBUN_CD2,
		'' GUBUN_CD,
		'' BLCK_STWG_CD,
		DECODE(SUM(AB_20), 0, '', SUM(AB_20)) AB_20,
		DECODE(SUM(AB_40), 0, '', SUM(AB_40)) AB_40,
		DECODE(SUM(AB_40H), 0, '', SUM(AB_40H)) AB_40H,
        DECODE(SUM(AB_45), 0, '', SUM(AB_45)) AB_45,
		DECODE(SUM(AF_20), 0, '', SUM(AF_20)) AF_20,
		DECODE(SUM(AF_40), 0, '', SUM(AF_40)) AF_40,
		DECODE(SUM(AF_40H), 0, '', SUM(AF_40H)) AF_40H,
        DECODE(SUM(AF_45), 0, '', SUM(AF_45)) AF_45,
		DECODE(SUM(AL_20), 0, '', SUM(AL_20)) AL_20,
		DECODE(SUM(AL_40), 0, '', SUM(AL_40)) AL_40,
		DECODE(SUM(AL_40H), 0, '', SUM(AL_40H)) AL_40H,
        DECODE(SUM(AL_45), 0, '', SUM(AL_45)) AL_45,
		DECODE(SUM(BC_20), 0, '', SUM(BC_20)) BC_20,
		DECODE(SUM(BC_40), 0, '', SUM(BC_40)) BC_40,
		DECODE(SUM(BC_40H), 0, '', SUM(BC_40H)) BC_40H,
        DECODE(SUM(BC_45), 0, '', SUM(BC_45)) BC_45,
        DECODE(SUM(MUPG_20), 0, '', SUM(MUPG_20)) MUPG_20,
		DECODE(SUM(MUPG_40), 0, '', SUM(MUPG_40)) MUPG_40,
		DECODE(SUM(MUPG_40H), 0, '', SUM(MUPG_40H)) MUPG_40H,
        DECODE(SUM(MUPG_45), 0, '', SUM(MUPG_45)) MUPG_45,
		DECODE(SUM(OD_20), 0, '', SUM(OD_20)) OD_20,
		DECODE(SUM(OD_40), 0, '', SUM(OD_40)) OD_40,
		DECODE(SUM(OD_40H), 0, '', SUM(OD_40H)) OD_40H,
        DECODE(SUM(OD_45), 0, '', SUM(OD_45)) OD_45,
		DECODE(SUM(OBSS_20), 0, '', SUM(OBSS_20)) OBSS_20,
		DECODE(SUM(OBSS_40), 0, '', SUM(OBSS_40)) OBSS_40,
		DECODE(SUM(OBSS_40H), 0, '', SUM(OBSS_40H)) OBSS_40H,
        DECODE(SUM(OBSS_45), 0, '', SUM(OBSS_45)) OBSS_45,
		DECODE(SUM(OBSG_20), 0, '', SUM(OBSG_20)) OBSG_20,
		DECODE(SUM(OBSG_40), 0, '', SUM(OBSG_40)) OBSG_40,
		DECODE(SUM(OBSG_40H), 0, '', SUM(OBSG_40H)) OBSG_40H,
        DECODE(SUM(OBSG_45), 0, '', SUM(OBSG_45)) OBSG_45,
		DECODE(SUM(ODAB_20), 0, '', SUM(ODAB_20)) ODAB_20,
		DECODE(SUM(ODAB_40), 0, '', SUM(ODAB_40)) ODAB_40,
		DECODE(SUM(ODAB_40H), 0, '', SUM(ODAB_40H)) ODAB_40H,
        DECODE(SUM(ODAB_45), 0, '', SUM(ODAB_45)) ODAB_45

		FROM (
		SELECT NVL(LO.UN_LOC_CD,BV.POD_CD) GUBUN_CD3,

		DECODE(DECODE(BK.STWG_CD,'AB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'AB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0)) AB_20,
		DECODE(DECODE(BK.STWG_CD,'AB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'AB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0)) AB_40,
		DECODE(DECODE(BK.STWG_CD,'AB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0, '7', 0,  BQ.OP_CNTR_QTY),0),0,'',DECODE(BK.STWG_CD,'AB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0, '7', 0,  BQ.OP_CNTR_QTY),0)) AB_40H,
		DECODE(DECODE(BK.STWG_CD,'AB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'AB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0)) AB_45,

		DECODE(DECODE(BK.STWG_CD,'AF',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'AF',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0)) AF_20,
		DECODE(DECODE(BK.STWG_CD,'AF',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'AF',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0)) AF_40,
		DECODE(DECODE(BK.STWG_CD,'AF',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0, '7', 0,  BQ.OP_CNTR_QTY),0),0,'',DECODE(BK.STWG_CD,'AF',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0, '7', 0,  BQ.OP_CNTR_QTY),0)) AF_40H,
        DECODE(DECODE(BK.STWG_CD,'AF',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'AF',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0)) AF_45,

		DECODE(DECODE(BK.STWG_CD,'AL',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'AL',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0)) AL_20,
		DECODE(DECODE(BK.STWG_CD,'AL',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'AL',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0)) AL_40,
		DECODE(DECODE(BK.STWG_CD,'AL',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0,  '7', 0, BQ.OP_CNTR_QTY),0),0,'',DECODE(BK.STWG_CD,'AL',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0,  '7', 0, BQ.OP_CNTR_QTY),0)) AL_40H,
        DECODE(DECODE(BK.STWG_CD,'AL',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'AL',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0)) AL_45,

		DECODE(DECODE(BK.STWG_CD,'BC',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'BC',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0)) BC_20,
		DECODE(DECODE(BK.STWG_CD,'BC',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'BC',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0)) BC_40,
		DECODE(DECODE(BK.STWG_CD,'BC',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0,  '7', 0, BQ.OP_CNTR_QTY),0),0,'',DECODE(BK.STWG_CD,'BC',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0,  '7', 0, BQ.OP_CNTR_QTY),0)) BC_40H,
        DECODE(DECODE(BK.STWG_CD,'BC',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'BC',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0)) BC_45,

        DECODE(DECODE(BK.STWG_CD,'MUPG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'MUPG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0)) MUPG_20,
		DECODE(DECODE(BK.STWG_CD,'MUPG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'MUPG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0)) MUPG_40,
		DECODE(DECODE(BK.STWG_CD,'MUPG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0,  '7', 0, BQ.OP_CNTR_QTY),0),0,'',DECODE(BK.STWG_CD,'MUPG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0,  '7', 0, BQ.OP_CNTR_QTY),0)) MUPG_40H,
        DECODE(DECODE(BK.STWG_CD,'MUPG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'MUPG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0)) MUPG_45,

		DECODE(DECODE(BK.STWG_CD,'OD',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'OD',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0)) OD_20,
		DECODE(DECODE(BK.STWG_CD,'OD',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'OD',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0)) OD_40,
		DECODE(DECODE(BK.STWG_CD,'OD',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0,  '7', 0, BQ.OP_CNTR_QTY),0),0,'',DECODE(BK.STWG_CD,'OD',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0, '7', 0,  BQ.OP_CNTR_QTY),0))  OD_40H,
        DECODE(DECODE(BK.STWG_CD,'OD',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'OD',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0)) OD_45,

		DECODE(DECODE(BK.STWG_CD,'OBSS',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'OBSS',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0)) OBSS_20,
		DECODE(DECODE(BK.STWG_CD,'OBSS',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'OBSS',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0)) OBSS_40,
		DECODE(DECODE(BK.STWG_CD,'OBSS',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0, '7', 0,  BQ.OP_CNTR_QTY),0),0,'',DECODE(BK.STWG_CD,'OBSS',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0, '7', 0,  BQ.OP_CNTR_QTY),0)) OBSS_40H,
        DECODE(DECODE(BK.STWG_CD,'OBSS',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'OBSS',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0)) OBSS_45,

		DECODE(DECODE(BK.STWG_CD,'OBSG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'OBSG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0)) OBSG_20,
		DECODE(DECODE(BK.STWG_CD,'OBSG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'OBSG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0)) OBSG_40,
        DECODE(DECODE(BK.STWG_CD,'OBSG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'OBSG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0)) OBSG_45,
		DECODE(DECODE(BK.STWG_CD,'OBSG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0, '7', 0,  BQ.OP_CNTR_QTY),0),0,'',DECODE(BK.STWG_CD,'OBSG',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0,  '7', 0, BQ.OP_CNTR_QTY),0)) OBSG_40H,

		DECODE(DECODE(BK.STWG_CD,'ODAB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'ODAB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2',BQ.OP_CNTR_QTY,0),0)) ODAB_20,
		DECODE(DECODE(BK.STWG_CD,'ODAB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'ODAB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'4',BQ.OP_CNTR_QTY,0),0)) ODAB_40,
		DECODE(DECODE(BK.STWG_CD,'ODAB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0, '7', 0,  BQ.OP_CNTR_QTY),0),0,'',DECODE(BK.STWG_CD,'ODAB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'2', 0, '4', 0, '7', 0,  BQ.OP_CNTR_QTY),0)) ODAB_40H,
        DECODE(DECODE(BK.STWG_CD,'ODAB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0),0,'',DECODE(BK.STWG_CD,'ODAB',DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),'7',BQ.OP_CNTR_QTY,0),0)) ODAB_45,
		VPS.CLPT_SEQ CLPT_SEQ
		FROM BKG_BOOKING BK, BKG_VVD BV, VSK_VSL_PORT_SKD VPS, MDM_LOCATION LO, BKG_QUANTITY BQ, MDM_COMMODITY CM
		WHERE BK.BKG_NO = BV.BKG_NO
			AND BK.BKG_NO = BQ.BKG_NO
			AND BQ.CNTR_TPSZ_CD NOT IN ('Q2','Q4')
			AND BV.VSL_CD = VPS.VSL_CD
			AND BV.SKD_VOY_NO = VPS.SKD_VOY_NO
			AND BV.SKD_DIR_CD = VPS.SKD_DIR_CD
			AND BV.POD_CD = VPS.VPS_PORT_CD
			AND BK.CMDT_CD = CM.CMDT_CD
			AND VPS.VPS_PORT_CD = LO.LOC_CD
			AND NVL(CM.DELT_FLG,'N')='N'

			AND BV.VSL_CD     = NVL(@[in_vsl_cd], SUBSTR(@[in_vvd_cd], 1, 4))
			AND BV.SKD_VOY_NO = NVL(@[in_skd_voy_no], SUBSTR(@[in_vvd_cd], 5, 4))
		    AND BV.SKD_DIR_CD = NVL(@[in_skd_dir_cd], SUBSTR(@[in_vvd_cd], 9, 1))
     		AND BV.POL_CD     = @[in_pol_cd]
     		AND SUBSTR(BV.POL_YD_CD, 6, 2) like @[in_pol_yd_cd]||'%'

			AND BK.BKG_STS_CD IN ( 'F','W')
			AND VPS.CLPT_IND_SEQ = '1'
			AND NVL(BK.SPLIT_RSN_CD,' ') <> 'M'  )
		GROUP BY GUBUN_CD3, CLPT_SEQ
		ORDER BY CLPT_SEQ

#else 
/***************************** 기본 조회 *****************************/

SELECT GUBUN_CD3,
  '' GUBUN_CD2,
  '' GUBUN_CD,
  '' BLCK_STWG_CD,
    DECODE(SUM(AB_20), 0, '', SUM(AB_20)) AB_20,
    DECODE(SUM(AB_40), 0, '', SUM(AB_40)) AB_40,
    DECODE(SUM(AB_40H), 0, '', SUM(AB_40H)) AB_40H,
    DECODE(SUM(AB_45), 0, '', SUM(AB_45)) AB_45,
    DECODE(SUM(AF_20), 0, '', SUM(AF_20)) AF_20,
    DECODE(SUM(AF_40), 0, '', SUM(AF_40)) AF_40,
    DECODE(SUM(AF_40H), 0, '', SUM(AF_40H)) AF_40H,
    DECODE(SUM(AF_45), 0, '', SUM(AF_45)) AF_45,
    DECODE(SUM(AL_20), 0, '', SUM(AL_20)) AL_20,
    DECODE(SUM(AL_40), 0, '', SUM(AL_40)) AL_40,
    DECODE(SUM(AL_40H), 0, '', SUM(AL_40H)) AL_40H,
    DECODE(SUM(AL_45), 0, '', SUM(AL_45)) AL_45,
    DECODE(SUM(BC_20), 0, '', SUM(BC_20)) BC_20,
    DECODE(SUM(BC_40), 0, '', SUM(BC_40)) BC_40,
    DECODE(SUM(BC_40H), 0, '', SUM(BC_40H)) BC_40H,
    DECODE(SUM(BC_45), 0, '', SUM(BC_45)) BC_45,
    DECODE(SUM(MUPG_20), 0, '', SUM(MUPG_20)) MUPG_20,
    DECODE(SUM(MUPG_40), 0, '', SUM(MUPG_40)) MUPG_40,
    DECODE(SUM(MUPG_40H), 0, '', SUM(MUPG_40H)) MUPG_40H,
    DECODE(SUM(MUPG_45), 0, '', SUM(MUPG_45)) MUPG_45,
    DECODE(SUM(OD_20), 0, '', SUM(OD_20)) OD_20,
    DECODE(SUM(OD_40), 0, '', SUM(OD_40)) OD_40,
    DECODE(SUM(OD_40H), 0, '', SUM(OD_40H)) OD_40H,
    DECODE(SUM(OD_45), 0, '', SUM(OD_45)) OD_45,
    DECODE(SUM(OBSS_20), 0, '', SUM(OBSS_20)) OBSS_20,
    DECODE(SUM(OBSS_40), 0, '', SUM(OBSS_40)) OBSS_40,
    DECODE(SUM(OBSS_40H), 0, '', SUM(OBSS_40H)) OBSS_40H,
    DECODE(SUM(OBSS_45), 0, '', SUM(OBSS_45)) OBSS_45,
    DECODE(SUM(OBSG_20), 0, '', SUM(OBSG_20)) OBSG_20,
    DECODE(SUM(OBSG_40), 0, '', SUM(OBSG_40)) OBSG_40,
    DECODE(SUM(OBSG_40H), 0, '', SUM(OBSG_40H)) OBSG_40H,
    DECODE(SUM(OBSG_45), 0, '', SUM(OBSG_45)) OBSG_45,
    DECODE(SUM(ODAB_20), 0, '', SUM(ODAB_20)) ODAB_20,
    DECODE(SUM(ODAB_40), 0, '', SUM(ODAB_40)) ODAB_40,
    DECODE(SUM(ODAB_40H), 0, '', SUM(ODAB_40H)) ODAB_40H,
    DECODE(SUM(ODAB_45), 0, '', SUM(ODAB_45)) ODAB_45

FROM (
    SELECT DECODE(NVL(LO.UN_LOC_CD, BV.POD_CD), 'USSEA', DECODE(CLL.BLCK_STWG_CD, 'ONE', 'USSE1', 'USSEA'), 'CAVAN', DECODE(CLL.BLCK_STWG_CD, 'LOC', 'CAYVR', 'ONE', 'CAVA1', 'CAVAN'), 'CAPRR', DECODE(BK.BLCK_STWG_CD, 'PR1', 'CAPR1', 'CAPRR'), NVL(LO.UN_LOC_CD, BV.POD_CD)) GUBUN_CD3,
      DECODE(CLL.STWG_CD, 'AB', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 1, 0), 0) AB_20,
      DECODE(CLL.STWG_CD, 'AB', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '4', 1, 0), 0) AB_40,
      DECODE(CLL.STWG_CD, 'AB', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 0, '4', 0,  '7', 0, 1), 0) AB_40H,
      DECODE(CLL.STWG_CD, 'AB', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '7', 1, 0), 0) AB_45,
      DECODE(CLL.STWG_CD, 'AF', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 1, 0), 0) AF_20,
      DECODE(CLL.STWG_CD, 'AF', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '4', 1, 0), 0) AF_40,
      DECODE(CLL.STWG_CD, 'AF', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 0, '4', 0,  '7', 0, 1), 0) AF_40H,
      DECODE(CLL.STWG_CD, 'AF', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '7', 1, 0), 0) AF_45,
      DECODE(CLL.STWG_CD, 'AL', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 1, 0), 0) AL_20,
      DECODE(CLL.STWG_CD, 'AL', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '4', 1, 0), 0) AL_40,
      DECODE(CLL.STWG_CD, 'AL', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 0, '4', 0, '7', 0,  1), 0) AL_40H,
      DECODE(CLL.STWG_CD, 'AL', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '7', 1, 0), 0) AL_45,
      DECODE(CLL.STWG_CD, 'BC', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 1, 0), 0) BC_20,
      DECODE(CLL.STWG_CD, 'BC', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '4', 1, 0), 0) BC_40,
      DECODE(CLL.STWG_CD, 'BC', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 0, '4', 0, '7', 0,  1), 0) BC_40H,
      DECODE(CLL.STWG_CD, 'BC', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '7', 1, 0), 0) BC_45,
      DECODE(CLL.STWG_CD, 'MUPG', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 1, 0), 0) MUPG_20,
      DECODE(CLL.STWG_CD, 'MUPG', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '4', 1, 0), 0) MUPG_40,
      DECODE(CLL.STWG_CD, 'MUPG', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 0, '4', 0, '7', 0,  1), 0) MUPG_40H,
      DECODE(CLL.STWG_CD, 'MUPG', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '7', 1, 0), 0) MUPG_45,
      DECODE(CLL.STWG_CD, 'OD', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 1, 0), 0) OD_20,
      DECODE(CLL.STWG_CD, 'OD', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '4', 1, 0), 0) OD_40,
      DECODE(CLL.STWG_CD, 'OD', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 0, '4', 0, '7', 0,  1), 0) OD_40H,
      DECODE(CLL.STWG_CD, 'OD', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '7', 1, 0), 0) OD_45,
      DECODE(CLL.STWG_CD, 'OBSS', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 1, 0), 0) OBSS_20,
      DECODE(CLL.STWG_CD, 'OBSS', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '4', 1, 0), 0) OBSS_40,
      DECODE(CLL.STWG_CD, 'OBSS', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 0, '4', 0, '7', 0,  1), 0) OBSS_40H,
      DECODE(CLL.STWG_CD, 'OBSS', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '7', 1, 0), 0) OBSS_45,
      DECODE(CLL.STWG_CD, 'OBSG', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 1, 0), 0) OBSG_20,
      DECODE(CLL.STWG_CD, 'OBSG', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '4', 1, 0), 0) OBSG_40,
      DECODE(CLL.STWG_CD, 'OBSG', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 0, '4', 0, '7', 0,  1), 0) OBSG_40H,
      DECODE(CLL.STWG_CD, 'OBSG', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '7', 1, 0), 0) OBSG_45,
      DECODE(CLL.STWG_CD, 'ODAB', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 1, 0), 0) ODAB_20,
      DECODE(CLL.STWG_CD, 'ODAB', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '4', 1, 0), 0) ODAB_40,
      DECODE(CLL.STWG_CD, 'ODAB', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '2', 0, '4', 0, '7', 0,  1), 0) ODAB_40H,
      DECODE(CLL.STWG_CD, 'ODAB', DECODE(SUBSTR(CLL.CNTR_TPSZ_CD, 2, 1), '7', 1, 0), 0) ODAB_45,
      VPS.CLPT_SEQ CLPT_SEQ
    FROM BKG_BOOKING BK, BKG_VVD BV, VSK_VSL_PORT_SKD VPS, MDM_LOCATION LO, BKG_CSTMS_TML_KR_CLL CLL
    WHERE BK.BKG_NO = BV.BKG_NO
      AND CLL.CNTR_TPSZ_CD NOT IN ('Q2', 'Q4')
      AND BK.BKG_NO = CLL.BKG_NO
      AND BV.VSL_CD = VPS.VSL_CD
      AND BV.SKD_VOY_NO = VPS.SKD_VOY_NO
      AND BV.SKD_DIR_CD = VPS.SKD_DIR_CD
      AND BV.POD_CD = VPS.VPS_PORT_CD
      AND VPS.VPS_PORT_CD = LO.LOC_CD
      AND BV.VSL_CD = SUBSTR(@[in_vvd_cd], 1, 4)
      AND BV.SKD_VOY_NO = SUBSTR(@[in_vvd_cd], 5, 4)
      AND BV.SKD_DIR_CD = SUBSTR(@[in_vvd_cd], 9, 1)
      AND BV.POL_CD = @[in_pol_cd]
      AND SUBSTR(BV.POL_YD_CD, 6, 2) like @[in_pol_yd_cd]||'%'
      AND BK.BKG_STS_CD IN ('F', 'W')
      AND VPS.CLPT_IND_SEQ = '1'
      AND NVL(BK.SPLIT_RSN_CD, ' ') <> 'M'
      AND CLL.CNTR_LIST_NO = BV.VSL_CD||SUBSTR(BV.SKD_VOY_NO, 2, 3)||BV.SKD_DIR_CD||SUBSTR(BV.POL_CD, 3, 3) )
GROUP BY GUBUN_CD3, CLPT_SEQ
ORDER BY CLPT_SEQ
#end
)			]]></sql>
			<params>
				<param name="in_vsl_cd" type="12" value="" out="N"/>
				<param name="in_vvd_cd" type="12" value="" out="N"/>
				<param name="in_skd_voy_no" type="12" value="" out="N"/>
				<param name="in_skd_dir_cd" type="12" value="" out="N"/>
				<param name="in_pol_cd" type="12" value="" out="N"/>
				<param name="in_pol_yd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
