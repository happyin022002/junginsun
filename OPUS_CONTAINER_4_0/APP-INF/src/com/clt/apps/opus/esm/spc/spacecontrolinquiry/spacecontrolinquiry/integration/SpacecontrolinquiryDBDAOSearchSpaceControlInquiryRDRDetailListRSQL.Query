<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpacecontrolinquiryDBDAOSearchSpaceControlInquiryRDRDetailListRSQL">
			<desc><![CDATA[RDR 실적 중 POL/POD 세부 Data 조회
2010.08.26 김민아 [CHM-201005553-01] RDR 실적 중 POL/POD 세부 Data Download 기능 개발
2011.03.02 이석준 [CHM-201109016-01] 
                RDR에 BSA정보가 없을시 SPC_BSA_MGMT TABLE에서 BSA 정보를 보여주도록 쿼리 수정
2011.07.05 최윤성 [CHM-201111937-01] Space Utilization 화면 보완
 - Lane 조회조건 추가 및 Full TEU/Mty TEU 각각의 항목 옆에 Full WGT/Mty WGT 항목 추가
2011.10.05 김종준 [CHM-201113755-01] 
	-IOC가 ‘O’인 경우에만 조회가 가능토록 되어있으나, WAFIE와 마찬가지로 NBSIM 노선의 경우,
	  Intra 노선이지만, Ocean 처럼 인식되어 데이터가 조회될 수 있도록 보완 요청]]></desc>
			<sql><![CDATA[
SELECT OPR_CD,COST_WK,TRD_CD,SUB_TRD_CD,RLANE_CD,VVD,DIR_CD,
        DECODE(BSA,0,DECODE(B_BSA,0,C_BSA,B_BSA),-- RDR Alloc에 없으면 BSA MGMT 값 적용
                     DECODE(B_LAST_FLG,1,BSA,-1,B_BSA,0,C_BSA)) BASIC_SLOT, -- RDR Alloc이 있으면 Update Date일자 비교하여 최근것을 적용
       CNTR_TYPE, 
       CNTR_20,CNTR_20H,CNTR_40,CNTR_40H,CNTR_45,
       FULL_TEU,FULL_WGT,MTY_TEU,MTY_WGT,
       POL,POD
  FROM (        
        SELECT A.OPR_CD,A.COST_WK,A.TRD_CD,A.SUB_TRD_CD,A.RLANE_CD,A.VVD,A.DIR_CD,
               A.BSA,
               NVL(B.BSA_CAPA,0) B_BSA,
               NVL(C.BSA_CAPA,0) C_BSA,
               NVL(B.UPD_DT,TO_DATE('19900101','YYYYMMDD')) B_UPD_DT,
               NVL(C.UPD_DT,TO_DATE('19900101','YYYYMMDD')) C_UPD_DT,
               SIGN(NVL(A.UPD_DT,TO_DATE('19900101','YYYYMMDD')) - NVL(B.UPD_DT,TO_DATE('19900101','YYYYMMDD'))) B_LAST_FLG,
               SIGN(NVL(A.UPD_DT,TO_DATE('19900101','YYYYMMDD')) - NVL(C.UPD_DT,TO_DATE('19900101','YYYYMMDD'))) C_LAST_FLG,  
               A.CNTR_TYPE,
               A.CNTR_20,A.CNTR_20H,A.CNTR_40,A.CNTR_40H,A.CNTR_45,
               A.FULL_TEU,A.FULL_WGT,A.MTY_TEU,A.MTY_WGT,
               A.POL,A.POD
          FROM (       
                SELECT  S.OPR_CD
                       ,V.COST_WK
                       ,V.TRD_CD
                       ,V.SUB_TRD_CD
                       ,V.RLANE_CD
                       ,S.VSL_CD||S.VOY_NO||S.DIR_CD AS VVD
                       ,S.DIR_CD
                       ,NVL(B.BASIC_SLOT,0) BSA
                       ,S.CNTR_TYPE
                       ,SUM(DECODE(S.CNTR_SIZE, '2', S.QTY, 0)) AS CNTR_20
                       ,SUM(DECODE(S.CNTR_SIZE, '3', S.QTY, 0)) AS CNTR_20H
                       ,SUM(DECODE(S.CNTR_SIZE, '4', S.QTY, 0)) AS CNTR_40
                       ,SUM(DECODE(S.CNTR_SIZE, 'H', S.QTY, 0)) AS CNTR_40H
                       ,SUM(DECODE(S.CNTR_SIZE, 'L', S.QTY, 0)) AS CNTR_45
                       ,DECODE(S.CNTR_TYPE, 'F', SUM(DECODE(S.CNTR_SIZE, '2', S.QTY, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, '3', S.QTY, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, '4', S.QTY, 0)) * 2 +
                                                 SUM(DECODE(S.CNTR_SIZE, 'H', S.QTY, 0)) * 2 +
                                                 SUM(DECODE(S.CNTR_SIZE, 'L', S.QTY, 0)) * 2 , 0) AS FULL_TEU
                       ,DECODE(S.CNTR_TYPE, 'F', SUM(DECODE(S.CNTR_SIZE, '2', S.WEIGHT, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, '3', S.WEIGHT, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, '4', S.WEIGHT, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, 'H', S.WEIGHT, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, 'L', S.WEIGHT, 0)) , 0) AS FULL_WGT
                       ,DECODE(S.CNTR_TYPE, 'E', SUM(DECODE(S.CNTR_SIZE, '2', S.QTY, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, '3', S.QTY, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, '4', S.QTY, 0)) * 2 +
                                                 SUM(DECODE(S.CNTR_SIZE, 'H', S.QTY, 0)) * 2 +
                                                 SUM(DECODE(S.CNTR_SIZE, 'L', S.QTY, 0)) * 2 , 0) AS MTY_TEU
                       ,DECODE(S.CNTR_TYPE, 'E', SUM(DECODE(S.CNTR_SIZE, '2', S.WEIGHT, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, '3', S.WEIGHT, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, '4', S.WEIGHT, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, 'H', S.WEIGHT, 0)) +
                                                 SUM(DECODE(S.CNTR_SIZE, 'L', S.WEIGHT, 0)) , 0) AS MTY_WGT
                       ,S.POL
                       ,S.POD
                       ,MAX(B.UPD_DT) UPD_DT
                  FROM  RDR_HEADER     H
                       ,RDR_SUMMARY    S
                       ,(SELECT  M.VSL_CD,
                                 M.VOY_NO,
                                 M.DIR_CD,
                                 M.REGION,
                                 M.OPR_CD        AS OPR_CD,
                                 SUM(M.BSA_SLOT) AS BASIC_SLOT,
                                 MAX(M.UPDATE_TIME) UPD_DT
                           FROM  RDR_ALLOCATION M
                          WHERE  1 = 1
                			#if (${rhq} == 'A')
                			AND M.REGION IN ('A', 'D','E')
                			#else
                				#if (${rhq} == 'M')
                				AND M.REGION IN ('M', 'S')
                				#else
                				AND M.REGION = @[rhq]
                				#end
                			#end
                         GROUP BY M.VSL_CD, M.VOY_NO, M.DIR_CD, M.REGION, M.OPR_CD
                        ) B
                       ,COA_MON_VVD    V
                       ,(
                        SELECT  /*+ INDEX (P, XPKCOA_WK_PRD)*/
                                P.COST_YR||P.COST_WK AS COST_YRWK,
                                ROWNUM               AS RNUM
                          FROM  COA_WK_PRD P
                         WHERE  P.COST_YR||P.COST_WK >= @[year]||@[week]
                           AND  ROWNUM               <= @[duration]
                        ) P
                 WHERE  1 = 1   
                   AND  SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK = P.COST_YRWK
                   AND V.TRD_CD     = @[trade]
                   AND V.DIR_CD     LIKE @[bound] || '%'
                   AND V.SUB_TRD_CD LIKE @[subtrade] || '%'
                   AND V.RLANE_CD LIKE @[rlane_cd] || '%'

                #if (${operator} != '')
                   AND B.OPR_CD     = @[operator]
                #end
        #if (${rhq} == 'A')
               AND B.REGION IN ('A', 'D',DECODE(V.RLANE_CD||V.DIR_CD,'AE1AEW','E','D'))
        #end
        #if (${rhq} =='E')
			   AND B.REGION = DECODE(V.RLANE_CD,'AE1AE',DECODE(V.DIR_CD,'E','E','XXX'),'E')
        #end
                   AND  H.VSL_CD = S.VSL_CD
                   AND  H.VOY_NO = S.VOY_NO
                   AND  H.DIR_CD = S.DIR_CD
                   AND  H.REGION = S.REGION
                   AND  H.VSL_CD = V.VSL_CD
                   AND  H.VOY_NO = V.SKD_VOY_NO
                   AND  H.DIR_CD = V.DIR_CD
                   AND  H.VSL_CD = B.VSL_CD
                   AND  H.VOY_NO = B.VOY_NO
                   AND  H.DIR_CD = B.DIR_CD
                   AND  H.REGION = B.REGION
                   AND  S.OPR_CD = B.OPR_CD
                   AND  S.CNTR_SIZE IN ('2',  '3',  '4',  'H',  'L' )
                   AND  DECODE(V.RLANE_CD, 'WAFIE', 'O', 'NBSIM', 'O', V.IOC_CD)   = 'O'
                   AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N')
                GROUP BY
                        S.OPR_CD
                       ,V.COST_WK
                       ,V.TRD_CD
                       ,V.SUB_TRD_CD
                       ,V.RLANE_CD
                       ,S.VSL_CD||S.VOY_NO||S.DIR_CD
                       ,S.DIR_CD
                       ,B.BASIC_SLOT
                       ,S.CNTR_TYPE
                       ,S.POL
                       ,S.POD
                ) A,
                (
                select TRD_CD,SUB_TRD_CD,VSL_CD,SKD_VOY_NO,SKD_DIR_CD,CRR_CD,
                       BSA_CAPA,UPD_DT
                  from SPC_BSA_MGMT
                 WHERE 1=1
                  #if (${trade} != '')
                   AND TRD_CD     = @[trade]
                  #end
                  #if (${subtrade} != '')
                   AND SUB_TRD_CD     = @[subtrade]
                  #end          
                  #if (${bound} != '')
                   AND SKD_DIR_CD     = @[bound]
                  #end         
                  #if (${operator} != '')
                   AND CRR_CD     = @[operator]
                  #end
                ) B,
                (
                select DISTINCT TRD_CD,SUB_TRD_CD,VSL_CD,SKD_DIR_CD,CRR_CD,
                       FIRST_VALUE(BSA_CAPA) OVER(PARTITION BY TRD_CD,SUB_TRD_CD,VSL_CD,CRR_CD,SKD_DIR_CD ORDER BY BSA_SEQ DESC) BSA_CAPA,
                       FIRST_VALUE(UPD_DT) OVER(PARTITION BY TRD_CD,SUB_TRD_CD,VSL_CD,CRR_CD,SKD_DIR_CD ORDER BY BSA_SEQ DESC) UPD_DT
                  from SPC_BSA_MGMT
                  WHERE 1=1
                  #if (${trade} != '')
                   AND TRD_CD     = @[trade]
                  #end
                  #if (${subtrade} != '')
                   AND SUB_TRD_CD     = @[subtrade]
                  #end          
                  #if (${bound} != '')
                   AND SKD_DIR_CD     = @[bound]
                  #end         
                  #if (${operator} != '')
                   AND CRR_CD     = @[operator]
                  #end
                 ) C          
             WHERE A.TRD_CD          = B.TRD_CD(+)
               AND A.SUB_TRD_CD      = B.SUB_TRD_CD(+)
               AND SUBSTR(A.VVD,1,4) = B.VSL_CD(+)
               AND SUBSTR(A.VVD,5,4) = B.SKD_VOY_NO(+)
               AND A.DIR_CD          = B.SKD_DIR_CD(+)
               AND A.OPR_CD      = B.CRR_CD(+)
               AND A.TRD_CD          = C.TRD_CD(+)
               AND A.SUB_TRD_CD      = C.SUB_TRD_CD(+)
               AND SUBSTR(A.VVD,1,4) = C.VSL_CD(+)
               AND A.DIR_CD          = C.SKD_DIR_CD(+)   
               AND A.OPR_CD      = C.CRR_CD(+)     
       )
ORDER BY
        COST_WK
       ,TRD_CD
       ,SUB_TRD_CD
       ,RLANE_CD
       ,VVD    
       ,POD
       ,POL
       ,OPR_CD
       ,CNTR_TYPE			]]></sql>
			<params>
				<param name="rhq" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="duration" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="subtrade" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="operator" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
