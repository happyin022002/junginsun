<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="FACCommCalculationDBDAOSearchFACAGMTRateInfoRSQL">
			<desc><![CDATA[FACCommCalculationDBDAOSearchFACAGMTRateInfoRSQL]]></desc>
			<sql><![CDATA[
SELECT
  CASE AGM.FAC_OFC_CD
  WHEN ARR.AR_OFC_CD
  THEN 'AR'
  ELSE 'PP'
   END                                            AS OFC_ODR,
  CASE
  WHEN ARR.CURR_CD = AGM.CURR_CD
  THEN 'Y'
  ELSE 'N'
   END
    ||
  CASE --> SHIPPER
  WHEN NVL (AGM.SHPR_CNT_CD, '*') = '*'
  THEN 'N'
  WHEN AGM.SHPR_CNT_CD   = ARR.SHPR_CNT_CD
   AND AGM.SHPR_SEQ = ARR.SHPR_CUST_SEQ
  THEN 'Y'
  ELSE 'N'
   END
    ||
  CASE --> SERVICE SCOPE
  WHEN NVL (AGM.SVC_SCP_CD, '*') = '*'
  THEN 'N'
  WHEN AGM.SVC_SCP_CD   = ARR.SVC_SCP_CD
  THEN 'Y'
  ELSE 'N'
   END
    ||
  CASE --> RECEIVE TERM
  WHEN NVL (AGM.BKG_RCV_TERM_CD, '*') = '*'
  THEN 'N'
  WHEN AGM.BKG_RCV_TERM_CD   = ARR.RCV_TERM_CD
  THEN 'Y'
  ELSE 'N'
   END
    ||
  CASE --> SERVICE CONTRACT
  WHEN NVL (AGM.SC_NO, '*') = '*'
  THEN 'N'
  WHEN AGM.SC_NO   = ARR.SC_NO
  THEN 'Y'
  ELSE 'N'
   END
    ||
  CASE --> RFA
  WHEN NVL (AGM.RFA_NO, '*') = '*'
  THEN 'N'
  WHEN AGM.RFA_NO   = ARR.RFA_NO
  THEN 'Y'
  ELSE 'N'
   END
    ||
  CASE
  WHEN AGM.CMDT_TP_CD = '2'
   AND AGM.CMDT_CD    = ARR.REP_CMDT_CD
  THEN 'Y'
  WHEN AGM.CMDT_TP_CD = '3'
   AND AGM.CMDT_CD    = ARR.CMDT_CD
  THEN 'Y'
  ELSE 'N'
   END
    || NVL (AGM.FAC_DBL_FLG, 'N')
    || NVL (AGM.FAC_SGL_FLG, 'N')
    || NVL (AGM.POR_GRP_TP_CD, '*')
    || NVL (AGM.POL_GRP_TP_CD, '*')
    || NVL (AGM.POD_GRP_TP_CD, '*')
    || NVL (AGM.DEL_GRP_TP_CD, '*')
    || NVL (AGM.CMDT_TP_CD, '*')                  AS ODR,
	   ARR.BKG_NO,
       AGM.FF_CNT_CD, 
       TO_CHAR (AGM.FF_SEQ,'FM000000') AS FF_CUST_SEQ, 
       AGM.SHPR_CNT_CD, 
       TO_CHAR (AGM.SHPR_SEQ, 'FM000000')    AS SHPR_CUST_SEQ,  
       AGM.FAC_DIV_CD, 
       --AGM.FAC_TP_CD, 
       NVL (AGM.FAC_BKG_RT, 0)                    AS FAC_BKG_RT,  
	   NVL (AGM.FAC_BKG_AMT, 0)                    AS FAC_BKG_AMT,
       NVL (RTRIM (AGM.FAC_CHG_CTNT), 'X')        AS FAC_CHG_CTNT,  
       NVL (AGM.FAC_BX_AMT, 0)                     AS FAC_BX_AMT, 
       NVL (AGM.FAC_TEU_AMT, 0)                    AS FAC_DRY_TEU_AMT, 
       NVL (AGM.FAC_FEU_AMT, 0)                    AS FAC_DRY_FEU_AMT, 
       NVL (AGM.FAC_RF_TEU_AMT, 0)                 AS FAC_RF_TEU_AMT, 
       NVL (AGM.FAC_RF_FEU_AMT, 0)                 AS FAC_RF_FEU_AMT,  
       NVL (AGM.FAC_SGL_FLG, 'N')                 AS FAC_SGL_FLG, 
       --NVL (AGM.GRS_NET_DIV_CD, '*')              AS GRS_NET_DIV_CD, 
       NVL (AGM.FAC_SPCL_TEU_AMT, 0)               AS FAC_SPCL_TEU_AMT, 
       NVL (AGM.FAC_SPCL_FEU_AMT, 0)               AS FAC_SPCL_FEU_AMT,  
       AGM.FAC_OFC_CD, 
       AGM.FAC_AGMT_SEQ,
       AGM.FAC_SPCL_CNTR_TP_CTNT1, 
       AGM.FAC_SPCL_CNTR_RT1, 
       AGM.FAC_SPCL_CNTR_TP_CTNT2, 
       AGM.FAC_SPCL_CNTR_RT2, 
       NVL (AGM.CURR_CD,'USD')                    AS CURR_CD, 
       AGM.POR_ROUT_CD 
    || AGM.POL_ROUT_CD 
    || AGM.POD_ROUT_CD 
    || AGM.DEL_ROUT_CD AS ROUT_CD
  FROM ACM_FAC_AGMT AGM,
     (
---------------------------------------------------------------------------------------------------------------------
           SELECT
                  BKG.BKG_NO,
                  BKG.SVC_SCP_CD,
                  BKG.RCV_TERM_CD,
                  BKG.DE_TERM_CD,
                  BKG.SC_NO,
                  BKG.RFA_NO,
                  BKG.CMDT_CD,
                  BKG.REP_CMDT_CD,
-------------------------------------------------------------------------------------------------
-- <APPLICATION DATE>
-- 1. TRUNK의 출항일자를 구한다.
-------------------------------------------------------------------------------------------------
                (
                      SELECT /*+INDEX(VSK_VSL_PORT_SKD XPKVSK_VSL_PORT_SKD) */
                             TO_CHAR (SKD.VPS_ETD_DT,'YYYYMMDD') AS TRUNK_ETD_DT
                        FROM VSK_VSL_PORT_SKD SKD,
                             BKG_VVD          VVD
                       WHERE VVD.VSL_PRE_PST_CD             = 'T'
                         AND SKD.VSL_CD                 = NVL (VVD.VSL_CD, '*')
                         AND SKD.SKD_VOY_NO             = NVL (VVD.SKD_VOY_NO, '*')
                         AND SKD.SKD_DIR_CD             = NVL (VVD.SKD_DIR_CD, '*')
                         AND NVL (SKD.SKD_CNG_STS_CD, ' ') <> 'S'
                         AND SKD.VPS_PORT_CD            = NVL (VVD.POL_CD, '*')
                         AND SKD.VT_ADD_CALL_FLG IS NULL
                         AND VVD.BKG_NO                     = BKG.BKG_NO
                         AND ROWNUM                     = 1
                ) AS TRUNK_ETD_DT,
-------------------------------------------------------------------------------------------------
-- POR, POL, POD, DEL의 정보를 서로 다른 경우의 수 1296개(6^4,6의 네제곱)의 배열로 생성한다.
--
-------------------------------------------------------------------------------------------------
             CASE ODR.POR_GRP_TP_CD
             WHEN '1' THEN POR.CONTI_CD
             WHEN '2' THEN POR.SCONTI_CD
             WHEN '3' THEN POR.CNT_CD
             WHEN '4' THEN POR.RGN_CD
             WHEN '6' THEN POR.LOC_CD
             ELSE '*'
              END                                AS POR_ROUT_CD,
             CASE ODR.POL_GRP_TP_CD
             WHEN '1' THEN POL.CONTI_CD
             WHEN '2' THEN POL.SCONTI_CD
             WHEN '3' THEN POL.CNT_CD
             WHEN '4' THEN POL.RGN_CD
             WHEN '6' THEN POL.LOC_CD
             ELSE '*'
              END                                AS POL_ROUT_CD,
             CASE ODR.POD_GRP_TP_CD
             WHEN '1' THEN POD.CONTI_CD
             WHEN '2' THEN POD.SCONTI_CD
             WHEN '3' THEN POD.CNT_CD
             WHEN '4' THEN POD.RGN_CD
             WHEN '6' THEN POD.LOC_CD
             ELSE '*'
              END                                AS POD_ROUT_CD,
             CASE ODR.DEL_GRP_TP_CD
             WHEN '1' THEN DEL.CONTI_CD
             WHEN '2' THEN DEL.SCONTI_CD
             WHEN '3' THEN DEL.CNT_CD
             WHEN '4' THEN DEL.RGN_CD
             WHEN '6' THEN DEL.LOC_CD
             ELSE '*'
              END                                AS DEL_ROUT_CD,
                  ODR.POR_GRP_TP_CD,
                  ODR.POL_GRP_TP_CD,
                  ODR.POD_GRP_TP_CD,
                  ODR.DEL_GRP_TP_CD,
             CASE
             WHEN BKG.POR_CD   = BKG.POL_CD
              AND BKG.POD_CD   = BKG.DEL_CD
             THEN 'NN'
             WHEN BKG.POR_CD  <> BKG.POL_CD
              AND BKG.POD_CD  <> BKG.DEL_CD
              AND NOT EXISTS
                (
                      SELECT
                             'X'
                        FROM BKG_CHG_RT CHG
                       WHERE CHG.CHG_CD
                          IN
                           (
                             'OIH', 'OAR', 'DIH', 'DAR'
                           )
                         AND CHG.FRT_INCL_XCLD_DIV_CD = 'N'
                         AND CHG.BKG_NO               = BKG.BKG_NO
                )
             THEN 'YY'
             WHEN BKG.POD_CD <>  BKG.DEL_CD
              AND NOT EXISTS
                (
                      SELECT
                             'X'
                        FROM BKG_CHG_RT CHG
                       WHERE CHG.CHG_CD
                          IN
                           (
                             'DIH', 'DAR'
                           )
                         AND CHG.FRT_INCL_XCLD_DIV_CD = 'N'
                         AND CHG.BKG_NO               = BKG.BKG_NO
                )
             THEN 'YN'
             WHEN BKG.POR_CD <>  BKG.POL_CD
              AND NOT EXISTS
                (
                      SELECT
                             'X'
                        FROM BKG_CHG_RT CHG
                       WHERE CHG.CHG_CD
                          IN
                           (
                             'OIH', 'OAR'
                           )
                         AND CHG.FRT_INCL_XCLD_DIV_CD = 'N'
                         AND CHG.BKG_NO               = BKG.BKG_NO
                )
             THEN 'YN'
             ELSE 'NN'
              END                                AS FAC_SGL_DBL_FLG,
-------------------------------------------------------------------------------------------------
-- NET/GROSS 구한다.
--
-------------------------------------------------------------------------------------------------
             CASE
                (
                      SELECT COUNT(DISTINCT CHG_CD) AS CNT
                        FROM BKG_CHG_RT
                       WHERE BKG_NO = BKG.BKG_NO
                         AND FRT_INCL_XCLD_DIV_CD = 'N'
                         AND CHG_CD IN ('OFT')
                )
             WHEN
                (
                      SELECT COUNT(DISTINCT CHG_CD) AS CNT
                        FROM BKG_CHG_RT
                       WHERE BKG_NO = BKG.BKG_NO
                         AND FRT_INCL_XCLD_DIV_CD = 'N'
                )
             THEN 'Y'
             ELSE 'N'
              END                                               AS ALL_IN_RT_CD,
                  NVL (SHR.CUST_CNT_CD, '*')                    AS SHPR_CNT_CD,
                  NVL (TO_CHAR (SHR.CUST_SEQ, 'FM000000'), '*') AS SHPR_CUST_SEQ,
                  NVL (FDR.CUST_CNT_CD, '*')                    AS FF_CNT_CD,
                  NVL (TO_CHAR (FDR.CUST_SEQ, 'FM000000'), '*') AS FF_CUST_SEQ,
             CASE
             WHEN EXISTS
                (
                      SELECT
                             'X'
                        FROM BKG_CHG_RT   CHG
                       WHERE CHG.BKG_NO   = BKG.BKG_NO
                         AND CHG.CHG_CD   = 'OFT'
                         AND CHG.CURR_CD  = 'EUR'
                )
             THEN 'EUR'
             ELSE 'USD'
              END                                     AS CURR_CD,
                  @[bkg_ar_ofc_cd]                    AS AR_OFC_CD, --AR_OFC_CD---------------------- 
                  @[ofc_cd]                           AS PPD_OFC_CD --PPD_OFC_CD---------------------- 
             FROM BKG_BOOKING    BKG,
                  BKG_RATE       RAT,
                  BKG_CUSTOMER   FDR,
                  BKG_CUSTOMER   SHR,
                  MDM_LOCATION   POR,
                  MDM_LOCATION   POL,
                  MDM_LOCATION   POD,
                  MDM_LOCATION   DEL,
                (
-------------------------------------------------------------------------------------------------
-- POR, POL, POD, DEL의 정보를 서로 다른 경우의 수 1296개(6^4,6의 네제곱)의 배열로 생성한다.
--
-------------------------------------------------------------------------------------------------
                      SELECT
                        CASE MOD (CEIL (ROWNUM/216)+1295, 6)
                        WHEN 1 THEN '1'
                        WHEN 2 THEN '2'
                        WHEN 3 THEN '3'
                        WHEN 4 THEN '4'
                        WHEN 5 THEN '6'
                        ELSE '*'
                         END                                AS POR_GRP_TP_CD,
                        CASE MOD (CEIL (ROWNUM/36)+1295, 6)
                        WHEN 1 THEN '1'
                        WHEN 2 THEN '2'
                        WHEN 3 THEN '3'
                        WHEN 4 THEN '4'
                        WHEN 5 THEN '6'
                        ELSE '*'
                         END                                AS POL_GRP_TP_CD,
                        CASE MOD (CEIL (ROWNUM/6 )+1295, 6)
                        WHEN 1 THEN '1'
                        WHEN 2 THEN '2'
                        WHEN 3 THEN '3'
                        WHEN 4 THEN '4'
                        WHEN 5 THEN '6'
                        ELSE '*'
                         END                                AS POD_GRP_TP_CD,
                        CASE MOD (ROWNUM+1295, 6)
                        WHEN 1 THEN '1'
                        WHEN 2 THEN '2'
                        WHEN 3 THEN '3'
                        WHEN 4 THEN '4'
                        WHEN 5 THEN '6'
                        ELSE '*'
                         END                                AS DEL_GRP_TP_CD
                   FROM ALL_OBJECTS ODR
                  WHERE ROWNUM <= 1296
                ) ODR
            WHERE BKG.BKG_NO             = @[bkg_no] --'DUS101173700'  
              AND BKG.BKG_NO             = RAT.BKG_NO
              AND POR.LOC_CD             = BKG.POR_CD
              AND POL.LOC_CD             = BKG.POL_CD
              AND POD.LOC_CD             = BKG.POD_CD
              AND DEL.LOC_CD             = BKG.DEL_CD
              AND BKG.BKG_NO             = FDR.BKG_NO (+)
              AND BKG.BKG_NO             = SHR.BKG_NO (+)
              AND FDR.BKG_CUST_TP_CD (+) = 'F'
              AND SHR.BKG_CUST_TP_CD (+) = 'S'
              AND POR.DELT_FLG           = 'N'
              AND POL.DELT_FLG           = 'N'
              AND POD.DELT_FLG           = 'N'
              AND DEL.DELT_FLG           = 'N'
---------------------------------------------------------------------------------------------------------------------
     ) ARR
---------------------------------------------------------------------------------------------------------------------
 WHERE AGM.FAC_STS_CD                = 'PS'
   AND
     (
       AGM.FAC_OFC_CD                    = ARR.AR_OFC_CD
    OR AGM.FAC_OFC_CD                    = ARR.PPD_OFC_CD
     )
   AND AGM.FF_CNT_CD               = ARR.FF_CNT_CD 
   AND AGM.FF_SEQ
    IN
     (
       TO_NUMBER (999999),
       TO_NUMBER (DECODE(ARR.FF_CUST_SEQ,'*','000000',ARR.FF_CUST_SEQ))
     ) 
   AND NVL (AGM.POR_ROUT_CD, '*')        = ARR.POR_ROUT_CD
   AND NVL (AGM.POR_GRP_TP_CD, '*')      = ARR.POR_GRP_TP_CD
   AND NVL (AGM.POL_ROUT_CD, '*')        = ARR.POL_ROUT_CD
   AND NVL (AGM.POL_GRP_TP_CD, '*')      = ARR.POL_GRP_TP_CD
   AND NVL (AGM.POD_ROUT_CD, '*')        = ARR.POD_ROUT_CD
   AND NVL (AGM.POD_GRP_TP_CD, '*')      = ARR.POD_GRP_TP_CD
   AND NVL (AGM.DEL_ROUT_CD, '*')        = ARR.DEL_ROUT_CD
   AND NVL (AGM.DEL_GRP_TP_CD, '*')      = ARR.DEL_GRP_TP_CD
--> DATE FROM
   AND ARR.TRUNK_ETD_DT
   BETWEEN AGM.FM_EFF_DT
   AND AGM.TO_EFF_DT
--> DATE TO
   AND ARR.TRUNK_ETD_DT
   BETWEEN AGM.FM_EFF_DT

   AND AGM.TO_EFF_DT--> SHIPPER
   AND NVL (AGM.SHPR_CNT_CD, '*')
    IN
     (
       '*', ARR.SHPR_CNT_CD
     )
   AND NVL (AGM.SHPR_SEQ, 0)
    IN
     (
       0, ARR.SHPR_CUST_SEQ
     )
--> SERVICE SCOPE
   AND NVL (AGM.SVC_SCP_CD, '*')
    IN
     (
       '*', ARR.SVC_SCP_CD
     )
--> RECEIVE TERM
   AND NVL (AGM.BKG_RCV_TERM_CD, '*')
    IN
     (
       '*', ARR.RCV_TERM_CD
     )
--> DELIVERY TERM
   AND NVL (AGM.BKG_DE_TERM_CD, '*')
    IN
     (
       '*', ARR.DE_TERM_CD
     )
--> SINGLE FACTOR 
   AND NVL (AGM.FAC_SGL_FLG, 'N') 
    IN 
     ( 
       'N', 
             CASE 
             WHEN FAC_SGL_DBL_FLG = 'YY' 
               OR FAC_SGL_DBL_FLG = 'YN' 
               OR FAC_SGL_DBL_FLG = 'NY' 
             THEN 'Y' 
              END 
     ) 
--> DOUBLE FACTOR 
   AND NVL (AGM.FAC_DBL_FLG, 'N') 
    IN 
     ( 
       'N', 
             CASE 
             WHEN FAC_SGL_DBL_FLG = 'YY' 
             THEN 'Y' 
              END 
     ) 
--> SERVICE CONTRACT
   AND NVL (AGM.SC_NO, '*')
    IN
     (
       '*', ARR.SC_NO
     )
--> RFA
   AND NVL (AGM.RFA_NO, '*')
    IN
     (
       '*', ARR.RFA_NO
     )
--> COMMODITY
   AND NVL (AGM.CMDT_CD, '*')
    IN
     (
             CASE AGM.CMDT_TP_CD
             WHEN '2'
             THEN ARR.REP_CMDT_CD
             WHEN '3'
             THEN ARR.CMDT_CD
             ELSE '*'
              END
     )
-->GROSS / NET DIVISION  'ALL IN RATE'
   AND NVL (AGM.ALL_IN_RT_CD, 'N') = NVL (ARR.ALL_IN_RT_CD, 'N')
ORDER BY 1 DESC, 5 ASC, 2 DESC			]]></sql>
			<params>
				<param name="bkg_ar_ofc_cd" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
