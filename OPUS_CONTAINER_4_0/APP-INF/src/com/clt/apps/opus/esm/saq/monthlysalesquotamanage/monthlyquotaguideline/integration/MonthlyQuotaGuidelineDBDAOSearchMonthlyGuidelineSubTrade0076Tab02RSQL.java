/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : MonthlyQuotaGuidelineDBDAOSearchMonthlyGuidelineSubTrade0076Tab02RSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.01.16
*@LastModifier : 
*@LastVersion : 1.0
* 2015.01.16 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.saq.monthlysalesquotamanage.monthlyquotaguideline.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class MonthlyQuotaGuidelineDBDAOSearchMonthlyGuidelineSubTrade0076Tab02RSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Tab 2 (Sub Trade Tab) 조회
	  * History : 2011.02.14 김종준 [T-선사] YEARLY QTA 부분 삭제
	  * </pre>
	  */
	public MonthlyQuotaGuidelineDBDAOSearchMonthlyGuidelineSubTrade0076Tab02RSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bse_qtr_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("befyrqtr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("mqta_mdl_ver_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("sls_fcast_pub_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("yrmon",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("target_grp",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("version",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.saq.monthlysalesquotamanage.monthlyquotaguideline.integration").append("\n"); 
		query.append("FileName : MonthlyQuotaGuidelineDBDAOSearchMonthlyGuidelineSubTrade0076Tab02RSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH TMP_INPUT_PARMAS AS                                                                                 " ).append("\n"); 
		query.append("        (SELECT DISTINCT                                                                                 " ).append("\n"); 
		query.append("                @[year]                                                             AS BSE_YR           ," ).append("\n"); 
		query.append("                @[bse_qtr_cd]                                                       AS BSE_QTR_CD       ," ).append("\n"); 
		query.append("                @[befyrqtr]                                                         AS BEF_YR_QTR       ," ).append("\n"); 
		query.append("                TO_CHAR(ADD_MONTHS(TO_DATE( @[yrmon] , 'YYYYMM'),  0), 'YYYYMM')    AS CUR_YR_MON       ," ).append("\n"); 
		query.append("                TO_CHAR(ADD_MONTHS(TO_DATE( @[yrmon] , 'YYYYMM'), -1), 'YYYYMM')    AS BEF_YR_MON       ," ).append("\n"); 
		query.append("                TO_CHAR(ADD_MONTHS(TO_DATE( @[yrmon] , 'YYYYMM'),  1), 'YYYYMM')    AS ADD1_YR_MON      ," ).append("\n"); 
		query.append("                TO_CHAR(ADD_MONTHS(TO_DATE( @[yrmon] , 'YYYYMM'),  2), 'YYYYMM')    AS ADD2_YR_MON      ," ).append("\n"); 
		query.append("                SAQ_TGT_GRP_CD                                                      AS SAQ_TGT_GRP_CD   ," ).append("\n"); 
		query.append("                TRD_CD                                                              AS TRD_CD           ," ).append("\n"); 
		query.append("                @[sls_fcast_pub_no]                                                 AS SLS_FCAST_PUB_NO ," ).append("\n"); 
		query.append("                @[mqta_mdl_ver_no]                                                  AS MQTA_MDL_VER_NO  ," ).append("\n"); 
		query.append("                @[version]                                                          AS GLINE_VER_NO      " ).append("\n"); 
		query.append("           FROM SAQ_TGT_GRP_TRD                                                                          " ).append("\n"); 
		query.append("          WHERE SAQ_TGT_GRP_CD = @[target_grp]                                                           " ).append("\n"); 
		query.append("            AND TRD_CD LIKE @[trade]||'%'    )                                                           " ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("    	  '0' AS SUB_SEQ                                                    ," ).append("\n"); 
		query.append("        DECODE(UNI.SUB_TRD_CD, 'TOT', 'TOTAL', UNI.SUB_TRD_CD)  AS TRD_CD ," ).append("\n"); 
		query.append("        UNI.DIR_SEQ                                                       ," ).append("\n"); 
		query.append("        DECODE(UNI.DIR_CD, 'TOT', 'TOTAL', UNI.DIR_CD)          AS DIR_CD ," ).append("\n"); 
		query.append("        ITM.ROW_SEQ                                                       ," ).append("\n"); 
		query.append("        REPLACE(ITM.TEXT, '(P)','') AS ITEM_TEXT,                                                                                " ).append("\n"); 
		query.append("        DECODE( ITM.CODE,                                                                                     " ).append("\n"); 
		query.append("                '05', REPLACE(ITM.TEXT, '(P)','')||'*', -- G.REV                                                                " ).append("\n"); 
		query.append("                '07', REPLACE(ITM.TEXT, '(P)','')||'*', -- CM                                                                   " ).append("\n"); 
		query.append("                '08', REPLACE(ITM.TEXT, '(P)','')||'*', -- CM                                                                   " ).append("\n"); 
		query.append("                REPLACE(ITM.TEXT, '(P)','') ) AS ITEM,   " ).append("\n"); 
		query.append("        SUM(CASE WHEN UNI.GUBUN = 'RECENT_MON' AND UNI.MON_SEQ = '0' THEN                         " ).append("\n"); 
		query.append("             DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                              " ).append("\n"); 
		query.append("                      '02', UNI.TOT_VOY,                                                        " ).append("\n"); 
		query.append("                      '03', UNI.TOT_LOD,                                                        " ).append("\n"); 
		query.append("                      '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1))," ).append("\n"); 
		query.append("                      '05', UNI.TOT_REV/1000,                                                   " ).append("\n"); 
		query.append("                      '06', UNI.TOT_RPB,                                                        " ).append("\n"); 
		query.append("                      '07', UNI.TOT_CM/1000,                                                    " ).append("\n"); 
		query.append("                      '08', UNI.TOT_RA_CM/1000,                                                 " ).append("\n"); 
		query.append("                      '09', UNI.TOT_CMB,                                                        " ).append("\n"); 
		query.append("                      '10', UNI.TOT_RA_CMB)                                                     " ).append("\n"); 
		query.append("             END)                                                AS RECENT_MON,                 " ).append("\n"); 
		query.append("        SUM(CASE WHEN UNI.GUBUN = 'RECENT_TGT_MON' AND UNI.MON_SEQ = '0' THEN                     " ).append("\n"); 
		query.append("             DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                              " ).append("\n"); 
		query.append("                      '02', UNI.TOT_VOY,                                                        " ).append("\n"); 
		query.append("                      '03', UNI.TOT_LOD,                                                        " ).append("\n"); 
		query.append("                      '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1))," ).append("\n"); 
		query.append("                      '05', UNI.TOT_REV/1000,                                                   " ).append("\n"); 
		query.append("                      '06', UNI.TOT_RPB,                                                        " ).append("\n"); 
		query.append("                      '07', UNI.TOT_CM/1000,                                                    " ).append("\n"); 
		query.append("                      '08', UNI.TOT_RA_CM/1000,                                                 " ).append("\n"); 
		query.append("                      '09', UNI.TOT_CMB,                                                        " ).append("\n"); 
		query.append("                      '10', UNI.TOT_RA_CMB)                                                     " ).append("\n"); 
		query.append("             END)                                                AS recent_tgt_mon              " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach( $key in ${monthseq}) " ).append("\n"); 
		query.append("	     ,SUM(CASE WHEN UNI.GUBUN = 'FORECAST' AND UNI.MON_SEQ =	" ).append("\n"); 
		query.append("			 		#if ($key != 'TOT') " ).append("\n"); 
		query.append("			 												$key" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON <> 'TOT'" ).append("\n"); 
		query.append("			 		#else " ).append("\n"); 
		query.append("			 												'1'" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON = 'TOT'" ).append("\n"); 
		query.append("			 		#end" ).append("\n"); 
		query.append("			 														THEN		" ).append("\n"); 
		query.append("             DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    " ).append("\n"); 
		query.append("                      '02', UNI.TOT_VOY,                                              " ).append("\n"); 
		query.append("                      '03', UNI.TOT_LOD,                                              " ).append("\n"); 
		query.append("                      '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1))," ).append("\n"); 
		query.append("                      '05', UNI.TOT_REV/1000,                                         " ).append("\n"); 
		query.append("                      '06', UNI.TOT_RPB,                                              " ).append("\n"); 
		query.append("                      '07', UNI.TOT_CM/1000,                                          " ).append("\n"); 
		query.append("                      '08', 0,                                       " ).append("\n"); 
		query.append("                      '09', UNI.TOT_CMB,                                              " ).append("\n"); 
		query.append("                      '10', 0)                                          " ).append("\n"); 
		query.append("             END) 													AS FCAST_$key," ).append("\n"); 
		query.append("        SUM(CASE WHEN UNI.GUBUN = 'MODEL'    AND UNI.MON_SEQ = " ).append("\n"); 
		query.append("           #if ($key != 'TOT') " ).append("\n"); 
		query.append("			 												$key" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON <> 'TOT'" ).append("\n"); 
		query.append("			 		#else " ).append("\n"); 
		query.append("			 												'1'" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON = 'TOT'" ).append("\n"); 
		query.append("			 		#end" ).append("\n"); 
		query.append("                                                                     THEN" ).append("\n"); 
		query.append("             DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    " ).append("\n"); 
		query.append("                      '02', UNI.TOT_VOY,                                              " ).append("\n"); 
		query.append("                      '03', UNI.TOT_LOD,                                              " ).append("\n"); 
		query.append("                      '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1))," ).append("\n"); 
		query.append("                      '05', UNI.TOT_REV/1000,                                         " ).append("\n"); 
		query.append("                      '06', UNI.TOT_RPB,                                              " ).append("\n"); 
		query.append("                      '07', UNI.TOT_CM/1000,                                          " ).append("\n"); 
		query.append("                      '08', UNI.TOT_RA_CM/1000,                                       " ).append("\n"); 
		query.append("                      '09', UNI.TOT_CMB,                                              " ).append("\n"); 
		query.append("                      '10', UNI.TOT_RA_CMB)                                          " ).append("\n"); 
		query.append("             END) 													AS MDL_RST_$key,                                            " ).append("\n"); 
		query.append("         SUM(CASE WHEN UNI.GUBUN = 'TRADE'    AND UNI.MON_SEQ = " ).append("\n"); 
		query.append("           #if ($key != 'TOT') " ).append("\n"); 
		query.append("			 												$key" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON <> 'TOT'" ).append("\n"); 
		query.append("			 		#else " ).append("\n"); 
		query.append("			 												'1'" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON = 'TOT'" ).append("\n"); 
		query.append("			 		#end" ).append("\n"); 
		query.append("                                                                     THEN" ).append("\n"); 
		query.append("             DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    " ).append("\n"); 
		query.append("                      '02', UNI.TOT_VOY,                                              " ).append("\n"); 
		query.append("                      '03', UNI.TOT_LOD,                                              " ).append("\n"); 
		query.append("                      '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1))," ).append("\n"); 
		query.append("                      '05', UNI.TOT_REV/1000,                                         " ).append("\n"); 
		query.append("                      '06', UNI.TOT_RPB,                                              " ).append("\n"); 
		query.append("                      '07', UNI.TOT_CM/1000,                                          " ).append("\n"); 
		query.append("                      '08', UNI.TOT_RA_CM/1000,                                       " ).append("\n"); 
		query.append("                      '09', UNI.TOT_CMB,                                              " ).append("\n"); 
		query.append("                      '10', UNI.TOT_RA_CMB )                                          " ).append("\n"); 
		query.append("             END) 													AS TRADE_$key,                                              " ).append("\n"); 
		query.append("         SUM(CASE WHEN UNI.GUBUN = 'RHQ'      AND UNI.MON_SEQ = " ).append("\n"); 
		query.append("           #if ($key != 'TOT') " ).append("\n"); 
		query.append("			 												$key" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON <> 'TOT'" ).append("\n"); 
		query.append("			 		#else " ).append("\n"); 
		query.append("			 												'1'" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON = 'TOT'" ).append("\n"); 
		query.append("			 		#end" ).append("\n"); 
		query.append("                                                                     THEN" ).append("\n"); 
		query.append("             DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    " ).append("\n"); 
		query.append("                      '02', UNI.TOT_VOY,                                              " ).append("\n"); 
		query.append("                      '03', UNI.TOT_LOD,                                              " ).append("\n"); 
		query.append("                      '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1))," ).append("\n"); 
		query.append("                      '05', UNI.TOT_REV/1000,                                         " ).append("\n"); 
		query.append("                      '06', UNI.TOT_RPB,                                              " ).append("\n"); 
		query.append("                      '07', UNI.TOT_CM/1000,                                          " ).append("\n"); 
		query.append("                      '08', UNI.TOT_RA_CM/1000,                                       " ).append("\n"); 
		query.append("                      '09', UNI.TOT_CMB,                                              " ).append("\n"); 
		query.append("                      '10', UNI.TOT_RA_CMB )                                          " ).append("\n"); 
		query.append("             END) 													AS RHQ_$key,                                                " ).append("\n"); 
		query.append("        SUM(CASE WHEN UNI.GUBUN = 'FINAL'    AND UNI.MON_SEQ = " ).append("\n"); 
		query.append("           #if ($key != 'TOT') " ).append("\n"); 
		query.append("			 												$key" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON <> 'TOT'" ).append("\n"); 
		query.append("			 		#else " ).append("\n"); 
		query.append("			 												'1'" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON = 'TOT'" ).append("\n"); 
		query.append("			 		#end" ).append("\n"); 
		query.append("                                                                     THEN" ).append("\n"); 
		query.append("             DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    " ).append("\n"); 
		query.append("                      '02', UNI.TOT_VOY,                                              " ).append("\n"); 
		query.append("                      '03', UNI.TOT_LOD,                                              " ).append("\n"); 
		query.append("                      '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1))," ).append("\n"); 
		query.append("                      '05', UNI.TOT_REV/1000,                                         " ).append("\n"); 
		query.append("                      '06', UNI.TOT_RPB,                                              " ).append("\n"); 
		query.append("                      '07', UNI.TOT_CM/1000,                                          " ).append("\n"); 
		query.append("                      '08', UNI.TOT_RA_CM/1000,                                       " ).append("\n"); 
		query.append("                      '09', UNI.TOT_CMB,                                              " ).append("\n"); 
		query.append("                      '10', UNI.TOT_RA_CMB )                                          " ).append("\n"); 
		query.append("             END) 													AS FINAL_$key,                                              " ).append("\n"); 
		query.append("        SUM(CASE WHEN UNI.GUBUN = 'ADJUSTED' AND UNI.MON_SEQ = " ).append("\n"); 
		query.append("           #if ($key != 'TOT') " ).append("\n"); 
		query.append("			 												$key" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON <> 'TOT'" ).append("\n"); 
		query.append("			 		#else " ).append("\n"); 
		query.append("			 												'1'" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON = 'TOT'" ).append("\n"); 
		query.append("			 		#end" ).append("\n"); 
		query.append("                                                                     THEN" ).append("\n"); 
		query.append("             DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    " ).append("\n"); 
		query.append("                      '02', UNI.TOT_VOY,                                              " ).append("\n"); 
		query.append("                      '03', UNI.TOT_LOD,                                              " ).append("\n"); 
		query.append("                      '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1))," ).append("\n"); 
		query.append("                      '05', UNI.TOT_REV/1000,                                         " ).append("\n"); 
		query.append("                      '06', UNI.TOT_RPB,                                              " ).append("\n"); 
		query.append("                      '07', UNI.TOT_CM/1000,                                          " ).append("\n"); 
		query.append("                      '08', UNI.TOT_RA_CM/1000,                                       " ).append("\n"); 
		query.append("                      '09', UNI.TOT_CMB,                                              " ).append("\n"); 
		query.append("                      '10', UNI.TOT_RA_CMB)                                          " ).append("\n"); 
		query.append("             END) 													AS ADJUSTED_$key,                                            " ).append("\n"); 
		query.append("        SUM(CASE WHEN UNI.GUBUN = 'INITIAL'  AND UNI.MON_SEQ = " ).append("\n"); 
		query.append("           #if ($key != 'TOT') " ).append("\n"); 
		query.append("			 												$key" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON <> 'TOT'" ).append("\n"); 
		query.append("			 		#else " ).append("\n"); 
		query.append("			 												'1'" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON = 'TOT'" ).append("\n"); 
		query.append("			 		#end" ).append("\n"); 
		query.append("                                                                     THEN" ).append("\n"); 
		query.append("             DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                                             " ).append("\n"); 
		query.append("                      '02', UNI.TOT_VOY,                                                                       " ).append("\n"); 
		query.append("                      '03', UNI.TOT_LOD,                                                                       " ).append("\n"); 
		query.append("                      '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),               " ).append("\n"); 
		query.append("                      '05', UNI.TOT_REV/1000,                                                                  " ).append("\n"); 
		query.append("                      '06', UNI.TOT_RPB,                                                                       " ).append("\n"); 
		query.append("                      '07', UNI.TOT_CM/1000,                                                                   " ).append("\n"); 
		query.append("                      '08', UNI.TOT_RA_CM/1000,                                                                " ).append("\n"); 
		query.append("                      '09', UNI.TOT_CMB,                                                                       " ).append("\n"); 
		query.append("                      '10', UNI.TOT_RA_CMB)                                                                   " ).append("\n"); 
		query.append("             END) 													AS INITIAL_$key,                                                                                " ).append("\n"); 
		query.append("        SUM(CASE WHEN UNI.GUBUN = 'FINAL_TGT' AND UNI.MON_SEQ = " ).append("\n"); 
		query.append("           #if ($key != 'TOT') " ).append("\n"); 
		query.append("			 												$key" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON <> 'TOT'" ).append("\n"); 
		query.append("			 		#else " ).append("\n"); 
		query.append("			 												'1'" ).append("\n"); 
		query.append("			 							 AND UNI.BSE_MON = 'TOT'" ).append("\n"); 
		query.append("			 		#end" ).append("\n"); 
		query.append("                                                                     THEN" ).append("\n"); 
		query.append("             DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                                             " ).append("\n"); 
		query.append("                      '02', UNI.TOT_VOY,                                                                       " ).append("\n"); 
		query.append("                      '03', UNI.TOT_LOD,                                                                       " ).append("\n"); 
		query.append("                      '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),               " ).append("\n"); 
		query.append("                      '05', UNI.TOT_REV/1000,                                                                  " ).append("\n"); 
		query.append("                      '06', UNI.TOT_RPB,                                                                       " ).append("\n"); 
		query.append("                      '07', UNI.TOT_CM/1000,                                                                   " ).append("\n"); 
		query.append("                      '08', UNI.TOT_RA_CM/1000,                                                                " ).append("\n"); 
		query.append("                      '09', UNI.TOT_CMB,                                                                       " ).append("\n"); 
		query.append("                      '10', UNI.TOT_RA_CMB )                                                                   " ).append("\n"); 
		query.append("             END) 													AS FINAL_TGT_$key" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  FROM  (                                                                              				            " ).append("\n"); 
		query.append("        SELECT  INTG_CD_VAL_CTNT AS CODE,                                                                        " ).append("\n"); 
		query.append("                INTG_CD_VAL_DP_DESC AS TEXT,                                                                     " ).append("\n"); 
		query.append("                INTG_CD_VAL_DP_SEQ AS ROW_SEQ                                                                    " ).append("\n"); 
		query.append("          FROM  COM_INTG_CD_DTL                                                                                    " ).append("\n"); 
		query.append("         WHERE  INTG_CD_ID = 'CD01389'                                                                             " ).append("\n"); 
		query.append("        ) ITM,                                                                                                   " ).append("\n"); 
		query.append("        (                                                                                                                                                                                                               " ).append("\n"); 
		query.append("                                                                                                   " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          SELECT -- MONTHLY QUOTA (RECENT)                                                                             " ).append("\n"); 
		query.append("                  DECODE(QTA.SUB_TRD_CD, '', 'TOT', QTA.SUB_TRD_CD) AS SUB_TRD_CD,                                              " ).append("\n"); 
		query.append("                  'RECENT_MON' AS GUBUN,                                                                                   " ).append("\n"); 
		query.append("                  '0' AS MON_SEQ,                                                                                          " ).append("\n"); 
		query.append("                  DECODE(QTA.BSE_MON, '', 'TOT', QTA.BSE_MON) AS BSE_MON,                                                  " ).append("\n"); 
		query.append("                  DECODE(QTA.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                                 " ).append("\n"); 
		query.append("                  DECODE(QTA.DIR_CD, '', 'TOT', QTA.DIR_CD) AS DIR_CD,                                                     " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_BSA) AS TOT_BSA,                                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_VOY) AS TOT_VOY,                                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_LOD) AS TOT_LOD,                                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_REV) AS TOT_REV,                                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_REV)/SUM(QTA.TOT_LOD) AS TOT_RPB,                                                            " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_CM) AS TOT_CM,                                                                               " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_RA_CM) AS TOT_RA_CM,                                                                         " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_CM)/SUM(QTA.TOT_LOD) AS TOT_CMB,                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_RA_CM)/SUM(QTA.TOT_LOD) AS TOT_RA_CMB,                                                       " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_OP) AS TOT_OP,                                                                               " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_RA_OP) AS TOT_RA_OP,                                                                         " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_OP)/SUM(QTA.TOT_LOD) AS TOT_OPB,                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_RA_OP)/SUM(QTA.TOT_LOD) AS TOT_RA_OPB                                                        " ).append("\n"); 
		query.append("            FROM  (                                                                                                       " ).append("\n"); 
		query.append("                  SELECT -- MONTHLY QUOTA (RECENT)                                                                                                                                                                    " ).append("\n"); 
		query.append("                          QTA.BSE_MON,                                                                                         " ).append("\n"); 
		query.append("                          VVD.SUB_TRD_CD,                                                                                      " ).append("\n"); 
		query.append("                          NVL(DIR.CONV_DIR_CD, QTA.DIR_CD) DIR_CD,                                                             " ).append("\n"); 
		query.append("                          MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                                    " ).append("\n"); 
		query.append("                          COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                               " ).append("\n"); 
		query.append("                          SUM(QTA.LOD_QTY) AS TOT_LOD,                                                                         " ).append("\n"); 
		query.append("                          SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY) AS TOT_REV,                                                         " ).append("\n"); 
		query.append("                          SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY) AS TOT_CM,                                          " ).append("\n"); 
		query.append("                          SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY) AS TOT_RA_CM,                                    " ).append("\n"); 
		query.append("                          SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    ) AS TOT_OP,                                   " ).append("\n"); 
		query.append("                          SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY ) AS TOT_RA_OP                                 " ).append("\n"); 
		query.append("                    FROM  (                                                                                                  " ).append("\n"); 
		query.append("                          SELECT  DISTINCT RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO,                                        " ).append("\n"); 
		query.append("                                  RLS.BSE_YR||RLS.BSE_QTR_CD AS REP_YR_MON                                                  " ).append("\n"); 
		query.append("                            FROM  SAQ_MON_QTA_RLSE RLS,                                                                     " ).append("\n"); 
		query.append("                                  TMP_INPUT_PARMAS INP                                                                      " ).append("\n"); 
		query.append("                           WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD = BEF_YR_QTR                                                   " ).append("\n"); 
		query.append("                             AND  RLS.QTA_RLSE_STS_CD = 'R'                                                                 " ).append("\n"); 
		query.append("                          ) RLS,                                                                                             " ).append("\n"); 
		query.append("                          SAQ_MON_CFM_QTA QTA,                                                                               " ).append("\n"); 
		query.append("                          SAQ_MON_DIR_CONV    DIR,      				                                                        		" ).append("\n"); 
		query.append("                          SAQ_MON_CFM_TGT_VVD VVD,                                                                           " ).append("\n"); 
		query.append("                          TMP_INPUT_PARMAS INP                                                                               " ).append("\n"); 
		query.append("                   WHERE  QTA.MQTA_RLSE_VER_NO = RLS.MQTA_RLSE_VER_NO                                                        " ).append("\n"); 
		query.append("                     AND  QTA.TRD_CD = INP.TRD_CD                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.MQTA_RLSE_VER_NO = QTA.MQTA_RLSE_VER_NO                                                        " ).append("\n"); 
		query.append("                     AND  VVD.BSE_YR = QTA.BSE_YR                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.BSE_QTR_CD = QTA.BSE_QTR_CD                                                                    " ).append("\n"); 
		query.append("                     AND  VVD.BSE_MON = QTA.BSE_MON                                                                          " ).append("\n"); 
		query.append("                     AND  VVD.RLANE_CD = QTA.RLANE_CD                                                                        " ).append("\n"); 
		query.append("                     AND  VVD.TRD_CD = QTA.TRD_CD                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.DIR_CD = QTA.DIR_CD                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.VSL_CD = QTA.VSL_CD                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.SKD_VOY_NO = QTA.SKD_VOY_NO                                                                    " ).append("\n"); 
		query.append("                     AND  VVD.SKD_DIR_CD = QTA.SKD_DIR_CD                                                                    " ).append("\n"); 
		query.append("                     AND  QTA.BSE_YR = DIR.BSE_YR(+)          											   			 " ).append("\n"); 
		query.append("                     AND  DIR.BSE_QTR_CD(+) = @[bse_qtr_cd] 				          	       							   			 " ).append("\n"); 
		query.append("                     AND  QTA.TRD_CD = DIR.TRD_CD(+)       										   		   			 " ).append("\n"); 
		query.append("                     AND  QTA.RLANE_CD = DIR.RLANE_CD(+)       										       			 " ).append("\n"); 
		query.append("                     AND  QTA.DIR_CD = DIR.DIR_CD(+)       										           			 			" ).append("\n"); 
		query.append("                     AND  QTA.LOD_QTY > 0                                                                                                                                                                              " ).append("\n"); 
		query.append("                     AND  QTA.BSE_YR||QTA.BSE_QTR_CD = RLS.REP_YR_MON                                                        " ).append("\n"); 
		query.append("                     AND  QTA.BSE_MON = SUBSTR(INP.BEF_YR_MON, 5, 2)                                                                              " ).append("\n"); 
		query.append("                     AND  QTA.QTA_TGT_CD = 'Q'                                                                               " ).append("\n"); 
		query.append("                  GROUP BY " ).append("\n"); 
		query.append("                          QTA.BSE_YR, QTA.BSE_MON, VVD.SUB_TRD_CD, QTA.RLANE_CD, NVL(DIR.CONV_DIR_CD, QTA.DIR_CD),        " ).append("\n"); 
		query.append("                              VVD.VSL_CD,VVD.SKD_VOY_NO,VVD.SKD_DIR_CD                                                        " ).append("\n"); 
		query.append("                 ) QTA                                                                                                    " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          GROUP BY " ).append("\n"); 
		query.append("                   GROUPING SETS( (QTA.SUB_TRD_CD, QTA.DIR_CD), (QTA.SUB_TRD_CD) ), QTA.BSE_MON                   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   --ROLLUP(QTA.SUB_TRD_CD, QTA.DIR_CD), QTA.BSE_MON                                                   " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          UNION ALL                                                                                                    " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          SELECT -- MONTHLY QUOTA LOAD TARGET (RECENT)                                                                 " ).append("\n"); 
		query.append("                  DECODE(QTA.SUB_TRD_CD, '', 'TOT', QTA.SUB_TRD_CD) AS SUB_TRD_CD,                                              " ).append("\n"); 
		query.append("                  'RECENT_TGT_MON' AS GUBUN,                                                                               " ).append("\n"); 
		query.append("                  '0' AS MON_SEQ,                                                                                          " ).append("\n"); 
		query.append("                  DECODE(QTA.BSE_MON, '', 'TOT', QTA.BSE_MON) AS BSE_MON,                                                  " ).append("\n"); 
		query.append("                  DECODE(QTA.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                                 " ).append("\n"); 
		query.append("                  DECODE(QTA.DIR_CD, '', 'TOT', QTA.DIR_CD) AS DIR_CD,                                                     " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_BSA) AS TOT_BSA,                                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_VOY) AS TOT_VOY,                                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_LOD) AS TOT_LOD,                                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_REV) AS TOT_REV,                                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_REV)/SUM(QTA.TOT_LOD) AS TOT_RPB,                                                            " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_CM) AS TOT_CM,                                                                               " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_RA_CM) AS TOT_RA_CM,                                                                         " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_CM)/SUM(QTA.TOT_LOD) AS TOT_CMB,                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_RA_CM)/SUM(QTA.TOT_LOD) AS TOT_RA_CMB,                                                       " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_OP) AS TOT_OP,                                                                               " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_RA_OP) AS TOT_RA_OP,                                                                         " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_OP)/SUM(QTA.TOT_LOD) AS TOT_OPB,                                                             " ).append("\n"); 
		query.append("                  SUM(QTA.TOT_RA_OP)/SUM(QTA.TOT_LOD) AS TOT_RA_OPB                                                        " ).append("\n"); 
		query.append("            FROM  (                                                                                                       " ).append("\n"); 
		query.append("                  SELECT -- MONTHLY QUOTA (RECENT)                                                                         " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("                          QTA.BSE_MON,                                                                                         " ).append("\n"); 
		query.append("                          VVD.SUB_TRD_CD,                                                                                      " ).append("\n"); 
		query.append("                          NVL(DIR.CONV_DIR_CD, QTA.DIR_CD) DIR_CD,                                                             " ).append("\n"); 
		query.append("                          MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                                    " ).append("\n"); 
		query.append("                          COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                               " ).append("\n"); 
		query.append("                          SUM(QTA.LOD_QTY) AS TOT_LOD,                                                                         " ).append("\n"); 
		query.append("                          SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY) AS TOT_REV,                                                         " ).append("\n"); 
		query.append("                          SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY) AS TOT_CM,                                          " ).append("\n"); 
		query.append("                          SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY) AS TOT_RA_CM,                                    " ).append("\n"); 
		query.append("                          SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    ) AS TOT_OP,                                   " ).append("\n"); 
		query.append("                          SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY ) AS TOT_RA_OP                                 " ).append("\n"); 
		query.append("                    FROM  (                                                                                                  " ).append("\n"); 
		query.append("                          SELECT  DISTINCT RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO,                                        " ).append("\n"); 
		query.append("                                  RLS.BSE_YR||RLS.BSE_QTR_CD AS REP_YR_MON                                                  " ).append("\n"); 
		query.append("                            FROM  SAQ_MON_QTA_RLSE RLS,                                                                     " ).append("\n"); 
		query.append("                                  TMP_INPUT_PARMAS INP                                                                      " ).append("\n"); 
		query.append("                           WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD = BEF_YR_QTR                                                   " ).append("\n"); 
		query.append("                             AND  RLS.QTA_RLSE_STS_CD = 'R'                                                                 " ).append("\n"); 
		query.append("                          ) RLS,                                                                                             " ).append("\n"); 
		query.append("                          SAQ_MON_CFM_QTA QTA,                                                                               " ).append("\n"); 
		query.append("                          SAQ_MON_DIR_CONV    DIR,      				                                                        		" ).append("\n"); 
		query.append("                          SAQ_MON_CFM_TGT_VVD VVD,                                                                           " ).append("\n"); 
		query.append("                          TMP_INPUT_PARMAS INP                                                                               " ).append("\n"); 
		query.append("                   WHERE  QTA.MQTA_RLSE_VER_NO = RLS.MQTA_RLSE_VER_NO                                                        " ).append("\n"); 
		query.append("                     AND  QTA.TRD_CD = INP.TRD_CD                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.MQTA_RLSE_VER_NO = QTA.MQTA_RLSE_VER_NO                                                        " ).append("\n"); 
		query.append("                     AND  VVD.BSE_YR = QTA.BSE_YR                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.BSE_QTR_CD = QTA.BSE_QTR_CD                                                                    " ).append("\n"); 
		query.append("                     AND  VVD.BSE_MON = QTA.BSE_MON                                                                          " ).append("\n"); 
		query.append("                     AND  VVD.RLANE_CD = QTA.RLANE_CD                                                                        " ).append("\n"); 
		query.append("                     AND  VVD.TRD_CD = QTA.TRD_CD                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.DIR_CD = QTA.DIR_CD                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.VSL_CD = QTA.VSL_CD                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.SKD_VOY_NO = QTA.SKD_VOY_NO                                                                    " ).append("\n"); 
		query.append("                     AND  VVD.SKD_DIR_CD = QTA.SKD_DIR_CD                                                                    " ).append("\n"); 
		query.append("                     AND  QTA.BSE_YR = DIR.BSE_YR(+)          											   			 " ).append("\n"); 
		query.append("                     AND  DIR.BSE_QTR_CD(+) = @[bse_qtr_cd]" ).append("\n"); 
		query.append("                     AND  QTA.TRD_CD = DIR.TRD_CD(+)       										   		   			 " ).append("\n"); 
		query.append("                     AND  QTA.RLANE_CD = DIR.RLANE_CD(+)       										       			 " ).append("\n"); 
		query.append("                     AND  QTA.DIR_CD = DIR.DIR_CD(+)       										           			 			" ).append("\n"); 
		query.append("                     AND  QTA.LOD_QTY > 0" ).append("\n"); 
		query.append("                     AND  QTA.BSE_YR||QTA.BSE_QTR_CD = RLS.REP_YR_MON                                                        " ).append("\n"); 
		query.append("                     AND  QTA.BSE_MON = SUBSTR(INP.BEF_YR_MON, 5, 2)" ).append("\n"); 
		query.append("                     AND  QTA.QTA_TGT_CD = 'T'                                                                               " ).append("\n"); 
		query.append("                  GROUP BY  " ).append("\n"); 
		query.append("                          QTA.BSE_YR, QTA.BSE_MON, VVD.SUB_TRD_CD, QTA.RLANE_CD, NVL(DIR.CONV_DIR_CD, QTA.DIR_CD),        " ).append("\n"); 
		query.append("                            VVD.VSL_CD,VVD.SKD_VOY_NO,VVD.SKD_DIR_CD                                                        " ).append("\n"); 
		query.append("                   ) QTA                                                                                                    " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          GROUP BY " ).append("\n"); 
		query.append("                  GROUPING SETS( (QTA.SUB_TRD_CD, QTA.DIR_CD), (QTA.SUB_TRD_CD) ), QTA.BSE_MON " ).append("\n"); 
		query.append("                  --ROLLUP(QTA.SUB_TRD_CD, QTA.DIR_CD), QTA.BSE_MON                                                    " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          UNION ALL                                                                                                    " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          SELECT -- MODEL RESULT                                                                                       " ).append("\n"); 
		query.append("                  DECODE(MRS.SUB_TRD_CD, '', 'TOT', MRS.SUB_TRD_CD) AS SUB_TRD_CD,                                              " ).append("\n"); 
		query.append("                  'MODEL' AS GUBUN,                                                                                        " ).append("\n"); 
		query.append("                  -- 2010.05.07 한달 판매목표 수립을 위한 수정 : BSE_MON이 세달 모두 존재하지 않는 경우 'MON_SEQ'의 MIN값이 1이 아닐수 있으므로 수정" ).append("\n"); 
		query.append("                  --MIN(MON_SEQ) AS MON_SEQ," ).append("\n"); 
		query.append("                  DECODE(MRS.BSE_MON, '', '1', MIN(MON_SEQ)) AS MON_SEQ,                                                                                " ).append("\n"); 
		query.append("                  DECODE(MRS.BSE_MON, '', 'TOT', MRS.BSE_MON) AS BSE_MON,                                                  " ).append("\n"); 
		query.append("                  DECODE(MRS.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                                 " ).append("\n"); 
		query.append("                  DECODE(MRS.DIR_CD, '', 'TOT', MRS.DIR_CD) AS DIR_CD,                                                     " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_BSA) AS TOT_BSA,                                                                             " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_VOY) AS TOT_VOY,                                                                             " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_LOD) AS TOT_LOD,                                                                             " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_REV) AS TOT_REV,                                                                             " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_REV)/SUM(MRS.TOT_LOD) AS TOT_RPB,                                                            " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_CM) AS TOT_CM,                                                                               " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_RA_CM) AS TOT_RA_CM,                                                                         " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_CM)/SUM(MRS.TOT_LOD) AS TOT_CMB,                                                             " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_RA_CM)/SUM(MRS.TOT_LOD) AS TOT_RA_CMB,                                                       " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_OP) AS TOT_OP,                                                                               " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_RA_OP) AS TOT_RA_OP,                                                                         " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_OP)/SUM(MRS.TOT_LOD) AS TOT_OPB,                                                             " ).append("\n"); 
		query.append("                  SUM(MRS.TOT_RA_OP)/SUM(MRS.TOT_LOD) AS TOT_RA_OPB                                                        " ).append("\n"); 
		query.append("            FROM  (                                                                                                       " ).append("\n"); 
		query.append("                  SELECT -- MODEL RESULT                                                                                   " ).append("\n"); 
		query.append("                          MIN(DECODE(MRS.BSE_YR||MRS.BSE_MON,                                                                  " ).append("\n"); 
		query.append("                              INP.ADD1_YR_MON, '2', INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,                                    " ).append("\n"); 
		query.append("                          MRS.BSE_MON,                                                                                         " ).append("\n"); 
		query.append("                          MRS.SUB_TRD_CD,                                                                                      " ).append("\n"); 
		query.append("                          MRS.DIR_CD,                                                                                          " ).append("\n"); 
		query.append("                          MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                                    " ).append("\n"); 
		query.append("                          COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                               " ).append("\n"); 
		query.append("                          SUM(MRS.LOD_QTY) AS TOT_LOD,                                                                         " ).append("\n"); 
		query.append("                          SUM(MRS.GRS_RPB_REV*MRS.LOD_QTY) AS TOT_REV,                                                         " ).append("\n"); 
		query.append("                          SUM((MRS.GRS_RPB_REV-MRS.CM_UC_AMT)*MRS.LOD_QTY) AS TOT_CM,                                          " ).append("\n"); 
		query.append("                          SUM((MRS.GRS_RPB_REV-MRS.RA_CM_UC_AMT)*MRS.LOD_QTY) AS TOT_RA_CM,                                    " ).append("\n"); 
		query.append("                          SUM((MRS.GRS_RPB_REV-MRS.OPFIT_UC_AMT)*MRS.LOD_QTY    ) AS TOT_OP,                                   " ).append("\n"); 
		query.append("                          SUM((MRS.GRS_RPB_REV-MRS.RA_OPFIT_UC_AMT)*MRS.LOD_QTY ) AS TOT_RA_OP                                 " ).append("\n"); 
		query.append("	                  FROM  SAQ_MON_MDL_CTRT_SMRY MRS," ).append("\n"); 
		query.append("	                        SAQ_MON_DIR_CONV DIR,                                                             " ).append("\n"); 
		query.append("	                        SAQ_MON_TGT_VVD VVD,                                                                                  " ).append("\n"); 
		query.append("	                        TMP_INPUT_PARMAS INP                                                                                  " ).append("\n"); 
		query.append("	                 WHERE  MRS.MQTA_MDL_VER_NO = INP.MQTA_MDL_VER_NO                                                             " ).append("\n"); 
		query.append("	                   AND  MRS.TRD_CD = INP.TRD_CD                                                                               " ).append("\n"); 
		query.append("	                   AND  VVD.BSE_YR = INP.BSE_YR                                                                               " ).append("\n"); 
		query.append("	                   AND  VVD.BSE_QTR_CD = INP.BSE_QTR_CD                                                                       " ).append("\n"); 
		query.append("	                   AND  VVD.BSE_MON = MRS.BSE_MON                                                                             " ).append("\n"); 
		query.append("	                   AND  VVD.RLANE_CD = MRS.RLANE_CD                                                                           " ).append("\n"); 
		query.append("	                   AND  VVD.TRD_CD = MRS.TRD_CD                                                                               " ).append("\n"); 
		query.append("	                   AND  VVD.DIR_CD = NVL(DIR.DIR_CD, MRS.DIR_CD)                                                                               " ).append("\n"); 
		query.append("	                   AND  VVD.VSL_CD = MRS.VSL_CD                                                                               " ).append("\n"); 
		query.append("	                   AND  VVD.SKD_VOY_NO = MRS.SKD_VOY_NO                                                                       " ).append("\n"); 
		query.append("	                   AND  VVD.SKD_DIR_CD = MRS.SKD_DIR_CD                                                                       " ).append("\n"); 
		query.append("	                   AND  MRS.LOD_QTY > 0" ).append("\n"); 
		query.append("	                   AND  MRS.TRD_CD         = DIR.TRD_CD(+)" ).append("\n"); 
		query.append("	                   AND  MRS.RLANE_CD       = DIR.RLANE_CD(+)" ).append("\n"); 
		query.append("	                   AND  MRS.DIR_CD         = DIR.CONV_DIR_CD(+)" ).append("\n"); 
		query.append("	                   AND  MRS.BSE_YR         = DIR.BSE_YR(+)" ).append("\n"); 
		query.append("	                   AND  DIR.BSE_QTR_CD (+) = @[bse_qtr_cd]" ).append("\n"); 
		query.append("                  GROUP BY " ).append("\n"); 
		query.append("                          MRS.BSE_YR, MRS.BSE_MON, MRS.SUB_TRD_CD, MRS.RLANE_CD, MRS.DIR_CD,                              " ).append("\n"); 
		query.append("                  		    VVD.VSL_CD,VVD.SKD_VOY_NO,VVD.SKD_DIR_CD                                                           " ).append("\n"); 
		query.append("                  ) MRS                                                                                                    " ).append("\n"); 
		query.append("          GROUP BY " ).append("\n"); 
		query.append("                  GROUPING SETS(								       											    " ).append("\n"); 
		query.append("                      (MRS.BSE_MON, MRS.DIR_CD),						       										    " ).append("\n"); 
		query.append("                      (MRS.BSE_MON), (MRS.DIR_CD),						      										    " ).append("\n"); 
		query.append("                      ()									       													    " ).append("\n"); 
		query.append("                      ), MRS.SUB_TRD_CD                                                                                         " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          UNION ALL                                                                                                    " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          SELECT -- TRADE GROUP, RHQ, FINAL                                                                            " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("                  DECODE(TRD.SUB_TRD_CD, '', 'TOT', TRD.SUB_TRD_CD) AS SUB_TRD_CD,                                              " ).append("\n"); 
		query.append("                  DECODE(TRD.MQTA_STEP_CD, '01','TRADE', '02','RHQ', '03','FINAL') AS GUBUN,                               " ).append("\n"); 
		query.append("                  MIN(MON_SEQ) AS MON_SEQ,                                                                                 " ).append("\n"); 
		query.append("                  DECODE(TRD.BSE_MON, '', 'TOT', TRD.BSE_MON) AS BSE_MON,                                                  " ).append("\n"); 
		query.append("                  DECODE(TRD.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                                 " ).append("\n"); 
		query.append("                  DECODE(TRD.DIR_CD, '', 'TOT', TRD.DIR_CD) AS DIR_CD,                                                     " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_BSA*TRD.TOT_VOY) AS TOT_BSA,                                                                 " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_VOY) AS TOT_VOY,                                                                             " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_LOD) AS TOT_LOD,                                                                             " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_REV) AS TOT_REV,                                                                             " ).append("\n"); 
		query.append("                  DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(TRD.TOT_REV)/SUM(TRD.TOT_LOD)) AS TOT_RPB,                                                       " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_CM) AS TOT_CM,                                                                               " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_RA_CM) AS TOT_RA_CM,                                                                         " ).append("\n"); 
		query.append("                  DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(TRD.TOT_CM)/SUM(TRD.TOT_LOD)) AS TOT_CMB,                                                        " ).append("\n"); 
		query.append("                  DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(TRD.TOT_RA_CM)/SUM(TRD.TOT_LOD)) AS TOT_RA_CMB,                                                  " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_OP) AS TOT_OP,                                                                               " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_RA_OP) AS TOT_RA_OP,                                                                         " ).append("\n"); 
		query.append("                  DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(TRD.TOT_OP)/SUM(TRD.TOT_LOD)) AS TOT_OPB,                                                        " ).append("\n"); 
		query.append("                  DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(TRD.TOT_RA_OP)/SUM(TRD.TOT_LOD)) AS TOT_RA_OPB                                                   " ).append("\n"); 
		query.append("            FROM  (                                                                                                       " ).append("\n"); 
		query.append("                  SELECT -- TRADE GROUP, RHQ, FINAL                                                                        " ).append("\n"); 
		query.append("                          TRD.MQTA_STEP_CD,                                                                                    " ).append("\n"); 
		query.append("                          MIN(DECODE(TRD.BSE_YR||TRD.BSE_MON, INP.ADD1_YR_MON, '2',                                            " ).append("\n"); 
		query.append("                              INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,                                                          " ).append("\n"); 
		query.append("                          TRD.BSE_MON AS BSE_MON,                                                                              " ).append("\n"); 
		query.append("                          TRD.SUB_TRD_CD AS SUB_TRD_CD,                                                                         " ).append("\n"); 
		query.append("                          TRD.DIR_CD AS DIR_CD,                                                                                " ).append("\n"); 
		query.append("                          MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                                    " ).append("\n"); 
		query.append("                          COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                               " ).append("\n"); 
		query.append("                          SUM(TRD.LOD_QTY         ) AS TOT_LOD ,                                                               " ).append("\n"); 
		query.append("                          SUM(TRD.GRS_RPB_REV*TRD.LOD_QTY) AS TOT_REV ,                                                        " ).append("\n"); 
		query.append("                          SUM((TRD.GRS_RPB_REV-TRD.CM_UC_AMT)*TRD.LOD_QTY) AS TOT_CM ,                                         " ).append("\n"); 
		query.append("                          SUM((TRD.GRS_RPB_REV-TRD.RA_CM_UC_AMT)*TRD.LOD_QTY) AS TOT_RA_CM, -- BKG CM                          " ).append("\n"); 
		query.append("                          SUM((TRD.GRS_RPB_REV-TRD.OPFIT_UC_AMT)*TRD.LOD_QTY    ) AS TOT_OP ,                                  " ).append("\n"); 
		query.append("                          SUM((TRD.GRS_RPB_REV-TRD.RA_OPFIT_UC_AMT)*TRD.LOD_QTY ) AS TOT_RA_OP -- BKG OP                       " ).append("\n"); 
		query.append("                    FROM  SAQ_MON_QTA_STEP_VER VER,                                                                         " ).append("\n"); 
		query.append("                          SAQ_MON_QTA_TRD TRD,                                                                              " ).append("\n"); 
		query.append("                          SAQ_MON_TGT_VVD_ADJ VVD,                                                                          " ).append("\n"); 
		query.append("                          TMP_INPUT_PARMAS INP                                                                              " ).append("\n"); 
		query.append("                   WHERE  VER.MQTA_STEP_CD IN ('01', '02', '03') -- TRADE GROUP, RHQ, FINAL                                 " ).append("\n"); 
		query.append("                     AND  VER.BSE_YR = INP.BSE_YR                                                                           " ).append("\n"); 
		query.append("                     AND  VER.BSE_QTR_CD = INP.BSE_QTR_CD                                                                   " ).append("\n"); 
		query.append("                     AND  VER.TRD_CD = INP.TRD_CD                                                                           " ).append("\n"); 
		query.append("                     AND  VER.GLINE_VER_NO = INP.GLINE_VER_NO                                                               " ).append("\n"); 
		query.append("                     AND  ((VER.MQTA_STEP_CD = '01' AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                        " ).append("\n"); 
		query.append("                                                 FROM COM_INTG_CD_DTL A,                                                    " ).append("\n"); 
		query.append("                                                      COM_INTG_CD_DTL B                                                     " ).append("\n"); 
		query.append("                                                 WHERE A.INTG_CD_ID = 'CD00926'                                             " ).append("\n"); 
		query.append("                                                 AND B.INTG_CD_ID = A.INTG_CD_ID                                            " ).append("\n"); 
		query.append("                                                 AND B.INTG_CD_VAL_CTNT = 'DC'                                              " ).append("\n"); 
		query.append("                                                 AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ))                         " ).append("\n"); 
		query.append("                           OR (VER.MQTA_STEP_CD = '02' AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                     " ).append("\n"); 
		query.append("                                                 FROM COM_INTG_CD_DTL A,                                                    " ).append("\n"); 
		query.append("                                                      COM_INTG_CD_DTL B                                                     " ).append("\n"); 
		query.append("                                                 WHERE A.INTG_CD_ID = 'CD00926'                                             " ).append("\n"); 
		query.append("                                                 AND B.INTG_CD_ID = A.INTG_CD_ID                                            " ).append("\n"); 
		query.append("                                                 AND B.INTG_CD_VAL_CTNT = 'DN'                                              " ).append("\n"); 
		query.append("                                                 AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ))                         " ).append("\n"); 
		query.append("                           OR (VER.MQTA_STEP_CD = '03' AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                     " ).append("\n"); 
		query.append("                                                 FROM COM_INTG_CD_DTL A,                                                    " ).append("\n"); 
		query.append("                                                      COM_INTG_CD_DTL B                                                     " ).append("\n"); 
		query.append("                                                 WHERE A.INTG_CD_ID = 'CD00926'                                             " ).append("\n"); 
		query.append("                                                 AND B.INTG_CD_ID = A.INTG_CD_ID                                            " ).append("\n"); 
		query.append("                                                 AND B.INTG_CD_VAL_CTNT = 'FC'                                              " ).append("\n"); 
		query.append("                                                 AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ)))                        " ).append("\n"); 
		query.append("                     AND  TRD.MQTA_STEP_CD = VER.MQTA_STEP_CD                                                               " ).append("\n"); 
		query.append("                     AND  TRD.BSE_YR = VER.BSE_YR                                                                           " ).append("\n"); 
		query.append("                     AND  TRD.BSE_QTR_CD = VER.BSE_QTR_CD                                                                   " ).append("\n"); 
		query.append("                     AND  TRD.TRD_CD = VER.TRD_CD                                                                           " ).append("\n"); 
		query.append("                     AND  TRD.DIR_CD = VER.DIR_CD                                                                           " ).append("\n"); 
		query.append("                     AND  TRD.MQTA_VER_NO = VER.MQTA_VER_NO                                                                 " ).append("\n"); 
		query.append("                     AND  VVD.BSE_YR = VER.BSE_YR                                                                           " ).append("\n"); 
		query.append("                     AND  VVD.BSE_QTR_CD = VER.BSE_QTR_CD                                                                   " ).append("\n"); 
		query.append("                     AND  VVD.GLINE_VER_NO = VER.GLINE_VER_NO                                                               " ).append("\n"); 
		query.append("                     AND  VVD.BSE_MON = TRD.BSE_MON                                                                         " ).append("\n"); 
		query.append("                     AND  VVD.TRD_CD = TRD.TRD_CD                                                                           " ).append("\n"); 
		query.append("                     AND  VVD.DIR_CD = TRD.DIR_CD                                                                           " ).append("\n"); 
		query.append("                     AND  VVD.SUB_TRD_CD = TRD.SUB_TRD_CD                                                                   " ).append("\n"); 
		query.append("                     AND  VVD.RLANE_CD = TRD.RLANE_CD                                                                       " ).append("\n"); 
		query.append("                     AND  VVD.SPRT_GRP_CD = TRD.SPRT_GRP_CD                                                                 " ).append("\n"); 
		query.append("                     AND  VVD.BSA_GRP_CD = TRD.BSA_GRP_CD                                                                   " ).append("\n"); 
		query.append("                  GROUP BY" ).append("\n"); 
		query.append("                          TRD.MQTA_STEP_CD,TRD.BSE_YR,TRD.BSE_MON,TRD.SUB_TRD_CD,TRD.RLANE_CD,TRD.DIR_CD,                 " ).append("\n"); 
		query.append("                          TRD.SPRT_GRP_CD,TRD.BSA_GRP_CD                                                                     " ).append("\n"); 
		query.append("                  ) TRD                                                                                                    " ).append("\n"); 
		query.append("          GROUP BY " ).append("\n"); 
		query.append("                  GROUPING SETS(								       											    " ).append("\n"); 
		query.append("                      (TRD.BSE_MON, TRD.DIR_CD),						       										    " ).append("\n"); 
		query.append("                      (TRD.BSE_MON), (TRD.DIR_CD),						      										    " ).append("\n"); 
		query.append("                      ()									       													    " ).append("\n"); 
		query.append("                      ),TRD.SUB_TRD_CD, TRD.MQTA_STEP_CD                                                                        " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          UNION ALL                                                                                                    " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          SELECT -- FINAL ADJUSTED                                                                                     " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("                  DECODE(RHQ.SUB_TRD_CD,'', 'TOT', RHQ.SUB_TRD_CD ) AS SUB_TRD_CD,                                              " ).append("\n"); 
		query.append("                  'ADJUSTED' AS GUBUN,                                                                                     " ).append("\n"); 
		query.append("                  MIN(MON_SEQ) AS MON_SEQ,                                                                                 " ).append("\n"); 
		query.append("                  DECODE(RHQ.BSE_MON, '', 'TOT', RHQ.BSE_MON) AS BSE_MON,                                                  " ).append("\n"); 
		query.append("                  DECODE(RHQ.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                                 " ).append("\n"); 
		query.append("                  DECODE(RHQ.DIR_CD, '', 'TOT', RHQ.DIR_CD) AS DIR_CD,                                                     " ).append("\n"); 
		query.append("                  SUM(RHQ.TOT_BSA*RHQ.TOT_VOY) AS TOT_BSA,                                                                 " ).append("\n"); 
		query.append("                  SUM(RHQ.TOT_VOY) AS TOT_VOY,                                                                             " ).append("\n"); 
		query.append("                  SUM(RHQ.TOT_LOD) AS TOT_LOD,                                                                             " ).append("\n"); 
		query.append("                  SUM(RHQ.TOT_REV) AS TOT_REV,                                                                             " ).append("\n"); 
		query.append("                  DECODE(SUM(RHQ.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(RHQ.TOT_REV)/SUM(RHQ.TOT_LOD)) AS TOT_RPB,                                                       " ).append("\n"); 
		query.append("                  SUM(RHQ.TOT_CM) AS TOT_CM,                                                                               " ).append("\n"); 
		query.append("                  SUM(RHQ.TOT_RA_CM) AS TOT_RA_CM,                                                                         " ).append("\n"); 
		query.append("                  DECODE(SUM(RHQ.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(RHQ.TOT_CM)/SUM(RHQ.TOT_LOD)) AS TOT_CMB,                                                        " ).append("\n"); 
		query.append("                  DECODE(SUM(RHQ.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(RHQ.TOT_RA_CM)/SUM(RHQ.TOT_LOD)) AS TOT_RA_CMB,                                                  " ).append("\n"); 
		query.append("                  SUM(RHQ.TOT_OP) AS TOT_OP,                                                                               " ).append("\n"); 
		query.append("                  SUM(RHQ.TOT_RA_OP) AS TOT_RA_OP,                                                                         " ).append("\n"); 
		query.append("                  DECODE(SUM(RHQ.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(RHQ.TOT_OP)/SUM(RHQ.TOT_LOD)) AS TOT_OPB,                                                        " ).append("\n"); 
		query.append("                  DECODE(SUM(RHQ.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(RHQ.TOT_RA_OP)/SUM(RHQ.TOT_LOD)) AS TOT_RA_OPB                                                   " ).append("\n"); 
		query.append("            FROM  (                                                                                                       " ).append("\n"); 
		query.append("                  SELECT -- FINAL ADJUSTED                                                                                 " ).append("\n"); 
		query.append("                          RHQ.MQTA_STEP_CD,                                                                                    " ).append("\n"); 
		query.append("                          MIN(DECODE(RHQ.BSE_YR||RHQ.BSE_MON, INP.ADD1_YR_MON, '2',                                            " ).append("\n"); 
		query.append("                              INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,                                                          " ).append("\n"); 
		query.append("                          RHQ.BSE_MON AS BSE_MON,                                                                              " ).append("\n"); 
		query.append("                          RHQ.SUB_TRD_CD AS SUB_TRD_CD,                                                                         " ).append("\n"); 
		query.append("                          RHQ.DIR_CD AS DIR_CD,                                                                                " ).append("\n"); 
		query.append("                          MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                                    " ).append("\n"); 
		query.append("                          COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                               " ).append("\n"); 
		query.append("                          SUM(RHQ.LOD_QTY         ) AS TOT_LOD ,                                                               " ).append("\n"); 
		query.append("                          SUM(RHQ.GRS_RPB_REV*RHQ.LOD_QTY) AS TOT_REV ,                                                        " ).append("\n"); 
		query.append("                          SUM((RHQ.GRS_RPB_REV-RHQ.CM_UC_AMT)*RHQ.LOD_QTY) AS TOT_CM ,                                         " ).append("\n"); 
		query.append("                          SUM((RHQ.GRS_RPB_REV-RHQ.RA_CM_UC_AMT)*RHQ.LOD_QTY) AS TOT_RA_CM,                                    " ).append("\n"); 
		query.append("                          SUM((RHQ.GRS_RPB_REV-RHQ.OPFIT_UC_AMT)*RHQ.LOD_QTY    ) AS TOT_OP ,                                  " ).append("\n"); 
		query.append("                          SUM((RHQ.GRS_RPB_REV-RHQ.RA_OPFIT_UC_AMT)*RHQ.LOD_QTY ) AS TOT_RA_OP                                 " ).append("\n"); 
		query.append("                    FROM  SAQ_MON_QTA_STEP_VER VER,                                                                            " ).append("\n"); 
		query.append("                          SAQ_MON_QTA_RHQ RHQ,                                                                                 " ).append("\n"); 
		query.append("                          SAQ_MON_TGT_VVD_ADJ VVD,                                                                             " ).append("\n"); 
		query.append("                          TMP_INPUT_PARMAS INP                                                                                 " ).append("\n"); 
		query.append("                   WHERE  VER.MQTA_STEP_CD = '04' -- FINAL ADJUSTED                                                            " ).append("\n"); 
		query.append("                     AND  VER.BSE_YR = INP.BSE_YR                                                                              " ).append("\n"); 
		query.append("                     AND  VER.BSE_QTR_CD = INP.BSE_QTR_CD                                                                      " ).append("\n"); 
		query.append("                     AND  VER.TRD_CD = INP.TRD_CD                                                                              " ).append("\n"); 
		query.append("                     AND  VER.GLINE_VER_NO = INP.GLINE_VER_NO                                                                  " ).append("\n"); 
		query.append("                     AND  VER.SAQ_STS_CD IN ('QN', 'QF')                                                                       " ).append("\n"); 
		query.append("                     AND  RHQ.MQTA_STEP_CD = VER.MQTA_STEP_CD                                                                  " ).append("\n"); 
		query.append("                     AND  RHQ.BSE_YR = VER.BSE_YR                                                                              " ).append("\n"); 
		query.append("                     AND  RHQ.BSE_QTR_CD = VER.BSE_QTR_CD                                                                      " ).append("\n"); 
		query.append("                     AND  RHQ.TRD_CD = VER.TRD_CD                                                                              " ).append("\n"); 
		query.append("                     AND  RHQ.DIR_CD = VER.DIR_CD                                                                              " ).append("\n"); 
		query.append("                     AND  RHQ.MQTA_VER_NO = VER.MQTA_VER_NO                                                                    " ).append("\n"); 
		query.append("                     AND  VVD.BSE_YR = VER.BSE_YR                                                                              " ).append("\n"); 
		query.append("                     AND  VVD.BSE_QTR_CD = VER.BSE_QTR_CD                                                                      " ).append("\n"); 
		query.append("                     AND  VVD.GLINE_VER_NO = VER.GLINE_VER_NO                                                                  " ).append("\n"); 
		query.append("                     AND  VVD.BSE_MON = RHQ.BSE_MON                                                                            " ).append("\n"); 
		query.append("                     AND  VVD.TRD_CD = RHQ.TRD_CD                                                                              " ).append("\n"); 
		query.append("                     AND  VVD.DIR_CD = RHQ.DIR_CD                                                                              " ).append("\n"); 
		query.append("                     AND  VVD.SUB_TRD_CD = RHQ.SUB_TRD_CD                                                                      " ).append("\n"); 
		query.append("                     AND  VVD.RLANE_CD = RHQ.RLANE_CD                                                                          " ).append("\n"); 
		query.append("                     AND  VVD.SPRT_GRP_CD = RHQ.SPRT_GRP_CD                                                                    " ).append("\n"); 
		query.append("                     AND  VVD.BSA_GRP_CD = RHQ.BSA_GRP_CD                                                                      " ).append("\n"); 
		query.append("                  GROUP BY " ).append("\n"); 
		query.append("                          RHQ.MQTA_STEP_CD, RHQ.BSE_YR, RHQ.BSE_MON, RHQ.SUB_TRD_CD, RHQ.RLANE_CD, RHQ.DIR_CD,              " ).append("\n"); 
		query.append("                          RHQ.SPRT_GRP_CD, RHQ.BSA_GRP_CD                                                                    " ).append("\n"); 
		query.append("                  ) RHQ                                                                                                    " ).append("\n"); 
		query.append("          GROUP BY" ).append("\n"); 
		query.append("                  GROUPING SETS(								       											    " ).append("\n"); 
		query.append("                      (RHQ.BSE_MON, RHQ.DIR_CD),						       										    " ).append("\n"); 
		query.append("                      (RHQ.BSE_MON), (RHQ.DIR_CD),						      										    " ).append("\n"); 
		query.append("                      ()									       													    " ).append("\n"); 
		query.append("                      ), RHQ.SUB_TRD_CD                                                                                         " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          UNION ALL                                                                                                    " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("          SELECT -- LOADTARGET INITIAL, FINAL                                                                          " ).append("\n"); 
		query.append("                                                                                                                       " ).append("\n"); 
		query.append("                  DECODE(TRD.SUB_TRD_CD, '', 'TOT', TRD.SUB_TRD_CD) AS SUB_TRD_CD,                                              " ).append("\n"); 
		query.append("                  DECODE(TRD.MQTA_STEP_CD, '11','INITIAL', '08','FINAL_TGT') AS GUBUN,                                     " ).append("\n"); 
		query.append("                  MIN(MON_SEQ) AS MON_SEQ,                                                                                 " ).append("\n"); 
		query.append("                  DECODE(TRD.BSE_MON, '', 'TOT', TRD.BSE_MON) AS BSE_MON,                                                  " ).append("\n"); 
		query.append("                  DECODE(TRD.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                                 " ).append("\n"); 
		query.append("                  DECODE(TRD.DIR_CD, '', 'TOT', TRD.DIR_CD) AS DIR_CD,                                                     " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_BSA*TRD.TOT_VOY) AS TOT_BSA,                                                                 " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_VOY) AS TOT_VOY,                                                                             " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_LOD) AS TOT_LOD,                                                                             " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_REV) AS TOT_REV,                                                                             " ).append("\n"); 
		query.append("                  DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(TRD.TOT_REV)/SUM(TRD.TOT_LOD)) AS TOT_RPB,                                                       " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_CM) AS TOT_CM,                                                                               " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_RA_CM) AS TOT_RA_CM,                                                                         " ).append("\n"); 
		query.append("                  DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(TRD.TOT_CM)/SUM(TRD.TOT_LOD)) AS TOT_CMB,                                                        " ).append("\n"); 
		query.append("                  DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(TRD.TOT_RA_CM)/SUM(TRD.TOT_LOD)) AS TOT_RA_CMB,                                                  " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_OP) AS TOT_OP,                                                                               " ).append("\n"); 
		query.append("                  SUM(TRD.TOT_RA_OP) AS TOT_RA_OP,                                                                         " ).append("\n"); 
		query.append("                  DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(TRD.TOT_OP)/SUM(TRD.TOT_LOD)) AS TOT_OPB,                                                        " ).append("\n"); 
		query.append("                  DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                           " ).append("\n"); 
		query.append("                      SUM(TRD.TOT_RA_OP)/SUM(TRD.TOT_LOD)) AS TOT_RA_OPB                                                   " ).append("\n"); 
		query.append("            FROM  (                                                                                                       " ).append("\n"); 
		query.append("                  SELECT -- TRADE GROUP, RHQ, FINAL                                                                        " ).append("\n"); 
		query.append("                          TRD.MQTA_STEP_CD,                                                                                    " ).append("\n"); 
		query.append("                          MIN(DECODE(TRD.BSE_YR||TRD.BSE_MON, INP.ADD1_YR_MON, '2',                                            " ).append("\n"); 
		query.append("                              INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,                                                          " ).append("\n"); 
		query.append("                          TRD.BSE_MON AS BSE_MON,                                                                              " ).append("\n"); 
		query.append("                          TRD.SUB_TRD_CD AS SUB_TRD_CD,                                                                         " ).append("\n"); 
		query.append("                          TRD.DIR_CD AS DIR_CD,                                                                                " ).append("\n"); 
		query.append("                          MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                                    " ).append("\n"); 
		query.append("                          COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                               " ).append("\n"); 
		query.append("                          SUM(TRD.LOD_QTY         ) AS TOT_LOD ,                                                               " ).append("\n"); 
		query.append("                          SUM(TRD.GRS_RPB_REV*TRD.LOD_QTY) AS TOT_REV ,                                                        " ).append("\n"); 
		query.append("                          SUM((TRD.GRS_RPB_REV-TRD.CM_UC_AMT)*TRD.LOD_QTY) AS TOT_CM ,                                         " ).append("\n"); 
		query.append("                          SUM((TRD.GRS_RPB_REV-TRD.RA_CM_UC_AMT)*TRD.LOD_QTY) AS TOT_RA_CM, -- BKG CM                          " ).append("\n"); 
		query.append("                          SUM((TRD.GRS_RPB_REV-TRD.OPFIT_UC_AMT)*TRD.LOD_QTY    ) AS TOT_OP ,                                  " ).append("\n"); 
		query.append("                          SUM((TRD.GRS_RPB_REV-TRD.RA_OPFIT_UC_AMT)*TRD.LOD_QTY ) AS TOT_RA_OP -- BKG OP                       " ).append("\n"); 
		query.append("                    FROM  SAQ_MON_QTA_STEP_VER VER,                                                                         " ).append("\n"); 
		query.append("                          SAQ_MON_QTA_LOD_TGT TRD,                                                                          " ).append("\n"); 
		query.append("                          SAQ_MON_TGT_VVD_ADJ VVD,                                                                          " ).append("\n"); 
		query.append("                          TMP_INPUT_PARMAS INP                                                                              " ).append("\n"); 
		query.append("                   WHERE  VER.MQTA_STEP_CD IN ('11', '08') -- LOAD TARGET INITIAL, FINAL                                    " ).append("\n"); 
		query.append("                     AND  VER.BSE_YR = INP.BSE_YR                                                                           " ).append("\n"); 
		query.append("                     AND  VER.BSE_QTR_CD = INP.BSE_QTR_CD                                                                   " ).append("\n"); 
		query.append("                     AND  VER.TRD_CD = INP.TRD_CD                                                                           " ).append("\n"); 
		query.append("                     AND  VER.GLINE_VER_NO = INP.GLINE_VER_NO                                                               " ).append("\n"); 
		query.append("                     AND  ((VER.MQTA_STEP_CD = '11' AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                        " ).append("\n"); 
		query.append("                                                FROM COM_INTG_CD_DTL A                                                     " ).append("\n"); 
		query.append("                                                WHERE A.INTG_CD_ID = 'CD00926'))                                           " ).append("\n"); 
		query.append("                          OR (VER.MQTA_STEP_CD = '08' AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                     " ).append("\n"); 
		query.append("                                                FROM COM_INTG_CD_DTL A,                                                    " ).append("\n"); 
		query.append("                                                     COM_INTG_CD_DTL B                                                     " ).append("\n"); 
		query.append("                                                WHERE A.INTG_CD_ID = 'CD00926'                                             " ).append("\n"); 
		query.append("                                                AND B.INTG_CD_ID = A.INTG_CD_ID                                            " ).append("\n"); 
		query.append("                                                AND B.INTG_CD_VAL_CTNT = 'DN'                                              " ).append("\n"); 
		query.append("                                                AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ)))                        " ).append("\n"); 
		query.append("                     AND  TRD.MQTA_STEP_CD = VER.MQTA_STEP_CD                                                               " ).append("\n"); 
		query.append("                     AND  TRD.BSE_YR = VER.BSE_YR                                                                           " ).append("\n"); 
		query.append("                     AND  TRD.BSE_QTR_CD = VER.BSE_QTR_CD                                                                   " ).append("\n"); 
		query.append("                     AND  TRD.TRD_CD = VER.TRD_CD                                                                           " ).append("\n"); 
		query.append("                     AND  TRD.DIR_CD = VER.DIR_CD                                                                           " ).append("\n"); 
		query.append("                     AND  TRD.MQTA_VER_NO = VER.MQTA_VER_NO                                                                 " ).append("\n"); 
		query.append("                     AND  VVD.BSE_YR = VER.BSE_YR                                                                           " ).append("\n"); 
		query.append("                     AND  VVD.BSE_QTR_CD = VER.BSE_QTR_CD                                                                   " ).append("\n"); 
		query.append("                     AND  VVD.GLINE_VER_NO = VER.GLINE_VER_NO                                                               " ).append("\n"); 
		query.append("                     AND  VVD.BSE_MON = TRD.BSE_MON                                                                         " ).append("\n"); 
		query.append("                     AND  VVD.TRD_CD = TRD.TRD_CD                                                                           " ).append("\n"); 
		query.append("                     AND  VVD.DIR_CD = TRD.DIR_CD                                                                           " ).append("\n"); 
		query.append("                     AND  VVD.SUB_TRD_CD = TRD.SUB_TRD_CD                                                                   " ).append("\n"); 
		query.append("                     AND  VVD.RLANE_CD = TRD.RLANE_CD                                                                       " ).append("\n"); 
		query.append("                     AND  VVD.SPRT_GRP_CD = TRD.SPRT_GRP_CD                                                                 " ).append("\n"); 
		query.append("                     AND  VVD.BSA_GRP_CD = TRD.BSA_GRP_CD                                                                   " ).append("\n"); 
		query.append("                  GROUP BY" ).append("\n"); 
		query.append("                          TRD.MQTA_STEP_CD, TRD.BSE_YR, TRD.BSE_MON, TRD.SUB_TRD_CD, TRD.RLANE_CD, TRD.DIR_CD,              " ).append("\n"); 
		query.append("                          TRD.SPRT_GRP_CD, TRD.BSA_GRP_CD                                                                    " ).append("\n"); 
		query.append("                  ) TRD                                                                                                    " ).append("\n"); 
		query.append("          GROUP BY " ).append("\n"); 
		query.append("                  GROUPING SETS(								       										        " ).append("\n"); 
		query.append("                      (TRD.BSE_MON, TRD.DIR_CD),						       									        " ).append("\n"); 
		query.append("                      (TRD.BSE_MON), (TRD.DIR_CD),						      									        " ).append("\n"); 
		query.append("                      ()									       												        " ).append("\n"); 
		query.append("                      ),TRD.SUB_TRD_CD ,TRD.MQTA_STEP_CD                                                                       " ).append("\n"); 
		query.append("           												                                                            " ).append("\n"); 
		query.append("        ) UNI                                                                                                    " ).append("\n"); 
		query.append("GROUP BY UNI.DIR_SEQ, UNI.DIR_CD, ITM.CODE, ITM.TEXT, ITM.ROW_SEQ, UNI.SUB_TRD_CD                            " ).append("\n"); 
		query.append("ORDER BY UNI.SUB_TRD_CD, UNI.DIR_SEQ, ITM.ROW_SEQ" ).append("\n"); 

	}
}