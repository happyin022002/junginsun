<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaGuidelineDBDAOSearchMonthlyGuidelineTargetGroup0076Tab01RSQL">
			<desc><![CDATA[Tab 1 (Trade Tab) 조회
History : 2011.02.14 김종준 [T-선사] YEARLY QTA 부분 삭제]]></desc>
			<sql><![CDATA[
WITH TMP_INPUT_PARMAS AS                                                                           
        (SELECT  DISTINCT                                                                          
                 @[year]                                                          AS BSE_YR,       
                 @[bse_qtr_cd]                                                    AS BSE_QTR_CD,   
                 @[befyrqtr]                                                      AS BEF_YR_QTR,   
                 TO_CHAR(ADD_MONTHS(TO_DATE( @[yrmon] , 'YYYYMM'), 0), 'YYYYMM')  AS CUR_YR_MON,   
                 TO_CHAR(ADD_MONTHS(TO_DATE( @[yrmon] , 'YYYYMM'), -1), 'YYYYMM') AS BEF_YR_MON,   
                 TO_CHAR(ADD_MONTHS(TO_DATE( @[yrmon] , 'YYYYMM'), 1), 'YYYYMM')  AS ADD1_YR_MON,  
                 TO_CHAR(ADD_MONTHS(TO_DATE( @[yrmon] , 'YYYYMM'), 2), 'YYYYMM')  AS ADD2_YR_MON,  
                 SAQ_TGT_GRP_CD,                          
                 TRD_CD AS TRD_CD,                        
                 @[sls_fcast_pub_no] AS SLS_FCAST_PUB_NO, 
                 @[mqta_mdl_ver_no]  AS MQTA_MDL_VER_NO,  
                 @[version]          AS GLINE_VER_NO      
           FROM  SAQ_TGT_GRP_TRD                          
          WHERE  SAQ_TGT_GRP_CD = @[target_grp]    )                                                                       
SELECT
        UNI.SUB_SEQ, 
        DECODE(UNI.TRD_CD, 'TOT', 'TOTAL', UNI.TRD_CD) AS TRD_CD,                                          
        UNI.DIR_SEQ,                                                                                       
        DECODE(UNI.DIR_CD, 'TOT', 'TOTAL', UNI.DIR_CD) AS DIR_CD,                                             
        ITM.ROW_SEQ,                                                                                          
        REPLACE(ITM.TEXT, '(P)','') AS ITEM_TEXT,                                                                                
        DECODE( ITM.CODE,                                                                                     
                '05', REPLACE(ITM.TEXT, '(P)','')||'*', -- G.REV                                                                
                '07', REPLACE(ITM.TEXT, '(P)','')||'*', -- CM                                                                   
                '08', REPLACE(ITM.TEXT, '(P)','')||'*', -- CM                                                                   
                REPLACE(ITM.TEXT, '(P)','') ) AS ITEM,                                                                                
        SUM(CASE WHEN UNI.GUBUN = 'RECENT_YR' AND UNI.MON_SEQ = '0' THEN                                            
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                                             
                     '02', UNI.TOT_VOY,                                                                       
                     '03', UNI.TOT_LOD,                                                                       
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),               
                     '05', UNI.TOT_REV/1000,                                                                  
                     '06', UNI.TOT_RPB,                                                                       
                     '07', UNI.TOT_CM/1000,                                                                   
                     '08', UNI.TOT_RA_CM/1000,                                                                
                     '09', UNI.TOT_CMB,                                                                       
                     '10', UNI.TOT_RA_CMB)                                                                    
            END) AS RECENT_YR,                                                                                
        SUM(CASE WHEN UNI.GUBUN = 'RECENT_MON' AND UNI.MON_SEQ = '0' THEN                                        
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                                             
                     '02', UNI.TOT_VOY,                                                                       
                     '03', UNI.TOT_LOD,                                                                       
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),               
                     '05', UNI.TOT_REV/1000,                                                                  
                     '06', UNI.TOT_RPB,                                                                       
                     '07', UNI.TOT_CM/1000,                                                                   
                     '08', UNI.TOT_RA_CM/1000,                                                                
                     '09', UNI.TOT_CMB,                                                                       
                     '10', UNI.TOT_RA_CMB)                                                                    
            END) AS RECENT_MON,                                                                               
        SUM(CASE WHEN UNI.GUBUN = 'RECENT_TGT_MON' AND UNI.MON_SEQ = '0' THEN                                    
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                                             
                     '02', UNI.TOT_VOY,                                                                       
                     '03', UNI.TOT_LOD,                                                                       
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),               
                     '05', UNI.TOT_REV/1000,                                                                  
                     '06', UNI.TOT_RPB,                                                                       
                     '07', UNI.TOT_CM/1000,                                                                   
                     '08', UNI.TOT_RA_CM/1000,                                                                
                     '09', UNI.TOT_CMB,                                                                       
                     '10', UNI.TOT_RA_CMB)                                                                    
            END) AS RECENT_TGT_MON

#foreach( $key in ${monthseq}) 
	     ,SUM(CASE WHEN UNI.GUBUN = 'FORECAST' AND UNI.MON_SEQ =	
					#if ($key != 'TOT') 
															$key
										 AND UNI.BSE_MON <> 'TOT'
					#else 
															'1'
										 AND UNI.BSE_MON = 'TOT'
					#end
																	THEN		
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    
                     '02', UNI.TOT_VOY,                                              
                     '03', UNI.TOT_LOD,                                              
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                     '05', UNI.TOT_REV/1000,                                         
                     '06', UNI.TOT_RPB,                                              
                     '07', UNI.TOT_CM/1000,                                          
                     '08', 0,                                       
                     '09', UNI.TOT_CMB,                                              
                     '10', 0)                                          
            END) AS FCAST_$key,
        SUM(CASE WHEN UNI.GUBUN = 'MODEL'    AND UNI.MON_SEQ = 
          #if ($key != 'TOT') 
															$key
										 AND UNI.BSE_MON <> 'TOT'
					#else 
															'1'
										 AND UNI.BSE_MON = 'TOT'
					#end
                                                                    THEN
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    
                     '02', UNI.TOT_VOY,                                              
                     '03', UNI.TOT_LOD,                                              
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                     '05', UNI.TOT_REV/1000,                                         
                     '06', UNI.TOT_RPB,                                              
                     '07', UNI.TOT_CM/1000,                                          
                     '08', UNI.TOT_RA_CM/1000,                                       
                     '09', UNI.TOT_CMB,                                              
                     '10', UNI.TOT_RA_CMB)                                          
            END) AS MDL_RST_$key,                                            
                                              
        SUM(CASE WHEN UNI.GUBUN = 'TRADE'    AND UNI.MON_SEQ = 
          #if ($key != 'TOT') 
															$key
										 AND UNI.BSE_MON <> 'TOT'
					#else 
															'1'
										 AND UNI.BSE_MON = 'TOT'
					#end
                                                                    THEN
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    
                     '02', UNI.TOT_VOY,                                              
                     '03', UNI.TOT_LOD,                                              
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                     '05', UNI.TOT_REV/1000,                                         
                     '06', UNI.TOT_RPB,                                              
                     '07', UNI.TOT_CM/1000,                                          
                     '08', UNI.TOT_RA_CM/1000,                                       
                     '09', UNI.TOT_CMB,                                              
                     '10', UNI.TOT_RA_CMB )                                          
            END) AS TRADE_$key,                                              
        SUM(CASE WHEN UNI.GUBUN = 'RHQ'      AND UNI.MON_SEQ = 
          #if ($key != 'TOT') 
															$key
										 AND UNI.BSE_MON <> 'TOT'
					#else 
															'1'
										 AND UNI.BSE_MON = 'TOT'
					#end
                                                                    THEN
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    
                     '02', UNI.TOT_VOY,                                              
                     '03', UNI.TOT_LOD,                                              
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                     '05', UNI.TOT_REV/1000,                                         
                     '06', UNI.TOT_RPB,                                              
                     '07', UNI.TOT_CM/1000,                                          
                     '08', UNI.TOT_RA_CM/1000,                                       
                     '09', UNI.TOT_CMB,                                              
                     '10', UNI.TOT_RA_CMB )                                          
            END) AS RHQ_$key,                                                
        SUM(CASE WHEN UNI.GUBUN = 'FINAL'    AND UNI.MON_SEQ = 
          #if ($key != 'TOT') 
															$key
										 AND UNI.BSE_MON <> 'TOT'
					#else 
															'1'
										 AND UNI.BSE_MON = 'TOT'
					#end
                                                                    THEN
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    
                     '02', UNI.TOT_VOY,                                              
                     '03', UNI.TOT_LOD,                                              
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                     '05', UNI.TOT_REV/1000,                                         
                     '06', UNI.TOT_RPB,                                              
                     '07', UNI.TOT_CM/1000,                                          
                     '08', UNI.TOT_RA_CM/1000,                                       
                     '09', UNI.TOT_CMB,                                              
                     '10', UNI.TOT_RA_CMB )                                          
            END) AS FINAL_$key,                                              
        SUM(CASE WHEN UNI.GUBUN = 'ADJUSTED' AND UNI.MON_SEQ = 
          #if ($key != 'TOT') 
															$key
										 AND UNI.BSE_MON <> 'TOT'
					#else 
															'1'
										 AND UNI.BSE_MON = 'TOT'
					#end
                                                                    THEN
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                    
                     '02', UNI.TOT_VOY,                                              
                     '03', UNI.TOT_LOD,                                              
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                     '05', UNI.TOT_REV/1000,                                         
                     '06', UNI.TOT_RPB,                                              
                     '07', UNI.TOT_CM/1000,                                          
                     '08', UNI.TOT_RA_CM/1000,                                       
                     '09', UNI.TOT_CMB,                                              
                     '10', UNI.TOT_RA_CMB)                                          
            END) AS ADJUSTED_$key,                                            
        SUM(CASE WHEN UNI.GUBUN = 'INITIAL'  AND UNI.MON_SEQ = 
          #if ($key != 'TOT') 
															$key
										 AND UNI.BSE_MON <> 'TOT'
					#else 
															'1'
										 AND UNI.BSE_MON = 'TOT'
					#end
                                                                    THEN
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                                             
                     '02', UNI.TOT_VOY,                                                                       
                     '03', UNI.TOT_LOD,                                                                       
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),               
                     '05', UNI.TOT_REV/1000,                                                                  
                     '06', UNI.TOT_RPB,                                                                       
                     '07', UNI.TOT_CM/1000,                                                                   
                     '08', UNI.TOT_RA_CM/1000,                                                                
                     '09', UNI.TOT_CMB,                                                                       
                     '10', UNI.TOT_RA_CMB)                                                                   
            END) AS INITIAL_$key,                                                                                
        SUM(CASE WHEN UNI.GUBUN = 'FINAL_TGT' AND UNI.MON_SEQ = 
          #if ($key != 'TOT') 
															$key
										 AND UNI.BSE_MON <> 'TOT'
					#else 
															'1'
										 AND UNI.BSE_MON = 'TOT'
					#end
                                                                    THEN
            DECODE( ITM.CODE,  '01', UNI.TOT_BSA,                                                             
                     '02', UNI.TOT_VOY,                                                                       
                     '03', UNI.TOT_LOD,                                                                       
                     '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),               
                     '05', UNI.TOT_REV/1000,                                                                  
                     '06', UNI.TOT_RPB,                                                                       
                     '07', UNI.TOT_CM/1000,                                                                   
                     '08', UNI.TOT_RA_CM/1000,                                                                
                     '09', UNI.TOT_CMB,                                                                       
                     '10', UNI.TOT_RA_CMB )                                                                   
            END) AS FINAL_TGT_$key
#end	

  FROM  (                                                                              				         
        SELECT  INTG_CD_VAL_CTNT    AS CODE,                                                                     
                INTG_CD_VAL_DP_DESC AS TEXT,                                                                  
                INTG_CD_VAL_DP_SEQ  AS ROW_SEQ                                                                 
          FROM  COM_INTG_CD_DTL                                                                                 
         WHERE  INTG_CD_ID = 'CD01389'                                                                          
        ) ITM,                                                                                                
        (                                                                                                 
        SELECT -- MONTHLY QUOTA (RECENT)                                                                      
                DECODE(QTA.TRD_CD, '',0, @[trade] ,1,2) SUB_SEQ,                                                               
                DECODE(QTA.TRD_CD, '', 'TOT', QTA.TRD_CD) AS TRD_CD,                                              
                'RECENT_MON' AS GUBUN,                                                                            
                '0' AS MON_SEQ,                                                                                   
                DECODE(QTA.BSE_MON, '', 'TOT', QTA.BSE_MON) AS BSE_MON,                                                                           
                DECODE(QTA.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                          
                DECODE(QTA.DIR_CD, '', 'TOT', QTA.DIR_CD) AS DIR_CD,                                              
                SUM(QTA.TOT_BSA) AS TOT_BSA,                                                                      
                SUM(QTA.TOT_VOY) AS TOT_VOY,                                                                      
                SUM(QTA.TOT_LOD) AS TOT_LOD,                                                                      
                SUM(QTA.TOT_REV) AS TOT_REV,                                                                      
                SUM(QTA.TOT_REV)/SUM(QTA.TOT_LOD) AS TOT_RPB,                                                     
                SUM(QTA.TOT_CM) AS TOT_CM,                                                                        
                SUM(QTA.TOT_RA_CM) AS TOT_RA_CM,                                                                  
                SUM(QTA.TOT_CM)/SUM(QTA.TOT_LOD) AS TOT_CMB,                                                      
                SUM(QTA.TOT_RA_CM)/SUM(QTA.TOT_LOD) AS TOT_RA_CMB,                                                
                SUM(QTA.TOT_OP) AS TOT_OP,                                                                        
                SUM(QTA.TOT_RA_OP) AS TOT_RA_OP,                                                                  
                SUM(QTA.TOT_OP)/SUM(QTA.TOT_LOD) AS TOT_OPB,                                                      
                SUM(QTA.TOT_RA_OP)/SUM(QTA.TOT_LOD) AS TOT_RA_OPB                                                 
          FROM  (                                                                                                
                SELECT -- MONTHLY QUOTA (RECENT)                                                                  
                                                                                                                  
                        QTA.BSE_MON,                                                                                  
                        QTA.TRD_CD,                                                                                   
                        NVL(DIR.CONV_DIR_CD, QTA.DIR_CD) DIR_CD,                                                      
                        MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                             
                        COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                        
                        SUM(QTA.LOD_QTY) AS TOT_LOD,                                                                  
                        SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY) AS TOT_REV,                                                  
                        SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY) AS TOT_CM,                                   
                        SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY) AS TOT_RA_CM,                             
                        SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    ) AS TOT_OP,                            
                        SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY ) AS TOT_RA_OP                          
                  FROM  (                                                                                           
                        SELECT  DISTINCT RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO,                                     
                                RLS.BSE_YR||RLS.BSE_QTR_CD AS REP_YR_MON                                               
                          FROM  SAQ_MON_QTA_RLSE RLS,                                                                  
                                TMP_INPUT_PARMAS INP                                                                   
                         WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD = BEF_YR_QTR                                                
                           AND  RLS.QTA_RLSE_STS_CD = 'R'                                                          
                        ) RLS,                                                                                      
                        SAQ_MON_CFM_QTA     QTA,                                                                        
                        SAQ_MON_DIR_CONV    DIR,      				                                                        		
                        SAQ_MON_CFM_TGT_VVD VVD,                                                                    
                        TMP_INPUT_PARMAS    INP                                                                        
                 WHERE  QTA.MQTA_RLSE_VER_NO = RLS.MQTA_RLSE_VER_NO                                                 
                   AND  QTA.TRD_CD           = INP.TRD_CD                                                                     
                   AND  VVD.MQTA_RLSE_VER_NO = QTA.MQTA_RLSE_VER_NO                                                 
                   AND  VVD.BSE_YR           = QTA.BSE_YR                                                                     
                   AND  VVD.BSE_QTR_CD       = QTA.BSE_QTR_CD                                                             
                   AND  VVD.BSE_MON          = QTA.BSE_MON                                                                   
                   AND  VVD.RLANE_CD         = QTA.RLANE_CD                                                                 
                   AND  VVD.TRD_CD           = QTA.TRD_CD                                                                     
                   AND  VVD.DIR_CD           = QTA.DIR_CD                                                                     
                   AND  VVD.VSL_CD           = QTA.VSL_CD                                                                     
                   AND  VVD.SKD_VOY_NO       = QTA.SKD_VOY_NO                                                             
                   AND  VVD.SKD_DIR_CD       = QTA.SKD_DIR_CD                                                             
                   AND  QTA.BSE_YR           = DIR.BSE_YR(+)          											   			 
                   AND  DIR.BSE_QTR_CD(+)    = @[bse_qtr_cd]				          	       							   			 
                   AND  QTA.TRD_CD           = DIR.TRD_CD(+)       										   		   			 
                   AND  QTA.RLANE_CD         = DIR.RLANE_CD(+)       										       			 
                   AND  QTA.DIR_CD           = DIR.DIR_CD(+)       										           			 		
                   AND  QTA.LOD_QTY          > 0                                                                             
                                                                                                                  
                                                                                                                  
                AND   QTA.BSE_YR||QTA.BSE_QTR_CD = RLS.REP_YR_MON                                                     
                AND   QTA.BSE_MON                = SUBSTR(INP.BEF_YR_MON, 5, 2)                                                      
                                                                                                                  
                AND   QTA.QTA_TGT_CD             = 'Q'                                                                        
                                                                                                                  
                GROUP BY QTA.BSE_YR, QTA.BSE_MON, QTA.TRD_CD, QTA.RLANE_CD, NVL(DIR.CONV_DIR_CD, QTA.DIR_CD),     
                         VVD.VSL_CD,VVD.SKD_VOY_NO,VVD.SKD_DIR_CD                                                 
                ) QTA                                                                                             
                                                                                                          
        GROUP BY
                ROLLUP(QTA.TRD_CD, QTA.DIR_CD), QTA.BSE_MON                                                  
                                                                                                          
                                                                                                          
        UNION ALL                                                                                             
                                                                                                          
                                                                                                          
        SELECT -- MONTHLY QUOTA LOAD TARGET (RECENT)                                                          
                DECODE(QTA.TRD_CD, '',0, @[trade] ,1,2) SUB_SEQ,                                                               
                DECODE(QTA.TRD_CD, '', 'TOT', QTA.TRD_CD) AS TRD_CD,                                              
                'RECENT_TGT_MON' AS GUBUN,                                                                        
                '0' AS MON_SEQ,                                                                                   
                DECODE(QTA.BSE_MON, '', 'TOT', QTA.BSE_MON) AS BSE_MON,                                                                           
                DECODE(QTA.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                          
                DECODE(QTA.DIR_CD, '', 'TOT', QTA.DIR_CD) AS DIR_CD,                                              
                SUM(QTA.TOT_BSA) AS TOT_BSA,                                                                      
                SUM(QTA.TOT_VOY) AS TOT_VOY,                                                                      
                SUM(QTA.TOT_LOD) AS TOT_LOD,                                                                      
                SUM(QTA.TOT_REV) AS TOT_REV,                                                                      
                SUM(QTA.TOT_REV)/SUM(QTA.TOT_LOD) AS TOT_RPB,                                                     
                SUM(QTA.TOT_CM) AS TOT_CM,                                                                        
                SUM(QTA.TOT_RA_CM) AS TOT_RA_CM,                                                                  
                SUM(QTA.TOT_CM)/SUM(QTA.TOT_LOD) AS TOT_CMB,                                                      
                SUM(QTA.TOT_RA_CM)/SUM(QTA.TOT_LOD) AS TOT_RA_CMB,                                                
                SUM(QTA.TOT_OP) AS TOT_OP,                                                                        
                SUM(QTA.TOT_RA_OP) AS TOT_RA_OP,                                                                  
                SUM(QTA.TOT_OP)/SUM(QTA.TOT_LOD) AS TOT_OPB,                                                      
                SUM(QTA.TOT_RA_OP)/SUM(QTA.TOT_LOD) AS TOT_RA_OPB                                                 
          FROM  (                                                                                                
                SELECT -- MONTHLY QUOTA (RECENT)                                                                  
                                                                                                                  
                        QTA.BSE_MON,                                                                                  
                        QTA.TRD_CD,                                                                                   
                        NVL(DIR.CONV_DIR_CD, QTA.DIR_CD) DIR_CD,                                                      
                        MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                             
                        COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                        
                        SUM(QTA.LOD_QTY) AS TOT_LOD,                                                                  
                        SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY) AS TOT_REV,                                                  
                        SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY) AS TOT_CM,                                   
                        SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY) AS TOT_RA_CM,                             
                        SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    ) AS TOT_OP,                            
                        SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY ) AS TOT_RA_OP                          
                  FROM  (                                                                                           
                        SELECT  DISTINCT RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO,                                     
                                RLS.BSE_YR||RLS.BSE_QTR_CD AS REP_YR_MON                                               
                          FROM  SAQ_MON_QTA_RLSE RLS,                                                                  
                                TMP_INPUT_PARMAS INP                                                                   
                         WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD = BEF_YR_QTR                                                
                           AND  RLS.QTA_RLSE_STS_CD = 'R'                                                          
                        ) RLS,                                                                                      
                        SAQ_MON_CFM_QTA     QTA,                                                                        
                        SAQ_MON_DIR_CONV    DIR,      				                                                        		
                        SAQ_MON_CFM_TGT_VVD VVD,                                                                    
                        TMP_INPUT_PARMAS    INP                                                                        
                 WHERE  QTA.MQTA_RLSE_VER_NO = RLS.MQTA_RLSE_VER_NO                                                 
                   AND  QTA.TRD_CD           = INP.TRD_CD                                                                     
                   AND  VVD.MQTA_RLSE_VER_NO = QTA.MQTA_RLSE_VER_NO                                                 
                   AND  VVD.BSE_YR           = QTA.BSE_YR                                                                     
                   AND  VVD.BSE_QTR_CD       = QTA.BSE_QTR_CD                                                             
                   AND  VVD.BSE_MON          = QTA.BSE_MON                                                                   
                   AND  VVD.RLANE_CD         = QTA.RLANE_CD                                                                 
                   AND  VVD.TRD_CD           = QTA.TRD_CD                                                                     
                   AND  VVD.DIR_CD           = QTA.DIR_CD                                                                     
                   AND  VVD.VSL_CD           = QTA.VSL_CD                                                                     
                   AND  VVD.SKD_VOY_NO       = QTA.SKD_VOY_NO                                                             
                   AND  VVD.SKD_DIR_CD       = QTA.SKD_DIR_CD                                                             
                   AND  QTA.BSE_YR           = DIR.BSE_YR(+)          											   			 
                   AND  DIR.BSE_QTR_CD(+)    = @[bse_qtr_cd]				          	       							   			 
                   AND  QTA.TRD_CD           = DIR.TRD_CD(+)       										   		   			 
                   AND  QTA.RLANE_CD         = DIR.RLANE_CD(+)       										       			 
                   AND  QTA.DIR_CD           = DIR.DIR_CD(+)       										           			 			
                   AND  QTA.LOD_QTY          > 0                                                                             
                                                                                                                    
                                                                                                                    
                   AND  QTA.BSE_YR||QTA.BSE_QTR_CD = RLS.REP_YR_MON                                                     
                   AND  QTA.BSE_MON                = SUBSTR(INP.BEF_YR_MON, 5, 2)                                                      
                                                                                                                    
                   AND  QTA.QTA_TGT_CD             = 'T'                                                                        
                                                                                                                  
                GROUP BY
                        QTA.BSE_YR, QTA.BSE_MON, QTA.TRD_CD, QTA.RLANE_CD, NVL(DIR.CONV_DIR_CD, QTA.DIR_CD),     
                        VVD.VSL_CD,VVD.SKD_VOY_NO,VVD.SKD_DIR_CD                                                 
                ) QTA                                                                                             
                                                                                                          
        GROUP BY
                ROLLUP(QTA.TRD_CD, QTA.DIR_CD), QTA.BSE_MON                                                  
                                                                                                          
                                                                                                          
        UNION ALL                                                                                             
                                                                                                          
        SELECT -- MODEL RESULT                                                                                
                DECODE(MRS.TRD_CD, '',0, @[trade] ,1,2) SUB_SEQ,                                                         
                DECODE(MRS.TRD_CD, '', 'TOT', MRS.TRD_CD) AS TRD_CD,                                                                            
                'MODEL' AS GUBUN,                                                                                 
                -- 2010.05.07 한달 판매목표 수립을 위한 수정 : BSE_MON이 세달 모두 존재하지 않는 경우 'MON_SEQ'의 MIN값이 1이 아닐수 있으므로 수정
                --MIN(MON_SEQ) AS MON_SEQ,
                DECODE(MRS.BSE_MON, '', '1', MIN(MON_SEQ)) AS MON_SEQ,
                DECODE(MRS.BSE_MON, '', 'TOT', MRS.BSE_MON) AS BSE_MON,                                                                            
                DECODE(MRS.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                          
                DECODE(MRS.DIR_CD, '', 'TOT', MRS.DIR_CD) AS DIR_CD,                                              
                SUM(MRS.TOT_BSA) AS TOT_BSA,                                                                      
                SUM(MRS.TOT_VOY) AS TOT_VOY,                                                                      
                SUM(MRS.TOT_LOD) AS TOT_LOD,                                                                      
                SUM(MRS.TOT_REV) AS TOT_REV,                                                                      
                SUM(MRS.TOT_REV)/SUM(MRS.TOT_LOD) AS TOT_RPB,                                                     
                SUM(MRS.TOT_CM) AS TOT_CM,                                                                        
                SUM(MRS.TOT_RA_CM) AS TOT_RA_CM,                                                                  
                SUM(MRS.TOT_CM)/SUM(MRS.TOT_LOD) AS TOT_CMB,                                                      
                SUM(MRS.TOT_RA_CM)/SUM(MRS.TOT_LOD) AS TOT_RA_CMB,                                                
                SUM(MRS.TOT_OP) AS TOT_OP,                                                                        
                SUM(MRS.TOT_RA_OP) AS TOT_RA_OP,                                                                  
                SUM(MRS.TOT_OP)/SUM(MRS.TOT_LOD) AS TOT_OPB,                                                      
                SUM(MRS.TOT_RA_OP)/SUM(MRS.TOT_LOD) AS TOT_RA_OPB                                                 
          FROM  (                                                                                                
                SELECT -- MODEL RESULT                                                                            
                        MIN(DECODE(MRS.BSE_YR||MRS.BSE_MON,                                                           
                            INP.ADD1_YR_MON, '2', INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,                             
                        MRS.BSE_MON,                                                                                  
                        MRS.TRD_CD,                                                                                   
                        MRS.DIR_CD,                                                                                   
                        MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                             
                        COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                        
                        SUM(MRS.LOD_QTY) AS TOT_LOD,                                                                  
                        SUM(MRS.GRS_RPB_REV*MRS.LOD_QTY) AS TOT_REV,                                                  
                        SUM((MRS.GRS_RPB_REV-MRS.CM_UC_AMT)*MRS.LOD_QTY) AS TOT_CM,                                   
                        SUM((MRS.GRS_RPB_REV-MRS.RA_CM_UC_AMT)*MRS.LOD_QTY) AS TOT_RA_CM,                             
                        SUM((MRS.GRS_RPB_REV-MRS.OPFIT_UC_AMT)*MRS.LOD_QTY    ) AS TOT_OP,                            
                        SUM((MRS.GRS_RPB_REV-MRS.RA_OPFIT_UC_AMT)*MRS.LOD_QTY ) AS TOT_RA_OP                          
	                FROM  SAQ_MON_MDL_CTRT_SMRY MRS,
	                      SAQ_MON_DIR_CONV      DIR,                                                                                                                                                
	                      SAQ_MON_TGT_VVD       VVD,                                                                           
	                      TMP_INPUT_PARMAS      INP                                                                           
	               WHERE  MRS.MQTA_MDL_VER_NO = INP.MQTA_MDL_VER_NO                                                      
	                 AND  MRS.TRD_CD          = INP.TRD_CD                                                                        
	                 AND  VVD.BSE_YR          = INP.BSE_YR                                                                        
	                 AND  VVD.BSE_QTR_CD      = INP.BSE_QTR_CD                                                                
	                 AND  VVD.BSE_MON         = MRS.BSE_MON                                                                      
	                 AND  VVD.RLANE_CD        = MRS.RLANE_CD                                                                    
	                 AND  VVD.TRD_CD          = MRS.TRD_CD                                                                        
	                 AND  VVD.DIR_CD          = NVL(DIR.DIR_CD, MRS.DIR_CD)                                                                        
	                 AND  VVD.VSL_CD          = MRS.VSL_CD                                                                        
	                 AND  VVD.SKD_VOY_NO      = MRS.SKD_VOY_NO                                                                
	                 AND  VVD.SKD_DIR_CD      = MRS.SKD_DIR_CD                                                                
	                 AND  MRS.LOD_QTY         > 0                                                                                
	                 AND  MRS.TRD_CD          = DIR.TRD_CD (+)
	                 AND  MRS.RLANE_CD        = DIR.RLANE_CD (+)
	                 AND  MRS.DIR_CD          = DIR.CONV_DIR_CD (+)
	                 AND  MRS.BSE_YR          = DIR.BSE_YR (+)
	                 AND  DIR.BSE_QTR_CD (+)  = @[bse_qtr_cd]
                GROUP BY
                        MRS.BSE_YR, MRS.BSE_MON, MRS.TRD_CD, MRS.RLANE_CD, MRS.DIR_CD,                           
                   		  VVD.VSL_CD,VVD.SKD_VOY_NO,VVD.SKD_DIR_CD                                                    
                ) MRS                                                                                             
        GROUP BY
                GROUPING SETS(								       											 
                    (MRS.BSE_MON, MRS.TRD_CD),						       										 
                    (MRS.BSE_MON, MRS.TRD_CD, MRS.DIR_CD),					       								 
                    (MRS.TRD_CD, MRS.DIR_CD),						       										 
                    (MRS.BSE_MON), (MRS.TRD_CD),						      										 
                    ()									       													 
                    )                                                                                         
                                                                                                              
        UNION ALL                                                                                             
                                                                                                          
                                                                                                          
        SELECT -- TRADE GROUP, RHQ, FINAL                                                                     
                DECODE(TRD.TRD_CD,'',0, @[trade] ,1,2) SUB_SEQ,                                                          
                DECODE(TRD.TRD_CD, '', 'TOT', TRD.TRD_CD) AS TRD_CD,                                                             
                DECODE(TRD.MQTA_STEP_CD, '01','TRADE', '02','RHQ', '03','FINAL') AS GUBUN,                        
                MIN(MON_SEQ) AS MON_SEQ,                                                                          
                DECODE(TRD.BSE_MON, '', 'TOT', TRD.BSE_MON) AS BSE_MON,                                                                            
                DECODE(TRD.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                                                          
                DECODE(TRD.DIR_CD, '', 'TOT', TRD.DIR_CD) AS DIR_CD,                                              
                SUM(TRD.TOT_BSA*TRD.TOT_VOY) AS TOT_BSA,                                                          
                SUM(TRD.TOT_VOY) AS TOT_VOY,                                                                      
                SUM(TRD.TOT_LOD) AS TOT_LOD,                                                                      
                SUM(TRD.TOT_REV) AS TOT_REV,                                                                      
                DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                    
                    SUM(TRD.TOT_REV)/SUM(TRD.TOT_LOD)) AS TOT_RPB,                                                
                SUM(TRD.TOT_CM) AS TOT_CM,                                                                        
                SUM(TRD.TOT_RA_CM) AS TOT_RA_CM,                                                                  
                DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                    
                    SUM(TRD.TOT_CM)/SUM(TRD.TOT_LOD)) AS TOT_CMB,                                                 
                DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                    
                    SUM(TRD.TOT_RA_CM)/SUM(TRD.TOT_LOD)) AS TOT_RA_CMB,                                           
                SUM(TRD.TOT_OP) AS TOT_OP,                                                                        
                SUM(TRD.TOT_RA_OP) AS TOT_RA_OP,                                                                  
                DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                    
                    SUM(TRD.TOT_OP)/SUM(TRD.TOT_LOD)) AS TOT_OPB,                                                 
                DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                    
                    SUM(TRD.TOT_RA_OP)/SUM(TRD.TOT_LOD)) AS TOT_RA_OPB                                            
          FROM  (                                                                                                
                SELECT -- TRADE GROUP, RHQ, FINAL                                                                 
                        TRD.MQTA_STEP_CD,                                                                             
                        MIN(DECODE(TRD.BSE_YR||TRD.BSE_MON, INP.ADD1_YR_MON, '2',                                     
                            INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,                                                   
                        TRD.BSE_MON AS BSE_MON,                                                                       
                        TRD.TRD_CD AS TRD_CD,                                                                         
                        TRD.DIR_CD AS DIR_CD,                                                                         
                        MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                             
                        COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                        
                        SUM(TRD.LOD_QTY         ) AS TOT_LOD ,                                                        
                        SUM(TRD.GRS_RPB_REV*TRD.LOD_QTY) AS TOT_REV ,                                                 
                        SUM((TRD.GRS_RPB_REV-TRD.CM_UC_AMT)*TRD.LOD_QTY) AS TOT_CM ,                                  
                        SUM((TRD.GRS_RPB_REV-TRD.RA_CM_UC_AMT)*TRD.LOD_QTY) AS TOT_RA_CM, -- BKG CM                   
                        SUM((TRD.GRS_RPB_REV-TRD.OPFIT_UC_AMT)*TRD.LOD_QTY    ) AS TOT_OP ,                           
                        SUM((TRD.GRS_RPB_REV-TRD.RA_OPFIT_UC_AMT)*TRD.LOD_QTY ) AS TOT_RA_OP -- BKG OP                
                  FROM  SAQ_MON_QTA_STEP_VER VER,                                                                  
                        SAQ_MON_QTA_TRD      TRD,                                                                       
                        SAQ_MON_TGT_VVD_ADJ  VVD,                                                                   
                        TMP_INPUT_PARMAS     INP                                                                       
                 WHERE  VER.MQTA_STEP_CD IN ('01', '02', '03') -- TRADE GROUP, RHQ, FINAL                          
                   AND  VER.BSE_YR       = INP.BSE_YR                                                                    
                   AND  VER.BSE_QTR_CD   = INP.BSE_QTR_CD                                                            
                   AND  VER.TRD_CD       = INP.TRD_CD                                                                    
                   AND  VER.GLINE_VER_NO = INP.GLINE_VER_NO                                                        
                   AND  ((VER.MQTA_STEP_CD = '01' AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                     
                                              FROM COM_INTG_CD_DTL A,                                                 
                                                   COM_INTG_CD_DTL B                                                  
                                              WHERE A.INTG_CD_ID = 'CD00926'                                          
                                              AND B.INTG_CD_ID = A.INTG_CD_ID                                         
                                              AND B.INTG_CD_VAL_CTNT = 'DC'                                           
                                              AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ))                      
                        OR (VER.MQTA_STEP_CD = '02' AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                  
                                              FROM COM_INTG_CD_DTL A,                                                 
                                                   COM_INTG_CD_DTL B                                                  
                                              WHERE A.INTG_CD_ID = 'CD00926'                                          
                                              AND B.INTG_CD_ID = A.INTG_CD_ID                                         
                                              AND B.INTG_CD_VAL_CTNT = 'DN'                                           
                                              AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ))                      
                        OR (VER.MQTA_STEP_CD = '03' AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                  
                                              FROM COM_INTG_CD_DTL A,                                                 
                                                   COM_INTG_CD_DTL B                                                  
                                              WHERE A.INTG_CD_ID = 'CD00926'                                          
                                              AND B.INTG_CD_ID = A.INTG_CD_ID                                         
                                              AND B.INTG_CD_VAL_CTNT = 'FC'                                           
                                              AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ)))                 
                   AND  TRD.MQTA_STEP_CD = VER.MQTA_STEP_CD                                                        
                   AND  TRD.BSE_YR       = VER.BSE_YR                                                                    
                   AND  TRD.BSE_QTR_CD   = VER.BSE_QTR_CD                                                            
                   AND  TRD.TRD_CD       = VER.TRD_CD                                                                    
                   AND  TRD.DIR_CD       = VER.DIR_CD                                                                    
                   AND  TRD.MQTA_VER_NO  = VER.MQTA_VER_NO                                                          
                   AND  VVD.BSE_YR       = VER.BSE_YR                                                                    
                   AND  VVD.BSE_QTR_CD   = VER.BSE_QTR_CD                                                            
                   AND  VVD.GLINE_VER_NO = VER.GLINE_VER_NO                                                        
                   AND  VVD.BSE_MON      = TRD.BSE_MON                                                                  
                   AND  VVD.TRD_CD       = TRD.TRD_CD                                                                    
                   AND  VVD.DIR_CD       = TRD.DIR_CD                                                                    
                   AND  VVD.SUB_TRD_CD   = TRD.SUB_TRD_CD                                                            
                   AND  VVD.RLANE_CD     = TRD.RLANE_CD                                                                
                   AND  VVD.SPRT_GRP_CD  = TRD.SPRT_GRP_CD                                                          
                   AND  VVD.BSA_GRP_CD   = TRD.BSA_GRP_CD                                                            
                GROUP BY
                        TRD.MQTA_STEP_CD,TRD.BSE_YR,TRD.BSE_MON,TRD.TRD_CD,TRD.RLANE_CD,TRD.DIR_CD,              
                        TRD.SPRT_GRP_CD,TRD.BSA_GRP_CD                                                              
                ) TRD                                                                                             
          GROUP BY
                  GROUPING SETS(								       											 
                    (TRD.BSE_MON, TRD.TRD_CD),						       										 
                    (TRD.BSE_MON, TRD.TRD_CD, TRD.DIR_CD),					       								 
                    (TRD.TRD_CD, TRD.DIR_CD),						       										 
                    (TRD.BSE_MON), (TRD.TRD_CD),						      										 
                    ()									       													 
                    ),TRD.MQTA_STEP_CD                                                                        
                                                                                                              
                                                                                                          
        UNION ALL                                                                                             
                                                                                                          
                                                                                                          
        SELECT -- FINAL ADJUSTED                                                                              
                                                                                                              
                DECODE(RHQ.TRD_CD,'',0, @[trade] ,1,2) SUB_SEQ,    		    									         
                DECODE(RHQ.TRD_CD,'', 'TOT', RHQ.TRD_CD ) AS TRD_CD,                                                                       
                'ADJUSTED' AS GUBUN,                                                                              
                MIN(MON_SEQ) AS MON_SEQ,                                                                          
                DECODE(RHQ.BSE_MON, '', 'TOT', RHQ.BSE_MON) AS BSE_MON,                                                                            
                DECODE(RHQ.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                          
                DECODE(RHQ.DIR_CD, '', 'TOT', RHQ.DIR_CD) AS DIR_CD,                                              
                SUM(RHQ.TOT_BSA*RHQ.TOT_VOY) AS TOT_BSA,                                                          
                SUM(RHQ.TOT_VOY) AS TOT_VOY,                                                                      
                SUM(RHQ.TOT_LOD) AS TOT_LOD,                                                                      
                SUM(RHQ.TOT_REV) AS TOT_REV,                                                                      
                DECODE(SUM(RHQ.TOT_LOD), 0, 0,                                                                    
                    SUM(RHQ.TOT_REV)/SUM(RHQ.TOT_LOD)) AS TOT_RPB,                                                
                SUM(RHQ.TOT_CM) AS TOT_CM,                                                                        
                SUM(RHQ.TOT_RA_CM) AS TOT_RA_CM,                                                                  
                DECODE(SUM(RHQ.TOT_LOD), 0, 0,                                                                    
                    SUM(RHQ.TOT_CM)/SUM(RHQ.TOT_LOD)) AS TOT_CMB,                                                 
                DECODE(SUM(RHQ.TOT_LOD), 0, 0,                                                                    
                    SUM(RHQ.TOT_RA_CM)/SUM(RHQ.TOT_LOD)) AS TOT_RA_CMB,                                           
                SUM(RHQ.TOT_OP) AS TOT_OP,                                                                        
                SUM(RHQ.TOT_RA_OP) AS TOT_RA_OP,                                                                  
                DECODE(SUM(RHQ.TOT_LOD), 0, 0,                                                                    
                    SUM(RHQ.TOT_OP)/SUM(RHQ.TOT_LOD)) AS TOT_OPB,                                                 
                DECODE(SUM(RHQ.TOT_LOD), 0, 0,                                                                    
                    SUM(RHQ.TOT_RA_OP)/SUM(RHQ.TOT_LOD)) AS TOT_RA_OPB                                            
          FROM  (                                                                                                
                SELECT -- FINAL ADJUSTED                                                                          
                        RHQ.MQTA_STEP_CD,                                                                             
                        MIN(DECODE(RHQ.BSE_YR||RHQ.BSE_MON, INP.ADD1_YR_MON, '2',                                     
                            INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,                                                   
                        RHQ.BSE_MON AS BSE_MON,                                                                       
                        RHQ.TRD_CD AS TRD_CD,                                                                         
                        RHQ.DIR_CD AS DIR_CD,                                                                         
                        MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                             
                        COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                        
                        SUM(RHQ.LOD_QTY         ) AS TOT_LOD ,                                                        
                        SUM(RHQ.GRS_RPB_REV*RHQ.LOD_QTY) AS TOT_REV ,                                                 
                        SUM((RHQ.GRS_RPB_REV-RHQ.CM_UC_AMT)*RHQ.LOD_QTY) AS TOT_CM ,                                  
                        SUM((RHQ.GRS_RPB_REV-RHQ.RA_CM_UC_AMT)*RHQ.LOD_QTY) AS TOT_RA_CM,                             
                        SUM((RHQ.GRS_RPB_REV-RHQ.OPFIT_UC_AMT)*RHQ.LOD_QTY    ) AS TOT_OP ,                           
                        SUM((RHQ.GRS_RPB_REV-RHQ.RA_OPFIT_UC_AMT)*RHQ.LOD_QTY ) AS TOT_RA_OP                          
                  FROM  SAQ_MON_QTA_STEP_VER VER,                                                                     
                        SAQ_MON_QTA_RHQ      RHQ,                                                                          
                        SAQ_MON_TGT_VVD_ADJ  VVD,                                                                      
                        TMP_INPUT_PARMAS     INP                                                                          
                 WHERE  VER.MQTA_STEP_CD = '04' -- FINAL ADJUSTED                                                     
                   AND  VER.BSE_YR       = INP.BSE_YR                                                                       
                   AND  VER.BSE_QTR_CD   = INP.BSE_QTR_CD                                                               
                   AND  VER.TRD_CD       = INP.TRD_CD                                                                       
                   AND  VER.GLINE_VER_NO = INP.GLINE_VER_NO                                                           
                   AND  VER.SAQ_STS_CD   IN ('QN', 'QF')                                                                
                   AND  RHQ.MQTA_STEP_CD = VER.MQTA_STEP_CD                                                           
                   AND  RHQ.BSE_YR       = VER.BSE_YR                                                                       
                   AND  RHQ.BSE_QTR_CD   = VER.BSE_QTR_CD                                                               
                   AND  RHQ.TRD_CD       = VER.TRD_CD                                                                       
                   AND  RHQ.DIR_CD       = VER.DIR_CD                                                                       
                   AND  RHQ.MQTA_VER_NO  = VER.MQTA_VER_NO                                                             
                   AND  VVD.BSE_YR       = VER.BSE_YR                                                                       
                   AND  VVD.BSE_QTR_CD   = VER.BSE_QTR_CD                                                               
                   AND  VVD.GLINE_VER_NO = VER.GLINE_VER_NO                                                           
                   AND  VVD.BSE_MON      = RHQ.BSE_MON                                                                     
                   AND  VVD.TRD_CD       = RHQ.TRD_CD                                                                       
                   AND  VVD.DIR_CD       = RHQ.DIR_CD                                                                       
                   AND  VVD.SUB_TRD_CD   = RHQ.SUB_TRD_CD                                                               
                   AND  VVD.RLANE_CD     = RHQ.RLANE_CD                                                                   
                   AND  VVD.SPRT_GRP_CD  = RHQ.SPRT_GRP_CD                                                             
                   AND  VVD.BSA_GRP_CD   = RHQ.BSA_GRP_CD                                                               
                GROUP BY
                        RHQ.MQTA_STEP_CD,RHQ.BSE_YR,RHQ.BSE_MON,RHQ.TRD_CD,RHQ.RLANE_CD,RHQ.DIR_CD,              
                        RHQ.SPRT_GRP_CD,RHQ.BSA_GRP_CD                                                              
                ) RHQ                                                                                             
          GROUP BY
                  GROUPING SETS(								       											 
                    (RHQ.BSE_MON, RHQ.TRD_CD),						       										 
                    (RHQ.BSE_MON, RHQ.TRD_CD, RHQ.DIR_CD),					       								 
                    (RHQ.TRD_CD, RHQ.DIR_CD),						       										 
                    (RHQ.BSE_MON), (RHQ.TRD_CD),						      										 
                    ()									       													 
                    )                                                                                         
                                                                                                              
                                                                                                              
        UNION ALL                                                                                             
                                                                                                          
                                                                                                          
        SELECT -- LOADTARGET INITIAL, FINAL                                                                   
                DECODE(TRD.TRD_CD,'',0, @[trade] ,1,2) SUB_SEQ,                                                          
                DECODE(TRD.TRD_CD, '', 'TOT', TRD.TRD_CD) AS TRD_CD,                                                             
                DECODE(TRD.MQTA_STEP_CD, '11','INITIAL', '08','FINAL_TGT') AS GUBUN,                              
                MIN(MON_SEQ) AS MON_SEQ,                                                                          
                DECODE(TRD.BSE_MON, '', 'TOT', TRD.BSE_MON) AS BSE_MON,                                                                            
                DECODE(TRD.DIR_CD,'E',1,'W',2,'S',3,'N',4,0) AS DIR_SEQ,                                                                          
                DECODE(TRD.DIR_CD, '', 'TOT', TRD.DIR_CD) AS DIR_CD,                                              
                SUM(TRD.TOT_BSA*TRD.TOT_VOY) AS TOT_BSA,                                                          
                SUM(TRD.TOT_VOY) AS TOT_VOY,                                                                      
                SUM(TRD.TOT_LOD) AS TOT_LOD,                                                                      
                SUM(TRD.TOT_REV) AS TOT_REV,                                                                      
                DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                    
                    SUM(TRD.TOT_REV)/SUM(TRD.TOT_LOD)) AS TOT_RPB,                                                
                SUM(TRD.TOT_CM) AS TOT_CM,                                                                        
                SUM(TRD.TOT_RA_CM) AS TOT_RA_CM,                                                                  
                DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                    
                    SUM(TRD.TOT_CM)/SUM(TRD.TOT_LOD)) AS TOT_CMB,                                                 
                DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                    
                    SUM(TRD.TOT_RA_CM)/SUM(TRD.TOT_LOD)) AS TOT_RA_CMB,                                           
                SUM(TRD.TOT_OP) AS TOT_OP,                                                                        
                SUM(TRD.TOT_RA_OP) AS TOT_RA_OP,                                                                  
                DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                    
                    SUM(TRD.TOT_OP)/SUM(TRD.TOT_LOD)) AS TOT_OPB,                                                 
                DECODE(SUM(TRD.TOT_LOD), 0, 0,                                                                    
                    SUM(TRD.TOT_RA_OP)/SUM(TRD.TOT_LOD)) AS TOT_RA_OPB                                            
          FROM  (                                                                                                
                SELECT -- TRADE GROUP, RHQ, FINAL                                                                 
                        TRD.MQTA_STEP_CD,                                                                             
                        MIN(DECODE(TRD.BSE_YR||TRD.BSE_MON, INP.ADD1_YR_MON, '2',                                     
                            INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,                                                   
                        TRD.BSE_MON AS BSE_MON,                                                                       
                        TRD.TRD_CD AS TRD_CD,                                                                         
                        TRD.DIR_CD AS DIR_CD,                                                                         
                        MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,                                                             
                        COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,                        
                        SUM(TRD.LOD_QTY         ) AS TOT_LOD ,                                                        
                        SUM(TRD.GRS_RPB_REV*TRD.LOD_QTY) AS TOT_REV ,                                                 
                        SUM((TRD.GRS_RPB_REV-TRD.CM_UC_AMT)*TRD.LOD_QTY) AS TOT_CM ,                                  
                        SUM((TRD.GRS_RPB_REV-TRD.RA_CM_UC_AMT)*TRD.LOD_QTY) AS TOT_RA_CM, -- BKG CM                   
                        SUM((TRD.GRS_RPB_REV-TRD.OPFIT_UC_AMT)*TRD.LOD_QTY    ) AS TOT_OP ,                           
                        SUM((TRD.GRS_RPB_REV-TRD.RA_OPFIT_UC_AMT)*TRD.LOD_QTY ) AS TOT_RA_OP -- BKG OP                
                  FROM  SAQ_MON_QTA_STEP_VER VER,                                                                  
                        SAQ_MON_QTA_LOD_TGT  TRD,                                                                   
                        SAQ_MON_TGT_VVD_ADJ  VVD,                                                                   
                        TMP_INPUT_PARMAS     INP                                                                       
                 WHERE  VER.MQTA_STEP_CD IN ('11', '08') -- LOAD TARGET INITIAL, FINAL                             
                   AND  VER.BSE_YR       = INP.BSE_YR                                                                    
                   AND  VER.BSE_QTR_CD   = INP.BSE_QTR_CD                                                            
                   AND  VER.TRD_CD       = INP.TRD_CD                                                                    
                   AND  VER.GLINE_VER_NO = INP.GLINE_VER_NO                                                        
                   AND  ((VER.MQTA_STEP_CD = '11' AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                     
                                               FROM COM_INTG_CD_DTL A                                                  
                                               WHERE A.INTG_CD_ID = 'CD00926'))                                        
                         OR (VER.MQTA_STEP_CD = '08' AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT                  
                                               FROM COM_INTG_CD_DTL A,                                                 
                                                    COM_INTG_CD_DTL B                                                  
                                               WHERE A.INTG_CD_ID = 'CD00926'                                          
                                               AND B.INTG_CD_ID = A.INTG_CD_ID                                         
                                               AND B.INTG_CD_VAL_CTNT = 'DN'                                           
                                               AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ)))                 
                   AND  TRD.MQTA_STEP_CD = VER.MQTA_STEP_CD                                                        
                   AND  TRD.BSE_YR       = VER.BSE_YR                                                                    
                   AND  TRD.BSE_QTR_CD   = VER.BSE_QTR_CD                                                            
                   AND  TRD.TRD_CD       = VER.TRD_CD                                                                    
                   AND  TRD.DIR_CD       = VER.DIR_CD                                                                    
                   AND  TRD.MQTA_VER_NO  = VER.MQTA_VER_NO                                                          
                   AND  VVD.BSE_YR       = VER.BSE_YR                                                                    
                   AND  VVD.BSE_QTR_CD   = VER.BSE_QTR_CD                                                            
                   AND  VVD.GLINE_VER_NO = VER.GLINE_VER_NO                                                        
                   AND  VVD.BSE_MON      = TRD.BSE_MON                                                                  
                   AND  VVD.TRD_CD       = TRD.TRD_CD                                                                    
                   AND  VVD.DIR_CD       = TRD.DIR_CD                                                                    
                   AND  VVD.SUB_TRD_CD   = TRD.SUB_TRD_CD                                                            
                   AND  VVD.RLANE_CD     = TRD.RLANE_CD                                                                
                   AND  VVD.SPRT_GRP_CD  = TRD.SPRT_GRP_CD                                                          
                   AND  VVD.BSA_GRP_CD   = TRD.BSA_GRP_CD                                                            
                GROUP BY
                        TRD.MQTA_STEP_CD,TRD.BSE_YR,TRD.BSE_MON,TRD.TRD_CD,TRD.RLANE_CD,TRD.DIR_CD,              
                        TRD.SPRT_GRP_CD,TRD.BSA_GRP_CD                                                              
                ) TRD                                                                                             
          GROUP BY
                  GROUPING SETS(								       										  
                    (TRD.BSE_MON, TRD.TRD_CD),						       									  
                    (TRD.BSE_MON, TRD.TRD_CD, TRD.DIR_CD),					       							  
                    (TRD.TRD_CD, TRD.DIR_CD),						       									  
                    (TRD.BSE_MON), (TRD.TRD_CD),						      									  
                    ()									       												  
                    ), TRD.MQTA_STEP_CD                                                                       
         												                                                     
        ) UNI                                                                                             
GROUP BY UNI.SUB_SEQ, UNI.DIR_SEQ, UNI.DIR_CD, ITM.CODE, ITM.TEXT, ITM.ROW_SEQ, UNI.TRD_CD                
ORDER BY UNI.SUB_SEQ, UNI.TRD_CD, UNI.DIR_SEQ, ITM.ROW_SEQ			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="bse_qtr_cd" type="12" value="" out="N"/>
				<param name="befyrqtr" type="12" value="" out="N"/>
				<param name="yrmon" type="12" value="" out="N"/>
				<param name="sls_fcast_pub_no" type="12" value="" out="N"/>
				<param name="mqta_mdl_ver_no" type="12" value="" out="N"/>
				<param name="version" type="12" value="" out="N"/>
				<param name="target_grp" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
