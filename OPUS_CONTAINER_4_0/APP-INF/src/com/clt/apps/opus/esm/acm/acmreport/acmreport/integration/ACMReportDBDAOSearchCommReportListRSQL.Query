<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ACMReportDBDAOSearchCommReportListRSQL">
			<desc><![CDATA[]]></desc>
			<sql><![CDATA[
SELECT     LIS.BL_NO,
           LIS.BKG_NO,
           LIS.AGN_CD,
           LIS.AC_STS_CD,
           LIS.IO_BND_CD,
           LIS.COMM_VVD,
           LIS.SAIL_ARR_DT,
           LIS.POR_CD,
           LIS.POL_CD,
           LIS.POD_CD,
           LIS.DEL_CD,
           LIS.TEU_FEU,
           LIS.FAC_AMT,
           LIS.COM_I,
--           LIS.COM_II,
           LIS.BROKERAGE_AMT,
           LIS.CHF_AMT,
           LIS.CSF_AMT,
           LIS.RCSF_AMT,
           LIS.TS_AMT,
--           LIS.TR_AMT,
           LIS.SOC_AMT,
           LIS.CROSS_AMT,
           LIS.DOC_AMT,
           LIS.DDCT_AMT,
           LIS.USD_AMT,
           LIS.CURR_CD,
           LIS.CALC_DT,
           LIS.RQST_DT,
           LIS.APRO_DT,
           LIS.IF_DT,
           LIS.PPD_FRT_AMT,
           LIS.CLT_FRT_AMT,
           LIS.PPD_OTR_AMT,
           LIS.CLT_OTR_AMT,
           LIS.NET_AMT,
           LIS.GROSS_AMT,
           LIS.PYMT_AMT,
           LIS.FF_CD,
           LIS.FF_NAME,
           LIS.FF_ADDR,
           LIS.BRO_ADDR1,
           LIS.BRO_ADDR2,
           LIS.BRO_ADDR3,
           LIS.BRO_ADDR4,
           LIS.BRO_ADDR5,
           LIS.BRO_ADDR6,
           LIS.PAN_CODE,
           LIS.TRD_CD,
           LIS.RLANE_CD,
           LIS.DIR_CD,
           LIS.TEU,
           LIS.FEU,
           LIS.AUD_NO
      FROM
         (
               SELECT /*+ PARALLEL(AGN, 16) */
#if (${report_item} != '')
                      DENSE_RANK() OVER (ORDER BY ${report_item}) AS RANK,
#else
                      DENSE_RANK() OVER (ORDER BY 1) AS RANK,
#end
                      MAX (INF.BL_NO)                           AS BL_NO,
                      MAX (AGN.BKG_NO)                          AS BKG_NO,
                      MAX (AGN.AGN_CD)                          AS AGN_CD,
                      MAX (AGN.AC_STS_CD)                       AS AC_STS_CD,
                      MAX (AGN.IO_BND_CD)                       AS IO_BND_CD,
                      MAX (AGN.AC_VSL_CD||AGN.AC_SKD_VOY_NO||AGN.AC_SKD_DIR_CD) AS COMM_VVD,
                      MAX (TO_CHAR (TO_DATE (SAIL_ARR_DT, 'YYYYMMDD'), 'YYYY-MM-DD'))             AS SAIL_ARR_DT,
                      MAX (INF.POR_CD)                          AS POR_CD,
                      MAX (INF.POL_CD)                          AS POL_CD,
                      MAX (INF.POD_CD)                          AS POD_CD,
                      MAX (INF.DEL_CD)                          AS DEL_CD,
                      NVL
                    ( MAX
                    (
                    (
                          SELECT
                                 SUM (DECODE (SUBSTR (CNTR_TPSZ_CD, 2, 1), '2', OP_CNTR_QTY, 0))
                           FROM BKG_QUANTITY
                          WHERE BKG_NO = AGN.BKG_NO
                    )
                    )
                    , 0
                    )
                   || '/'
                   || NVL
                    (
                      MAX
                    (
                    (
                          SELECT
                                 SUM (DECODE (SUBSTR (CNTR_TPSZ_CD, 2, 1), '2', 0, OP_CNTR_QTY))
                            FROM BKG_QUANTITY
                           WHERE BKG_NO = AGN.BKG_NO
                    )
                    )
                    , 0
                    ) AS TEU_FEU,
                      NVL
                    ( SUM
                    (
                    (
                          SELECT
                                 CRNT_AMT
                            FROM ACM_FAC_COMM
                           WHERE BKG_NO = AGN.BKG_NO
                             AND FAC_SEQ =
                               (
                                     SELECT /*+INDEX_DESC(X XPKAGT_FAC_COMM) */
                                            X.FAC_SEQ
                                       FROM ACM_FAC_COMM X
                                      WHERE ROWNUM < 2
                                        AND X.BKG_NO = AGN.BKG_NO
                               )
                    )
                    )
                    , 0
                    ) AS FAC_AMT,
                      NVL (SUM (DECODE (AGN.AC_TP_CD, 'G', AGN.IF_AMT, 0 )), 0) AS COM_I,
--                      TO_CHAR (NVL (SUM (DECODE (AGN.AC_TP_CD, 'N', AGN.IF_AMT, 0 )), 0), '999,999,999,999,990.99') AS COM_II,
                      NVL (SUM (DECODE (AGN.AC_TP_CD, 'K', AGN.IF_AMT, 0 )), 0) AS BROKERAGE_AMT,
                      NVL (SUM (DECODE (AGN.AC_TP_CD, 'H', AGN.IF_AMT, 0 )), 0) AS CHF_AMT,
                      NVL (SUM (DECODE (AGN.AC_TP_CD, 'N', AGN.IF_AMT, 0 )), 0) AS CSF_AMT,
                      NVL (SUM (DECODE (AGN.AC_TP_CD, 'R', AGN.IF_AMT, 0 )), 0) AS RCSF_AMT,
                      NVL (SUM (DECODE (AGN.AC_TP_CD, 'S', AGN.IF_AMT, 0 )), 0) AS TS_AMT,
--                      TO_CHAR (NVL (SUM (DECODE (AGN.AC_TP_CD, 'R', AGN.IF_AMT, 0 )), 0), '999,999,999,999,990.99') AS TR_AMT,
                      NVL (SUM (DECODE (AGN.AC_TP_CD, 'O', AGN.IF_AMT, 0 )), 0) AS SOC_AMT,
                      NVL (SUM (DECODE (AGN.AC_TP_CD, 'C', AGN.IF_AMT, 0 )), 0) AS CROSS_AMT,
                      NVL (SUM (DECODE (AGN.AC_TP_CD, 'D', AGN.IF_AMT, 0 )), 0) AS DOC_AMT,
                      NVL (MAX (AGN.DDCT_CHG_AMT + AGN.DDCT_TRSP_AMT + AGN.DDCT_SPCL_CMPN_AMT), 0) AS DDCT_AMT,
                      NVL (SUM
                    (
                      DECODE (AGN.AC_TP_CD, 'G', AGN.IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'N', AGN.IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'K', AGN.IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'H', AGN.IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'S', AGN.IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'R', AGN.IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'O', AGN.IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'T', AGN.IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'C', AGN.IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'D', AGN.IF_AMT, 0)
                    )
                    , 0)                               AS USD_AMT,
                      MAX (AGN.CURR_CD)                                             AS CURR_CD,
                      MAX (TO_CHAR (AGN.CRE_DT, 'YYYY-MM-DD'))                      AS CALC_DT,
                      MAX (TO_CHAR (AGN.RQST_DT, 'YYYY-MM-DD'))                  AS RQST_DT,
                      MAX (TO_CHAR (AGN.APRO_DT, 'YYYY-MM-DD'))                  AS APRO_DT,
                      MAX (TO_CHAR (AGN.IF_DT, 'YYYY-MM-DD'))                    AS IF_DT,
                      MAX (INF.PPD_OFRT_AMT) AS PPD_FRT_AMT,
                      MAX (INF.CLT_OFRT_AMT) AS CLT_FRT_AMT,
                      MAX (INF.PPD_CHG_AMT) AS PPD_OTR_AMT,
                      MAX (INF.CLT_CHG_AMT) AS CLT_OTR_AMT,
                      MAX (INF.PPD_OFRT_AMT + INF.CLT_OFRT_AMT) AS NET_AMT,
                      MAX (INF.PPD_OFRT_AMT + INF.PPD_CHG_AMT + INF.CLT_OFRT_AMT + INF.CLT_CHG_AMT) AS GROSS_AMT,
                      NVL
                    ( SUM
                    ( DECODE (AGN.AC_TP_CD, 'G', AGN.PAY_IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'N', AGN.PAY_IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'K', AGN.PAY_IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'H', AGN.PAY_IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'S', AGN.PAY_IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'R', AGN.PAY_IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'O', AGN.PAY_IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'T', AGN.PAY_IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'C', AGN.PAY_IF_AMT, 0)
                    + DECODE (AGN.AC_TP_CD, 'D', AGN.PAY_IF_AMT, 0)
                    )
                    , 0
                    )                                            AS PYMT_AMT,
--                    컬럼 추가 하여 조회쿼리 변경 
--                    (SELECT MAX (CUS.CUST_CNT_CD) || TO_CHAR (MAX (CUS.CUST_SEQ), 'FM000000')
--                        FROM BKG_CUSTOMER CUS
--                        WHERE CUS.BKG_NO = INF.BKG_NO
--                        AND CUS.BKG_CUST_TP_CD = 'F') AS FF_CD,
                    (MAX (INF.FRT_FWRD_CNT_CD) || TO_CHAR (MAX (INF.FRT_FWRD_SEQ), 'FM000000')) AS FF_CD,
                     MAX
                    (
                 CASE 'BOMBB'
                 WHEN AGN.AR_OFC_CD
                 THEN NVL
                    (
                    (
                          SELECT
                                 E.CUST_NM
                            FROM BKG_CUSTOMER E
                           WHERE INF.BKG_NO             = E.BKG_NO
                             AND E.BKG_CUST_TP_CD     = 'B'
                    )
                    ,
                    (
                          SELECT
                                 E.CUST_NM
                            FROM BKG_CUSTOMER E
                           WHERE INF.BKG_NO             = E.BKG_NO
                             AND E.BKG_CUST_TP_CD     = 'F'
                    )
                    )
                 ELSE
                    (
                        SELECT
                        NVL(D.CUST_LOCL_LANG_NM, D.CUST_LGL_ENG_NM)
                        FROM MDM_CUSTOMER      D,
                        BKG_CUSTOMER      E
                        WHERE E.CUST_CNT_CD   = D.CUST_CNT_CD(+)
                        AND E.CUST_SEQ        = D.CUST_SEQ(+)
                        AND INF.BKG_NO        = E.BKG_NO(+)
                        AND E.BKG_CUST_TP_CD(+)  = 'F'
                    )
                  END
                    ) AS FF_NAME,
                      MAX
                    (
                    (
                        SELECT
                        E.CUST_ADDR
                        FROM BKG_CUSTOMER      E
                        WHERE INF.BKG_NO             = E.BKG_NO
                        AND E.BKG_CUST_TP_CD     = 'F'
                    )
                    ) AS FF_ADDR,
                      MAX
                    (
                    (
                          SELECT
                                SCE_TOKEN_NL_FNC (CUST_ADDR, 1)
                            FROM   BKG_CUSTOMER
                            WHERE  BKG_NO = AGN.BKG_NO
                            AND    BKG_CUST_TP_CD = 'B'
                    )
                    ) AS BRO_ADDR1,
                      MAX
                    (
                    (
                          SELECT
                                 SCE_TOKEN_NL_FNC(CUST_ADDR, 2)
                            FROM BKG_CUSTOMER
                           WHERE BKG_NO = AGN.BKG_NO
                             AND BKG_CUST_TP_CD = 'B'
                    )
                    ) AS BRO_ADDR2,
                      MAX
                    (
                    (
                          SELECT
                                 SCE_TOKEN_NL_FNC(CUST_ADDR, 3)
                            FROM BKG_CUSTOMER
                           WHERE BKG_NO = AGN.BKG_NO
                             AND BKG_CUST_TP_CD = 'B'
                    )
                    ) AS BRO_ADDR3,
                      MAX
                    (
                    (
                          SELECT
                                SCE_TOKEN_NL_FNC(CUST_ADDR, 4)
                            FROM   BKG_CUSTOMER
                            WHERE  BKG_NO = AGN.BKG_NO
                            AND    BKG_CUST_TP_CD = 'B')) AS BRO_ADDR4,
                      MAX
                    (
                    (
                          SELECT
                                SCE_TOKEN_NL_FNC(CUST_ADDR, 5)
                            FROM   BKG_CUSTOMER
                            WHERE  BKG_NO = AGN.BKG_NO
                            AND    BKG_CUST_TP_CD = 'B')) AS BRO_ADDR5,
                      MAX
                    (
                    (
                          SELECT
                                SCE_TOKEN_NL_FNC(CUST_ADDR, 6)
                            FROM   BKG_CUSTOMER
                            WHERE  BKG_NO = AGN.BKG_NO
                            AND    BKG_CUST_TP_CD = 'B')) AS BRO_ADDR6,
                    MAX((
                          SELECT
                                 BRF.CUST_REF_NO_CTNT
                            FROM BKG_REFERENCE     BRF
                           WHERE BRF.BKG_REF_TP_CD = 'BRKN'
                             AND BRF.BKG_NO        = AGN.BKG_NO

                    ))                          AS PAN_CODE,
                      MAX (INF.TRD_CD)           AS TRD_CD,
                      MAX (INF.RLANE_CD)         AS RLANE_CD,
                      MAX (AGN.AC_SKD_DIR_CD)  AS DIR_CD,
                      NVL
                    ( MAX
                    (
                    (
                          SELECT
                                 SUM (DECODE (SUBSTR (CNTR_TPSZ_CD, 2, 1), '2', OP_CNTR_QTY, 0))
                            FROM BKG_QUANTITY
                           WHERE BKG_NO = AGN.BKG_NO
                    )
                    )
                    , 0
                    ) AS TEU,
                      NVL
                    ( MAX
                    (
                    (
                         SELECT
                                SUM (DECODE (SUBSTR (CNTR_TPSZ_CD, 2, 1), '2', 0, OP_CNTR_QTY))
                           FROM BKG_QUANTITY
                          WHERE BKG_NO = AGN.BKG_NO
                    )
                    )
                    , 0
                    ) AS FEU,
                      MAX (AGN.AUD_NO) AS AUD_NO
                 FROM ACM_AGN_COMM      AGN,
                      ACM_AGN_BKG_INFO INF,
                      BKG_BOOKING BKG
                WHERE AGN.CRE_USR_ID        != 'COST'
                  AND AGN.BKG_NO             = AGN.BKG_NO
                  AND AGN.BKG_NO             = INF.BKG_NO
                  AND AGN.BKG_NO             = BKG.BKG_NO
                  AND AGN.AC_SEQ             = AGN.AC_SEQ
#if (${agn_cd} != '')
                  AND AGN.AGN_CD             = @[agn_cd]
#end
#if (${ar_ofc_cd} != '')
                  AND AGN.AR_OFC_CD         IN (@[ar_ofc_cd], @[agn_cd])
#end
#if (${s_trd_cd} != '')
                  AND INF.TRD_CD             = @[s_trd_cd]
#end
#if (${s_rlane_cd} != '')
                  AND INF.RLANE_CD           = @[s_rlane_cd]
#end
#if (${s_dir_cd} != '')
                  AND AGN.AC_SKD_DIR_CD    = @[s_dir_cd]
#end
                  AND AGN.AC_TP_CD
                   IN
                    (
                      'G', 'K', 'H', 'N', 'R', 'S', 'O', 'T', 'C', 'D'
                    )
                  AND AGN.IO_BND_CD
                   IN
                    (
                 CASE @[io_bnd_cd]
                 WHEN 'O'
                 THEN 'O'
                 WHEN 'I'
                 THEN 'I'
                 ELSE AGN.IO_BND_CD
                  END
                    )
#if (${comm_vvd} != '')
                  AND AGN.AC_VSL_CD||AGN.AC_SKD_VOY_NO||AGN.AC_SKD_DIR_CD = @[comm_vvd]
#end
#if (${bkg_ofc_cd} != '')
                  AND INF.BKG_OFC_CD = @[bkg_ofc_cd]
#end
#if (${ob_sls_ofc_cd} != '')
                  AND BKG.OB_SLS_OFC_CD = @[ob_sls_ofc_cd]
#end
#if (${por_cd} != '')
                  AND INF.POR_CD = @[por_cd]
#end
#if (${pol_cd} != '')
                  AND INF.POL_CD = @[pol_cd]
#end
#if (${pod_cd} != '')
                  AND INF.POD_CD = @[pod_cd]
#end
#if (${del_cd} != '')
                  AND INF.DEL_CD = @[del_cd]
#end
#if (${bl_no} != '')
                  AND INF.BL_NO IN ( ${bl_no} )
#end
#if (${aud_no} != '')
                  AND AGN.AUD_NO = @[aud_no]
#end
#if (${sts_option} == 'CS')
                  AND AGN.AC_STS_CD
                   IN
                    (
                      'CS', 'CE', 'IC', 'CA'
                    )
                  AND AGN.CRE_DT
              BETWEEN TO_DATE (REPLACE(@[fm_dt],'-',''), 'YYYYMMDD')
                  AND TO_DATE (REPLACE(@[to_dt],'-',''), 'YYYYMMDD')+0.999999
#elseif (${sts_option} == 'RS')
                  AND AGN.AC_STS_CD IN ( 'RS','RM' )
                  AND AGN.RQST_DT
              BETWEEN TO_DATE (REPLACE(@[fm_dt],'-',''), 'YYYYMMDD')
                  AND TO_DATE (REPLACE(@[to_dt],'-',''), 'YYYYMMDD')+0.999999
#elseif (${sts_option} == 'AS')
                  AND AGN.AC_STS_CD IN ( 'AS' )
                  AND AGN.AUD_DT
              BETWEEN TO_DATE (REPLACE(@[fm_dt],'-',''), 'YYYYMMDD')
                  AND TO_DATE (REPLACE(@[to_dt],'-',''), 'YYYYMMDD')+0.999999
#elseif (${sts_option} == 'PS')
                  AND AGN.AC_STS_CD IN ( 'PS' )
                  AND AGN.APRO_DT
              BETWEEN TO_DATE (REPLACE(@[fm_dt],'-',''), 'YYYYMMDD')
                  AND TO_DATE (REPLACE(@[to_dt],'-',''), 'YYYYMMDD')+0.999999
#elseif (${sts_option} == 'IS')
                  AND AGN.AC_STS_CD IN ( 'IF' )
                  AND AGN.IF_DT
              BETWEEN TO_DATE (REPLACE(@[fm_dt],'-',''), 'YYYYMMDD')
                  AND TO_DATE (REPLACE(@[to_dt],'-',''), 'YYYYMMDD')+0.999999
#elseif (${sts_option} == 'RR')
                  AND AGN.AC_STS_CD IN ('RR', 'AR', 'PR', 'IC')
                  AND AGN.UPD_DT
              BETWEEN TO_DATE (REPLACE(@[fm_dt],'-',''), 'YYYYMMDD')
                  AND TO_DATE (REPLACE(@[to_dt],'-',''), 'YYYYMMDD')+0.999999
#else
                  AND AGN.CRE_DT
              BETWEEN TO_DATE (REPLACE(@[fm_dt],'-',''), 'YYYYMMDD')
                  AND TO_DATE (REPLACE(@[to_dt],'-',''), 'YYYYMMDD')+0.999999
#end
#if (${report_item} != '')
             GROUP BY ${report_item}
#elseif (${report_item} == '')
             GROUP BY INF.BL_NO, AGN.BKG_NO
#end
         ) LIS			]]></sql>
			<params>
				<param name="agn_cd" type="12" value="" out="N"/>
				<param name="ar_ofc_cd" type="12" value="" out="N"/>
				<param name="s_trd_cd" type="12" value="" out="N"/>
				<param name="s_rlane_cd" type="12" value="" out="N"/>
				<param name="s_dir_cd" type="12" value="" out="N"/>
				<param name="io_bnd_cd" type="12" value="" out="N"/>
				<param name="comm_vvd" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="ob_sls_ofc_cd" type="12" value="" out="N"/>
				<param name="por_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="aud_no" type="12" value="" out="N"/>
				<param name="fm_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
