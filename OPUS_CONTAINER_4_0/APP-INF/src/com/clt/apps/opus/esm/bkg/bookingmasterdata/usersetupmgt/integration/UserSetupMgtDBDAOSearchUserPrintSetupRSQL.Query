<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="UserSetupMgtDBDAOSearchUserPrintSetupRSQL">
			<desc><![CDATA[UserSetupMgtDBDAOSearchUserPrintSetupRSQL]]></desc>
			<sql><![CDATA[
SELECT 
    USR_ID, 
	ORG_N3PTY_PPD_CD,
	ORG_PPD_RCV_CD,
   (SELECT CONTI_CD FROM MDM_LOCATION
    WHERE LOC_CD = BKG_COM_USER_LOC_FNC(@[usr_id]) ) AS CONTI_CD,
    BL_FACE_PRN_DVC_NM, /*0743*/
    BL_RIDR_PRN_DVC_NM, /*0743*/
    BL_PRN_DVC_NM, /*0064*/
    CRE_USR_ID, 
    CRE_DT, 
    UPD_USR_ID, 
    UPD_DT,
    BL_PRN_CHG_TP_CD,
	PRINT_RELEASE_YN,
    BKG_GET_TOKEN_FNC(ISS_PRN_FLG_N_ISS_CPY_KNT ,1) AS OBL_ISS_FLG ,
    BKG_GET_TOKEN_FNC(ISS_PRN_FLG_N_ISS_CPY_KNT ,2) AS OBL_PRN_FLG ,
    BKG_GET_TOKEN_FNC(ISS_PRN_FLG_N_ISS_CPY_KNT ,3) AS OBL_ISS_KNT ,
    BKG_GET_TOKEN_FNC(ISS_PRN_FLG_N_ISS_CPY_KNT ,4) AS BL_CPY_KNT ,
    BKG_GET_TOKEN_FNC(ISS_PRN_FLG_N_ISS_CPY_KNT ,5) AS BL_CPY_NO ,
    BKG_GET_TOKEN_FNC(BL_TP_CD_N_BB_CGO_FLG,1) AS BL_TP_CD ,
    BKG_GET_TOKEN_FNC(BL_TP_CD_N_BB_CGO_FLG,2) AS BB_CGO_FLG ,
    BKG_GET_TOKEN_FNC(ESIG_CPYESIG_KNT_FLG ,1) AS BL_ESIG_FLG ,
    BKG_GET_TOKEN_FNC(ESIG_CPYESIG_KNT_FLG ,2) AS BL_CPY_ESIG_FLG ,
    BKG_GET_TOKEN_FNC(ESIG_CPYESIG_KNT_FLG ,3) AS BL_KNT_FLG,
    BKG_JOIN_FNC(cursor( SELECT  BL_PRN_TP_CD||'>'||BL_PRN_CHG_TP_CD||'>'|| BL_PRN_CNTR_TP_CD||'>'||
                                     BL_FACE_PRN_KNT||'>'||BL_RIDR_PRN_KNT||'>'||BL_FACE_PRN_DVC_NM||'>'||BL_RIDR_PRN_DVC_NM
                                FROM BKG_USR_BL_PRN_DFLT
                                WHERE USR_ID = @[usr_id]
                                ORDER BY BL_PRN_TP_CD
                            ),'@' ) AS BL_PRN_SETUP
FROM ( SELECT 
            ROWNUM AS SEQ,
            USR_ID, 
            BL_FACE_PRN_DVC_NM, /*0743*/
            BL_RIDR_PRN_DVC_NM, /*0743*/
            BL_PRN_DVC_NM, /*0064*/
            CRE_USR_ID, 
            CRE_DT, 
            UPD_USR_ID, 
            UPD_DT,
            BL_PRN_CHG_TP_CD
        FROM BKG_USR_DFLT_SET 
        WHERE USR_ID = @[usr_id]
    ) A,
    ( SELECT ROWNUM SEQ 
           , NVL(( SELECT OBL_ISS_FLG ||','|| OBL_PRN_FLG ||','|| OBL_ISS_KNT ||','|| BL_CPY_KNT ||','|| BL_CPY_NO 
                     FROM BKG_BL_ISS WHERE BKG_NO = @[bkg_no] ),'N,N,1,0,0') ISS_PRN_FLG_N_ISS_CPY_KNT 
		   , NVL((SELECT BL_TP_CD||','||BB_CGO_FLG /* NULL - Original Bill / W - Waybill*/
                FROM   BKG_BOOKING WHERE  BKG_NO = @[bkg_no] ),',') AS BL_TP_CD_N_BB_CGO_FLG

        , NVL(ORG_RCV.ORG_PPD_RCV_CD,'N') ORG_PPD_RCV_CD
        , NVL(ORG_RCV.ORG_N3PTY_PPD_CD,'N') ORG_N3PTY_PPD_CD
        ,( SELECT DECODE(COUNT(*),0,'Y','N')
            FROM (
            SELECT 'X' as out_put
            FROM
            BKG_DO_DTL DTL, BKG_BOOKING BKG, BKG_BL_ISS ISS
            WHERE
            DTL.BKG_NO = @[bkg_no]
            AND BKG.BKG_NO = DTL.BKG_NO
            AND BKG.BKG_NO = ISS.BKG_NO
            AND DTL.RLSE_STS_CD = DECODE(SUBSTR(BKG.DEL_CD, 1, 2), 'JP','D', 'R')
            AND NVL(ISS.OTR_DOC_CGOR_FLG, '*') <> 'Y'
            UNION ALL
            SELECT 'X' as out_put
            FROM BKG_BOOKING BKG, BKG_CGO_RLSE CGO, BKG_BL_ISS ISS
            WHERE BKG.BKG_NO = @[bkg_no]
            AND BKG.BL_NO = CGO.BL_NO
            AND BKG.BKG_NO = ISS.BKG_NO
            AND CGO.FRT_CLT_FLG = 'Y'
            AND CGO.OBL_RDEM_FLG = 'Y'
            AND CGO.CSTMS_CLR_CD = 'Y'
            AND NVL(ISS.OTR_DOC_CGOR_FLG, '*') <> 'Y'
           )) AS PRINT_RELEASE_YN
        ,NVL((
            SELECT BL_ESIG_FLG ||','|| BL_CPY_ESIG_FLG ||','|| BL_KNT_FLG
            FROM BKG_BL_ESIG_OFC_ASGN
            WHERE BL_ISS_OFC_CD = DECODE((SELECT OBL_ISS_OFC_CD FROM BKG_BL_ISS WHERE BKG_NO = @[bkg_no] ), NULL, (SELECT BKG_OFC_CD FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no]),
                                         (SELECT OBL_ISS_OFC_CD FROM BKG_BL_ISS WHERE BKG_NO = @[bkg_no] ))
			AND ROWNUM = 1
        ),'N,N,N') AS ESIG_CPYESIG_KNT_FLG


       FROM DUAL,
       		(SELECT  NVL(MAX(DECODE(IS_LAST, 'PPT1-1', DECODE(CR_FLG, 'Y', 'C')))                 
                , MAX(DECODE(IS_LAST, 'PPT1-1', OTS_STL_FLG)))					ORG_PPD_RCV_CD
                , NVL(MAX(DECODE(IS_LAST, 'PPT3-1', DECODE(CR_FLG, 'Y', 'C')))                 
                , MAX(DECODE(IS_LAST, 'PPT3-1', OTS_STL_FLG)))					ORG_N3PTY_PPD_CD          
        FROM (
		        SELECT  P.CR_MK_FLG CR_FLG
                        , Q.OTS_STL_FLG
                        , Q.TP||'-1' IS_LAST
                FROM SAR_OTS_HDR P, 
                    (SELECT DECODE(BKG_IO_BND_CD, 'O', DECODE(N3PTY_OFC_CD, NULL, 'PPT1', 'PPT3')) TP
                            , MIN(STL_FLG) OTS_STL_FLG
                        FROM SAR_OTS_HDR A,   
                             (SELECT distinct A.BKG_NO BKG_NO,
                                    (SELECT AR_OFC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = A.PPD_RCV_OFC_CD) PPD_OFC_CD,                                                                            
                                    (SELECT AR_OFC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = B.N3PTY_RCV_OFC_CD) N3PTY_OFC_CD
                                FROM BKG_RATE A
                                    ,BKG_CHG_RT B
                                WHERE A.BKG_NO = @[bkg_no]
                                    AND A.BKG_NO = B.BKG_NO(+)
                                    AND B.N3PTY_RCV_OFC_CD(+) is not null) B      
                        WHERE A.BL_NO = @[bl_no]
                            AND (A.CLT_OFC_CD = B.PPD_OFC_CD OR A.CLT_OFC_CD = B.N3PTY_OFC_CD)
                            AND A.BL_NO= B.BKG_NO  
                        GROUP BY DECODE(BKG_IO_BND_CD, 'O', DECODE(N3PTY_OFC_CD, NULL, 'PPT1', 'PPT3'))
                    ) Q     
                WHERE 1=1
                    AND BL_NO = @[bl_no]
                    AND EXISTS (SELECT 'X' 
                                 FROM SAR_OTS_DTL
                                WHERE RHQ_CD = P.RHQ_CD
                                 AND OTS_OFC_CD = P.OTS_OFC_CD
                                 AND BL_NO = P.BL_NO
                                 AND INV_NO = P.INV_NO
                                 AND INV_AMT <> 0))
            ) ORG_RCV
    ) B
WHERE A.SEQ(+) = B.SEQ			]]></sql>
			<params>
				<param name="usr_id" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="bl_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
