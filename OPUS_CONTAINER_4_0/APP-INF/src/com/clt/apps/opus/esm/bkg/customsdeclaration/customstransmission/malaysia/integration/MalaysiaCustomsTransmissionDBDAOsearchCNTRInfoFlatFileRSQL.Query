<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MalaysiaCustomsTransmissionDBDAOsearchCNTRInfoFlatFileRSQL">
			<desc><![CDATA[]]></desc>
			<sql><![CDATA[
SELECT CASE 
          WHEN PS.TS_TP_CD = 'T'
             THEN 'T' 
          WHEN BK.BKG_CGO_TP_CD = 'P'
             THEN 'E'
          WHEN BK.DE_TERM_CD <> 'S'
             THEN 'F'
          ELSE 'L'
       END AS TS_TP_CD,
       CASE
          WHEN BK.BKG_CGO_TP_CD = 'P'
             THEN 'E'
          WHEN BK.DE_TERM_CD <> 'S'
             THEN 'F'
          ELSE 'L'
       END AS TP_CD_2ND,
       TO_CHAR(PS.SND_DT, 'YYMMDDHH24MISS') AS SND_DT,
       NVL(PS.CNTR_NO, '') AS CNTR_NO,
       NVL(PS.CNTR_TPSZ_CD, '') AS CNTR_TPSZ,
       NVL(PS.BKG_NO, '') AS BKG_NO,
       NVL(PS.FULL_MTY_CD, '') AS FULL_MTY_CD,
       NVL(PS.CNTR_WGT, '') AS CNTR_WGT,
       NVL(PS.VGM_WGT, '') AS VGM_WGT,
       NVL(PS.CNTR_OPR_CD, '') AS CNTR_OPR_CD,
       NVL(PS.IB_SLT_OPR_CD, '') AS IB_SLT_OPR_CD,
       -- DECODE(NVL(PC.RC_TEMP, '0'), 0, '', DECODE( SIGN(PC.RC_TEMP), -1, TO_CHAR(-1 * ( -1 * TO_NUMBER(NVL(PC.RC_TEMP, '0'))), '099.99'), '+'||TRIM(TO_CHAR(-1 * ( -1 * TO_NUMBER(NVL(PC.RC_TEMP, '0'))), '099.99')))||'C') AS RC_TEMP,
       CASE
          WHEN PS.RC_FLG = 'N' THEN ''
          ELSE CASE
                  WHEN PC.RC_TEMP = '0' THEN '+000.00C'
                  WHEN SIGN(PC.RC_TEMP) = -1 THEN TO_CHAR(-1 * (-1 * TO_NUMBER(NVL(PC.RC_TEMP, '0'))), '099.99')||'C'
                  ELSE '+'||TRIM(TO_CHAR(-1 * (-1 * TO_NUMBER(NVL(PC.RC_TEMP, '0'))), '099.99'))||'C'
               END
       END AS RC_TEMP,
       NVL(PS.DCGO_FLG, '') AS DCGO_FLG,
       DECODE(NVL(PC.OVR_DIM_HGT, 0), 0, '', TRIM(TO_CHAR(TO_NUMBER(NVL(PC.OVR_DIM_HGT, '0')), '099.9'))||'C') AS OVR_DIM_HGT,
       DECODE(NVL(PC.OVR_FNT_DIM_LEN, 0), 0, '', TRIM(TO_CHAR(TO_NUMBER(NVL(PC.OVR_FNT_DIM_LEN, '0')), '099.9'))||'C') AS OVR_FNT_DIM_LEN,
       DECODE(NVL(PC.OVR_BAK_DIM_LEN, 0), 0, '', TRIM(TO_CHAR(TO_NUMBER(NVL(PC.OVR_BAK_DIM_LEN, '0')), '099.9'))||'C') AS OVR_BAK_DIM_LEN,
       DECODE(NVL(PC.OVR_LF_DIM_WDT, 0), 0, '', TRIM(TO_CHAR(TO_NUMBER(NVL(PC.OVR_LF_DIM_WDT, '0')), '099.9'))||'C') AS OVR_LF_DIM_WDT,
       DECODE(NVL(PC.OVR_RT_DIM_WDT, 0), 0, '', TRIM(TO_CHAR(TO_NUMBER(NVL(PC.OVR_RT_DIM_WDT, '0')), '099.9'))||'C') AS OVR_RT_DIM_WDT,
       DECODE(NVL(PC.DIM_HGT, 0), 0, '', TRIM(TO_CHAR(TO_NUMBER(NVL(PC.DIM_HGT, '0')), '099.9'))||'C') AS DIM_HGT,
       DECODE(NVL(PC.DIM_WDT, 0), 0, '', TRIM(TO_CHAR(TO_NUMBER(NVL(PC.DIM_WDT, '0')), '099.9'))||'C') AS DIM_WDT,
       DECODE(NVL(PC.DIM_LEN, 0), 0, '', TRIM(TO_CHAR(TO_NUMBER(NVL(PC.DIM_LEN, '0')), '099.9'))||'C') AS DIM_LEN,
       NVL(PC.CGO_DESC, '') AS CGO_DESC,
       NVL((SELECT CMDT_HS_CD
              FROM BKG_CNTR_MF_DESC MF
             WHERE MF.BKG_NO = PS.BKG_NO
               AND MF.CNTR_NO = PS.CNTR_NO
               AND CMDT_HS_CD IS NOT NULL
               AND ROWNUM = 1), '') AS CMDT_HS_CD,
       NVL(PC.CFS_TP_CD, '') AS CFS_TP_CD,
       NVL(PC.DPT_SVC_TP_CD, '') AS DPT_SVC_TP_CD,
       NVL(PC.RF_CNTR_PRE_TRD_INSP_TP_CD, '') AS RF_CNTR_PRE_TRD_INSP_TP_CD,
       NVL(PS.PSA_STWG_TP_ID, '') AS STWG_TP_CD,
       NVL(PS.OB_SLT_OPR_CD, '') AS OB_SLT_OPR_CD,
       NVL(PS.PSA_BAT_NO, '') AS PSA_BAT_NO,
       NVL(N3RD_POD_CD, (SELECT NVL(MDM.UN_LOC_CD, MDM.LOC_CD)
                           FROM MDM_LOCATION MDM
                          WHERE PS.N1ST_POD_CD = MDM.LOC_CD(+)
                            AND ROWNUM = 1)) AS N1ST_POD_CD,
       (SELECT NVL(MDM.UN_LOC_CD, MDM.LOC_CD)
          FROM MDM_LOCATION MDM
         WHERE PS.N2ND_POD_CD = MDM.LOC_CD(+)
           AND ROWNUM = 1) AS N2ND_POD_CD,
--       NVL(PS.N2ND_POD_CD, '') AS N2ND_POD_CD,
       (SELECT NVL(MDM.UN_LOC_CD, MDM.LOC_CD)
          FROM MDM_LOCATION MDM
         WHERE PS.POD_CD = MDM.LOC_CD(+)
           AND ROWNUM = 1 ) AS POD_CD,
       (SELECT NVL(MDM.UN_LOC_CD, MDM.LOC_CD)
          FROM MDM_LOCATION MDM
         WHERE PS.POL_CD = MDM.LOC_CD(+)
           AND ROWNUM = 1 ) AS POL_CD,
       (SELECT NVL(MDM.UN_LOC_CD, MDM.LOC_CD)
          FROM BKG_BOOKING BV,
               MDM_LOCATION MDM
         WHERE BV.BKG_NO = PS.BKG_NO
           AND BV.POR_CD = MDM.LOC_CD(+)
           AND ROWNUM = 1 ) AS POR_CD,
       (SELECT NVL(MDM.UN_LOC_CD, MDM.LOC_CD)
          FROM BKG_BOOKING BV,
               MDM_LOCATION MDM
         WHERE BV.BKG_NO = PS.BKG_NO
           AND BV.DEL_CD = MDM.LOC_CD(+)
           AND ROWNUM = 1) AS DEL_CD,
       NVL(PC.DCHG_OVR_SZ_FLG, '') AS DCHG_OVR_SZ_FLG,
       NVL(PC.DIR_DE_FLG, '') AS DIR_DE_FLG,
       NVL(BK.BLCK_STWG_CD, '') AS BLCK_STWG_CD,
       REPLACE(NVL(PS.CNTR_SEAL_NO, ''), '/', '') AS CNTR_SEAL_NO,
       (SELECT NVL(DG.IMDG_CLSS_CD, '')
          FROM BKG_DG_CGO DG
         WHERE PS.BKG_NO = DG.BKG_NO
           AND PS.CNTR_NO = DG.CNTR_NO
           AND DG.IMDG_CLSS_CD IS NOT NULL
           AND ROWNUM = 1) AS CNTR_CLASS,
       UPPER(PV.PSA_VSL_NM) AS PSA_VSL_NM,
       NVL(PV.PSA_VOY_DIR_CD, '') AS PSA_VOY_DIR_CD,
       NVL2(PC.CBM_PER_HR_QTY, PC.CBM_PER_HR_QTY||'CMH', '') AS CBM_PER_HR_QTY,
       (SELECT SOC_FLG
          FROM BKG_CONTAINER
         WHERE BKG_NO = PS.BKG_NO
           AND CNTR_NO = PS.CNTR_NO) AS SOC_IND,
       BKG_SPCLCHAR_CONV_FNC(CNEE.CUST_NM, 'Y') AS CNEE_NM,
       BKG_SPCLCHAR_CONV_FNC(NTFY.CUST_NM, 'Y') AS NTFY_NM,
       (SELECT SLAN_CD
          FROM BKG_VVD
         WHERE BKG_NO = PS.BKG_NO
           AND POL_CD LIKE 'MY%'
           AND ROWNUM = 1) AS SLAN_CD,
       PS.PSA_CRE_TP_CD

  FROM BKG_CSTMS_MY_VVD PV,
       BKG_CSTMS_MY_IMP_STS PS,
       BKG_CSTMS_MY_IMP_STS_SPCL PC,
       BKG_CUSTOMER CNEE,
       BKG_CUSTOMER NTFY,
       BKG_BOOKING BK

 WHERE PS.VSL_CD = @[vsl_cd]
   AND PS.SKD_VOY_NO = @[skd_voy_no]
   AND PS.SKD_DIR_CD =  @[skd_dir_cd]
   AND PS.LODG_VSL_CD = PV.VSL_CD(+)
   AND PS.LODG_SKD_VOY_NO = PV.SKD_VOY_NO(+)
   AND PS.LODG_VSL_DIR_CD = PV.SKD_DIR_CD(+)
   AND PS.VSL_CD = PC.VSL_CD (+)
   AND PS.SKD_VOY_NO = PC.SKD_VOY_NO (+)
   AND PS.SKD_DIR_CD = PC.SKD_DIR_CD (+)
   AND PS.CNTR_NO = PC.CNTR_NO (+)
   AND PS.BKG_NO = CNEE.BKG_NO(+)
   AND CNEE.BKG_CUST_TP_CD(+) = 'C'
   AND PS.BKG_NO = NTFY.BKG_NO(+)
   AND NTFY.BKG_CUST_TP_CD(+) = 'N'
   AND PS.BKG_NO = BK.BKG_NO(+)
			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
