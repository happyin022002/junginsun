<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TaaOftAutoRatingDBDAOsearchTaaOftAutoratingListRSQL">
			<desc><![CDATA[TaaOftAutoRatingDBDAOsearchTaaOftAutoratingList 조회]]></desc>
			<sql><![CDATA[
/*AUTORATING_20100106-001*/
WITH
BK AS (

/*******************************************************************************************
BOOKING 의 기본 정보를 SELECT 한다.
TAA 정보도 같이 SELECT 되며, 유효한 S/C 와 연결되지 않으면 SELECT 되는 ROW 가 없다.
*******************************************************************************************/

SELECT	BK.BKG_NO					,
				NULL CORR_NO			,
				NVL(@[cmdt_cd], BK.CMDT_CD)	CMDT_CD	,
				( SELECT REP_CMDT_CD FROM MDM_COMMODITY WHERE CMDT_CD = NVL(@[cmdt_cd], BK.CMDT_CD) )	REP_CMDT_CD	,
				DECODE(BK.PRE_RLY_PORT_CD||BK.PST_RLY_PORT_CD,NULL,'Y','N') DIR_CALL_FLG	,
				NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), TO_DATE(BR.RT_APLY_DT))		RT_APLY_DT		,
				BK.SVC_SCP_CD			,
				'T' CTRT_TP_CD		,
				BK.SC_NO					,
				BK.RFA_NO					,
				BK.TAA_NO					,
				CASE
				WHEN BK.XTER_BKG_RQST_CD = 'EDI' THEN 'E'
				WHEN BK.XTER_BKG_RQST_CD = 'WEB' THEN 'W'
				WHEN BK.XTER_BKG_RQST_CD = 'DSK' THEN 'D'
				ELSE 'E'
				END	ESVC_TP_CD		,
				TM.TAA_PROP_NO		,
				TM.AMDT_SEQ				,
				CASE
				WHEN L4.CML_ZN_FLG = 'Y' AND L3.RGN_CD IN ( 'UAG', 'UAN', 'UAS' ) THEN 'CZ'
				ELSE 'NN'
				END CML_ZN_CD			,
				CASE
				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) AND BK.POD_CD = BK.DEL_CD AND BK.DE_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L3.RGN_CD AND A.DEST_RGN_CD = L4.RGN_CD ), 'OT')
				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) AND BK.POL_CD = BK.POR_CD AND BK.RCV_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L2.RGN_CD AND A.DEST_RGN_CD = L1.RGN_CD ), 'OT')
				END		USA_SVC_MOD_CD	,	-- PO, LO, IP, ML, OT
				BK.POR_CD														,
				L1.CNT_CD||L1.STE_CD	POR_STE_CD		,
				L1.RGN_CD							POR_RGN_CD		,
				L1.CNT_CD							POR_CNT_CD		,
				L1.CONTI_CD						POR_CONTI_CD	,
				BK.POL_CD														,
				L2.CNT_CD||L2.STE_CD	POL_STE_CD		,
				L2.RGN_CD							POL_RGN_CD		,
				L2.CNT_CD							POL_CNT_CD		,
				L2.CONTI_CD						POL_CONTI_CD	,
				BK.POD_CD														,
				L3.CNT_CD||L3.STE_CD	POD_STE_CD		,
				L3.RGN_CD							POD_RGN_CD		,
				L3.CNT_CD							POD_CNT_CD		,
				L3.CONTI_CD						POD_CONTI_CD	,
				BK.DEL_CD														,
				L4.CNT_CD||L4.STE_CD	DEL_STE_CD		,
				L4.RGN_CD							DEL_RGN_CD		,
				L4.CNT_CD							DEL_CNT_CD		,
				L4.CONTI_CD						DEL_CONTI_CD	,
				BK.PRE_RLY_PORT_CD									,
				BK.PST_RLY_PORT_CD									,
				BK.POL_NOD_CD												,
				BK.POD_NOD_CD												,
				BK.ORG_TRNS_MOD_CD									,
				BK.DEST_TRNS_MOD_CD									,
				BK.AGMT_ACT_CNT_CD									,
				BK.AGMT_ACT_CUST_SEQ								,
				( SELECT SUM(A.OP_CNTR_QTY) FROM BKG_QTY_DTL A WHERE A.BKG_NO = BK.BKG_NO )	CNTR_QTY	,
				DECODE(BB.MEAS_UT_CD, 'CBF', BB.MEAS_QTY	* 0.0283	, BB.MEAS_QTY	)					MEAS_QTY	,
				DECODE(BB.WGT_UT_CD	, 'LBS', BB.ACT_WGT		* 0.45359	, BB.ACT_WGT	)					ACT_WGT
FROM		BKG_BOOKING		BK	,
				BKG_BL_DOC		BB	,
				BKG_RATE			BR	,
				MDM_LOCATION	L1	,
				MDM_LOCATION	L2	,
				MDM_LOCATION	L3	,
				MDM_LOCATION	L4	,
				PRI_TAA_HDR		TH	,
				PRI_TAA_MN		TM
WHERE		BB.BKG_NO				= BK.BKG_NO
AND			BR.BKG_NO(+)		= BK.BKG_NO
AND			L1.LOC_CD				= BK.POR_CD
AND			L2.LOC_CD				= BK.POL_CD
AND			L3.LOC_CD				= BK.POD_CD
AND			L4.LOC_CD				= BK.DEL_CD
AND			TH.TAA_NO				= BK.TAA_NO
AND	   	TM.TAA_PROP_NO	= TH.TAA_PROP_NO
AND			TM.SVC_SCP_CD		= BK.SVC_SCP_CD
AND     TM.CFM_FLG			= 'Y'				-- CONFIRMED TAA
AND			NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), ( SELECT TO_DATE(RT_APLY_DT) FROM BKG_RATE A WHERE A.BKG_NO = BK.BKG_NO ))	BETWEEN TM.EFF_DT AND TM.EXP_DT
AND			BK.BKG_NO				= @[bkg_no]	-- BKG No
AND			@[ca_flg]				= 'N'

UNION ALL

SELECT	BK.BKG_NO					,
				BK.CORR_NO				,
				NVL(@[cmdt_cd], BK.CMDT_CD)	CMDT_CD	,
				( SELECT REP_CMDT_CD FROM MDM_COMMODITY WHERE CMDT_CD = NVL(@[cmdt_cd], BK.CMDT_CD) )	REP_CMDT_CD	,
				DECODE(BK.PRE_RLY_PORT_CD||BK.PST_RLY_PORT_CD,NULL,'Y','N') DIR_CALL_FLG	,
				NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), TO_DATE(BR.RT_APLY_DT))		RT_APLY_DT		,
				BK.SVC_SCP_CD			,
				'T' CTRT_TP_CD		,
				BK.SC_NO					,
				BK.RFA_NO					,
				BK.TAA_NO					,
				CASE
				WHEN BK.XTER_BKG_RQST_CD = 'EDI' THEN 'E'
				WHEN BK.XTER_BKG_RQST_CD = 'WEB' THEN 'W'
				WHEN BK.XTER_BKG_RQST_CD = 'DSK' THEN 'D'
				ELSE 'E'
				END	ESVC_TP_CD		,
				TM.TAA_PROP_NO		,
				TM.AMDT_SEQ				,
				CASE
				WHEN L4.CML_ZN_FLG = 'Y' AND L3.RGN_CD IN ( 'UAG', 'UAN', 'UAS' ) THEN 'CZ'
				ELSE 'NN'
				END CML_ZN_CD			,
				CASE
				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) AND BK.POD_CD = BK.DEL_CD AND BK.DE_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) THEN ( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L3.RGN_CD AND A.DEST_RGN_CD = L4.RGN_CD )
				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) AND BK.POL_CD = BK.POR_CD AND BK.RCV_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) THEN ( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L2.RGN_CD AND A.DEST_RGN_CD = L1.RGN_CD )
				END		USA_SVC_MOD_CD	,	-- PO, LO, IP, ML
				BK.POR_CD														,
				L1.CNT_CD||L1.STE_CD	POR_STE_CD		,
				L1.RGN_CD							POR_RGN_CD		,
				L1.CNT_CD							POR_CNT_CD		,
				L1.CONTI_CD						POR_CONTI_CD	,
				BK.POL_CD														,
				L2.CNT_CD||L2.STE_CD	POL_STE_CD		,
				L2.RGN_CD							POL_RGN_CD		,
				L2.CNT_CD							POL_CNT_CD		,
				L2.CONTI_CD						POL_CONTI_CD	,
				BK.POD_CD														,
				L3.CNT_CD||L3.STE_CD	POD_STE_CD		,
				L3.RGN_CD							POD_RGN_CD		,
				L3.CNT_CD							POD_CNT_CD		,
				L3.CONTI_CD						POD_CONTI_CD	,
				BK.DEL_CD														,
				L4.CNT_CD||L4.STE_CD	DEL_STE_CD		,
				L4.RGN_CD							DEL_RGN_CD		,
				L4.CNT_CD							DEL_CNT_CD		,
				L4.CONTI_CD						DEL_CONTI_CD	,
				BK.PRE_RLY_PORT_CD									,
				BK.PST_RLY_PORT_CD									,
				BK.POL_NOD_CD												,
				BK.POD_NOD_CD												,
				BK.ORG_TRNS_MOD_CD									,
				BK.DEST_TRNS_MOD_CD									,
				BK.AGMT_ACT_CNT_CD									,
				BK.AGMT_ACT_CUST_SEQ								,
				( SELECT SUM(A.OP_CNTR_QTY) FROM BKG_QTY_DTL_HIS A WHERE A.BKG_NO = BK.BKG_NO AND A.CORR_NO = BK.CORR_NO )	CNTR_QTY	,
				DECODE(BB.MEAS_UT_CD, 'CBF', BB.MEAS_QTY	* 0.0283	, BB.MEAS_QTY	)		MEAS_QTY	,
				DECODE(BB.WGT_UT_CD	, 'LBS', BB.ACT_WGT		* 0.45359	, BB.ACT_WGT	)		ACT_WGT
FROM		BKG_BKG_HIS				BK	,
				BKG_BL_DOC_HIS		BB	,
				BKG_RT_HIS				BR	,
				MDM_LOCATION			L1	,
				MDM_LOCATION			L2	,
				MDM_LOCATION			L3	,
				MDM_LOCATION			L4	,
				PRI_TAA_HDR				TH	,
				PRI_TAA_MN				TM
WHERE		BB.BKG_NO				= BK.BKG_NO
AND			BB.CORR_NO			= BK.CORR_NO
AND			BR.BKG_NO(+)		= BK.BKG_NO
AND			BR.CORR_NO(+)		= BK.CORR_NO
AND			L1.LOC_CD				= BK.POR_CD
AND			L2.LOC_CD				= BK.POL_CD
AND			L3.LOC_CD				= BK.POD_CD
AND			L4.LOC_CD				= BK.DEL_CD
AND			TH.TAA_NO				= BK.TAA_NO
AND	   	TM.TAA_PROP_NO	= TH.TAA_PROP_NO
AND			TM.SVC_SCP_CD		= BK.SVC_SCP_CD
AND     TM.CFM_FLG			= 'Y'				-- CONFIRMED TAA
AND			NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), ( SELECT TO_DATE(RT_APLY_DT) FROM BKG_RT_HIS A WHERE A.BKG_NO = BK.BKG_NO AND A.CORR_NO = BK.CORR_NO ))	BETWEEN TM.EFF_DT AND TM.EXP_DT
AND			BK.BKG_NO				= @[bkg_no]	-- BKG No
AND			BK.CORR_NO			= 'TMP0000001'	-- CORRECTION 중인 DATA 를 나타내는 고정된 상수값
AND			@[ca_flg]				= 'Y'

)	,
BQ AS (

/*******************************************************************************************
AUTORATING 을 실행할 단위(ROW) 를 SELECT 한다.

IMDG CLASS 을 경우 해당 CNTR TP/SZ 별 MIN 값을 취한다.

현재는 요구사항에 없으나, 향후 실제 TP/SZ 가 필요할때를 대비하여 CNTR_TPSZ_CD 를 가지고 있는다.

POR, POL, POD, DEL, PRE RELAY, POST RELAY 에 대해서는 ROUTE CONVERSION 을 적용한다.

D7/AK 를 D7/DR 운임 적용을 위한 예외 로직도 여기서 적용한다.
*******************************************************************************************/

SELECT	BK.BKG_NO									,
				BK.CORR_NO								,
				ROW_NUMBER() OVER ( PARTITION BY BK.BKG_NO ORDER BY BQ.BKG_BQ_SEQ ) BQ_SEQ	,
				BK.CMDT_CD								,
				BK.REP_CMDT_CD						,
				BK.DIR_CALL_FLG						,
				BK.RT_APLY_DT							,
				BK.SVC_SCP_CD							,
				BK.CTRT_TP_CD							,
				BK.SC_NO									,
				BK.RFA_NO									,
				BK.TAA_NO									,
				BK.ESVC_TP_CD							,
				BK.TAA_PROP_NO						,
				BK.AMDT_SEQ								,
				BK.CML_ZN_CD							,
				BK.USA_SVC_MOD_CD					,
				RC.POR_CD									,
				RC.POR_STE_CD							,
				RC.POR_RGN_CD							,
				RC.POR_CNT_CD							,
				RC.POR_CONTI_CD						,
				RC.POL_CD									,
				RC.POL_STE_CD							,
				RC.POL_RGN_CD							,
				RC.POL_CNT_CD							,
				RC.POL_CONTI_CD						,
				RC.POD_CD									,
				RC.POD_STE_CD							,
				RC.POD_RGN_CD							,
				RC.POD_CNT_CD							,
				RC.POD_CONTI_CD						,
				RC.DEL_CD									,
				RC.DEL_STE_CD							,
				RC.DEL_RGN_CD							,
				RC.DEL_CNT_CD							,
				RC.DEL_CONTI_CD						,
				RC.PRE_RLY_PORT_CD				,
				RC.PST_RLY_PORT_CD				,
				BK.POL_NOD_CD							,
				BK.POD_NOD_CD							,
				RC.POR_APPL_FLG						,
				RC.POL_APPL_FLG						,
				RC.POD_APPL_FLG						,
				RC.DEL_APPL_FLG						,
				RC.PRE_RLY_PORT_APPL_FLG	,
				RC.PST_RLY_PORT_APPL_FLG	,
        BK.ORG_TRNS_MOD_CD				,
				BK.DEST_TRNS_MOD_CD				,
				BK.AGMT_ACT_CNT_CD				,
				BK.AGMT_ACT_CUST_SEQ			,
				BK.CNTR_QTY								,
				BK.MEAS_QTY								,
				BK.ACT_WGT								,
				BQ.BKG_BQ_SEQ							,
				BQ.CNTR_TPSZ_CD						,
				BQ.CTRT_CNTR_TPSZ_CD			,
				( SELECT A.CNTR_SZ_CD FROM MDM_CNTR_TP_SZ A WHERE A.CNTR_TPSZ_CD = BQ.CTRT_CNTR_TPSZ_CD ) CTRT_CNTR_SZ_CD	,
				BQ.RCV_TERM_CD						,
				BQ.DE_TERM_CD							,
				CASE
				/* D7/AK 를 D7/DR 운임 적용을 위한 예외 로직 */
				WHEN BQ.CTRT_CNTR_TPSZ_CD = 'D7' AND BQ.AWK_CGO_FLG = 'Y' THEN 'DR'
				WHEN BQ.DRY_CGO_FLG = 'Y' THEN 'DR'
				END																	DR_TP		,
				DECODE(BQ.DCGO_FLG		, 'Y', 'DG')	DG_TP		,
				DECODE(BQ.RC_FLG			, 'Y', 'RF')	RF_TP		,
				DECODE(BQ.AWK_CGO_FLG	, 'Y', 'AK')	AK_TP		,
				DECODE(BQ.BB_CGO_FLG	, 'Y', 'BB')	BB_TP		,
				BQ.DRY_CGO_FLG						,
				BQ.DCGO_FLG								,
				BQ.RC_FLG									,
				BQ.AWK_CGO_FLG						,
				BQ.BB_CGO_FLG							,
				BQ.SOC_FLG								,
				CASE
				WHEN BQ.DCGO_FLG 		= 'Y' THEN 'DG'
				WHEN BQ.AWK_CGO_FLG	= 'Y' THEN 'AK'
				WHEN BQ.RC_FLG	 		= 'Y' THEN 'RF'
				WHEN BQ.BB_CGO_FLG	= 'Y' THEN 'BB'
				ELSE 'DR'
				END	PRC_CGO_TP_CD					,
				BQ.IMDG_CLSS_CD						,
				BQ.CTRT_CNTR_QTY
FROM		BK	,
				(
				SELECT	QD.BKG_NO									,
								ROW_NUMBER() OVER ( PARTITION BY QD.BKG_NO ORDER BY QD.CNTR_TPSZ_CD, QD.CTRT_CNTR_TPSZ_CD, QD.RCV_TERM_CD, QD.DE_TERM_CD, QD.DRY_CGO_FLG, QD.AWK_CGO_FLG, QD.DCGO_FLG, QD.RC_FLG, QD.BB_CGO_FLG, QD.SOC_FLG, QD.IMDG_CLSS_CD )	BKG_BQ_SEQ	,
								QD.CNTR_TPSZ_CD						,
								QD.CTRT_CNTR_TPSZ_CD			,
								QD.RCV_TERM_CD						,
								QD.DE_TERM_CD							,
								QD.DRY_CGO_FLG						,
								QD.AWK_CGO_FLG						,
								QD.DCGO_FLG								,
								QD.RC_FLG									,
								QD.BB_CGO_FLG							,
								QD.SOC_FLG								,
								QD.IMDG_CLSS_CD						,
								QD.CTRT_CNTR_QTY
				FROM		(

								SELECT	QD.BKG_NO									,
												QD.CNTR_TPSZ_CD						,
												QD.CTRT_CNTR_TPSZ_CD			,
												QD.RCV_TERM_CD						,
												QD.DE_TERM_CD							,
												QD.DRY_CGO_FLG						,
												QD.AWK_CGO_FLG						,
												QD.DCGO_FLG								,
												QD.RC_FLG									,
												QD.BB_CGO_FLG							,
												QD.SOC_FLG								,
												DECODE(QD.DCGO_FLG, 'Y', ( SELECT MIN(IMDG_CLSS_CD) FROM BKG_DG_CGO A WHERE A.BKG_NO = QD.BKG_NO AND A.CNTR_TPSZ_CD = QD.CNTR_TPSZ_CD ))	IMDG_CLSS_CD	,
												QD.CTRT_CNTR_QTY
								FROM		(
												SELECT	QD.BKG_NO										,
																QD.CNTR_TPSZ_CD							,
																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	CTRT_CNTR_TPSZ_CD	,
																QD.RCV_TERM_CD							,
																QD.DE_TERM_CD								,
																QD.DRY_CGO_FLG							,
																QD.AWK_CGO_FLG							,
																QD.DCGO_FLG									,
																QD.RC_FLG										,
																QD.BB_CGO_FLG								,
																QD.SOC_FLG									,
																SUM(QD.OP_CNTR_QTY) CTRT_CNTR_QTY
												FROM		BK	,
																BKG_QTY_DTL	QD
												WHERE		QD.BKG_NO		= BK.BKG_NO
												GROUP BY
																QD.BKG_NO									,
																QD.CNTR_TPSZ_CD						,
																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	,
																QD.RCV_TERM_CD						,
																QD.DE_TERM_CD							,
																QD.DRY_CGO_FLG						,
																QD.AWK_CGO_FLG						,
																QD.DCGO_FLG								,
																QD.RC_FLG									,
																QD.BB_CGO_FLG							,
																QD.SOC_FLG
												)	QD
								WHERE		@[ca_flg]		= 'N'

								UNION ALL

								SELECT	QD.BKG_NO									,
												QD.CNTR_TPSZ_CD						,
												QD.CTRT_CNTR_TPSZ_CD			,
												QD.RCV_TERM_CD						,
												QD.DE_TERM_CD							,
												QD.DRY_CGO_FLG						,
												QD.AWK_CGO_FLG						,
												QD.DCGO_FLG								,
												QD.RC_FLG									,
												QD.BB_CGO_FLG							,
												QD.SOC_FLG								,
												DECODE(QD.DCGO_FLG, 'Y', ( SELECT MIN(IMDG_CLSS_CD) FROM BKG_DG_CGO_HIS A WHERE A.BKG_NO = QD.BKG_NO AND A.CORR_NO = QD.CORR_NO AND A.CNTR_TPSZ_CD = QD.CNTR_TPSZ_CD ))	IMDG_CLSS_CD	,
												QD.CTRT_CNTR_QTY
								FROM		(
												SELECT	QD.BKG_NO										,
																QD.CORR_NO									,
																QD.CNTR_TPSZ_CD							,
																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	CTRT_CNTR_TPSZ_CD	,
																QD.RCV_TERM_CD							,
																QD.DE_TERM_CD								,
																QD.DRY_CGO_FLG							,
																QD.AWK_CGO_FLG							,
																QD.DCGO_FLG									,
																QD.RC_FLG										,
																QD.BB_CGO_FLG								,
																QD.SOC_FLG									,
																SUM(QD.OP_CNTR_QTY) CTRT_CNTR_QTY
												FROM		BK	,
																BKG_QTY_DTL_HIS	QD
												WHERE		QD.BKG_NO		= BK.BKG_NO
												AND			QD.CORR_NO	= BK.CORR_NO
												GROUP BY
																QD.BKG_NO									,
																QD.CORR_NO								,
																QD.CNTR_TPSZ_CD						,
																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	,
																QD.RCV_TERM_CD						,
																QD.DE_TERM_CD							,
																QD.DRY_CGO_FLG						,
																QD.AWK_CGO_FLG						,
																QD.DCGO_FLG								,
																QD.RC_FLG									,
																QD.BB_CGO_FLG							,
																QD.SOC_FLG
												)	QD
								WHERE		@[ca_flg]		= 'Y'

								)	QD
				)	BQ	,

/*******************************************************************************************
이 부분은 SURCHARGE 에는 적용하지 않고, OFT 에만 적용한다. ( S/C, RFA, TAA 공통 적용 )
*******************************************************************************************/

				(
				SELECT	A.BKG_NO								,
								A.POR_CD								,
								A.POR_STE_CD						,
								A.POR_RGN_CD						,
								A.POR_CNT_CD						,
								A.POR_CONTI_CD					,
								A.POR_APPL_FLG					,
								B.POL_CD								,
								B.POL_STE_CD						,
								B.POL_RGN_CD						,
								B.POL_CNT_CD						,
								B.POL_CONTI_CD					,
								B.POL_APPL_FLG					,
								C.POD_CD								,
								C.POD_STE_CD						,
								C.POD_RGN_CD						,
								C.POD_CNT_CD						,
								C.POD_CONTI_CD					,
								C.POD_APPL_FLG					,
								D.DEL_CD								,
								D.DEL_STE_CD						,
								D.DEL_RGN_CD						,
								D.DEL_CNT_CD						,
								D.DEL_CONTI_CD					,
								D.DEL_APPL_FLG					,
								E.PRE_RLY_PORT_CD				,
								E.PRE_RLY_PORT_APPL_FLG	,
								F.PST_RLY_PORT_CD				,
								F.PST_RLY_PORT_APPL_FLG
				FROM		(
								SELECT	BKG_NO							,
												POR_CD							,
												POR_STE_CD					,
												POR_RGN_CD					,
												POR_CNT_CD					,
												POR_CONTI_CD				,
												'N'	POR_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO						,
												RC.CONV_LOC_CD				POR_CD				,
												ML.CNT_CD||ML.STE_CD	POR_STE_CD		,
												ML.RGN_CD							POR_RGN_CD		,
												ML.CNT_CD							POR_CNT_CD		,
												ML.CONTI_CD						POR_CONTI_CD	,
												RC.POR_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC	,
												MDM_LOCATION	ML
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.POR_CD
								AND			RC.POR_APPL_FLG	= 'Y'
								AND			ML.LOC_CD				= RC.CONV_LOC_CD
								)	A	,
								(
								SELECT	BKG_NO							,
												POL_CD							,
												POL_STE_CD					,
												POL_RGN_CD					,
												POL_CNT_CD					,
												POL_CONTI_CD				,
												'N'	POL_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO						,
												RC.CONV_LOC_CD				POL_CD				,
												ML.CNT_CD||ML.STE_CD	POL_STE_CD		,
												ML.RGN_CD							POL_RGN_CD		,
												ML.CNT_CD							POL_CNT_CD		,
												ML.CONTI_CD						POL_CONTI_CD	,
												RC.POL_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC	,
												MDM_LOCATION	ML
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.POL_CD
								AND			RC.POL_APPL_FLG	= 'Y'
								AND			ML.LOC_CD				= RC.CONV_LOC_CD
								)	B	,
								(
								SELECT	BKG_NO							,
												POD_CD							,
												POD_STE_CD					,
												POD_RGN_CD					,
												POD_CNT_CD					,
												POD_CONTI_CD				,
												'N'	POD_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO						,
												RC.CONV_LOC_CD				POD_CD				,
												ML.CNT_CD||ML.STE_CD	POD_STE_CD		,
												ML.RGN_CD							POD_RGN_CD		,
												ML.CNT_CD							POD_CNT_CD		,
												ML.CONTI_CD						POD_CONTI_CD	,
												RC.POD_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC	,
												MDM_LOCATION	ML
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.POD_CD
								AND			RC.POD_APPL_FLG	= 'Y'
								AND			ML.LOC_CD				= RC.CONV_LOC_CD
								)	C	,
								(
								SELECT	BKG_NO							,
												DEL_CD							,
												DEL_STE_CD					,
												DEL_RGN_CD					,
												DEL_CNT_CD					,
												DEL_CONTI_CD				,
												'N'	DEL_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO						,
												RC.CONV_LOC_CD				DEL_CD				,
												ML.CNT_CD||ML.STE_CD	DEL_STE_CD		,
												ML.RGN_CD							DEL_RGN_CD		,
												ML.CNT_CD							DEL_CNT_CD		,
												ML.CONTI_CD						DEL_CONTI_CD	,
												RC.DEL_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC	,
												MDM_LOCATION	ML
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.DEL_CD
								AND			RC.DEL_APPL_FLG	= 'Y'
								AND			ML.LOC_CD				= RC.CONV_LOC_CD
								)	D	,
								(
								SELECT	BKG_NO											,
												PRE_RLY_PORT_CD							,
												'N'	PRE_RLY_PORT_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO										,
												CONV_LOC_CD	PRE_RLY_PORT_CD	,
												PRE_RLY_PORT_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.PRE_RLY_PORT_CD
								AND			RC.PRE_RLY_PORT_APPL_FLG	= 'Y'
								)	E	,
								(
								SELECT	BKG_NO											,
												PST_RLY_PORT_CD							,
												'N'	PST_RLY_PORT_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO										,
												CONV_LOC_CD	PST_RLY_PORT_CD	,
												PST_RLY_PORT_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.PST_RLY_PORT_CD
								AND			RC.PST_RLY_PORT_APPL_FLG	= 'Y'
								)	F
				WHERE		B.BKG_NO		= A.BKG_NO
				AND			C.BKG_NO		= A.BKG_NO
				AND			D.BKG_NO		= A.BKG_NO
				AND			E.BKG_NO		= A.BKG_NO
				AND			F.BKG_NO		= A.BKG_NO
				)	RC
WHERE		BQ.BKG_NO		= BK.BKG_NO
AND			RC.BKG_NO		= BK.BKG_NO
)	,
NC AS (

/*******************************************************************************************
BOOKING 에 해당하는 NOTE CONVERSION 을 SELECT 한다.
BKG_MIN_CGO_WGT, BKG_MAX_CGO_WGT, BKG_HNGR_BAR_TP_CD 는 SURCHARGE 에서만 사용되는 칼럼이고, RULE CODE 에서는 사용하지 않는다.
*******************************************************************************************/

SELECT	BQ.BKG_NO							,
				BQ.BQ_SEQ							,
				BQ.BKG_BQ_SEQ					,
				NC.NOTE_CONV_MAPG_ID	,
				NC.NOTE_CONV_SEQ			,
				NC.TRI_PROP_NO				,
				NC.AMDT_SEQ						,
				(	SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) CONV_TP_PRIO	,
					DECODE(BKG_CMDT_TP_CD, 'C', 600, 'G', 400, 'R', 300, 0)
					+ DECODE(BKG_POR_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)
					+ DECODE(BKG_POL_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)
					+ DECODE(BKG_POD_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)
					+ DECODE(BKG_DEL_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)
					+ DECODE(BKG_RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '45', 5, '53', 5, 'BL', 4, 'BX', 4, NULL, 4, 6)
					+ DECODE(BKG_PRC_CGO_TP_CD		, NULL, 0, 1)
					+ DECODE(BKG_IMDG_CLSS_CD			, NULL, 0, 1)
					+ DECODE(BKG_USA_SVC_MOD_CD		, NULL, 0, 1)
					+ DECODE(BKG_RCV_TERM_CD			, NULL, 0, 1)
					+ DECODE(BKG_DE_TERM_CD				, NULL, 0, 1)
					+ DECODE(BKG_SOC_FLG					, NULL, 0, 1)
					+ DECODE(BKG_TS_PORT_DEF_CD		, NULL, 0, 1)
					+ DECODE(BKG_DIR_CALL_FLG			, NULL, 0, 1)
					+ DECODE(BKG_MIN_CGO_WGT			, NULL, 0, 1)
					+ DECODE(BKG_MAX_CGO_WGT			, NULL, 0, 1)
					+ DECODE(BKG_HNGR_BAR_TP_CD		, NULL, 0, 1)	MTCH_PRIO	,	/* MATCHING PRIORITY */
				NC.NOTE_CONV_TP_CD          ,
				NC.CHG_RULE_TP_CD           ,
				NC.NOTE_CONV_CHG_CD         ,
				NC.NOTE_CONV_RULE_CD        ,
				NC.RT_APPL_TP_CD            ,
				NC.RT_OP_CD                 ,
				NC.CURR_CD                  ,
				NC.FRT_RT_AMT               ,
				NC.PAY_TERM_CD              ,
				NC.BKG_RAT_UT_CD						,
				NC.BKG_PRC_CGO_TP_CD				,
				NC.BKG_IMDG_CLSS_CD					,
				NC.BKG_CMDT_DEF_CD					,
				NC.BKG_USA_SVC_MOD_CD				,
				NC.BKG_POR_DEF_CD						,
				NC.BKG_POL_DEF_CD						,
				NC.BKG_POD_DEF_CD						,
				NC.BKG_DEL_DEF_CD						,
				NC.BKG_RCV_TERM_CD          ,
				NC.BKG_DE_TERM_CD           ,
				NC.BKG_SOC_FLG							,
				NC.BKG_TS_PORT_DEF_CD				,
				NC.BKG_DIR_CALL_FLG					,
				NVL(NC.CONV_RAT_UT_CD, BQ.CTRT_CNTR_TPSZ_CD)	CONV_RAT_UT_CD						,
				DECODE(NVL(NC.CONV_PRC_CGO_TP_CD, BQ.DR_TP), 'DR', 'DR')	CONV_DR_TP		,
				DECODE(NVL(NC.CONV_PRC_CGO_TP_CD, BQ.DG_TP), 'DG', 'DG')	CONV_DG_TP		,
				DECODE(NVL(NC.CONV_PRC_CGO_TP_CD,	BQ.RF_TP), 'RF', 'RF')	CONV_RF_TP		,
				DECODE(NVL(NC.CONV_PRC_CGO_TP_CD, BQ.AK_TP), 'AK', 'AK')	CONV_AK_TP		,
				DECODE(NVL(NC.CONV_PRC_CGO_TP_CD, BQ.BB_TP), 'BB', 'BB')	CONV_BB_TP		,

				'TYP : '
				||	NC.BKG_RAT_UT_CD
				||	' = '
				||	NC.CONV_RAT_UT_CD
				||	' ' || NC.RT_OP_CD || ' ' || TO_CHAR(NC.FRT_RT_AMT, 'FM999999990.000') || ' (' || NC.NOTE_CONV_TP_CD || ')'
				TYP_CONV_CTNT									,

				'RAC : '
				||	NC.BKG_PRC_CGO_TP_CD
				||	' = '
				||	NC.CONV_PRC_CGO_TP_CD
				||	' ' || NC.RT_OP_CD || ' ' || TO_CHAR(NC.FRT_RT_AMT, 'FM999999990.000') || ' (' || NC.NOTE_CONV_TP_CD || ')'
				RAC_CONV_CTNT

FROM		BQ											,
				(
				SELECT	NC.*
				FROM		BK											,
								PRI_TAA_TRI_LIST		TL	,
								PRI_TRI_RT					RT	,
								PRI_TRI_NOTE_CONV		NC
				WHERE		TL.TAA_PROP_NO	= BK.TAA_PROP_NO
				AND			TL.AMDT_SEQ			= BK.AMDT_SEQ
				AND			RT.TRI_PROP_NO	= TL.TRI_PROP_NO
				AND			BK.RT_APLY_DT		BETWEEN RT.EFF_DT AND RT.EXP_DT + 0.99999		/* 0.99999 는 23시 59분 59초를 의미 */
				AND			RT.PROP_STS_CD	= 'F'
				AND			NC.TRI_PROP_NO	= RT.TRI_PROP_NO
				AND			NC.AMDT_SEQ			= RT.AMDT_SEQ
				AND			BK.RT_APLY_DT		BETWEEN NC.EFF_DT AND NC.EXP_DT + 0.99999		/* 0.99999 는 23시 59분 59초를 의미 */
				UNION ALL
				SELECT	NC.*
				FROM		BK											,
								PRI_SVC_SCP_TRF			ST	,
								PRI_TRI_NOTE				TN	,
								PRI_TRI_NOTE_CONV		NC
				WHERE		ST.SVC_SCP_CD	= BK.SVC_SCP_CD
				AND			TN.TRF_PFX_CD	= ST.TRF_PFX_CD
				AND			TN.TRF_NO			=	ST.TRF_NO
				AND			BK.RT_APLY_DT		BETWEEN TN.EFF_DT AND TN.EXP_DT + 0.99999		/* 0.99999 는 23시 59분 59초를 의미 */
				AND			TN.CFM_FLG		= 'Y'
				AND			NC.NOTE_CONV_MAPG_ID	= TN.NOTE_CONV_MAPG_ID
				)	NC
WHERE

/*******************************************************************************************
NOT RULE CODE 는 SURCHARGE 에서만 사용된다.
*******************************************************************************************/

				NC.CHG_RULE_TP_CD			= 'R'
AND			NC.NOTE_CONV_RULE_CD	<> 'NOT'							/* RULE CODE 'NOT' 은 SURCHARGE 에서만 사용 됨 */


/*******************************************************************************************
< RATING UNIT >
*******************************************************************************************/
AND			(
								NC.BKG_RAT_UT_CD	IS NULL
						OR	NC.BKG_RAT_UT_CD	= BQ.CTRT_CNTR_TPSZ_CD
						OR	NC.BKG_RAT_UT_CD	IN ( 'BX', 'BL' )
        		OR
 		    		(
     						NC.BKG_RAT_UT_CD	IN ( '20', '40', 'HC', '45', '53' )
   					AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = NC.BKG_RAT_UT_CD )	= BQ.CTRT_CNTR_SZ_CD
   					)
				)


/*******************************************************************************************
< CARGO TYPE >
*******************************************************************************************/
AND			(
						NC.BKG_PRC_CGO_TP_CD	IS NULL
				OR	NC.BKG_PRC_CGO_TP_CD	IN ( BQ.DR_TP, BQ.DG_TP, BQ.RF_TP, BQ.AK_TP, BQ.BB_TP )
				)


/*******************************************************************************************
< IMDG CLASS >
NOTE CONV 의 IMDG CLSS CD 가 BKG 의 IMDG_CLSS_CD 의 일부부이라도 적용가능하다.
*******************************************************************************************/
AND			(
						NC.BKG_IMDG_CLSS_CD	IS NULL
				OR	BQ.IMDG_CLSS_CD			LIKE NC.BKG_IMDG_CLSS_CD||'%'
				)


/*******************************************************************************************
< COMMODITY >
GROUP 은 사용하지 않는다.
*******************************************************************************************/
AND			(
						NC.BKG_CMDT_DEF_CD IS NULL
				OR	NC.BKG_CMDT_DEF_CD = DECODE(NC.BKG_CMDT_TP_CD, 'C', BQ.CMDT_CD, 'R', BQ.REP_CMDT_CD)
				)


/*******************************************************************************************
<  USA SVC MOD >
NOTE CONV 에서는 USA SVC MOD CD 에, COMMERCIAL ZONE 도 같이 합쳐서 사용한다.
따라서 NOTE CONV 의 USA SVC MOD CD 가 'CZ' 이면 BKG 의 COMMERCIAL ZONE CD 와 비교한다.
*******************************************************************************************/
AND			(
						NC.BKG_USA_SVC_MOD_CD IS NULL
				OR	NC.BKG_USA_SVC_MOD_CD = DECODE(NC.BKG_USA_SVC_MOD_CD, 'CZ', BQ.CML_ZN_CD, BQ.USA_SVC_MOD_CD )
				)


/*******************************************************************************************
< ROUTE >
STANDARD NOTE 의 경우는 GROUP 을 사용하지 않으므로,
STANDARD NOTE 를 위한 특별한 고려가 필요하지 않음.
*******************************************************************************************/
/* POR */
AND			(
						NC.BKG_POR_DEF_CD IS NULL
				OR	NC.BKG_POR_DEF_CD = DECODE(NC.BKG_POR_TP_CD, 'L', BQ.POR_CD, 'S', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)
				)
/* POL */
AND			(
						NC.BKG_POL_DEF_CD IS NULL
				OR	NC.BKG_POL_DEF_CD = DECODE(NC.BKG_POL_TP_CD, 'L', BQ.POL_CD, 'S', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)
				)
/* POD */
AND			(
						NC.BKG_POD_DEF_CD IS NULL
				OR	NC.BKG_POD_DEF_CD = DECODE(NC.BKG_POD_TP_CD, 'L', BQ.POD_CD, 'S', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)
				)
/* DEL */
AND			(
						NC.BKG_DEL_DEF_CD IS NULL
				OR	NC.BKG_DEL_DEF_CD = DECODE(NC.BKG_DEL_TP_CD, 'L', BQ.DEL_CD, 'S', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)
				)


/*******************************************************************************************
RCV DE TERM
*******************************************************************************************/

AND			(
					  NC.BKG_RCV_TERM_CD IS NULL
				OR	NC.BKG_RCV_TERM_CD = BQ.RCV_TERM_CD
				)

AND			(
						NC.BKG_DE_TERM_CD IS NULL
				OR	NC.BKG_DE_TERM_CD = BQ.DE_TERM_CD
				)


/*******************************************************************************************
SOC
*******************************************************************************************/

AND			(
						NC.BKG_SOC_FLG	IS NULL
				OR	NC.BKG_SOC_FLG	= BQ.SOC_FLG
				)


/*******************************************************************************************
< T/S PORT >
T/S 가 발생하는 PORT 를 대상으로 한다.
*******************************************************************************************/
AND			(
						NC.BKG_TS_PORT_DEF_CD IS NULL
				OR	EXISTS	(
										SELECT	'X'
										FROM		BKG_VVD				V1	,
														BKG_VVD 			V2	,
														MDM_LOCATION	LO
										WHERE		V2.BKG_NO			=	V1.BKG_NO
										AND			V2.POL_CD			= V1.POD_CD
										AND			LO.LOC_CD			= V1.POD_CD
										AND			V1.BKG_NO			=	BQ.BKG_NO
										AND			DECODE(NC.BKG_TS_PORT_TP_CD, 'L', LO.LOC_CD, 'S', LO.CNT_CD||LO.STE_CD, 'R', LO.RGN_CD, 'C', LO.CNT_CD) = NC.BKG_TS_PORT_DEF_CD
										AND			@[ca_flg]			= 'N'

										UNION ALL

										SELECT	'X'
										FROM		BKG_VVD_HIS		V1	,
														BKG_VVD_HIS 	V2	,
														MDM_LOCATION	LO
										WHERE		V2.BKG_NO			=	V1.BKG_NO
										AND			V2.CORR_NO		= V1.CORR_NO
										AND			V2.POL_CD			= V1.POD_CD
										AND			LO.LOC_CD			= V1.POD_CD
										AND			V1.BKG_NO			=	BQ.BKG_NO
										AND			V1.CORR_NO		= BQ.CORR_NO
										AND			DECODE(NC.BKG_TS_PORT_TP_CD, 'L', LO.LOC_CD, 'S', LO.CNT_CD||LO.STE_CD, 'R', LO.RGN_CD, 'C', LO.CNT_CD) = NC.BKG_TS_PORT_DEF_CD
										AND			@[ca_flg]			= 'Y'
										)
				)
/* DIR CALL */
AND			(
						NC.BKG_DIR_CALL_FLG	IS NULL
				OR	NC.BKG_DIR_CALL_FLG	= BQ.DIR_CALL_FLG
				)

)	,
NC_P AS
(

/*******************************************************************************************
적용될 CONVERSION 이 같은 NOTE_CONV_TP_CD 에서 하나의 NOTE_CONV_RULE_CD 가 되도록 우선순위가 낮은 것을 제거한다.
우선순위가 똑같은 경우에는 NOTE_CONV_MAPG_ID||LPAD(NOTE_CONV_SEQ, 6, '0') 가 적은 것을 우선한다.

이 부분은 계약과 BKG 를 직접 비교하지 않고, NOTE CONV 와만 비교하도록 하기 위함이다.
*******************************************************************************************/

SELECT	NC.BQ_SEQ										,
				NC.NOTE_CONV_MAPG_ID				,
				NC.NOTE_CONV_SEQ						,
				10 + ROW_NUMBER() OVER ( PARTITION BY NC.BQ_SEQ ORDER BY NC.NOTE_CONV_RULE_CD, NC.CONV_TP_PRIO DESC )	NC_SEQ	,	/* BKG 과 겹치지 않도록 임의의 상수 10 을 더한다. */
				'C'	BKG_CONV_TP_CD					,
				NC.CONV_TP_PRIO							,
				NC.NOTE_CONV_TP_CD					,
				NC.NOTE_CONV_CHG_CD					,
				NC.NOTE_CONV_RULE_CD				,
				NC.CONV_RAT_UT_CD						,
				( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = NC.CONV_RAT_UT_CD ) CONV_RAT_UT_SZ_CD		,
				NC.CONV_DR_TP								,
				NC.CONV_DG_TP								,
				NC.CONV_RF_TP								,
				NC.CONV_AK_TP								,
				NC.CONV_BB_TP								,
				NC.RT_APPL_TP_CD						,
				NC.RT_OP_CD									,
				NC.CURR_CD									,
				NC.FRT_RT_AMT								,
				NC.TYP_CONV_CTNT						,
				NC.RAC_CONV_CTNT
FROM		(
				SELECT	NC.*	,
								ROW_NUMBER() OVER ( PARTITION BY NC.BQ_SEQ, NC.NOTE_CONV_RULE_CD, NC.NOTE_CONV_TP_CD, NC.TRI_PROP_NO, NC.AMDT_SEQ
																		ORDER BY NC.MTCH_PRIO DESC, NC.NOTE_CONV_MAPG_ID, NC.NOTE_CONV_SEQ ) ROW_NUMBER
				FROM		NC
				) NC
WHERE		NC.ROW_NUMBER = 1
UNION ALL
SELECT	BQ.BQ_SEQ																				,
				NULL									NOTE_CONV_MAPG_ID					,
				NULL									NOTE_CONV_SEQ							,
				ROW_NUMBER() OVER ( PARTITION BY BQ.BQ_SEQ ORDER BY 1 )	NC_SEQ	,
				'B'										BKG_CONV_TP_CD						,
				0											CONV_TP_PRIO							, /* BKG 의 CONV_TP_PRIO 는 0 으로 어떤 CONV 보다 높은 우선 순위를 가지게 한다. */
				NULL									NOTE_CONV_TP_CD						,
				NULL									NOTE_CONV_CHG_CD					,
				RC.NOTE_CONV_RULE_CD	NOTE_CONV_RULE_CD					,
				BQ.CTRT_CNTR_TPSZ_CD	CONV_RAT_UT_CD						,
				( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = BQ.CTRT_CNTR_TPSZ_CD )	CONV_RAT_UT_SZ_CD		,
				BQ.DR_TP							CONV_DR_TP								,
				BQ.DG_TP							CONV_DG_TP								,
				BQ.RF_TP							CONV_RF_TP								,
				BQ.AK_TP							CONV_AK_TP								,
				BQ.BB_TP							CONV_BB_TP								,
				NULL									RT_APPL_TP_CD							,
				NULL									RT_OP_CD									,
				NULL									CURR_CD										,
				NULL									FRT_RT_AMT								,
				NULL									TYP_CONV_CTNT							,
				NULL									RAC_CONV_CTNT
FROM		BQ	,
				(
				SELECT	'TYP' NOTE_CONV_RULE_CD FROM DUAL UNION ALL
				SELECT	'RAC' NOTE_CONV_RULE_CD FROM DUAL
				) RC

)	,
APP_N AS
(

/*******************************************************************************************
APP RULE CODE 에 존재하지만, BOOKING 과 MATCHING 되지 않은 것을 SELECT 한다.
*******************************************************************************************/

SELECT	BQ.BKG_NO		,
				BQ.BQ_SEQ		,
				(	SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) CONV_TP_PRIO
FROM		BQ														,
				(
				SELECT	NC.*
				FROM		BK											,
								PRI_TAA_TRI_LIST		TL	,
								PRI_TRI_RT					RT	,
								PRI_TRI_NOTE_CONV		NC
				WHERE		TL.TAA_PROP_NO	= BK.TAA_PROP_NO
				AND			TL.AMDT_SEQ			= BK.AMDT_SEQ
				AND			RT.TRI_PROP_NO	= TL.TRI_PROP_NO
				AND			BK.RT_APLY_DT		BETWEEN RT.EFF_DT AND RT.EXP_DT + 0.99999		/* 0.99999 는 23시 59분 59초를 의미 */
				AND			RT.PROP_STS_CD	= 'F'
				AND			NC.TRI_PROP_NO	= RT.TRI_PROP_NO
				AND			NC.AMDT_SEQ			= RT.AMDT_SEQ
				AND			BK.RT_APLY_DT		BETWEEN NC.EFF_DT AND NC.EXP_DT + 0.99999		/* 0.99999 는 23시 59분 59초를 의미 */
				)	NC
WHERE		NC.CHG_RULE_TP_CD			= 'R'
AND			NC.NOTE_CONV_RULE_CD	= 'APP'								/* APP 만 SELECT */

/* APPLICATION TYPE */
AND			NC.RT_APPL_TP_CD = 'S'	-- Subject
AND			NOT EXISTS	(												/* CHECK CHECK CHECK CHECK CHECK */
										SELECT	'X'
										FROM		NC A
										WHERE		A.BQ_SEQ	= BQ.BQ_SEQ
										AND			A.NOTE_CONV_MAPG_ID	= NC.NOTE_CONV_MAPG_ID
										AND			A.NOTE_CONV_SEQ			= NC.NOTE_CONV_SEQ
										)
) ,
RT AS
(

/*******************************************************************************************
	RATE
*******************************************************************************************/

SELECT	RT.*	,
				RT_APP.BKG_CONV_TP_CD      		APP_BKG_CONV_TP_CD     	,
				RT_APP.NOTE_CONV_MAPG_ID   		APP_NOTE_CONV_MAPG_ID  	,
				RT_APP.NOTE_CONV_SEQ       		APP_NOTE_CONV_SEQ      	,
				RT_APP.NOTE_CONV_RULE_CD   		APP_NOTE_CONV_RULE_CD  	,
				RT_APP.NOTE_CONV_TP_CD     		APP_NOTE_CONV_TP_CD    	,
				RT_APP.RT_OP_CD            		APP_RT_OP_CD           	,
				RT_APP.CURR_CD             		APP_CURR_CD            	,
				RT_APP.FRT_RT_AMT          		APP_FRT_RT_AMT					,
				RT_TYP.BKG_CONV_TP_CD      		TYP_BKG_CONV_TP_CD     	,
				RT_TYP.NOTE_CONV_MAPG_ID   		TYP_NOTE_CONV_MAPG_ID  	,
				RT_TYP.NOTE_CONV_SEQ       		TYP_NOTE_CONV_SEQ      	,
				RT_TYP.NOTE_CONV_RULE_CD   		TYP_NOTE_CONV_RULE_CD  	,
				RT_TYP.NOTE_CONV_TP_CD     		TYP_NOTE_CONV_TP_CD    	,
				RT_TYP.RT_OP_CD            		TYP_RT_OP_CD           	,
				RT_TYP.CURR_CD             		TYP_CURR_CD            	,
				RT_TYP.FRT_RT_AMT          		TYP_FRT_RT_AMT					,
				RT_TYP.TYP_CONV_CTNT					TYP_TYP_CONV_CTNT				,
				RT_RAC.BKG_CONV_TP_CD      		RAC_BKG_CONV_TP_CD     	,
				RT_RAC.NOTE_CONV_MAPG_ID   		RAC_NOTE_CONV_MAPG_ID  	,
				RT_RAC.NOTE_CONV_SEQ       		RAC_NOTE_CONV_SEQ      	,
				RT_RAC.NOTE_CONV_RULE_CD   		RAC_NOTE_CONV_RULE_CD  	,
				RT_RAC.NOTE_CONV_TP_CD     		RAC_NOTE_CONV_TP_CD    	,
				RT_RAC.RT_OP_CD            		RAC_RT_OP_CD           	,
				RT_RAC.CURR_CD             		RAC_CURR_CD            	,
				RT_RAC.FRT_RT_AMT          		RAC_FRT_RT_AMT					,
				RT_RAC.RAC_CONV_CTNT					RAC_RAC_CONV_CTNT

FROM		(
				SELECT	BQ.BKG_NO	,
								BQ.BQ_SEQ ,
								TM.CMDT_CD							TM_CMDT_CD							,

								OV.ROUT_VIA_PORT_CD			OV_ROUT_VIA_PORT_CD			,
								DV.ROUT_VIA_PORT_CD			DV_ROUT_VIA_PORT_CD			,

								OP.ROUT_PNT_LOC_CD			OP_ROUT_PNT_LOC_CD			,
								OP.RCV_DE_TERM_CD				OP_RCV_DE_TERM_CD				,
								OP.PRC_TRSP_MOD_CD			OP_PRC_TRSP_MOD_CD			,

								DP.ROUT_PNT_LOC_CD			DP_ROUT_PNT_LOC_CD			,
								DP.RCV_DE_TERM_CD				DP_RCV_DE_TERM_CD				,
								DP.PRC_TRSP_MOD_CD			DP_PRC_TRSP_MOD_CD			,

								RT.TRI_PROP_NO																	,
								RT.AMDT_SEQ																			,
								RT.RAT_UT_CD																		,
								RT.PRC_CGO_TP_CD																,
								RT.CURR_CD																			,
								RT.FNL_FRT_RT_AMT																,
								CASE
								WHEN	OP.ROUT_PNT_LOC_CD	= BQ.POR_CD	THEN 'Y'
								ELSE	'N'
								END	POR_MTCH_FLG	,
								CASE
								WHEN	DP.ROUT_PNT_LOC_CD	= BQ.DEL_CD	THEN 'Y'
								ELSE	'N'
								END	DEL_MTCH_FLG	,

								(
								SELECT	NVL(MAX(A.NC_SEQ), 0)
								FROM		NC_P	A
								WHERE		A.BQ_SEQ						= BQ.BQ_SEQ
								AND			A.NOTE_CONV_RULE_CD	= 'APP'
								AND			A.BKG_CONV_TP_CD		= 'C'
								) APP_NC_SEQ	,
								(
								SELECT	NVL(MAX(A.NC_SEQ), 0)
								FROM		NC_P	A
								WHERE		A.BQ_SEQ						= BQ.BQ_SEQ
								AND			A.NOTE_CONV_RULE_CD	= 'TYP'
								AND			A.BKG_CONV_TP_CD		= 'C'
								) TYP_NC_SEQ	,
								(
								SELECT	NVL(MAX(A.NC_SEQ), 0)
								FROM		NC_P	A
								WHERE		A.BQ_SEQ						= BQ.BQ_SEQ
								AND			A.NOTE_CONV_RULE_CD	= 'RAC'
								AND			A.BKG_CONV_TP_CD		= 'C'
								) RAC_NC_SEQ	,

								RANK() OVER (	PARTITION BY BQ.BQ_SEQ
																		ORDER BY DECODE(RT.RAT_UT_CD, BQ.CTRT_CNTR_TPSZ_CD, 100, 80, 'BL', 80, 60)
																						 	- DECODE(RT.RAT_UT_CD, '20', 10, '40', 10, 'HC', 10, '45', 10, '53', 10 )
																						 	+ DECODE(RT.PRC_CGO_TP_CD, BQ.DR_TP, 2, BQ.DG_TP, 2, BQ.RF_TP, 2, BQ.AK_TP, 2, BQ.BB_TP, 2, 0)
																						 	- DECODE(BQ.CTRT_CNTR_TPSZ_CD||BQ.AK_TP||RT.PRC_CGO_TP_CD, 'D7AKDR', 1, 0)	DESC
																							/* D7/AK 가 D7/DR 과 D7/AK 중에 D7/AK 가 먼저 선택 될 수 있도록 D7/AK 면서 DR 운임적인된 경우 -1 을 해준다. */
																	) RAT_UT_PRIO

				FROM    BQ  															,
								PRI_TAA_TRI_LIST					TL			,
								PRI_TRI_MN								TM			,
								PRI_TRI_RT_ROUT_PNT				OP			,
								PRI_TRI_RT_ROUT_PNT				DP			,
								PRI_TRI_RT_ROUT_VIA				OV			,
								PRI_TRI_RT_ROUT_VIA				DV			,
								PRI_TRI_RT								RT
				WHERE		TL.TAA_PROP_NO		= BQ.TAA_PROP_NO AND TL.AMDT_SEQ				= BQ.AMDT_SEQ
				AND			TM.TRI_PROP_NO		= TL.TRI_PROP_NO
				AND			OP.TRI_PROP_NO		= TM.TRI_PROP_NO AND OP.ORG_DEST_TP_CD		= 'O'
				AND			DP.TRI_PROP_NO		= TM.TRI_PROP_NO AND DP.ORG_DEST_TP_CD		= 'D'
				AND			OV.TRI_PROP_NO(+)	= TM.TRI_PROP_NO AND OV.ORG_DEST_TP_CD(+)	= 'O'
				AND			DV.TRI_PROP_NO(+)	= TM.TRI_PROP_NO AND DV.ORG_DEST_TP_CD(+)	= 'D'
				AND			RT.TRI_PROP_NO		= TM.TRI_PROP_NO AND RT.PROP_STS_CD				= 'F' AND BQ.RT_APLY_DT BETWEEN RT.EFF_DT AND RT.EXP_DT + 0.99999		/* 0.99999 는 23시 59분 59초를 의미 */


				/*******************************************************************************************
					1.	RATE - COMMODITY
				*******************************************************************************************/

				/*******************************************************************************************
				< COMMODITY >
				FAK ( REP_CMDT_CD : 0000 ) 인 계약은 모든 BOOKING 에 적용가능한다.
				*******************************************************************************************/

				AND     TM.CMDT_CD	IN
								(
								SELECT	BQ.CMDT_CD
								FROM		DUAL
								UNION ALL
								SELECT	CMDT_CD
								FROM		MDM_COMMODITY
								WHERE		REP_CMDT_CD	= '0000'
								)


				/*******************************************************************************************
					2.	RATE - ROUTE
				*******************************************************************************************/

				/*******************************************************************************************
				< ORIGIN >
				POR, (POL)
				*******************************************************************************************/

				AND     OP.ROUT_PNT_LOC_CD	IN ( BQ.POR_CD, ( SELECT BQ.POL_CD FROM DUAL WHERE ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' ) )


				/*******************************************************************************************
				< ORIGIN VIA >
				POL, PRE
				*******************************************************************************************/

				AND     NVL(OV.ROUT_VIA_PORT_CD, '*')		IN ( '*', BQ.POL_CD, BQ.PRE_RLY_PORT_CD )


				/*******************************************************************************************
				< DESTINATION VIA >
				POD, POST
				*******************************************************************************************/

				AND     NVL(DV.ROUT_VIA_PORT_CD, '*')		IN ( '*', BQ.POD_CD, BQ.PST_RLY_PORT_CD )


				/*******************************************************************************************
				< DESTINATION >
				DEL, (POD)
				*******************************************************************************************/

				AND     DP.ROUT_PNT_LOC_CD	IN ( BQ.DEL_CD, ( SELECT BQ.POD_CD FROM DUAL WHERE ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' ) )


				/*******************************************************************************************
				< RCV TERM >
				예외적으로
				(1) POR = POL 일 경우, BKG : 'D', TAA : 'Y' 가 허용된다.
				(2) POR_MTCH_FLG = 'N' 일 경우, TAA : 'Y' 가 허용된다.
				*******************************************************************************************/

				AND     (
										(
												OP.ROUT_PNT_LOC_CD		= BQ.POR_CD
										AND	OP.RCV_DE_TERM_CD			= BQ.RCV_TERM_CD
										)
								OR	(
												( ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' )
										AND	BQ.POR_CD							= BQ.POL_CD
										AND	(
														OP.RCV_DE_TERM_CD					= BQ.RCV_TERM_CD
												OR	(
																BQ.RCV_TERM_CD 				= 'D'
														AND	OP.RCV_DE_TERM_CD			= 'Y'
														)
												)
										)
								OR	(
												OP.ROUT_PNT_LOC_CD		<> BQ.POR_CD
										AND	OP.RCV_DE_TERM_CD			= 'Y'
										)
								)


				/*******************************************************************************************
				< DE TERM >
				예외적으로
				(1) DEL = POD 일 경우, BKG : 'D', TAA : 'Y' 가 허용된다.
				(2) DEL_MTCH_FLG = 'N' 일 경우, TAA : 'Y' 가 허용된다.
				*******************************************************************************************/

				AND     (
										(
												DP.ROUT_PNT_LOC_CD		= BQ.DEL_CD
										AND	DP.RCV_DE_TERM_CD			= BQ.DE_TERM_CD
										)
								OR	(
												( ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' )
										AND	BQ.DEL_CD							= BQ.POD_CD
										AND	(
														DP.RCV_DE_TERM_CD					= BQ.DE_TERM_CD
												OR	(
																BQ.DE_TERM_CD 				= 'D'
														AND	DP.RCV_DE_TERM_CD			= 'Y'
														)
												)
										)
								OR	(
												DP.ROUT_PNT_LOC_CD		<> BQ.DEL_CD
										AND	DP.RCV_DE_TERM_CD			= 'Y'
										)
								)


				/*******************************************************************************************
				< ORIGIN TRANS MODE >
				*******************************************************************************************/

				AND			(
									  OP.ROUT_PNT_LOC_CD		<> BQ.POR_CD
								OR	(
												OP.PRC_TRSP_MOD_CD		IS NULL
										OR	BQ.ORG_TRNS_MOD_CD		IS NULL
										OR	OP.PRC_TRSP_MOD_CD		= BQ.ORG_TRNS_MOD_CD
										OR  (
														OP.PRC_TRSP_MOD_CD		IN ( 'R', 'A' )
												AND	BQ.ORG_TRNS_MOD_CD		= 'R'
												)
										)
								)


				/*******************************************************************************************
				< DEST TRANS MODE >
				*******************************************************************************************/

				AND			(
									  DP.ROUT_PNT_LOC_CD		<> BQ.DEL_CD
								OR	(
												DP.PRC_TRSP_MOD_CD		IS NULL
										OR	BQ.DEST_TRNS_MOD_CD		IS NULL
										OR	DP.PRC_TRSP_MOD_CD		= BQ.DEST_TRNS_MOD_CD
										OR  (
														DP.PRC_TRSP_MOD_CD		IN ( 'R', 'A' )
												AND	BQ.DEST_TRNS_MOD_CD		= 'R'
												)
										)
								)


				/*******************************************************************************************
					3.	RATE - RATING UNIT
				*******************************************************************************************/

				/*******************************************************************************************
				< RATING UNIT >
				*******************************************************************************************/

				AND			(
										RT.RAT_UT_CD	IN
										(
										SELECT	'BL'
										FROM		DUAL
										UNION ALL
										SELECT  A.CONV_RAT_UT_CD
										FROM		NC_P A
										WHERE		A.BQ_SEQ 						= BQ.BQ_SEQ
										AND			A.NOTE_CONV_RULE_CD	= 'TYP'
										)
										OR
										(
												RT.RAT_UT_CD  IN ( '20', '40', 'HC', '45', '53' )
				            AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = RT.RAT_UT_CD ) IN
				            		(
												SELECT  A.CONV_RAT_UT_SZ_CD
												FROM		NC_P A
												WHERE		A.BQ_SEQ 						= BQ.BQ_SEQ
												AND			A.NOTE_CONV_RULE_CD	= 'TYP'
				            		)
				            )
				        )


				/*******************************************************************************************
				< CARGO TYPE >
				*******************************************************************************************/

				AND     RT.PRC_CGO_TP_CD  IN ( BQ.DR_TP, BQ.DG_TP, BQ.RF_TP, BQ.AK_TP, BQ.BB_TP )
				) RT	,
				NC_P											RT_APP	,
				NC_P											RT_TYP	,
				NC_P											RT_RAC
WHERE		RT.RAT_UT_PRIO		= 1
AND			RT_APP.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_APP.NOTE_CONV_RULE_CD(+) = 'APP' AND RT_APP.NC_SEQ(+) = RT.APP_NC_SEQ
AND			RT_TYP.BQ_SEQ			= RT.BQ_SEQ AND RT_TYP.NOTE_CONV_RULE_CD		= 'TYP' AND ( RT_TYP.BKG_CONV_TP_CD = 'B' OR RT_TYP.NC_SEQ = RT.TYP_NC_SEQ )
AND			RT_RAC.BQ_SEQ			= RT.BQ_SEQ AND RT_RAC.NOTE_CONV_RULE_CD		= 'RAC' AND ( RT_RAC.BKG_CONV_TP_CD = 'B' OR RT_RAC.NC_SEQ = RT.RAC_NC_SEQ )


/*******************************************************************************************
	APP RULE CHECK

	RT_APP.RT_APPL_TP_CD 가 NULL (APP 존재하지 않음) 이거나 'S' 인 경우에만 운임을 사용할 수 있다.
	그리고 추가적으로 APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재하지 않아야 한다.
	APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재한다면,
	그것은 BKG 와 다른 조건으로 운임을 사용하도록 APP RULE 이 되어 있다는 것을 의미한다.
*******************************************************************************************/

AND			NVL(RT_APP.RT_APPL_TP_CD, 'S')	= 'S'
AND			NOT EXISTS	(
										SELECT	'X'
										FROM		APP_N	A
										WHERE		A.BQ_SEQ														= RT.BQ_SEQ
										AND			A.CONV_TP_PRIO											< NVL(RT_APP.CONV_TP_PRIO, 9)
										)


/*******************************************************************************************
RATING UNIT
*******************************************************************************************/

AND     (
								RT.RAT_UT_CD	= RT_TYP.CONV_RAT_UT_CD
		        OR	RT.RAT_UT_CD	= 'BL'	-- PATTERN #1 에서면 적용한다.
		        OR
    		    (
        				RT.RAT_UT_CD	IN ( '20', '40', 'HC', '45', '53' )
       			AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = RT.RAT_UT_CD )	= RT_TYP.CONV_RAT_UT_SZ_CD
        		)
				)


/*******************************************************************************************
CARGO TYPE
*******************************************************************************************/

AND			RT.PRC_CGO_TP_CD	IN ( RT_RAC.CONV_DR_TP, RT_RAC.CONV_DG_TP, RT_RAC.CONV_RF_TP, RT_RAC.CONV_AK_TP, RT_RAC.CONV_BB_TP )


)	,
RATE AS
(

/*******************************************************************************************
	1. PATTERN #1 ( 0000 )
*******************************************************************************************/

SELECT	'0000'												PRC_RT_MTCH_PATT_CD				,
				BQ.TAA_NO											CTRT_NO										,
				BQ.TAA_PROP_NO								TAA_PROP_NO								,
				BQ.AMDT_SEQ										AMDT_SEQ									,
				BQ.SVC_SCP_CD									SVC_SCP_CD								,
				BQ.BKG_NO											BKG_NO										,
				BQ.BQ_SEQ											BQ_SEQ										,
				BQ.BKG_BQ_SEQ									BKG_BQ_SEQ								,
				BQ.CNTR_TPSZ_CD								BQ_CNTR_TPSZ_CD						,
				BQ.CTRT_CNTR_TPSZ_CD					BQ_CTRT_CNTR_TPSZ_CD			,
				BQ.RCV_TERM_CD								BQ_RCV_TERM_CD						,
				BQ.DE_TERM_CD									BQ_DE_TERM_CD							,
				BQ.DRY_CGO_FLG								BQ_DRY_CGO_FLG						,
				BQ.DCGO_FLG										BQ_DCGO_FLG								,
				BQ.RC_FLG											BQ_RC_FLG									,
				BQ.AWK_CGO_FLG								BQ_AWK_CGO_FLG						,
				BQ.BB_CGO_FLG									BQ_BB_CGO_FLG							,
				BQ.SOC_FLG										BQ_SOC_FLG								,
				BQ.PRC_CGO_TP_CD							BQ_PRC_CGO_TP_CD					,
				BQ.IMDG_CLSS_CD								BQ_IMDG_CLSS_CD						,
				BQ.CTRT_CNTR_QTY							BQ_CTRT_CNTR_QTY					,
				BQ.POR_APPL_FLG								BQ_POR_APPL_FLG						,
				BQ.POL_APPL_FLG								BQ_POL_APPL_FLG						,
				BQ.POD_APPL_FLG								BQ_POD_APPL_FLG						,
				BQ.DEL_APPL_FLG								BQ_DEL_APPL_FLG						,
				BQ.PRE_RLY_PORT_APPL_FLG			BQ_POR_RLY_PORT_APPL_FLG	,
				BQ.PST_RLY_PORT_APPL_FLG			BQ_PST_RLY_PORT_APPL_FLG	,

				RT.TRI_PROP_NO								RT_TRI_PROP_NO						,
				RT.AMDT_SEQ										RT_AMDT_SEQ								,

				RT.TM_CMDT_CD																						,
				RT.OP_ROUT_PNT_LOC_CD					POR_CD										,
				RT.OV_ROUT_VIA_PORT_CD				POL_CD										,
				RT.DV_ROUT_VIA_PORT_CD				POD_CD										,
				RT.DP_ROUT_PNT_LOC_CD					DEL_CD										,
				RT.OP_RCV_DE_TERM_CD					RCV_TERM_CD								,
				RT.DP_RCV_DE_TERM_CD					DE_TERM_CD								,
				RT.RAT_UT_CD									RAT_UT_CD									,
				RT.PRC_CGO_TP_CD							PRC_CGO_TP_CD							,
				RT.CURR_CD										CURR_CD										,
				RT.OP_PRC_TRSP_MOD_CD					ORG_TRSP_MOD_CD						,
				RT.DP_PRC_TRSP_MOD_CD					DEST_TRSP_MOD_CD					,

				RT.OP_ROUT_PNT_LOC_CD					OP_ROUT_PNT_LOC_CD				,
				RT.OV_ROUT_VIA_PORT_CD				OV_ROUT_VIA_PORT_CD				,
				RT.DV_ROUT_VIA_PORT_CD				DV_ROUT_VIA_PORT_CD				,
				RT.DP_ROUT_PNT_LOC_CD					DP_ROUT_PNT_LOC_CD				,
				RT.RAT_UT_CD									RT_RAT_UT_CD							,
				RT.PRC_CGO_TP_CD							RT_PRC_CGO_TP_CD					,
				RT.OP_PRC_TRSP_MOD_CD					OP_PRC_TRSP_MOD_CD				,
				RT.DP_PRC_TRSP_MOD_CD					DP_PRC_TRSP_MOD_CD				,
				RT.CURR_CD										RT_CURR_CD								,
				RT.FNL_FRT_RT_AMT							RT_FNL_FRT_RT_AMT					,

				RT.APP_BKG_CONV_TP_CD      		RT_APP_BKG_CONV_TP_CD     ,
				RT.APP_NOTE_CONV_MAPG_ID   		RT_APP_NOTE_CONV_MAPG_ID  ,
				RT.APP_NOTE_CONV_SEQ       		RT_APP_NOTE_CONV_SEQ      ,
				RT.APP_NOTE_CONV_RULE_CD   		RT_APP_NOTE_CONV_RULE_CD  ,
				RT.APP_NOTE_CONV_TP_CD     		RT_APP_NOTE_CONV_TP_CD    ,
				RT.APP_RT_OP_CD            		RT_APP_RT_OP_CD           ,
				RT.APP_CURR_CD             		RT_APP_CURR_CD            ,
				RT.APP_FRT_RT_AMT          		RT_APP_FRT_RT_AMT         ,

				RT.TYP_BKG_CONV_TP_CD      		RT_TYP_BKG_CONV_TP_CD     ,
				RT.TYP_NOTE_CONV_MAPG_ID   		RT_TYP_NOTE_CONV_MAPG_ID  ,
				RT.TYP_NOTE_CONV_SEQ       		RT_TYP_NOTE_CONV_SEQ      ,
				RT.TYP_NOTE_CONV_RULE_CD   		RT_TYP_NOTE_CONV_RULE_CD  ,
				RT.TYP_NOTE_CONV_TP_CD     		RT_TYP_NOTE_CONV_TP_CD    ,
				RT.TYP_RT_OP_CD            		RT_TYP_RT_OP_CD           ,
				RT.TYP_CURR_CD             		RT_TYP_CURR_CD            ,
				RT.TYP_FRT_RT_AMT          		RT_TYP_FRT_RT_AMT         ,
				RT.TYP_TYP_CONV_CTNT					RT_TYP_CONV_CTNT					,

				RT.RAC_BKG_CONV_TP_CD      		RT_RAC_BKG_CONV_TP_CD     ,
				RT.RAC_NOTE_CONV_MAPG_ID   		RT_RAC_NOTE_CONV_MAPG_ID  ,
				RT.RAC_NOTE_CONV_SEQ       		RT_RAC_NOTE_CONV_SEQ      ,
				RT.RAC_NOTE_CONV_RULE_CD   		RT_RAC_NOTE_CONV_RULE_CD  ,
				RT.RAC_NOTE_CONV_TP_CD     		RT_RAC_NOTE_CONV_TP_CD    ,
				RT.RAC_RT_OP_CD            		RT_RAC_RT_OP_CD           ,
				RT.RAC_CURR_CD             		RT_RAC_CURR_CD            ,
				RT.RAC_FRT_RT_AMT          		RT_RAC_FRT_RT_AMT         ,
				RT.RAC_RAC_CONV_CTNT					RT_RAC_CONV_CTNT					,

				RT.POR_MTCH_FLG								POR_MTCH_FLG							,
				RT.DEL_MTCH_FLG								DEL_MTCH_FLG

FROM
/*******************************************************************************************
JOIN TABLE
1.1 BQ, RT
1.2 RT RULE					: X
2.1 OA							: X
2.2 OA RULE					: X
3.1 DA							: X
3.2 DA RULE					: X
*******************************************************************************************/
				BQ	,
				RT

WHERE		RT.BQ_SEQ = BQ.BQ_SEQ

)

SELECT	@[bkg_no]										BKG_NO										,
				R.CTRT_NO										CTRT_NO										,
				R.PRC_RT_MTCH_PATT_CD				PRC_RT_MTCH_PATT_CD				,
				R.TAA_PROP_NO								PROP_NO										,
				R.AMDT_SEQ									AMDT_SEQ									,
				R.SVC_SCP_CD								SVC_SCP_CD								,
				R.BQ_SEQ										BQ_SEQ										,
				R.BKG_BQ_SEQ								BKG_BQ_SEQ								,
				ROWNUM											BKG_BQ_OCCR_SEQ						,
				ROW_NUMBER() OVER ( ORDER BY
																DECODE(R.POR_MTCH_FLG, 'Y', 1, 2)	,
																DECODE(R.DEL_MTCH_FLG, 'Y', 1, 2)	,
																R.BKG_BQ_SEQ									,
																R.UQ_SEQ
													)			DP_SEQ												,

/* BKG_AUTO_RT_OCN_FRT_TMP 에 임시 저장할 칼럼 START */
				R.BQ_CNTR_TPSZ_CD						CNTR_TPSZ_CD							,
				R.BQ_CTRT_CNTR_TPSZ_CD			CTRT_CNTR_TPSZ_CD					,
				R.BQ_RCV_TERM_CD						RCV_TERM_CD								,
				R.BQ_DE_TERM_CD							DE_TERM_CD								,
				R.BQ_DRY_CGO_FLG						DRY_CGO_FLG								,
				R.BQ_AWK_CGO_FLG						AWK_CGO_FLG								,
				R.BQ_DCGO_FLG								DCGO_FLG									,
				R.BQ_RC_FLG									RC_FLG										,
				R.BQ_BB_CGO_FLG							BB_CGO_FLG								,
				R.BQ_SOC_FLG								SOC_FLG										,
				R.BQ_IMDG_CLSS_CD						IMDG_CLSS_CD							,
				R.RT_TRI_PROP_NO						TRI_PROP_NO								,
/* BKG_AUTO_RT_OCN_FRT_TMP 에 임시 저장할 칼럼 END */

/* UI GRID START */
				R.PRC_RT_MTCH_PATT_CD				RT_MTCH_PATT_CD						,
				(	SELECT CMDT_NM FROM MDM_COMMODITY A WHERE A.CMDT_CD = R.TM_CMDT_CD	)	CMDT_NM	,
				R.POR_CD										POR_CD										,
				R.POL_CD										POL_CD										,
				R.POD_CD										POD_CD										,
				R.DEL_CD										DEL_CD										,
				R.RCV_TERM_CD||'/'||R.DE_TERM_CD						RCV_DE_TERM_CD	,
				CASE
				WHEN R.BQ_CNTR_TPSZ_CD LIKE 'R%' AND R.BQ_CTRT_CNTR_TPSZ_CD NOT LIKE 'R%'		THEN R.BQ_CNTR_TPSZ_CD
				WHEN RT_TYP_BKG_CONV_TP_CD = 'C'																						THEN R.BQ_CTRT_CNTR_TPSZ_CD
				ELSE R.RAT_UT_CD
				END	RAT_UT_CD																					,
				R.PRC_CGO_TP_CD							PRC_CGO_TP_CD							,
				R.CURR_CD										CURR_CD										,
				R.ORG_TRSP_MOD_CD						ORG_TRSP_MOD_CD						,
				R.DEST_TRSP_MOD_CD					DEST_TRSP_MOD_CD					,
				0														FNL_FRT_RT_AMT						,
				R.ORG_TRSP_MOD_CD||'/'||R.DEST_TRSP_MOD_CD	TRNS_MOD_CD			,
				R.BQ_CTRT_CNTR_QTY					OP_CNTR_QTY								,
				RN.NOTE_CTNT								NOTE_CTNT									,
				'NOTE'											NOTE											,
				'DTL'												DTL												,

/* UI GRID END */

/* CHARGE UI 에 필요 속성 START */
				R.BQ_PRC_CGO_TP_CD					CGO_CATE_CD								,
/* CHARGE UI 에 필요 속성 END */

				R.BQ_POR_APPL_FLG						BQ_POR_APPL_FLG						,
				R.BQ_POL_APPL_FLG						BQ_POL_APPL_FLG						,
				R.BQ_POD_APPL_FLG						BQ_POD_APPL_FLG						,
				R.BQ_DEL_APPL_FLG						BQ_DEL_APPL_FLG						,
				R.BQ_POR_RLY_PORT_APPL_FLG	BQ_POR_RLY_PORT_APPL_FLG	,
				R.BQ_PST_RLY_PORT_APPL_FLG	BQ_PST_RLY_PORT_APPL_FLG	,

				R.TM_CMDT_CD								TM_CMDT_CD								,
				R.RCV_TERM_CD								RCV_TERM_CD								,
				R.DE_TERM_CD								DE_TERM_CD								,

				R.OP_ROUT_PNT_LOC_CD				OP_ROUT_PNT_LOC_CD				,
				R.OV_ROUT_VIA_PORT_CD				OV_ROUT_VIA_PORT_CD				,
				R.DV_ROUT_VIA_PORT_CD				DV_ROUT_VIA_PORT_CD				,
				R.DP_ROUT_PNT_LOC_CD				DP_ROUT_PNT_LOC_CD				,

				R.OP_PRC_TRSP_MOD_CD				OP_PRC_TRSP_MOD_CD				,
				R.DP_PRC_TRSP_MOD_CD				DP_PRC_TRSP_MOD_CD				,

				R.RT_RAT_UT_CD							RT_RAT_UT_CD							,
				R.RT_PRC_CGO_TP_CD					RT_PRC_CGO_TP_CD					,
				R.RT_CURR_CD								RT_CURR_CD								,
				R.RT_FNL_FRT_RT_AMT					RT_FNL_FRT_RT_AMT					,
				0														RT_CALC_FRT_RT_AMT				,

				NVL(R.RT_APP_BKG_CONV_TP_CD, 'B')     RT_APP_BKG_CONV_TP_CD     ,
				R.RT_APP_NOTE_CONV_MAPG_ID  RT_APP_NOTE_CONV_MAPG_ID  ,
				R.RT_APP_NOTE_CONV_SEQ      RT_APP_NOTE_CONV_SEQ      ,
				R.RT_APP_NOTE_CONV_RULE_CD  RT_APP_NOTE_CONV_RULE_CD  ,
				R.RT_APP_NOTE_CONV_TP_CD    RT_APP_NOTE_CONV_TP_CD    ,
				R.RT_APP_RT_OP_CD           RT_APP_RT_OP_CD           ,
				R.RT_APP_CURR_CD            RT_APP_CURR_CD            ,
				R.RT_APP_FRT_RT_AMT         RT_APP_FRT_RT_AMT         ,

				NVL(R.RT_TYP_BKG_CONV_TP_CD, 'B')     RT_TYP_BKG_CONV_TP_CD     ,
				R.RT_TYP_NOTE_CONV_MAPG_ID  RT_TYP_NOTE_CONV_MAPG_ID  ,
				R.RT_TYP_NOTE_CONV_SEQ      RT_TYP_NOTE_CONV_SEQ      ,
				R.RT_TYP_NOTE_CONV_RULE_CD  RT_TYP_NOTE_CONV_RULE_CD  ,
				R.RT_TYP_NOTE_CONV_TP_CD    RT_TYP_NOTE_CONV_TP_CD    ,
				R.RT_TYP_RT_OP_CD           RT_TYP_RT_OP_CD           ,
				R.RT_TYP_CURR_CD            RT_TYP_CURR_CD            ,
				R.RT_TYP_FRT_RT_AMT					RT_TYP_FRT_RT_AMT					,

				NVL(R.RT_RAC_BKG_CONV_TP_CD, 'B')     RT_RAC_BKG_CONV_TP_CD     ,
				R.RT_RAC_NOTE_CONV_MAPG_ID  RT_RAC_NOTE_CONV_MAPG_ID  ,
				R.RT_RAC_NOTE_CONV_SEQ      RT_RAC_NOTE_CONV_SEQ      ,
				R.RT_RAC_NOTE_CONV_RULE_CD  RT_RAC_NOTE_CONV_RULE_CD  ,
				R.RT_RAC_NOTE_CONV_TP_CD    RT_RAC_NOTE_CONV_TP_CD    ,
				R.RT_RAC_RT_OP_CD           RT_RAC_RT_OP_CD           ,
				R.RT_RAC_CURR_CD            RT_RAC_CURR_CD            ,
				R.RT_RAC_FRT_RT_AMT					RT_RAC_FRT_RT_AMT					,

				R.POR_MTCH_FLG							POR_MTCH_FLG							,
				R.DEL_MTCH_FLG							DEL_MTCH_FLG							,

/*
POR_MTCH_FLG = 'Y' AND OIH_FLG = 'Y' 일 경우 'OAR' 을 'OIH' 로 표시
DEL_MTCH_FLG = 'Y' AND DIH_FLG = 'Y' 일 경우 'DAR' 을 'DIH' 로 표시
*/
				DECODE(R.POR_CD, R.POL_CD, 'N', 'Y')	OIH_FLG					,
				DECODE(R.DEL_CD, R.POD_CD, 'N', 'Y')	DIH_FLG					,

				R.RT_TYP_CONV_CTNT          RT_TYP_CONV_CTNT

FROM		(
				SELECT	R.*			,
								ROWNUM	UQ_SEQ	,
								ROW_NUMBER() OVER (	PARTITION BY
																			R.BKG_BQ_SEQ								,
																			R.RT_TRI_PROP_NO						,
																			R.RT_AMDT_SEQ								,
																			R.RT_TYP_NOTE_CONV_MAPG_ID  ,
																			R.RT_TYP_NOTE_CONV_SEQ      ,
																			R.RT_RAC_NOTE_CONV_MAPG_ID  ,
																			R.RT_RAC_NOTE_CONV_SEQ      ,
																			R.RT_APP_NOTE_CONV_MAPG_ID  ,
																			R.RT_APP_NOTE_CONV_SEQ
																		ORDER BY
																			DECODE(R.BQ_POR_APPL_FLG,'Y', 1, 0)
																			+ DECODE(R.BQ_POL_APPL_FLG,'Y', 1, 0)
																			+ DECODE(R.BQ_POD_APPL_FLG,'Y', 1, 0)
																			+ DECODE(R.BQ_DEL_APPL_FLG,'Y', 1, 0)
																			+ DECODE(R.BQ_POR_RLY_PORT_APPL_FLG,'Y', 1, 0)
																			+ DECODE(R.BQ_PST_RLY_PORT_APPL_FLG,'Y', 1, 0)
																	)	ROUT_LOC_CONV_PRIO
				FROM		(
								/* RT_SEQ 별 우선 순위 */
								SELECT	R.*	,
												RANK() OVER (	PARTITION BY
																				R.BKG_BQ_SEQ
																			ORDER BY
																				DECODE(R.POR_MTCH_FLG, 'Y', 1, 2) + DECODE(R.DEL_MTCH_FLG, 'Y', 1, 2)
																		)	ARB_MTCH_PRIO_1
								FROM		(
												/* 다른 DATA 가 있으면 'BL' 은 제외한다 */
												SELECT	R.*	,
																RANK() OVER (	ORDER BY DECODE(R.RT_RAT_UT_CD, 'BL', 2, 1 )
																						)	BL_PRIO
												FROM		RATE	R
												)	R
								WHERE		R.BL_PRIO	= 1
								) R
			WHERE		R.ARB_MTCH_PRIO_1 = 1
			)	R	,
			PRI_TRI_RT	RN
WHERE	RN.TRI_PROP_NO					= R.RT_TRI_PROP_NO
AND		RN.AMDT_SEQ							= R.RT_AMDT_SEQ
AND		R.ROUT_LOC_CONV_PRIO		= 1

ORDER BY
				R.BKG_BQ_SEQ						,
				DECODE(R.POR_MTCH_FLG, 'Y', 1, 2)	,
				DECODE(R.DEL_MTCH_FLG, 'Y', 1, 2)	,
				R.RT_TRI_PROP_NO				,
				R.RT_AMDT_SEQ						,
				R.UQ_SEQ
/*AUTORATING_20100106-001*/			]]></sql>
			<params>
				<param name="cmdt_cd" type="12" value="" out="N"/>
				<param name="rt_aply_dt" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="ca_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
