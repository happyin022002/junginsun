<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SCNoteConversionProposalDBDAOAdjNoteDurCasCNoteUSQL">
			<desc><![CDATA[Commodity Note가 변경(AM, AD)되었을때 Conversion Duration을 이에 맞춰주는 작업]]></desc>
			<sql><![CDATA[
MERGE INTO PRI_SC_NOTE_CONV A
USING (SELECT N.NOTE_CONV_MAPG_ID, M.EFF_DT, M.EXP_DT
         FROM PRI_SP_SCP_RT_CNOTE N, PRI_SP_SCP_MN M
        WHERE N.PROP_NO = M.PROP_NO
          AND N.AMDT_SEQ = M.AMDT_SEQ
          AND N.SVC_SCP_CD = M.SVC_SCP_CD
          AND N.PROP_NO = @[prop_no]
          AND N.AMDT_SEQ = @[amdt_seq]
          AND N.SVC_SCP_CD = @[svc_scp_cd]
#if (${CASCADE_LEVEL} == "0") 

#elseif (${CASCADE_LEVEL} == "1") 
          AND N.GEN_SPCL_RT_TP_CD = @[gen_spcl_rt_tp_cd]
          AND N.CMDT_HDR_SEQ = @[cmdt_hdr_seq]
#else 
          AND N.GEN_SPCL_RT_TP_CD = @[gen_spcl_rt_tp_cd]
          AND N.CMDT_HDR_SEQ = @[cmdt_hdr_seq]
          AND N.CMDT_NOTE_SEQ = @[cmdt_note_seq]
#end
      ) B
ON (A.NOTE_CONV_MAPG_ID = B.NOTE_CONV_MAPG_ID)
WHEN MATCHED THEN
  UPDATE
     SET A.EFF_DT = GREATEST(A.EFF_DT, B.EFF_DT), A.EXP_DT = LEAST(A.EXP_DT, B.EXP_DT)
--   WHERE (A.EFF_DT BETWEEN B.EFF_DT AND B.EXP_DT OR A.EXP_DT BETWEEN B.EFF_DT AND B.EXP_DT OR
--         (A.EFF_DT <= B.EFF_DT AND A.EXP_DT > B.EXP_DT))
  DELETE
   WHERE (A.EFF_DT > B.EXP_DT OR A.EXP_DT < B.EFF_DT)
     AND (A.NOTE_CONV_RULE_CD IS NULL OR A.NOTE_CONV_RULE_CD <> 'APP')			]]></sql>
			<params>
				<param name="prop_no" type="12" value="" out="N"/>
				<param name="amdt_seq" type="2" value="" out="N"/>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
				<param name="gen_spcl_rt_tp_cd" type="12" value="" out="N"/>
				<param name="cmdt_hdr_seq" type="2" value="" out="N"/>
				<param name="cmdt_note_seq" type="2" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
