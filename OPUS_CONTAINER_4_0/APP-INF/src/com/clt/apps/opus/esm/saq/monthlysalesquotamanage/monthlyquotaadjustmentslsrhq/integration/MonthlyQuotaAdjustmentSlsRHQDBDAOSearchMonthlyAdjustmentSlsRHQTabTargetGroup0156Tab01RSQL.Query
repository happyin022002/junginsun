<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaAdjustmentSlsRHQDBDAOSearchMonthlyAdjustmentSlsRHQTabTargetGroup0156Tab01RSQL">
			<desc><![CDATA[MonthlyQuotaAdjustmentSlsRHQ 상단 TargetGroup/Trade TAB 의 데이타 모델에 해당되는 값을 불러온다.
2011.02.17  UNION 절 제거(예외처리 제거)]]></desc>
			<sql><![CDATA[
WITH TMP_INPUT_PARMAS AS
    (
     SELECT DISTINCT
            @[year] AS BSE_YR,
            @[bse_qtr_cd] AS BSE_QTR_CD,
            @[bef_yr_qtr] AS BEF_YR_QTR,
            TO_CHAR(ADD_MONTHS(TO_DATE(@[bef_yr_mon], 'YYYYMM'), -1), 'YYYYMM') AS BEF_YR_MON,
            TO_CHAR(ADD_MONTHS(TO_DATE(@[add1_yr_mon], 'YYYYMM'), 1), 'YYYYMM') AS ADD1_YR_MON,
            TO_CHAR(ADD_MONTHS(TO_DATE(@[add2_yr_mon], 'YYYYMM'), 2), 'YYYYMM') AS ADD2_YR_MON,
            @[pfmc_fr_yr_qtr] AS PFMC_FR_YR_QTR,
            @[pfmc_to_yr_qtr] AS PFMC_TO_YR_QTR,
            @[pfmc_fr_yr_mon] AS PFMC_FR_YR_MON,
            @[pfmc_to_yr_mon] AS PFMC_TO_YR_MON,
            @[trade] AS SEL_TRD_CD,
            @[bound] AS SEL_DIR_CD,
            A.DIR_CD AS DIR_CD,
            A.SAQ_TGT_GRP_CD,
            A.TRD_CD AS TRD_CD,
            @[slsFcastPubNo] AS SLS_FCAST_PUB_NO,
            @[qtaMstVerNo] AS QTA_MST_VER_NO,
            @[mqtaMdlVerNo] AS MQTA_MDL_VER_NO,
            @[glineVerNo] AS GLINE_VER_NO,
            @[mQtaVerNo] AS MQTA_VER_NO,
            @[slsRhqCd] AS SLS_RHQ_CD,
            @[slsRgnOfcCd] AS SLS_RGN_OFC_CD,
            DECODE(@[slsRgnOfcCd], '', '08', '09') AS FIRST_STEP,
            DECODE(@[slsRgnOfcCd], '', '09', '08') AS SECOND_STEP,
            DECODE(@[slsRgnOfcCd], '', 'FC', 'FN') AS FINAL_STATUS
     FROM   SAQ_TGT_GRP_TRD A	, SAQ_MON_LOD_TGT_OFC B
     WHERE  1=1
     AND    B.BSE_YR     = @[year]
     AND    B.BSE_QTR_CD = @[bse_qtr_cd]
     AND    A.TRD_CD = B.TRD_CD
     AND    A.DIR_CD = B.DIR_CD
     AND    B.SLS_RHQ_CD = (SELECT DISTINCT N2ND_PRNT_OFC_CD
                        FROM   SAQ_ORGANIZATION_V
                        WHERE  OFC_CD IN ( @[slsRhqCd]	, @[slsRgnOfcCd] )		)
                        									)
SELECT
    DECODE(UNI.TRD_CD, 'TOTAL', 1, DECODE(UNI.DIR_CD, 'TOTAL', 2, 3)) AS SLEVEL,
    UNI.TRD_CD AS TRD_CD,
    DECODE(UNI.TRD_CD, 'TOTAL', ' ', UNI.DIR_CD) AS DIR_CD,
    ITM.ROW_SEQ,
    REPLACE(ITM.TEXT,'(P)','') AS ITEM_TEXT,                                                        
	DECODE( ITM.CODE,                                                             
	        '05', REPLACE(ITM.TEXT,'(P)','')||'*', -- G.REV                                        
	        '07', REPLACE(ITM.TEXT,'(P)','')||'*', -- CM                                           
	        '08', REPLACE(ITM.TEXT,'(P)','')||'*', -- CM                                           
	        '11', REPLACE(ITM.TEXT,'(P)','')||'*', -- OP                                           
	        '12', REPLACE(ITM.TEXT,'(P)','')||'*', -- OP                                           
	        REPLACE(ITM.TEXT,'(P)','') ) AS ITEM,  
    MIN(CASE WHEN UNI.GUBUN = 'PFMC_QTA' AND UNI.MON_SEQ = '0' THEN
           DECODE( ITM.CODE,  '01', UNI.TOT_BSA,
                    '02', UNI.TOT_VOY,
                    '03', UNI.TOT_LOD,
                    '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                    '05', UNI.TOT_REV/1000,
                    '06', UNI.TOT_RPB,
                    '07', UNI.TOT_CM/1000,
                    '08', UNI.TOT_RA_CM/1000,
                    '09', UNI.TOT_CMB,
                    '10', UNI.TOT_RA_CMB,
                    '11', UNI.TOT_OP/1000,
                    '12', UNI.TOT_RA_OP/1000,
                    '13', UNI.TOT_OPB,
                    '14', UNI.TOT_RA_OPB )
           END) AS PFMC_QTA,
    MIN(CASE WHEN UNI.GUBUN = 'PFMC_SMR' AND UNI.MON_SEQ = '0' THEN
           DECODE( ITM.CODE,  '01', UNI.TOT_BSA,
                    '02', UNI.TOT_VOY,
                    '03', UNI.TOT_LOD,
                    '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                    '05', UNI.TOT_REV/1000,
                    '06', UNI.TOT_RPB,
                    '07', UNI.TOT_CM/1000,
                    '08', UNI.TOT_RA_CM/1000,
                    '09', UNI.TOT_CMB,
                    '10', UNI.TOT_RA_CMB,
                    '11', UNI.TOT_OP/1000,
                    '12', UNI.TOT_RA_OP/1000,
                    '13', UNI.TOT_OPB,
                    '14', UNI.TOT_RA_OPB )
           END) AS PFMC_SMR,
    MIN(CASE WHEN UNI.GUBUN = 'MONTHLY' AND UNI.MON_SEQ = '0' THEN
           DECODE( ITM.CODE,  '01', UNI.TOT_BSA,
                    '02', UNI.TOT_VOY,
                    '03', UNI.TOT_LOD,
                    '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                    '05', UNI.TOT_REV/1000,
                    '06', UNI.TOT_RPB,
                    '07', UNI.TOT_CM/1000,
                    '08', UNI.TOT_RA_CM/1000,
                    '09', UNI.TOT_CMB,
                    '10', UNI.TOT_RA_CMB,
                    '11', UNI.TOT_OP/1000,
                    '12', UNI.TOT_RA_OP/1000,
                    '13', UNI.TOT_OPB,
                    '14', UNI.TOT_RA_OPB )
        END) AS RECENT_MON,

    DECODE( ITM.CODE,  '01', SUM( DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_BSA,0)),
                '02', SUM( DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_VOY,0)),
                '03', SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)),
                '04', DECODE(SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_BSA,0)), 0, '', ROUND((SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0))/SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_BSA,0)))*100, 1)),
                '05', SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_REV,0))/1000,
                '06', DECODE(SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_REV,0))/SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0))),
                '07', SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_CM,0))/1000,
                '08', 0,
                '09', DECODE(SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_CM,0))/SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0))),
                '10', 0,
                '11', SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_OP,0))/1000,
                '12', SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_RA_OP,0))/1000,
                '13', DECODE(SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_OP,0))/SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0))),
                '14', DECODE(SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_RA_OP,0))/SUM(DECODE(UNI.GUBUN , 'FORECAST',UNI.TOT_LOD,0)))
    )
    AS FCAST_TOT,
    DECODE( ITM.CODE,  '01', SUM( DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_BSA,0)),
                '02', SUM( DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_VOY,0)),
                '03', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),
                '04', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_BSA,0)), 0, '', ROUND((SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_BSA,0)))*100, 1)),
                '05', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_REV,0))/1000,
                '06', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_REV,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0))),
                '07', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_CM,0))/1000,
                '08', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_RA_CM,0))/1000,
                '09', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_CM,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0))),
                '10', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_RA_CM,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0))),
                '11', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_OP,0))/1000,
                '12', SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_RA_OP,0))/1000,
                '13', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_OP,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0))),
                '14', DECODE(SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_RA_OP,0))/SUM(DECODE(UNI.GUBUN , 'MODEL',UNI.TOT_LOD,0)))
    )
    AS MDL_RSLT_TOT,
    DECODE( ITM.CODE,  '01', SUM( DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_BSA,0)),
                '02', SUM( DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_VOY,0)),
                '03', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),
                '04', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_BSA,0)), 0, '', ROUND((SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_BSA,0)))*100, 1)),
                '05', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_REV,0))/1000,
                '06', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_REV,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0))),
                '07', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_CM,0))/1000,
                '08', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_RA_CM,0))/1000,
                '09', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_CM,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0))),
                '10', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_RA_CM,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0))),
                '11', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_OP,0))/1000,
                '12', SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_RA_OP,0))/1000,
                '13', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_OP,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0))),
                '14', DECODE(SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_RA_OP,0))/SUM(DECODE(UNI.GUBUN , 'RHQ',UNI.TOT_LOD,0)))
    )
    AS RHQ_TOT,
    DECODE( ITM.CODE,  '01', SUM( DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_BSA,0)),
                '02', SUM( DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_VOY,0)),
                '03', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),
                '04', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_BSA,0)), 0, '', ROUND((SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_BSA,0)))*100, 1)),
                '05', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_REV,0))/1000,
                '06', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_REV,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0))),
                '07', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_CM,0))/1000,
                '08', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_RA_CM,0))/1000,
                '09', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_CM,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0))),
                '10', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_RA_CM,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0))),
                '11', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_OP,0))/1000,
                '12', SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_RA_OP,0))/1000,
                '13', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_OP,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0))),
                '14', DECODE(SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)),0,0,  SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_RA_OP,0))/SUM(DECODE(UNI.GUBUN , 'INITIAL',UNI.TOT_LOD,0)))
    )
    AS INITIAL_TOT
    
#foreach( $key in ${monthseq})
    ,MIN(CASE WHEN UNI.GUBUN = 'FORECAST' AND UNI.MON_SEQ = '$key' THEN
           DECODE( ITM.CODE,  '01', UNI.TOT_BSA,
                    '02', UNI.TOT_VOY,
                    '03', UNI.TOT_LOD,
                    '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                    '05', UNI.TOT_REV/1000,
                    '06', UNI.TOT_RPB,
                    '07', UNI.TOT_CM/1000,
                    '08', 0,
                    '09', UNI.TOT_CMB,
                    '10', 0,
                    '11', UNI.TOT_OP/1000,
                    '12', UNI.TOT_RA_OP/1000,
                    '13', UNI.TOT_OPB,
                    '14', UNI.TOT_RA_OPB )
           END) AS FCAST_$key,
    MIN(CASE WHEN UNI.GUBUN = 'MODEL' AND UNI.MON_SEQ = '$key' THEN
           DECODE( ITM.CODE,  '01', UNI.TOT_BSA,
                    '02', UNI.TOT_VOY,
                    '03', UNI.TOT_LOD,
                    '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                    '05', UNI.TOT_REV/1000,
                    '06', UNI.TOT_RPB,
                    '07', UNI.TOT_CM/1000,
                    '08', UNI.TOT_RA_CM/1000,
                    '09', UNI.TOT_CMB,
                    '10', UNI.TOT_RA_CMB,
                    '11', UNI.TOT_OP/1000,
                    '12', UNI.TOT_RA_OP/1000,
                    '13', UNI.TOT_OPB,
                    '14', UNI.TOT_RA_OPB )
           END) AS MDL_RST_$key,
    MIN(CASE WHEN UNI.GUBUN = 'RHQ' AND UNI.MON_SEQ = '$key' THEN
           DECODE( ITM.CODE,  '01', UNI.TOT_BSA,
                    '02', UNI.TOT_VOY,
                    '03', UNI.TOT_LOD,
                    '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                    '05', UNI.TOT_REV/1000,
                    '06', UNI.TOT_RPB,
                    '07', UNI.TOT_CM/1000,
                    '08', UNI.TOT_RA_CM/1000,
                    '09', UNI.TOT_CMB,
                    '10', UNI.TOT_RA_CMB,
                    '11', UNI.TOT_OP/1000,
                    '12', UNI.TOT_RA_OP/1000,
                    '13', UNI.TOT_OPB,
                    '14', UNI.TOT_RA_OPB )
           END) AS RHQ_$key,
    MIN(CASE WHEN UNI.GUBUN = 'INITIAL' AND UNI.MON_SEQ = '$key' THEN
           DECODE( ITM.CODE,  '01', UNI.TOT_BSA,
                    '02', UNI.TOT_VOY,
                    '03', UNI.TOT_LOD,
                    '04', DECODE(UNI.TOT_BSA, 0, '', ROUND((UNI.TOT_LOD/UNI.TOT_BSA)*100, 1)),
                    '05', UNI.TOT_REV/1000,
                    '06', UNI.TOT_RPB,
                    '07', UNI.TOT_CM/1000,
                    '08', UNI.TOT_RA_CM/1000,
                    '09', UNI.TOT_CMB,
                    '10', UNI.TOT_RA_CMB,
                    '11', UNI.TOT_OP/1000,
                    '12', UNI.TOT_RA_OP/1000,
                    '13', UNI.TOT_OPB,
                    '14', UNI.TOT_RA_OPB )
           END) AS INITIAL_$key
#end

FROM (
    SELECT  INTG_CD_VAL_CTNT AS CODE,
            INTG_CD_VAL_DP_DESC AS TEXT,
            INTG_CD_VAL_DP_SEQ AS ROW_SEQ
    FROM  COM_INTG_CD_DTL

#if (${slsRgnOfcCd} != '') 
	WHERE INTG_CD_ID = 'CD01391'
#else 
	WHERE INTG_CD_ID = 'CD01389'
#end

    ) ITM, (
    SELECT -- Performance Quota Monthly
        'PFMC_QTA' AS GUBUN,
        '0' AS MON_SEQ,
        '00' AS BSE_MON,
        DECODE(QTA.TRD_CD, '', 'TOTAL', QTA.TRD_CD) AS TRD_CD,
        DECODE(QTA.DIR_CD, '', 'TOTAL', QTA.DIR_CD) AS DIR_CD,
        SUM(QTA.TOT_BSA) AS TOT_BSA,
        SUM(QTA.TOT_VOY) AS TOT_VOY,
        SUM(QTA.TOT_LOD) AS TOT_LOD,
        SUM(QTA.TOT_REV) AS TOT_REV,
        SUM(QTA.TOT_REV)/SUM(QTA.TOT_LOD) AS TOT_RPB,
        SUM(QTA.TOT_CM) AS TOT_CM,
        SUM(QTA.TOT_RA_CM) AS TOT_RA_CM,
        SUM(QTA.TOT_CM)/SUM(QTA.TOT_LOD) AS TOT_CMB,
        SUM(QTA.TOT_RA_CM)/SUM(QTA.TOT_LOD) AS TOT_RA_CMB,
        SUM(QTA.TOT_OP) AS TOT_OP,
        SUM(QTA.TOT_RA_OP) AS TOT_RA_OP,
        SUM(QTA.TOT_OP)/SUM(QTA.TOT_LOD) AS TOT_OPB,
        SUM(QTA.TOT_RA_OP)/SUM(QTA.TOT_LOD) AS TOT_RA_OPB
    FROM (
        SELECT -- MONTHLY Quota Monthly
            MIN(DECODE(QTA.BSE_YR||QTA.BSE_MON, INP.BEF_YR_MON, '0',
                INP.ADD1_YR_MON, '2', INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,
            QTA.BSE_MON,
            QTA.TRD_CD,
            NVL(DIR.CONV_DIR_CD, QTA.DIR_CD) DIR_CD,
            MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,
            COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,
            SUM(QTA.LOD_QTY) AS TOT_LOD,
            SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY) AS TOT_REV,
            SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY) AS TOT_CM,
            SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY) AS TOT_RA_CM,
            SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    ) AS TOT_OP,
            SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY ) AS TOT_RA_OP
        FROM  (
                SELECT DISTINCT
                       RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO,
                       RLS.BSE_QTR_CD AS BSE_QTR_CD
                FROM   SAQ_MON_QTA_RLSE RLS,
                       TMP_INPUT_PARMAS INP
                WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD BETWEEN INP.PFMC_FR_YR_QTR
                                                  AND     INP.PFMC_TO_YR_QTR
                AND    RLS.QTA_RLSE_STS_CD = 'R'
              ) RLS,
              SAQ_MON_DIR_CONV    DIR,
              SAQ_MON_CFM_QTA     QTA,
              SAQ_MON_CFM_TGT_VVD VVD,
              TMP_INPUT_PARMAS    INP
        WHERE QTA.MQTA_RLSE_VER_NO = RLS.MQTA_RLSE_VER_NO
        AND   QTA.BSE_QTR_CD = RLS.BSE_QTR_CD
        AND   QTA.BSE_YR||QTA.BSE_MON BETWEEN INP.PFMC_FR_YR_MON AND INP.PFMC_TO_YR_MON
        AND   QTA.TRD_CD = INP.TRD_CD
        AND   QTA.DIR_CD = INP.DIR_CD
        AND   QTA.RHQ_CD LIKE INP.SLS_RHQ_CD||'%'
        AND   QTA.RGN_OFC_CD LIKE INP.SLS_RGN_OFC_CD||'%'
        AND   QTA.QTA_TGT_CD = 'T' -- Q : Sales Quota, T : Load Target
        AND   VVD.MQTA_RLSE_VER_NO = QTA.MQTA_RLSE_VER_NO
        AND   VVD.BSE_YR = QTA.BSE_YR
        AND   VVD.BSE_QTR_CD = QTA.BSE_QTR_CD
        AND   VVD.BSE_MON = QTA.BSE_MON
        AND   VVD.RLANE_CD = QTA.RLANE_CD
        AND   VVD.TRD_CD = QTA.TRD_CD
        AND   VVD.DIR_CD = QTA.DIR_CD
        AND   VVD.VSL_CD = QTA.VSL_CD
        AND   VVD.SKD_VOY_NO = QTA.SKD_VOY_NO
        AND   VVD.SKD_DIR_CD = QTA.SKD_DIR_CD
        AND   QTA.LOD_QTY > 0
        AND   QTA.BSE_YR = DIR.BSE_YR(+)
        AND   DIR.BSE_QTR_CD(+) = @[bse_qtr_cd]
        AND   QTA.TRD_CD = DIR.TRD_CD(+)
        AND   QTA.RLANE_CD = DIR.RLANE_CD(+)
        AND   QTA.DIR_CD = DIR.DIR_CD(+)
        GROUP BY QTA.BSE_YR, QTA.BSE_MON, QTA.TRD_CD, QTA.RLANE_CD, NVL(DIR.CONV_DIR_CD, QTA.DIR_CD),
                 VVD.VSL_CD,VVD.SKD_VOY_NO,VVD.SKD_DIR_CD
        ) QTA
    GROUP BY ROLLUP(QTA.TRD_CD, QTA.DIR_CD)
    UNION ALL
    SELECT -- Performance Est. PFMC
        'PFMC_SMR' AS GUBUN,
        '0' AS MON_SEQ,
        '00' AS BSE_MON,
        DECODE(BPS.TRD_CD, '', 'TOTAL', BPS.TRD_CD) AS TRD_CD,
        DECODE(BPS.DIR_CD, '', 'TOTAL', BPS.DIR_CD) AS DIR_CD,
        SUM(BPS.TOT_BSA) AS TOT_BSA,
        SUM(BPS.TOT_VOY) AS TOT_VOY,
        SUM(BPS.TOT_LOD) AS TOT_LOD,
        SUM(BPS.TOT_REV) AS TOT_REV,
        SUM(BPS.TOT_REV)/SUM(BPS.TOT_LOD) AS TOT_RPB,
        SUM(BPS.TOT_CM) AS TOT_CM,
        SUM(BPS.TOT_RA_CM) AS TOT_RA_CM,
        SUM(BPS.TOT_CM)/SUM(BPS.TOT_LOD) AS TOT_CMB,
        SUM(BPS.TOT_RA_CM)/SUM(BPS.TOT_LOD) AS TOT_RA_CMB,
        SUM(BPS.TOT_OP) AS TOT_OP,
        SUM(BPS.TOT_RA_OP) AS TOT_RA_OP,
        SUM(BPS.TOT_OP)/SUM(BPS.TOT_LOD) AS TOT_OPB,
        SUM(BPS.TOT_RA_OP)/SUM(BPS.TOT_LOD) AS TOT_RA_OPB
    FROM (
        SELECT -- Performance Est. PFMC
            MIN(DECODE(BPS.BSE_YR||BPS.BSE_MON, INP.BEF_YR_MON, '0',
                INP.ADD1_YR_MON, '2', INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,
            BPS.BSE_MON,
            BPS.TRD_CD,
            NVL(DIR.CONV_DIR_CD, BPS.DIR_CD) DIR_CD,
            MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,
            MIN(VVD.VOY_KNT) AS TOT_VOY,
            SUM(BPS.LOD_QTY) AS TOT_LOD,
            SUM(BPS.GRS_RPB_REV*BPS.LOD_QTY) AS TOT_REV,
            SUM((BPS.GRS_RPB_REV-BPS.CM_UC_AMT)*BPS.LOD_QTY) AS TOT_CM,
            SUM((BPS.GRS_RPB_REV-BPS.RA_CM_UC_AMT)*BPS.LOD_QTY) AS TOT_RA_CM,
            SUM((BPS.GRS_RPB_REV-BPS.OPFIT_UC_AMT)*BPS.LOD_QTY    ) AS TOT_OP,
            SUM((BPS.GRS_RPB_REV-BPS.RA_OPFIT_UC_AMT)*BPS.LOD_QTY ) AS TOT_RA_OP
        FROM  SAQ_PERF_OFC_SMRY BPS,
              SAQ_PERF_TGT_LANE VVD,
              SAQ_MON_DIR_CONV  DIR,
              ( SELECT DISTINCT ADJ.TRD_CD, ADJ.DIR_CD, ADJ.RLANE_CD
                FROM   SAQ_MON_TGT_VVD_ADJ ADJ, TMP_INPUT_PARMAS INP
                WHERE  1=1
                AND    ADJ.GLINE_VER_NO = INP.GLINE_VER_NO   ) ADJ,
              TMP_INPUT_PARMAS INP
        WHERE BPS.BSE_YR||BPS.BSE_MON BETWEEN INP.PFMC_FR_YR_MON AND INP.PFMC_TO_YR_MON
        AND   BPS.TRD_CD = INP.TRD_CD
        AND   BPS.DIR_CD = INP.DIR_CD
        AND   BPS.SLS_RHQ_CD LIKE INP.SLS_RHQ_CD||'%'
        AND   BPS.SLS_RGN_OFC_CD LIKE INP.SLS_RGN_OFC_CD||'%'
        AND   VVD.BSE_YR = BPS.BSE_YR
        AND   VVD.BSE_MON = BPS.BSE_MON
        AND   VVD.RLANE_CD = BPS.RLANE_CD
        AND   VVD.TRD_CD = BPS.TRD_CD
        AND   VVD.DIR_CD = BPS.DIR_CD
        AND   BPS.LOD_QTY > 0
        AND   BPS.TRD_CD = ADJ.TRD_CD
        AND   BPS.DIR_CD = ADJ.DIR_CD
        AND   BPS.RLANE_CD = ADJ.RLANE_CD
        AND   BPS.BSE_YR = DIR.BSE_YR(+)
        AND   DIR.BSE_QTR_CD(+) = @[bse_qtr_cd]
        AND   BPS.TRD_CD = DIR.TRD_CD(+)
        AND   BPS.RLANE_CD = DIR.RLANE_CD(+)
        AND   BPS.DIR_CD = DIR.DIR_CD(+)
        GROUP BY BPS.BSE_YR, BPS.BSE_MON, BPS.TRD_CD, BPS.RLANE_CD, NVL(DIR.CONV_DIR_CD, BPS.DIR_CD)
        ) BPS
    GROUP BY ROLLUP(BPS.TRD_CD, BPS.DIR_CD)
    UNION ALL
    SELECT -- MONTHLY Quota (Recent)
        'MONTHLY' AS GUBUN,
        MIN(MON_SEQ) AS MON_SEQ,
        QTA.BSE_MON,
        DECODE(QTA.TRD_CD, '', 'TOTAL', QTA.TRD_CD) AS TRD_CD,
        DECODE(QTA.DIR_CD, '', 'TOTAL', QTA.DIR_CD) AS DIR_CD,
        SUM(QTA.TOT_BSA) AS TOT_BSA,
        SUM(QTA.TOT_VOY) AS TOT_VOY,
        SUM(QTA.TOT_LOD) AS TOT_LOD,
        SUM(QTA.TOT_REV) AS TOT_REV,
        SUM(QTA.TOT_REV)/SUM(QTA.TOT_LOD) AS TOT_RPB,
        SUM(QTA.TOT_CM) AS TOT_CM,
        SUM(QTA.TOT_RA_CM) AS TOT_RA_CM,
        SUM(QTA.TOT_CM)/SUM(QTA.TOT_LOD) AS TOT_CMB,
        SUM(QTA.TOT_RA_CM)/SUM(QTA.TOT_LOD) AS TOT_RA_CMB,
        SUM(QTA.TOT_OP) AS TOT_OP,
        SUM(QTA.TOT_RA_OP) AS TOT_RA_OP,
        SUM(QTA.TOT_OP)/SUM(QTA.TOT_LOD) AS TOT_OPB,
        SUM(QTA.TOT_RA_OP)/SUM(QTA.TOT_LOD) AS TOT_RA_OPB
    FROM (
        SELECT -- MONTHLY Quota (Recent)
            MIN(DECODE(QTA.BSE_YR||QTA.BSE_MON, INP.BEF_YR_MON, '0',
                INP.ADD1_YR_MON, '2', INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,
            QTA.BSE_MON,
            QTA.TRD_CD,
            NVL(DIR.CONV_DIR_CD, QTA.DIR_CD) DIR_CD,
            MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,
            COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,
            SUM(QTA.LOD_QTY) AS TOT_LOD,
            SUM(QTA.GRS_RPB_REV*QTA.LOD_QTY) AS TOT_REV,
            SUM((QTA.GRS_RPB_REV-QTA.CM_UC_AMT)*QTA.LOD_QTY) AS TOT_CM,
            SUM((QTA.GRS_RPB_REV-QTA.RA_CM_UC_AMT)*QTA.LOD_QTY) AS TOT_RA_CM,
            SUM((QTA.GRS_RPB_REV-QTA.OPFIT_UC_AMT)*QTA.LOD_QTY    ) AS TOT_OP,
            SUM((QTA.GRS_RPB_REV-QTA.RA_OPFIT_UC_AMT)*QTA.LOD_QTY ) AS TOT_RA_OP
        FROM  ( -- 전쿼터의 마지막 월
                SELECT DISTINCT
                       RLS.MQTA_RLSE_VER_NO AS MQTA_RLSE_VER_NO,
                       RLS.BSE_YR           AS BEF_YR,
                       RLS.BSE_QTR_CD       AS BEF_QTR_CD
                FROM   SAQ_MON_QTA_RLSE RLS,
                       TMP_INPUT_PARMAS INP
                WHERE  RLS.BSE_YR||RLS.BSE_QTR_CD = INP.BEF_YR_QTR
                AND    RLS.QTA_RLSE_STS_CD = 'R'
              ) RLS,
              SAQ_MON_DIR_CONV  DIR,
              SAQ_MON_CFM_QTA QTA,
              SAQ_MON_CFM_TGT_VVD VVD,
              TMP_INPUT_PARMAS INP
        WHERE QTA.MQTA_RLSE_VER_NO = RLS.MQTA_RLSE_VER_NO
        AND   QTA.BSE_YR = RLS.BEF_YR
        AND   QTA.BSE_QTR_CD = RLS.BEF_QTR_CD
        AND   QTA.BSE_MON = DECODE(RLS.BEF_QTR_CD, '1Q', '03', '2Q', '06', '3Q', '09', '4Q', '12')
        AND   QTA.TRD_CD = INP.TRD_CD
        AND   QTA.DIR_CD = INP.DIR_CD
        AND   QTA.RHQ_CD LIKE INP.SLS_RHQ_CD||'%'
        AND   QTA.RGN_OFC_CD LIKE INP.SLS_RGN_OFC_CD||'%'
        AND   QTA.QTA_TGT_CD = 'T' -- Q : Sales Quota, T : Load Target
        AND   VVD.MQTA_RLSE_VER_NO = QTA.MQTA_RLSE_VER_NO
        AND   VVD.BSE_YR = QTA.BSE_YR
        AND   VVD.BSE_QTR_CD = QTA.BSE_QTR_CD
        AND   VVD.BSE_MON = QTA.BSE_MON
        AND   VVD.RLANE_CD = QTA.RLANE_CD
        AND   VVD.TRD_CD = QTA.TRD_CD
        AND   VVD.DIR_CD = QTA.DIR_CD
        AND   VVD.VSL_CD = QTA.VSL_CD
        AND   VVD.SKD_VOY_NO = QTA.SKD_VOY_NO
        AND   VVD.SKD_DIR_CD = QTA.SKD_DIR_CD
        AND   QTA.LOD_QTY > 0
        AND   QTA.BSE_YR = DIR.BSE_YR(+)
        AND   DIR.BSE_QTR_CD(+) = @[bse_qtr_cd]
        AND   QTA.TRD_CD = DIR.TRD_CD(+)
        AND   QTA.RLANE_CD = DIR.RLANE_CD(+)
        AND   QTA.DIR_CD = DIR.DIR_CD(+)
        GROUP BY QTA.BSE_YR, QTA.BSE_MON, QTA.TRD_CD, QTA.RLANE_CD, NVL(DIR.CONV_DIR_CD, QTA.DIR_CD),
                 VVD.VSL_CD,VVD.SKD_VOY_NO,VVD.SKD_DIR_CD
        ) QTA
    GROUP BY ROLLUP(QTA.TRD_CD, QTA.DIR_CD), QTA.BSE_MON
    UNION ALL
    SELECT -- Forecast
        'FORECAST' AS GUBUN,
        MIN(MON_SEQ) AS MON_SEQ,
        FSM.BSE_MON,
        DECODE(FSM.TRD_CD, '', 'TOTAL', FSM.TRD_CD) AS TRD_CD,
        DECODE(FSM.DIR_CD, '', 'TOTAL', FSM.DIR_CD) AS DIR_CD,
        SUM(FSM.TOT_BSA) AS TOT_BSA,
        SUM(FSM.TOT_VOY) AS TOT_VOY,
        SUM(FSM.TOT_LOD) AS TOT_LOD,
        SUM(FSM.TOT_REV) AS TOT_REV,
        SUM(FSM.TOT_REV)/SUM(FSM.TOT_LOD) AS TOT_RPB,
        SUM(FSM.TOT_CM) AS TOT_CM,
        SUM(FSM.TOT_RA_CM) AS TOT_RA_CM,
        SUM(FSM.TOT_CM)/SUM(FSM.TOT_LOD) AS TOT_CMB,
        SUM(FSM.TOT_RA_CM)/SUM(FSM.TOT_LOD) AS TOT_RA_CMB,
        SUM(FSM.TOT_OP) AS TOT_OP,
        SUM(FSM.TOT_RA_OP) AS TOT_RA_OP,
        SUM(FSM.TOT_OP)/SUM(FSM.TOT_LOD) AS TOT_OPB,
        SUM(FSM.TOT_RA_OP)/SUM(FSM.TOT_LOD) AS TOT_RA_OPB
    FROM (
        SELECT -- Forecast
               MIN(DECODE(FSM.BSE_YR||FSM.BSE_MON, INP.BEF_YR_MON, '0',
                          INP.ADD1_YR_MON, '2', INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,
               FSM.BSE_MON,
               FSM.TRD_CD,
               FSM.DIR_CD,
               MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,
               COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,
               SUM(FSM.LOD_QTY) AS TOT_LOD,
               SUM(FSM.GRS_RPB_REV*FSM.LOD_QTY) AS TOT_REV,
               SUM((FSM.GRS_RPB_REV-FSM.CM_UC_AMT)*FSM.LOD_QTY) AS TOT_CM,
               0 AS TOT_RA_CM,
               SUM((FSM.GRS_RPB_REV-FSM.OPFIT_UC_AMT)*FSM.LOD_QTY    ) AS TOT_OP,
               0 AS TOT_RA_OP
	    FROM  SAQ_MON_FCAST_SLS_SMRY FSM,
	          SAQ_MON_TGT_VVD_ADJ VVD,
	          (SELECT DISTINCT VER.MQTA_STEP_CD, VER.BSE_YR        , VER.BSE_QTR_CD  ,
	                           VER.TRD_CD      , VER.DIR_CD        , VER.GLINE_VER_NO,
	                           INP.SLS_RHQ_CD  , INP.SLS_RGN_OFC_CD, INP.SLS_FCAST_PUB_NO,
	                           INP.BEF_YR_MON  , INP.ADD1_YR_MON   , INP.ADD2_YR_MON
	          FROM   SAQ_MON_QTA_STEP_VER VER, TMP_INPUT_PARMAS INP
	          WHERE  1=1
	          AND    VER.MQTA_STEP_CD = INP.FIRST_STEP
	          AND    VER.BSE_YR = INP.BSE_YR
	          AND    VER.BSE_QTR_CD = INP.BSE_QTR_CD
	          AND    VER.TRD_CD = INP.TRD_CD
	          AND    VER.DIR_CD = INP.DIR_CD
	          AND    VER.QTA_MST_VER_NO = INP.QTA_MST_VER_NO					) INP
	    WHERE FSM.SLS_FCAST_PUB_NO = INP.SLS_FCAST_PUB_NO
	    AND   FSM.TRD_CD = INP.TRD_CD
	    AND   FSM.DIR_CD = INP.DIR_CD
	    AND   FSM.SLS_RHQ_CD LIKE INP.SLS_RHQ_CD||'%'
	    AND   FSM.SLS_RGN_OFC_CD LIKE INP.SLS_RGN_OFC_CD||'%'
	    AND   VVD.BSE_YR = INP.BSE_YR
	    AND   VVD.BSE_QTR_CD = INP.BSE_QTR_CD
	    AND   VVD.GLINE_VER_NO = INP.GLINE_VER_NO
	    AND   VVD.BSE_MON = FSM.BSE_MON
	    AND   VVD.RLANE_CD = FSM.RLANE_CD
	    AND   VVD.TRD_CD = FSM.TRD_CD
	    AND   VVD.DIR_CD = FSM.DIR_CD
	    AND   VVD.VSL_CD = FSM.VSL_CD
	    AND   VVD.SKD_VOY_NO = FSM.SKD_VOY_NO
	    AND   VVD.SKD_DIR_CD = FSM.SKD_DIR_CD
	    AND   FSM.LOD_QTY > 0
        GROUP BY FSM.BSE_YR, FSM.BSE_MON, FSM.TRD_CD, FSM.RLANE_CD, FSM.DIR_CD,
        		 VVD.VSL_CD,VVD.SKD_VOY_NO,VVD.SKD_DIR_CD
        ) FSM
    GROUP BY ROLLUP(FSM.TRD_CD, FSM.DIR_CD), FSM.BSE_MON
    UNION ALL
    SELECT -- Model Result
        'MODEL' AS GUBUN,
        MIN(MON_SEQ) AS MON_SEQ,
        MRS.BSE_MON,
        DECODE(MRS.TRD_CD, '', 'TOTAL', MRS.TRD_CD) AS TRD_CD,
        DECODE(MRS.DIR_CD, '', 'TOTAL', MRS.DIR_CD) AS DIR_CD,
        SUM(MRS.TOT_BSA) AS TOT_BSA,
        SUM(MRS.TOT_VOY) AS TOT_VOY,
        SUM(MRS.TOT_LOD) AS TOT_LOD,
        SUM(MRS.TOT_REV) AS TOT_REV,
        SUM(MRS.TOT_REV)/SUM(MRS.TOT_LOD) AS TOT_RPB,
        SUM(MRS.TOT_CM) AS TOT_CM,
        SUM(MRS.TOT_RA_CM) AS TOT_RA_CM,
        SUM(MRS.TOT_CM)/SUM(MRS.TOT_LOD) AS TOT_CMB,
        SUM(MRS.TOT_RA_CM)/SUM(MRS.TOT_LOD) AS TOT_RA_CMB,
        SUM(MRS.TOT_OP) AS TOT_OP,
        SUM(MRS.TOT_RA_OP) AS TOT_RA_OP,
        SUM(MRS.TOT_OP)/SUM(MRS.TOT_LOD) AS TOT_OPB,
        SUM(MRS.TOT_RA_OP)/SUM(MRS.TOT_LOD) AS TOT_RA_OPB
    FROM (
        SELECT -- Model Result
            MIN(DECODE(MRS.BSE_YR||MRS.BSE_MON, INP.BEF_YR_MON, '0',
                INP.ADD1_YR_MON, '2', INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,
            MRS.BSE_MON,
            MRS.TRD_CD,
            MRS.DIR_CD,
            MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,
            COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,
            SUM(MRS.LOD_QTY) AS TOT_LOD,
            SUM(MRS.GRS_RPB_REV*MRS.LOD_QTY) AS TOT_REV,
            SUM((MRS.GRS_RPB_REV-MRS.CM_UC_AMT)*MRS.LOD_QTY) AS TOT_CM,
            SUM((MRS.GRS_RPB_REV-MRS.RA_CM_UC_AMT)*MRS.LOD_QTY) AS TOT_RA_CM,
            SUM((MRS.GRS_RPB_REV-MRS.OPFIT_UC_AMT)*MRS.LOD_QTY    ) AS TOT_OP,
            SUM((MRS.GRS_RPB_REV-MRS.RA_OPFIT_UC_AMT)*MRS.LOD_QTY ) AS TOT_RA_OP
	    FROM  SAQ_MON_MDL_SLS_SMRY MRS,
	          SAQ_MON_TGT_VVD_ADJ VVD,
	          (SELECT DISTINCT VER.MQTA_STEP_CD, VER.BSE_YR        , VER.BSE_QTR_CD  ,
	                           VER.TRD_CD      , VER.DIR_CD        , VER.GLINE_VER_NO,
	                           INP.SLS_RHQ_CD  , INP.SLS_RGN_OFC_CD, INP.MQTA_MDL_VER_NO,
	                           INP.BEF_YR_MON  , INP.ADD1_YR_MON   , INP.ADD2_YR_MON
	          FROM   SAQ_MON_QTA_STEP_VER VER, TMP_INPUT_PARMAS INP
	          WHERE  1=1
	          AND    VER.MQTA_STEP_CD = INP.FIRST_STEP
	          AND    VER.BSE_YR = INP.BSE_YR
	          AND    VER.BSE_QTR_CD = INP.BSE_QTR_CD
	          AND    VER.TRD_CD = INP.TRD_CD
	          AND    VER.DIR_CD = INP.DIR_CD
	          AND    VER.QTA_MST_VER_NO = INP.QTA_MST_VER_NO					) INP
	    WHERE MRS.MQTA_MDL_VER_NO = INP.MQTA_MDL_VER_NO
	    AND   MRS.TRD_CD = INP.TRD_CD
	    AND   MRS.DIR_CD = INP.DIR_CD
	    AND   MRS.SLS_RHQ_CD LIKE INP.SLS_RHQ_CD||'%'
	    AND   MRS.SLS_RGN_OFC_CD LIKE INP.SLS_RGN_OFC_CD||'%'
	    AND   VVD.BSE_YR = INP.BSE_YR
	    AND   VVD.BSE_QTR_CD = INP.BSE_QTR_CD
	    AND   VVD.GLINE_VER_NO = INP.GLINE_VER_NO
	    AND   VVD.BSE_MON = MRS.BSE_MON
	    AND   VVD.RLANE_CD = MRS.RLANE_CD
	    AND   VVD.TRD_CD = MRS.TRD_CD
	    AND   VVD.DIR_CD = MRS.DIR_CD
	    AND   VVD.VSL_CD = MRS.VSL_CD
	    AND   VVD.SKD_VOY_NO = MRS.SKD_VOY_NO
	    AND   VVD.SKD_DIR_CD = MRS.SKD_DIR_CD
	    AND   MRS.LOD_QTY > 0
        GROUP BY MRS.BSE_YR, MRS.BSE_MON, MRS.TRD_CD, MRS.RLANE_CD, MRS.DIR_CD,
        		 VVD.VSL_CD,VVD.SKD_VOY_NO,VVD.SKD_DIR_CD
        ) MRS
    GROUP BY ROLLUP(MRS.TRD_CD, MRS.DIR_CD), MRS.BSE_MON
    UNION ALL
    SELECT -- RHQ, Initial
        DECODE(RHQ.MQTA_STEP_CD, MIN(RHQ.FIRST_STEP),'RHQ', '11','INITIAL') AS GUBUN,
        MIN(MON_SEQ) AS MON_SEQ,
        RHQ.BSE_MON,
        DECODE(RHQ.TRD_CD, '', 'TOTAL', RHQ.TRD_CD) AS TRD_CD,
        DECODE(RHQ.DIR_CD, '', 'TOTAL', RHQ.DIR_CD) AS DIR_CD,
        SUM(RHQ.TOT_BSA*RHQ.TOT_VOY) AS TOT_BSA,
        SUM(RHQ.TOT_VOY) AS TOT_VOY,
        SUM(RHQ.TOT_LOD) AS TOT_LOD,
        SUM(RHQ.TOT_REV) AS TOT_REV,
        DECODE(SUM(RHQ.TOT_LOD), 0, 0,
            SUM(RHQ.TOT_REV)/SUM(RHQ.TOT_LOD)) AS TOT_RPB,
        SUM(RHQ.TOT_CM) AS TOT_CM,
        SUM(RHQ.TOT_RA_CM) AS TOT_RA_CM,
        DECODE(SUM(RHQ.TOT_LOD), 0, 0,
            SUM(RHQ.TOT_CM)/SUM(RHQ.TOT_LOD)) AS TOT_CMB,
        DECODE(SUM(RHQ.TOT_LOD), 0, 0,
            SUM(RHQ.TOT_RA_CM)/SUM(RHQ.TOT_LOD)) AS TOT_RA_CMB,
        SUM(RHQ.TOT_OP) AS TOT_OP,
        SUM(RHQ.TOT_RA_OP) AS TOT_RA_OP,
        DECODE(SUM(RHQ.TOT_LOD), 0, 0,
            SUM(RHQ.TOT_OP)/SUM(RHQ.TOT_LOD)) AS TOT_OPB,
        DECODE(SUM(RHQ.TOT_LOD), 0, 0,
            SUM(RHQ.TOT_RA_OP)/SUM(RHQ.TOT_LOD)) AS TOT_RA_OPB
    FROM (
        SELECT -- RHQ, Initial
            INP.FIRST_STEP,
            RHQ.MQTA_STEP_CD,
            MIN(DECODE(RHQ.BSE_YR||RHQ.BSE_MON, INP.ADD1_YR_MON, '2',
                INP.ADD2_YR_MON, '3', '1')) AS MON_SEQ,
            RHQ.BSE_MON AS BSE_MON,
            RHQ.TRD_CD AS TRD_CD,
            RHQ.DIR_CD AS DIR_CD,
            MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA,
            COUNT(DISTINCT VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD) AS TOT_VOY,
            SUM(RHQ.LOD_QTY         ) AS TOT_LOD ,
            SUM(RHQ.GRS_RPB_REV*RHQ.LOD_QTY) AS TOT_REV ,
            SUM((RHQ.GRS_RPB_REV-RHQ.CM_UC_AMT)*RHQ.LOD_QTY) AS TOT_CM ,
            SUM((RHQ.GRS_RPB_REV-RHQ.RA_CM_UC_AMT)*RHQ.LOD_QTY) AS TOT_RA_CM ,
            SUM((RHQ.GRS_RPB_REV-RHQ.OPFIT_UC_AMT)*RHQ.LOD_QTY    ) AS TOT_OP ,
            SUM((RHQ.GRS_RPB_REV-RHQ.RA_OPFIT_UC_AMT)*RHQ.LOD_QTY ) AS TOT_RA_OP
        FROM   SAQ_MON_QTA_STEP_VER VER,
               SAQ_MON_QTA_LOD_TGT RHQ,
               SAQ_MON_TGT_VVD_ADJ VVD,
               TMP_INPUT_PARMAS INP
         WHERE  VER.MQTA_STEP_CD IN (INP.FIRST_STEP, '11') -- RHQ, Initial
         AND    VER.BSE_YR = INP.BSE_YR
         AND    VER.BSE_QTR_CD = INP.BSE_QTR_CD
         AND    VER.TRD_CD = INP.TRD_CD
         AND    VER.DIR_CD = INP.DIR_CD
         AND    VER.QTA_MST_VER_NO = INP.QTA_MST_VER_NO
         AND    (  (
 			(
 				VER.MQTA_STEP_CD = INP.FIRST_STEP AND VER.MQTA_VER_NO = INP.MQTA_VER_NO
 				AND VER.TRD_CD = INP.SEL_TRD_CD AND VER.DIR_CD = INP.SEL_DIR_CD
 			)
 			OR
 			(
 				VER.MQTA_STEP_CD = INP.FIRST_STEP
 				AND NOT(VER.TRD_CD = INP.SEL_TRD_CD AND VER.DIR_CD = INP.SEL_DIR_CD)
 				AND VER.SAQ_STS_CD IN (SELECT A.INTG_CD_VAL_CTNT
 						      FROM COM_INTG_CD_DTL A,
 							   COM_INTG_CD_DTL B
 						      WHERE A.INTG_CD_ID = 'CD00926'
 						      AND B.INTG_CD_ID = A.INTG_CD_ID
 						      AND B.INTG_CD_VAL_CTNT = 'FC'
 						      AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ)
 			)
 		   )
 		   OR
			          ( VER.MQTA_STEP_CD = '11' AND VER.SAQ_STS_CD IN  (
			 		             SELECT A.INTG_CD_VAL_CTNT
                               FROM COM_INTG_CD_DTL A,
                                     COM_INTG_CD_DTL B
                              WHERE A.INTG_CD_ID = 'CD00926'
                               AND B.INTG_CD_ID = A.INTG_CD_ID
                               AND B.INTG_CD_VAL_CTNT = '00'
                               AND A.INTG_CD_VAL_DP_SEQ >= B.INTG_CD_VAL_DP_SEQ  )
                  )
                )
        AND    RHQ.MQTA_STEP_CD = VER.MQTA_STEP_CD
        AND    RHQ.BSE_YR = VER.BSE_YR
        AND    RHQ.BSE_QTR_CD = VER.BSE_QTR_CD
        AND    RHQ.TRD_CD = VER.TRD_CD
        AND    RHQ.DIR_CD = VER.DIR_CD
        AND    RHQ.MQTA_VER_NO = VER.MQTA_VER_NO
        AND    RHQ.SLS_RHQ_CD LIKE INP.SLS_RHQ_CD||'%'
        AND    RHQ.SLS_RGN_OFC_CD LIKE INP.SLS_RGN_OFC_CD||'%'
        AND    VVD.BSE_YR = VER.BSE_YR
        AND    VVD.BSE_QTR_CD = VER.BSE_QTR_CD
        AND    VVD.GLINE_VER_NO = VER.GLINE_VER_NO
        AND    VVD.BSE_MON = RHQ.BSE_MON
        AND    VVD.TRD_CD = RHQ.TRD_CD
        AND    VVD.DIR_CD = RHQ.DIR_CD
        AND    VVD.SUB_TRD_CD = RHQ.SUB_TRD_CD
        AND    VVD.RLANE_CD = RHQ.RLANE_CD
        AND    VVD.SPRT_GRP_CD = RHQ.SPRT_GRP_CD
        AND    VVD.BSA_GRP_CD = RHQ.BSA_GRP_CD
        GROUP BY INP.FIRST_STEP, RHQ.MQTA_STEP_CD,RHQ.BSE_YR,RHQ.BSE_MON,RHQ.TRD_CD,RHQ.RLANE_CD,RHQ.DIR_CD,
                 RHQ.SPRT_GRP_CD,RHQ.BSA_GRP_CD
        ) RHQ
    GROUP BY ROLLUP(RHQ.TRD_CD, RHQ.DIR_CD), RHQ.MQTA_STEP_CD, RHQ.BSE_MON
    ) UNI
GROUP BY UNI.TRD_CD, UNI.DIR_CD, ITM.CODE, ITM.TEXT, ITM.ROW_SEQ
ORDER BY DECODE(UNI.TRD_CD, 'TOTAL', '1', @[trade], '2', UNI.TRD_CD),
         DECODE(UNI.DIR_CD, 'TOTAL', '1', UNI.DIR_CD), ITM.ROW_SEQ			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="bse_qtr_cd" type="12" value="" out="N"/>
				<param name="bef_yr_qtr" type="12" value="" out="N"/>
				<param name="bef_yr_mon" type="12" value="" out="N"/>
				<param name="add1_yr_mon" type="12" value="" out="N"/>
				<param name="add2_yr_mon" type="12" value="" out="N"/>
				<param name="pfmc_fr_yr_qtr" type="12" value="" out="N"/>
				<param name="pfmc_to_yr_qtr" type="12" value="" out="N"/>
				<param name="pfmc_fr_yr_mon" type="12" value="" out="N"/>
				<param name="pfmc_to_yr_mon" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="slsFcastPubNo" type="12" value="" out="N"/>
				<param name="qtaMstVerNo" type="12" value="" out="N"/>
				<param name="mqtaMdlVerNo" type="12" value="" out="N"/>
				<param name="glineVerNo" type="12" value="" out="N"/>
				<param name="mQtaVerNo" type="12" value="" out="N"/>
				<param name="slsRhqCd" type="12" value="" out="N"/>
				<param name="slsRgnOfcCd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
