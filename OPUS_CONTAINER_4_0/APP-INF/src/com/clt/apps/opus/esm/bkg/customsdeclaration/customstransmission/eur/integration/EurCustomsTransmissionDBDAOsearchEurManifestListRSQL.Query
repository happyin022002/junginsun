<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="EurCustomsTransmissionDBDAOsearchEurManifestListRSQL">
			<desc><![CDATA[구주 INBOUND CUSTOMS 조회
 * 2012.04.02 김보배 [CHM-201217042] [BKG] [EUR Customs EDI화면] EXS MRN / Export MRN 추가 - U/I 및 Flat file 업데이트]]></desc>
			<sql><![CDATA[
SELECT T3.*
       ,DECODE( INSTR(SH_NM||SH_AD||SH_CT||SH_CN||SH_ZIP||SH_STR||SH_EORI
       ||CNEE_NM||CNEE_AD||CNEE_CT||CNEE_CN||CNEE_ZIP||CNEE_STR||CNEE_EORI
       ||NTFY_NM||NTFY_AD||NTFY_CT||NTFY_CN||NTFY_ZIP||NTFY_STR||NTFY_EORI
       ,'E'),0,'N','Y') AS ERR_YN
       ,NVL2(SENT_TIME,'Sent'||CHR(10)||'('||SENT_TIME||')','Initial') AS TRAN_STATUS
       ,NVL2(SENT_TIME,DECODE(SUBSTR(RECEIVE_TIME,1,1), null ,'Not Received','A','Accepted'||CHR(10)||'('||SUBSTR(RECEIVE_TIME,2,20)||')','R','Rejected'||CHR(10)||'('||SUBSTR(RECEIVE_TIME,2,20)||')'),DECODE(SUBSTR(RECEIVE_TIME,1,1), null ,'','A','Accepted'||CHR(10)||'('||SUBSTR(RECEIVE_TIME,2,20)||')','R','Rejected'||CHR(10)||'('||SUBSTR(RECEIVE_TIME,2,20)||')')) AS RECEIVE_STATUS
FROM (
    SELECT T2.*
           
           /*  EMPTY BOOKING 일 경우 VALIDATION 제외 처리 */
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(SH_NM2  ,'E' , 'N'), SH_NM2)   AS SH_NM
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(SH_AD2  ,'E' , 'N'), SH_AD2)   AS SH_AD
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(SH_CT2  ,'E' , 'N'), SH_CT2)   AS SH_CT
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(SH_CN2  ,'E' , 'N'), SH_CN2)   AS SH_CN
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(SH_ZIP2 ,'E' , 'N'), SH_ZIP2)  AS SH_ZIP
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(SH_STR2 ,'E' , 'N'), SH_STR2)  AS SH_STR
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(SH_EORI2,'E' , 'N'), SH_EORI2) AS SH_EORI

           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(CNEE_NM2  ,'E' , 'N'), CNEE_NM2)   AS CNEE_NM
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(CNEE_AD2  ,'E' , 'N'), CNEE_AD2)   AS CNEE_AD
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(CNEE_CT2  ,'E' , 'N'), CNEE_CT2)   AS CNEE_CT
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(CNEE_CN2  ,'E' , 'N'), CNEE_CN2)   AS CNEE_CN
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(CNEE_ZIP2 ,'E' , 'N'), CNEE_ZIP2)  AS CNEE_ZIP
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(CNEE_STR2 ,'E' , 'N'), CNEE_STR2)  AS CNEE_STR
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(CNEE_EORI2,'E' , 'N'), CNEE_EORI2) AS CNEE_EORI

           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(NTFY_NM2  ,'E' , 'N'), NTFY_NM2)   AS NTFY_NM
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(NTFY_AD2  ,'E' , 'N'), NTFY_AD2)   AS NTFY_AD
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(NTFY_CT2  ,'E' , 'N'), NTFY_CT2)   AS NTFY_CT
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(NTFY_CN2  ,'E' , 'N'), NTFY_CN2)   AS NTFY_CN
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(NTFY_ZIP2 ,'E' , 'N'), NTFY_ZIP2)  AS NTFY_ZIP
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(NTFY_STR2 ,'E' , 'N'), NTFY_STR2)  AS NTFY_STR
           , DECODE(BKG_CGO_TP_CD, 'P', REPLACE(NTFY_EORI2,'E' , 'N'), NTFY_EORI2) AS NTFY_EORI
		  #if (${mode_type} == 'O')
	       ,(SELECT DECODE(ORG_TRNS_MOD_CD,'B','Y','F','Y','U','Y','E','Y','N')
             FROM BKG_BOOKING
             WHERE 1=1
             AND BKG_NO = T2.BKG_NO) TRNS_MOD_CD
		  #else
	       ,(SELECT DECODE(DEST_TRNS_MOD_CD,'B','Y','F','Y','U','Y','E','Y','N')
             FROM BKG_BOOKING
             WHERE 1=1
             AND BKG_NO = T2.BKG_NO) TRNS_MOD_CD
          #end
    FROM (

        SELECT T1.*
               ,BKG_GET_TOKEN_FNC(T1.ENS_INFO,1) AS POFE
               ,BKG_GET_TOKEN_FNC(T1.ENS_INFO,2) AS MRN
               ,BKG_GET_TOKEN_FNC(T1.ENS_INFO,3) AS POFE_ETA
               , EUIO.MVMT_REF_NO AS EXS_MRN
               , SH_NM1 AS SH_NM2
               , SH_AD1 AS SH_AD2
               , SH_CT1 AS SH_CT2
               , SH_CN1 AS SH_CN2
               , SH_ZIP1 AS SH_ZIP2
               , SH_STR1 AS SH_STR2
               , SH_EORI1 AS SH_EORI2

               ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_NM1,  'E','N',CNEE_NM1),CNEE_NM1)     AS CNEE_NM2
               ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_AD1,  'E','N',CNEE_AD1),CNEE_AD1)     AS CNEE_AD2
               ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_CT1,  'E','N',CNEE_CT1),CNEE_CT1)     AS CNEE_CT2
               ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_CN1,  'E','N',CNEE_CN1),CNEE_CN1)     AS CNEE_CN2
               ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_ZIP1, 'E','N',CNEE_ZIP1),CNEE_ZIP1)   AS CNEE_ZIP2
               ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_STR1, 'E','N',CNEE_STR1),CNEE_STR1)   AS CNEE_STR2
               ,DECODE(CNEE_EORI1,'VE','E',DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_EORI1,'E','N',CNEE_EORI1),CNEE_EORI1)) AS CNEE_EORI2

               ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_NM1,DECODE(NTFY_NM1,  'E','N',NTFY_NM1))     AS NTFY_NM2
               ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_AD1,DECODE(NTFY_AD1,  'E','N',NTFY_AD1))     AS NTFY_AD2
               ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_CT1,DECODE(NTFY_CT1,  'E','N',NTFY_CT1))     AS NTFY_CT2
               ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_CN1,DECODE(NTFY_CN1,  'E','N',NTFY_CN1))     AS NTFY_CN2
               ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_ZIP1,DECODE(NTFY_ZIP1, 'E','N',NTFY_ZIP1))   AS NTFY_ZIP2
               ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_STR1,DECODE(NTFY_STR1, 'E','N',NTFY_STR1))   AS NTFY_STR2
               ,DECODE(NTFY_EORI1,'VE','E',DECODE(CUST_TO_ORD_FLG,'Y',NTFY_EORI1,DECODE(NTFY_EORI1,'E','N',NTFY_EORI1)) ) AS NTFY_EORI2
               ,(SELECT ACK_RCV_STS_CD||TO_CHAR(ACK_DT,'YYYY-MM-DD HH24:MI')
                 FROM BKG_CSTMS_EUR_DG_RCV
                 WHERE BL_NO = T1.BL_NO 
                 AND SUBSTR(MSG_RCV_NO,-14)>T1.SND
                 AND EUR_EDI_MSG_TP_ID = 'CTA'
                 AND MSG_RCV_NO = T1.MAX_MSG_RCV_NO
                 AND  ROWNUM=1) AS RECEIVE_TIME
        FROM (
            SELECT 
                 BB.BL_NO
                 ,DECODE(BB.BKG_CGO_TP_CD, 'P', 'EMPTY', 'FULL') AS CARGO_TYPE
            #if (${mode_type} == 'I')
               , DENSE_RANK() OVER (ORDER BY BV.POL_CD, BB.BL_NO) AS DT_SEQ
                , ( SELECT NVL(TO_CHAR(SKD1.VPS_ETA_DT,'YYYY-MM-DD HH24:MI'),' ')  
                      FROM VSK_VSL_PORT_SKD SKD1, BKG_VVD VVD1, BKG_BOOKING BKG1 
                     WHERE 1=1
                       AND VVD1.VSL_CD      = SKD1.VSL_CD
                       AND VVD1.SKD_VOY_NO  = SKD1.SKD_VOY_NO
                       AND VVD1.SKD_DIR_CD  = SKD1.SKD_DIR_CD 
                       AND VVD1.POD_CD      = SKD1.VPS_PORT_CD
                       AND NVL(SKD1.SKD_CNG_STS_CD, ' ')    <> 'S'
                       AND SKD1.VPS_PORT_CD = @[pod_cd]
	#if (${pod_yd_cd} != '')
            AND VVD1.POD_YD_CD		= @[pod_cd]||@[pod_yd_cd]
	#end
                       AND VVD1.POD_YD_CD   = SKD1.YD_CD
                       AND VVD1.POD_CLPT_IND_SEQ  = SKD1.CLPT_IND_SEQ
                       AND VVD1.VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                       AND VVD1.SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                       AND VVD1.SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                       AND VVD1.BKG_NO = BKG1.BKG_NO
                       AND BKG1.BKG_STS_CD != 'X'
                       AND ROWNUM = 1
                  ) AS ETA
                , ( SELECT NVL(TO_CHAR(SKD2.VPS_ETD_DT,'YYYY-MM-DD HH24:MI'),' ') 
                      FROM VSK_VSL_PORT_SKD SKD2, BKG_VVD VVD2, BKG_BOOKING BKG2 
                     WHERE 1=1
                       AND VVD2.VSL_CD      = SKD2.VSL_CD
                       AND VVD2.SKD_VOY_NO  = SKD2.SKD_VOY_NO
                       AND VVD2.SKD_DIR_CD  = SKD2.SKD_DIR_CD 
                       AND VVD2.POD_CD      = SKD2.VPS_PORT_CD
                       AND NVL(SKD2.SKD_CNG_STS_CD, ' ')    <> 'S'
                       AND SKD2.VPS_PORT_CD = @[pod_cd]
	#if (${pod_yd_cd} != '')
            AND VVD2.POD_YD_CD		= @[pod_cd]||@[pod_yd_cd]
	#end
                       AND VVD2.POD_YD_CD   = SKD2.YD_CD
                       AND VVD2.POD_CLPT_IND_SEQ  = SKD2.CLPT_IND_SEQ
                       AND VVD2.VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                       AND VVD2.SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                       AND VVD2.SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                       AND VVD2.BKG_NO = BKG2.BKG_NO
                       AND BKG2.BKG_STS_CD != 'X'
                       AND VVD2.BKG_NO = BKG2.BKG_NO
                       AND BKG2.BKG_STS_CD != 'X'
                       AND ROWNUM = 1
                  ) AS ETD
                         
            #else

               , DENSE_RANK() OVER (ORDER BY BV.POD_CD, BB.BL_NO) AS DT_SEQ         
                , ( SELECT NVL(TO_CHAR(SKD1.VPS_ETA_DT,'YYYY-MM-DD HH24:MI'),' ')  
                      FROM VSK_VSL_PORT_SKD SKD1, BKG_VVD VVD1, BKG_BOOKING BKG1  
                     WHERE 1=1
                       AND VVD1.VSL_CD      =  SKD1.VSL_CD
                       AND VVD1.SKD_VOY_NO  =  SKD1.SKD_VOY_NO
                       AND VVD1.SKD_DIR_CD  =  SKD1.SKD_DIR_CD 
                       AND VVD1.POL_CD      = SKD1.VPS_PORT_CD
                       AND NVL(SKD1.SKD_CNG_STS_CD, ' ')    <> 'S'
                       AND SKD1.VPS_PORT_CD = @[pol_cd]
	#if (${pol_yd_cd} != '')
            AND VVD1.POL_YD_CD		= @[pol_cd]||@[pol_yd_cd]
	#end
                       AND VVD1.POL_YD_CD   = SKD1.YD_CD
                       AND VVD1.POL_CLPT_IND_SEQ  = SKD1.CLPT_IND_SEQ
                       AND VVD1.VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                       AND VVD1.SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                       AND VVD1.SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                       AND VVD1.BKG_NO = BKG1.BKG_NO
                       AND BKG1.BKG_STS_CD != 'X'
                       AND ROWNUM = 1
                  ) AS ETA
                , ( SELECT NVL(TO_CHAR(SKD2.VPS_ETD_DT,'YYYY-MM-DD HH24:MI'),' ') 
                      FROM VSK_VSL_PORT_SKD SKD2, BKG_VVD VVD2, BKG_BOOKING BKG2 
                     WHERE 1=1
                       AND VVD2.VSL_CD      =  SKD2.VSL_CD
                       AND VVD2.SKD_VOY_NO  =  SKD2.SKD_VOY_NO
                       AND VVD2.SKD_DIR_CD  =  SKD2.SKD_DIR_CD 
                       AND VVD2.POL_CD      = SKD2.VPS_PORT_CD
                       AND NVL(SKD2.SKD_CNG_STS_CD, ' ')    <> 'S'
                       AND SKD2.VPS_PORT_CD = @[pol_cd]
	#if (${pol_yd_cd} != '')
            AND VVD2.POL_YD_CD		= @[pol_cd]||@[pol_yd_cd]
	#end
                       AND VVD2.POL_YD_CD   = SKD2.YD_CD
                       AND VVD2.POL_CLPT_IND_SEQ  = SKD2.CLPT_IND_SEQ
                       AND VVD2.VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                       AND VVD2.SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                       AND VVD2.SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                       AND VVD2.BKG_NO = BKG2.BKG_NO
                       AND BKG2.BKG_STS_CD != 'X'
                       AND ROWNUM = 1
                  ) AS ETD
            #end
            
               , BKG_JOIN_FNC((CURSOR(SELECT CNTR_NO 
                                        FROM BKG_CONTAINER
                                       WHERE BKG_NO = BB.BKG_NO
                                       ORDER BY CNTR_NO) ) , CHR(10)) AS CNTR_NOS
               
               , BKG_JOIN_FNC((CURSOR(SELECT CNTR_PRT_FLG
                                        FROM BKG_CONTAINER
                                       WHERE BKG_NO = BB.BKG_NO
                                       ORDER BY CNTR_NO) ) , CHR(10)) AS CNTR_PRT_FLG

--               , BKG_JOIN_FNC((CURSOR(SELECT CUST_REF_NO_CTNT
--                                        FROM BKG_REFERENCE BR
--                                            ,BKG_CONTAINER C
--                                       WHERE C.BKG_NO  = BB.BKG_NO
--                                         AND C.BKG_NO  = BR.BKG_NO(+)
--                                         AND C.CNTR_NO = BR.CNTR_NO(+)
--                                         AND BR.BKG_REF_TP_CD(+) = 'CMRN'
--                                       ORDER BY C.CNTR_NO) ) , CHR(10)) AS EXPORT_MRN

               , BKG_JOIN_FNC((CURSOR(SELECT CUST_REF_NO_CTNT
                                        FROM BKG_REFERENCE BR
                                       WHERE 1=1
                                         AND BB.BKG_NO  = BR.BKG_NO(+)
                                         AND BR.BKG_REF_TP_CD(+) = 'CMRN'
                                       ORDER BY BR.CNTR_NO) ) , CHR(10)) AS EXPORT_MRN
                
                , BB.BKG_CGO_TP_CD
                , BV.POL_CD
                , BV.POD_CD
                , BV.POL_YD_CD
                , BV.POD_YD_CD
                , BB.POL_CD AS B_POL_CD
                , BB.POD_CD AS B_POD_CD
                , BB.DEL_CD AS DEL_CD
                
                , BB.CUST_TO_ORD_FLG
                
                , (
                    SELECT A.CSTMS_PORT_CD || ',' || A.MVMT_REF_NO || ',' || NVL(TO_CHAR(A.CSTMS_ESTM_ARR_DT ,'YYYY-MM-DD HH24:MI'),' ')
                      FROM BKG_CSTMS_EUR_BL A
                     WHERE A.BL_NO = BB.BL_NO
                       AND A.MSG_SND_NO = ( SELECT MAX(MSG_SND_NO)
                                              FROM BKG_CSTMS_EUR_BL
                                             WHERE BL_NO = BB.BL_NO
                                             )    
                       AND A.MSG_SND_NO > ' '
                         
                  ) AS ENS_INFO
                
                , DECODE(SHPR.CUST_NM,           NULL,'E','Y')  AS SH_NM1
                , DECODE(SHPR.CUST_ADDR,         NULL,'E','Y') AS SH_AD1
                
                , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CUST_CTY_NM IS NULL THEN 'E'
                       WHEN SHPR.CUST_CTY_NM IS NOT NULL THEN 'Y'
                       ELSE 'N'
                  END SH_CT1 

                , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CSTMS_DECL_CNT_CD IS NULL THEN 'E'
                       WHEN SHPR.CSTMS_DECL_CNT_CD IS NOT NULL THEN 'Y'
                       ELSE 'N'
                  END SH_CN1 
                  
                , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CUST_ZIP_ID IS NULL THEN 'E'
                       WHEN SHPR.CUST_ZIP_ID IS NOT NULL THEN
                            CASE WHEN SHPR.CSTMS_DECL_CNT_CD = 'DE' AND LENGTH(SHPR.CUST_ZIP_ID) != 5 THEN 'E'
                            ELSE 'Y'
                        END
                  ELSE 'N'
                  END SH_ZIP1

                , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.EUR_CSTMS_ST_NM IS NULL THEN 'E'
                       WHEN SHPR.EUR_CSTMS_ST_NM IS NOT NULL THEN 'Y'
                       ELSE 'N'
                  END SH_STR1

                , CASE  WHEN SHPR.EORI_NO IS NOT NULL THEN
                            CASE WHEN REGEXP_INSTR(SHPR.EORI_NO,'^[A-Z]{2}([a-zA-Z0-9]{1,15}$)') > 0 AND REGEXP_INSTR(UPPER(SHPR.EORI_NO),'TEST|NONE') < 1
                            THEN 'Y' ELSE 'E' END
                        WHEN SHPR.EORI_NO IS NULL
                            AND (SHPR.CUST_CTY_NM IS NULL
                            OR SHPR.CSTMS_DECL_CNT_CD IS NULL
                            OR SHPR.CUST_ZIP_ID IS NULL )
                        THEN 'E'
                        ELSE 'N'
                  END SH_EORI1

                , DECODE(CNEE.CUST_NM,           NULL,'E','Y') AS CNEE_NM1
                , DECODE(CNEE.CUST_ADDR,         NULL,'E','Y') AS CNEE_AD1
                
                , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CUST_CTY_NM IS NULL THEN 'E'
                       WHEN CNEE.CUST_CTY_NM IS NOT NULL THEN 'Y'
                       ELSE 'N'
                  END CNEE_CT1 

                , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CSTMS_DECL_CNT_CD IS NULL THEN 'E'
                       WHEN CNEE.CSTMS_DECL_CNT_CD IS NOT NULL THEN 'Y'
                       ELSE 'N'
                  END CNEE_CN1
                
                , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CUST_ZIP_ID IS NULL THEN 'E'
                       WHEN CNEE.CUST_ZIP_ID IS NOT NULL THEN
                            CASE WHEN CNEE.CSTMS_DECL_CNT_CD = 'DE' AND LENGTH(CNEE.CUST_ZIP_ID) != 5 THEN 'E'
                            ELSE 'Y'
                        END
                  ELSE 'N'
                  END CNEE_ZIP1

                , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.EUR_CSTMS_ST_NM IS NULL THEN 'E'
                       WHEN CNEE.EUR_CSTMS_ST_NM IS NOT NULL THEN 'Y'
                       ELSE 'N'
                  END CNEE_STR1

                , CASE  WHEN CNEE.EORI_NO IS NOT NULL THEN
                            CASE WHEN REGEXP_INSTR(CNEE.EORI_NO,'^[A-Z]{2}([a-zA-Z0-9]{1,15}$)') > 0 AND REGEXP_INSTR(UPPER(CNEE.EORI_NO),'TEST|NONE') < 1
                            THEN 'Y' ELSE 'E' END
                        WHEN CNEE.EORI_NO IS NULL
                            AND (CNEE.CUST_CTY_NM IS NULL
                            OR CNEE.CSTMS_DECL_CNT_CD IS NULL
                            OR CNEE.CUST_ZIP_ID IS NULL )
                        THEN 'E'
                        ELSE 'N'
                  END CNEE_EORI1
                  
                , DECODE(NTFY.CUST_NM,           NULL,'E','Y')  AS NTFY_NM1
                , DECODE(NTFY.CUST_ADDR,         NULL,'E','Y')  AS NTFY_AD1
                
                , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CUST_CTY_NM IS NULL THEN 'E'
                       WHEN NTFY.CUST_CTY_NM IS NOT NULL THEN 'Y'
                       ELSE 'N'
                  END NTFY_CT1

                , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CSTMS_DECL_CNT_CD IS NULL THEN 'E'
                       WHEN NTFY.CSTMS_DECL_CNT_CD IS NOT NULL THEN 'Y'
                       ELSE 'N'
                  END NTFY_CN1 
                  
                , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CUST_ZIP_ID IS NULL THEN 'E'
                       WHEN NTFY.CUST_ZIP_ID IS NOT NULL THEN
                            CASE WHEN NTFY.CSTMS_DECL_CNT_CD = 'DE' AND LENGTH(NTFY.CUST_ZIP_ID) != 5 THEN 'E'
                            ELSE 'Y'
                        END
                  ELSE 'N'
                  END NTFY_ZIP1
                  
                , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.EUR_CSTMS_ST_NM IS NULL THEN 'E'
                       WHEN NTFY.EUR_CSTMS_ST_NM IS NOT NULL THEN 'Y'
                       ELSE 'N'
                  END NTFY_STR1

                , CASE  WHEN NTFY.EORI_NO IS NOT NULL THEN
                            CASE WHEN REGEXP_INSTR(NTFY.EORI_NO,'^[A-Z]{2}([a-zA-Z0-9]{1,15}$)') > 0 AND REGEXP_INSTR(UPPER(NTFY.EORI_NO),'TEST|NONE') < 1
                            THEN 'Y' ELSE 'E' END
                        WHEN NTFY.EORI_NO IS NULL
                            AND (NTFY.CUST_CTY_NM IS NULL
                            OR NTFY.CSTMS_DECL_CNT_CD IS NULL
                            OR NTFY.CUST_ZIP_ID IS NULL )
                        THEN 'E'
                        ELSE 'N'
                  END NTFY_EORI1

                , BB.BKG_NO
                , (SELECT MAX(MSG_RCV_NO)
                   FROM BKG_CSTMS_EUR_DG_RCV
                   WHERE BL_NO = BB.BL_NO) AS MAX_MSG_RCV_NO
                , NVL(B.CALL_SGN_NO, '')     AS VSL_CALLSIGN
                , NVL(B.LLOYD_NO, '')        AS VSL_LLOYDCODE
                , NVL(B.VSL_ENG_NM, '')      AS VSL_FULLNAME
#if (${pol_cd} != '')
                , POL.SLAN_CD
#else
                , POD.SLAN_CD
#end
              ,(SELECT TO_CHAR(SND_DT,'YYYY-MM-DD HH24:MI')
                FROM(SELECT *
                     FROM BKG_CSTMS_EUR_DG_EDI_RSPN RS, BKG_CSTMS_EUR_DG_SND SND
                     WHERE RS.EUR_EDI_MSG_TP_ID='CTA' 
					 AND VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                     AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                     AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                     #if (${mode_type} == 'O')
                     AND PORT_CD = @[pol_cd]
                     #else
                     and PORT_CD = @[pod_cd]
                     #end
                     AND RS.MSG_SND_NO = SND.MSG_SND_NO
                     ORDER BY SND.MSG_SND_NO DESC)  
                 WHERE BL_NO=BB.BL_NO
                 AND ROWNUM=1 ) AS SENT_TIME
               ,(SELECT MAX(SUBSTR(MSG_SND_NO,-14))
                 FROM BKG_CSTMS_EUR_DG_EDI_RSPN
                 WHERE BL_NO =BB.BL_NO) AS SND
            FROM BKG_BOOKING BB
                , BKG_VVD BV
                , BKG_CUSTOMER SHPR
                , BKG_CUSTOMER CNEE
                , BKG_CUSTOMER NTFY
                --, VSK_VSL_PORT_SKD A
                , VSK_VSL_PORT_SKD POL
                , VSK_VSL_PORT_SKD POD
                , MDM_VSL_CNTR B

            WHERE BB.BKG_NO = BV.BKG_NO

            AND BB.BKG_NO = SHPR.BKG_NO (+)
            AND SHPR.BKG_CUST_TP_CD(+) = 'S'
            AND BB.BKG_NO = CNEE.BKG_NO (+)
            AND CNEE.BKG_CUST_TP_CD(+) = 'C'
            AND BB.BKG_NO = NTFY.BKG_NO (+)
            AND NTFY.BKG_CUST_TP_CD(+) = 'N'

            AND POL.VSL_CD        =  B.VSL_CD
            
            AND POL.VSL_CD        =  BV.VSL_CD
            AND POL.SKD_VOY_NO    =  BV.SKD_VOY_NO
            AND POL.SKD_DIR_CD    =  BV.SKD_DIR_CD 
            AND NVL(POL.SKD_CNG_STS_CD, ' ')    <> 'S'
            AND POL.VPS_PORT_CD   = BV.POL_CD
            AND POL.CLPT_IND_SEQ  = BV.POL_CLPT_IND_SEQ
            
            
            AND POD.VSL_CD        =  BV.VSL_CD
            AND POD.SKD_VOY_NO    =  BV.SKD_VOY_NO
            AND POD.SKD_DIR_CD    =  BV.SKD_DIR_CD 
            AND NVL(POD.SKD_CNG_STS_CD, ' ')    <> 'S'
            AND POD.VPS_PORT_CD   = BV.POD_CD
            AND POD.CLPT_IND_SEQ  = BV.POD_CLPT_IND_SEQ
    

            AND BV.VSL_CD		= SUBSTR(@[vvd_cd], 1, 4)   
            AND BV.SKD_VOY_NO	= SUBSTR(@[vvd_cd], 5, 4)   
            AND BV.SKD_DIR_CD	= SUBSTR(@[vvd_cd], 9, 1)   
           

            #if (${check_frob_search} != 'Y') 
              #if (${mode_type} == 'O')
                AND BV.POL_CD   = @[pol_cd]
              #else
                AND BV.POD_CD   = @[pod_cd]
              #end
            #else 
                AND EXISTS (SELECT '1'
                              FROM VSK_VSL_PORT_SKD
                             WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
                               AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
                               AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
                               #if (${mode_type} == 'O')
                               AND VPS_PORT_CD = @[pol_cd]
                               #else
                               AND VPS_PORT_CD = @[pod_cd]
                               #end
                               AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
                               AND CLPT_SEQ BETWEEN POL.CLPT_SEQ AND POD.CLPT_SEQ
                           )
            #end

            #if (${bl_no} != '') 
            AND BB.BL_NO		= @[bl_no]
            #end


	#if (${pod_yd_cd} != '')
            AND BV.POD_YD_CD		= @[pod_cd]||@[pod_yd_cd]
	#end

	#if (${pol_yd_cd} != '')
            AND BV.POL_YD_CD		= @[pol_cd]||@[pol_yd_cd]
	#end

	#if (${cargo_type} == 'M')
            AND BB.BKG_CGO_TP_CD =  'P'
	#elseif (${cargo_type} == 'F')
            AND BB.BKG_CGO_TP_CD <> 'P'
	#end



            AND BB.BKG_STS_CD NOT IN ('X', 'S')

        ) T1
        , BKG_CSTMS_EUR_IO_BL EUIO
        WHERE 1=1
        AND T1.BL_NO = EUIO.BL_NO(+)
    ) T2
) T3
WHERE 1=1
 #if (${trns_mode} != '')
  AND T3.TRNS_MOD_CD = @[trns_mode]
 #end
ORDER BY DT_SEQ			]]></sql>
			<params>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="pod_yd_cd" type="12" value="" out="N"/>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pol_yd_cd" type="12" value="" out="N"/>
				<param name="bl_no" type="12" value="" out="N"/>
				<param name="trns_mode" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
