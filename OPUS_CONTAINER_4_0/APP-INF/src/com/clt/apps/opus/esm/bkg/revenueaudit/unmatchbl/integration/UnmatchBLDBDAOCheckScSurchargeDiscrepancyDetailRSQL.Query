<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="UnmatchBLDBDAOCheckScSurchargeDiscrepancyDetailRSQL">
			<desc><![CDATA[UnmatchBLDBDAOCheckScSurchargeDiscrepancyDetailRSQL]]></desc>
			<sql><![CDATA[
WITH
XR AS
(
/*******************************************************************************************
환율 정보 조회
*******************************************************************************************/

SELECT	CURR_CD					,
				USD_LOCL_XCH_RT
FROM		GL_MON_XCH_RT
WHERE		ACCT_XCH_RT_YRMON	= LEAST(( SELECT TO_CHAR(RT_APLY_DT, 'YYYYMM') FROM BKG_RATE WHERE BKG_NO = @[bkg_no] ), (SELECT MAX(ACCT_XCH_RT_YRMON) FROM GL_MON_XCH_RT ))
AND			ACCT_XCH_RT_LVL		= '1'
AND			@[ca_flg]					= 'N'

UNION ALL

SELECT	CURR_CD					,
				USD_LOCL_XCH_RT
FROM		GL_MON_XCH_RT
WHERE		ACCT_XCH_RT_YRMON	= LEAST(( SELECT TO_CHAR(RT_APLY_DT, 'YYYYMM') FROM BKG_RT_HIS WHERE BKG_NO = @[bkg_no] AND CORR_NO	= 'TMP0000001' ), (SELECT MAX(ACCT_XCH_RT_YRMON) FROM GL_MON_XCH_RT ))
AND			ACCT_XCH_RT_LVL		= '1'
AND			@[ca_flg]					= 'Y'
)	,
BK AS
(
/*******************************************************************************************
B/L TYPE CODE 를 SELECT 한다.
*******************************************************************************************/

SELECT	(
				SELECT	NVL(RT_BL_TP_CD, 'N')
				FROM		BKG_RATE
				WHERE		BKG_NO				= @[bkg_no]
				AND			@[ca_flg]			= 'N'
				UNION ALL
				SELECT	NVL(RT_BL_TP_CD, 'N')
				FROM		BKG_RT_HIS
				WHERE		BKG_NO				= @[bkg_no]
				AND			CORR_NO				= 'TMP0000001'	-- CORRECTION 중인 DATA 를 나타내는 고정된 상수값
				AND			@[ca_flg]			= 'Y'
        )	RT_BL_TP_CD	,
        (
				SELECT	MAX(BB_CGO_FLG)
				FROM		BKG_QTY_DTL
				WHERE		BKG_NO				= @[bkg_no]
				AND			@[ca_flg]			= 'N'
				HAVING  MAX(BB_CGO_FLG) IS NOT NULL
				UNION ALL
				SELECT	MAX(BB_CGO_FLG)
				FROM		BKG_QTY_DTL_HIS
				WHERE		BKG_NO				= @[bkg_no]
				AND			CORR_NO				= 'TMP0000001'	-- CORRECTION 중인 DATA 를 나타내는 고정된 상수값
				AND			@[ca_flg]			= 'Y'
				HAVING  MAX(BB_CGO_FLG) IS NOT NULL
        )	BB_CGO_FLG
FROM		DUAL
)	,
BR AS
(
/*******************************************************************************************
INCLUDE 를 제외한 BKG RATE DATA
COVERED B/L 일 경우는 'DHF', 'NMS', 'CMS', 'ODF' 만 심사 대상으로 처리함.
*******************************************************************************************/

SELECT	CHG_CD				,
				CGO_CATE_CD		,
				RCV_TERM_CD		,
				DE_TERM_CD		,
				RAT_AS_QTY		,
				RAT_UT_CD			,
				CURR_CD				,
				CHG_UT_AMT		,
				CHG_AMT				,
				( SELECT BR.CHG_AMT / XR.USD_LOCL_XCH_RT FROM XR WHERE XR.CURR_CD = BR.CURR_CD )	CHG_USD_AMT
FROM		BKG_CHG_RT	BR
WHERE		BKG_NO				= @[bkg_no]
AND			NVL(FRT_INCL_XCLD_DIV_CD, 'N')	= 'N'
AND			(
						( SELECT RT_BL_TP_CD FROM BK ) <> 'C'
				OR	CHG_CD	IN ( 'DHF', 'NMS', 'CMS', 'ODF' )
				)
AND			@[ca_flg]			= 'N'

UNION ALL

SELECT	CHG_CD				,
				CGO_CATE_CD		,
				RCV_TERM_CD		,
				DE_TERM_CD		,
				RAT_AS_QTY		,
				RAT_UT_CD			,
				CURR_CD				,
				CHG_UT_AMT		,
				CHG_AMT				,
				( SELECT BR.CHG_AMT / XR.USD_LOCL_XCH_RT FROM XR WHERE XR.CURR_CD = BR.CURR_CD )	CHG_USD_AMT
FROM		BKG_CHG_RT_HIS	BR
WHERE		BKG_NO				= @[bkg_no]
AND			CORR_NO				= 'TMP0000001'
AND			NVL(FRT_INCL_XCLD_DIV_CD, 'N')	= 'N'
AND			(
						( SELECT RT_BL_TP_CD FROM BK ) <> 'C'
				OR	CHG_CD	IN ( 'DHF', 'NMS', 'CMS', 'ODF' )
				)
AND			@[ca_flg]			= 'Y'
)	,
B1 AS
(
/*******************************************************************************************
BKG 의 OFT ( OFT, OAR, DAR )
BL RATING UNIT 을 고려하여 변환한다.
*******************************************************************************************/

SELECT	BR.*	,
				( SELECT BR.CHG_AMT / XR.USD_LOCL_XCH_RT FROM XR WHERE XR.CURR_CD = BR.CURR_CD )	CHG_USD_AMT
FROM		(
				SELECT	BR.OFT_CMB_SEQ	,
								BR.CHG_CD				,
								BR.CGO_CATE_CD	,
								BR.RCV_TERM_CD	,
								BR.DE_TERM_CD		,
								CASE
								WHEN DECODE(CK.BL_FLG, 'Y', 'Y', 'N') = 'Y' THEN 1
								ELSE BR.RAT_AS_QTY
								END	RAT_AS_QTY	,
								CASE
								WHEN DECODE(CK.BL_FLG, 'Y', 'Y', 'N') = 'Y' THEN 'BL'
								ELSE BR.RAT_UT_CD
								END	RAT_UT_CD		,
								BR.CURR_CD			,
								SUM(BR.CHG_AMT)	CHG_AMT
				FROM		(
								SELECT	RA.OFT_CMB_SEQ	,
												BR.*
								FROM		BR		,
												(
												SELECT	DISTINCT
																OFT_CMB_SEQ
												FROM		BKG_REV_AUD_CHG_TMP
												)	RA
								WHERE		CHG_CD	IN ( 'OFT', 'OAR', 'DAR' )
								) BR	,
								(
								SELECT	OFT_CMB_SEQ	,
												CHG_CD			,
												MAX(DECODE(RAT_UT_CD, 'BL', 'Y', 'N'))	BL_FLG
								FROM	BKG_REV_AUD_CHG_TMP
								WHERE   CHG_CD	IN ( 'OFT', 'OAR', 'DAR' )
								GROUP BY
												OFT_CMB_SEQ	,
												CHG_CD
								)	CK
				WHERE		CK.OFT_CMB_SEQ(+)	= BR.OFT_CMB_SEQ
				AND			CK.CHG_CD(+)			= BR.CHG_CD
				GROUP BY
								BR.OFT_CMB_SEQ	,
								BR.CHG_CD				,
								BR.CGO_CATE_CD	,
								BR.RCV_TERM_CD	,
								BR.DE_TERM_CD		,
								CASE
								WHEN DECODE(CK.BL_FLG, 'Y', 'Y', 'N') = 'Y' THEN 1
								ELSE BR.RAT_AS_QTY
								END							,
								CASE
								WHEN DECODE(CK.BL_FLG, 'Y', 'Y', 'N') = 'Y' THEN 'BL'
								ELSE BR.RAT_UT_CD
								END							,
								BR.CURR_CD
				) BR
)	,
R1 AS
(
/*******************************************************************************************
AUDIT 의 OFT ( OFT, OAR, DAR )
BL RATING UNIT 을 고려하여 변환한다.
COVERED B/L 일 경우는 'DHF', 'NMS', 'CMS', 'ODF' 만 심사 대상으로 처리함.
*******************************************************************************************/

SELECT	RA.*	,
				( SELECT RA.CHG_AMT / XR.USD_LOCL_XCH_RT FROM XR WHERE XR.CURR_CD = RA.CURR_CD )	CHG_USD_AMT
FROM		(
				SELECT	RA.OFT_CMB_SEQ	,
								RA.CHG_CD				,
								RA.CGO_CATE_CD	,
								RA.RCV_TERM_CD	,
								RA.DE_TERM_CD		,
								CASE
								WHEN DECODE(CK.BL_FLG, 'Y', 'Y', 'N') = 'Y' THEN 1
								ELSE RA.RAT_AS_QTY
								END	RAT_AS_QTY	,
								CASE
								WHEN DECODE(CK.BL_FLG, 'Y', 'Y', 'N') = 'Y' THEN 'BL'
								ELSE RA.RAT_UT_CD
								END	RAT_UT_CD		,
								RA.CURR_CD			,
								SUM(RA.CHG_AMT)	CHG_AMT
				FROM		BKG_REV_AUD_CHG_TMP	RA	,
								(
								SELECT	CHG_CD			,
												MAX(DECODE(RAT_UT_CD, 'BL', 'Y', 'N'))	BL_FLG
								FROM	BR
								GROUP BY
												CHG_CD
								)	CK
				WHERE		CK.CHG_CD(+)			= RA.CHG_CD
				AND			RA.CHG_CD					IN ( 'OFT', 'OAR', 'DAR' )
				AND			(
										( SELECT RT_BL_TP_CD FROM BK ) <> 'C'
								OR	RA.CHG_CD	IN ( 'DHF', 'NMS', 'CMS', 'ODF' )
								)
				GROUP BY
								RA.OFT_CMB_SEQ	,
								RA.CHG_CD				,
								RA.CGO_CATE_CD	,
								RA.RCV_TERM_CD	,
								RA.DE_TERM_CD		,
								CASE
								WHEN DECODE(CK.BL_FLG, 'Y', 'Y', 'N') = 'Y' THEN 1
								ELSE RA.RAT_AS_QTY
								END							,
								CASE
								WHEN DECODE(CK.BL_FLG, 'Y', 'Y', 'N') = 'Y' THEN 'BL'
								ELSE RA.RAT_UT_CD
								END							,
								RA.CURR_CD
				)	RA
)	,
C1 AS
(
/*******************************************************************************************
OFT 가 일치하는 OFT_CMB_SEQ 를 SELECT 한다.
B1 와 R1 가 모두 값이 없으면 C1 이 값이 없어서 불일치하는 것으로 표현되므로,
UNION ALL 로 전체 OFT_CMB_SEQ 를 가져오는 부분을 추가하였음.
*******************************************************************************************/

(
SELECT	OFT_CMB_SEQ
FROM		(
				SELECT	R1.OFT_CMB_SEQ				,
								SUM(DECODE(B1.CHG_CD, NULL, 1, 0))	UMCH_CNT
				FROM		(
								SELECT	OFT_CMB_SEQ		,
												CHG_CD				,
												CGO_CATE_CD		,
												RCV_TERM_CD		,
												DE_TERM_CD		,
												RAT_AS_QTY		,
												RAT_UT_CD			,
												CURR_CD				,
												CHG_AMT				,
												CHG_USD_AMT
								FROM		R1
								WHERE		OFT_CMB_SEQ		NOT	IN	(
																							SELECT	DISTINCT
																											A.OFT_CMB_SEQ
																							FROM		(
																											SELECT	OFT_CMB_SEQ		,
																															CHG_CD				,
																															COUNT(1)	CNT
																											FROM		R1
																											GROUP BY
																															OFT_CMB_SEQ	,
																															CHG_CD
																											) A	,
																											(
																											SELECT	OFT_CMB_SEQ		,
																															CHG_CD				,
																															COUNT(1)	CNT
																											FROM		B1
																											GROUP BY
																															OFT_CMB_SEQ		,
																															CHG_CD
																											)	B
																							WHERE		B.OFT_CMB_SEQ(+)	= A.OFT_CMB_SEQ
																							AND			B.CHG_CD(+)				= A.CHG_CD
																							AND			B.CNT(+)					= A.CNT
																							AND			B.CHG_CD					IS NULL
																							)
								)	R1
								LEFT OUTER JOIN	B1
								ON			B1.OFT_CMB_SEQ	= R1.OFT_CMB_SEQ
								AND			B1.CHG_CD 			= R1.CHG_CD
								AND 		B1.CGO_CATE_CD	= R1.CGO_CATE_CD
								AND 		B1.RCV_TERM_CD	= R1.RCV_TERM_CD
								AND 		B1.DE_TERM_CD		= R1.DE_TERM_CD
								AND 		B1.RAT_AS_QTY		= R1.RAT_AS_QTY
								AND			(
														B1.RAT_UT_CD	= R1.RAT_UT_CD
												OR	(
																B1.RAT_UT_CD	IN ( '20', '40', 'HC', '45', '53' )
														AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = B1.RAT_UT_CD )	= ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = R1.RAT_UT_CD )
														)
												OR	(
																R1.RAT_UT_CD	IN ( '20', '40', 'HC', '45', '53' )
														AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = R1.RAT_UT_CD )	= ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = B1.RAT_UT_CD )
														)
												)
								AND			ABS(B1.CHG_USD_AMT - R1.CHG_USD_AMT) <= 5
				GROUP BY	R1.OFT_CMB_SEQ
				)
WHERE		UMCH_CNT	= 0

INTERSECT

SELECT	B1.OFT_CMB_SEQ
FROM		(
				SELECT	OFT_CMB_SEQ	,
								SUM(CHG_USD_AMT)	CHG_USD_AMT
				FROM		B1
				GROUP BY	OFT_CMB_SEQ
				)	B1	,
				(
				SELECT	OFT_CMB_SEQ	,
								SUM(CHG_USD_AMT)	CHG_USD_AMT
				FROM		R1
				GROUP BY	OFT_CMB_SEQ
				)	R1
WHERE		R1.OFT_CMB_SEQ	= B1.OFT_CMB_SEQ
AND			ABS(B1.CHG_USD_AMT - R1.CHG_USD_AMT) <= 5
)

UNION ALL

SELECT	DISTINCT
				OFT_CMB_SEQ
FROM		BKG_REV_AUD_CHG_TMP
WHERE	( SELECT COUNT(1) FROM B1 ) = 0
AND		( SELECT COUNT(1) FROM R1 ) = 0
)

SELECT	'F'	UMCH_TP_CD					,
				'B'	UMCH_BKG_CTRT_TP_CD	,
				ROW_NUMBER() OVER ( ORDER BY DECODE(CHG_CD, 'OFT', 1, 'OAR', 2, 'DAR', 3, 4), RAT_UT_CD )	UMCH_ITM_SEQ	,
				CHG_CD									,
				RAT_UT_CD								,
				RAT_AS_QTY	RAT_UT_QTY	,
				CURR_CD									,
				CHG_UT_AMT	FRT_RT_AMT
FROM		BR
WHERE		CHG_CD				NOT IN ( 'OFT', 'OAR', 'DAR' )

UNION ALL

SELECT	'F'	UMCH_TP_CD					,
				'C'	UMCH_BKG_CTRT_TP_CD	,
				ROW_NUMBER() OVER ( ORDER BY CHG_CD, RAT_UT_CD )	UMCH_ITM_SEQ	,
				CHG_CD									,
				RAT_UT_CD								,
				RAT_AS_QTY	RAT_UT_QTY	,
				CURR_CD									,
				CHG_UT_AMT	FRT_RT_AMT
FROM		BKG_REV_AUD_CHG_TMP
WHERE		OFT_CMB_SEQ
				=
				(
				SELECT	OFT_CMB_SEQ
				FROM		(
								SELECT	OFT_CMB_SEQ		,
												ROW_NUMBER() OVER ( ORDER BY OFT_MTCH_PRIO, CHG_AMT, OFT_CMB_SEQ )	ROW_NUMBER
								FROM		(
												SELECT	RA.OFT_CMB_SEQ	,
																CASE
																WHEN OFT_CMB_SEQ	IN ( SELECT OFT_CMB_SEQ FROM C1 ) THEN 1
																ELSE 2
																END	OFT_MTCH_PRIO	,
																SUM(RA.RAT_AS_QTY * RA.CHG_UT_AMT / DECODE(RA.RAT_UT_CD, 'PC', 100, 1) / XR.USD_LOCL_XCH_RT)	CHG_AMT
												FROM		BKG_REV_AUD_CHG_TMP	RA	,
																XR
												WHERE		XR.CURR_CD			= RA.CURR_CD
												AND			(
																		( SELECT RT_BL_TP_CD FROM BK ) <> 'C'
																OR	RA.CHG_CD	IN ( 'DHF', 'NMS', 'CMS', 'ODF' )
																)
												GROUP BY
																RA.OFT_CMB_SEQ
								        )
								)
				WHERE		ROW_NUMBER	= 1
				)
AND			CHG_CD	NOT IN ( 'OFT', 'OAR', 'DAR' )
AND			(
						( SELECT RT_BL_TP_CD FROM BK ) <> 'C'
				OR	CHG_CD	IN ( 'DHF', 'NMS', 'CMS', 'ODF' )
				)			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="ca_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
