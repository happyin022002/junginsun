<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaInquiryDBDAOSearchMonthlyQuotaInquiry0126Tab03HRRSQL">
			<desc><![CDATA[분기별별 확정된 내용을 Bound, RHQ, Area Director,C.Office, Sub Trade, Lane 별로 Grouping 된 형태로 조회 한다. (주요 table saq_mon_cfm_qta, saq_mon_cfm_tgt_vvd)]]></desc>
			<sql><![CDATA[
WITH TMP_INPUT_PARAMS AS  
    (SELECT DISTINCT
        @[year] AS BSE_YR, 
        @[quarter] AS BSE_QTR_CD, 
        @[year]||

    #if (${month} < 10) 
		'0'||@[month]
    #else 
		@[month]
    #end
    
		AS YRMON_1,
 
        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||

    #if (${month} < 10) 
		'0'||@[month]
    #else 
		@[month]
    #end
    
	, 'YYYYMM'), 1), 'YYYYMM') AS YRMON_2, 

        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||

    #if (${month} < 10) 
		'0'||@[month]
    #else 
		@[month]
    #end

	, 'YYYYMM'), 2), 'YYYYMM') AS YRMON_3, 

        @[targetGrp] AS SAQ_TGT_GRP_CD, 
        @[version] AS RLSE_VER_NO, 		
        @[trade] AS TRD_CD, 
		decode(@[dirCd],'ALL',null,@[dirCd]) AS DIR_CD, 
        @[rhqCd] AS RHQ_CD  			
     FROM   DUAL)  
    ,MAP AS
    (SELECT 
         DISTINCT
         SMR.TRD_CD,    
         SMR.DIR_CD, 
         SMR.RHQ_CD AS RHQ_CD,
         NVL(SMR.AQ_CD, '  ') AS AQ_CD,
         SMR.RGN_OFC_CD AS OFC_CD,
         VVD.SUB_TRD_CD,
         SMR.RLANE_CD,  
         SMR.BSE_YR||SMR.BSE_MON AS YRMON
    FROM SAQ_MON_CFM_QTA SMR 
         JOIN  
         TMP_INPUT_PARAMS INP  
         ON  
         (  
            SMR.BSE_YR = INP.BSE_YR AND  
            SMR.BSE_QTR_CD = INP.BSE_QTR_CD AND  
            SMR.MQTA_RLSE_VER_NO = INP.RLSE_VER_NO AND  
            SMR.TRD_CD = INP.TRD_CD AND  
            SMR.CONV_DIR_CD LIKE INP.DIR_CD||'%' AND  
            SMR.RHQ_CD LIKE INP.RHQ_CD||'%' AND 
            SMR.QTA_TGT_CD = @[selType]												
         )     
         JOIN										 		
       	   SAQ_MON_CFM_TGT_VVD VVD								 	
         ON										 		
         (										 		
            VVD.MQTA_RLSE_VER_NO = SMR.MQTA_RLSE_VER_NO AND				 		
            VVD.BSE_YR = SMR.BSE_YR AND							 		
            VVD.BSE_QTR_CD = SMR.BSE_QTR_CD AND						 		
            VVD.BSE_MON = SMR.BSE_MON AND						 		
            VVD.TRD_CD = SMR.TRD_CD AND							 		
            VVD.RLANE_CD = SMR.RLANE_CD AND						 		
            VVD.DIR_CD = SMR.DIR_CD AND							 		
            VVD.VSL_CD = SMR.VSL_CD AND							 		
            VVD.SKD_VOY_NO = SMR.SKD_VOY_NO AND						 		
            VVD.SKD_DIR_CD = SMR.SKD_DIR_CD						 		
         )												
         )     		
    ,TEMP_SMR AS
    (SELECT 
         DISTINCT
         SMR.TRD_CD,    
         SMR.DIR_CD, 
         VVD.SUB_TRD_CD,
         SMR.RLANE_CD,  
         SMR.BSE_MON
    FROM SAQ_MON_CFM_QTA SMR 
         JOIN  
         TMP_INPUT_PARAMS INP  
         ON  
         (  
            SMR.BSE_YR = INP.BSE_YR AND  
            SMR.BSE_QTR_CD = INP.BSE_QTR_CD AND  
            SMR.MQTA_RLSE_VER_NO = INP.RLSE_VER_NO AND  
            SMR.TRD_CD = INP.TRD_CD AND  
            SMR.CONV_DIR_CD LIKE INP.DIR_CD||'%' AND  
            SMR.RHQ_CD LIKE INP.RHQ_CD||'%' AND 
            SMR.QTA_TGT_CD = @[selType]										
         )
         JOIN										 		
       	   SAQ_MON_CFM_TGT_VVD VVD								 	
         ON										 		
         (										 		
            VVD.MQTA_RLSE_VER_NO = SMR.MQTA_RLSE_VER_NO AND				 		
            VVD.BSE_YR = SMR.BSE_YR AND							 		
            VVD.BSE_QTR_CD = SMR.BSE_QTR_CD AND						 		
            VVD.BSE_MON = SMR.BSE_MON AND						 		
            VVD.TRD_CD = SMR.TRD_CD AND							 		
            VVD.RLANE_CD = SMR.RLANE_CD AND						 		
            VVD.DIR_CD = SMR.DIR_CD AND							 		
            VVD.VSL_CD = SMR.VSL_CD AND							 		
            VVD.SKD_VOY_NO = SMR.SKD_VOY_NO AND						 		
            VVD.SKD_DIR_CD = SMR.SKD_DIR_CD						 		
         )												
         )
    ,VVD AS 
    (SELECT 
            VVD.TRD_CD, 
            VVD.CONV_DIR_CD, 
            VVD.SUB_TRD_CD, 
            VVD.RLANE_CD, 
            VVD.BSE_YR||VVD.BSE_MON AS YRMON, 
            SUM(VVD.FNL_BSA_CAPA) AS BSA, 
            COUNT(*) AS VOYAGE 
     FROM   SAQ_MON_CFM_TGT_VVD VVD
            JOIN 
            TMP_INPUT_PARAMS INP
            ON
            ( 
               VVD.BSE_YR = INP.BSE_YR AND
               VVD.BSE_QTR_CD = INP.BSE_QTR_CD AND
               VVD.MQTA_RLSE_VER_NO = INP.RLSE_VER_NO AND
               VVD.TRD_CD LIKE INP.TRD_CD||'%' AND
               VVD.CONV_DIR_CD LIKE INP.DIR_CD||'%'
            )
            JOIN
            TEMP_SMR SMR
            ON
            (
               SMR.TRD_CD = VVD.TRD_CD AND
               SMR.DIR_CD = VVD.DIR_CD AND
               SMR.SUB_TRD_CD = VVD.SUB_TRD_CD AND
               SMR.RLANE_CD = VVD.RLANE_CD AND
               SMR.BSE_MON = VVD.BSE_MON            
            )               
     GROUP BY VVD.TRD_CD, VVD.CONV_DIR_CD, VVD.SUB_TRD_CD, VVD.RLANE_CD, VVD.BSE_YR||VVD.BSE_MON)      
SELECT  
    KEY,  
    SLEVEL,   
    DIR_CD,  
    RHQ_CD,  
    AQ_CD,  
    OFC_CD,
    '' SUB_TRD_CD,  
    '' RLANE_CD, 
    '' AS CONV_DIR_CD,  
    ROW_SEQ,  
    REPLACE(TEXT, '(P)', '') AS ITEM_TEXT, 
    REPLACE(ITEM, '(P)', '') AS ITEM,	
    VAL_00,   
    VAL_01,   
    VAL_02,   
    VAL_03
FROM  (  
    SELECT  
          MIN(KEY) AS KEY, 
          SLEVEL, 
          CASE SLEVEL
             WHEN 1 THEN 'TOTAL'
             ELSE SMR.DIR_CD
          END DIR_CD, 
          CASE SLEVEL
             WHEN 1 THEN ''
             WHEN 2 THEN 'TOTAL'
             ELSE SMR.RHQ_CD
          END RHQ_CD,             
          CASE SLEVEL
             WHEN 1 THEN ''
             WHEN 2 THEN ''
             WHEN 3 THEN 'TOTAL'
             ELSE SMR.AQ_CD
          END AQ_CD,
          CASE SLEVEL
             WHEN 1 THEN ''
             WHEN 2 THEN ''
             WHEN 3 THEN ''
             WHEN 4 THEN 'TOTAL'
             ELSE SMR.OFC_CD
          END OFC_CD,  
          ITM.ROW_SEQ,  
          ITM.TEXT,  
          CASE  
             WHEN ITM.CODE IN('05', '07', '08', '11', '12') THEN ITM.TEXT || '*'  
             ELSE ITM.TEXT  
          END ITEM,  


	    NVL(DECODE( ITM.CODE,  '01', SUM(BSA),                     			
	                 '02', SUM(VOYAGE),                           			
	                 '03', SUM(SMR.LOD),                                 		
	                 '04', DECODE(SUM(BSA), 0, 0, SUM(SMR.LOD)/SUM(BSA)*100), 	
	                 '05', SUM(SMR.REV),                                 		
	                 '06', DECODE(SUM(LOD), 0, 0, SUM(REV)/SUM(LOD)*1000),       
	                 '07', SUM(SMR.CM),                                  		
	                 '08', SUM(SMR.RA_CM),                               		
	                 '09', DECODE(SUM(LOD), 0, 0, SUM(CM)*1000/SUM(LOD)),        
	                 '10', DECODE(SUM(LOD), 0, 0, SUM(RA_CM)*1000/SUM(LOD)),     
	                 '11', SUM(SMR.OP),                                  		
	                 '12', SUM(SMR.RA_OP),                               		
	                 '13', DECODE(SUM(LOD), 0, 0, SUM(OP)*1000/SUM(LOD)),        
	                 '14', DECODE(SUM(LOD), 0, 0, SUM(RA_OP)*1000/SUM(LOD)) ), 0) AS VAL_00,


	    NVL(SUM(DECODE(SMR.YRMON, INP.YRMON_1,	
	        DECODE( ITM.CODE,  '01', (BSA),                     			
	                 '02', (VOYAGE),                           			
	                 '03', (SMR.LOD),                                 		
	                 '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),  			
	                 '05', (SMR.REV),                                 		
	                 '06', DECODE(LOD, 0, 0, (REV)/(LOD)*1000),              
	                 '07', (SMR.CM),                                  		
	                 '08', (SMR.RA_CM),                               		
	                 '09', DECODE(LOD, 0, 0, (CM)*1000/(LOD)),               
	                 '10', DECODE(LOD, 0, 0, (RA_CM)*1000/(LOD)),            
	                 '11', (SMR.OP),                                  		
	                 '12', (SMR.RA_OP),                               		
	                 '13', DECODE(LOD, 0, 0, (OP)*1000/(LOD)),               
	                 '14', DECODE(LOD, 0, 0, (RA_OP)*1000/(LOD)) ))), 0) AS VAL_01,


	    NVL(SUM(DECODE(SMR.YRMON, INP.YRMON_2,                     		
	        DECODE( ITM.CODE,  '01', (BSA),                     			
	                 '02', (VOYAGE),                           			
	                 '03', (SMR.LOD),                                 		
	                 '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),  			
	                 '05', (SMR.REV),                                 		
	                 '06', DECODE(LOD, 0, 0, (REV)/(LOD)*1000),              
	                 '07', (SMR.CM),                                  		
	                 '08', (SMR.RA_CM),                               		
	                 '09', DECODE(LOD, 0, 0, (CM)*1000/(LOD)),               
	                 '10', DECODE(LOD, 0, 0, (RA_CM)*1000/(LOD)),            
	                 '11', (SMR.OP),                                  		
	                 '12', (SMR.RA_OP),                               		
	                 '13', DECODE(LOD, 0, 0, (OP)*1000/(LOD)),               
	                 '14', DECODE(LOD, 0, 0, (RA_OP)*1000/(LOD)) ))), 0) AS VAL_02,
				

	    NVL(SUM(DECODE(SMR.YRMON, INP.YRMON_3,                     		
	        DECODE( ITM.CODE,  '01', (BSA),                     			
	                 '02', (VOYAGE),                           			
	                 '03', (SMR.LOD),                                 		
	                 '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),  			
	                 '05', (SMR.REV),                                 		
	                 '06', DECODE(LOD, 0, 0, (REV)/(LOD)*1000),              
	                 '07', (SMR.CM),                                  		
	                 '08', (SMR.RA_CM),                               		
	                 '09', DECODE(LOD, 0, 0, (CM)*1000/(LOD)),               
	                 '10', DECODE(LOD, 0, 0, (RA_CM)*1000/(LOD)),            
	                 '11', (SMR.OP),                                  		
	                 '12', (SMR.RA_OP),                               		
	                 '13', DECODE(LOD, 0, 0, (OP)*1000/(LOD)),               
	                 '14', DECODE(LOD, 0, 0, (RA_OP)*1000/(LOD)) ))), 0) AS VAL_03	

		
    FROM  (  
            SELECT
                  KEY,
                  CASE G_FLAG
                     WHEN '1111' THEN 1
                     WHEN '0111' THEN 2
                     WHEN '0011' THEN 3
                     WHEN '0001' THEN 4
                     WHEN '0000' THEN 5
                  END SLEVEL,                  
                  DIR_CD,
                  RHQ_CD,
                  AQ_CD,
                  OFC_CD,
                  YRMON,
                  0 AS BSA,
                  CASE G_FLAG
                     WHEN '1111' THEN VOYAGE_LVL_1
                     WHEN '0111' THEN VOYAGE_LVL_2
                     WHEN '0011' THEN VOYAGE_LVL_2
                     WHEN '0001' THEN VOYAGE_LVL_2
                     WHEN '0000' THEN VOYAGE_LVL_5
                  END VOYAGE,
                  LOD,
                  REV,
                  CM,
                  RA_CM,
                  OP,
                  RA_OP            
            FROM  (
                    SELECT
                          G_FLAG,
                          KEY,
                          CONV_DIR_CD DIR_CD,
                          RHQ_CD,
                          AQ_CD,
                          OFC_CD,
                          YRMON, 
                          (SELECT SUM(VOYAGE) 
                           FROM  VVD 
                           WHERE 1 = 1 
                           AND   YRMON = SMR.YRMON) AS VOYAGE_LVL_1,
                          (SELECT SUM(VOYAGE) 
                           FROM  VVD 
                           WHERE 1 = 1 
                           AND   YRMON = SMR.YRMON
                           AND   CONV_DIR_CD = SMR.CONV_DIR_CD) AS VOYAGE_LVL_2,                          
                          (SELECT SUM(VOYAGE) 
                           FROM  VVD 
                           WHERE 1 = 1 
                           AND   YRMON = SMR.YRMON
                           AND   CONV_DIR_CD = SMR.CONV_DIR_CD 
                           AND   SUB_TRD_CD||RLANE_CD IN(SELECT SUB_TRD_CD||RLANE_CD 
                                                         FROM   MAP 
                                                         WHERE  1 = 1 
                                                         AND    YRMON = SMR.YRMON
                                                         AND    CONV_DIR_CD = SMR.CONV_DIR_CD 
                                                         AND    RHQ_CD = SMR.RHQ_CD 
                                                         AND    AQ_CD = SMR.AQ_CD
                                                         AND    OFC_CD = SMR.OFC_CD)) AS VOYAGE_LVL_5,
                          (SELECT SUM(VOYAGE) 
                           FROM  VVD 
                           WHERE 1 = 1 
                           AND   YRMON = SMR.YRMON
                           AND   CONV_DIR_CD = SMR.CONV_DIR_CD 
                           AND   RLANE_CD IN(SELECT RLANE_CD 
                                             FROM   MAP 
                                             WHERE  1 = 1 
                                             AND    YRMON = SMR.YRMON
                                             AND    CONV_DIR_CD = SMR.CONV_DIR_CD 
                                             AND    RHQ_CD = SMR.RHQ_CD 
                                             AND    AQ_CD = SMR.AQ_CD
                                             AND    OFC_CD = SMR.OFC_CD)) AS VOYAGE_LVL_6,                                                        
                          LOD,
                          REV,
                          CM,
                          RA_CM,
                          OP,
                          RA_OP            
                    FROM  (    
                            SELECT   
                                 GROUPING(CONV_DIR_CD)||GROUPING(RHQ_CD)||GROUPING(AQ_CD)||GROUPING(OFC_CD)AS G_FLAG,
                                 MIN(SMR.CONV_DIR_CD||SMR.RHQ_CD) AS KEY,
                                 SMR.CONV_DIR_CD,  
                                 SMR.RHQ_CD,
                                 SMR.AQ_CD,
                                 SMR.OFC_CD,  
                                 SMR.YRMON,                                      
                                 SUM(LOD) AS LOD,
                                 SUM(REV) AS REV,
                                 SUM(CM) AS CM,
                                 SUM(RA_CM) AS RA_CM,
                                 SUM(OP) AS OP,
                                 SUM(RA_OP) AS RA_OP
                            FROM (    
                                    SELECT  
                                         MIN(SMR.TRD_CD) AS TRD_CD,  
                                         SMR.DIR_CD,  
                                         SMR.CONV_DIR_CD,  
                                         SMR.RHQ_CD AS RHQ_CD, 
                                         NVL(SMR.AQ_CD, '  ') AS AQ_CD,
                                         SMR.RGN_OFC_CD AS OFC_CD, 
                                         SMR.BSE_YR||SMR.BSE_MON AS YRMON,


                         SUM(SMR.LOD_QTY) AS LOD, 
                         SUM(SMR.GRS_RPB_REV*SMR.LOD_QTY)/1000 AS REV,  
                         SUM((SMR.GRS_RPB_REV-SMR.CM_UC_AMT)*SMR.LOD_QTY)/1000 AS CM, 
                         SUM((SMR.GRS_RPB_REV-SMR.RA_CM_UC_AMT)*SMR.LOD_QTY)/1000 AS RA_CM,  
                         SUM((SMR.GRS_RPB_REV-SMR.OPFIT_UC_AMT)*SMR.LOD_QTY)/1000 AS OP, 
                         SUM((SMR.GRS_RPB_REV-SMR.RA_OPFIT_UC_AMT)*SMR.LOD_QTY )/1000 AS RA_OP 

		
                                    FROM SAQ_MON_CFM_QTA SMR  
                                         JOIN  
                                         TMP_INPUT_PARAMS INP  
                                         ON  
                                         (  
                                            SMR.BSE_YR = INP.BSE_YR AND  
                                            SMR.BSE_QTR_CD = INP.BSE_QTR_CD AND  
                                            SMR.MQTA_RLSE_VER_NO = INP.RLSE_VER_NO AND  
                                            SMR.TRD_CD = INP.TRD_CD AND  
                                            SMR.CONV_DIR_CD LIKE INP.DIR_CD||'%' AND  
                                            SMR.RHQ_CD LIKE INP.RHQ_CD||'%' AND 
           								   SMR.QTA_TGT_CD = @[selType]												
                                         )  
										 JOIN										 
                                       	   SAQ_MON_CFM_TGT_VVD VVD								 
										 ON										 
                                         (										 
                                            VVD.MQTA_RLSE_VER_NO = SMR.MQTA_RLSE_VER_NO AND				 
                                            VVD.BSE_YR = SMR.BSE_YR AND							 
                                            VVD.BSE_QTR_CD = SMR.BSE_QTR_CD AND						 
                                            VVD.BSE_MON = SMR.BSE_MON AND						 
                                            VVD.TRD_CD = SMR.TRD_CD AND							 
                                            VVD.RLANE_CD = SMR.RLANE_CD AND						 
                                            VVD.DIR_CD = SMR.DIR_CD AND							 
                                            VVD.VSL_CD = SMR.VSL_CD AND							 
                                            VVD.SKD_VOY_NO = SMR.SKD_VOY_NO AND						 
                                            VVD.SKD_DIR_CD = SMR.SKD_DIR_CD						 
                                         )     										
                                    GROUP BY SMR.DIR_CD, SMR.CONV_DIR_CD, SMR.RHQ_CD, NVL(SMR.AQ_CD, '  '), SMR.RGN_OFC_CD, SMR.BSE_YR||SMR.BSE_MON
                                  ) SMR  
                            GROUP BY GROUPING SETS((SMR.YRMON),  
                                                    (SMR.CONV_DIR_CD, SMR.YRMON), 
                                                    (SMR.CONV_DIR_CD, SMR.RHQ_CD, SMR.YRMON), 
                                                    (SMR.CONV_DIR_CD, SMR.RHQ_CD, SMR.AQ_CD, SMR.YRMON), 
                                                    (SMR.CONV_DIR_CD, SMR.RHQ_CD, SMR.AQ_CD, SMR.OFC_CD, SMR.YRMON))     
                          ) SMR                              
                  ) SMR                                                                                    
          ) SMR  
          JOIN  
          (  
            SELECT  INTG_CD_VAL_CTNT AS CODE,  
                    INTG_CD_VAL_DP_DESC AS TEXT,  
                    INTG_CD_VAL_DP_SEQ AS ROW_SEQ  
            FROM  COM_INTG_CD_DTL  
            WHERE INTG_CD_ID = 'CD01390'  

	#if($ilist.size() > 0)
            AND   ('ALL' = @[items0] OR (INTG_CD_VAL_DP_DESC IN (
                #foreach ($key in ${ilist})
                    #if($velocityCount < $ilist.size())
                    '$key',
                    #else
                    '$key'
                    #end
                #end
                   )) )  
	#end

          ) ITM  
          ON 1 = 1   
          JOIN 
          TMP_INPUT_PARAMS INP 
          ON 1 = 1           
      GROUP BY SMR.SLEVEL, SMR.DIR_CD, SMR.RHQ_CD, SMR.AQ_CD, SMR.OFC_CD, ITM.ROW_SEQ, ITM.TEXT, ITM.CODE  
      ) SMR  
ORDER BY  KEY, SLEVEL, AQ_CD DESC, OFC_CD,ROW_SEQ			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="quarter" type="12" value="" out="N"/>
				<param name="month" type="12" value="" out="N"/>
				<param name="targetGrp" type="12" value="" out="N"/>
				<param name="version" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="dirCd" type="12" value="" out="N"/>
				<param name="rhqCd" type="12" value="" out="N"/>
				<param name="selType" type="12" value="" out="N"/>
				<param name="items0" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
