<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="StatusReportDBDAOSearchBokCntrListRSQL">
			<desc><![CDATA[DAOSearchBokCntrListRSQL]]></desc>
			<sql><![CDATA[
SELECT NVL(COUNT(DISTINCT BKG_Z.BKG_NO) OVER(),0) TOTAL_BKG,
	   NVL(COUNT(DISTINCT BKG_Z.CNTR_NO) OVER(),0) TOTAL_CNTR,
	   NVL(SUM(DECODE(CNTR_1,1,PCK_QTY,0)) OVER(),0) AS TTL_PCK_QTY,
	   NVL(SUM(DECODE(BKG_1,1,TEU,0)) OVER(),0) AS TTL_TEU,
	   NVL(SUM(DECODE(BKG_1,1,FEU,0)) OVER(),0) AS TTL_FEU,
	   RTRIM(TO_CHAR(SUM(DECODE(CNTR_1,1,GRS_WGT_KG,0)) OVER(), 'FM999,999,999.9'), '.') AS TTL_GRS_WGT_KG,
	   RTRIM(TO_CHAR(SUM(DECODE(CNTR_1,1,GRS_WGT_LB,0)) OVER(), 'FM999,999,999.9'), '.') AS TTL_GRS_WGT_LB,
	   RTRIM(TO_CHAR(SUM(DECODE(CNTR_1,1,TARE_WGT,0)) OVER(), 'FM999,999,999.9'), '.') AS TTL_TARE_WGT_KG,
	   RTRIM(TO_CHAR(SUM(DECODE(CNTR_1,1,TARE_LBS,0)) OVER(), 'FM999,999,999.9'), '.') AS TTL_TARE_WGT_LB,
	   RTRIM(TO_CHAR(SUM(DECODE(BKG_1,1,CGO_WGT_KG,0)) OVER(), 'FM999,999,999.9'), '.') AS TTL_CGO_WGT_KG,
	   RTRIM(TO_CHAR(SUM(DECODE(BKG_1,1,CGO_WGT_LB,0)) OVER(), 'FM999,999,999.9'), '.') AS TTL_CGO_WGT_LB,
	   CASE WHEN GRS_WGT_KG>=0 AND GRS_WGT_KG<10000 THEN 'L'
            WHEN GRS_WGT_KG>10000 AND GRS_WGT_KG<=16000 THEN 'M'
            WHEN GRS_WGT_KG>16000 AND GRS_WGT_KG<=22000 THEN 'H'
            ELSE 'XH'
       END AS WGT_BND,
       (SELECT YD_NM
          FROM MDM_YARD MDM 
         WHERE MDM.YD_CD = BKG_Z.IB_PKUP_YD_CD
           AND ROWNUM = 1) AS IB_PKUP_YD_NM,
       COP_EE.EST_PKUP_DT,
       COP_EE.ACT_PKUP_DT,
       COP_EE.MTY_PKUP_LOC,
       COP_IO.EST_RTN_DT,
       COP_IO.ACT_RTN_DT,
       COP_IO.FULL_RTN_LOC,
       COP_MT.MTY_RTN_LOC,
       SUBSTR(SCE_COP_DLV_DT_FNC(COP_EE.COP_NO, BKG_Z.BKG_NO), 1, INSTR(SCE_COP_DLV_DT_FNC(COP_EE.COP_NO, BKG_Z.BKG_NO), '#', 1, 1)-1 ) AS CGO_AVAL_DT,
       NVL((SELECT /*+ INDEX_DESC(MN XPKPRI_TAA_MN)*/
               MDM.CUST_LGL_ENG_NM
          FROM PRI_TAA_MN MN,
               PRI_TAA_HDR HDR,
               MDM_CUSTOMER MDM
         WHERE MN.TAA_PROP_NO = HDR.TAA_PROP_NO
           AND HDR.TAA_NO = BKG_Z.TAA_NO
           AND CFM_FLG = 'Y'
           AND MDM.CUST_CNT_CD = MN.CTRT_CUST_CNT_CD
           AND MDM.CUST_SEQ = MN.CTRT_CUST_SEQ
           AND ROWNUM = 1    --TAA
       ),NVL(
       (SELECT /*+ INDEX_DESC(MN XPKPRI_RP_MN)*/
               MDM.CUST_LGL_ENG_NM
          FROM PRI_RP_MN MN,
               PRI_RP_HDR HDR,
               MDM_CUSTOMER MDM
         WHERE MN.PROP_NO = HDR.PROP_NO
           AND HDR.RFA_NO = BKG_Z.RFA_NO
           AND PROP_STS_CD = 'A'
           AND MDM.CUST_CNT_CD = MN.CTRT_CUST_CNT_CD
           AND MDM.CUST_SEQ = MN.CTRT_CUST_SEQ
           AND ROWNUM = 1   --RFA
       ),
       (SELECT /*+ INDEX_DESC(MN XPKPRI_SP_MN)*/
               MDM.CUST_LGL_ENG_NM
          FROM PRI_SP_MN MN,
               PRI_SP_HDR HDR,
               PRI_SP_CTRT_PTY PTY,
               MDM_CUSTOMER MDM
         WHERE MN.PROP_NO = HDR.PROP_NO
           AND MN.PROP_NO = PTY.PROP_NO
           AND MN.AMDT_SEQ = PTY.AMDT_SEQ
           AND HDR.SC_NO = BKG_Z.SC_NO
           AND PTY.PRC_CTRT_PTY_TP_CD = 'C'
           AND MN.PROP_STS_CD = 'F'
           AND MDM.CUST_CNT_CD = PTY.CUST_CNT_CD
           AND MDM.CUST_SEQ = PTY.CUST_SEQ
           AND ROWNUM = 1   --SC
       ))) AS CTRT_CUST,
       DECODE(NVL(CMRN_REF_NO,''),'','N','Y') AS XPT_DECL_RCV,
       BKG_Z.*
  FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY BK.BKG_NO ORDER BY CNTR.CNTR_NO) AS BKG_1,
               ROW_NUMBER() OVER (PARTITION BY BK.BKG_NO, CNTR.CNTR_NO ORDER BY CM.CNTR_MF_SEQ) AS CNTR_1,
        --BKG & B/L Info
               BK.BL_NO,
               ISS.OBL_ISS_OFC_CD,
               TO_CHAR(BK.CRE_DT,'YYYY-MM-DD HH24:MI') AS CRE_DT,
               BK.BKG_NO,
               BK.BKG_OFC_CD,
               BK.CRE_USR_ID,
               BK.BKG_STS_CD,
               BK.CTRT_SREP_CD,
               BK.OB_SREP_CD,
               NVL((SELECT 'Y' FROM BKG_CHG_RT WHERE BKG_NO = BK.BKG_NO AND ROWNUM=1),'N') AS RATE_STS,
               (SELECT LOC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = BK.BKG_OFC_CD) AS SLS_AREA,
               BK.OB_SREP_CD AS SLS_CD,
               BK.OB_SLS_OFC_CD,
               BK.SCAC_CD,
               BK.STWG_CD AS SPCL_HNDL_INST,
               BK.SPLIT_FLG,
               REPLACE(BK.XTER_RMK,CHR(10),' ') AS XTER_RMK,
               REPLACE(BK.INTER_RMK,CHR(10),' ') AS INTER_RMK,
               REPLACE(BK.VNDR_RMK,CHR(10),' ') AS VNDR_RMK,
        --Cargo & Commodity
               CM.MEAS_QTY AS LCL_MEAS_QTY,
               CM.MEAS_UT_CD AS LCL_MEAS_UT_CD,
               NVL(SUBSTR(DECODE(BK.DCGO_FLG,'Y',',DG','')||DECODE(BK.RC_FLG,'Y',',RF','')||DECODE(BK.AWK_CGO_FLG,'Y',',AW','')||DECODE(BK.BB_CGO_FLG,'Y',',BB','')||DECODE(BK.RD_CGO_FLG,'Y',',RD',''),2),'DR') AS CGO_N,
               ROUND(DECODE(DOC.WGT_UT_CD, 'KGS', DOC.ACT_WGT, ROUND(NVL(DOC.ACT_WGT,0)*0.4536,3)),1) AS CGO_WGT_KG,--BKG별 WEIGHT
               ROUND(DECODE(DOC.WGT_UT_CD, 'KGS', ROUND(NVL(DOC.ACT_WGT,0)*2.2046,3), DOC.ACT_WGT),2) AS CGO_WGT_LB,
               BK.CMDT_CD AS CMDT_CD,
               (SELECT CMDT_NM FROM MDM_COMMODITY WHERE CMDT_CD = BK.CMDT_CD) AS CMDT_DESC,
               CM.CMDT_HS_CD AS CMDT_HS_CD,
               SUBSTR(CM.CMDT_HS_CD,1,4) AS CMDT_HS_GRP_CD,
               CM.HAMO_TRF_CD AS HTS_CD,
               CM.NCM_NO,
               CM.PCK_QTY AS LCL_PCK_QTY,
               DECODE(BK.RCV_TERM_CD, 'S', BK.POR_CD, '') AS OB_CFS_LOC,
               REPLACE(CM.CNTR_MF_GDS_DESC,CHR(10),' ') AS LCL_CNTR_MF_GDS_DESC,
               CM.PCK_TP_CD AS LCL_PCK_TP_CD,
        --Container
               NVL((SELECT TO_CHAR(NVL(MNL_SET_DT,SYS_SET_DT),'YYYY-MM-DD HH24:MI') FROM BKG_CLZ_TM WHERE CLZ_TP_CD = 'F' AND BKG_NO=BK.BKG_NO),(SELECT TO_CHAR(NVL(MNL_SET_DT,SYS_SET_DT),'YYYY-MM-DD HH24:MI') FROM BKG_CLZ_TM WHERE CLZ_TP_CD='R' AND BKG_NO=BK.BKG_NO)) AS CGO_CUTOFF_DT,
               ROUND(DECODE(CNTR.WGT_UT_CD, 'KGS', CNTR.CNTR_WGT, ROUND(NVL(CNTR.CNTR_WGT,0)*0.4536,3)),1) AS GRS_WGT_KG,--CNTR별 WEIGHT
               ROUND(DECODE(CNTR.WGT_UT_CD, 'KGS', ROUND(NVL(CNTR.CNTR_WGT,0)*2.2046,3), CNTR.CNTR_WGT),2) AS GRS_WGT_LB,
               CNTR.CNTR_NO,
               CNTR.CNTR_VOL_QTY,
               (SELECT SUM(DECODE(CNTR_SZ_CD, 2, 1, 2) * OP_CNTR_QTY)
                  FROM BKG_QUANTITY QTY,
                       MDM_CNTR_TP_SZ MDM
                 WHERE BKG_NO = BK.BKG_NO
                   AND QTY.CNTR_TPSZ_CD = MDM.CNTR_TPSZ_CD) AS TEU,
               (SELECT SUM(DECODE(CNTR_SZ_CD, 2, 0.5, 1) * OP_CNTR_QTY)
                  FROM BKG_QUANTITY QTY,
                       MDM_CNTR_TP_SZ MDM
                 WHERE BKG_NO = BK.BKG_NO
                   AND QTY.CNTR_TPSZ_CD = MDM.CNTR_TPSZ_CD) AS FEU,
               CNTR.CNTR_TPSZ_CD,
               CNTR.CNMV_STS_CD,
               (SELECT INTG_CD_VAL_DESC FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD00252' AND INTG_CD_VAL_CTNT = CNTR.CNMV_STS_CD) AS CNMV_STS_DESC,
               NVL((SELECT B.TARE_WGT
                      FROM MST_CONTAINER A
                          ,MST_CNTR_SPEC B
                     WHERE A.CNTR_SPEC_NO = B.CNTR_SPEC_NO
                       AND A.CNTR_NO = CNTR.CNTR_NO)
                 , (SELECT CNTR_TPSZ_TARE_WGT
                      FROM MDM_CNTR_TP_SZ MDM
                     WHERE MDM.CNTR_TPSZ_CD = CNTR.CNTR_TPSZ_CD)
               ) AS TARE_WGT,
               NVL((SELECT ROUND(B.TARE_WGT * 0.00045,2)
                      FROM MST_CONTAINER A
                          ,MST_CNTR_SPEC B
                     WHERE A.CNTR_SPEC_NO = B.CNTR_SPEC_NO
                       AND A.CNTR_NO = CNTR.CNTR_NO)
                 , (SELECT ROUND(CNTR_TPSZ_TARE_WGT * 0.00045,2)
                      FROM MDM_CNTR_TP_SZ MDM
                     WHERE MDM.CNTR_TPSZ_CD = CNTR.CNTR_TPSZ_CD)
               ) AS TARE_LBS,
               (SELECT PKUP_YD_CD FROM BKG_PKUP_NTC_PKUP_NO WHERE BKG_NO = BK.BKG_NO AND CNTR_NO = CNTR.CNTR_NO AND ROWNUM = 1) AS IB_PKUP_YD_CD,
               (SELECT CSTMS_LOC_CD FROM BKG_CSTMS_ADV_BL WHERE BKG_NO = BK.BKG_NO AND BL_NO = BK.BL_NO AND CNT_CD = 'US') AS IB_CLR_LOC_CD,
               NVL((SELECT DECODE(TRO.HLG_TP_CD, 'C', 'C', 'M')
                        FROM BKG_EUR_TRO TRO
                       WHERE TRO.BKG_NO = BK.BKG_NO
                         AND TRO.CNTR_NO = CNTR.CNTR_NO
                         AND TRO.IO_BND_CD = 'I'
                         AND TRO.CXL_FLG = 'N'), DECODE(BK.DE_TERM_CD, 'D', 'C', 'M')) AS IB_HLG_BKG,
               DECODE(BK.RCV_TERM_CD, 'D', 'C', 'M') AS OB_HLG_BKG,
               CNTR.PCK_TP_CD,
               CNTR.PCK_QTY,
               BKG_JOIN_FNC(CURSOR(SELECT CNTR_SEAL_NO
                                     FROM BKG_CNTR_SEAL_NO
                                    WHERE BKG_NO = CNTR.BKG_NO
                                      AND CNTR_NO = CNTR.CNTR_NO
                                      AND CNTR_SEAL_SEQ > 0
                           ),',') AS CNTR_SEAL_NO,
               (SELECT COUNT(CNTR_SEAL_SEQ)
                  FROM BKG_CNTR_SEAL_NO
                 WHERE BKG_NO = CNTR.BKG_NO
                   AND CNTR_NO = CNTR.CNTR_NO
                 GROUP BY BKG_NO, CNTR_NO) AS CNTR_SEAL_CNT,
               BKG_JOIN_FNC(CURSOR(SELECT CNTR_TPSZ_CD||'-'||EQ_SUBST_CNTR_TPSZ_CD 
                                     FROM BKG_QUANTITY
                                    WHERE BKG_NO = BK.BKG_NO
                                      AND EQ_SUBST_CNTR_TPSZ_CD IS NOT NULL
                           ),',') AS EQ_SUBST_TP,
        --Customer
               (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER WHERE CUST_CNT_CD = C.CUST_CNT_CD AND CUST_SEQ = C.CUST_SEQ) AS C_CUST,
               (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER WHERE CUST_CNT_CD = F.CUST_CNT_CD AND CUST_SEQ = F.CUST_SEQ) AS F_CUST,
               (SELECT CNTC_PSON_NM FROM MDM_CUST_ADDR WHERE CUST_CNT_CD = F.CUST_CNT_CD AND CUST_SEQ = F.CUST_SEQ AND PRMRY_CHK_FLG = 'Y' AND ROWNUM = 1) AS F_CNTC_NM,
               (SELECT PHN_NO FROM MDM_CUST_CNTC_PNT WHERE CUST_CNT_CD = F.CUST_CNT_CD AND CUST_SEQ = F.CUST_SEQ AND ROWNUM = 1) AS F_CNTC_NO,
               F.CUST_CNT_CD AS F_CNT_CD,
               (SELECT STE_CD FROM MDM_CUST_ADDR WHERE CUST_CNT_CD = F.CUST_CNT_CD AND CUST_SEQ = F.CUST_SEQ AND PRMRY_CHK_FLG = 'Y' AND ROWNUM = 1) AS F_STE_CD,
               (SELECT CUST_GRP_ID FROM MDM_CUSTOMER WHERE CUST_CNT_CD = S.CUST_CNT_CD AND CUST_SEQ = S.CUST_SEQ) AS S_GRP_CUST,
               '' AS CTRL_PTY, --BKG MAIN 작업 후 컬럼 매핑 해야 함
               (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER WHERE CUST_CNT_CD = S.CUST_CNT_CD AND CUST_SEQ = S.CUST_SEQ) AS S_CUST_NM,
               (SELECT CNTC_PSON_NM FROM MDM_CUST_ADDR WHERE CUST_CNT_CD = S.CUST_CNT_CD AND CUST_SEQ = S.CUST_SEQ AND PRMRY_CHK_FLG = 'Y' AND ROWNUM = 1) AS S_CNTC_NM,
               (SELECT PHN_NO FROM MDM_CUST_CNTC_PNT WHERE CUST_CNT_CD = S.CUST_CNT_CD AND CUST_SEQ = S.CUST_SEQ AND ROWNUM = 1) AS S_CNTC_NO,
        --Reference No
               EBFF.CUST_REF_NO_CTNT AS EBFF_REF_NO,
               EBRF.CUST_REF_NO_CTNT AS EBRF_REF_NO,
               EBSH.CUST_REF_NO_CTNT AS EBSH_REF_NO,
               DECODE(DG.SPCL_CGO_APRO_CD,'Y','Y','N') AS DG_CERTI_FLG,
               BKG_JOIN_FNC(CURSOR(SELECT EUR_BL.MVMT_REF_NO
									 FROM BKG_CSTMS_EUR_BL EUR_BL
									WHERE BK.BL_NO = EUR_BL.BL_NO),';') AS ENS_MRN,
               DECODE(CNTR.CNTR_NO, NULL, 
                                      BKG_JOIN_FNC(CURSOR(SELECT CUST_REF_NO_CTNT
                                                            FROM BKG_REFERENCE CUCR
                                                           WHERE CUCR.BKG_NO = BK.BKG_NO
                                                             AND CUCR.BKG_REF_TP_CD = 'CMRN'
                                                           ORDER BY CUCR.REF_SEQ
                                                          ),','),
                                      (SELECT CUST_REF_NO_CTNT
                                         FROM BKG_REFERENCE CUCR
                                        WHERE CUCR.BKG_NO = BK.BKG_NO
                                          AND CUCR.CNTR_NO = CNTR.CNTR_NO
                                          AND CUCR.BKG_REF_TP_CD = 'CMRN')) AS CMRN_REF_NO,
               BKG_JOIN_FNC(CURSOR(SELECT EX_EUR_BL.MVMT_REF_NO
									 FROM BKG_CSTMS_EUR_IO_BL EX_EUR_BL
									WHERE BK.BL_NO = EX_EUR_BL.BL_NO),';') AS EXS_MRN,
               FINV.CUST_REF_NO_CTNT AS FINV_REF_NO,
               (SELECT AES_INLND_TRNS_NO FROM BKG_XPT_IMP_LIC WHERE BKG_NO = BK.BKG_NO AND IO_BND_CD = 'O' AND CNT_CD = 'US' AND ROWNUM = 1) AS AES_ITN_NO,
               CNTR.PO_NO,
               RGBK.CUST_REF_NO_CTNT AS RGBK_REF_NO,
               ESSH.CUST_REF_NO_CTNT AS ESSH_REF_NO,
               ESFF.CUST_REF_NO_CTNT AS ESFF_REF_NO,
               ESRF.CUST_REF_NO_CTNT AS ESRF_REF_NO,
               BK.TWN_SO_NO,
               BK.SI_FLG,
               DECODE(CNTR.CNTR_NO, NULL, 
                                      BKG_JOIN_FNC(CURSOR(SELECT CUST_REF_NO_CTNT
                                                            FROM BKG_REFERENCE CUCR
                                                           WHERE CUCR.BKG_NO = BK.BKG_NO
                                                             AND CUCR.BKG_REF_TP_CD = 'CUCR'
                                                           ORDER BY CUCR.REF_SEQ
                                                          ),','),
                                      (SELECT CUST_REF_NO_CTNT
                                         FROM BKG_REFERENCE CUCR
                                        WHERE CUCR.BKG_NO = BK.BKG_NO
                                          AND CUCR.CNTR_NO = CNTR.CNTR_NO
                                          AND CUCR.BKG_REF_TP_CD = 'CUCR')) AS CUCR_REF_NO,

        --Route & Schedule
               BK.BLCK_STWG_CD,
               BK.VSL_CD||BK.SKD_VOY_NO||BK.SKD_DIR_CD AS T_VVD,
               (SELECT VSL_ENG_NM FROM MDM_VSL_CNTR WHERE VSL_CD = BK.VSL_CD) AS T_VSL_NM,
               COA.TRD_CD,
               COA.SVC_SCP_CD,
               BK.DE_TERM_CD,
               BK.RCV_TERM_CD,
               (SELECT CNT_CD FROM MDM_LOCATION WHERE LOC_CD = BK.POR_CD) AS POR_CNT_CD,
               BK.POR_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = BK.POR_CD) AS POR_NM,
               VVD5.POL_CD AS VVD1_POL_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = VVD5.POL_CD) AS VVD1_POL_NM,
               VVD6.POL_CD AS VVD2_POL_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = VVD6.POL_CD) AS VVD2_POL_NM,
               VVD7.POL_CD AS VVD3_POL_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = VVD7.POL_CD) AS VVD3_POL_NM,
               VVD8.POL_CD AS VVD4_POL_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = VVD8.POL_CD) AS VVD4_POL_NM,
               VVD5.POD_CD AS VVD1_POD_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = VVD5.POD_CD) AS VVD1_POD_NM,
               VVD6.POD_CD AS VVD2_POD_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = VVD6.POD_CD) AS VVD2_POD_NM,
               VVD7.POD_CD AS VVD3_POD_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = VVD7.POD_CD) AS VVD3_POD_NM,
               VVD8.POD_CD AS VVD4_POD_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = VVD8.POD_CD) AS VVD4_POD_NM,
               BK.POD_CD AS LAST_POD_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = BK.POD_CD) AS LAST_POD_NM,
               (SELECT CNT_CD FROM MDM_LOCATION WHERE LOC_CD = BK.DEL_CD) AS DEL_CNT_CD,
               BK.DEL_CD,
               (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = BK.DEL_CD) AS DEL_NM,
               VVD5.VSL_CD||VVD5.SKD_VOY_NO||VVD5.SKD_DIR_CD AS PRE1_VVD,
               VVD6.VSL_CD||VVD6.SKD_VOY_NO||VVD6.SKD_DIR_CD AS PRE2_VVD,
               VVD7.VSL_CD||VVD7.SKD_VOY_NO||VVD7.SKD_DIR_CD AS PRE3_VVD,
               VVD8.VSL_CD||VVD8.SKD_VOY_NO||VVD8.SKD_DIR_CD AS PRE4_VVD,
               VVD1.VSL_CD||VVD1.SKD_VOY_NO||VVD1.SKD_DIR_CD AS POST1_VVD,
               VVD2.VSL_CD||VVD2.SKD_VOY_NO||VVD2.SKD_DIR_CD AS POST2_VVD,
               VVD3.VSL_CD||VVD3.SKD_VOY_NO||VVD3.SKD_DIR_CD AS POST3_VVD,
               VVD4.VSL_CD||VVD4.SKD_VOY_NO||VVD4.SKD_DIR_CD AS POST4_VVD,
               DECODE(NVL(CNTR.DE_TERM_CD, BK.DE_TERM_CD),'S','LCL','FCL') AS TRAF_MOD_IB,
               DECODE(NVL(CNTR.RCV_TERM_CD, BK.RCV_TERM_CD),'S','LCL','FCL') AS TRAF_MOD_OB,
               BK.DEST_TRNS_MOD_CD AS TRSP_MOD_IB,
               BK.ORG_TRNS_MOD_CD AS TRSP_MOD_OB,
               BK.SLAN_CD AS TRUNK_SLAN_CD,
               TRUNK.POD_CD AS TRUNK_POD_CD,
               TRUNK.POL_CD AS TRUNK_POL_CD,
               BK.VSL_CD AS TRUNK_VSL_CD,
               (SELECT TO_CHAR(NVL(MNL_SET_DT,SYS_SET_DT),'YYYY-MM-DD HH24:MI') FROM BKG_CLZ_TM WHERE CLZ_TP_CD = 'T' AND BKG_NO=BK.BKG_NO) AS FIRST_POL_CUTOFF_DT,
               TO_CHAR(N1ST_SKD.VPS_ETB_DT,'YYYY-MM-DD HH24:MI') AS FIRST_POL_ETB,
               TO_CHAR(N1ST_SKD.VPS_ETD_DT,'YYYY-MM-DD HH24:MI') AS FIRST_POL_ETD,
               DECODE(N1ST_SKD.ACT_INP_FLG,'Y',TO_CHAR(N1ST_SKD.VPS_ETD_DT,'YYYY-MM-DD HH24:MI'),'') AS FIRST_POL_ATD,
               TO_CHAR(LAST_SKD.VPS_ETB_DT,'YYYY-MM-DD HH24:MI') AS LAST_POD_ETB,
               TO_CHAR(LAST_SKD.VPS_ETA_DT,'YYYY-MM-DD HH24:MI') AS LAST_POD_ETA,
               DECODE(LAST_SKD.ACT_INP_FLG,'Y',TO_CHAR(LAST_SKD.VPS_ETA_DT,'YYYY-MM-DD HH24:MI'),'') AS LAST_POD_ATA,
        --Rate & Invoice
               BK.RFA_NO,
               BK.SC_NO,
               BK.TAA_NO,
        --Reefer Info
               RF.CTRL_ATMS_FLG,
               RF.MODI_ATMS_FLG,
               REPLACE(RF.DIFF_RMK,CHR(10),' ') AS RF_RMK,
               RF.CDO_TEMP AS RF_TEMP,
               DECODE(RF.CNTR_VENT_TP_CD,'P',RF.VENT_RTO||'%',RF.CBM_PER_HR_QTY||'CMH') AS VENT,
        --AK Info
               REPLACE(AWK.DIFF_RMK,CHR(10),' ') AS AWK_RMK,
               AWK.GRS_WGT AS AWK_GRS_WGT,
               AWK.NET_WGT AS AWK_NET_WGT,
               AWK.OVR_FWRD_LEN AS AWK_OVR_FWRD_LEN,
               AWK.OVR_HGT AS AWK_OVR_HGT,
               AWK.OVR_LF_LEN AS AWK_OVR_LF_LEN,
               AWK.OVR_BKWD_LEN AS AWK_OVR_BKWD_LEN,
               AWK.OVR_RT_LEN AS AWK_OVR_RT_LEN,
               AWK.TTL_DIM_HGT AS AWK_TTL_DIM_HGT,
               AWK.TTL_DIM_LEN AS AWK_TTL_DIM_LEN,
               AWK.TTL_DIM_WDT AS AWK_TTL_DIM_WDT,
        --DG Info
               REPLACE(DG.DIFF_RMK,CHR(10),' ') AS DG_RMK,
               DG.IMDG_CLSS_CD,
               DG.IMDG_UN_NO
          FROM BKG_BOOKING BK,
               BKG_BL_ISS ISS,
               BKG_BL_DOC DOC,
               BKG_CUSTOMER S,
               BKG_CUSTOMER C,
               BKG_CUSTOMER F,
#if (${cust_tp_cd_n} !='')
               BKG_CUSTOMER N,
#end
#if (${cust_tp_cd_a} !='')
               BKG_CUSTOMER A,
#end
               BKG_REFERENCE FINV,
               BKG_REFERENCE EBRF,
               BKG_REFERENCE EBSH,
               BKG_REFERENCE EBFF,
               BKG_REFERENCE ESRF,
               BKG_REFERENCE ESSH,
               BKG_REFERENCE ESFF,
               BKG_REFERENCE RGBK,
               COA_RGST_BKG COA,
               BKG_VVD VVD1,
               BKG_VVD VVD2,
               BKG_VVD VVD3,
               BKG_VVD VVD4,
               BKG_VVD VVD5,
               BKG_VVD VVD6,
               BKG_VVD VVD7,
               BKG_VVD VVD8,
               BKG_VVD TRUNK,
               BKG_VVD N1ST_VVD,
               BKG_VVD LAST_VVD,
               VSK_VSL_PORT_SKD N1ST_SKD,
               VSK_VSL_PORT_SKD LAST_SKD,
               BKG_CONTAINER CNTR,
               BKG_CNTR_MF_DESC CM,
               BKG_AWK_CGO AWK,
               BKG_DG_CGO DG,
               BKG_RF_CGO RF,
               SCE_COP_HDR COP             
         WHERE 1=1
           AND BK.BKG_NO    = ISS.BKG_NO(+)
           AND BK.BKG_NO    = DOC.BKG_NO
           AND BK.BKG_NO    = CNTR.BKG_NO(+)
           AND CNTR.BKG_NO  = CM.BKG_NO(+)
           AND CNTR.CNTR_NO = CM.CNTR_NO(+)
           AND BK.BKG_NO    = COA.BKG_NO(+)
           AND CNTR.BKG_NO  = AWK.BKG_NO(+)
           AND CNTR.CNTR_NO = AWK.CNTR_NO(+)
           AND CNTR.BKG_NO  = DG.BKG_NO(+)
           AND CNTR.CNTR_NO = DG.CNTR_NO(+)
           AND CNTR.BKG_NO  = RF.BKG_NO(+)
           AND CNTR.CNTR_NO = RF.CNTR_NO(+)
           AND CNTR.BKG_NO  = COP.BKG_NO(+)
           AND CNTR.CNTR_NO = COP.CNTR_NO(+)
           AND BK.BKG_NO    = S.BKG_NO
           AND S.BKG_CUST_TP_CD ='S'
           AND BK.BKG_NO    = C.BKG_NO
           AND C.BKG_CUST_TP_CD ='C'
           AND BK.BKG_NO    = F.BKG_NO
           AND F.BKG_CUST_TP_CD ='F'
#if (${cust_tp_cd_n} !='')
           AND BK.BKG_NO = N.BKG_NO
           AND N.BKG_CUST_TP_CD ='N'
#end
#if (${cust_tp_cd_a} !='')
           AND BK.BKG_NO = A.BKG_NO
           AND A.BKG_CUST_TP_CD ='A'
#end
           AND BK.BKG_NO = FINV.BKG_NO(+)
           AND 'FINV'    = FINV.BKG_REF_TP_CD(+)--Invoice Ref. No.
           AND BK.BKG_NO = EBRF.BKG_NO(+)
           AND 'EBRF'    = EBRF.BKG_REF_TP_CD(+)--BKG Ref. No.
           AND BK.BKG_NO = EBSH.BKG_NO(+)
           AND 'EBSH'    = EBSH.BKG_REF_TP_CD(+)--BKG SH Ref. No.
           AND BK.BKG_NO = EBFF.BKG_NO(+)
           AND 'EBFF'    = EBFF.BKG_REF_TP_CD(+)--BKG FF Ref. No.
           AND BK.BKG_NO = ESRF.BKG_NO(+)
           AND 'ESRF'    = ESRF.BKG_REF_TP_CD(+)--S/I Ref. No.
           AND BK.BKG_NO = ESSH.BKG_NO(+)
           AND 'ESSH'    = ESSH.BKG_REF_TP_CD(+)--S/I SH Ref. No.
           AND BK.BKG_NO = ESFF.BKG_NO(+)
           AND 'ESFF'    = ESFF.BKG_REF_TP_CD(+)--S/I FF Ref. No.
           AND BK.BKG_NO = RGBK.BKG_NO(+)
           AND 'RGBK'    = RGBK.BKG_REF_TP_CD(+)--Regional BKG No.
           AND BK.BKG_STS_CD <> 'X'
           AND BK.BKG_NO = VVD1.BKG_NO(+)
           AND 1 = VVD1.VSL_SEQ(+)
           AND 'U' = VVD1.VSL_PRE_PST_CD(+)
           AND BK.BKG_NO = VVD2.BKG_NO(+)
           AND 2 = VVD2.VSL_SEQ(+)
           AND 'U' = VVD2.VSL_PRE_PST_CD(+)
           AND BK.BKG_NO = VVD3.BKG_NO(+)
           AND 3 = VVD3.VSL_SEQ(+)
           AND 'U' = VVD3.VSL_PRE_PST_CD(+)
           AND BK.BKG_NO = VVD4.BKG_NO(+)
           AND 4 = VVD4.VSL_SEQ(+)
           AND 'U' = VVD4.VSL_PRE_PST_CD(+)
           AND BK.BKG_NO = VVD5.BKG_NO(+)
           AND 1 = VVD5.VSL_SEQ(+)
           AND 'S' = VVD5.VSL_PRE_PST_CD(+)
           AND BK.BKG_NO = VVD6.BKG_NO(+)
           AND 2 = VVD6.VSL_SEQ(+)
           AND 'S' = VVD6.VSL_PRE_PST_CD(+)
           AND BK.BKG_NO = VVD7.BKG_NO(+)
           AND 3 = VVD7.VSL_SEQ(+)
           AND 'S' = VVD7.VSL_PRE_PST_CD(+)
           AND BK.BKG_NO = VVD8.BKG_NO(+)
           AND 4 = VVD8.VSL_SEQ(+)
           AND 'S' = VVD8.VSL_PRE_PST_CD(+)
           AND BK.BKG_NO         = TRUNK.BKG_NO(+)
           AND BK.VSL_CD         = TRUNK.VSL_CD(+)
           AND BK.SKD_VOY_NO     = TRUNK.SKD_VOY_NO(+)
           AND BK.SKD_DIR_CD     = TRUNK.SKD_DIR_CD(+)
           AND 'T'               = TRUNK.VSL_PRE_PST_CD(+)
           AND (N1ST_VVD.BKG_NO, N1ST_VVD.VSL_PRE_PST_CD, N1ST_VVD.VSL_SEQ) 
                                         = (SELECT /*+ index(v2 xpkbkg_vvd) */ 
                                                    V2.BKG_NO, V2.VSL_PRE_PST_CD, V2.VSL_SEQ
                                              FROM BKG_VVD V2
                                             WHERE V2.BKG_NO = BK.BKG_NO
                                               AND ROWNUM = 1)
           AND (LAST_VVD.BKG_NO, LAST_VVD.VSL_PRE_PST_CD, LAST_VVD.VSL_SEQ) 
                                         = (SELECT /*+ index_desc(v2 xpkbkg_vvd) */ 
                                                    V2.BKG_NO, V2.VSL_PRE_PST_CD, V2.VSL_SEQ
                                              FROM BKG_VVD V2
                                             WHERE V2.BKG_NO = BK.BKG_NO
                                               AND ROWNUM = 1)
           AND N1ST_VVD.VSL_CD     = N1ST_SKD.VSL_CD(+)
           AND N1ST_VVD.SKD_VOY_NO = N1ST_SKD.SKD_VOY_NO(+)
           AND N1ST_VVD.SKD_DIR_CD = N1ST_SKD.SKD_DIR_CD(+)
           AND N1ST_VVD.POL_CD     = N1ST_SKD.VPS_PORT_CD(+)
           AND N1ST_SKD.CLPT_IND_SEQ(+) = 1
           AND LAST_VVD.VSL_CD     = LAST_SKD.VSL_CD(+)
           AND LAST_VVD.SKD_VOY_NO = LAST_SKD.SKD_VOY_NO(+)
           AND LAST_VVD.SKD_DIR_CD = LAST_SKD.SKD_DIR_CD(+)
           AND LAST_VVD.POD_CD     = LAST_SKD.VPS_PORT_CD(+)
           AND LAST_SKD.CLPT_IND_SEQ(+) = 1
#if (${vvd_cd} != '' && ${trunk_flag} != '')
           AND BK.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)
           AND BK.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
           AND BK.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
#end
#if (${vvd_cd} != '' && ${trunk_flag} == '')
           AND @[vvd_cd] IN (VVD1.VSL_CD||VVD1.SKD_VOY_NO||VVD1.SKD_DIR_CD, VVD2.VSL_CD||VVD2.SKD_VOY_NO||VVD2.SKD_DIR_CD, VVD3.VSL_CD||VVD3.SKD_VOY_NO||VVD3.SKD_DIR_CD, VVD4.VSL_CD||VVD4.SKD_VOY_NO||VVD4.SKD_DIR_CD,
                             VVD5.VSL_CD||VVD5.SKD_VOY_NO||VVD5.SKD_DIR_CD, VVD6.VSL_CD||VVD6.SKD_VOY_NO||VVD6.SKD_DIR_CD, VVD7.VSL_CD||VVD7.SKD_VOY_NO||VVD7.SKD_DIR_CD, VVD8.VSL_CD||VVD8.SKD_VOY_NO||VVD8.SKD_DIR_CD,
                             TRUNK.VSL_CD||TRUNK.SKD_VOY_NO||TRUNK.SKD_DIR_CD)
#end
#if (${lane_cd} != '') 
           AND BK.SLAN_CD = @[lane_cd]
#end
#if (${dir_cd} != '') 
           AND BK.SKD_DIR_CD IN (${dir_cd})
#end
#if (${pol_cd} != '') 
           AND @[pol_cd] IN (VVD1.POL_CD, VVD2.POL_CD, VVD3.POL_CD, VVD4.POL_CD, VVD5.POL_CD, VVD6.POL_CD, VVD7.POL_CD, VVD8.POL_CD, TRUNK.POL_CD)
 #if (${pol_local} != '')
           AND BK.POL_CD = @[pol_cd]
 #end
 #if (${pol_ts} != '')
           AND BK.POL_CD <> @[pol_cd]
 #end
#end
#if (${pol_yard_cd} != '') 
           AND @[pol_yard_cd] IN (VVD1.POL_YD_CD, VVD2.POL_YD_CD, VVD3.POL_YD_CD, VVD4.POL_YD_CD, VVD5.POL_YD_CD, VVD6.POL_YD_CD, VVD7.POL_YD_CD, VVD8.POL_YD_CD, TRUNK.POL_YD_CD)
 #if (${pol_local} != '')
           AND SUBSTR(BK.POL_NOD_CD,-2) = @[pol_yard_cd]
 #end
 #if (${pol_ts} != '')
           AND SUBSTR(BK.POL_NOD_CD,-2) <> @[pol_yard_cd]
 #end
#end
#if (${pod_cd} != '') 
           AND @[pod_cd] IN (VVD1.POD_CD, VVD2.POD_CD, VVD3.POD_CD, VVD4.POD_CD, VVD5.POD_CD, VVD6.POD_CD, VVD7.POD_CD, VVD8.POD_CD, TRUNK.POD_CD)
 #if (${pod_local} != '')
           AND BK.POD_CD = @[pod_cd]
 #end
 #if (${pod_ts} != '')
           AND BK.POD_CD <> @[pod_cd]
 #end
#end
#if (${pod_yard_cd} != '') 
           AND @[pod_yard_cd] IN (VVD1.POD_YD_CD, VVD2.POD_YD_CD, VVD3.POD_YD_CD, VVD4.POD_YD_CD, VVD5.POD_YD_CD, VVD6.POD_YD_CD, VVD7.POD_YD_CD, VVD8.POD_YD_CD, TRUNK.POD_YD_CD)
 #if (${pod_local} != '')
           AND SUBSTR(BK.POD_NOD_CD,-2) = @[pod_yard_cd]
 #end
 #if (${pod_ts} != '')
           AND SUBSTR(BK.POD_NOD_CD,-2) <> @[pod_yard_cd]
 #end
#end
#if (${por_cd} != '') 
           AND BK.POR_CD LIKE @[por_cd]||'%' 
#end
#if (${del_cd} != '') 
           AND BK.DEL_CD LIKE @[del_cd]||'%' 
#end
#if (${r_term} != '') 
           AND BK.RCV_TERM_CD IN (${r_term})
#end
#if (${d_term} != '') 
           AND BK.DE_TERM_CD IN (${d_term})
#end
#if (${board_from_dt} != '') 
           AND N1ST_SKD.VPS_ETD_DT >= TO_DATE(@[board_from_dt],'YYYY-MM-DD') 
#end
#if (${board_to_dt} != '') 
           AND N1ST_SKD.VPS_ETD_DT <= TO_DATE(@[board_to_dt],'YYYY-MM-DD') +0.99999
#end
#if (${bkg_from_dt} != '') 
           AND BK.BKG_CRE_DT >= TO_DATE(@[bkg_from_dt],'YYYY-MM-DD') 
#end
#if (${bkg_to_dt} != '') 
           AND BK.BKG_CRE_DT <= TO_DATE(@[bkg_to_dt],'YYYY-MM-DD') +0.99999
#end
#if (${bkg_kind} != '') 
           AND BK.XTER_BKG_RQST_CD IN (${bkg_kind})
#end
#if (${b_ofc_cd} != '') 
 #if(${b_ofc_cd_sub} != '')
           AND BK.BKG_OFC_CD IN ( ${b_ofc_cd_sub} )
 #else
           AND BK.BKG_OFC_CD = @[b_ofc_cd]
 #end
#end
#if (${b_staff_id} != '') 
           AND BK.DOC_USR_ID = @[b_staff_id]
#end
#if (${ca_flag} != '') 
           AND EXISTS ( SELECT  'Y' FROM BKG_CORRECTION
                         WHERE BKG_NO = BK.BKG_NO
                           AND CORR_NO IS NOT NULL
                           AND CORR_NO <> '0000000001')
#end
#if (${bl_rlse_ofc_cd} != '') 
           AND ISS.OBL_ISS_OFC_CD = @[bl_rlse_ofc_cd]
#end
#if (${eq_type} != '') 
           AND EXISTS  ( SELECT 'Y'
                           FROM BKG_QUANTITY
                          WHERE BKG_NO = BK.BKG_NO
                            AND CNTR_TPSZ_CD IN (${eq_type})
                       )
#end
#if (${cmdt_cd} != '') 
           AND BK.CMDT_CD = @[cmdt_cd]
#end
#if (${cgo_wgt_from} != '')
 #if (${cgo_wgt_kg} != '')
           AND DECODE(DOC.WGT_UT_CD, 'KGS', DOC.ACT_WGT, ROUND(NVL(DOC.ACT_WGT,0)*0.4536,3)) >= @[cgo_wgt_from]
 #end
 #if (${cgo_wgt_lb} != '')
           AND DECODE(DOC.WGT_UT_CD, 'KGS', ROUND(NVL(DOC.ACT_WGT,0)*2.2046,3), DOC.ACT_WGT) >= @[cgo_wgt_from]
 #end
#end
#if (${cgo_wgt_to} != '')
 #if (${cgo_wgt_kg} != '')
           AND DECODE(DOC.WGT_UT_CD, 'KGS', DOC.ACT_WGT, ROUND(NVL(DOC.ACT_WGT,0)*0.4536,3)) <= @[cgo_wgt_to]
 #end
 #if (${cgo_wgt_lb} != '')
           AND DECODE(DOC.WGT_UT_CD, 'KGS', ROUND(NVL(DOC.ACT_WGT,0)*2.2046,3), DOC.ACT_WGT) <= @[cgo_wgt_to]
 #end
#end
#if (${grs_wgt_from} != '')
 #if (${grs_wgt_kg} != '')
           AND DECODE(DOC.WGT_UT_CD, 'KGS', DOC.ACT_WGT, ROUND(NVL(DOC.ACT_WGT,0)*0.4536,3)) >= @[grs_wgt_from]
 #end
 #if (${grs_wgt_lb} != '')
           AND DECODE(DOC.WGT_UT_CD, 'KGS', ROUND(NVL(DOC.ACT_WGT,0)*2.2046,3), DOC.ACT_WGT) >= @[grs_wgt_from]
 #end
#end
#if (${grs_wgt_to} != '')
 #if (${grs_wgt_kg} != '')
           AND DECODE(DOC.WGT_UT_CD, 'KGS', DOC.ACT_WGT, ROUND(NVL(DOC.ACT_WGT,0)*0.4536,3)) <= @[grs_wgt_to]
 #end
 #if (${grs_wgt_lb} != '')
           AND DECODE(DOC.WGT_UT_CD, 'KGS', ROUND(NVL(DOC.ACT_WGT,0)*2.2046,3), DOC.ACT_WGT) <= @[grs_wgt_to]
 #end
#end
#if (${ctr_rfa_cd} == 'C') 
 #if (${ctr_rfa_no} != '') 
           AND BK.SC_NO = @[ctr_rfa_no]
 #end
#elseif (${ctr_rfa_cd} == 'R') 
 #if (${ctr_rfa_no} != '') 
           AND BK.RFA_NO = @[ctr_rfa_no]
 #end
#elseif (${ctr_rfa_cd} == 'T') 
 #if (${ctr_rfa_no} != '') 
           AND BK.TAA_NO = @[ctr_rfa_no]
 #end
#end
#if (${bkg_sts_cd_f} != '' || ${bkg_sts_cd_x} != '' || ${bkg_sts_cd_a} != '' || ${bkg_sts_cd_w} != '') 
           AND BK.BKG_STS_CD IN ( @[bkg_sts_cd_f], @[bkg_sts_cd_x], @[bkg_sts_cd_a], @[bkg_sts_cd_w]) 
#end
#if (${non_sp_cargo} != '') 
           AND BK.WT_RSN_SPCL_CGO_FLG = 'Y'
#end
#if (${holding} != '') 
           AND BK.WT_RSN_HLD_FLG = 'Y'
#end
#if (${cntr_sts_cd_en} != '' || ${cntr_sts_cd_op} != '' || ${cntr_sts_cd_ic} != '' || ${cntr_sts_cd_tn} != '' || ${cntr_sts_cd_id} != ''
  || ${cntr_sts_cd_ts} != '' || ${cntr_sts_cd_mt} != '' || ${cntr_sts_cd_vd} != '' || ${cntr_sts_cd_oc} != '' || ${cntr_sts_cd_vl} != '') 
           AND CNTR.CNMV_STS_CD IN ( @[cntr_sts_cd_en], @[cntr_sts_cd_op], @[cntr_sts_cd_ic], @[cntr_sts_cd_tn], @[cntr_sts_cd_id], @[cntr_sts_cd_ts], @[cntr_sts_cd_mt], @[cntr_sts_cd_vs], @[cntr_sts_cd_oc], @[cntr_sts_cd_vl]) 
#end
#if (${cust_tp_cd_s} != '' || ${cust_tp_cd_c} != '' || ${cust_tp_cd_n} != '' || ${cust_tp_cd_f} != '' || ${cust_tp_cd_a} != '')                                        
 #if(${cust_cnt_cd} !='' && ${cust_seq} != '')
           AND ( 1=2
  #if (${cust_tp_cd_s} !='')
              OR (S.CUST_CNT_CD = @[cust_cnt_cd] AND S.CUST_SEQ = TO_NUMBER(@[cust_seq]))
  #end
  #if (${cust_tp_cd_c} !='')
              OR (C.CUST_CNT_CD = @[cust_cnt_cd] AND C.CUST_SEQ = TO_NUMBER(@[cust_seq]))
  #end
  #if (${cust_tp_cd_n} !='')
              OR (N.CUST_CNT_CD = @[cust_cnt_cd] AND N.CUST_SEQ = TO_NUMBER(@[cust_seq]))
  #end
  #if (${cust_tp_cd_f} !='')
              OR (F.CUST_CNT_CD = @[cust_cnt_cd] AND F.CUST_SEQ = TO_NUMBER(@[cust_seq]))
  #end
  #if (${cust_tp_cd_a} !='')
              OR (A.CUST_CNT_CD = @[cust_cnt_cd] AND A.CUST_SEQ = TO_NUMBER(@[cust_seq]))
  #end
               )
 #end
 #if(${cust_nm} !='')
           AND ( 1=2
  #if (${cust_tp_cd_s} !='')
              OR S.CUST_NM LIKE @[cust_nm]||'%'
  #end
  #if (${cust_tp_cd_c} !='')
              OR C.CUST_NM LIKE @[cust_nm]||'%'
  #end
  #if (${cust_tp_cd_n} !='')
              OR N.CUST_NM LIKE @[cust_nm]||'%'
  #end
  #if (${cust_tp_cd_f} !='')
              OR F.CUST_NM LIKE @[cust_nm]||'%'
  #end
  #if (${cust_tp_cd_a} !='')
              OR A.CUST_NM LIKE @[cust_nm]||'%'
  #end
               )
 #end
       #if(${cust_grp_id} !='')					--SJH.20150129.ADD
         AND ( 1=2
        #if (${cust_tp_cd_s} !='')
		  OR (S.CUST_CNT_CD, S.CUST_SEQ) IN (SELECT CUST_CNT_CD, CUST_SEQ FROM MDM_CUSTOMER WHERE CUST_GRP_ID = @[cust_grp_id])
        #end
        #if (${cust_tp_cd_c} !='')
          OR (C.CUST_CNT_CD, C.CUST_SEQ) IN (SELECT CUST_CNT_CD, CUST_SEQ FROM MDM_CUSTOMER WHERE CUST_GRP_ID = @[cust_grp_id])
        #end
        #if (${cust_tp_cd_n} !='')
          OR (N.CUST_CNT_CD, N.CUST_SEQ) IN (SELECT CUST_CNT_CD, CUST_SEQ FROM MDM_CUSTOMER WHERE CUST_GRP_ID = @[cust_grp_id])
        #end
        #if (${cust_tp_cd_f} !='')
          OR (F.CUST_CNT_CD, F.CUST_SEQ) IN (SELECT CUST_CNT_CD, CUST_SEQ FROM MDM_CUSTOMER WHERE CUST_GRP_ID = @[cust_grp_id])
        #end
        #if (${cust_tp_cd_a} !='')
          OR (A.CUST_CNT_CD, A.CUST_SEQ) IN (SELECT CUST_CNT_CD, CUST_SEQ FROM MDM_CUSTOMER WHERE CUST_GRP_ID = @[cust_grp_id])
        #end
             )
       #end 
#end
#if (${sp_cargo_dg} !=''||${sp_cargo_rf} != ''||${sp_cargo_ak} != ''||${sp_cargo_bb} != ''||${sp_cargo_hg} != ''||${sp_cargo_soc} != ''||${sp_cargo_eq} != ''||${sp_cargo_rd} != ''||${sp_cargo_pm} != ''||${sp_cargo_pc} != ''||${sp_cargo_fg} != ''||${sp_cargo_hd} != ''||${sp_cargo_rb} != '')
           AND ( 1=2 
 #if (${sp_cargo_dg} != '') 
              OR BK.DCGO_FLG = 'Y'
 #end
 #if (${sp_cargo_rf} != '') 
              OR BK.RC_FLG = 'Y'
 #end
 #if (${sp_cargo_ak} != '') 
              OR BK.AWK_CGO_FLG = 'Y'
 #end
 #if (${sp_cargo_bb} != '') 
              OR BK.BB_CGO_FLG = 'Y'
 #end
 #if (${sp_cargo_bb} != '') 
              OR BK.RD_CGO_FLG = 'Y'
 #end
 #if (${sp_cargo_hg} != '') 
              OR BK.HNGR_FLG = 'Y'
 #end
               )
#end
       ) BKG_Z,
       (SELECT H.BKG_NO AS C_BKG_NO, H.CNTR_NO AS C_CNTR_NO, H.COP_NO, TO_CHAR(D.ESTM_DT,'YYYY-MM-DD HH24:MI') AS EST_PKUP_DT, TO_CHAR(D.ACT_DT,'YYYY-MM-DD HH24:MI') AS ACT_PKUP_DT, SUBSTR(D.NOD_CD,1,5) AS MTY_PKUP_LOC, ROW_NUMBER() OVER (PARTITION BY H.BKG_NO, H.CNTR_NO ORDER BY D.COP_DTL_SEQ) AS RNUM
          FROM SCE_COP_HDR H,
               SCE_COP_DTL D
         WHERE H.COP_NO = D.COP_NO
           AND H.COP_STS_CD <> 'X'
           AND D.STND_EDI_STS_CD = 'EE'
       ) COP_EE,
       (SELECT H.BKG_NO AS C_BKG_NO, H.CNTR_NO AS C_CNTR_NO, TO_CHAR(D.ESTM_DT,'YYYY-MM-DD HH24:MI') AS EST_RTN_DT, TO_CHAR(D.ACT_DT,'YYYY-MM-DD HH24:MI') AS ACT_RTN_DT, SUBSTR(D.NOD_CD,1,5) AS FULL_RTN_LOC, ROW_NUMBER() OVER (PARTITION BY H.BKG_NO, H.CNTR_NO ORDER BY D.COP_DTL_SEQ) AS RNUM
          FROM SCE_COP_HDR H,
               SCE_COP_DTL D
         WHERE H.COP_NO = D.COP_NO
           AND H.COP_STS_CD <> 'X'
           AND D.STND_EDI_STS_CD = 'IO'
       ) COP_IO,
       (SELECT H.BKG_NO AS C_BKG_NO, H.CNTR_NO AS C_CNTR_NO, SUBSTR(D.NOD_CD,1,5) AS MTY_RTN_LOC, ROW_NUMBER() OVER (PARTITION BY H.BKG_NO, H.CNTR_NO ORDER BY D.COP_DTL_SEQ) AS RNUM
          FROM SCE_COP_HDR H,
               SCE_COP_DTL D
         WHERE H.COP_NO = D.COP_NO
           AND H.COP_STS_CD <> 'X'
           AND D.STND_EDI_STS_CD = 'MT'
       ) COP_MT,
       (SELECT H.BKG_NO AS C_BKG_NO, H.CNTR_NO AS C_CNTR_NO, TO_CHAR(D.ACT_DT,'YYYY-MM-DD HH24:MI') AS ACT_LODG_DT, ROW_NUMBER() OVER (PARTITION BY H.BKG_NO, H.CNTR_NO ORDER BY D.COP_DTL_SEQ) AS RNUM
          FROM SCE_COP_HDR H,
               SCE_COP_DTL D
         WHERE H.COP_NO = D.COP_NO
           AND H.COP_STS_CD <> 'X'
           AND D.STND_EDI_STS_CD = 'AEL'
       ) COP_AEL
 WHERE BKG_Z.BKG_NO = COP_EE.C_BKG_NO(+)
   AND BKG_Z.CNTR_NO = COP_EE.C_CNTR_NO(+)
   AND COP_EE.RNUM(+) = 1
   AND BKG_Z.BKG_NO = COP_IO.C_BKG_NO(+)
   AND BKG_Z.CNTR_NO = COP_IO.C_CNTR_NO(+)
   AND COP_IO.RNUM(+) = 1
   AND BKG_Z.BKG_NO = COP_MT.C_BKG_NO(+)
   AND BKG_Z.CNTR_NO = COP_MT.C_CNTR_NO(+)
   AND COP_MT.RNUM(+) = 1
   AND BKG_Z.BKG_NO = COP_AEL.C_BKG_NO(+)
   AND BKG_Z.CNTR_NO = COP_AEL.C_CNTR_NO(+)
   AND COP_AEL.RNUM(+) = 1
#if (${wgt_bnd_xh} != '') 
   AND GRS_WGT_KG>22000
#end
#if (${wgt_bnd_h} != '') 
   AND GRS_WGT_KG>16000
   AND GRS_WGT_KG<=22000
#end
#if (${wgt_bnd_m} != '') 
   AND GRS_WGT_KG>10000
   AND GRS_WGT_KG<=16000
#end
#if (${wgt_bnd_l} != '') 
   AND GRS_WGT_KG>=0
   AND GRS_WGT_KG<=10000
#end
#if (${rate_sts_r} != '' && ${rate_sts_u} == '')
   AND RATE_STS = 'Y'
#end
#if (${rate_sts_u} != '' && ${rate_sts_r} == '')
   AND RATE_STS = 'N'
#end

#if (${orderby} == '') 
ORDER BY BKG_NO, CNTR_NO
#else
ORDER BY ${orderby}
#end			]]></sql>
			<params>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="lane_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pol_yard_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="pod_yard_cd" type="12" value="" out="N"/>
				<param name="por_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="board_from_dt" type="12" value="" out="N"/>
				<param name="board_to_dt" type="12" value="" out="N"/>
				<param name="bkg_from_dt" type="12" value="" out="N"/>
				<param name="bkg_to_dt" type="12" value="" out="N"/>
				<param name="b_ofc_cd" type="12" value="" out="N"/>
				<param name="b_staff_id" type="12" value="" out="N"/>
				<param name="bl_rlse_ofc_cd" type="12" value="" out="N"/>
				<param name="cmdt_cd" type="12" value="" out="N"/>
				<param name="cgo_wgt_from" type="12" value="" out="N"/>
				<param name="cgo_wgt_to" type="12" value="" out="N"/>
				<param name="grs_wgt_from" type="12" value="" out="N"/>
				<param name="grs_wgt_to" type="12" value="" out="N"/>
				<param name="ctr_rfa_no" type="12" value="" out="N"/>
				<param name="bkg_sts_cd_f" type="12" value="" out="N"/>
				<param name="bkg_sts_cd_x" type="12" value="" out="N"/>
				<param name="bkg_sts_cd_a" type="12" value="" out="N"/>
				<param name="bkg_sts_cd_w" type="12" value="" out="N"/>
				<param name="cntr_sts_cd_en" type="12" value="" out="N"/>
				<param name="cntr_sts_cd_op" type="12" value="" out="N"/>
				<param name="cntr_sts_cd_ic" type="12" value="" out="N"/>
				<param name="cntr_sts_cd_tn" type="12" value="" out="N"/>
				<param name="cntr_sts_cd_id" type="12" value="" out="N"/>
				<param name="cntr_sts_cd_ts" type="12" value="" out="N"/>
				<param name="cntr_sts_cd_mt" type="12" value="" out="N"/>
				<param name="cntr_sts_cd_vs" type="12" value="" out="N"/>
				<param name="cntr_sts_cd_oc" type="12" value="" out="N"/>
				<param name="cntr_sts_cd_vl" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="cust_nm" type="12" value="" out="N"/>
				<param name="cust_grp_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
