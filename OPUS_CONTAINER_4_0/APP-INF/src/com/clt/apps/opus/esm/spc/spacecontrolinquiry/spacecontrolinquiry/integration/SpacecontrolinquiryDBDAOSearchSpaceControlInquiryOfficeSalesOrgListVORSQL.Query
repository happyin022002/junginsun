<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpacecontrolinquiryDBDAOSearchSpaceControlInquiryOfficeSalesOrgListVORSQL">
			<desc><![CDATA[SearchSpaceControlInquiryOfficeSalesOrgListVO

2015.07.22. SKY[CLT-000042051-10] Virtual add call - VT_ADD_CALL_FLG IS  NULL  로직 추가
2016.04.20 Vessel Schedule 로직 추가
2016.05.12 SPC_GET_HC_RT_BSA_FNC : SKD_VOY_NO parm 추가
2016.07.12 SPC_BKG_V 제거
2016.07.19 #15529 AOC- JPN Issue cannot create BKG for T2 + Refeer]]></desc>
			<sql><![CDATA[
WITH PARAM AS (
    SELECT @[trade]        AS TRD_CD    ,
           @[subtrade]     AS SUB_TRD_CD,
           @[lane]         AS RLANE_CD  ,
           @[vsl_cd]       AS VSL_CD    ,
           @[skd_voy_no]   AS SKD_VOY_NO,
           @[skd_dir_cd]   AS SKD_DIR_CD,
           @[sales_office] AS OFC_CD
      FROM DUAL
)
, BASE AS (
    SELECT /*+ ORDERED USE_NL(P V ACO) */
           P.OFC_CD    ,
           P.TRD_CD    ,
           P.SUB_TRD_CD,
           P.RLANE_CD  ,
           P.VSL_CD    ,
           P.SKD_VOY_NO,
           P.SKD_DIR_CD,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ,
           SUBSTR(V.SLS_YRMON, 5, 2) AS COST_MON,
           V.COST_WK   ,
           NVL(ACO.CTRL_PORT_FLG   , 'N') AS CTRL_PORT,
           NVL(ACO.CTRL_WGT_FLG    , 'N') AS CTRL_WGT ,
           NVL(ACO.CTRL_40FT_HC_FLG, 'N') AS CTRL_40HC,
           NVL(ACO.CTRL_45FT_HC_FLG, 'N') AS CTRL_45HC,
           NVL(ACO.CTRL_53FT_FLG,    'N') AS CTRL_53FT,
           NVL(ACO.CTRL_RF_FLG     , 'N') AS CTRL_RF
      FROM PARAM             P,
           COA_MON_VVD       V,
           SPC_ALOC_CTRL_OPT ACO
           
           
     WHERE V.TRD_CD          = P.TRD_CD
       AND V.RLANE_CD        = P.RLANE_CD
       AND V.VSL_CD          = P.VSL_CD
       AND V.SKD_VOY_NO      = P.SKD_VOY_NO
       AND V.DIR_CD          = P.SKD_DIR_CD
       AND ACO.RLANE_CD  (+) = P.RLANE_CD
       AND ACO.DIR_CD    (+) = P.SKD_DIR_CD
       AND ACO.VSL_CD    (+) = P.VSL_CD
       AND ACO.SKD_VOY_NO(+) = P.SKD_VOY_NO
       AND ACO.SKD_DIR_CD(+) = P.SKD_DIR_CD
)
, VSL_PORT_SKD AS (
    SELECT 
           V.COST_YR,
           V.COST_WK   ,
           V.TRD_CD    ,
           V.SUB_TRD_CD,
           V.RLANE_CD  ,
           V.VSL_CD    ,
           V.SKD_VOY_NO,
           V.SKD_DIR_CD,
           V.OFC_CD    ,
           NVL(VPS.YD_CD, VPS.VPS_PORT_CD) AS PORT_CD,
           VPS.CLPT_SEQ         AS PORT_SEQ,
           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MAX_SEQ,
           MIN(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MIN_SEQ,
           VPS.CLPT_IND_SEQ  AS CLPT_IND_SEQ,
           V.CTRL_PORT,
           V.CTRL_WGT ,
           V.CTRL_40HC,
           V.CTRL_45HC,
           V.CTRL_53FT,
           V.CTRL_RF
      FROM 
           VSK_VSL_PORT_SKD VPS,
           BASE               V
     WHERE 1=1
       AND VPS.VSL_CD     = V.VSL_CD
       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO
       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD
       AND NVL(VPS.SKD_CNG_STS_CD,'1') <> 'S'
       AND VPS.VT_ADD_CALL_FLG IS  NULL
)

, VVD_POL_POD AS (

          SELECT 
                 PL.COST_YR       ,
                 PL.COST_WK       ,
                 PL.TRD_CD        ,
                 PL.SUB_TRD_CD    ,
                 PL.RLANE_CD      ,
                 PL.VSL_CD        ,
                 PL.SKD_VOY_NO    ,
                 PL.SKD_DIR_CD    ,
                 PL.OFC_CD        ,
                 PL.PORT_CD       ,
                 PL.PORT_CD         AS POL_CD    ,
                 MAX(PL.PORT_SEQ)   AS POL_SEQ   ,
                 PL.CLPT_IND_SEQ    AS PL_CLPT_IND_SEQ,
                 PD.PORT_CD         AS POD_CD    ,
                 (CASE
                       WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ)
                                                               ELSE CASE
                                                                         WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) THEN MAX(PD.MAX_SEQ)
                                                                     END
                   END
                 ) AS POD_SEQ,
                 PD.CLPT_IND_SEQ   AS PD_CLPT_IND_SEQ,
                 PL.CTRL_PORT,
                 PL.CTRL_WGT ,
                 PL.CTRL_40HC,
                 PL.CTRL_45HC,
                 PL.CTRL_53FT,
                 PL.CTRL_RF
                         

            FROM    
                 VSL_PORT_SKD     PD ,
                 VSL_PORT_SKD     PL
           WHERE 1=1
             AND PD.TRD_CD       = PL.TRD_CD
             AND PD.SUB_TRD_CD   = PL.SUB_TRD_CD
             AND PD.RLANE_CD     = PL.RLANE_CD
             AND PD.VSL_CD       = PL.VSL_CD
             AND PD.SKD_VOY_NO   = PL.SKD_VOY_NO
             AND PD.SKD_DIR_CD   = PL.SKD_DIR_CD
             AND PD.PORT_CD      <> PL.PORT_CD
             AND PD.PORT_SEQ      > PL.PORT_SEQ
             AND (PL.PORT_SEQ = PL.MAX_SEQ  OR PD.PORT_SEQ < PL.MAX_SEQ )                     
             
             GROUP BY 
                 PL.COST_YR       ,
                 PL.COST_WK       ,
                 PL.TRD_CD        ,
                 PL.SUB_TRD_CD    ,
                 PL.RLANE_CD      ,
                 PL.VSL_CD        ,
                 PL.SKD_VOY_NO    ,
                 PL.SKD_DIR_CD    ,
                 PL.PORT_CD       ,
                 PD.PORT_CD       ,
                 PL.OFC_CD        ,
                 PL.PORT_CD       ,
                 PL.CLPT_IND_SEQ  ,
                 PD.CLPT_IND_SEQ  ,
                 PL.CTRL_PORT,
                 PL.CTRL_WGT ,
                 PL.CTRL_40HC,
                 PL.CTRL_45HC,
                 PL.CTRL_53FT,
                 PL.CTRL_RF
   )
   
   
  SELECT DECODE(Z.IOC_TS_CD, 'O', 'OCN', 'I', 'IPC', 'T', 'T/S') AS IOC_TS_CD,
         Z.OFC_CD,
         Z.POL_CD,
         Z.POD_CD,
         ROUND(SUM(Z.BKG_QTA)) AS BKG_QTA,
         SUM(NVL(Z.FCT_VOL, 0) + NVL(Z.FCT_HC, 0) * SPC_GET_HC_RT_BSA_FNC(Z.TRD_CD ,Z.RLANE_CD ,Z.SKD_DIR_CD ,Z.VSL_CD, Z.SKD_VOY_NO,'D5') + NVL(Z.FCT_45, 0) * SPC_GET_HC_RT_BSA_FNC(Z.TRD_CD ,Z.RLANE_CD ,Z.SKD_DIR_CD ,Z.VSL_CD, Z.SKD_VOY_NO, 'D7') + NVL(Z.FCT_53, 0) * 2) AS FC_TTL_TEU,
         SUM(Z.FCT_VOL) AS FCT_VOL ,
         SUM(Z.FCT_HC)  AS FCT_HC  ,
         SUM(Z.FCT_45)  AS FCT_45  ,
         SUM(Z.FCT_53)  AS FCT_53  ,
         SUM(Z.FCT_RF)  AS FCT_RF  ,
         SUM(Z.FCT_WGT) AS FCT_WGT ,
         SUM(Z.ALC_VOL) AS ALC_VOL ,
         SUM(Z.ALC_20)  AS ALC_20  ,
         SUM(Z.ALC_40)  AS ALC_40  ,
         SUM(Z.ALC_HC)  AS ALC_HC  ,
         SUM(Z.ALC_45)  AS ALC_45  ,
         SUM(Z.ALC_53)  AS ALC_53  ,
         SUM(Z.ALC_RF)  AS ALC_RF  ,
         SUM(Z.ALC_WGT) AS ALC_WGT ,
         SUM(NVL(Z.FRM_20, 0) + NVL(Z.FRM_40, 0)*2 + NVL(Z.FRM_HC, 0) * SPC_GET_HC_RT_BSA_FNC(Z.TRD_CD ,Z.RLANE_CD ,Z.SKD_DIR_CD ,Z.VSL_CD, Z.SKD_VOY_NO,'D5') + NVL(Z.FRM_45, 0) * SPC_GET_HC_RT_BSA_FNC(Z.TRD_CD ,Z.RLANE_CD ,Z.SKD_DIR_CD ,Z.VSL_CD, Z.SKD_VOY_NO, 'D7') + NVL(Z.FRM_53, 0) * 2) AS FRM_VOL ,
         SUM(Z.FRM_20)  AS FRM_20  ,
         SUM(Z.FRM_40)  AS FRM_40  ,
         SUM(Z.FRM_HC)  AS FRM_HC  ,
         SUM(Z.FRM_45)  AS FRM_45  ,
         SUM(Z.FRM_53)  AS FRM_53  ,
         SUM(Z.FRM_RF)  AS FRM_RF  ,
         SUM(Z.FRM_WGT) AS FRM_WGT ,
         SUM(NVL(Z.WAT_20, 0) + NVL(Z.WAT_40, 0)*2 + NVL(Z.WAT_HC, 0) * SPC_GET_HC_RT_BSA_FNC(Z.TRD_CD ,Z.RLANE_CD ,Z.SKD_DIR_CD ,Z.VSL_CD, Z.SKD_VOY_NO,'D5') + NVL(Z.WAT_45, 0) * SPC_GET_HC_RT_BSA_FNC(Z.TRD_CD ,Z.RLANE_CD ,Z.SKD_DIR_CD ,Z.VSL_CD, Z.SKD_VOY_NO, 'D7') + NVL(Z.WAT_53, 0) * 2)  AS WAT_VOL ,
         SUM(Z.WAT_20)  AS WAT_20  ,
         SUM(Z.WAT_40)  AS WAT_40  ,
         SUM(Z.WAT_HC)  AS WAT_HC  ,
         SUM(Z.WAT_45)  AS WAT_45  ,
         SUM(Z.WAT_53)  AS WAT_53  ,
         SUM(Z.WAT_RF)  AS WAT_RF  ,
         SUM(Z.WAT_WGT) AS WAT_WGT ,
         MAX(CTRL_PORT) AS CTRL_PORT,
         3 - (GROUPING_ID(Z.POL_CD) + GROUPING_ID(Z.POD_CD)) AS LVL
    FROM (
            -- QTA
            SELECT DECODE(SUBSTR(T2.TRD_CD, 1, 1), 'I', 'I', 'O') AS IOC_TS_CD,
                   P.TRD_CD    ,
                   P.SUB_TRD_CD,
                   P.RLANE_CD  ,
                   P.VSL_CD    ,
                   P.SKD_VOY_NO,
                   P.SKD_DIR_CD,
                   T3.SAQ_RGN_OFC_CD AS OFC_CD,
                   T2.POL_CD         AS POL_CD,
                   T2.POD_CD         AS POD_CD,
                   (T2.LOD_QTY) AS BKG_QTA,
                   NULL AS FCT_VOL,
                   NULL AS FCT_HC ,
                   NULL AS FCT_45 ,
                   NULL AS FCT_53 ,
                   NULL AS FCT_RF ,
                   NULL AS FCT_WGT,
                   NULL AS ALC_VOL,
                   NULL AS ALC_20 ,
                   NULL AS ALC_40 ,
                   NULL AS ALC_HC ,
                   NULL AS ALC_45 ,
                   NULL AS ALC_53 ,
                   NULL AS ALC_RF ,
                   NULL AS ALC_WGT,
                   NULL AS FRM_VOL,
                   NULL AS FRM_20 ,
                   NULL AS FRM_40 ,
                   NULL AS FRM_HC ,
                   NULL AS FRM_45 ,
                   NULL AS FRM_53 ,
                   NULL AS FRM_RF ,
                   NULL AS FRM_WGT,
                   NULL AS WAT_VOL,
                   NULL AS WAT_20 ,
                   NULL AS WAT_40 ,
                   NULL AS WAT_HC ,
                   NULL AS WAT_45 ,
                   NULL AS WAT_53 ,
                   NULL AS WAT_RF ,
                   NULL AS WAT_WGT,
                   P.CTRL_PORT    ,
                   P.CTRL_WGT     ,
                   P.CTRL_40HC    ,
                   P.CTRL_45HC    ,
                   P.CTRL_53FT    ,
                   P.CTRL_RF
              FROM SAQ_MON_QTA_RLSE T1,
                   SAQ_MON_CFM_QTA  T2,
                   SPC_OFC_LVL      T3,
                   BASE             P
             WHERE T1.BSE_YR           = P.COST_YR
               AND T1.BSE_QTR_CD       = CEIL(TO_NUMBER(P.COST_MON) / 3)||'Q'
               AND T1.QTA_RLSE_STS_CD  = 'R'
               AND T2.MQTA_RLSE_VER_NO = T1.MQTA_RLSE_VER_NO
               AND T2.BSE_YR           = T1.BSE_YR
               AND T2.BSE_QTR_CD       = T1.BSE_QTR_CD 
               AND T2.QTA_TGT_CD       = 'T'
               AND T2.TRD_CD           = P.TRD_CD
               AND T2.RLANE_CD         = P.RLANE_CD
               AND T2.DIR_CD           = P.SKD_DIR_CD
               AND T2.VSL_CD           = P.VSL_CD
               AND T2.SKD_VOY_NO       = P.SKD_VOY_NO
               AND T2.SKD_DIR_CD       = P.SKD_DIR_CD
               AND T2.RGN_OFC_CD       = P.OFC_CD
               AND T2.RGN_OFC_CD       = T3.OFC_CD
               AND P.COST_YR || P.COST_WK BETWEEN T3.OFC_APLY_FM_YRWK AND T3.OFC_APLY_TO_YRWK
            UNION ALL
            -- FORECAST
            SELECT 
                   Z.IOC_TS_CD ,
                   P.TRD_CD    ,
                   P.SUB_TRD_CD,
                   P.RLANE_CD  ,
                   P.VSL_CD    ,
                   P.SKD_VOY_NO,
                   P.SKD_DIR_CD,
                   Z.SLS_OFC_CD AS OFC_CD,
                   Z.POL_YD_CD  AS POL_CD,
                   Z.POD_YD_CD  AS POD_CD,
                   NULL              AS BKG_QTA,
                   Z.CFM_TTL_QTY     AS FCT_VOL,
                   Z.CFM_40FT_HC_QTY AS FCT_HC ,
                   Z.CFM_45FT_HC_QTY AS FCT_45 ,
                   Z.CFM_53FT_QTY    AS FCT_53 ,
                   Z.CFM_RF_QTY      AS FCT_RF ,
                   Z.CFM_TTL_WGT     AS FCT_WGT,
                   NULL AS ALC_VOL,
                   NULL AS ALC_20 ,
                   NULL AS ALC_40 ,
                   NULL AS ALC_HC ,
                   NULL AS ALC_45 ,
                   NULL AS ALC_53 ,
                   NULL AS ALC_RF ,
                   NULL AS ALC_WGT,
                   NULL AS FRM_VOL,
                   NULL AS FRM_20 ,
                   NULL AS FRM_40 ,
                   NULL AS FRM_HC ,
                   NULL AS FRM_45 ,
                   NULL AS FRM_53 ,
                   NULL AS FRM_RF ,
                   NULL AS FRM_WGT,
                   NULL AS WAT_VOL,
                   NULL AS WAT_20 ,
                   NULL AS WAT_40 ,
                   NULL AS WAT_HC ,
                   NULL AS WAT_45 ,
                   NULL AS WAT_53 ,
                   NULL AS WAT_RF ,
                   NULL AS WAT_WGT,
                   P.CTRL_PORT    ,
                   P.CTRL_WGT     ,
                   P.CTRL_40HC    ,
                   P.CTRL_45HC    ,
                   P.CTRL_53FT    ,
                   P.CTRL_RF
              FROM VVD_POL_POD        P,
                   SPC_DLY_FCAST_CUST Z
                   
             WHERE Z.RLANE_CD   = P.RLANE_CD
               AND Z.DIR_CD     = P.SKD_DIR_CD
               AND Z.VSL_CD     = P.VSL_CD
               AND Z.SKD_VOY_NO = P.SKD_VOY_NO
               AND Z.SKD_DIR_CD = P.SKD_DIR_CD
               AND Z.SLS_OFC_CD = P.OFC_CD
               AND Z.TRD_CD     = P.TRD_CD
               AND Z.SUB_TRD_CD = P.SUB_TRD_CD
               AND Z.POL_YD_CD  = P.POL_CD
               AND Z.POD_YD_CD  = P.POD_CD
               AND NVL(Z.POL_IND_SEQ,1) = NVL(P.PL_CLPT_IND_SEQ,1)
               AND NVL(Z.POD_IND_SEQ,1) = NVL(P.PD_CLPT_IND_SEQ,1)
            UNION ALL
            -- ALLOCATION
            SELECT 
                   DECODE(Z.TS_FLG, 'Y', 'T', Z.IOC_CD) AS IOC_TS_CD,
                   P.TRD_CD,
                   P.SUB_TRD_CD,
                   P.RLANE_CD,
                   P.VSL_CD,
                   P.SKD_VOY_NO,
                   P.SKD_DIR_CD,
                   Z.SLS_OFC_CD AS OFC_CD,
                   Z.POL_YD_CD  AS POL_CD,
                   Z.POD_YD_CD  AS POD_CD,
                   NULL AS BKG_QTA,
                   NULL AS FCT_VOL,
                   NULL AS FCT_HC ,
                   NULL AS FCT_45 ,
                   NULL AS FCT_53 ,
                   NULL AS FCT_RF ,
                   NULL AS FCT_WGT,
                   (Z.BKG_AVAL_TTL_QTY)     AS ALC_VOL,
                   (Z.BKG_AVAL_20FT_QTY)    AS ALC_20 ,
                   (Z.BKG_AVAL_40FT_QTY)    AS ALC_40 ,
                   (Z.BKG_AVAL_40FT_HC_QTY) AS ALC_HC ,
                   (Z.BKG_AVAL_45FT_HC_QTY) AS ALC_45 ,
                   (Z.BKG_AVAL_53FT_QTY)    AS ALC_53 ,
                   (Z.BKG_AVAL_RF_QTY)      AS ALC_RF ,
                   (Z.BKG_AVAL_TTL_WGT)     AS ALC_WGT,
                   NULL AS FRM_VOL,
                   NULL AS FRM_20 ,
                   NULL AS FRM_40 ,
                   NULL AS FRM_HC ,
                   NULL AS FRM_45 ,
                   NULL AS FRM_53 ,
                   NULL AS FRM_RF ,
                   NULL AS FRM_WGT,
                   NULL AS WAT_VOL,
                   NULL AS WAT_20 ,
                   NULL AS WAT_40 ,
                   NULL AS WAT_HC ,
                   NULL AS WAT_45 ,
                   NULL AS WAT_53 ,
                   NULL AS WAT_RF ,
                   NULL AS WAT_WGT,
                   P.CTRL_PORT    ,
                   P.CTRL_WGT     ,
                   P.CTRL_40HC    ,
                   P.CTRL_45HC    ,
                   P.CTRL_53FT    ,
                   P.CTRL_RF
              FROM VVD_POL_POD      P,
                   SPC_ALOC_POL_POD Z
             WHERE Z.RLANE_CD   = P.RLANE_CD
               AND Z.DIR_CD     = P.SKD_DIR_CD
               AND Z.VSL_CD     = P.VSL_CD
               AND Z.SKD_VOY_NO = P.SKD_VOY_NO
               AND Z.SKD_DIR_CD = P.SKD_DIR_CD
               AND Z.SLS_OFC_CD = P.OFC_CD
               AND Z.TRD_CD     = P.TRD_CD
               AND Z.SUB_TRD_CD = P.SUB_TRD_CD
               AND Z.POL_YD_CD =  P.POL_CD
               AND Z.POD_YD_CD  = P.POD_CD
               AND NVL(Z.POL_IND_SEQ,1) = NVL(P.PL_CLPT_IND_SEQ,1)
               AND NVL(Z.POD_IND_SEQ,1) = NVL(P.PD_CLPT_IND_SEQ,1)
              
            UNION ALL
  
           SELECT
                   IOC_TS_CD,
                   TRD_CD    ,
                   SUB_TRD_CD,
                   RLANE_CD  ,
                   VSL_CD    ,
                   SKD_VOY_NO,
                   SKD_DIR_CD,
                   SLS_OFC_CD AS OFC_CD,
                   POL_CD,
                   POD_CD,
                   NULL AS BKG_QTA,
                   NULL AS FCT_VOL,
                   NULL AS FCT_HC ,
                   NULL AS FCT_45 ,
                   NULL AS FCT_53 ,
                   NULL AS FCT_RF ,
                   NULL AS FCT_WGT,
                   NULL AS ALC_VOL,
                   NULL AS ALC_20 ,
                   NULL AS ALC_40 ,
                   NULL AS ALC_HC ,
                   NULL AS ALC_45 ,
                   NULL AS ALC_53 ,
                   NULL AS ALC_RF ,
                   NULL AS ALC_WGT,
                   DECODE(BKG_STS_CD, 'F', BKG_TTL_QTY     ,0) AS FIRM_VOL,
                   DECODE(BKG_STS_CD, 'F', BKG_20FT_QTY    ,0) AS FIRM_20 ,
                   DECODE(BKG_STS_CD, 'F', BKG_40FT_QTY    ,0) AS FIRM_40 ,
                   DECODE(BKG_STS_CD, 'F', BKG_40FT_HC_QTY ,0) AS FIRM_HC ,
                   DECODE(BKG_STS_CD, 'F', BKG_45FT_HC_QTY ,0) AS FIRM_45 ,
                   DECODE(BKG_STS_CD, 'F', BKG_53FT_QTY    ,0) AS FIRM_53 ,
                   DECODE(BKG_STS_CD, 'F', BKG_RF_QTY      ,0) AS FIRM_RF ,
                   DECODE(BKG_STS_CD, 'F', BKG_TTL_WGT     ,0) AS FIRM_WGT,
                   DECODE(BKG_STS_CD, 'W', BKG_TTL_QTY     ,0) AS WAT_VOL ,
                   DECODE(BKG_STS_CD, 'W', BKG_20FT_QTY    ,0) AS WAT_20  ,
                   DECODE(BKG_STS_CD, 'W', BKG_40FT_QTY    ,0) AS WAT_40  ,
                   DECODE(BKG_STS_CD, 'W', BKG_40FT_HC_QTY ,0) AS WAT_HC  ,
                   DECODE(BKG_STS_CD, 'W', BKG_45FT_HC_QTY ,0) AS WAT_45  ,
                   DECODE(BKG_STS_CD, 'W', BKG_53FT_QTY    ,0) AS WAT_53  ,
                   DECODE(BKG_STS_CD, 'W', BKG_RF_QTY      ,0) AS WAT_RF  ,
                   DECODE(BKG_STS_CD, 'W', BKG_TTL_WGT     ,0) AS WAT_WGT ,
                   CTRL_PORT,
                   CTRL_WGT ,
                   CTRL_40HC,
                   CTRL_45HC,
                   CTRL_53FT,
                   CTRL_RF
           
           
        FROM (
              SELECT 
                     TRD_CD              ,
                     SUB_TRD_CD          ,
                     RLANE_CD      		 ,
                     COST_YR             ,
                     COST_WK             ,
                     VSL_CD        		 ,
                     SKD_VOY_NO    		 ,
                     SKD_DIR_CD    		 ,
                     SLS_OFC_CD          ,
                     IOC_TS_CD           ,
                     POL_CD              ,
                     POD_CD              ,
                     BKG_STS_CD          ,
                     TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY    ,
                     TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_20FT_QTY   ,
                     TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)) AS BKG_40FT_QTY   ,
                     TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)) AS BKG_40FT_HC_QTY,
                     TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)) AS BKG_45FT_HC_QTY,
                     TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)) AS BKG_53FT_QTY   ,
                     TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)) AS BKG_RF_QTY     ,
                     TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0)) AS BKG_TTL_WGT    ,
                     CTRL_PORT,
                     CTRL_WGT ,
                     CTRL_40HC,
                     CTRL_45HC,
                     CTRL_53FT,
                     CTRL_RF
                FROM (
                        SELECT  /*+ ORDERED USE_NL(VPP BV B D) USE_HASH(O) */
                                
                               VPP.TRD_CD        ,
                               VPP.SUB_TRD_CD    ,
                               VPP.RLANE_CD      ,
                               VPP.VSL_CD        ,
                               VPP.SKD_VOY_NO    ,
                               VPP.SKD_DIR_CD    ,
                               B.OB_SLS_OFC_CD AS SLS_OFC_CD ,
                               VPP.COST_YR       ,
                               VPP.COST_WK       ,

                           DECODE(BV.VSL_PRE_PST_CD,'T', (SELECT   DECODE(B.FM_CONTI_CD,B.TO_CONTI_CD,'I','O')
                                                         FROM MDM_REV_LANE A,  MDM_DTL_REV_LANE B
                                                         WHERE B.RLANE_CD = A.RLANE_CD
                                                          AND B.RLANE_CD LIKE BV.SLAN_CD||'%'
                                                          AND B.FM_CONTI_CD = (
                                                                                SELECT MLOC.CONTI_CD
                                                                                FROM MDM_LOCATION MLOC
                                                                                WHERE MLOC.LOC_CD = BV.POL_CD 
                                                                              )
                                                          AND B.TO_CONTI_CD = (
                                                                                SELECT MLOC.CONTI_CD
                                                                                FROM MDM_LOCATION MLOC
                                                                                WHERE MLOC.LOC_CD = BV.POD_CD 
                                                                               )
                                                          AND B.VSL_SLAN_DIR_CD = BV.SKD_DIR_CD
                                                          AND B.DELT_FLG = 'N'
                                                          AND ROWNUM = 1 ),'T') AS IOC_TS_CD ,
                               VPP.POL_CD              ,
                               VPP.POD_CD              ,
                               B.BKG_STS_CD            ,

                               (
                                  SELECT
                                            TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, '5', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D5'), '7', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D7'), 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0) + DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'T', Q.RC_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR((D.ACT_WGT * DECODE(D.WGT_UT_CD, 'LBS', 0.00045, 0.001))
                                                                 + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT
                                                                                           FROM MDM_CNTR_TP_SZ TS
                                                                                          WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
                                    FROM BKG_QUANTITY Q
                                   WHERE B.BKG_NO      = Q.BKG_NO
                                     AND Q.OP_CNTR_QTY > 0
                               ) AS VAL ,
                               VPP.CTRL_PORT,
                               VPP.CTRL_WGT ,
                               VPP.CTRL_40HC,
                               VPP.CTRL_45HC,
                               VPP.CTRL_53FT,
                               VPP.CTRL_RF
                         FROM  
                               VVD_POL_POD VPP,
                               BKG_VVD     BV ,
                               BKG_BOOKING B  ,
                               SPC_OFC_LVL O  , 
                               BKG_BL_DOC  D
                         WHERE 1=1
                           AND (VPP.TRD_CD,VPP.SUB_TRD_CD,VPP.RLANE_CD)  =  (
                                                                                        SELECT   B.TRD_CD,B.SUB_TRD_CD ,B.RLANE_CD
                                                                                        FROM MDM_REV_LANE A,  MDM_DTL_REV_LANE B
                                                                                        WHERE B.RLANE_CD = A.RLANE_CD
                                                                                          AND B.RLANE_CD LIKE BV.SLAN_CD||'%'
                                                                                          AND B.FM_CONTI_CD = (
                                                                                                                SELECT MLOC.CONTI_CD
                                                                                                                FROM MDM_LOCATION MLOC
                                                                                                                WHERE MLOC.LOC_CD = BV.POL_CD 
                                                                                                              )
                                                                                          AND B.TO_CONTI_CD = (
                                                                                                                SELECT MLOC.CONTI_CD
                                                                                                                FROM MDM_LOCATION MLOC
                                                                                                                WHERE MLOC.LOC_CD = BV.POD_CD 
                                                                                                               )
                                                                                          AND B.VSL_SLAN_DIR_CD = BV.SKD_DIR_CD
                                                                                          AND B.DELT_FLG = 'N'
                                                                                          AND ROWNUM = 1 
                                                                                      ) 
                           AND O.OFC_TP_CD     IN ('BB', 'BA', 'BS')
                           AND O.OFC_CD     = B.OB_SLS_OFC_CD
                           AND O.OFC_CD     = VPP.OFC_CD
                           AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                           AND B.BKG_STS_CD    IN ('W', 'F')
                           AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
                           AND B.BKG_NO         = BV.BKG_NO
                           AND BV.VSL_CD        = VPP.VSL_CD
                           AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO
                           AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD
                           AND BV.POL_YD_CD     = VPP.POL_CD                            
                           AND BV.POD_YD_CD     = VPP.POD_CD                                                                                  
                           AND B.BKG_NO         = D.BKG_NO
                           AND NVL(VPP.PL_CLPT_IND_SEQ,'1') = NVL(BV.POL_CLPT_IND_SEQ,'1')
                           AND NVL(VPP.PD_CLPT_IND_SEQ,'1') = NVL(BV.POD_CLPT_IND_SEQ,'1')

                     )
             ) 
    
        ) Z
GROUP BY GROUPING SETS (
                         (Z.IOC_TS_CD, Z.OFC_CD, Z.POL_CD, Z.POD_CD),
                         (Z.IOC_TS_CD, Z.OFC_CD, Z.POL_CD),
                         (Z.IOC_TS_CD, Z.OFC_CD)
                       )
  HAVING SUBSTR(NVL(Z.POL_CD, ' '), 1, 5) <> '00000'
ORDER BY DECODE(Z.IOC_TS_CD, 'O', 1, 'I', 2, 'T', 3),
         Z.OFC_CD,
         NVL(Z.POL_CD, '0'),
         NVL(Z.POD_CD, '0')			]]></sql>
			<params>
				<param name="trade" type="12" value="" out="N"/>
				<param name="subtrade" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="sales_office" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
