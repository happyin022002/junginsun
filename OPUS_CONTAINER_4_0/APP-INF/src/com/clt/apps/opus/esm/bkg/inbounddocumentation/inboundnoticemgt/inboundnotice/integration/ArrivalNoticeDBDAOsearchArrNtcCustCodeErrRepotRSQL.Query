<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ArrivalNoticeDBDAOsearchArrNtcCustCodeErrRepotRSQL">
			<desc><![CDATA[Customer Code Error Report]]></desc>
			<sql><![CDATA[
SELECT  BKG_NO
      , BKG_CUST_TP_CD
      , BL_NO
      , CUST_TP_CD
      , CUST_TP_CD_NM
      , ERR_CD
      , CRT_CD
      , CD_CRE_DT
      , EVL_RST_CD
      , EVL_RST_NM
      , CD_INPUT_OFC_CD
      , CD_INPUT_USR_ID
      , CD_INPUT_DT
      , BKG_OFC_CD
      , EVL_OFC_CD
      , EVL_USR_ID
      , EVL_DT
      , OB_EV_CD
      , IB_EV_CD
      , HQ_EV_CD
      , ROW_COUNT
  FROM  (
        SELECT  BKGM.BKG_NO
              , BCST.BKG_CUST_TP_CD
              , BKGM.BL_NO -- 1
              , BCST.BKG_CUST_TP_CD CUST_TP_CD -- 2
              , CDTL.INTG_CD_VAL_DP_DESC CUST_TP_CD_NM
              , BCST.ORG_CUST_CNT_CD || DECODE(BCST.ORG_CUST_SEQ, 0, NULL, LPAD(BCST.ORG_CUST_SEQ, 6, '0')) ERR_CD -- 3
              , BCST.CUST_CNT_CD || DECODE(BCST.CUST_SEQ, 0, NULL, LPAD(BCST.CUST_SEQ, 6, '0')) CRT_CD -- 4
              , TO_CHAR(MCST.EAI_EVNT_DT, 'YYYYMMDD') CD_CRE_DT -- 5
              , BCST.VAL_CD EVL_RST_CD -- 6
              , DECODE(BCST.MTCH_FLG, 'Y', 'AUTO', VACD.INTG_CD_VAL_DP_DESC) AS EVL_RST_NM -- 7
              , NVL((SELECT (SELECT OFC_CD FROM COM_USER WHERE UPPER(USR_ID) = UPPER(BKG_HIS_DTL.CRE_USR_ID) AND USE_FLG = 'Y' AND ROWNUM = 1 )
                       FROM BKG_HIS_DTL
                      WHERE BKG_NO = BKGM.BKG_NO
                        AND TO_CHAR(HIS_SEQ)||TRIM(TO_CHAR(HIS_DTL_SEQ, '000')) = BCST.HIS_CUST_CD_MAX),
                    (SELECT (SELECT OFC_CD FROM COM_USER WHERE UPPER(USR_ID) = UPPER(BKG_HIS_DTL.CRE_USR_ID) AND USE_FLG = 'Y' AND ROWNUM = 1 )
                       FROM BKG_HIS_DTL
                      WHERE BKG_NO = BKGM.BKG_NO
                        AND TO_CHAR(HIS_SEQ)||TRIM(TO_CHAR(HIS_DTL_SEQ, '000')) = BCST.HIS_CUST_NM_MAX)) CD_INPUT_OFC_CD
              , NVL((SELECT CRE_USR_ID FROM BKG_HIS_DTL WHERE BKG_NO = BKGM.BKG_NO AND TO_CHAR(HIS_SEQ)||TRIM(TO_CHAR(HIS_DTL_SEQ, '000')) = BCST.HIS_CUST_CD_MAX),
                    (SELECT CRE_USR_ID FROM BKG_HIS_DTL WHERE BKG_NO = BKGM.BKG_NO AND TO_CHAR(HIS_SEQ)||TRIM(TO_CHAR(HIS_DTL_SEQ, '000')) = BCST.HIS_CUST_NM_MAX)) CD_INPUT_USR_ID
              , TO_CHAR(BCST.CUST_CD_UPD_DT, 'YYYYMMDD') CD_INPUT_DT -- 9
              , BKGM.BKG_OFC_CD
              , BCST.VAL_OFC_CD EVL_OFC_CD -- 10
              , BCST.VAL_USR_ID EVL_USR_ID -- 11
              , TO_CHAR(BCST.VAL_DT, 'YYYYMMDD') EVL_DT -- 12
              , DECODE(BCST.OB_EV_CD, 'C' , 1, 0) OB_EV_CD
              , DECODE(BCST.IB_EV_CD, 'C' , 1, 0) IB_EV_CD
              , DECODE(BCST.HQ_EV_CD, 'C' , 1, 0) HQ_EV_CD
              , ROW_NUMBER() OVER (ORDER BY BKGM.BKG_CRE_DT DESC, BCST.BKG_CUST_TP_CD ) ROW_NUM
              , COUNT(1) OVER () ROW_COUNT
          FROM  (
                   SELECT /*+ INDEX(BMST XPKBKG_HIS_MST) */
                          DISTINCT BKGM.ROWID RID,
                          BCST.CUST_CNT_CD,
                          BCST.CUST_SEQ,
                          BCST.BKG_CUST_TP_CD,
                          BCST.VAL_CD,
                          BCST.ORG_CUST_CNT_CD,
                          BCST.ORG_CUST_SEQ,
                          BCST.MTCH_FLG,
                          BCST.VAL_OFC_CD,
                          BCST.VAL_USR_ID,
                          BCST.VAL_DT,
                          BCST.OB_EV_CD,
                          BCST.IB_EV_CD,
                          BCST.HQ_EV_CD,
                          BCST.CUST_CD_UPD_DT,
                          (  SELECT /*+ INDEX_DESC (BKG_HIS_DTL XPKBKG_HIS_DTL) */
                                    TO_NUMBER(TO_CHAR(BKG_HIS_DTL.HIS_SEQ)||TRIM(TO_CHAR(BKG_HIS_DTL.HIS_DTL_SEQ, '000')))
                               FROM BKG_HIS_MST,
                                    BKG_HIS_DTL
                              WHERE BKG_HIS_MST.BKG_NO = BKG_HIS_DTL.BKG_NO
                                AND BKG_HIS_MST.HIS_SEQ = BKG_HIS_DTL.HIS_SEQ
                                AND BKG_HIS_MST.BKG_NO = BKGM.BKG_NO
                                AND BKG_HIS_MST.BKG_HIS_ISS_UI_ID = 'ESM_BKG_0079_05'
                                AND HIS_CATE_NM LIKE DECODE(BCST.BKG_CUST_TP_CD, 'C', 'CNEE CD%', 'N', 'NTFY CD%', 'S', 'SHPR CD%')
                                AND ROWNUM <= 1
                          ) HIS_CUST_CD_MAX,
                          (  SELECT /*+ INDEX_DESC (BKG_HIS_DTL XPKBKG_HIS_DTL) */
                                    TO_NUMBER(TO_CHAR(BKG_HIS_DTL.HIS_SEQ)||TRIM(TO_CHAR(BKG_HIS_DTL.HIS_DTL_SEQ, '000')))
                               FROM BKG_HIS_MST,
                                    BKG_HIS_DTL
                              WHERE BKG_HIS_MST.BKG_NO = BKG_HIS_DTL.BKG_NO
                                AND BKG_HIS_MST.HIS_SEQ = BKG_HIS_DTL.HIS_SEQ
                                AND BKG_HIS_MST.BKG_NO = BKGM.BKG_NO
                                AND BKG_HIS_MST.BKG_HIS_ISS_UI_ID = 'ESM_BKG_0079_05'
                                AND HIS_CATE_NM LIKE DECODE(BCST.BKG_CUST_TP_CD, 'C', 'CNEE NM%', 'N', 'NTFY NM%', 'S', 'SHPR NM%')
                                AND ROWNUM <= 1
                          ) HIS_CUST_NM_MAX
                     FROM BKG_BOOKING BKGM,
                          BKG_HIS_MST BMST,
                          BKG_HIS_DTL BHIS,
                          BKG_CUSTOMER BCST,
                          COM_USER
                    WHERE BKGM.BKG_NO = BMST.BKG_NO
                      AND BMST.BKG_NO = BHIS.BKG_NO
                      AND BMST.HIS_SEQ = BHIS.HIS_SEQ
                      AND BKGM.BKG_NO = BCST.BKG_NO
                      AND COM_USER.USR_ID = BHIS.CRE_USR_ID
#if ( ${bkg_cre_dt_s} != '' && ${bkg_cre_dt_e} != '')
                      AND BKGM.BKG_CRE_DT >= TO_DATE(@[bkg_cre_dt_s], 'YYYYMMDD')
                      AND BKGM.BKG_CRE_DT <  TO_DATE(@[bkg_cre_dt_e], 'YYYYMMDD') + 1
#end
                      AND BMST.BKG_HIS_ISS_UI_ID = 'ESM_BKG_0079_05'
                      AND (HIS_CATE_NM LIKE DECODE(BCST.BKG_CUST_TP_CD, 'C', 'CNEE CD%', 'N', 'NTFY CD%', 'S', 'SHPR CD%') OR HIS_CATE_NM LIKE DECODE(BCST.BKG_CUST_TP_CD, 'C', 'CNEE NM%', 'N', 'NTFY NM%', 'S', 'SHPR NM%'))
                      AND BCST.BKG_CUST_TP_CD IN ('C','N')
                      AND BKGM.BKG_STS_CD NOT IN( 'X', 'S')
                      AND BKGM.BKG_CGO_TP_CD IN ('F', 'R')
                      AND (
                            (BKGM.SAM_CNEE_NTFY_FLG = 'N'
                             AND BKGM.CUST_TO_ORD_FLG = 'N' -- Consignee, Notify둘다 생성
                            )
                         OR (BKGM.SAM_CNEE_NTFY_FLG = 'Y'  -- Notify는 Consignee와 같으므로 Consignee만 생성
                             AND BCST.BKG_CUST_TP_CD = 'C'
                            )
                         OR (BKGM.CUST_TO_ORD_FLG = 'Y'    -- Notify에게 연락하므로 Notify만 생성
                             AND BCST.BKG_CUST_TP_CD = 'N'
                            )
                       )
   
        
#if ( ${bkg_ofc_cd} != '')
                      AND BKGM.BKG_OFC_CD  = @[bkg_ofc_cd]
#end
#if ( ${code_ofc_cd} != '')
                      AND COM_USER.OFC_CD = @[code_ofc_cd]
#end
            
                      AND BCST.MTCH_FLG = @[mtch_flg]
                      
#if ( ${mtch_flg} == 'N')
                      AND NVL(BCST.VAL_CD,' ') NOT IN ('C','X' ) -- C, X는 제외됨 X(Auto-Cancel)은 이미 제외되므로 변경사항 없음
#end
#if ( ${mtch_flg} == 'N' && ${val_cd} != '') 
                      AND BCST.VAL_CD = @[val_cd]
#end
#if ( ${mtch_flg} == 'N' && ${ob_ev_cd} != '') 
                      AND BCST.OB_EV_CD = 'C'
#end
#if ( ${mtch_flg} == 'N' && ${ib_ev_cd} != '') 
                      AND BCST.IB_EV_CD = 'C'
#end
#if ( ${mtch_flg} == 'N' && ${hq_ev_cd} != '') 
                      AND BCST.HQ_EV_CD = 'C'
#end
#if ( ${doc_usr_id} != '')
                      AND BKGM.DOC_USR_ID LIKE @[doc_usr_id] || '%'
#end
#if ( ${cust_tp_cd} != '')
                      AND BCST.BKG_CUST_TP_CD = @[cust_tp_cd]
#else
#end
#if ( ${val_dt_s} != '')
                      AND BCST.VAL_DT BETWEEN TO_DATE (@[val_dt_s], 'YYYYMMDD') AND (TO_DATE(@[val_dt_e], 'YYYYMMDD') + 1 )
#end
#if ( ${val_ofc_cd} != '')
                      AND BCST.VAL_OFC_CD = @[val_ofc_cd]
#end
#if ( ${cust_cd} != '')
                      AND BCST.ORG_CUST_CNT_CD = SUBSTR(@[cust_cd], 1,2)
                      AND BCST.ORG_CUST_SEQ    = TO_NUMBER(SUBSTR(@[cust_cd], 3,6))
#end
#if ( ${val_usr_id} != '')
                      AND BCST.VAL_USR_ID LIKE @[val_usr_id] || '%'
#end
#if ( ${bl_no} != '')
                      AND BKGM.BL_NO = @[bl_no]
#end
                ) BCST,
                BKG_BOOKING BKGM,
                MDM_CUSTOMER MCST,
                COM_INTG_CD_DTL CDTL,
                COM_INTG_CD_DTL VACD
         WHERE  1 = 1
           AND  BCST.RID = BKGM.ROWID
           AND  MCST.CUST_CNT_CD (+) = BCST.CUST_CNT_CD
           AND  MCST.CUST_SEQ (+) = BCST.CUST_SEQ
           AND  CDTL.INTG_CD_ID = 'CD00880'
           AND  CDTL.INTG_CD_VAL_CTNT = BCST.BKG_CUST_TP_CD
           AND  VACD.INTG_CD_ID (+) = 'CD01655'
           AND  VACD.INTG_CD_VAL_CTNT (+) = BCST.VAL_CD
        )
#if (${excel_flg} != 'Y')
 WHERE  ROW_NUM > (TO_NUMBER(@[page_no]) -1) * TO_NUMBER(@[pagerows] )
   AND  ROW_NUM <= TO_NUMBER(@[page_no]) * TO_NUMBER(@[pagerows] )
#end			]]></sql>
			<params>
				<param name="bkg_cre_dt_s" type="12" value="" out="Y"/>
				<param name="bkg_cre_dt_e" type="12" value="" out="Y"/>
				<param name="bkg_ofc_cd" type="12" value="" out="Y"/>
				<param name="code_ofc_cd" type="12" value="" out="N"/>
				<param name="mtch_flg" type="12" value="" out="N"/>
				<param name="val_cd" type="12" value="" out="N"/>
				<param name="doc_usr_id" type="12" value="" out="N"/>
				<param name="cust_tp_cd" type="12" value="" out="N"/>
				<param name="val_dt_s" type="12" value="" out="N"/>
				<param name="val_dt_e" type="12" value="" out="N"/>
				<param name="val_ofc_cd" type="12" value="" out="N"/>
				<param name="cust_cd" type="12" value="" out="N"/>
				<param name="val_usr_id" type="12" value="" out="N"/>
				<param name="bl_no" type="12" value="" out="N"/>
				<param name="page_no" type="12" value="" out="N"/>
				<param name="pagerows" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
