<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AGTAuditDBDAOSelectAgentActualINFtoAPRSQL">
			<desc><![CDATA[SelectAgentActualINFtoAP]]></desc>
			<sql><![CDATA[
SELECT
           A.CSR_AMT,
           B.LOCAL_DT,
           B.AP_OFC_CD,
           B.PAY_MZD_LU_CD,
           B.PAY_GRP_LU_CD,
           B.FINC_RGN_CD,
           B.AP_CTR_CD,
           B.AR_HD_QTR_OFC_CD,
           SUBSTR (C.ERR_BKG_NO_CRE_DT, 1, 11) AS ERR_BKG_NO,
           SUBSTR (C.ERR_BKG_NO_CRE_DT, 12)    AS ERR_BKG_CRE_DT,
         ( ---- GET CSR_NO
               SELECT
                      '08'
                   || CASE WHEN A.CSR_AMT < 0 THEN 'C' ELSE 'S' END
                   || B.AR_OFC_CD
                   || B.LOCAL_DT
                   || NVL (MAX (TO_NUMBER (SUBSTR(X.CSR_NO,LENGTH (X.CSR_NO)-4)))+1,10001)
                 FROM AP_CSR_NO X
                WHERE X.CSR_NO LIKE '08'||CASE WHEN A.CSR_AMT < 0 THEN 'C' ELSE 'S' END||B.AR_OFC_CD||B.LOCAL_DT||'%'
         ) AS CSR_NO,
           D.OFFSET_FLG,
		   D.VNDR_SEQ,
           D.VNDR_SEQ AS VNDR_NO,
           D.INV_DESC,
           D.COA_INTR_CMPY_CD,
           D.CURR_CD,
           @[asa_no]                             AS ASA_NO,
           E.ASA_CURR_CD,
           E.ASA_CNT,
      CASE ---- GET EFF_DATE
      WHEN
         (     SELECT
                      MAX(CLZ_STS_CD) AS STS
                 FROM AP_PERIOD
                WHERE SYS_DIV_CD    = 23
                  AND AR_AP_DIV_CD  = 'P'
                  AND OFC_CD        = B.AP_OFC_CD
                  AND EFF_YRMON     = SUBSTR (REPLACE (@[inv_dt], '-', ''), 1, 6)
         ) = 'O'
      THEN REPLACE (@[inv_dt], '-', '')
      WHEN
         (     SELECT
                      MIN (EFF_YRMON)
                   || '01' AS DT
                 FROM AP_PERIOD
                WHERE SYS_DIV_CD    = 23
                  AND AR_AP_DIV_CD  = 'P'
                  AND OFC_CD        = B.AP_OFC_CD
                  AND CLZ_STS_CD    = 'O'
                  AND EFF_YRMON    >= SUBSTR(REPLACE (@[inv_dt], '-', ''), 1, 6)
         ) <> '01'
      THEN
         (     SELECT
                      MIN (EFF_YRMON)
                   || '01' AS DT
                 FROM AP_PERIOD
                WHERE SYS_DIV_CD    = 23
                  AND AR_AP_DIV_CD  = 'P'
                  AND OFC_CD        = B.AP_OFC_CD
                  AND CLZ_STS_CD    = 'O'
                  AND EFF_YRMON    >= SUBSTR(REPLACE (@[inv_dt], '-', ''), 1, 6)
         )
      WHEN
         (     SELECT
                      MAX(CLZ_STS_CD) AS STS
                 FROM AP_PERIOD
                WHERE SYS_DIV_CD    = 23
                  AND AR_AP_DIV_CD  = 'P'
                  AND OFC_CD        = B.AR_HD_QTR_OFC_CD
                  AND EFF_YRMON     = SUBSTR (REPLACE (@[inv_dt], '-', ''), 1, 6)
         ) = 'O'
      THEN REPLACE (@[inv_dt], '-', '')
      WHEN
         (     SELECT
                      MIN (EFF_YRMON)
                   || '01' AS DT
                 FROM AP_PERIOD
                WHERE SYS_DIV_CD    = 23
                  AND AR_AP_DIV_CD  = 'P'
                  AND OFC_CD        = B.AR_HD_QTR_OFC_CD
                  AND CLZ_STS_CD    = 'O'
                  AND EFF_YRMON    >= SUBSTR(REPLACE (@[inv_dt], '-', ''), 1, 6)
         ) <> '01'
      THEN
         (     SELECT
                      MIN (EFF_YRMON)
                   || '01' AS DT
                 FROM AP_PERIOD
                WHERE SYS_DIV_CD    = 23
                  AND AR_AP_DIV_CD  = 'P'
                  AND OFC_CD        = B.AR_HD_QTR_OFC_CD
                  AND CLZ_STS_CD    = 'O'
                  AND EFF_YRMON    >= SUBSTR(REPLACE (@[inv_dt], '-', ''), 1, 6)
         )
       END AS GL_DT,
           F.ERR_VVD_BKG_NO,
		   F.ERR_VVD,
           SUBSTR (G.ERR_VVD_LVL, 1, 11)     AS ERR_VVD_LVL_BKG_NO,
           SUBSTR (G.ERR_VVD_LVL, 12)        AS ERR_VVD_LVL_VVD_CD,
           SUBSTR (G.ERR_VVD_LVL_FLG, 1, 11) AS ERR_VVD_LVL_FLG_BKG_NO,
           SUBSTR (G.ERR_VVD_LVL_FLG, 12)    AS ERR_VVD_LVL_FLG_VVD_CD,
           @[inv_tax_rt]                     AS INV_TAX_RT,
           REPLACE (@[inv_dt], '-', '')      AS INV_DT,
           @[agn_cd]                         AS AGN_CD,
           @[ar_ofc_cd]                      AS AR_OFC_CD,
           @[upd_usr_id]                     AS UPD_USR_ID,
           @[cre_usr_id]                     AS CRE_USR_ID
      FROM
         ( ---- GET CSR AMOUNT
               SELECT
                      MAX (
                 CASE
                 WHEN A.OFFST_AGN_FLG = 'Y'
                 THEN 0
                 WHEN A.CURR_CD = 'JPY'
                 THEN ROUND (SUM (A.ACT_IF_LOCL_COMM_AMT+(A.ACT_IF_LOCL_COMM_AMT*NVL (@[inv_tax_rt],0)/100)),0)
                 WHEN A.CURR_CD = 'TWD'
                 THEN ROUND (SUM (A.ACT_IF_LOCL_COMM_AMT+(A.ACT_IF_LOCL_COMM_AMT*NVL (@[inv_tax_rt],0)/100)),0)
                 ELSE ROUND (SUM (A.ACT_IF_LOCL_COMM_AMT+(A.ACT_IF_LOCL_COMM_AMT*NVL (@[inv_tax_rt],0)/100)),2)
                  END ) AS CSR_AMT
                 FROM AGT_AGN_COMM A
                WHERE A.AR_OFC_CD         = @[ar_ofc_cd]
                  AND A.AGN_CD            = @[agn_cd]
                  AND A.CRE_USR_ID       != 'COST'
                  AND A.AC_IF_DT         IS NULL
                  AND A.COMM_PROC_STS_CD  = 'AS'
#if(${com_apr_nos} != '')
		  AND A.COMM_APRO_NO
                   IN
                    ( ${com_apr_nos}
                    )
#end
             GROUP BY A.OFFST_AGN_FLG,
                      A.CURR_CD
         ) A,
         ( ---- GET LOCAL_DATE, AP_OFC_CD, PAY_MZD_LU_CD, PAY_GRP_LU_CD, FINC_RGN_CD, AP_CTR_CD, AR_HD_QTR_OFC_CD
               SELECT
                      A.AR_OFC_CD,
                      TO_CHAR(GLOBALDATE_PKG.TIME_CONV_FNC('KRPUS',SYSDATE,A.LOC_CD),'YYMMDD') AS LOCAL_DT,
                      NVL(A.AP_OFC_CD, A.AR_OFC_CD)                                            AS AP_OFC_CD,
                 CASE C.CONTI_CD
                 WHEN 'M'
                 THEN 'CMS CHECK(O/EXP)'
                 WHEN'E'
                 THEN 'CMS WIRE'
                 ELSE 'WIRE'
                  END                                                                          AS PAY_MZD_LU_CD,
                 CASE A.SO_IF_CD
                 WHEN 'O'
                 THEN NVL (A.AP_OFC_CD, A.AR_OFC_CD)||'_ZERO PAYMENT'
                 ELSE NVL (A.AP_OFC_CD, A.AR_OFC_CD)||'_O/EXP'
                  END                                                                          AS PAY_GRP_LU_CD,
                      NVL(B.FINC_RGN_CD,'00')                                                  AS FINC_RGN_CD,
                      B.AP_CTR_CD,
                      B.AR_HD_QTR_OFC_CD
                FROM MDM_ORGANIZATION A,
                     MDM_ORGANIZATION B,
                     MDM_LOCATION C,
                   (     SELECT
                           CASE OFC_KND_CD
                           WHEN '2'
                           THEN @[agn_cd]
                           ELSE @[ar_ofc_cd]
                            END AS COMM_OFC
                           FROM MDM_ORGANIZATION
                          WHERE OFC_CD              = @[ar_ofc_cd]
                            AND NVL (DELT_FLG, 'N') = 'N'
                   ) D
               WHERE A.OFC_CD = D.COMM_OFC
                 AND B.OFC_CD = NVL(A.AP_OFC_CD, A.AR_OFC_CD)
                 AND A.LOC_CD = C.LOC_CD
         ) B,
         ( ---- GET ERR_BKG_NO, ERR_BKG_CRE_DT
              SELECT
                      NVL(MIN (ROWNUM), 1) AS ROWNM,
                      MAX (
                 CASE
                 WHEN
                    ( B.BKG_CRE_DT IS NULL
                   OR B.BKG_CRE_DT  < TO_DATE('20070507', 'YYYYMMDD')
                    )
                 THEN B.BKG_NO||TO_CHAR(B.BKG_CRE_DT,'YYYYMMDD')
                 ELSE ''
                  END ) AS ERR_BKG_NO_CRE_DT
                 FROM AGT_AGN_COMM A,
                      BKG_BOOKING B
                WHERE A.COMM_PROC_STS_CD = 'AS'
#if(${com_apr_nos} != '')
                  AND A.COMM_APRO_NO
                   IN
                    ( ${com_apr_nos}
                    )
#end
                   AND A.BKG_NO = B.BKG_NO
         ) C
      LEFT
      OUTER
      JOIN
         ( ---- GET OFFSET_AGN_FLG, VENDOR NO, INV_DESC, VNDR_TERM_NM, CURR_CD, COA_INTER_CMPY_CD
               SELECT
                      ROWNUM AS ROWNM,
                 CASE
                 WHEN C.SO_IF_CD = 'O'
                 THEN 'Y'
                 ELSE 'N'
                  END AS OFFSET_FLG,
                      A.VNDR_SEQ,
                      NVL(LTRIM(B.VNDR_LOCL_LANG_NM),B.VNDR_LGL_ENG_NM) AS INV_DESC,
                 CASE B.GEN_PAY_TERM_CD
                 WHEN 'IN'
                 THEN '5'
                 WHEN 'OUT'
                 THEN '60'
                 WHEN 'O60'
                 THEN '0'
                 WHEN 'O45'
                 THEN '0'
                 ELSE B.GEN_PAY_TERM_CD
                  END AS VNDR_TERM_NM,
                      A.CURR_CD,
                      NVL(LTRIM(B.SUBS_CO_CD),'00') AS COA_INTR_CMPY_CD
                 FROM AGT_AGN_COMM A,
                      MDM_VENDOR B,
                      MDM_ORGANIZATION C
                WHERE A.AR_OFC_CD = @[ar_ofc_cd]
                  AND A.AGN_CD    = @[agn_cd]
                  AND A.AC_IF_DT IS NULL
                  AND A.COMM_PROC_STS_CD = 'AS'
                  AND A.CRE_USR_ID != 'COST'
#if(${com_apr_nos} != '')
                  AND A.COMM_APRO_NO
                   IN
                    ( ${com_apr_nos}
                    )
#end
                  AND A.VNDR_SEQ  = B.VNDR_SEQ(+)
                  AND A.AR_OFC_CD = C.OFC_CD
                  AND ROWNUM      = 1
         ) D
        ON C.ROWNM = D.ROWNM,
         ( ---- CHECK ASA_CURR_CD vs INVOICE_CURR_CD,  INV_DT vs ASA_FROM_TO_DT
               SELECT
                      MAX (A.CURR) AS ASA_CURR_CD,
                      SUM (B.CNT)  AS ASA_CNT
                 FROM
                    (     SELECT
                                 ASA_CURR_CD AS CURR
                            FROM AR_AGN_STMT_AGMT
                           WHERE ASA_NO = @[asa_no]
                    ) A,
                    (     SELECT
                                 COUNT(*) AS CNT
                            FROM AR_AGN_STMT_AGMT
                           WHERE ASA_NO = @[asa_no]
                             AND REPLACE (@[inv_dt], '-', '')
                         BETWEEN ASA_PRD_FM_DT
                             AND ASA_PRD_TO_DT
                    ) B
         ) E,
         (     SELECT
                      MAX (X.BKG_NO) AS ERR_VVD_BKG_NO,
					  MAX (X.REV_VVD_CD) AS ERR_VVD
                 FROM AGT_COMM_BKG_INFO X,
                      AGT_AGN_COMM Y
                WHERE X.BKG_NO = Y.BKG_NO
#if(${com_apr_nos} != '')
		  AND Y.COMM_APRO_NO
                   IN
                    ( ${com_apr_nos}
                    )
#end
                  AND X.REV_VVD_CD IS NULL
         ) F,
         (     SELECT
                      MAX (ERR_VVD_LVL)     AS ERR_VVD_LVL,
                      MAX (ERR_VVD_LVL_FLG) AS ERR_VVD_LVL_FLG
                 FROM
                    (     SELECT
                                 Y.BKG_NO,
                                 Y.COMM_STND_COST_CD,
                                 Y.VVD,
                            CASE
                            WHEN Y.VVD = '0000000000'
                              OR SUBSTR (Y.VVD, 1, 4) = 'CNTC'
                            THEN ''
                            WHEN X.VVD_COM_LVL < 1
                            THEN Y.BKG_NO||Y.VVD
                             END AS ERR_VVD_LVL,
                            CASE
                            WHEN Y.VVD = '0000000000'
                              OR SUBSTR (Y.VVD, 1, 4) = 'CNTC'
                            THEN ''
                            WHEN
                               (     SELECT
                                       CASE X.VVD_COM_LVL
                                       WHEN '1'
                                       THEN VVD_LVL_FLG1
                                       WHEN '2'
                                       THEN VVD_LVL_FLG2
                                       WHEN '3'
                                       THEN VVD_LVL_FLG3
                                       WHEN '4'
                                       THEN VVD_LVL_FLG4
                                       WHEN '5'
                                       THEN VVD_LVL_FLG5
                                       ELSE VVD_LVL_FLG6
                                        END
                                       FROM MDM_ACCOUNT
                                      WHERE ACCT_CD = Y.COMM_STND_COST_CD
                               ) = 'Y'
                            THEN ''
                            ELSE Y.BKG_NO||Y.VVD
                             END AS ERR_VVD_LVL_FLG
                            FROM AR_MST_REV_VVD X,
                               (     SELECT Y.BKG_NO,
                                            MAX (Z.COMM_STND_COST_CD) AS COMM_STND_COST_CD,
                                       CASE
                                       WHEN COUNT(X.RLANE_CD) < 1
                                       THEN 'CFDR'||SUBSTR(REPLACE (@[inv_dt], '-', ''),3,4)||'EE'
                                       WHEN SUBSTR (MAX (Y.REV_VVD_CD),0,2) = 'FD'
                                       THEN 'CFDR'||SUBSTR ( MAX(Y.REV_VVD_CD),3,4)||'EE'
                                       ELSE MAX (Y.REV_VVD_CD)
                                        END AS VVD
                                       FROM AR_ROUT_RNK       X,
                                            AGT_COMM_BKG_INFO Y,
                                            AGT_AGN_COMM      Z
                                      WHERE Y.BKG_NO = Z.BKG_NO
#if(${com_apr_nos} != '')
				        AND Z.COMM_APRO_NO
                                         IN
                                          ( ${com_apr_nos}
                                          )
#end
                                        AND X.RLANE_CD(+) = Y.RLANE_CD
                                        AND Y.BKG_NO      = Z.BKG_NO
                                   GROUP BY Y.BKG_NO
                               ) Y
                           WHERE X.VSL_CD(+)       = SUBSTR (Y.VVD,1,4)
                             AND X.SKD_VOY_NO(+)   = SUBSTR (Y.VVD,5,4)
                             AND X.SKD_DIR_CD(+)   = SUBSTR (Y.VVD,9,1)
                             AND X.RLANE_DIR_CD(+) = SUBSTR (Y.VVD,10,1)
                    )
         ) G			]]></sql>
			<params>
				<param name="asa_no" type="12" value="" out="Y"/>
				<param name="inv_dt" type="12" value="" out="Y"/>
				<param name="inv_tax_rt" type="12" value="" out="Y"/>
				<param name="agn_cd" type="12" value="" out="Y"/>
				<param name="ar_ofc_cd" type="12" value="" out="Y"/>
				<param name="upd_usr_id" type="12" value="" out="Y"/>
				<param name="cre_usr_id" type="12" value="" out="Y"/>
			</params>
		</query>
	</querys>
</sqls>
