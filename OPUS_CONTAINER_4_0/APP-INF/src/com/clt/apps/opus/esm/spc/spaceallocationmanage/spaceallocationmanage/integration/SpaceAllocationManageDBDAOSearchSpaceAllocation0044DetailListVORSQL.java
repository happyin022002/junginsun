/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0044DetailListVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.07.19
*@LastModifier : 
*@LastVersion : 1.0
* 2016.07.19 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.spc.spaceallocationmanage.spaceallocationmanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpaceAllocationManageDBDAOSearchSpaceAllocation0044DetailListVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 
	  * 
	  * 2015.07.22. SKY[CLT-000042051-10] Virtual add call - VT_ADD_CALL_FLG IS  NULL  로직 추가
	  * 2016.03.31 BKG 데이터 가져올때 YD_CD 로 메핑 
	  * 2016.05.12 SPC_GET_HC_RT_BSA_FNC : SKD_VOY_NO parm 추가 
	  * 2016.07.12 SPC_BKG_V 제거
	  * 2016.07.19 #15529 AOC- JPN Issue cannot create BKG for T2 + Refeer
	  * </pre>
	  */
	public SpaceAllocationManageDBDAOSearchSpaceAllocation0044DetailListVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("office",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_dir_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_voy_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vsl_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.spc.spaceallocationmanage.spaceallocationmanage.integration").append("\n"); 
		query.append("FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0044DetailListVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH BASE_KEY AS (" ).append("\n"); 
		query.append("    SELECT @[year]       AS YEAR      ," ).append("\n"); 
		query.append("           @[week]       AS WEEK      ," ).append("\n"); 
		query.append("           @[office]     AS OFC_CD    ," ).append("\n"); 
		query.append("           @[trade]      AS TRD_CD    ," ).append("\n"); 
		query.append("           @[lane]       AS RLANE_CD  ," ).append("\n"); 
		query.append("           @[bound]      AS DIR_CD    ," ).append("\n"); 
		query.append("           @[vsl_cd]     AS VSL_CD    ," ).append("\n"); 
		query.append("           @[skd_voy_no] AS SKD_VOY_NO," ).append("\n"); 
		query.append("           @[skd_dir_cd] AS SKD_DIR_CD" ).append("\n"); 
		query.append("      FROM DUAL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BASE AS (" ).append("\n"); 
		query.append("    SELECT B.YEAR," ).append("\n"); 
		query.append("           B.WEEK," ).append("\n"); 
		query.append("           SUBSTR(T.SLS_YRMON, 1, 4) AS COST_YR," ).append("\n"); 
		query.append("           SUBSTR(T.SLS_YRMON, 5)    AS MON    ," ).append("\n"); 
		query.append("           T.COST_WK   ," ).append("\n"); 
		query.append("           B.OFC_CD    ," ).append("\n"); 
		query.append("           SAQ_GET_REP_TRD_FNC(B.RLANE_CD) AS REP_TRD_CD," ).append("\n"); 
		query.append("           T.TRD_CD    ," ).append("\n"); 
		query.append("           B.RLANE_CD  ," ).append("\n"); 
		query.append("           B.DIR_CD    ," ).append("\n"); 
		query.append("           B.VSL_CD    ," ).append("\n"); 
		query.append("           B.SKD_VOY_NO," ).append("\n"); 
		query.append("           B.SKD_DIR_CD," ).append("\n"); 
		query.append("           'Y' AS EDIT ," ).append("\n"); 
		query.append("           NVL((O.CTRL_LVL_CD)     , 'L') AS POL_POD," ).append("\n"); 
		query.append("           NVL((O.CTRL_40FT_HC_FLG), 'N') AS HC40   ," ).append("\n"); 
		query.append("           NVL((O.CTRL_45FT_HC_FLG), 'N') AS HC45   ," ).append("\n"); 
		query.append("           NVL((O.CTRL_53FT_FLG)   , 'N') AS HC53   ," ).append("\n"); 
		query.append("           NVL((O.CTRL_RF_FLG)     , 'N') AS REEFER ," ).append("\n"); 
		query.append("           NVL((O.CTRL_WGT_FLG)    , 'N') AS WEIGHT ," ).append("\n"); 
		query.append("           NVL((O.CTRL_SPC_FLG)    , 'N') AS VOLUME" ).append("\n"); 
		query.append("      FROM COA_MON_VVD       T," ).append("\n"); 
		query.append("           BASE_KEY          B," ).append("\n"); 
		query.append("           SPC_ALOC_CTRL_OPT O" ).append("\n"); 
		query.append("     WHERE T.RLANE_CD      = B.RLANE_CD" ).append("\n"); 
		query.append("       AND T.VSL_CD        = B.VSL_CD" ).append("\n"); 
		query.append("       AND T.SKD_VOY_NO    = B.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND T.DIR_CD        = B.DIR_CD" ).append("\n"); 
		query.append("       AND O.RLANE_CD  (+) = B.RLANE_CD" ).append("\n"); 
		query.append("       AND O.DIR_CD    (+) = B.DIR_CD" ).append("\n"); 
		query.append("       AND O.VSL_CD    (+) = B.VSL_CD" ).append("\n"); 
		query.append("       AND O.SKD_VOY_NO(+) = B.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND O.SKD_DIR_CD(+) = B.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND T.TRD_CD        = B.TRD_CD" ).append("\n"); 
		query.append("       AND SUBSTR(T.SLS_YRMON, 1, 4)||T.COST_WK = B.YEAR||B.WEEK" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VSL_PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("        REP_TRD_CD," ).append("\n"); 
		query.append("        TRD_CD    ," ).append("\n"); 
		query.append("        RLANE_CD  ," ).append("\n"); 
		query.append("        DIR_CD    ," ).append("\n"); 
		query.append("        OFC_CD    ," ).append("\n"); 
		query.append("        VSL_CD    ," ).append("\n"); 
		query.append("        SKD_VOY_NO," ).append("\n"); 
		query.append("        SKD_DIR_CD," ).append("\n"); 
		query.append("        COST_YR_WK," ).append("\n"); 
		query.append("        POL_CD    ," ).append("\n"); 
		query.append("        POD_CD    ," ).append("\n"); 
		query.append("        PL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("        PD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("        MAX_SEQ," ).append("\n"); 
		query.append("        MIN_SEQ," ).append("\n"); 
		query.append("        POL_CLPT_SEQ AS POL_SEQ," ).append("\n"); 
		query.append("        POD_CLPT_SEQ , " ).append("\n"); 
		query.append("        (CASE" ).append("\n"); 
		query.append("               WHEN MAX(POL_CLPT_SEQ) < MAX(MIN_SEQ) THEN MAX(MIN_SEQ)" ).append("\n"); 
		query.append("                                                       ELSE CASE" ).append("\n"); 
		query.append("                                                             WHEN MAX(POL_CLPT_SEQ) > MAX(MIN_SEQ) THEN MAX(MAX_SEQ)" ).append("\n"); 
		query.append("                                                        END" ).append("\n"); 
		query.append("                END" ).append("\n"); 
		query.append("          ) AS POD_SEQ," ).append("\n"); 
		query.append("        IOC_CD ," ).append("\n"); 
		query.append("        EDIT   ," ).append("\n"); 
		query.append("        POL_POD," ).append("\n"); 
		query.append("        HC40   ," ).append("\n"); 
		query.append("        HC45   ," ).append("\n"); 
		query.append("        HC53   ," ).append("\n"); 
		query.append("        REEFER ," ).append("\n"); 
		query.append("        WEIGHT ," ).append("\n"); 
		query.append("        VOLUME" ).append("\n"); 
		query.append("   FROM   " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("                SELECT REP_TRD_CD," ).append("\n"); 
		query.append("                       TRD_CD    ," ).append("\n"); 
		query.append("                       RLANE_CD  ," ).append("\n"); 
		query.append("                       DIR_CD    ," ).append("\n"); 
		query.append("                       OFC_CD    ," ).append("\n"); 
		query.append("                       VSL_CD    ," ).append("\n"); 
		query.append("                       SKD_VOY_NO," ).append("\n"); 
		query.append("                       SKD_DIR_CD," ).append("\n"); 
		query.append("                       COST_YR_WK," ).append("\n"); 
		query.append("                       POL_CD    ," ).append("\n"); 
		query.append("                       POD_CD    ," ).append("\n"); 
		query.append("                       DECODE(POD_CD,'0000000','0',PL_CLPT_IND_SEQ) AS PL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       PD_CLPT_IND_SEQ AS PD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       MAX(POL_SEQ) OVER (PARTITION BY POL_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS MAX_SEQ," ).append("\n"); 
		query.append("                       MIN(POD_SEQ) OVER (PARTITION BY POL_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS MIN_SEQ," ).append("\n"); 
		query.append("                       MAX(POL_SEQ) AS POL_CLPT_SEQ," ).append("\n"); 
		query.append("                       MIN(POD_SEQ) AS POD_CLPT_SEQ," ).append("\n"); 
		query.append("                       IOC_CD ," ).append("\n"); 
		query.append("                       EDIT   ," ).append("\n"); 
		query.append("                       POL_POD," ).append("\n"); 
		query.append("                       HC40   ," ).append("\n"); 
		query.append("                       HC45   ," ).append("\n"); 
		query.append("                       HC53   ," ).append("\n"); 
		query.append("                       REEFER ," ).append("\n"); 
		query.append("                       WEIGHT ," ).append("\n"); 
		query.append("                       VOLUME" ).append("\n"); 
		query.append("                  FROM (" ).append("\n"); 
		query.append("                         SELECT V.REP_TRD_CD," ).append("\n"); 
		query.append("                                V.TRD_CD    ," ).append("\n"); 
		query.append("                                V.RLANE_CD  ," ).append("\n"); 
		query.append("                                V.DIR_CD    ," ).append("\n"); 
		query.append("                                V.OFC_CD    ," ).append("\n"); 
		query.append("                                V.VSL_CD    ," ).append("\n"); 
		query.append("                                V.SKD_VOY_NO," ).append("\n"); 
		query.append("                                V.SKD_DIR_CD," ).append("\n"); 
		query.append("                                V.COST_YR||V.COST_WK          AS COST_YR_WK," ).append("\n"); 
		query.append("                                NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD    ," ).append("\n"); 
		query.append("                                NVL(S2.YD_CD, S2.VPS_PORT_CD) AS POD_CD    ," ).append("\n"); 
		query.append("                                S1.CLPT_IND_SEQ     AS PL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                S2.CLPT_IND_SEQ     AS PD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                S1.CLPT_SEQ AS POL_SEQ," ).append("\n"); 
		query.append("                                S2.CLPT_SEQ AS POD_SEQ," ).append("\n"); 
		query.append("                                DECODE(SUBSTR((SELECT DISTINCT IOC_CD FROM MDM_DTL_REV_LANE WHERE 1=1 AND TRD_CD = V.TRD_CD AND RLANE_CD = V.RLANE_CD AND VSL_SLAN_DIR_CD = V.DIR_CD ) , 0, 1), 'I','I','O') AS IOC_CD," ).append("\n"); 
		query.append("                                EDIT   ," ).append("\n"); 
		query.append("                                POL_POD," ).append("\n"); 
		query.append("                                HC40   ," ).append("\n"); 
		query.append("                                HC45   ," ).append("\n"); 
		query.append("                                HC53   ," ).append("\n"); 
		query.append("                                REEFER ," ).append("\n"); 
		query.append("                                WEIGHT ," ).append("\n"); 
		query.append("                                VOLUME " ).append("\n"); 
		query.append("                           FROM BASE             V ," ).append("\n"); 
		query.append("                                VSK_VSL_PORT_SKD S1," ).append("\n"); 
		query.append("                                VSK_VSL_PORT_SKD S2" ).append("\n"); 
		query.append("                          WHERE S1.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                            AND S1.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND S1.SKD_DIR_CD = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                            AND S1.VSL_CD     = S2.VSL_CD" ).append("\n"); 
		query.append("                            AND S1.SKD_VOY_NO = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND S1.SKD_DIR_CD = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("                            AND S1.CLPT_SEQ   < S2.CLPT_SEQ" ).append("\n"); 
		query.append("                            AND S1.VT_ADD_CALL_FLG IS NULL" ).append("\n"); 
		query.append("                            AND S2.VT_ADD_CALL_FLG IS NULL" ).append("\n"); 
		query.append("                            AND NVL(S1.SKD_CNG_STS_CD,1) <> 'S'" ).append("\n"); 
		query.append("                            AND NVL(S2.SKD_CNG_STS_CD,1) <> 'S'" ).append("\n"); 
		query.append("                         UNION ALL" ).append("\n"); 
		query.append("                         SELECT V.REP_TRD_CD," ).append("\n"); 
		query.append("                                V.TRD_CD    ," ).append("\n"); 
		query.append("                                V.RLANE_CD  ," ).append("\n"); 
		query.append("                                V.DIR_CD    ," ).append("\n"); 
		query.append("                                V.OFC_CD    ," ).append("\n"); 
		query.append("                                V.VSL_CD    ," ).append("\n"); 
		query.append("                                V.SKD_VOY_NO," ).append("\n"); 
		query.append("                                V.SKD_DIR_CD," ).append("\n"); 
		query.append("                                V.COST_YR||V.COST_WK          AS COST_YR_WK," ).append("\n"); 
		query.append("                                NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD    ," ).append("\n"); 
		query.append("                                '0000000'   AS POD_CD ," ).append("\n"); 
		query.append("                                S1.CLPT_IND_SEQ     AS PL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                '0'                 AS PD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                S1.CLPT_SEQ AS POL_SEQ," ).append("\n"); 
		query.append("                                0           AS POD_SEQ," ).append("\n"); 
		query.append("                                DECODE(SUBSTR((SELECT DISTINCT IOC_CD FROM MDM_DTL_REV_LANE WHERE 1=1 AND TRD_CD = V.TRD_CD AND RLANE_CD = V.RLANE_CD AND VSL_SLAN_DIR_CD = V.DIR_CD ) , 0, 1), 'I','I','O') AS IOC_CD," ).append("\n"); 
		query.append("                                --DECODE(SUBSTR(V.TRD_CD, 0, 1), 'I','I','O') AS IOC_CD," ).append("\n"); 
		query.append("                                EDIT   ," ).append("\n"); 
		query.append("                                POL_POD," ).append("\n"); 
		query.append("                                HC40   ," ).append("\n"); 
		query.append("                                HC45   ," ).append("\n"); 
		query.append("                                HC53   ," ).append("\n"); 
		query.append("                                REEFER ," ).append("\n"); 
		query.append("                                WEIGHT ," ).append("\n"); 
		query.append("                                VOLUME " ).append("\n"); 
		query.append("             " ).append("\n"); 
		query.append("                           FROM BASE             V ," ).append("\n"); 
		query.append("                                VSK_VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                          WHERE S1.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                            AND S1.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND S1.SKD_DIR_CD = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                            AND S1.VT_ADD_CALL_FLG IS NULL" ).append("\n"); 
		query.append("                            AND NVL(S1.SKD_CNG_STS_CD,1) <> 'S'" ).append("\n"); 
		query.append("                            " ).append("\n"); 
		query.append("                         UNION ALL" ).append("\n"); 
		query.append("                         SELECT V.REP_TRD_CD," ).append("\n"); 
		query.append("                                V.TRD_CD    ," ).append("\n"); 
		query.append("                                V.RLANE_CD  ," ).append("\n"); 
		query.append("                                V.DIR_CD    ," ).append("\n"); 
		query.append("                                V.OFC_CD    ," ).append("\n"); 
		query.append("                                V.VSL_CD    ," ).append("\n"); 
		query.append("                                V.SKD_VOY_NO," ).append("\n"); 
		query.append("                                V.SKD_DIR_CD," ).append("\n"); 
		query.append("                                V.COST_YR||V.COST_WK AS COST_YR_WK," ).append("\n"); 
		query.append("                                '0000000' AS POL_CD," ).append("\n"); 
		query.append("                                '0000000' AS POD_CD," ).append("\n"); 
		query.append("                                '0'                AS PL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                '0'                AS PD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                0 AS POL_SEQ," ).append("\n"); 
		query.append("                                0 AS POD_SEQ," ).append("\n"); 
		query.append("                                DECODE(SUBSTR((SELECT DISTINCT IOC_CD FROM MDM_DTL_REV_LANE WHERE 1=1 AND TRD_CD = V.TRD_CD AND RLANE_CD = V.RLANE_CD AND VSL_SLAN_DIR_CD = V.DIR_CD ) , 0, 1), 'I','I','O') AS IOC_CD," ).append("\n"); 
		query.append("                                --DECODE(SUBSTR(V.TRD_CD, 0, 1), 'I','I','O') AS IOC_CD," ).append("\n"); 
		query.append("                                '' AS EDIT," ).append("\n"); 
		query.append("                                POL_POD   ," ).append("\n"); 
		query.append("                                HC40      ," ).append("\n"); 
		query.append("                                HC45      ," ).append("\n"); 
		query.append("                                HC53      ," ).append("\n"); 
		query.append("                                REEFER    ," ).append("\n"); 
		query.append("                                WEIGHT    ," ).append("\n"); 
		query.append("                                VOLUME" ).append("\n"); 
		query.append("                           FROM BASE V" ).append("\n"); 
		query.append("                       ) Z" ).append("\n"); 
		query.append("              GROUP BY REP_TRD_CD," ).append("\n"); 
		query.append("                       TRD_CD    ," ).append("\n"); 
		query.append("                       RLANE_CD  ," ).append("\n"); 
		query.append("                       DIR_CD    ," ).append("\n"); 
		query.append("                       OFC_CD    ," ).append("\n"); 
		query.append("                       VSL_CD    ," ).append("\n"); 
		query.append("                       SKD_VOY_NO," ).append("\n"); 
		query.append("                       SKD_DIR_CD," ).append("\n"); 
		query.append("                       COST_YR_WK," ).append("\n"); 
		query.append("                       POL_CD    ," ).append("\n"); 
		query.append("                       POD_CD    ," ).append("\n"); 
		query.append("                       POL_SEQ   ," ).append("\n"); 
		query.append("                       POD_SEQ   ," ).append("\n"); 
		query.append("                       IOC_CD    ," ).append("\n"); 
		query.append("                       EDIT      ," ).append("\n"); 
		query.append("                       PL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       PD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       POL_POD   ," ).append("\n"); 
		query.append("                       HC40      ," ).append("\n"); 
		query.append("                       HC45      ," ).append("\n"); 
		query.append("                       HC53      ," ).append("\n"); 
		query.append("                       REEFER    ," ).append("\n"); 
		query.append("                       WEIGHT    ," ).append("\n"); 
		query.append("                       VOLUME   " ).append("\n"); 
		query.append("                       " ).append("\n"); 
		query.append("                 )" ).append("\n"); 
		query.append("           WHERE 1=1" ).append("\n"); 
		query.append("             AND POL_CD     <> POD_CD" ).append("\n"); 
		query.append("             AND POD_CLPT_SEQ      > POL_CLPT_SEQ" ).append("\n"); 
		query.append("             AND (POL_CLPT_SEQ =  MAX_SEQ  OR POD_CLPT_SEQ < MAX_SEQ )       " ).append("\n"); 
		query.append("          GROUP BY REP_TRD_CD," ).append("\n"); 
		query.append("                   TRD_CD    ," ).append("\n"); 
		query.append("                   RLANE_CD  ," ).append("\n"); 
		query.append("                   DIR_CD    ," ).append("\n"); 
		query.append("                   OFC_CD    ," ).append("\n"); 
		query.append("                   VSL_CD    ," ).append("\n"); 
		query.append("                   SKD_VOY_NO," ).append("\n"); 
		query.append("                   SKD_DIR_CD," ).append("\n"); 
		query.append("                   COST_YR_WK," ).append("\n"); 
		query.append("                   POL_CD    ," ).append("\n"); 
		query.append("                   POD_CD    ," ).append("\n"); 
		query.append("                   MAX_SEQ   ," ).append("\n"); 
		query.append("                   MIN_SEQ   ," ).append("\n"); 
		query.append("                   POL_CLPT_SEQ," ).append("\n"); 
		query.append("                   POD_CLPT_SEQ," ).append("\n"); 
		query.append("                   IOC_CD    ," ).append("\n"); 
		query.append("                   EDIT      ," ).append("\n"); 
		query.append("                   PL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                   PD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                   POL_POD   ," ).append("\n"); 
		query.append("                   HC40      ," ).append("\n"); 
		query.append("                   HC45      ," ).append("\n"); 
		query.append("                   HC53      ," ).append("\n"); 
		query.append("                   REEFER    ," ).append("\n"); 
		query.append("                   WEIGHT    ," ).append("\n"); 
		query.append("                   VOLUME           " ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("  SELECT DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE((SELECT POL_POD FROM BASE), 'O', 1, 'L', 2, 'D', 3), 3), DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1), 1, 0) AS EDIT," ).append("\n"); 
		query.append("         REP_TRD_CD," ).append("\n"); 
		query.append("         TRD_CD    ," ).append("\n"); 
		query.append("         IOC_CD    ," ).append("\n"); 
		query.append("         NVL(OFC_CD, '+') AS OFC_CD," ).append("\n"); 
		query.append("         NVL(POL_CD, '+') AS POL_CD," ).append("\n"); 
		query.append("         NVL(POD_CD, '+') AS POD_CD," ).append("\n"); 
		query.append("         SUM(BKG_QUOTA)   AS BKG_QUOTA," ).append("\n"); 
		query.append("         (" ).append("\n"); 
		query.append("           SELECT (BAR.BKG_REV - BAR.ESTM_CM_COST_AMT) / BAR.BKG_TTL_QTY" ).append("\n"); 
		query.append("             FROM SPC_BKG_AVG_REV BAR," ).append("\n"); 
		query.append("                  BASE_KEY        P" ).append("\n"); 
		query.append("            WHERE BAR.OFC_KND_CD  = DECODE(Z.OFC_CD, NULL, '3', '4')" ).append("\n"); 
		query.append("              AND BAR.RLANE_CD    = P.RLANE_CD" ).append("\n"); 
		query.append("              AND BAR.DIR_CD      = P.DIR_CD" ).append("\n"); 
		query.append("              AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("              AND BAR.TS_FLG      = DECODE(SUBSTR(Z.IOC_CD, LENGTH(Z.IOC_CD)-2), 'T/S', 'Y', 'N')" ).append("\n"); 
		query.append("              AND BAR.IOC_CD      = DECODE(SUBSTR(Z.IOC_CD, LENGTH(Z.IOC_CD)-2), 'OCN', 'O', 'I')" ).append("\n"); 
		query.append("              AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("              AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("              --AND BAR.TRD_CD NOT IN ('IES', 'IMS')" ).append("\n"); 
		query.append("              AND Z.IOC_CD       <> 'EQ'" ).append("\n"); 
		query.append("         ) AS CMB," ).append("\n"); 
		query.append("         DECODE(SUM(CMB2), 0, 0, SUM(CMB1) / SUM(CMB2)) AS FCT_CMB," ).append("\n"); 
		query.append("         SUM(NVL(FC_TEU, 0) + NVL(FC_HC, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] , @[skd_voy_no],'D5') + NVL(FC_45, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] ,@[skd_voy_no],'D7') + NVL(FC_53, 0)*2) AS FC_TTL_TEU," ).append("\n"); 
		query.append("         SUM(FC_TEU) AS FC_TEU," ).append("\n"); 
		query.append("         SUM(FC_20)  AS FC_20 ," ).append("\n"); 
		query.append("         SUM(FC_40)  AS FC_40 ," ).append("\n"); 
		query.append("         SUM(FC_HC)  AS FC_HC ," ).append("\n"); 
		query.append("         SUM(FC_45)  AS FC_45 ," ).append("\n"); 
		query.append("         SUM(FC_53)  AS FC_53 ," ).append("\n"); 
		query.append("         SUM(FC_RF)  AS FC_RF ," ).append("\n"); 
		query.append("         SUM(FC_WGT) AS FC_WGT," ).append("\n"); 
		query.append("         SUM(UG_TEU) AS UG_TEU," ).append("\n"); 
		query.append("         SUM(UG_20)  AS UG_20 ," ).append("\n"); 
		query.append("         SUM(UG_40)  AS UG_40 ," ).append("\n"); 
		query.append("         SUM(UG_HC)  AS UG_HC ," ).append("\n"); 
		query.append("         SUM(UG_45)  AS UG_45 ," ).append("\n"); 
		query.append("         SUM(UG_53)  AS UG_53 ," ).append("\n"); 
		query.append("         SUM(UG_RF)  AS UG_RF ," ).append("\n"); 
		query.append("         SUM(UG_WGT) AS UG_WGT," ).append("\n"); 
		query.append("         SUM(AD_TEU) AS AD_TEU," ).append("\n"); 
		query.append("         SUM(AD_20)  AS AD_20 ," ).append("\n"); 
		query.append("         SUM(AD_40)  AS AD_40 ," ).append("\n"); 
		query.append("         SUM(AD_HC)  AS AD_HC ," ).append("\n"); 
		query.append("         SUM(AD_45)  AS AD_45 ," ).append("\n"); 
		query.append("         SUM(AD_53)  AS AD_53 ," ).append("\n"); 
		query.append("         SUM(AD_RF)  AS AD_RF ," ).append("\n"); 
		query.append("         SUM(AD_WGT) AS AD_WGT," ).append("\n"); 
		query.append("         SUM(AP_TEU) AS AP_TEU," ).append("\n"); 
		query.append("         SUM(AP_20)  AS AP_20 ," ).append("\n"); 
		query.append("         SUM(AP_40)  AS AP_40 ," ).append("\n"); 
		query.append("         SUM(AP_HC)  AS AP_HC ," ).append("\n"); 
		query.append("         SUM(AP_45)  AS AP_45 ," ).append("\n"); 
		query.append("         SUM(AP_53)  AS AP_53 ," ).append("\n"); 
		query.append("         SUM(AP_RF)  AS AP_RF ," ).append("\n"); 
		query.append("         SUM(AP_WGT) AS AP_WGT," ).append("\n"); 
		query.append("         SUM(NVL(BK_20, 0) + NVL(BK_40, 0)*2 + NVL(BK_HC, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] , @[skd_voy_no],'D5') + NVL(BK_45, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] , @[skd_voy_no],'D7') + NVL(BK_53, 0)*2) AS BK_TEU," ).append("\n"); 
		query.append("         SUM(BK_20)  AS BK_20 ," ).append("\n"); 
		query.append("         SUM(BK_40)  AS BK_40 ," ).append("\n"); 
		query.append("         SUM(BK_HC)  AS BK_HC ," ).append("\n"); 
		query.append("         SUM(BK_45)  AS BK_45 ," ).append("\n"); 
		query.append("         SUM(BK_53)  AS BK_53 ," ).append("\n"); 
		query.append("         SUM(BK_RF)  AS BK_RF ," ).append("\n"); 
		query.append("         SUM(BK_WGT) AS BK_WGT," ).append("\n"); 
		query.append("         SUM(NVL(BT_20, 0) + NVL(BT_40, 0)*2 + NVL(BT_HC, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] , @[skd_voy_no],'D5') + NVL(BT_45, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] , @[skd_voy_no],'D7') + NVL(BT_53, 0)*2) AS BT_TEU," ).append("\n"); 
		query.append("         SUM(BT_20)  AS BT_20 ," ).append("\n"); 
		query.append("         SUM(BT_40)  AS BT_40 ," ).append("\n"); 
		query.append("         SUM(BT_HC)  AS BT_HC ," ).append("\n"); 
		query.append("         SUM(BT_45)  AS BT_45 ," ).append("\n"); 
		query.append("         SUM(BT_53)  AS BT_53 ," ).append("\n"); 
		query.append("         SUM(BT_RF)  AS BT_RF ," ).append("\n"); 
		query.append("         SUM(BT_WGT) AS BT_WGT," ).append("\n"); 
		query.append("         SUM(GT_TEU) AS GT_TEU," ).append("\n"); 
		query.append("         SUM(GT_20)  AS GT_20 ," ).append("\n"); 
		query.append("         SUM(GT_40)  AS GT_40 ," ).append("\n"); 
		query.append("         SUM(GT_HC)  AS GT_HC ," ).append("\n"); 
		query.append("         SUM(GT_45)  AS GT_45 ," ).append("\n"); 
		query.append("         SUM(GT_53)  AS GT_53 ," ).append("\n"); 
		query.append("         SUM(GT_RF)  AS GT_RF ," ).append("\n"); 
		query.append("         SUM(GT_WGT) AS GT_WGT," ).append("\n"); 
		query.append("         SUM(AP_MD)  AS AP_MD ," ).append("\n"); 
		query.append("         MAX(EDIT)   AS EDIT1 ," ).append("\n"); 
		query.append("         COUNT(DISTINCT DECODE(POD_CD, SUBSTR('0000000', 1, LENGTH(POD_CD)), NULL, POL_CD||POD_CD)) + DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, SUBSTR('0000000', 1, LENGTH(POL_CD)), NULL, POL_CD)), 0) AS CHILD_CNT," ).append("\n"); 
		query.append("         COUNT(DISTINCT DECODE(POD_CD, SUBSTR('0000000', 1, LENGTH(POD_CD)), NULL, POL_CD||POD_CD)) AS LEAF_CNT," ).append("\n"); 
		query.append("         DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, SUBSTR('0000000', 1, LENGTH(POL_CD)), NULL, POL_CD)), 0) AS POD_CNT," ).append("\n"); 
		query.append("         NVL(MAX(CFM_FLG), 'N') AS CFM_FLG," ).append("\n"); 
		query.append("         DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1) AS LVL," ).append("\n"); 
		query.append("         DECODE(DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE((SELECT POL_POD FROM BASE), 'O', 1, 'L', 2, 'D', 3), 3), + DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1), 1, 0), 1, MAX(SPC_CTRL_ALOC_RMK)    , NULL) AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("         DECODE(DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE((SELECT POL_POD FROM BASE), 'O', 1, 'L', 2, 'D', 3), 3), + DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1), 1, 0), 1, MAX(SPC_CTRL_ALOC_POL_RMK), NULL) AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("         DECODE(DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE((SELECT POL_POD FROM BASE), 'O', 1, 'L', 2, 'D', 3), 3), + DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1), 1, 0), 1, MAX(SPC_CTRL_ALOC_POD_RMK), NULL) AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("            SELECT U.REP_TRD_CD," ).append("\n"); 
		query.append("                   U.TRD_CD    ," ).append("\n"); 
		query.append("                   U.IOC_CD    ," ).append("\n"); 
		query.append("                   U.OFC_CD    ," ).append("\n"); 
		query.append("                   U.POL_CD    ," ).append("\n"); 
		query.append("                   U.POD_CD    ," ).append("\n"); 
		query.append("                   NVL(MAX(U.POL_SEQ), 99) AS POL_SEQ  ," ).append("\n"); 
		query.append("                   NVL(MAX(U.POD_SEQ), 99) AS POD_SEQ  ," ).append("\n"); 
		query.append("                   SUM(U.BKG_QUOTA)        AS BKG_QUOTA," ).append("\n"); 
		query.append("                   SUM(U.CMB1) AS CMB1  ," ).append("\n"); 
		query.append("                   SUM(CMB2)   AS CMB2  ," ).append("\n"); 
		query.append("                   SUM(FC_TEU) AS FC_TEU," ).append("\n"); 
		query.append("                   SUM(FC_20)  AS FC_20 ," ).append("\n"); 
		query.append("                   SUM(FC_40)  AS FC_40 ," ).append("\n"); 
		query.append("                   SUM(FC_HC)  AS FC_HC ," ).append("\n"); 
		query.append("                   SUM(FC_45)  AS FC_45 ," ).append("\n"); 
		query.append("                   SUM(FC_53)  AS FC_53 ," ).append("\n"); 
		query.append("                   SUM(FC_RF)  AS FC_RF ," ).append("\n"); 
		query.append("                   SUM(FC_WGT) AS FC_WGT," ).append("\n"); 
		query.append("                   SUM(UG_TEU) AS UG_TEU," ).append("\n"); 
		query.append("                   SUM(UG_20)  AS UG_20 ," ).append("\n"); 
		query.append("                   SUM(UG_40)  AS UG_40 ," ).append("\n"); 
		query.append("                   SUM(UG_HC)  AS UG_HC ," ).append("\n"); 
		query.append("                   SUM(UG_45)  AS UG_45 ," ).append("\n"); 
		query.append("                   SUM(UG_53)  AS UG_53 ," ).append("\n"); 
		query.append("                   SUM(UG_RF)  AS UG_RF ," ).append("\n"); 
		query.append("                   SUM(UG_WGT) AS UG_WGT," ).append("\n"); 
		query.append("                   SUM(AD_TEU) AS AD_TEU," ).append("\n"); 
		query.append("                   SUM(AD_20)  AS AD_20 ," ).append("\n"); 
		query.append("                   SUM(AD_40)  AS AD_40 ," ).append("\n"); 
		query.append("                   SUM(AD_HC)  AS AD_HC ," ).append("\n"); 
		query.append("                   SUM(AD_45)  AS AD_45 ," ).append("\n"); 
		query.append("                   SUM(AD_53)  AS AD_53 ," ).append("\n"); 
		query.append("                   SUM(AD_RF)  AS AD_RF ," ).append("\n"); 
		query.append("                   SUM(AD_WGT) AS AD_WGT," ).append("\n"); 
		query.append("                   SUM(AP_TEU) AS AP_TEU," ).append("\n"); 
		query.append("                   SUM(AP_20)  AS AP_20 ," ).append("\n"); 
		query.append("                   SUM(AP_40)  AS AP_40 ," ).append("\n"); 
		query.append("                   SUM(AP_HC)  AS AP_HC ," ).append("\n"); 
		query.append("                   SUM(AP_45)  AS AP_45 ," ).append("\n"); 
		query.append("                   SUM(AP_53)  AS AP_53 ," ).append("\n"); 
		query.append("                   SUM(AP_RF)  AS AP_RF ," ).append("\n"); 
		query.append("                   SUM(AP_WGT) AS AP_WGT," ).append("\n"); 
		query.append("                   SUM(BK_TEU) AS BK_TEU," ).append("\n"); 
		query.append("                   SUM(BK_20)  AS BK_20 ," ).append("\n"); 
		query.append("                   SUM(BK_40)  AS BK_40 ," ).append("\n"); 
		query.append("                   SUM(BK_HC)  AS BK_HC ," ).append("\n"); 
		query.append("                   SUM(BK_45)  AS BK_45 ," ).append("\n"); 
		query.append("                   SUM(BK_53)  AS BK_53 ," ).append("\n"); 
		query.append("                   SUM(BK_RF)  AS BK_RF ," ).append("\n"); 
		query.append("                   SUM(BK_WGT) AS BK_WGT," ).append("\n"); 
		query.append("                   SUM(BT_TEU) AS BT_TEU," ).append("\n"); 
		query.append("                   SUM(BT_20)  AS BT_20 ," ).append("\n"); 
		query.append("                   SUM(BT_40)  AS BT_40 ," ).append("\n"); 
		query.append("                   SUM(BT_HC)  AS BT_HC ," ).append("\n"); 
		query.append("                   SUM(BT_45)  AS BT_45 ," ).append("\n"); 
		query.append("                   SUM(BT_53)  AS BT_53 ," ).append("\n"); 
		query.append("                   SUM(BT_RF)  AS BT_RF ," ).append("\n"); 
		query.append("                   SUM(BT_WGT) AS BT_WGT," ).append("\n"); 
		query.append("                   SUM(GT_TEU) AS GT_TEU," ).append("\n"); 
		query.append("                   SUM(GT_20)  AS GT_20 ," ).append("\n"); 
		query.append("                   SUM(GT_40)  AS GT_40 ," ).append("\n"); 
		query.append("                   SUM(GT_HC)  AS GT_HC ," ).append("\n"); 
		query.append("                   SUM(GT_45)  AS GT_45 ," ).append("\n"); 
		query.append("                   SUM(GT_53)  AS GT_53 ," ).append("\n"); 
		query.append("                   SUM(GT_RF)  AS GT_RF ," ).append("\n"); 
		query.append("                   SUM(GT_WGT) AS GT_WGT," ).append("\n"); 
		query.append("                   SUM(DECODE(FLG, 103, 1, 203, 1, 0)) AS AP_MD," ).append("\n"); 
		query.append("                   NVL(MAX(EDIT), 'N') AS EDIT   ," ).append("\n"); 
		query.append("                   MAX(CFM_FLG)        AS CFM_FLG," ).append("\n"); 
		query.append("                   MAX(SPC_CTRL_ALOC_RMK)     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                   MAX(SPC_CTRL_ALOC_POL_RMK) AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                   MAX(SPC_CTRL_ALOC_POD_RMK) AS SPC_CTRL_ALOC_POD_RMK " ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      -- Trunk Forecast" ).append("\n"); 
		query.append("                      SELECT 101 AS FLG," ).append("\n"); 
		query.append("                             'Trunk Forecast' AS FLAG," ).append("\n"); 
		query.append("                             DECODE(T.IOC_TS_CD, 'O', 'OCN', 'I', 'IPC', 'T','T/S') AS IOC_CD," ).append("\n"); 
		query.append("                             B.REP_TRD_CD," ).append("\n"); 
		query.append("                             B.TRD_CD    ," ).append("\n"); 
		query.append("                             T.SLS_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("                             T.POL_YD_CD  AS POL_CD," ).append("\n"); 
		query.append("                             T.POD_YD_CD  AS POD_CD," ).append("\n"); 
		query.append("                             B.POL_SEQ," ).append("\n"); 
		query.append("                             B.POD_SEQ," ).append("\n"); 
		query.append("                             0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                             0 AS CMB1     ," ).append("\n"); 
		query.append("                             0 AS CMB2     ," ).append("\n"); 
		query.append("                             SUM(T.CFM_TTL_QTY) AS FC_TEU," ).append("\n"); 
		query.append("                             0 AS FC_20," ).append("\n"); 
		query.append("                             0 AS FC_40," ).append("\n"); 
		query.append("                             SUM(T.CFM_40FT_HC_QTY) AS FC_HC ," ).append("\n"); 
		query.append("                             SUM(T.CFM_45FT_HC_QTY) AS FC_45 ," ).append("\n"); 
		query.append("                             SUM(T.CFM_53FT_QTY)    AS FC_53 ," ).append("\n"); 
		query.append("                             SUM(T.CFM_RF_QTY)      AS FC_RF ," ).append("\n"); 
		query.append("                             SUM(T.CFM_TTL_WGT)     AS FC_WGT," ).append("\n"); 
		query.append("                             0 AS UG_TEU," ).append("\n"); 
		query.append("                             0 AS UG_20 ," ).append("\n"); 
		query.append("                             0 AS UG_40 ," ).append("\n"); 
		query.append("                             0 AS UG_HC ," ).append("\n"); 
		query.append("                             0 AS UG_45 ," ).append("\n"); 
		query.append("                             0 AS UG_53 ," ).append("\n"); 
		query.append("                             0 AS UG_RF ," ).append("\n"); 
		query.append("                             0 AS UG_WGT," ).append("\n"); 
		query.append("                             0 AS BK_TEU," ).append("\n"); 
		query.append("                             0 AS BK_20 ," ).append("\n"); 
		query.append("                             0 AS BK_40 ," ).append("\n"); 
		query.append("                             0 AS BK_HC ," ).append("\n"); 
		query.append("                             0 AS BK_45 ," ).append("\n"); 
		query.append("                             0 AS BK_53 ," ).append("\n"); 
		query.append("                             0 AS BK_RF ," ).append("\n"); 
		query.append("                             0 AS BK_WGT," ).append("\n"); 
		query.append("                             0 AS BT_TEU," ).append("\n"); 
		query.append("                             0 AS BT_20 ," ).append("\n"); 
		query.append("                             0 AS BT_40 ," ).append("\n"); 
		query.append("                             0 AS BT_HC ," ).append("\n"); 
		query.append("                             0 AS BT_45 ," ).append("\n"); 
		query.append("                             0 AS BT_53 ," ).append("\n"); 
		query.append("                             0 AS BT_RF ," ).append("\n"); 
		query.append("                             0 AS BT_WGT," ).append("\n"); 
		query.append("                             0 AS AD_TEU," ).append("\n"); 
		query.append("                             0 AS AD_20 ," ).append("\n"); 
		query.append("                             0 AS AD_40 ," ).append("\n"); 
		query.append("                             0 AS AD_HC ," ).append("\n"); 
		query.append("                             0 AS AD_45 ," ).append("\n"); 
		query.append("                             0 AS AD_53 ," ).append("\n"); 
		query.append("                             0 AS AD_RF ," ).append("\n"); 
		query.append("                             0 AS AD_WGT," ).append("\n"); 
		query.append("                             0 AS AP_TEU," ).append("\n"); 
		query.append("                             0 AS AP_20 ," ).append("\n"); 
		query.append("                             0 AS AP_40 ," ).append("\n"); 
		query.append("                             0 AS AP_HC ," ).append("\n"); 
		query.append("                             0 AS AP_45 ," ).append("\n"); 
		query.append("                             0 AS AP_53 ," ).append("\n"); 
		query.append("                             0 AS AP_RF ," ).append("\n"); 
		query.append("                             0 AS AP_WGT," ).append("\n"); 
		query.append("                             0 AS GT_TEU," ).append("\n"); 
		query.append("                             0 AS GT_20 ," ).append("\n"); 
		query.append("                             0 AS GT_40 ," ).append("\n"); 
		query.append("                             0 AS GT_HC ," ).append("\n"); 
		query.append("                             0 AS GT_45 ," ).append("\n"); 
		query.append("                             0 AS GT_53 ," ).append("\n"); 
		query.append("                             0 AS GT_RF ," ).append("\n"); 
		query.append("                             0 AS GT_WGT," ).append("\n"); 
		query.append("                             'Y'  AS EDIT," ).append("\n"); 
		query.append("                             NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                             NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                        FROM SPC_DLY_FCAST_CUST T," ).append("\n"); 
		query.append("                             VSL_PORT_SKD       B" ).append("\n"); 
		query.append("                       WHERE T.TRD_CD         = B.TRD_CD" ).append("\n"); 
		query.append("                         AND T.RLANE_CD       = B.RLANE_CD" ).append("\n"); 
		query.append("                         AND T.DIR_CD         = B.DIR_CD" ).append("\n"); 
		query.append("                         AND T.VSL_CD         = B.VSL_CD" ).append("\n"); 
		query.append("                         AND T.SKD_VOY_NO     = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND T.SKD_DIR_CD     = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND T.SLS_RGN_OFC_CD = B.OFC_CD" ).append("\n"); 
		query.append("                         AND T.POL_YD_CD      = B.POL_CD" ).append("\n"); 
		query.append("                         AND T.POD_YD_CD      = B.POD_CD" ).append("\n"); 
		query.append("                         AND NVL(B.PL_CLPT_IND_SEQ,'1') = NVL(T.POL_IND_SEQ,'1')" ).append("\n"); 
		query.append("                         AND NVL(B.PD_CLPT_IND_SEQ,'1') = NVL(T.POD_IND_SEQ,'1')" ).append("\n"); 
		query.append("                    GROUP BY B.REP_TRD_CD," ).append("\n"); 
		query.append("                             B.TRD_CD    ," ).append("\n"); 
		query.append("                             T.SLS_OFC_CD," ).append("\n"); 
		query.append("                             T.IOC_TS_CD ," ).append("\n"); 
		query.append("                             T.POL_YD_CD ," ).append("\n"); 
		query.append("                             T.POD_YD_CD ," ).append("\n"); 
		query.append("                             B.POL_SEQ   ," ).append("\n"); 
		query.append("                             B.POD_SEQ" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- Trunk Allocated/Allocation" ).append("\n"); 
		query.append("                      SELECT 102 + DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, 1, 0) AS FLG," ).append("\n"); 
		query.append("                             'Trunk Allocated/Allocation' AS FLAG," ).append("\n"); 
		query.append("                             DECODE(T.MNL_FLG, 'Y', 'T-', '')||DECODE(T.IOC_CD, 'O', 'OCN', 'I', 'IPC', '') AS IOC_CD," ).append("\n"); 
		query.append("                             B.REP_TRD_CD," ).append("\n"); 
		query.append("                             B.TRD_CD    ," ).append("\n"); 
		query.append("                             T.SLS_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("                             T.POL_YD_CD  AS POL_CD," ).append("\n"); 
		query.append("                             T.POD_YD_CD  AS POD_CD," ).append("\n"); 
		query.append("                             B.POL_SEQ," ).append("\n"); 
		query.append("                             B.POD_SEQ," ).append("\n"); 
		query.append("                             0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                             0 AS CMB1     ," ).append("\n"); 
		query.append("                             0 AS CMB2     ," ).append("\n"); 
		query.append("                             0 AS FC_TEU   ," ).append("\n"); 
		query.append("                             0 AS FC_20    ," ).append("\n"); 
		query.append("                             0 AS FC_40    ," ).append("\n"); 
		query.append("                             0 AS FC_HC    ," ).append("\n"); 
		query.append("                             0 AS FC_45    ," ).append("\n"); 
		query.append("                             0 AS FC_53    ," ).append("\n"); 
		query.append("                             0 AS FC_RF    ," ).append("\n"); 
		query.append("                             0 AS FC_WGT   ," ).append("\n"); 
		query.append("                             0 AS UG_TEU   ," ).append("\n"); 
		query.append("                             0 AS UG_20    ," ).append("\n"); 
		query.append("                             0 AS UG_40    ," ).append("\n"); 
		query.append("                             0 AS UG_HC    ," ).append("\n"); 
		query.append("                             0 AS UG_45    ," ).append("\n"); 
		query.append("                             0 AS UG_53    ," ).append("\n"); 
		query.append("                             0 AS UG_RF    ," ).append("\n"); 
		query.append("                             0 AS UG_WGT   ," ).append("\n"); 
		query.append("                             0 AS BK_TEU   ," ).append("\n"); 
		query.append("                             0 AS BK_20    ," ).append("\n"); 
		query.append("                             0 AS BK_40    ," ).append("\n"); 
		query.append("                             0 AS BK_HC    ," ).append("\n"); 
		query.append("                             0 AS BK_45    ," ).append("\n"); 
		query.append("                             0 AS BK_53    ," ).append("\n"); 
		query.append("                             0 AS BK_RF    ," ).append("\n"); 
		query.append("                             0 AS BK_WGT   ," ).append("\n"); 
		query.append("                             0 AS BT_TEU   ," ).append("\n"); 
		query.append("                             0 AS BT_20    ," ).append("\n"); 
		query.append("                             0 AS BT_40    ," ).append("\n"); 
		query.append("                             0 AS BT_HC    ," ).append("\n"); 
		query.append("                             0 AS BT_45    ," ).append("\n"); 
		query.append("                             0 AS BT_53    ," ).append("\n"); 
		query.append("                             0 AS BT_RF    ," ).append("\n"); 
		query.append("                             0 AS BT_WGT   ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_TTL_QTY        , 0) AS AD_TEU," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_20FT_QTY       , 0) AS AD_20 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_40FT_QTY       , 0) AS AD_40 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_40FT_HC_QTY    , 0) AS AD_HC ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_45FT_HC_QTY    , 0) AS AD_45 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_53FT_QTY       , 0) AS AD_53 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_RF_QTY         , 0) AS AD_RF ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_TTL_WGT        , 0) AS AD_WGT," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_TTL_QTY    , 0) AS AP_TEU," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_20FT_QTY   , 0) AS AP_20 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_40FT_QTY   , 0) AS AP_40 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_40FT_HC_QTY, 0) AS AP_HC ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_45FT_HC_QTY, 0) AS AP_45 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_53FT_QTY   , 0) AS AP_53 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_RF_QTY     , 0) AS AP_RF ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_TTL_WGT    , 0) AS AP_WGT," ).append("\n"); 
		query.append("                             0 AS GT_TEU," ).append("\n"); 
		query.append("                             0 AS GT_20 ," ).append("\n"); 
		query.append("                             0 AS GT_40 ," ).append("\n"); 
		query.append("                             0 AS GT_HC ," ).append("\n"); 
		query.append("                             0 AS GT_45 ," ).append("\n"); 
		query.append("                             0 AS GT_53 ," ).append("\n"); 
		query.append("                             0 AS GT_RF ," ).append("\n"); 
		query.append("                             0 AS GT_WGT," ).append("\n"); 
		query.append("                             'Y'  AS EDIT   ," ).append("\n"); 
		query.append("                             NULL AS CFM_FLG," ).append("\n"); 
		query.append("                             T.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                             T.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                             T.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                        FROM SPC_ALOC_POL_POD T," ).append("\n"); 
		query.append("                             VSL_PORT_SKD     B" ).append("\n"); 
		query.append("                       WHERE T.TRD_CD     = B.TRD_CD" ).append("\n"); 
		query.append("                         AND T.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("                         AND T.DIR_CD     = B.DIR_CD" ).append("\n"); 
		query.append("                         AND T.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                         AND T.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND T.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND T.POL_YD_CD  = B.POL_CD" ).append("\n"); 
		query.append("                         AND T.POD_YD_CD  = B.POD_CD" ).append("\n"); 
		query.append("                         AND (T.SLS_RGN_OFC_CD = B.OFC_CD OR T.SLS_OFC_CD = B.OFC_CD)" ).append("\n"); 
		query.append("                         AND T.TS_FLG     = 'N'" ).append("\n"); 
		query.append("                         AND NVL(B.PL_CLPT_IND_SEQ,'1') = NVL(T.POL_IND_SEQ,'1')" ).append("\n"); 
		query.append("                         AND NVL(B.PD_CLPT_IND_SEQ,'1') = NVL(T.POD_IND_SEQ,'1')" ).append("\n"); 
		query.append("                      " ).append("\n"); 
		query.append("                    UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   SELECT   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   105 AS FLG," ).append("\n"); 
		query.append("                   'Trunk Booking' AS FLAG," ).append("\n"); 
		query.append("                   DECODE(VSL_PRE_PST_CD, 'T', DECODE(IOC_CD, 'O', 'OCN', 'I', 'IPC', ''), 'T/S') AS IOC_CD," ).append("\n"); 
		query.append("                   REP_TRD_CD          ," ).append("\n"); 
		query.append("                   TRD_CD              ," ).append("\n"); 
		query.append("                   SLS_OFC_CD          ," ).append("\n"); 
		query.append("                   POL_CD              ," ).append("\n"); 
		query.append("                   POD_CD              ," ).append("\n"); 
		query.append("                   POL_SEQ             ," ).append("\n"); 
		query.append("                   POD_SEQ             ," ).append("\n"); 
		query.append("                   0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                   0 AS CMB1     ," ).append("\n"); 
		query.append("                   0 AS CMB2     ," ).append("\n"); 
		query.append("                   0 AS FC_TEU   ," ).append("\n"); 
		query.append("                   0 AS FC_20    ," ).append("\n"); 
		query.append("                   0 AS FC_40    ," ).append("\n"); 
		query.append("                   0 AS FC_HC    ," ).append("\n"); 
		query.append("                   0 AS FC_45    ," ).append("\n"); 
		query.append("                   0 AS FC_53    ," ).append("\n"); 
		query.append("                   0 AS FC_RF    ," ).append("\n"); 
		query.append("                   0 AS FC_WGT   ," ).append("\n"); 
		query.append("                   0 AS UG_TEU   ," ).append("\n"); 
		query.append("                   0 AS UG_20    ," ).append("\n"); 
		query.append("                   0 AS UG_40    ," ).append("\n"); 
		query.append("                   0 AS UG_HC    ," ).append("\n"); 
		query.append("                   0 AS UG_45    ," ).append("\n"); 
		query.append("                   0 AS UG_53    ," ).append("\n"); 
		query.append("                   0 AS UG_RF    ," ).append("\n"); 
		query.append("                   0 AS UG_WGT   ," ).append("\n"); 
		query.append("                   DECODE(BKG_STS_CD, 'F', BKG_TTL_QTY    ) AS BK_TEU," ).append("\n"); 
		query.append("                   DECODE(BKG_STS_CD, 'F', BKG_20FT_QTY   ) AS BK_20 ," ).append("\n"); 
		query.append("                   DECODE(BKG_STS_CD, 'F', BKG_40FT_QTY   ) AS BK_40 ," ).append("\n"); 
		query.append("                   DECODE(BKG_STS_CD, 'F', BKG_40FT_HC_QTY) AS BK_HC ," ).append("\n"); 
		query.append("                   DECODE(BKG_STS_CD, 'F', BKG_45FT_HC_QTY) AS BK_45 ," ).append("\n"); 
		query.append("                   DECODE(BKG_STS_CD, 'F', BKG_53FT_QTY   ) AS BK_53 ," ).append("\n"); 
		query.append("                   DECODE(BKG_STS_CD, 'F', BKG_RF_QTY     ) AS BK_RF ," ).append("\n"); 
		query.append("                   DECODE(BKG_STS_CD, 'F', BKG_TTL_WGT    ) AS BK_WGT," ).append("\n"); 
		query.append("                   (BKG_TTL_QTY)     AS BT_TEU," ).append("\n"); 
		query.append("                   (BKG_20FT_QTY)    AS BT_20 ," ).append("\n"); 
		query.append("                   (BKG_40FT_QTY)    AS BT_40 ," ).append("\n"); 
		query.append("                   (BKG_40FT_HC_QTY) AS BT_HC ," ).append("\n"); 
		query.append("                   (BKG_45FT_HC_QTY) AS BT_45 ," ).append("\n"); 
		query.append("                   (BKG_53FT_QTY)    AS BT_53 ," ).append("\n"); 
		query.append("                   (BKG_RF_QTY)      AS BT_RF ," ).append("\n"); 
		query.append("                   (BKG_TTL_WGT)     AS BT_WGT," ).append("\n"); 
		query.append("                   0 AS AD_TEU," ).append("\n"); 
		query.append("                   0 AS AD_20 ," ).append("\n"); 
		query.append("                   0 AS AD_40 ," ).append("\n"); 
		query.append("                   0 AS AD_HC ," ).append("\n"); 
		query.append("                   0 AS AD_45 ," ).append("\n"); 
		query.append("                   0 AS AD_53 ," ).append("\n"); 
		query.append("                   0 AS AD_RF ," ).append("\n"); 
		query.append("                   0 AS AD_WGT," ).append("\n"); 
		query.append("                   0 AS AP_TEU," ).append("\n"); 
		query.append("                   0 AS AP_20 ," ).append("\n"); 
		query.append("                   0 AS AP_40 ," ).append("\n"); 
		query.append("                   0 AS AP_HC ," ).append("\n"); 
		query.append("                   0 AS AP_45 ," ).append("\n"); 
		query.append("                   0 AS AP_53 ," ).append("\n"); 
		query.append("                   0 AS AP_RF ," ).append("\n"); 
		query.append("                   0 AS AP_WGT," ).append("\n"); 
		query.append("                   0 AS GT_TEU," ).append("\n"); 
		query.append("                   0 AS GT_20 ," ).append("\n"); 
		query.append("                   0 AS GT_40 ," ).append("\n"); 
		query.append("                   0 AS GT_HC ," ).append("\n"); 
		query.append("                   0 AS GT_45 ," ).append("\n"); 
		query.append("                   0 AS GT_53 ," ).append("\n"); 
		query.append("                   0 AS GT_RF ," ).append("\n"); 
		query.append("                   0 AS GT_WGT," ).append("\n"); 
		query.append("                   DECODE(VSL_PRE_PST_CD, 'T', 'Y', EDIT) AS EDIT," ).append("\n"); 
		query.append("                   NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                   NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                   NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                   NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                  " ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("                             TRD_CD              ," ).append("\n"); 
		query.append("                             RLANE_CD      		 ," ).append("\n"); 
		query.append("                             SKD_DIR_CD    		 ," ).append("\n"); 
		query.append("                             VSL_CD        		 ," ).append("\n"); 
		query.append("                             SLS_OFC_CD          ," ).append("\n"); 
		query.append("                             VSL_PRE_PST_CD      ," ).append("\n"); 
		query.append("                             IOC_CD              ," ).append("\n"); 
		query.append("                             POL_CD              ," ).append("\n"); 
		query.append("                             POD_CD              ," ).append("\n"); 
		query.append("                             POL_SEQ             ," ).append("\n"); 
		query.append("                             POD_SEQ             ," ).append("\n"); 
		query.append("                             BKG_STS_CD          ," ).append("\n"); 
		query.append("                             EDIT                 ," ).append("\n"); 
		query.append("                             TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY    ," ).append("\n"); 
		query.append("                             TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_20FT_QTY   ," ).append("\n"); 
		query.append("                             TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)) AS BKG_40FT_QTY   ," ).append("\n"); 
		query.append("                             TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)) AS BKG_40FT_HC_QTY," ).append("\n"); 
		query.append("                             TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)) AS BKG_45FT_HC_QTY," ).append("\n"); 
		query.append("                             TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)) AS BKG_53FT_QTY   ," ).append("\n"); 
		query.append("                             TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)) AS BKG_RF_QTY     ," ).append("\n"); 
		query.append("                             TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0)) AS BKG_TTL_WGT" ).append("\n"); 
		query.append("                        FROM (" ).append("\n"); 
		query.append("                                SELECT " ).append("\n"); 
		query.append("                                       VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                       VPP.TRD_CD        ," ).append("\n"); 
		query.append("                                       VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                                       VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                       VPP.VSL_CD        ," ).append("\n"); 
		query.append("                                       B.OB_SLS_OFC_CD AS SLS_OFC_CD ," ).append("\n"); 
		query.append("                                       VSL_PRE_PST_CD    ," ).append("\n"); 
		query.append("                                       (SELECT   DECODE(B.FM_CONTI_CD,B.TO_CONTI_CD,'I','O')" ).append("\n"); 
		query.append("                                         FROM MDM_REV_LANE A,  MDM_DTL_REV_LANE B" ).append("\n"); 
		query.append("                                         WHERE B.RLANE_CD = A.RLANE_CD" ).append("\n"); 
		query.append("                                          AND B.RLANE_CD LIKE BV.SLAN_CD||'%'" ).append("\n"); 
		query.append("                                          AND B.FM_CONTI_CD = (" ).append("\n"); 
		query.append("                                                                SELECT MLOC.CONTI_CD" ).append("\n"); 
		query.append("                                                                FROM MDM_LOCATION MLOC" ).append("\n"); 
		query.append("                                                                WHERE MLOC.LOC_CD = BV.POL_CD " ).append("\n"); 
		query.append("                                                              )" ).append("\n"); 
		query.append("                                          AND B.TO_CONTI_CD = (" ).append("\n"); 
		query.append("                                                                SELECT MLOC.CONTI_CD" ).append("\n"); 
		query.append("                                                                FROM MDM_LOCATION MLOC" ).append("\n"); 
		query.append("                                                                WHERE MLOC.LOC_CD = BV.POD_CD " ).append("\n"); 
		query.append("                                                               )" ).append("\n"); 
		query.append("                                          AND B.VSL_SLAN_DIR_CD = BV.SKD_DIR_CD" ).append("\n"); 
		query.append("                                          AND B.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                          AND ROWNUM = 1 )  IOC_CD," ).append("\n"); 
		query.append("                                       VPP.POL_CD              ," ).append("\n"); 
		query.append("                                       VPP.POD_CD              ," ).append("\n"); 
		query.append("                                       VPP.POL_SEQ             ," ).append("\n"); 
		query.append("                                       VPP.POD_SEQ             ," ).append("\n"); 
		query.append("                                       B.BKG_STS_CD            ," ).append("\n"); 
		query.append("                                       VPP.EDIT                ," ).append("\n"); 
		query.append("                                       (" ).append("\n"); 
		query.append("                                          SELECT" ).append("\n"); 
		query.append("                                                    TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, '5', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D5'), '7', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D7'), 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0) + DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'T', Q.RC_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR((D.ACT_WGT * DECODE(D.WGT_UT_CD, 'LBS', 0.00045, 0.001))" ).append("\n"); 
		query.append("                                                                         + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                   FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                  WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                                            FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                           WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("                                             AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                                       ) AS VAL" ).append("\n"); 
		query.append("                                 FROM  VSL_PORT_SKD VPP," ).append("\n"); 
		query.append("                                       BKG_VVD      BV ," ).append("\n"); 
		query.append("                                       BKG_BOOKING  B  ," ).append("\n"); 
		query.append("                                       SPC_OFC_LVL  O  ," ).append("\n"); 
		query.append("                                       BKG_BL_DOC   D" ).append("\n"); 
		query.append("                                 WHERE 1=1" ).append("\n"); 
		query.append("                                    AND (VPP.TRD_CD,VPP.RLANE_CD)  =  (" ).append("\n"); 
		query.append("                                                                        SELECT   B.TRD_CD,B.RLANE_CD" ).append("\n"); 
		query.append("                                                                        FROM MDM_REV_LANE A,  MDM_DTL_REV_LANE B" ).append("\n"); 
		query.append("                                                                        WHERE B.RLANE_CD = A.RLANE_CD" ).append("\n"); 
		query.append("                                                                          AND B.RLANE_CD LIKE BV.SLAN_CD||'%'" ).append("\n"); 
		query.append("                                                                          AND B.FM_CONTI_CD = (" ).append("\n"); 
		query.append("                                                                                                SELECT MLOC.CONTI_CD" ).append("\n"); 
		query.append("                                                                                                FROM MDM_LOCATION MLOC" ).append("\n"); 
		query.append("                                                                                                WHERE MLOC.LOC_CD = BV.POL_CD " ).append("\n"); 
		query.append("                                                                                              )" ).append("\n"); 
		query.append("                                                                          AND B.TO_CONTI_CD = (" ).append("\n"); 
		query.append("                                                                                                SELECT MLOC.CONTI_CD" ).append("\n"); 
		query.append("                                                                                                FROM MDM_LOCATION MLOC" ).append("\n"); 
		query.append("                                                                                                WHERE MLOC.LOC_CD = BV.POD_CD " ).append("\n"); 
		query.append("                                                                                               )" ).append("\n"); 
		query.append("                                                                          AND B.VSL_SLAN_DIR_CD = BV.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                          AND B.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                                                          AND ROWNUM = 1 " ).append("\n"); 
		query.append("                                                                      ) " ).append("\n"); 
		query.append("                               " ).append("\n"); 
		query.append("                                   AND O.OFC_TP_CD     IN ('BB', 'BA', 'BS')" ).append("\n"); 
		query.append("                                   AND O.OFC_CD         = B.OB_SLS_OFC_CD" ).append("\n"); 
		query.append("                                   AND O.N4TH_PRNT_OFC_CD = VPP.OFC_CD" ).append("\n"); 
		query.append("                                   AND VPP.COST_YR_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                                   AND B.BKG_STS_CD    IN ('W', 'F')" ).append("\n"); 
		query.append("                                   AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("                                   AND B.BKG_NO         = BV.BKG_NO" ).append("\n"); 
		query.append("                                   AND BV.VSL_CD        = VPP.VSL_CD" ).append("\n"); 
		query.append("                                   AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                   AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                   AND BV.POL_YD_CD     = VPP.POL_CD                            AND BV.POD_YD_CD     = VPP.POD_CD                                                                                  AND B.BKG_NO         = D.BKG_NO" ).append("\n"); 
		query.append("                                   AND NVL(VPP.PL_CLPT_IND_SEQ,'1') = NVL(BV.POL_CLPT_IND_SEQ,'1')" ).append("\n"); 
		query.append("                                   AND NVL(VPP.PD_CLPT_IND_SEQ,'1') = NVL(BV.POD_CLPT_IND_SEQ,'1')" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("                   )    " ).append("\n"); 
		query.append("                         UNION ALL" ).append("\n"); 
		query.append("                    -- Booking Quota" ).append("\n"); 
		query.append("                          SELECT 107 AS FLG," ).append("\n"); 
		query.append("                                 'Booking Quota / CMB' AS FLAG," ).append("\n"); 
		query.append("                                 DECODE(VPS.IOC_CD, 'O', 'OCN', 'I', 'IPC', '') AS IOC_CD," ).append("\n"); 
		query.append("                                 VPS.REP_TRD_CD," ).append("\n"); 
		query.append("                                 VPS.TRD_CD    ," ).append("\n"); 
		query.append("                                 OV.SAQ_RGN_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("                                 MQ.POL_CD         AS POL_CD," ).append("\n"); 
		query.append("                                 MQ.POD_CD         AS POD_CD," ).append("\n"); 
		query.append("                                 VPS.POL_SEQ," ).append("\n"); 
		query.append("                                 VPS.POD_SEQ," ).append("\n"); 
		query.append("                                 ROUND(SUM(MQ.LOD_QTY)) AS BKG_QUOTA," ).append("\n"); 
		query.append("                                 0 AS CMB1  ," ).append("\n"); 
		query.append("                                 0 AS CMB2  ," ).append("\n"); 
		query.append("                                 0 AS FC_TEU," ).append("\n"); 
		query.append("                                 0 AS FC_20 ," ).append("\n"); 
		query.append("                                 0 AS FC_40 ," ).append("\n"); 
		query.append("                                 0 AS FC_HC ," ).append("\n"); 
		query.append("                                 0 AS FC_45 ," ).append("\n"); 
		query.append("                                 0 AS FC_53 ," ).append("\n"); 
		query.append("                                 0 AS FC_RF ," ).append("\n"); 
		query.append("                                 0 AS FC_WGT," ).append("\n"); 
		query.append("                                 0 AS UG_TEU," ).append("\n"); 
		query.append("                                 0 AS UG_20 ," ).append("\n"); 
		query.append("                                 0 AS UG_40 ," ).append("\n"); 
		query.append("                                 0 AS UG_HC ," ).append("\n"); 
		query.append("                                 0 AS UG_45 ," ).append("\n"); 
		query.append("                                 0 AS UG_53 ," ).append("\n"); 
		query.append("                                 0 AS UG_RF ," ).append("\n"); 
		query.append("                                 0 AS UG_WGT," ).append("\n"); 
		query.append("                                 0 AS BK_TEU," ).append("\n"); 
		query.append("                                 0 AS BK_20 ," ).append("\n"); 
		query.append("                                 0 AS BK_40 ," ).append("\n"); 
		query.append("                                 0 AS BK_HC ," ).append("\n"); 
		query.append("                                 0 AS BK_45 ," ).append("\n"); 
		query.append("                                 0 AS BK_53 ," ).append("\n"); 
		query.append("                                 0 AS BK_RF ," ).append("\n"); 
		query.append("                                 0 AS BK_WGT," ).append("\n"); 
		query.append("                                 0 AS BT_TEU," ).append("\n"); 
		query.append("                                 0 AS BT_20 ," ).append("\n"); 
		query.append("                                 0 AS BT_40 ," ).append("\n"); 
		query.append("                                 0 AS BT_HC ," ).append("\n"); 
		query.append("                                 0 AS BT_45 ," ).append("\n"); 
		query.append("                                 0 AS BT_53 ," ).append("\n"); 
		query.append("                                 0 AS BT_RF ," ).append("\n"); 
		query.append("                                 0 AS BT_WGT," ).append("\n"); 
		query.append("                                 0 AS AD_TEU," ).append("\n"); 
		query.append("                                 0 AS AD_20 ," ).append("\n"); 
		query.append("                                 0 AS AD_40 ," ).append("\n"); 
		query.append("                                 0 AS AD_HC ," ).append("\n"); 
		query.append("                                 0 AS AD_45 ," ).append("\n"); 
		query.append("                                 0 AS AD_53 ," ).append("\n"); 
		query.append("                                 0 AS AD_RF ," ).append("\n"); 
		query.append("                                 0 AS AD_WGT," ).append("\n"); 
		query.append("                                 0 AS AP_TEU," ).append("\n"); 
		query.append("                                 0 AS AP_20 ," ).append("\n"); 
		query.append("                                 0 AS AP_40 ," ).append("\n"); 
		query.append("                                 0 AS AP_HC ," ).append("\n"); 
		query.append("                                 0 AS AP_45 ," ).append("\n"); 
		query.append("                                 0 AS AP_53 ," ).append("\n"); 
		query.append("                                 0 AS AP_RF ," ).append("\n"); 
		query.append("                                 0 AS AP_WGT," ).append("\n"); 
		query.append("                                 0 AS GT_TEU," ).append("\n"); 
		query.append("                                 0 AS GT_20 ," ).append("\n"); 
		query.append("                                 0 AS GT_40 ," ).append("\n"); 
		query.append("                                 0 AS GT_HC ," ).append("\n"); 
		query.append("                                 0 AS GT_45 ," ).append("\n"); 
		query.append("                                 0 AS GT_53 ," ).append("\n"); 
		query.append("                                 0 AS GT_RF ," ).append("\n"); 
		query.append("                                 0 AS GT_WGT," ).append("\n"); 
		query.append("                                 'Y'  AS EDIT   ," ).append("\n"); 
		query.append("                                 NULL AS CFM_FLG," ).append("\n"); 
		query.append("                                 NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                                 NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                                 NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                            FROM BASE             B  ," ).append("\n"); 
		query.append("                                 VSL_PORT_SKD     VPS," ).append("\n"); 
		query.append("                                 SAQ_MON_CFM_QTA  MQ ," ).append("\n"); 
		query.append("                                 SAQ_MON_QTA_RLSE MQR," ).append("\n"); 
		query.append("                                 SPC_OFC_LVL      OV" ).append("\n"); 
		query.append("                           WHERE MQR.BSE_YR          = B.YEAR" ).append("\n"); 
		query.append("                             AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(B.MON) / 3)||'Q'" ).append("\n"); 
		query.append("                             AND MQR.QTA_RLSE_STS_CD = 'R'" ).append("\n"); 
		query.append("                             AND MQ.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                             AND MQ.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                             AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                             AND MQ.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                             AND MQ.BSE_MON          = B.MON" ).append("\n"); 
		query.append("                             AND MQ.TRD_CD           = VPS.TRD_CD" ).append("\n"); 
		query.append("                             AND MQ.RLANE_CD         = VPS.RLANE_CD" ).append("\n"); 
		query.append("                             AND MQ.DIR_CD           = VPS.DIR_CD" ).append("\n"); 
		query.append("                             AND MQ.VSL_CD           = VPS.VSL_CD" ).append("\n"); 
		query.append("                             AND MQ.SKD_VOY_NO       = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                             AND MQ.SKD_DIR_CD       = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                             AND MQ.RGN_OFC_CD       = VPS.OFC_CD" ).append("\n"); 
		query.append("                             AND MQ.POL_CD           = SUBSTR(VPS.POL_CD, 1, 5)" ).append("\n"); 
		query.append("                             AND MQ.POD_CD           = SUBSTR(VPS.POD_CD, 1, 5)" ).append("\n"); 
		query.append("                             AND MQ.RGN_OFC_CD       = OV.OFC_CD" ).append("\n"); 
		query.append("                             AND OV.SAQ_RGN_OFC_CD   = VPS.OFC_CD" ).append("\n"); 
		query.append("                             AND B.COST_YR || B.COST_WK BETWEEN OV.OFC_APLY_FM_YRWK AND OV.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                             AND MQ.LOD_QTY          > 0" ).append("\n"); 
		query.append("                        GROUP BY VPS.REP_TRD_CD   ," ).append("\n"); 
		query.append("                                 VPS.TRD_CD       ," ).append("\n"); 
		query.append("                                 VPS.IOC_CD       ," ).append("\n"); 
		query.append("                                 OV.SAQ_RGN_OFC_CD," ).append("\n"); 
		query.append("                                 MQ.POL_CD        ," ).append("\n"); 
		query.append("                                 MQ.POD_CD        ," ).append("\n"); 
		query.append("                                 VPS.POL_SEQ      ," ).append("\n"); 
		query.append("                                 VPS.POD_SEQ" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- TS Allocation/Allocated" ).append("\n"); 
		query.append("                      SELECT 202 + DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, 1, 0) AS FLG," ).append("\n"); 
		query.append("                             'T/S Allocation/Allocated' AS FLAG," ).append("\n"); 
		query.append("                             DECODE(T.MNL_FLG, 'Y', 'T-T/S', 'T/S') AS IOC_CD," ).append("\n"); 
		query.append("                             B.REP_TRD_CD," ).append("\n"); 
		query.append("                             B.TRD_CD    ," ).append("\n"); 
		query.append("                             T.SLS_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("                             T.POL_YD_CD  AS POL_CD," ).append("\n"); 
		query.append("                             T.POD_YD_CD  AS POD_CD," ).append("\n"); 
		query.append("                             B.POL_SEQ," ).append("\n"); 
		query.append("                             B.POD_SEQ," ).append("\n"); 
		query.append("                             0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                             0 AS CMB1     ," ).append("\n"); 
		query.append("                             0 AS CMB2     ," ).append("\n"); 
		query.append("                             0 AS FC_TEU   ," ).append("\n"); 
		query.append("                             0 AS FC_20    ," ).append("\n"); 
		query.append("                             0 AS FC_40    ," ).append("\n"); 
		query.append("                             0 AS FC_HC    ," ).append("\n"); 
		query.append("                             0 AS FC_45    ," ).append("\n"); 
		query.append("                             0 AS FC_53    ," ).append("\n"); 
		query.append("                             0 AS FC_RF    ," ).append("\n"); 
		query.append("                             0 AS FC_WGT   ," ).append("\n"); 
		query.append("                             0 AS UG_TEU   ," ).append("\n"); 
		query.append("                             0 AS UG_20    ," ).append("\n"); 
		query.append("                             0 AS UG_40    ," ).append("\n"); 
		query.append("                             0 AS UG_HC    ," ).append("\n"); 
		query.append("                             0 AS UG_45    ," ).append("\n"); 
		query.append("                             0 AS UG_53    ," ).append("\n"); 
		query.append("                             0 AS UG_RF    ," ).append("\n"); 
		query.append("                             0 AS UG_WGT   ," ).append("\n"); 
		query.append("                             0 AS BK_TEU   ," ).append("\n"); 
		query.append("                             0 AS BK_20    ," ).append("\n"); 
		query.append("                             0 AS BK_40    ," ).append("\n"); 
		query.append("                             0 AS BK_HC    ," ).append("\n"); 
		query.append("                             0 AS BK_45    ," ).append("\n"); 
		query.append("                             0 AS BK_53    ," ).append("\n"); 
		query.append("                             0 AS BK_RF    ," ).append("\n"); 
		query.append("                             0 AS BK_WGT   ," ).append("\n"); 
		query.append("                             0 AS BT_TEU   ," ).append("\n"); 
		query.append("                             0 AS BT_20    ," ).append("\n"); 
		query.append("                             0 AS BT_40    ," ).append("\n"); 
		query.append("                             0 AS BT_HC    ," ).append("\n"); 
		query.append("                             0 AS BT_45    ," ).append("\n"); 
		query.append("                             0 AS BT_53    ," ).append("\n"); 
		query.append("                             0 AS BT_RF    ," ).append("\n"); 
		query.append("                             0 AS BT_WGT   ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_TTL_QTY        , 0) AS AD_TEU," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_20FT_QTY       , 0) AS AD_20 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_40FT_QTY       , 0) AS AD_40 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_40FT_HC_QTY    , 0) AS AD_HC ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_45FT_HC_QTY    , 0) AS AD_45 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_53FT_QTY       , 0) AS AD_53 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_RF_QTY         , 0) AS AD_RF ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_TTL_WGT        , 0) AS AD_WGT," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_TTL_QTY    , 0) AS AP_TEU," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_20FT_QTY   , 0) AS AP_20 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_40FT_QTY   , 0) AS AP_40 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_40FT_HC_QTY, 0) AS AP_HC ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_45FT_HC_QTY, 0) AS AP_45 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_53FT_QTY   , 0) AS AP_53 ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_RF_QTY     , 0) AS AP_RF ," ).append("\n"); 
		query.append("                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_TTL_WGT    , 0) AS AP_WGT," ).append("\n"); 
		query.append("                             0 AS GT_TEU," ).append("\n"); 
		query.append("                             0 AS GT_20 ," ).append("\n"); 
		query.append("                             0 AS GT_40 ," ).append("\n"); 
		query.append("                             0 AS GT_HC ," ).append("\n"); 
		query.append("                             0 AS GT_45 ," ).append("\n"); 
		query.append("                             0 AS GT_53 ," ).append("\n"); 
		query.append("                             0 AS GT_RF ," ).append("\n"); 
		query.append("                             0 AS GT_WGT," ).append("\n"); 
		query.append("                             B.EDIT," ).append("\n"); 
		query.append("                             NULL AS CFM_FLG," ).append("\n"); 
		query.append("                             T.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                             T.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                             T.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                        FROM SPC_ALOC_POL_POD T," ).append("\n"); 
		query.append("                             VSL_PORT_SKD     B" ).append("\n"); 
		query.append("                       WHERE T.TRD_CD     = B.TRD_CD" ).append("\n"); 
		query.append("                         AND T.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("                         AND T.DIR_CD     = B.DIR_CD" ).append("\n"); 
		query.append("                         AND T.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                         AND T.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND T.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND T.POL_YD_CD  = B.POL_CD" ).append("\n"); 
		query.append("                         AND T.POD_YD_CD  = B.POD_CD" ).append("\n"); 
		query.append("                         AND (T.SLS_RGN_OFC_CD = B.OFC_CD OR T.SLS_OFC_CD = B.OFC_CD)" ).append("\n"); 
		query.append("                         AND T.TS_FLG     = 'Y'" ).append("\n"); 
		query.append("                   ) U" ).append("\n"); 
		query.append("          GROUP BY U.REP_TRD_CD," ).append("\n"); 
		query.append("                   U.TRD_CD    ," ).append("\n"); 
		query.append("                   U.OFC_CD    ," ).append("\n"); 
		query.append("                   U.IOC_CD    ," ).append("\n"); 
		query.append("                   U.OFC_CD    ," ).append("\n"); 
		query.append("                   U.POL_CD    ," ).append("\n"); 
		query.append("                   U.POD_CD" ).append("\n"); 
		query.append("            HAVING U.IOC_CD LIKE 'T-%'" ).append("\n"); 
		query.append("                OR U.POD_CD = SUBSTR('0000000', 1, LENGTH(U.POL_CD))" ).append("\n"); 
		query.append("                OR ROUND(SUM(BKG_QUOTA), 1) > 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(NVL(FC_TEU, 0) + NVL(FC_HC, 0) + NVL(FC_45, 0) + NVL(FC_53, 0)), 1) > 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(UG_TEU), 1) >  0" ).append("\n"); 
		query.append("                OR ROUND(SUM(UG_WGT), 1) >  0" ).append("\n"); 
		query.append("                OR ROUND(SUM(AD_TEU), 1) >= 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(AP_TEU), 1) >= 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(AD_WGT), 1) >= 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(AP_WGT), 1) >= 0" ).append("\n"); 
		query.append("                OR ROUND(SUM(BT_TEU), 1) >  0" ).append("\n"); 
		query.append("                OR ROUND(SUM(BK_TEU), 1) >  0" ).append("\n"); 
		query.append("                OR ROUND(SUM(GT_TEU), 1) >  0" ).append("\n"); 
		query.append("         ) Z" ).append("\n"); 
		query.append("GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                         (REP_TRD_CD, TRD_CD, IOC_CD, OFC_CD, POL_CD, POL_SEQ, POD_CD, POD_SEQ)," ).append("\n"); 
		query.append("                         (REP_TRD_CD, TRD_CD, IOC_CD, OFC_CD, POL_CD, POL_SEQ)," ).append("\n"); 
		query.append("                         (REP_TRD_CD, TRD_CD, IOC_CD, OFC_CD)," ).append("\n"); 
		query.append("                         (REP_TRD_CD, TRD_CD, IOC_CD)" ).append("\n"); 
		query.append("                       )" ).append("\n"); 
		query.append("  HAVING (POL_CD IS NULL OR POL_CD <> SUBSTR('0000000', 1, LENGTH(POL_CD)))" ).append("\n"); 
		query.append("     AND (POD_CD IS NULL OR POD_CD <> SUBSTR('0000000', 1, LENGTH(POD_CD)))" ).append("\n"); 
		query.append("     AND (    IOC_CD LIKE 'T-%'" ).append("\n"); 
		query.append("           OR ROUND(SUM(BKG_QUOTA), 1) > 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(NVL(FC_TEU, 0) + NVL(FC_HC, 0) + NVL(FC_45, 0) + NVL(FC_53, 0)), 1) > 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(UG_TEU), 1) >  0" ).append("\n"); 
		query.append("           OR ROUND(SUM(UG_WGT), 1) >  0" ).append("\n"); 
		query.append("           OR ROUND(SUM(AD_TEU), 1) >= 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(AP_TEU), 1) >= 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(AD_WGT), 1) >= 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(AP_WGT), 1) >= 0" ).append("\n"); 
		query.append("           OR ROUND(SUM(BT_TEU), 1) >  0" ).append("\n"); 
		query.append("           OR ROUND(SUM(BK_TEU), 1) >  0" ).append("\n"); 
		query.append("           OR ROUND(SUM(GT_TEU), 1) >  0 )" ).append("\n"); 
		query.append("ORDER BY DECODE(IOC_CD, 'OCN', 1, 'IPC', 2, 'EQ', 3, 'T/S', 4, 'T-OCN', 5, 'T-IPC', 6, 'T-T/S', 7, 10)," ).append("\n"); 
		query.append("         DECODE((SELECT B.OFC_CD FROM BASE_KEY B), OFC_CD, 1, 2)," ).append("\n"); 
		query.append("         DECODE(OFC_CD, '+', 'ZZZZZ', OFC_CD)," ).append("\n"); 
		query.append("         POL_CD," ).append("\n"); 
		query.append("         NVL(POL_SEQ, -1)," ).append("\n"); 
		query.append("         NVL(POD_SEQ, -1)" ).append("\n"); 

	}
}