<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PreCMSimulationDBDAOsearchBkg4006ListRSQL">
			<desc><![CDATA[_BKG_COST_DTL, _SPCL_REPO_CNTR_RGST 테이블의 데이터 조회]]></desc>
			<sql><![CDATA[
SELECT NOD_CD, COST_ACT_GRP_SEQ, GRP, SGRP_COST_CD_DESC, STND_COST_NM
            ,DECODE(LVL,3,SUM(DECODE(LVL||GBN,2||1,AMT20_A,0)) OVER() - SUM(DECODE(LVL||GBN,2||2,AMT20_A,0)) OVER(), AMT20_A) AS AMT20_A
            ,DECODE(LVL,3,SUM(DECODE(LVL||GBN,2||1,AMT40_A,0)) OVER() - SUM(DECODE(LVL||GBN,2||2,AMT40_A,0)) OVER(), AMT40_A) AS AMT40_A
            ,DECODE(LVL,3,SUM(DECODE(LVL||GBN,2||1,AMT45_A,0)) OVER() - SUM(DECODE(LVL||GBN,2||2,AMT45_A,0)) OVER(), AMT45_A) AS AMT45_A
			,DECODE(LVL,3,SUM(DECODE(LVL||GBN,2||1,AMT45_2_A,0)) OVER() - SUM(DECODE(LVL||GBN,2||2,AMT45_2_A,0)) OVER(), AMT45_2_A) AS AMT45_2_A
            ,DECODE(LVL,3,SUM(DECODE(LVL||GBN,2||1,AMT20_B,0)) OVER() - SUM(DECODE(LVL||GBN,2||2,AMT20_B,0)) OVER(), AMT20_B) AS AMT20_B
            ,DECODE(LVL,3,SUM(DECODE(LVL||GBN,2||1,AMT40_B,0)) OVER() - SUM(DECODE(LVL||GBN,2||2,AMT40_B,0)) OVER(), AMT40_B) AS AMT40_B
            ,DECODE(LVL,3,SUM(DECODE(LVL||GBN,2||1,AMT45_B,0)) OVER() - SUM(DECODE(LVL||GBN,2||2,AMT45_B,0)) OVER(), AMT45_B) AS AMT45_B
			,DECODE(LVL,3,SUM(DECODE(LVL||GBN,2||1,AMT45_2_B,0)) OVER() - SUM(DECODE(LVL||GBN,2||2,AMT45_2_B,0)) OVER(), AMT45_2_B) AS AMT45_2_B
			,SIGN(DECODE(LVL,3,SUM(MIS_AVG_CNT_20) OVER(),MIS_AVG_CNT_20)) MIS_AVG_FLG_20
			,SIGN(DECODE(LVL,3,SUM(MIS_AVG_CNT_40) OVER(),MIS_AVG_CNT_40)) MIS_AVG_FLG_40
			,SIGN(DECODE(LVL,3,SUM(MIS_AVG_CNT_45) OVER(),MIS_AVG_CNT_45)) MIS_AVG_FLG_45
			,SIGN(DECODE(LVL,3,SUM(MIS_AVG_CNT_45_2) OVER(),MIS_AVG_CNT_45_2)) MIS_AVG_FLG_45_2
            ,WTR_RCV_TERM_CD, WTR_DE_TERM_CD, DECODE(LVL,3,1,1,3,0,4,LVL) LVL
    FROM (
	  SELECT '' 				AS NOD_CD
            ,0  				AS COST_ACT_GRP_SEQ 
            ,'' 				AS GRP
            ,SGRP_COST_CD_DESC
            ,SGRP_COST_CD_DESC  AS STND_COST_NM  
            ,AMT20_A
            ,AMT40_A
            ,AMT45_A
            ,AMT45_2_A
            ,AMT20_B
            ,AMT40_B
            ,AMT45_B
            ,AMT45_2_B
            ,0 MIS_AVG_CNT_20
            ,0 MIS_AVG_CNT_40
            ,0 MIS_AVG_CNT_45
            ,0 MIS_AVG_CNT_45_2
            ,'' 				AS WTR_RCV_TERM_CD
            ,'' 				AS WTR_DE_TERM_CD
            ,LVL
            ,1 					AS GBN
    FROM (
                SELECT SGRP_COST_CD_DESC,
                       DECODE(LVL,2,SUM(AMT20_A) OVER(),AMT20_A) AMT20_A
                      ,DECODE(LVL,2,SUM(AMT40_A) OVER(),AMT40_A) AMT40_A  
                      ,DECODE(LVL,2,SUM(AMT45_A) OVER(),AMT45_A) AMT45_A  
                      ,DECODE(LVL,2,SUM(AMT45_2_A) OVER(),AMT45_2_A) AMT45_2_A  
                      ,DECODE(LVL,2,SUM(AMT20_B) OVER(),AMT20_B) AMT20_B 
                      ,DECODE(LVL,2,SUM(AMT40_B) OVER(),AMT40_B) AMT40_B 
                      ,DECODE(LVL,2,SUM(AMT45_B) OVER(),AMT45_B) AMT45_B 
                      ,DECODE(LVL,2,SUM(AMT45_2_B) OVER(),AMT45_2_B) AMT45_2_B 
                      ,LVL
                    FROM (
                SELECT 
                             'CM' SGRP_COST_CD_DESC
                             ,0 AMT20_A,0 AMT40_A,0 AMT45_A,0 AMT45_2_A,0 AMT20_B,0 AMT40_B,0 AMT45_B,0 AMT45_2_B,3 LVL, 0 LVL2, 0 SEQ    FROM DUAL
                UNION ALL                     
                SELECT 
                             'Total Revenue' SGRP_COST_CD_DESC
                             ,0 AMT20_A,0 AMT40_A,0 AMT45_A,0 AMT45_2_A,0 AMT20_B,0 AMT40_B,0 AMT45_B,0 AMT45_2_B,2 LVL, 0 LVL2, 0 SEQ    FROM DUAL
                UNION ALL 
								#if (${rowcnt} > 0) 
									#set($i = 1)	        	
									#foreach(${key} in ${parentArr})
										SELECT '${key.chgCd}' SGRP_COST_CD_DESC
										      ,${key.d20} AMT20_A,${key.d40} AMT40_A,${key.d45} AMT45_A,${key.d70} AMT45_2_A
										      ,${key.d20} AMT20_B,${key.d40} AMT40_B,${key.d45} AMT45_B,${key.d70} AMT45_2_B
                                              ,${key.lvl} LVL, ${key.lvl2} LVL2, ${key.pc} SEQ 	FROM DUAL 
										#if(${rowcnt} > $i) 
											UNION ALL
											#set ($i = $i+1)	        		
										#end
									#end
								#end
								#if(${rowcnt} == 0 )
										SELECT ' ' SGRP_COST_CD_DESC, 0 AMT20_A, 0 AMT40_A, 0 AMT45_A, 0 AMT45_2_A, 0 AMT20_B, 0 AMT40_B, 0 AMT45_B, 0 AMT45_2_B, 0 LVL, 0 LVL2, 0 SEQ FROM DUAL 
								#end
                             ) A
                 ORDER BY LVL DESC, LVL2 DESC, SEQ ASC
          )
UNION ALL
-- COST
SELECT 
          DECODE(LVL,2,'',NOD_CD)    					AS NOD_CD
         ,DECODE(LVL,2,0,COST_ACT_GRP_SEQ) 				AS COST_ACT_GRP_SEQ 
         ,DECODE(LVL,2,'',GRP)          				AS GRP 
         ,DECODE(LVL,2,'Total Cost',SGRP_COST_CD_DESC)  AS SGRP_COST_CD_DESC 
         ,DECODE(LVL,2,'Total Cost',0,STND_COST_NM,'')  AS STND_COST_NM 
         ,AMT20_A
         ,AMT40_A
         ,AMT45_A  
         ,AMT45_2_A        
         ,AMT20_B
         ,AMT40_B
         ,AMT45_B
         ,AMT45_2_B
         ,MIS_AVG_CNT_20
         ,MIS_AVG_CNT_40
         ,MIS_AVG_CNT_45
         ,MIS_AVG_CNT_45_2
         ,WTR_RCV_TERM_CD 
         ,WTR_DE_TERM_CD 
         ,LVL 
         ,2 											AS GBN
FROM     (SELECT /*+ ORDERED */ 
                 MAX(A4.NOD_CD) 						AS NOD_CD
                ,MAX(A1.COST_ACT_GRP_CD)    			AS COST_ACT_GRP_CD
                ,A1.COST_ACT_GRP_SEQ
                ,A3.SGRP_COST_CD
                ,MAX(A3.SGRP_COST_CD_DESC) 				AS SGRP_COST_CD_DESC
                ,A3.STND_COST_CD
                ,MAX(A3.STND_COST_NM) 					AS STND_COST_NM
                ,COA_GET_COM_NM_FNC('cost_act_grp_cd',MAX(A1.COST_ACT_GRP_CD)) 		AS GRP 
                ,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 2, A1.ESTM_USD_TTL_AMT, 0)) AMT20_A
                ,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 4, A1.ESTM_USD_TTL_AMT, 0)) AMT40_A
                ,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 5, A1.ESTM_USD_TTL_AMT, 0)) AMT45_A  
				,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 7, A1.ESTM_USD_TTL_AMT, 0)) AMT45_2_A              
                ,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 2, DECODE(A1.STND_COST_CD, '51102001', A1.ESTM_USD_TTL_AMT2, A1.ESTM_USD_TTL_AMT), 0)) AMT20_B
                ,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 4, DECODE(A1.STND_COST_CD, '51102001', A1.ESTM_USD_TTL_AMT2, A1.ESTM_USD_TTL_AMT), 0)) AMT40_B
                ,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 5, DECODE(A1.STND_COST_CD, '51102001', A1.ESTM_USD_TTL_AMT2, A1.ESTM_USD_TTL_AMT), 0)) AMT45_B
				,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 7, DECODE(A1.STND_COST_CD, '51102001', A1.ESTM_USD_TTL_AMT2, A1.ESTM_USD_TTL_AMT), 0)) AMT45_2_B
                ,MAX(A1.WTR_RCV_TERM_CD) 				AS WTR_RCV_TERM_CD
                ,MAX(A1.WTR_DE_TERM_CD) 				AS WTR_DE_TERM_CD
                ,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 2, DECODE(A1.COST_ASS_BSE_CD||A1.CTRT_RTN_FLG, 'CN', 1, 0), 0)) MIS_AVG_CNT_20
                ,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 4, DECODE(A1.COST_ASS_BSE_CD||A1.CTRT_RTN_FLG, 'CN', 1, 0), 0)) MIS_AVG_CNT_40
                ,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 5, DECODE(A1.COST_ASS_BSE_CD||A1.CTRT_RTN_FLG, 'CN', 1, 0), 0)) MIS_AVG_CNT_45
				,SUM(DECODE ( SUBSTR(A1.CNTR_TPSZ_CD,-1), 7, DECODE(A1.COST_ASS_BSE_CD||A1.CTRT_RTN_FLG, 'CN', 1, 0), 0)) MIS_AVG_CNT_45_2
                ,GROUPING(A1.COST_ACT_GRP_SEQ)+GROUPING(A3.STND_COST_CD) 			AS LVL 
          FROM  COA_COM_COST_PARA A1 
               ,COA_STND_ACCT_V A3 
               ,(SELECT DISTINCT COST_ACT_GRP_SEQ
                               , COST_ACT_GRP_CD
                               , N1ST_NOD_CD                                               ORG_NOD_CD
                               , COALESCE(N4TH_NOD_CD,N3RD_NOD_CD,N2ND_NOD_CD)             DEST_NOD_CD
                               , DECODE(N1ST_NOD_CD,N2ND_NOD_CD,N1ST_NOD_CD
                                             , DECODE(N1ST_NOD_CD,NULL,' ', N1ST_NOD_CD)
                                             ||DECODE(N2ND_NOD_CD,NULL,' ', ' -> '||N2ND_NOD_CD)
                                             ||DECODE(N3RD_NOD_CD,NULL,' ', ' -> '||N3RD_NOD_CD)
                                             ||DECODE(N4TH_NOD_CD,NULL,' ', ' -> '||N4TH_NOD_CD)) NOD_CD
                   FROM  COA_COM_COST_PARA
                  WHERE  PCTL_NO = @[f_pctl_no]
					AND  STND_COST_CD <> '51102001') A4   
          WHERE    A1.PCTL_NO = @[f_pctl_no]
                   AND A1.ESTM_USD_TTL_AMT <> 0  
                   AND A3.COA_COST_SRC_PRT_CD IN ('CO','PA')    		-- COA_COST_SRC_PRT_CD:R,P
                   AND A3.STND_COST_TP_CD IN ('C')
                   AND A1.STND_COST_CD = A3.STND_COST_CD 
                   AND A3.PA_VW = 'BKG'
                   AND A1.COST_ACT_GRP_SEQ = A4.COST_ACT_GRP_SEQ 
--                   AND A1.STND_COST_CD NOT IN ('51102001') MTY 추가해야 함				
          GROUP BY ROLLUP(A1.COST_ACT_GRP_SEQ, A3.SGRP_COST_CD,A3.STND_COST_CD)          
            HAVING GROUPING(A1.COST_ACT_GRP_SEQ)=1 OR A3.SGRP_COST_CD IS NOT NULL
          ORDER BY GROUPING(A1.COST_ACT_GRP_SEQ) DESC, A1.COST_ACT_GRP_SEQ, A3.SGRP_COST_CD, GROUPING(A3.STND_COST_CD) DESC , A3.STND_COST_CD
                   ) 
)			]]></sql>
			<params>
				<param name="f_pctl_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
