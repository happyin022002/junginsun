<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="Eur24ManifestDownloadDBDAOSearchENSMonitoringRSQL">
			<desc><![CDATA[Europe Advanced Manifest - ENS Monitoring 조회
* History]]></desc>
			<sql><![CDATA[
SELECT J.VVD ,J.LANE ,J.POFE ,J.RHQ ,J.BKG_OFC_CD ,J.POL
     , J.BL_TOT_CNT ,J.ENS_SNT_CNT ,J.ENS_SNT_ACC ,J.ENS_SNT_REJ ,J.ENS_SNT_NRCV ,J.ENS_SNT_DONLD ,J.ENS_UNSNT_CNT ,J.ENS_AMD_CNT ,J.ENS_AMT ,J.MCF_AMT
     , TO_CHAR(J.VPS_ETA_DT, 'YYYY-MM-DD HH24:MI:SS') AS VPS_ETA_DT
     , TO_CHAR(J.VPS_ETB_DT, 'YYYY-MM-DD HH24:MI:SS') AS VPS_ETB_DT
     , SUM(NVL(BL_TOT_CNT,0)) OVER() AS TOTAL_BL_CNT
     , SUM(NVL(ENS_SNT_CNT,0)) OVER() AS SENT_BL_CNT
     , SUM(NVL(ENS_SNT_ACC, 0)) OVER() AS ACC_BL_CNT
     , SUM(NVL(ENS_SNT_REJ, 0)) OVER() AS REJ_BL_CNT	
     , SUM(NVL(ENS_SNT_NRCV, 0)) OVER() AS NRCV_BL_CNT
	 , SUM(NVL(ENS_SNT_DONLD, 0)) OVER() AS DONLD_BL_CNT
     , SUM(NVL(ENS_UNSNT_CNT,0)) OVER() AS UNSENT_BL_CNT
     , SUM(NVL(ENS_AMD_CNT,0)) OVER() AS TOTAL_AMD_CNT
     , SUM(NVL(ENS_AMT,0)) OVER() AS TOTAL_ENS_AMT
     , SUM(NVL(MCF_AMT,0)) OVER() AS TOTAL_MCF_AMT
     , COUNT(DISTINCT VVD) OVER() AS TOTAL_VVD_CNT

FROM (

SELECT J1.VVD,J1.LANE,J1.POFE,J1.RHQ,J1.BKG_OFC_CD,J1.POL
     , COUNT(J1.VSL_CD) AS BL_TOT_CNT
     , COUNT(J1.MSG_SND_NO) AS ENS_SNT_CNT
     , COUNT(DECODE(J1.ACK_RCV_STS_CD,'A',ACK_RCV_STS_CD,'AL',1)) AS ENS_SNT_ACC
     , COUNT(DECODE(J1.ACK_RCV_STS_CD,'R',1)) AS ENS_SNT_REJ
     , COUNT(DECODE(J1.MSG_SND_NO,NULL,NULL,DECODE(J1.ACK_RCV_STS_CD,NULL,1))) AS ENS_SNT_NRCV
     , COUNT(DECODE(J1.EUR_CSTMS_ACK_CD,'351',1)) AS ENS_SNT_DONLD
     , COUNT(J1.VSL_CD)-COUNT(J1.MSG_SND_NO) AS ENS_UNSNT_CNT
     , COUNT(DECODE(SUBSTR(J1.MSG_SND_NO,18,3),'313',J1.MSG_SND_NO,NULL)) AS ENS_AMD_CNT
     , SUM(ROUND(J1.ENS_AMT,2)) AS ENS_AMT
     , SUM(ROUND(J1.MCF_AMT,2)) AS MCF_AMT
     , J1.VPS_ETA_DT
     , J1.VPS_ETB_DT

FROM ( SELECT BKG.VSL_CD || BKG.SKD_VOY_NO || BKG.SKD_DIR_CD AS VVD
            , (SELECT VSL_SLAN_CD FROM VSK_VSL_SKD WHERE VSL_CD = BKG.VSL_CD AND SKD_VOY_NO = BKG.SKD_VOY_NO AND SKD_DIR_CD = BKG.SKD_DIR_CD) AS LANE
            --,DECODE(BKG.CSTMS_YD_CD, BKG.YD_CD , BKG.YD_CD, NULL , BKG.YD_CD , BKG.CSTMS_YD_CD ||'('|| BKG.YD_CD ||')') AS POFE
            , DECODE(ENS.CSTMS_YD_CD, BKG.YD_CD , BKG.YD_CD, NULL , BKG.YD_CD , ENS.CSTMS_YD_CD ||'('|| BKG.YD_CD ||')') AS POFE
            , BKG.RHQ AS RHQ
            , BKG.BKG_OFC_CD AS BKG_OFC_CD
            , BKG.POL AS POL
            , BKG.VSL_CD
            , ENS.MSG_SND_NO
            , ENS.ACK_RCV_STS_CD
            , ENS.EUR_CSTMS_ACK_CD
            , DECODE(BKG.VL_RNK,1,BKG.ENS_AMT,0) ENS_AMT
            , DECODE(BKG.VL_RNK,1,BKG.MCF_AMT,0) MCF_AMT
            , BKG.VPS_ETA_DT
            , BKG.VPS_ETB_DT
         FROM ( SELECT VVD.VSL_CD
                     , VVD.SKD_VOY_NO
                     , VVD.SKD_DIR_CD 
                     , VL.YD_CD
                     , (SELECT CSTMS_YD_CD 
                          FROM BKG_CSTMS_EUR_BL 
                         WHERE VSL_CD = VVD.VSL_CD
                           AND SKD_VOY_NO = VVD.SKD_VOY_NO
                           AND SKD_DIR_CD = VVD.SKD_DIR_CD
                           AND CSTMS_PORT_CD = SKD2.VPS_PORT_CD
                           AND BL_NO = BKG.BL_NO
                       ) AS CSTMS_YD_CD
                     , SKD2.VPS_PORT_CD AS POFE
                     , SKD2.YD_CD AS POFE_YD 
                     , BKG.BL_NO
                     , VVD.POL_CD AS POL 
                     
                     #if (${p_rhq_gb} == 'BO')
                     , BKG.BKG_OFC_CD
                     #elseif (${p_rhq_gb} == 'PO')
                     , MDM_LOC.EQ_CTRL_OFC_CD AS BKG_OFC_CD
                     #end
                     , OLA.REGION AS RHQ
                     , SUM(NVL(DECODE(BCR_ENS.CURR_CD,'USD',BCR_ENS.CHG_AMT,(BCR_ENS.CHG_AMT)/(SELECT XCH_RT.USD_LOCL_XCH_RT FROM GL_MON_XCH_RT XCH_RT WHERE XCH_RT.ACCT_XCH_RT_YRMON IN TO_CHAR(VL.VPS_ETB_DT,'YYYYMM') AND XCH_RT.CURR_CD = BCR_ENS.CURR_CD AND XCH_RT.ACCT_XCH_RT_LVL = 1)),0)) AS ENS_AMT
                     , SUM(NVL(DECODE(BCR_MCF.CURR_CD,'USD',BCR_MCF.CHG_AMT,(BCR_MCF.CHG_AMT)/(SELECT XCH_RT.USD_LOCL_XCH_RT FROM GL_MON_XCH_RT XCH_RT WHERE XCH_RT.ACCT_XCH_RT_YRMON IN TO_CHAR(VL.VPS_ETB_DT,'YYYYMM') AND XCH_RT.CURR_CD = BCR_MCF.CURR_CD AND XCH_RT.ACCT_XCH_RT_LVL = 1)),0)) AS MCF_AMT
                     , MAX(VL.RN) RN
                     , RANK() OVER (PARTITION BY BL_NO ORDER BY VL.VSL_CD,VL.SKD_VOY_NO, VL.SKD_dIR_CD, VL.CLPT_SEQ, VL.CLPT_SEQ) VL_RNK
                     , SKD2.VPS_ETA_DT
                     , SKD4.VPS_ETB_DT
                 FROM BKG_VVD VVD
                    , BKG_BOOKING BKG
                    --, BKG_OFC_LVL_V OLA
                    , BKG_CHG_RT BCR_ENS
                    , BKG_CHG_RT BCR_MCF
                    , VSK_VSL_PORT_SKD SKD2
                    , VSK_VSL_PORT_SKD SKD3
                    , VSK_VSL_PORT_SKD SKD4
                    , MDM_VSL_CNTR MDM_VSL
                    , MDM_LOCATION MDM_LOC
                    , ( SELECT OFC_N2ND_LVL_CD REGION , OFC_N8TH_LVL_CD OFC_CD
                          FROM ( SELECT OFC_KIND OFC_KND_CD , A.DEL , A.OFC_CD OFC_N8TH_LVL_CD , L1 OFC_LVL , DECODE(A.L1, 1, A.OFC_CD, 2, A.OFC_CD, 3, A.OFC_CD, 4, A.OFC_CD, 5, A.OFC_CD, 6, A.OFC_CD, 7, A.OFC_CD, 8, B.OFC_CD) OFC_N7TH_LVL_CD , DECODE(A.L1, 1, A.OFC_CD, 2, A.OFC_CD, 3, A.OFC_CD, 4, A.OFC_CD, 5, A.OFC_CD, 6, A.OFC_CD, 7, B.OFC_CD, 8, C.OFC_CD) OFC_N6TH_LVL_CD , DECODE(A.L1, 1, A.OFC_CD, 2, A.OFC_CD, 3, A.OFC_CD, 4, A.OFC_CD, 5, A.OFC_CD, 6, B.OFC_CD, 7, C.OFC_CD, 8, D.OFC_CD) OFC_N5TH_LVL_CD , DECODE(A.L1, 1, A.OFC_CD, 2, A.OFC_CD, 3, A.OFC_CD, 4, A.OFC_CD, 5, B.OFC_CD, 6, C.OFC_CD, 7, D.OFC_CD, 8, E.OFC_CD) OFC_N4TH_LVL_CD , DECODE(A.L1, 1, A.OFC_CD, 2, A.OFC_CD, 3, A.OFC_CD, 4, B.OFC_CD, 5, C.OFC_CD, 6, D.OFC_CD, 7, E.OFC_CD, 8, F.OFC_CD) OFC_N3RD_LVL_CD , DECODE(A.L1, 1, A.OFC_CD, 2, A.OFC_CD, 3, B.OFC_CD, 4, C.OFC_CD, 5, D.OFC_CD, 6, E.OFC_CD, 7, F.OFC_CD, 8, G.OFC_CD) OFC_N2ND_LVL_CD , DECODE(A.L1, 1, A.OFC_CD, 2, B.OFC_CD, 3, C.OFC_CD, 4, D.OFC_CD, 5, E.OFC_CD, 6, F.OFC_CD, 7, G.OFC_CD, 8, H.OFC_CD) OFC_N1ST_LVL_CD
                                   FROM ( SELECT OFC_CD , LOC_CD , PRNT_OFC_CD , DELT_FLG DEL , A.OFC_KND_CD OFC_KIND , LEVEL L1
                                           	FROM MDM_ORGANIZATION A START WITH A.OFC_CD = COM_ConstantMgr_PKG.COM_getHeadOfficeCode_FNC() CONNECT BY PRIOR A.OFC_CD = A.PRNT_OFC_CD ) A , MDM_ORGANIZATION B , MDM_ORGANIZATION C , MDM_ORGANIZATION D , MDM_ORGANIZATION E , MDM_ORGANIZATION F , MDM_ORGANIZATION G , MDM_ORGANIZATION H
                                           WHERE A.PRNT_OFC_CD = B.OFC_CD(+)
                                             AND B.PRNT_OFC_CD = C.OFC_CD(+)
                                             AND C.PRNT_OFC_CD = D.OFC_CD(+)
                                             AND D.PRNT_OFC_CD = E.OFC_CD(+)
                                             AND E.PRNT_OFC_CD = F.OFC_CD(+)
                                             AND F.PRNT_OFC_CD = G.OFC_CD(+)
                                             AND G.PRNT_OFC_CD = H.OFC_CD(+) 
                                        )
                      ) OLA
                    , ( SELECT B.*
                             , ROW_NUMBER() OVER (PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD
                               ORDER BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.CLPT_SEQ ) RN
                          FROM ( SELECT A.VSL_CD
                                      , A.SKD_VOY_NO
                                      , A.SKD_DIR_CD
                                      , A.VPS_ETB_DT
                                      , SLAN_CD
                                      , YD_CD
                                      , A.VPS_PORT_CD AS EU_1ST_PORT
                                      , CLPT_SEQ
                                      , CLPT_IND_SEQ
                                      , CASE WHEN LAG( EU ) OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD
                                                  ORDER BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.CLPT_SEQ ) IS NULL
                                                  AND EU IS NOT NULL
                                                  AND CLPT_SEQ >1 
                                             THEN 'EU1ST'
                                        END EU_Flag
                                   FROM ( SELECT A.VSL_CD
                                               , A.SKD_VOY_NO
                                               , A.SKD_DIR_CD
                                               , A.VPS_ETB_DT
                                               , SLAN_CD
                                               , A.VPS_PORT_CD
                                               , A.YD_CD AS EU_1ST_PORT_YD_CD
                                               , A.YD_CD
                                               , A.CLPT_SEQ
                                               , CLPT_IND_SEQ
                                               , B.ATTR_CTNT1 EU
                                            FROM VSK_VSL_PORT_SKD A, BKG_CSTMS_CD_CONV_CTNT B
                                           WHERE 1=1
                                             AND ( VSL_CD, SKD_VOY_NO, SKD_DIR_CD) 
                                                   IN ( SELECT VSL_CD, SKD_VOY_NO, SKD_DIR_CD
                                                          FROM VSK_VSL_PORT_SKD
                                                         WHERE NVL(SKD_CNG_STS_CD, 'X') <> 'S'
                                                       
                                                           #if (${p_vvd} != '') 
                                                                AND VSL_CD = SUBSTR(@[p_vvd], 1, 4)
                                                                AND SKD_VOY_NO = SUBSTR(@[p_vvd], 5, 4)
                                                                AND SKD_DIR_CD = SUBSTR(@[p_vvd], 9, 1)
                                                           #end
                                                         
                                                           #if (${p_date_gb} == 'A')
                                                                #if (${p_from_dt} != '')
                                                                    AND VPS_ETA_DT >= TO_DATE(REPLACE(@[p_from_dt],'-','')||' ' ||NVL(@[p_from_mt],'00:00') ,'YYYYMMDD HH24:MI') - 50
                                                                #end
                                                                #if (${p_to_dt} != '')
                                                                    AND VPS_ETA_DT <= TO_DATE(REPLACE(@[p_to_dt],'-','')||' ' ||NVL(@[p_to_mt],'59:59'),'YYYYMMDD HH24:MI') + 50
                                                                #end
                                                           #elseif (${p_date_gb} == 'B')
                                                                #if (${p_from_dt} != '') 
                                                                    AND VPS_ETB_DT >= TO_DATE(REPLACE(@[p_from_dt],'-','')||' ' ||NVL(@[p_from_mt],'00:00') ,'YYYYMMDD HH24:MI') - 50
                                                                #end
                                                                #if (${p_to_dt} != '') 
                                                                    AND VPS_ETB_DT <= TO_DATE(REPLACE(@[p_to_dt],'-','')||' ' ||NVL(@[p_to_mt],'59:59'),'YYYYMMDD HH24:MI') + 50
                                                                #end
                                                           #end
                                                      GROUP BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD )
                                             AND NVL(SKD_CNG_STS_CD, 'X') <> 'S'
                                             AND B.CSTMS_DIV_ID(+)='EU_MEMBER_CNT'
                                             AND B.CNT_CD(+) = 'EU'
                                             AND SUBSTR(A.VPS_PORT_CD, 1, 2) = B.ATTR_CTNT1(+) ) A ) B
                         WHERE EU_FLAG IS NOT NULL ) VL
                WHERE 1=1
                  AND VVD.BKG_NO = BKG.BKG_NO
                  AND BKG.BKG_STS_CD IN ('F','W')
                  AND BKG.BKG_CGO_TP_CD IN ('F','R')
                  AND BKG.BL_NO IS NOT NULL
                  AND VVD.VSL_CD = VL.VSL_CD
                  AND VVD.SKD_VOY_NO= VL.SKD_VOY_NO
                  AND VVD.SKD_dIR_CD= VL.SKD_DIR_CD
                  AND VVD.VSL_CD = SKD2.VSL_CD
                  AND VVD.SKD_VOY_NO = SKD2.SKD_VOY_NO
                  AND VVD.SKD_DIR_CD = SKD2.SKD_DIR_CD
                  
                  #if (${p_pofe} != '') 
                    AND SKD2.YD_CD LIKE @[p_pofe]||'%'
                  #end
                  
                  #if (${p_date_gb} == 'A')
                    #if (${p_from_dt} != '')
                        AND SKD2.VPS_ETA_DT >= TO_DATE(REPLACE(@[p_from_dt],'-','')||' ' ||NVL(@[p_from_mt],'00:00') ,'YYYYMMDD HH24:MI')
                    #end
                    #if (${p_to_dt} != '')
                       	AND SKD2.VPS_ETA_DT <= TO_DATE(REPLACE(@[p_to_dt],'-','')||' ' ||NVL(@[p_to_mt],'59:59'),'YYYYMMDD HH24:MI')
                    #end
                  #elseif (${p_date_gb} == 'B')
                  	#if (${p_from_dt} != '') 
                        AND SKD4.VPS_ETB_DT >= TO_DATE(REPLACE(@[p_from_dt],'-','')||' ' ||NVL(@[p_from_mt],'00:00') ,'YYYYMMDD HH24:MI')
                    #end
                    #if (${p_to_dt} != '') 
                        AND SKD4.VPS_ETB_DT <= TO_DATE(REPLACE(@[p_to_dt],'-','')||' ' ||NVL(@[p_to_mt],'59:59'),'YYYYMMDD HH24:MI')
                    #end
                  #end
                  
                  AND SKD2.VPS_PORT_CD = VL.EU_1ST_PORT
                  AND SKD2.CLPT_IND_SEQ = VL.CLPT_IND_SEQ
                  
                  #if (${p_pol} != '')
                    AND VVD.POL_CD = @[p_pol]
                  #end
                  
                  #if (${p_pol_yd} != '')
                    AND SUBSTR(VVD.POL_YD_CD,6) = @[p_pol_yd]
                  #end
                  
                  AND VVD.VSL_CD = SKD3.VSL_CD
                  AND VVD.SKD_VOY_NO = SKD3.SKD_VOY_NO
                  AND VVD.SKD_DIR_CD = SKD3.SKD_DIR_CD
                  AND VVD.POD_CD = SKD3.VPS_PORT_CD
                  AND SKD2.CLPT_SEQ <= SKD3.CLPT_SEQ -- 1st EU Port 이후에 POD 기항해야함.
                  AND VVD.POD_CLPT_IND_SEQ = SKD3.CLPT_IND_SEQ
                  
                  -- SKD4 : POL SKD  
                  AND VVD.VSL_CD = SKD4.VSL_CD
                  AND VVD.SKD_VOY_NO = SKD4.SKD_VOY_NO
                  AND VVD.SKD_DIR_CD = SKD4.SKD_DIR_CD
                  AND VVD.POL_CD = SKD4.VPS_PORT_CD
                  AND SKD4.CLPT_SEQ < SKD2.CLPT_SEQ  -- POFE 가 POL 이상이어야함. 같으면 대상아님.
                  AND SKD2.CLPT_SEQ <= SKD3.CLPT_SEQ -- POD 가 POFE 까지는 가야한다.
                  AND VVD.POL_CLPT_IND_SEQ = SKD4.CLPT_IND_SEQ
                  AND VVD.BKG_NO > ' '
                  AND VVD.SLAN_CD> ' '
                  AND VVD.VSL_CD = MDM_VSL.VSL_CD
                  AND VVD.POL_CD = MDM_LOC.LOC_CD
                  
                  #if(${p_fdr_yn} == '')
                    AND MDM_VSL.FDR_DIV_CD = 'T'
                    AND MDM_VSL.VSL_CD <> 'BFCA'
                  #end
                  
                  #if (${p_rhq_gb} == 'BO')
                    AND BKG.BKG_OFC_CD = OLA.OFC_CD
                    #if (${p_b_ofc_cd} != '') 
                        AND BKG.BKG_OFC_CD = @[p_b_ofc_cd]
                    #end
                  #elseif (${p_rhq_gb} == 'PO')
                    AND MDM_LOC.EQ_CTRL_OFC_CD = OLA.OFC_CD
                    #if (${p_b_ofc_cd} != '') 
                        AND MDM_LOC.EQ_CTRL_OFC_CD = @[p_b_ofc_cd]
                    #end
                  #end
                  
                  AND BKG.BKG_NO = BCR_ENS.BKG_NO(+)
                  AND BKG.BKG_NO = BCR_MCF.BKG_NO(+)
                  AND BCR_ENS.CHG_CD(+) = 'ESD'
                  AND BCR_ENS.FRT_INCL_XCLD_DIV_CD(+) = 'N'
                  AND BCR_MCF.CHG_CD(+) = 'AMA'
                  AND BCR_MCF.FRT_INCL_XCLD_DIV_CD(+) = 'N'
                  
             GROUP BY VVD.VSL_CD ,VVD.SKD_VOY_NO ,VVD.SKD_DIR_CD
                    , VL.YD_CD
                    , SKD2.VPS_PORT_CD ,SKD2.YD_CD
                    , BKG.BL_NO 
                    , VVD.POL_CD 
                    , BKG.BKG_OFC_CD 
                    , MDM_LOC.EQ_CTRL_OFC_CD 
                    , OLA.REGION
                    , VL.VSL_CD ,VL.SKD_VOY_NO ,VL.SKD_DIR_CD ,VL.CLPT_SEQ ,VL.CLPT_SEQ
                    , SKD2.VPS_ETA_DT ,SKD4.VPS_ETB_DT
              ) BKG
              
            , ( SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_dIR_CD,  A.BL_NO, A.CSTMS_YD_CD, B.CLPT_SEQ, A.MSG_SND_NO
                     , (SELECT EUR_RCVA.ACK_RCV_STS_CD 
                          FROM BKG_CSTMS_ADV_EUR_RCV EUR_RCVA
                         WHERE EUR_RCVA.RCV_TMS = ( SELECT MAX(RCV_TMS)
                                                      FROM BKG_CSTMS_ADV_EUR_RCV EUR_RCVB
                                                     WHERE EUR_RCVB.MSG_RCV_NO = A.MSG_SND_NO
                                                       AND (EUR_RCVB.ACK_KND_ID != 'S' OR EUR_RCVB.ACK_RCV_STS_CD != 'A' ))) ACK_RCV_STS_CD 
	                 , (SELECT EUR_RCVA.EUR_CSTMS_ACK_CD
                          FROM BKG_CSTMS_ADV_EUR_RCV EUR_RCVA
                         WHERE EUR_RCVA.RCV_TMS = ( SELECT MAX(RCV_TMS)
                                                      FROM BKG_CSTMS_ADV_EUR_RCV EUR_RCVB
                                                     WHERE EUR_RCVB.MSG_RCV_NO = A.MSG_SND_NO
                                                       AND (EUR_RCVB.ACK_KND_ID != 'S' OR EUR_RCVB.ACK_RCV_STS_CD != 'A' ))) EUR_CSTMS_ACK_CD 
                     , ROW_NUMBER() OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.BL_NO
                       ORDER BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, B.CLPT_SEQ ) RN
                 
                  FROM BKG_CSTMS_EUR_BL A, VSK_VSL_PORT_SKD B
                 WHERE 1=1
                   AND A.VSL_CD= B.VSL_CD  
                   AND A.SKD_VOY_NO = B.SKD_VOY_NO  
                   AND A.SKD_DIR_CD = B.SKD_DIR_CD
                   AND A.CSTMS_PORT_cD = B.VPS_PORT_CD 
                   
                   #if (${p_vvd} != '') 
                        AND A.VSL_CD = SUBSTR(@[p_vvd], 1, 4)
                        AND A.SKD_VOY_NO = SUBSTR(@[p_vvd], 5, 4)
                        AND A.SKD_DIR_CD = SUBSTR(@[p_vvd], 9, 1)
                   #end
                   
                   #if (${p_date_gb} == 'A')
                        #if (${p_from_dt} != '')
                            AND B.VPS_ETA_DT >= TO_DATE(REPLACE(@[p_from_dt],'-','')||' ' ||NVL(@[p_from_mt],'00:00') ,'YYYYMMDD HH24:MI') - 50
                        #end
                        #if (${p_to_dt} != '')
                            AND B.VPS_ETA_DT <= TO_DATE(REPLACE(@[p_to_dt],'-','')||' ' ||NVL(@[p_to_mt],'59:59'),'YYYYMMDD HH24:MI') + 50
                        #end
                   #elseif (${p_date_gb} == 'B')
                        #if (${p_from_dt} != '') 
                            AND B.VPS_ETB_DT >= TO_DATE(REPLACE(@[p_from_dt],'-','')||' ' ||NVL(@[p_from_mt],'00:00') ,'YYYYMMDD HH24:MI') - 50
                        #end
                        #if (${p_to_dt} != '') 
                            AND B.VPS_ETB_DT <= TO_DATE(REPLACE(@[p_to_dt],'-','')||' ' ||NVL(@[p_to_mt],'59:59'),'YYYYMMDD HH24:MI') + 50
                        #end
                   #end
              ) ENS
        WHERE 1=1
          AND BKG.VSL_CD= ENS.VSL_CD(+)
          AND BKG.SKD_VOY_NO = ENS.SKD_VOY_NO(+)
          AND BKG.SKD_DIR_CD = ENS.SKD_DIR_CD(+)
          AND BKG.BL_NO = ENS.BL_NO(+)
          AND BKG.VL_RNK =  ENS.RN(+)  
    ) J1

    #if (${rhq} != '')
        HAVING J1.RHQ = @[rhq]
    #end
    
    GROUP BY J1.VVD
           , J1.LANE
           , J1.POFE
           , J1.RHQ
           , J1.BKG_OFC_CD
           , J1.POL
           , J1.VPS_ETA_DT 
           , J1.VPS_ETB_DT
) J

WHERE 1=1
  
  #if(${p_fdr_yn} == '')
    AND LANE NOT IN ( 'GSE', 'BLS')
  #end
  
  #if(${cond_lane} != '')
    AND LANE = @[cond_lane]
  #end

ORDER BY VVD
       , LANE
       , POFE
       , RHQ
       , BKG_OFC_CD
       , POL
       , BL_TOT_CNT
       , VPS_ETA_DT 
       , VPS_ETB_DT			]]></sql>
			<params>
				<param name="p_vvd" type="12" value="" out="N"/>
				<param name="p_from_dt" type="12" value="" out="N"/>
				<param name="p_from_mt" type="12" value="" out="N"/>
				<param name="p_to_dt" type="12" value="" out="N"/>
				<param name="p_to_mt" type="12" value="" out="N"/>
				<param name="p_pofe" type="12" value="" out="N"/>
				<param name="p_pol" type="12" value="" out="N"/>
				<param name="p_pol_yd" type="12" value="" out="N"/>
				<param name="p_b_ofc_cd" type="12" value="" out="N"/>
				<param name="rhq" type="12" value="" out="N"/>
				<param name="cond_lane" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
