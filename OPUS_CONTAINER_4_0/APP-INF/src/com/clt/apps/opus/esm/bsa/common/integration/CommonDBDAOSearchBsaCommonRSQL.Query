<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CommonDBDAOSearchBsaCommonRSQL">
			<desc><![CDATA[Common 공동 메소드 쿼리 모음]]></desc>
			<sql><![CDATA[
#if (${methodname} == 'searchDatePeriod')
	/*검색 조건에 맞는 DatePriod을 가져온다. - 입력파라메터의 경우의 수 1. Year, Month 2. Year, Week 3. Year, Month, Week : Week가 우선권을 가진다. 
    														 4. Year, FromMonth, ToMonth 5. Year, FromWeek, ToWeek 6. Year, FromMonth, ToMonth, FromWeek, ToWeek*/
    #if(${gubun}=='1')
    
    /*searchDatePeriod : YEAR, MONTH, WEEK인경우*/
    	SELECT TO_CHAR(TO_DATE(DECODE(FM_CHK,'Y',SLS_FM_DT, @[year]||@[month]||'01'),'YYYYMMDD'),'YYYY-MM-DD') || ' ~ '|| 
      	   					   DECODE(TO_CHK,'Y',TO_CHAR(TO_DATE(SLS_TO_DT,'YYYYMMDD'),'YYYY-MM-DD')
    		  ,TO_CHAR(LAST_DAY(TO_DATE(SLS_FM_DT,'YYYYMMDD')),'YYYY-MM-DD')) RTN_DATE
    	  FROM ( 
    			SELECT SLS_FM_DT,SLS_TO_DT 
      	   			  ,DECODE(SUBSTR(SLS_FM_DT,1,6), @[year]||@[month],'Y','N') FM_CHK 
         	   			  ,DECODE(SUBSTR(SLS_TO_DT,1,6), @[year]||@[month],'Y','N') TO_CHK 
      			  FROM  COA_WK_PRD 
    		     WHERE COST_YR = @[year] 
    				   AND COST_WK = @[week] 
        	) 
    #elseif(${gubun}=='2')
    
    /*log.info('searchDatePeriod : YEAR, MONTH인경우')*/
    	SELECT TO_CHAR(TO_DATE(@[year]||@[month],'YYYYMM'),'YYYY-MM-DD') || ' ~ ' || 
         	   	   TO_CHAR(LAST_DAY(TO_DATE(@[year]||@[month],'YYYYMM')),'YYYY-MM-DD') RTN_DATE
     	  FROM DUAL 
    
    
    #elseif(${gubun}=='3')			
    
    /*log.info('searchDatePeriod : YEAR, WEEK인경우')*/
    	SELECT TO_CHAR(TO_DATE(SLS_FM_DT, 'YYYYMMDD'),'YYYY-MM-DD') || ' ~ '|| 
         	       TO_CHAR(TO_DATE(SLS_TO_DT, 'YYYYMMDD'),'YYYY-MM-DD') RTN_DATE 
     	  FROM  COA_WK_PRD 
         WHERE COST_YR = @[year] 
    	       AND COST_WK = @[week]
    
    #elseif(${gubun}=='4')	
    
    /*log.info('searchDatePeriod : year,from month,to_month,from_week,to_week인경우')*/
    	SELECT TO_CHAR(TO_DATE(DECODE(SIGN(TO_NUMBER(MN_FM_DT) - TO_NUMBER(WK_TO_DT)),  1, '' 
                                ,DECODE(SIGN(TO_NUMBER(MN_TO_DT) - TO_NUMBER(WK_FM_DT)),  -1, '' 
                                ,DECODE(SIGN(TO_NUMBER(MN_FM_DT)-TO_NUMBER(WK_FM_DT)), 1, MN_FM_DT, WK_FM_DT) )), 'YYYYMMDD'),'YYYY-MM-DD')  || '~' || 
        		   TO_CHAR(TO_DATE(DECODE(SIGN(TO_NUMBER(MN_TO_DT) - TO_NUMBER(WK_FM_DT)), -1, '', 
                                 DECODE(SIGN(TO_NUMBER(MN_FM_DT) - TO_NUMBER(WK_TO_DT)),  1, '', 
                                 DECODE(SIGN(TO_NUMBER(MN_TO_DT)-TO_NUMBER(WK_TO_DT)), -1, MN_TO_DT, WK_TO_DT) )), 'YYYYMMDD'),'YYYY-MM-DD') RTN_DATE  
    	 FROM ( 
       		   SELECT MAX(WK_FM_DT) WK_FM_DT
    				 ,MAX(WK_TO_DT) WK_TO_DT
    				 ,MAX(MN_FM_DT) MN_FM_DT
    				 ,MAX(MN_TO_DT) MN_TO_DT 
       			 FROM ( 
            			   SELECT MIN(SLS_FM_DT) WK_FM_DT
    						 ,MAX(SLS_TO_DT) WK_TO_DT
    						 ,'' MN_FM_DT
    						 ,'' MN_TO_DT 
            FROM  COA_WK_PRD 
            WHERE COST_YR = @[year] 
              AND COST_WK BETWEEN @[frmweek] AND @[toweek] 
            UNION ALL 
            SELECT '','',TO_CHAR(TO_DATE(@[year]||@[frmmonth],'YYYYMM'),'YYYYMMDD'), 
                    TO_CHAR(LAST_DAY(TO_DATE(@[year]||@[tomonth],'YYYYMM')),'YYYYMMDD') 
             FROM DUAL 
        ) 
    ) 
    
    #elseif(${gubun}=='5')
    
    /*log.debug('searchDatePeriod : year,from month,to month인경우')*/
    SELECT TO_CHAR(TO_DATE(@[year]||@[frmmonth],'YYYYMM'),'YYYY-MM-DD') || ' ~ ' ||        
         	   TO_CHAR(LAST_DAY(TO_DATE(@[year]||@[tomonth],'YYYYMM')),'YYYY-MM-DD') RTN_DATE 
      FROM DUAL                                                           
    
    #elseif(${gubun}=='6')
    
    /*log.debug('searchDatePeriod : year,from week,to week인경우')*/
    SELECT MIN(TO_CHAR(TO_DATE(SLS_FM_DT, 'YYYYMMDD'),'YYYY-MM-DD')) ||' ~ ' || 
         	   MAX(TO_CHAR(TO_DATE(SLS_TO_DT, 'YYYYMMDD'),'YYYY-MM-DD')) RTN_DATE 
      FROM COA_WK_PRD 
     WHERE COST_YR = @[year] 
    	   AND COST_WK BETWEEN @[frmweek] AND @[toweek] 
    #end

#elseif (${methodname} == 'searchPreWeek')

/*현재주보다 작은 주를 반환한다*/

	SELECT MAX(COST_YR || COST_WK)
  	  FROM COA_WK_PRD 
 	 WHERE COST_YR || COST_WK < @[year]||@[week]

#elseif (${methodname} == 'searchFirstEtd')

/*VVD에 해당하는 etd date를 리턴한다*/
/*20160127.MOD : VPS_ETD_DT -> PF_ETD_DT */

	SELECT TO_CHAR(MIN(PF_ETD_DT),'YYYYMMDD') ETD_DT
	  FROM VSK_VSL_PORT_SKD 
	 WHERE VSL_CD      = @[vsl_cd] 
  	   AND SKD_VOY_NO  = @[skd_voy_no] 
  	   AND SKD_DIR_CD  = @[skd_dir_cd]
       AND PF_ETD_DT   IS NOT NULL				--20160127.ADD
  	   /*AND NVL(CNG_STS_CD,'*') <> 'S'*/ 

#elseif (${methodname} == 'searchPrevWkPrd')

/*전주를 구한다*/

	SELECT  COST_YR, COST_WK 
  	  FROM  COA_WK_PRD 
 	 WHERE  1=1 
   	   AND  (TO_CHAR(SYSDATE-7, 'YYYYMMDD') 
   BETWEEN  SLS_FM_DT AND SLS_TO_DT)

#elseif (${methodname} == 'checkLocationCode')

/*Location Code 유무를 확인*/
	SELECT 'Y' 
	  FROM DUAL 
	 WHERE EXISTS ( 
      			   SELECT '1' 
      			     FROM MDM_LOCATION 
      			    WHERE LOC_CD = @[loccd]  
				   )
#end			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="month" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="frmweek" type="12" value="" out="N"/>
				<param name="toweek" type="12" value="" out="N"/>
				<param name="frmmonth" type="12" value="" out="N"/>
				<param name="tomonth" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="loccd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
