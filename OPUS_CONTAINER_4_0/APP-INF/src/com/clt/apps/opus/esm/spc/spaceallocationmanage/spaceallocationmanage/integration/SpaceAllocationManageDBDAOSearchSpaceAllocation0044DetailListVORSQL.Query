<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpaceAllocationManageDBDAOSearchSpaceAllocation0044DetailListVORSQL">
			<desc><![CDATA[

2015.07.22. SKY[CLT-000042051-10] Virtual add call - VT_ADD_CALL_FLG IS  NULL  로직 추가
2016.03.31 BKG 데이터 가져올때 YD_CD 로 메핑 
2016.05.12 SPC_GET_HC_RT_BSA_FNC : SKD_VOY_NO parm 추가 
2016.07.12 SPC_BKG_V 제거
2016.07.19 #15529 AOC- JPN Issue cannot create BKG for T2 + Refeer]]></desc>
			<sql><![CDATA[
WITH BASE_KEY AS (
    SELECT @[year]       AS YEAR      ,
           @[week]       AS WEEK      ,
           @[office]     AS OFC_CD    ,
           @[trade]      AS TRD_CD    ,
           @[lane]       AS RLANE_CD  ,
           @[bound]      AS DIR_CD    ,
           @[vsl_cd]     AS VSL_CD    ,
           @[skd_voy_no] AS SKD_VOY_NO,
           @[skd_dir_cd] AS SKD_DIR_CD
      FROM DUAL
)
, BASE AS (
    SELECT B.YEAR,
           B.WEEK,
           SUBSTR(T.SLS_YRMON, 1, 4) AS COST_YR,
           SUBSTR(T.SLS_YRMON, 5)    AS MON    ,
           T.COST_WK   ,
           B.OFC_CD    ,
           SAQ_GET_REP_TRD_FNC(B.RLANE_CD) AS REP_TRD_CD,
           T.TRD_CD    ,
           B.RLANE_CD  ,
           B.DIR_CD    ,
           B.VSL_CD    ,
           B.SKD_VOY_NO,
           B.SKD_DIR_CD,
           'Y' AS EDIT ,
           NVL((O.CTRL_LVL_CD)     , 'L') AS POL_POD,
           NVL((O.CTRL_40FT_HC_FLG), 'N') AS HC40   ,
           NVL((O.CTRL_45FT_HC_FLG), 'N') AS HC45   ,
           NVL((O.CTRL_53FT_FLG)   , 'N') AS HC53   ,
           NVL((O.CTRL_RF_FLG)     , 'N') AS REEFER ,
           NVL((O.CTRL_WGT_FLG)    , 'N') AS WEIGHT ,
           NVL((O.CTRL_SPC_FLG)    , 'N') AS VOLUME
      FROM COA_MON_VVD       T,
           BASE_KEY          B,
           SPC_ALOC_CTRL_OPT O
     WHERE T.RLANE_CD      = B.RLANE_CD
       AND T.VSL_CD        = B.VSL_CD
       AND T.SKD_VOY_NO    = B.SKD_VOY_NO
       AND T.DIR_CD        = B.DIR_CD
       AND O.RLANE_CD  (+) = B.RLANE_CD
       AND O.DIR_CD    (+) = B.DIR_CD
       AND O.VSL_CD    (+) = B.VSL_CD
       AND O.SKD_VOY_NO(+) = B.SKD_VOY_NO
       AND O.SKD_DIR_CD(+) = B.SKD_DIR_CD
       AND T.TRD_CD        = B.TRD_CD
       AND SUBSTR(T.SLS_YRMON, 1, 4)||T.COST_WK = B.YEAR||B.WEEK
)
, VSL_PORT_SKD AS (
    SELECT 
    
        REP_TRD_CD,
        TRD_CD    ,
        RLANE_CD  ,
        DIR_CD    ,
        OFC_CD    ,
        VSL_CD    ,
        SKD_VOY_NO,
        SKD_DIR_CD,
        COST_YR_WK,
        POL_CD    ,
        POD_CD    ,
        PL_CLPT_IND_SEQ,
        PD_CLPT_IND_SEQ,
        MAX_SEQ,
        MIN_SEQ,
        POL_CLPT_SEQ AS POL_SEQ,
        POD_CLPT_SEQ , 
        (CASE
               WHEN MAX(POL_CLPT_SEQ) < MAX(MIN_SEQ) THEN MAX(MIN_SEQ)
                                                       ELSE CASE
                                                             WHEN MAX(POL_CLPT_SEQ) > MAX(MIN_SEQ) THEN MAX(MAX_SEQ)
                                                        END
                END
          ) AS POD_SEQ,
        IOC_CD ,
        EDIT   ,
        POL_POD,
        HC40   ,
        HC45   ,
        HC53   ,
        REEFER ,
        WEIGHT ,
        VOLUME
   FROM   
    
        (
                SELECT REP_TRD_CD,
                       TRD_CD    ,
                       RLANE_CD  ,
                       DIR_CD    ,
                       OFC_CD    ,
                       VSL_CD    ,
                       SKD_VOY_NO,
                       SKD_DIR_CD,
                       COST_YR_WK,
                       POL_CD    ,
                       POD_CD    ,
                       DECODE(POD_CD,'0000000','0',PL_CLPT_IND_SEQ) AS PL_CLPT_IND_SEQ,
                       PD_CLPT_IND_SEQ AS PD_CLPT_IND_SEQ,
                       MAX(POL_SEQ) OVER (PARTITION BY POL_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS MAX_SEQ,
                       MIN(POD_SEQ) OVER (PARTITION BY POL_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS MIN_SEQ,
                       MAX(POL_SEQ) AS POL_CLPT_SEQ,
                       MIN(POD_SEQ) AS POD_CLPT_SEQ,
                       IOC_CD ,
                       EDIT   ,
                       POL_POD,
                       HC40   ,
                       HC45   ,
                       HC53   ,
                       REEFER ,
                       WEIGHT ,
                       VOLUME
                  FROM (
                         SELECT V.REP_TRD_CD,
                                V.TRD_CD    ,
                                V.RLANE_CD  ,
                                V.DIR_CD    ,
                                V.OFC_CD    ,
                                V.VSL_CD    ,
                                V.SKD_VOY_NO,
                                V.SKD_DIR_CD,
                                V.COST_YR||V.COST_WK          AS COST_YR_WK,
                                NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD    ,
                                NVL(S2.YD_CD, S2.VPS_PORT_CD) AS POD_CD    ,
                                S1.CLPT_IND_SEQ     AS PL_CLPT_IND_SEQ,
                                S2.CLPT_IND_SEQ     AS PD_CLPT_IND_SEQ,
                                S1.CLPT_SEQ AS POL_SEQ,
                                S2.CLPT_SEQ AS POD_SEQ,
                                DECODE(SUBSTR((SELECT DISTINCT IOC_CD FROM MDM_DTL_REV_LANE WHERE 1=1 AND TRD_CD = V.TRD_CD AND RLANE_CD = V.RLANE_CD AND VSL_SLAN_DIR_CD = V.DIR_CD ) , 0, 1), 'I','I','O') AS IOC_CD,
                                EDIT   ,
                                POL_POD,
                                HC40   ,
                                HC45   ,
                                HC53   ,
                                REEFER ,
                                WEIGHT ,
                                VOLUME 
                           FROM BASE             V ,
                                VSK_VSL_PORT_SKD S1,
                                VSK_VSL_PORT_SKD S2
                          WHERE S1.VSL_CD     = V.VSL_CD
                            AND S1.SKD_VOY_NO = V.SKD_VOY_NO
                            AND S1.SKD_DIR_CD = V.SKD_DIR_CD
                            AND S1.VSL_CD     = S2.VSL_CD
                            AND S1.SKD_VOY_NO = S2.SKD_VOY_NO
                            AND S1.SKD_DIR_CD = S2.SKD_DIR_CD
                            AND S1.CLPT_SEQ   < S2.CLPT_SEQ
                            AND S1.VT_ADD_CALL_FLG IS NULL
                            AND S2.VT_ADD_CALL_FLG IS NULL
                            AND NVL(S1.SKD_CNG_STS_CD,1) <> 'S'
                            AND NVL(S2.SKD_CNG_STS_CD,1) <> 'S'
                         UNION ALL
                         SELECT V.REP_TRD_CD,
                                V.TRD_CD    ,
                                V.RLANE_CD  ,
                                V.DIR_CD    ,
                                V.OFC_CD    ,
                                V.VSL_CD    ,
                                V.SKD_VOY_NO,
                                V.SKD_DIR_CD,
                                V.COST_YR||V.COST_WK          AS COST_YR_WK,
                                NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD    ,
                                '0000000'   AS POD_CD ,
                                S1.CLPT_IND_SEQ     AS PL_CLPT_IND_SEQ,
                                '0'                 AS PD_CLPT_IND_SEQ,
                                S1.CLPT_SEQ AS POL_SEQ,
                                0           AS POD_SEQ,
                                DECODE(SUBSTR((SELECT DISTINCT IOC_CD FROM MDM_DTL_REV_LANE WHERE 1=1 AND TRD_CD = V.TRD_CD AND RLANE_CD = V.RLANE_CD AND VSL_SLAN_DIR_CD = V.DIR_CD ) , 0, 1), 'I','I','O') AS IOC_CD,
                                --DECODE(SUBSTR(V.TRD_CD, 0, 1), 'I','I','O') AS IOC_CD,
                                EDIT   ,
                                POL_POD,
                                HC40   ,
                                HC45   ,
                                HC53   ,
                                REEFER ,
                                WEIGHT ,
                                VOLUME 
             
                           FROM BASE             V ,
                                VSK_VSL_PORT_SKD S1
                          WHERE S1.VSL_CD     = V.VSL_CD
                            AND S1.SKD_VOY_NO = V.SKD_VOY_NO
                            AND S1.SKD_DIR_CD = V.SKD_DIR_CD
                            AND S1.VT_ADD_CALL_FLG IS NULL
                            AND NVL(S1.SKD_CNG_STS_CD,1) <> 'S'
                            
                         UNION ALL
                         SELECT V.REP_TRD_CD,
                                V.TRD_CD    ,
                                V.RLANE_CD  ,
                                V.DIR_CD    ,
                                V.OFC_CD    ,
                                V.VSL_CD    ,
                                V.SKD_VOY_NO,
                                V.SKD_DIR_CD,
                                V.COST_YR||V.COST_WK AS COST_YR_WK,
                                '0000000' AS POL_CD,
                                '0000000' AS POD_CD,
                                '0'                AS PL_CLPT_IND_SEQ,
                                '0'                AS PD_CLPT_IND_SEQ,
                                0 AS POL_SEQ,
                                0 AS POD_SEQ,
                                DECODE(SUBSTR((SELECT DISTINCT IOC_CD FROM MDM_DTL_REV_LANE WHERE 1=1 AND TRD_CD = V.TRD_CD AND RLANE_CD = V.RLANE_CD AND VSL_SLAN_DIR_CD = V.DIR_CD ) , 0, 1), 'I','I','O') AS IOC_CD,
                                --DECODE(SUBSTR(V.TRD_CD, 0, 1), 'I','I','O') AS IOC_CD,
                                '' AS EDIT,
                                POL_POD   ,
                                HC40      ,
                                HC45      ,
                                HC53      ,
                                REEFER    ,
                                WEIGHT    ,
                                VOLUME
                           FROM BASE V
                       ) Z
              GROUP BY REP_TRD_CD,
                       TRD_CD    ,
                       RLANE_CD  ,
                       DIR_CD    ,
                       OFC_CD    ,
                       VSL_CD    ,
                       SKD_VOY_NO,
                       SKD_DIR_CD,
                       COST_YR_WK,
                       POL_CD    ,
                       POD_CD    ,
                       POL_SEQ   ,
                       POD_SEQ   ,
                       IOC_CD    ,
                       EDIT      ,
                       PL_CLPT_IND_SEQ,
                       PD_CLPT_IND_SEQ,
                       POL_POD   ,
                       HC40      ,
                       HC45      ,
                       HC53      ,
                       REEFER    ,
                       WEIGHT    ,
                       VOLUME   
                       
                 )
           WHERE 1=1
             AND POL_CD     <> POD_CD
             AND POD_CLPT_SEQ      > POL_CLPT_SEQ
             AND (POL_CLPT_SEQ =  MAX_SEQ  OR POD_CLPT_SEQ < MAX_SEQ )       
          GROUP BY REP_TRD_CD,
                   TRD_CD    ,
                   RLANE_CD  ,
                   DIR_CD    ,
                   OFC_CD    ,
                   VSL_CD    ,
                   SKD_VOY_NO,
                   SKD_DIR_CD,
                   COST_YR_WK,
                   POL_CD    ,
                   POD_CD    ,
                   MAX_SEQ   ,
                   MIN_SEQ   ,
                   POL_CLPT_SEQ,
                   POD_CLPT_SEQ,
                   IOC_CD    ,
                   EDIT      ,
                   PL_CLPT_IND_SEQ,
                   PD_CLPT_IND_SEQ,
                   POL_POD   ,
                   HC40      ,
                   HC45      ,
                   HC53      ,
                   REEFER    ,
                   WEIGHT    ,
                   VOLUME           
    )
  SELECT DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE((SELECT POL_POD FROM BASE), 'O', 1, 'L', 2, 'D', 3), 3), DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1), 1, 0) AS EDIT,
         REP_TRD_CD,
         TRD_CD    ,
         IOC_CD    ,
         NVL(OFC_CD, '+') AS OFC_CD,
         NVL(POL_CD, '+') AS POL_CD,
         NVL(POD_CD, '+') AS POD_CD,
         SUM(BKG_QUOTA)   AS BKG_QUOTA,
         (
           SELECT (BAR.BKG_REV - BAR.ESTM_CM_COST_AMT) / BAR.BKG_TTL_QTY
             FROM SPC_BKG_AVG_REV BAR,
                  BASE_KEY        P
            WHERE BAR.OFC_KND_CD  = DECODE(Z.OFC_CD, NULL, '3', '4')
              AND BAR.RLANE_CD    = P.RLANE_CD
              AND BAR.DIR_CD      = P.DIR_CD
              AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
              AND BAR.TS_FLG      = DECODE(SUBSTR(Z.IOC_CD, LENGTH(Z.IOC_CD)-2), 'T/S', 'Y', 'N')
              AND BAR.IOC_CD      = DECODE(SUBSTR(Z.IOC_CD, LENGTH(Z.IOC_CD)-2), 'OCN', 'O', 'I')
              AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
              AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
              --AND BAR.TRD_CD NOT IN ('IES', 'IMS')
              AND Z.IOC_CD       <> 'EQ'
         ) AS CMB,
         DECODE(SUM(CMB2), 0, 0, SUM(CMB1) / SUM(CMB2)) AS FCT_CMB,
         SUM(NVL(FC_TEU, 0) + NVL(FC_HC, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] , @[skd_voy_no],'D5') + NVL(FC_45, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] ,@[skd_voy_no],'D7') + NVL(FC_53, 0)*2) AS FC_TTL_TEU,
         SUM(FC_TEU) AS FC_TEU,
         SUM(FC_20)  AS FC_20 ,
         SUM(FC_40)  AS FC_40 ,
         SUM(FC_HC)  AS FC_HC ,
         SUM(FC_45)  AS FC_45 ,
         SUM(FC_53)  AS FC_53 ,
         SUM(FC_RF)  AS FC_RF ,
         SUM(FC_WGT) AS FC_WGT,
         SUM(UG_TEU) AS UG_TEU,
         SUM(UG_20)  AS UG_20 ,
         SUM(UG_40)  AS UG_40 ,
         SUM(UG_HC)  AS UG_HC ,
         SUM(UG_45)  AS UG_45 ,
         SUM(UG_53)  AS UG_53 ,
         SUM(UG_RF)  AS UG_RF ,
         SUM(UG_WGT) AS UG_WGT,
         SUM(AD_TEU) AS AD_TEU,
         SUM(AD_20)  AS AD_20 ,
         SUM(AD_40)  AS AD_40 ,
         SUM(AD_HC)  AS AD_HC ,
         SUM(AD_45)  AS AD_45 ,
         SUM(AD_53)  AS AD_53 ,
         SUM(AD_RF)  AS AD_RF ,
         SUM(AD_WGT) AS AD_WGT,
         SUM(AP_TEU) AS AP_TEU,
         SUM(AP_20)  AS AP_20 ,
         SUM(AP_40)  AS AP_40 ,
         SUM(AP_HC)  AS AP_HC ,
         SUM(AP_45)  AS AP_45 ,
         SUM(AP_53)  AS AP_53 ,
         SUM(AP_RF)  AS AP_RF ,
         SUM(AP_WGT) AS AP_WGT,
         SUM(NVL(BK_20, 0) + NVL(BK_40, 0)*2 + NVL(BK_HC, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] , @[skd_voy_no],'D5') + NVL(BK_45, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] , @[skd_voy_no],'D7') + NVL(BK_53, 0)*2) AS BK_TEU,
         SUM(BK_20)  AS BK_20 ,
         SUM(BK_40)  AS BK_40 ,
         SUM(BK_HC)  AS BK_HC ,
         SUM(BK_45)  AS BK_45 ,
         SUM(BK_53)  AS BK_53 ,
         SUM(BK_RF)  AS BK_RF ,
         SUM(BK_WGT) AS BK_WGT,
         SUM(NVL(BT_20, 0) + NVL(BT_40, 0)*2 + NVL(BT_HC, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] , @[skd_voy_no],'D5') + NVL(BT_45, 0)*SPC_GET_HC_RT_BSA_FNC(@[trade] ,@[lane] ,@[skd_dir_cd] ,@[vsl_cd] , @[skd_voy_no],'D7') + NVL(BT_53, 0)*2) AS BT_TEU,
         SUM(BT_20)  AS BT_20 ,
         SUM(BT_40)  AS BT_40 ,
         SUM(BT_HC)  AS BT_HC ,
         SUM(BT_45)  AS BT_45 ,
         SUM(BT_53)  AS BT_53 ,
         SUM(BT_RF)  AS BT_RF ,
         SUM(BT_WGT) AS BT_WGT,
         SUM(GT_TEU) AS GT_TEU,
         SUM(GT_20)  AS GT_20 ,
         SUM(GT_40)  AS GT_40 ,
         SUM(GT_HC)  AS GT_HC ,
         SUM(GT_45)  AS GT_45 ,
         SUM(GT_53)  AS GT_53 ,
         SUM(GT_RF)  AS GT_RF ,
         SUM(GT_WGT) AS GT_WGT,
         SUM(AP_MD)  AS AP_MD ,
         MAX(EDIT)   AS EDIT1 ,
         COUNT(DISTINCT DECODE(POD_CD, SUBSTR('0000000', 1, LENGTH(POD_CD)), NULL, POL_CD||POD_CD)) + DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, SUBSTR('0000000', 1, LENGTH(POL_CD)), NULL, POL_CD)), 0) AS CHILD_CNT,
         COUNT(DISTINCT DECODE(POD_CD, SUBSTR('0000000', 1, LENGTH(POD_CD)), NULL, POL_CD||POD_CD)) AS LEAF_CNT,
         DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, SUBSTR('0000000', 1, LENGTH(POL_CD)), NULL, POL_CD)), 0) AS POD_CNT,
         NVL(MAX(CFM_FLG), 'N') AS CFM_FLG,
         DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1) AS LVL,
         DECODE(DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE((SELECT POL_POD FROM BASE), 'O', 1, 'L', 2, 'D', 3), 3), + DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1), 1, 0), 1, MAX(SPC_CTRL_ALOC_RMK)    , NULL) AS SPC_CTRL_ALOC_RMK    ,
         DECODE(DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE((SELECT POL_POD FROM BASE), 'O', 1, 'L', 2, 'D', 3), 3), + DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1), 1, 0), 1, MAX(SPC_CTRL_ALOC_POL_RMK), NULL) AS SPC_CTRL_ALOC_POL_RMK,
         DECODE(DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE((SELECT POL_POD FROM BASE), 'O', 1, 'L', 2, 'D', 3), 3), + DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1), 1, 0), 1, MAX(SPC_CTRL_ALOC_POD_RMK), NULL) AS SPC_CTRL_ALOC_POD_RMK
    FROM (
            SELECT U.REP_TRD_CD,
                   U.TRD_CD    ,
                   U.IOC_CD    ,
                   U.OFC_CD    ,
                   U.POL_CD    ,
                   U.POD_CD    ,
                   NVL(MAX(U.POL_SEQ), 99) AS POL_SEQ  ,
                   NVL(MAX(U.POD_SEQ), 99) AS POD_SEQ  ,
                   SUM(U.BKG_QUOTA)        AS BKG_QUOTA,
                   SUM(U.CMB1) AS CMB1  ,
                   SUM(CMB2)   AS CMB2  ,
                   SUM(FC_TEU) AS FC_TEU,
                   SUM(FC_20)  AS FC_20 ,
                   SUM(FC_40)  AS FC_40 ,
                   SUM(FC_HC)  AS FC_HC ,
                   SUM(FC_45)  AS FC_45 ,
                   SUM(FC_53)  AS FC_53 ,
                   SUM(FC_RF)  AS FC_RF ,
                   SUM(FC_WGT) AS FC_WGT,
                   SUM(UG_TEU) AS UG_TEU,
                   SUM(UG_20)  AS UG_20 ,
                   SUM(UG_40)  AS UG_40 ,
                   SUM(UG_HC)  AS UG_HC ,
                   SUM(UG_45)  AS UG_45 ,
                   SUM(UG_53)  AS UG_53 ,
                   SUM(UG_RF)  AS UG_RF ,
                   SUM(UG_WGT) AS UG_WGT,
                   SUM(AD_TEU) AS AD_TEU,
                   SUM(AD_20)  AS AD_20 ,
                   SUM(AD_40)  AS AD_40 ,
                   SUM(AD_HC)  AS AD_HC ,
                   SUM(AD_45)  AS AD_45 ,
                   SUM(AD_53)  AS AD_53 ,
                   SUM(AD_RF)  AS AD_RF ,
                   SUM(AD_WGT) AS AD_WGT,
                   SUM(AP_TEU) AS AP_TEU,
                   SUM(AP_20)  AS AP_20 ,
                   SUM(AP_40)  AS AP_40 ,
                   SUM(AP_HC)  AS AP_HC ,
                   SUM(AP_45)  AS AP_45 ,
                   SUM(AP_53)  AS AP_53 ,
                   SUM(AP_RF)  AS AP_RF ,
                   SUM(AP_WGT) AS AP_WGT,
                   SUM(BK_TEU) AS BK_TEU,
                   SUM(BK_20)  AS BK_20 ,
                   SUM(BK_40)  AS BK_40 ,
                   SUM(BK_HC)  AS BK_HC ,
                   SUM(BK_45)  AS BK_45 ,
                   SUM(BK_53)  AS BK_53 ,
                   SUM(BK_RF)  AS BK_RF ,
                   SUM(BK_WGT) AS BK_WGT,
                   SUM(BT_TEU) AS BT_TEU,
                   SUM(BT_20)  AS BT_20 ,
                   SUM(BT_40)  AS BT_40 ,
                   SUM(BT_HC)  AS BT_HC ,
                   SUM(BT_45)  AS BT_45 ,
                   SUM(BT_53)  AS BT_53 ,
                   SUM(BT_RF)  AS BT_RF ,
                   SUM(BT_WGT) AS BT_WGT,
                   SUM(GT_TEU) AS GT_TEU,
                   SUM(GT_20)  AS GT_20 ,
                   SUM(GT_40)  AS GT_40 ,
                   SUM(GT_HC)  AS GT_HC ,
                   SUM(GT_45)  AS GT_45 ,
                   SUM(GT_53)  AS GT_53 ,
                   SUM(GT_RF)  AS GT_RF ,
                   SUM(GT_WGT) AS GT_WGT,
                   SUM(DECODE(FLG, 103, 1, 203, 1, 0)) AS AP_MD,
                   NVL(MAX(EDIT), 'N') AS EDIT   ,
                   MAX(CFM_FLG)        AS CFM_FLG,
                   MAX(SPC_CTRL_ALOC_RMK)     AS SPC_CTRL_ALOC_RMK    ,
                   MAX(SPC_CTRL_ALOC_POL_RMK) AS SPC_CTRL_ALOC_POL_RMK,
                   MAX(SPC_CTRL_ALOC_POD_RMK) AS SPC_CTRL_ALOC_POD_RMK 
              FROM (
                      -- Trunk Forecast
                      SELECT 101 AS FLG,
                             'Trunk Forecast' AS FLAG,
                             DECODE(T.IOC_TS_CD, 'O', 'OCN', 'I', 'IPC', 'T','T/S') AS IOC_CD,
                             B.REP_TRD_CD,
                             B.TRD_CD    ,
                             T.SLS_OFC_CD AS OFC_CD,
                             T.POL_YD_CD  AS POL_CD,
                             T.POD_YD_CD  AS POD_CD,
                             B.POL_SEQ,
                             B.POD_SEQ,
                             0 AS BKG_QUOTA,
                             0 AS CMB1     ,
                             0 AS CMB2     ,
                             SUM(T.CFM_TTL_QTY) AS FC_TEU,
                             0 AS FC_20,
                             0 AS FC_40,
                             SUM(T.CFM_40FT_HC_QTY) AS FC_HC ,
                             SUM(T.CFM_45FT_HC_QTY) AS FC_45 ,
                             SUM(T.CFM_53FT_QTY)    AS FC_53 ,
                             SUM(T.CFM_RF_QTY)      AS FC_RF ,
                             SUM(T.CFM_TTL_WGT)     AS FC_WGT,
                             0 AS UG_TEU,
                             0 AS UG_20 ,
                             0 AS UG_40 ,
                             0 AS UG_HC ,
                             0 AS UG_45 ,
                             0 AS UG_53 ,
                             0 AS UG_RF ,
                             0 AS UG_WGT,
                             0 AS BK_TEU,
                             0 AS BK_20 ,
                             0 AS BK_40 ,
                             0 AS BK_HC ,
                             0 AS BK_45 ,
                             0 AS BK_53 ,
                             0 AS BK_RF ,
                             0 AS BK_WGT,
                             0 AS BT_TEU,
                             0 AS BT_20 ,
                             0 AS BT_40 ,
                             0 AS BT_HC ,
                             0 AS BT_45 ,
                             0 AS BT_53 ,
                             0 AS BT_RF ,
                             0 AS BT_WGT,
                             0 AS AD_TEU,
                             0 AS AD_20 ,
                             0 AS AD_40 ,
                             0 AS AD_HC ,
                             0 AS AD_45 ,
                             0 AS AD_53 ,
                             0 AS AD_RF ,
                             0 AS AD_WGT,
                             0 AS AP_TEU,
                             0 AS AP_20 ,
                             0 AS AP_40 ,
                             0 AS AP_HC ,
                             0 AS AP_45 ,
                             0 AS AP_53 ,
                             0 AS AP_RF ,
                             0 AS AP_WGT,
                             0 AS GT_TEU,
                             0 AS GT_20 ,
                             0 AS GT_40 ,
                             0 AS GT_HC ,
                             0 AS GT_45 ,
                             0 AS GT_53 ,
                             0 AS GT_RF ,
                             0 AS GT_WGT,
                             'Y'  AS EDIT,
                             NULL AS CFM_FLG              ,
                             NULL AS SPC_CTRL_ALOC_RMK    ,
                             NULL AS SPC_CTRL_ALOC_POL_RMK,
                             NULL AS SPC_CTRL_ALOC_POD_RMK
                        FROM SPC_DLY_FCAST_CUST T,
                             VSL_PORT_SKD       B
                       WHERE T.TRD_CD         = B.TRD_CD
                         AND T.RLANE_CD       = B.RLANE_CD
                         AND T.DIR_CD         = B.DIR_CD
                         AND T.VSL_CD         = B.VSL_CD
                         AND T.SKD_VOY_NO     = B.SKD_VOY_NO
                         AND T.SKD_DIR_CD     = B.SKD_DIR_CD
                         AND T.SLS_RGN_OFC_CD = B.OFC_CD
                         AND T.POL_YD_CD      = B.POL_CD
                         AND T.POD_YD_CD      = B.POD_CD
                         AND NVL(B.PL_CLPT_IND_SEQ,'1') = NVL(T.POL_IND_SEQ,'1')
                         AND NVL(B.PD_CLPT_IND_SEQ,'1') = NVL(T.POD_IND_SEQ,'1')
                    GROUP BY B.REP_TRD_CD,
                             B.TRD_CD    ,
                             T.SLS_OFC_CD,
                             T.IOC_TS_CD ,
                             T.POL_YD_CD ,
                             T.POD_YD_CD ,
                             B.POL_SEQ   ,
                             B.POD_SEQ
                      UNION ALL
                      -- Trunk Allocated/Allocation
                      SELECT 102 + DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, 1, 0) AS FLG,
                             'Trunk Allocated/Allocation' AS FLAG,
                             DECODE(T.MNL_FLG, 'Y', 'T-', '')||DECODE(T.IOC_CD, 'O', 'OCN', 'I', 'IPC', '') AS IOC_CD,
                             B.REP_TRD_CD,
                             B.TRD_CD    ,
                             T.SLS_OFC_CD AS OFC_CD,
                             T.POL_YD_CD  AS POL_CD,
                             T.POD_YD_CD  AS POD_CD,
                             B.POL_SEQ,
                             B.POD_SEQ,
                             0 AS BKG_QUOTA,
                             0 AS CMB1     ,
                             0 AS CMB2     ,
                             0 AS FC_TEU   ,
                             0 AS FC_20    ,
                             0 AS FC_40    ,
                             0 AS FC_HC    ,
                             0 AS FC_45    ,
                             0 AS FC_53    ,
                             0 AS FC_RF    ,
                             0 AS FC_WGT   ,
                             0 AS UG_TEU   ,
                             0 AS UG_20    ,
                             0 AS UG_40    ,
                             0 AS UG_HC    ,
                             0 AS UG_45    ,
                             0 AS UG_53    ,
                             0 AS UG_RF    ,
                             0 AS UG_WGT   ,
                             0 AS BK_TEU   ,
                             0 AS BK_20    ,
                             0 AS BK_40    ,
                             0 AS BK_HC    ,
                             0 AS BK_45    ,
                             0 AS BK_53    ,
                             0 AS BK_RF    ,
                             0 AS BK_WGT   ,
                             0 AS BT_TEU   ,
                             0 AS BT_20    ,
                             0 AS BT_40    ,
                             0 AS BT_HC    ,
                             0 AS BT_45    ,
                             0 AS BT_53    ,
                             0 AS BT_RF    ,
                             0 AS BT_WGT   ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_TTL_QTY        , 0) AS AD_TEU,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_20FT_QTY       , 0) AS AD_20 ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_40FT_QTY       , 0) AS AD_40 ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_40FT_HC_QTY    , 0) AS AD_HC ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_45FT_HC_QTY    , 0) AS AD_45 ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_53FT_QTY       , 0) AS AD_53 ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_RF_QTY         , 0) AS AD_RF ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_TTL_WGT        , 0) AS AD_WGT,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_TTL_QTY    , 0) AS AP_TEU,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_20FT_QTY   , 0) AS AP_20 ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_40FT_QTY   , 0) AS AP_40 ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_40FT_HC_QTY, 0) AS AP_HC ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_45FT_HC_QTY, 0) AS AP_45 ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_53FT_QTY   , 0) AS AP_53 ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_RF_QTY     , 0) AS AP_RF ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_TTL_WGT    , 0) AS AP_WGT,
                             0 AS GT_TEU,
                             0 AS GT_20 ,
                             0 AS GT_40 ,
                             0 AS GT_HC ,
                             0 AS GT_45 ,
                             0 AS GT_53 ,
                             0 AS GT_RF ,
                             0 AS GT_WGT,
                             'Y'  AS EDIT   ,
                             NULL AS CFM_FLG,
                             T.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ,
                             T.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK,
                             T.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK
                        FROM SPC_ALOC_POL_POD T,
                             VSL_PORT_SKD     B
                       WHERE T.TRD_CD     = B.TRD_CD
                         AND T.RLANE_CD   = B.RLANE_CD
                         AND T.DIR_CD     = B.DIR_CD
                         AND T.VSL_CD     = B.VSL_CD
                         AND T.SKD_VOY_NO = B.SKD_VOY_NO
                         AND T.SKD_DIR_CD = B.SKD_DIR_CD
                         AND T.POL_YD_CD  = B.POL_CD
                         AND T.POD_YD_CD  = B.POD_CD
                         AND (T.SLS_RGN_OFC_CD = B.OFC_CD OR T.SLS_OFC_CD = B.OFC_CD)
                         AND T.TS_FLG     = 'N'
                         AND NVL(B.PL_CLPT_IND_SEQ,'1') = NVL(T.POL_IND_SEQ,'1')
                         AND NVL(B.PD_CLPT_IND_SEQ,'1') = NVL(T.POD_IND_SEQ,'1')
                      
                    UNION ALL

                   SELECT   

                   105 AS FLG,
                   'Trunk Booking' AS FLAG,
                   DECODE(VSL_PRE_PST_CD, 'T', DECODE(IOC_CD, 'O', 'OCN', 'I', 'IPC', ''), 'T/S') AS IOC_CD,
                   REP_TRD_CD          ,
                   TRD_CD              ,
                   SLS_OFC_CD          ,
                   POL_CD              ,
                   POD_CD              ,
                   POL_SEQ             ,
                   POD_SEQ             ,
                   0 AS BKG_QUOTA,
                   0 AS CMB1     ,
                   0 AS CMB2     ,
                   0 AS FC_TEU   ,
                   0 AS FC_20    ,
                   0 AS FC_40    ,
                   0 AS FC_HC    ,
                   0 AS FC_45    ,
                   0 AS FC_53    ,
                   0 AS FC_RF    ,
                   0 AS FC_WGT   ,
                   0 AS UG_TEU   ,
                   0 AS UG_20    ,
                   0 AS UG_40    ,
                   0 AS UG_HC    ,
                   0 AS UG_45    ,
                   0 AS UG_53    ,
                   0 AS UG_RF    ,
                   0 AS UG_WGT   ,
                   DECODE(BKG_STS_CD, 'F', BKG_TTL_QTY    ) AS BK_TEU,
                   DECODE(BKG_STS_CD, 'F', BKG_20FT_QTY   ) AS BK_20 ,
                   DECODE(BKG_STS_CD, 'F', BKG_40FT_QTY   ) AS BK_40 ,
                   DECODE(BKG_STS_CD, 'F', BKG_40FT_HC_QTY) AS BK_HC ,
                   DECODE(BKG_STS_CD, 'F', BKG_45FT_HC_QTY) AS BK_45 ,
                   DECODE(BKG_STS_CD, 'F', BKG_53FT_QTY   ) AS BK_53 ,
                   DECODE(BKG_STS_CD, 'F', BKG_RF_QTY     ) AS BK_RF ,
                   DECODE(BKG_STS_CD, 'F', BKG_TTL_WGT    ) AS BK_WGT,
                   (BKG_TTL_QTY)     AS BT_TEU,
                   (BKG_20FT_QTY)    AS BT_20 ,
                   (BKG_40FT_QTY)    AS BT_40 ,
                   (BKG_40FT_HC_QTY) AS BT_HC ,
                   (BKG_45FT_HC_QTY) AS BT_45 ,
                   (BKG_53FT_QTY)    AS BT_53 ,
                   (BKG_RF_QTY)      AS BT_RF ,
                   (BKG_TTL_WGT)     AS BT_WGT,
                   0 AS AD_TEU,
                   0 AS AD_20 ,
                   0 AS AD_40 ,
                   0 AS AD_HC ,
                   0 AS AD_45 ,
                   0 AS AD_53 ,
                   0 AS AD_RF ,
                   0 AS AD_WGT,
                   0 AS AP_TEU,
                   0 AS AP_20 ,
                   0 AS AP_40 ,
                   0 AS AP_HC ,
                   0 AS AP_45 ,
                   0 AS AP_53 ,
                   0 AS AP_RF ,
                   0 AS AP_WGT,
                   0 AS GT_TEU,
                   0 AS GT_20 ,
                   0 AS GT_40 ,
                   0 AS GT_HC ,
                   0 AS GT_45 ,
                   0 AS GT_53 ,
                   0 AS GT_RF ,
                   0 AS GT_WGT,
                   DECODE(VSL_PRE_PST_CD, 'T', 'Y', EDIT) AS EDIT,
                   NULL AS CFM_FLG              ,
                   NULL AS SPC_CTRL_ALOC_RMK    ,
                   NULL AS SPC_CTRL_ALOC_POL_RMK,
                   NULL AS SPC_CTRL_ALOC_POD_RMK
                   
                  
              FROM (
                      SELECT REP_TRD_CD          ,
                             TRD_CD              ,
                             RLANE_CD      		 ,
                             SKD_DIR_CD    		 ,
                             VSL_CD        		 ,
                             SLS_OFC_CD          ,
                             VSL_PRE_PST_CD      ,
                             IOC_CD              ,
                             POL_CD              ,
                             POD_CD              ,
                             POL_SEQ             ,
                             POD_SEQ             ,
                             BKG_STS_CD          ,
                             EDIT                 ,
                             TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY    ,
                             TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_20FT_QTY   ,
                             TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)) AS BKG_40FT_QTY   ,
                             TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)) AS BKG_40FT_HC_QTY,
                             TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)) AS BKG_45FT_HC_QTY,
                             TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)) AS BKG_53FT_QTY   ,
                             TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)) AS BKG_RF_QTY     ,
                             TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0)) AS BKG_TTL_WGT
                        FROM (
                                SELECT 
                                       VPP.REP_TRD_CD    ,
                                       VPP.TRD_CD        ,
                                       VPP.RLANE_CD      ,
                                       VPP.SKD_DIR_CD    ,
                                       VPP.VSL_CD        ,
                                       B.OB_SLS_OFC_CD AS SLS_OFC_CD ,
                                       VSL_PRE_PST_CD    ,
                                       (SELECT   DECODE(B.FM_CONTI_CD,B.TO_CONTI_CD,'I','O')
                                         FROM MDM_REV_LANE A,  MDM_DTL_REV_LANE B
                                         WHERE B.RLANE_CD = A.RLANE_CD
                                          AND B.RLANE_CD LIKE BV.SLAN_CD||'%'
                                          AND B.FM_CONTI_CD = (
                                                                SELECT MLOC.CONTI_CD
                                                                FROM MDM_LOCATION MLOC
                                                                WHERE MLOC.LOC_CD = BV.POL_CD 
                                                              )
                                          AND B.TO_CONTI_CD = (
                                                                SELECT MLOC.CONTI_CD
                                                                FROM MDM_LOCATION MLOC
                                                                WHERE MLOC.LOC_CD = BV.POD_CD 
                                                               )
                                          AND B.VSL_SLAN_DIR_CD = BV.SKD_DIR_CD
                                          AND B.DELT_FLG = 'N'
                                          AND ROWNUM = 1 )  IOC_CD,
                                       VPP.POL_CD              ,
                                       VPP.POD_CD              ,
                                       VPP.POL_SEQ             ,
                                       VPP.POD_SEQ             ,
                                       B.BKG_STS_CD            ,
                                       VPP.EDIT                ,
                                       (
                                          SELECT
                                                    TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, '5', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D5'), '7', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D7'), 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')
                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0) + DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'T', Q.RC_QTY, 0)), 'FM0000000000.000')
                                                 || TO_CHAR((D.ACT_WGT * DECODE(D.WGT_UT_CD, 'LBS', 0.00045, 0.001))
                                                                         + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT
                                                                                                   FROM MDM_CNTR_TP_SZ TS
                                                                                                  WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
                                            FROM BKG_QUANTITY Q
                                           WHERE B.BKG_NO      = Q.BKG_NO
                                             AND Q.OP_CNTR_QTY > 0
                                       ) AS VAL
                                 FROM  VSL_PORT_SKD VPP,
                                       BKG_VVD      BV ,
                                       BKG_BOOKING  B  ,
                                       SPC_OFC_LVL  O  ,
                                       BKG_BL_DOC   D
                                 WHERE 1=1
                                    AND (VPP.TRD_CD,VPP.RLANE_CD)  =  (
                                                                        SELECT   B.TRD_CD,B.RLANE_CD
                                                                        FROM MDM_REV_LANE A,  MDM_DTL_REV_LANE B
                                                                        WHERE B.RLANE_CD = A.RLANE_CD
                                                                          AND B.RLANE_CD LIKE BV.SLAN_CD||'%'
                                                                          AND B.FM_CONTI_CD = (
                                                                                                SELECT MLOC.CONTI_CD
                                                                                                FROM MDM_LOCATION MLOC
                                                                                                WHERE MLOC.LOC_CD = BV.POL_CD 
                                                                                              )
                                                                          AND B.TO_CONTI_CD = (
                                                                                                SELECT MLOC.CONTI_CD
                                                                                                FROM MDM_LOCATION MLOC
                                                                                                WHERE MLOC.LOC_CD = BV.POD_CD 
                                                                                               )
                                                                          AND B.VSL_SLAN_DIR_CD = BV.SKD_DIR_CD
                                                                          AND B.DELT_FLG = 'N'
                                                                          AND ROWNUM = 1 
                                                                      ) 
                               
                                   AND O.OFC_TP_CD     IN ('BB', 'BA', 'BS')
                                   AND O.OFC_CD         = B.OB_SLS_OFC_CD
                                   AND O.N4TH_PRNT_OFC_CD = VPP.OFC_CD
                                   AND VPP.COST_YR_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                                   AND B.BKG_STS_CD    IN ('W', 'F')
                                   AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
                                   AND B.BKG_NO         = BV.BKG_NO
                                   AND BV.VSL_CD        = VPP.VSL_CD
                                   AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO
                                   AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD
                                   AND BV.POL_YD_CD     = VPP.POL_CD                            AND BV.POD_YD_CD     = VPP.POD_CD                                                                                  AND B.BKG_NO         = D.BKG_NO
                                   AND NVL(VPP.PL_CLPT_IND_SEQ,'1') = NVL(BV.POL_CLPT_IND_SEQ,'1')
                                   AND NVL(VPP.PD_CLPT_IND_SEQ,'1') = NVL(BV.POD_CLPT_IND_SEQ,'1')
                             )
                   )    
                         UNION ALL
                    -- Booking Quota
                          SELECT 107 AS FLG,
                                 'Booking Quota / CMB' AS FLAG,
                                 DECODE(VPS.IOC_CD, 'O', 'OCN', 'I', 'IPC', '') AS IOC_CD,
                                 VPS.REP_TRD_CD,
                                 VPS.TRD_CD    ,
                                 OV.SAQ_RGN_OFC_CD AS OFC_CD,
                                 MQ.POL_CD         AS POL_CD,
                                 MQ.POD_CD         AS POD_CD,
                                 VPS.POL_SEQ,
                                 VPS.POD_SEQ,
                                 ROUND(SUM(MQ.LOD_QTY)) AS BKG_QUOTA,
                                 0 AS CMB1  ,
                                 0 AS CMB2  ,
                                 0 AS FC_TEU,
                                 0 AS FC_20 ,
                                 0 AS FC_40 ,
                                 0 AS FC_HC ,
                                 0 AS FC_45 ,
                                 0 AS FC_53 ,
                                 0 AS FC_RF ,
                                 0 AS FC_WGT,
                                 0 AS UG_TEU,
                                 0 AS UG_20 ,
                                 0 AS UG_40 ,
                                 0 AS UG_HC ,
                                 0 AS UG_45 ,
                                 0 AS UG_53 ,
                                 0 AS UG_RF ,
                                 0 AS UG_WGT,
                                 0 AS BK_TEU,
                                 0 AS BK_20 ,
                                 0 AS BK_40 ,
                                 0 AS BK_HC ,
                                 0 AS BK_45 ,
                                 0 AS BK_53 ,
                                 0 AS BK_RF ,
                                 0 AS BK_WGT,
                                 0 AS BT_TEU,
                                 0 AS BT_20 ,
                                 0 AS BT_40 ,
                                 0 AS BT_HC ,
                                 0 AS BT_45 ,
                                 0 AS BT_53 ,
                                 0 AS BT_RF ,
                                 0 AS BT_WGT,
                                 0 AS AD_TEU,
                                 0 AS AD_20 ,
                                 0 AS AD_40 ,
                                 0 AS AD_HC ,
                                 0 AS AD_45 ,
                                 0 AS AD_53 ,
                                 0 AS AD_RF ,
                                 0 AS AD_WGT,
                                 0 AS AP_TEU,
                                 0 AS AP_20 ,
                                 0 AS AP_40 ,
                                 0 AS AP_HC ,
                                 0 AS AP_45 ,
                                 0 AS AP_53 ,
                                 0 AS AP_RF ,
                                 0 AS AP_WGT,
                                 0 AS GT_TEU,
                                 0 AS GT_20 ,
                                 0 AS GT_40 ,
                                 0 AS GT_HC ,
                                 0 AS GT_45 ,
                                 0 AS GT_53 ,
                                 0 AS GT_RF ,
                                 0 AS GT_WGT,
                                 'Y'  AS EDIT   ,
                                 NULL AS CFM_FLG,
                                 NULL AS SPC_CTRL_ALOC_RMK    ,
                                 NULL AS SPC_CTRL_ALOC_POL_RMK,
                                 NULL AS SPC_CTRL_ALOC_POD_RMK
                            FROM BASE             B  ,
                                 VSL_PORT_SKD     VPS,
                                 SAQ_MON_CFM_QTA  MQ ,
                                 SAQ_MON_QTA_RLSE MQR,
                                 SPC_OFC_LVL      OV
                           WHERE MQR.BSE_YR          = B.YEAR
                             AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(B.MON) / 3)||'Q'
                             AND MQR.QTA_RLSE_STS_CD = 'R'
                             AND MQ.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO
                             AND MQ.BSE_YR           = MQR.BSE_YR
                             AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD
                             AND MQ.QTA_TGT_CD       = 'T'
                             AND MQ.BSE_MON          = B.MON
                             AND MQ.TRD_CD           = VPS.TRD_CD
                             AND MQ.RLANE_CD         = VPS.RLANE_CD
                             AND MQ.DIR_CD           = VPS.DIR_CD
                             AND MQ.VSL_CD           = VPS.VSL_CD
                             AND MQ.SKD_VOY_NO       = VPS.SKD_VOY_NO
                             AND MQ.SKD_DIR_CD       = VPS.SKD_DIR_CD
                             AND MQ.RGN_OFC_CD       = VPS.OFC_CD
                             AND MQ.POL_CD           = SUBSTR(VPS.POL_CD, 1, 5)
                             AND MQ.POD_CD           = SUBSTR(VPS.POD_CD, 1, 5)
                             AND MQ.RGN_OFC_CD       = OV.OFC_CD
                             AND OV.SAQ_RGN_OFC_CD   = VPS.OFC_CD
                             AND B.COST_YR || B.COST_WK BETWEEN OV.OFC_APLY_FM_YRWK AND OV.OFC_APLY_TO_YRWK
                             AND MQ.LOD_QTY          > 0
                        GROUP BY VPS.REP_TRD_CD   ,
                                 VPS.TRD_CD       ,
                                 VPS.IOC_CD       ,
                                 OV.SAQ_RGN_OFC_CD,
                                 MQ.POL_CD        ,
                                 MQ.POD_CD        ,
                                 VPS.POL_SEQ      ,
                                 VPS.POD_SEQ
                      UNION ALL
                      -- TS Allocation/Allocated
                      SELECT 202 + DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, 1, 0) AS FLG,
                             'T/S Allocation/Allocated' AS FLAG,
                             DECODE(T.MNL_FLG, 'Y', 'T-T/S', 'T/S') AS IOC_CD,
                             B.REP_TRD_CD,
                             B.TRD_CD    ,
                             T.SLS_OFC_CD AS OFC_CD,
                             T.POL_YD_CD  AS POL_CD,
                             T.POD_YD_CD  AS POD_CD,
                             B.POL_SEQ,
                             B.POD_SEQ,
                             0 AS BKG_QUOTA,
                             0 AS CMB1     ,
                             0 AS CMB2     ,
                             0 AS FC_TEU   ,
                             0 AS FC_20    ,
                             0 AS FC_40    ,
                             0 AS FC_HC    ,
                             0 AS FC_45    ,
                             0 AS FC_53    ,
                             0 AS FC_RF    ,
                             0 AS FC_WGT   ,
                             0 AS UG_TEU   ,
                             0 AS UG_20    ,
                             0 AS UG_40    ,
                             0 AS UG_HC    ,
                             0 AS UG_45    ,
                             0 AS UG_53    ,
                             0 AS UG_RF    ,
                             0 AS UG_WGT   ,
                             0 AS BK_TEU   ,
                             0 AS BK_20    ,
                             0 AS BK_40    ,
                             0 AS BK_HC    ,
                             0 AS BK_45    ,
                             0 AS BK_53    ,
                             0 AS BK_RF    ,
                             0 AS BK_WGT   ,
                             0 AS BT_TEU   ,
                             0 AS BT_20    ,
                             0 AS BT_40    ,
                             0 AS BT_HC    ,
                             0 AS BT_45    ,
                             0 AS BT_53    ,
                             0 AS BT_RF    ,
                             0 AS BT_WGT   ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_TTL_QTY        , 0) AS AD_TEU,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_20FT_QTY       , 0) AS AD_20 ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_40FT_QTY       , 0) AS AD_40 ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_40FT_HC_QTY    , 0) AS AD_HC ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_45FT_HC_QTY    , 0) AS AD_45 ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_53FT_QTY       , 0) AS AD_53 ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_RF_QTY         , 0) AS AD_RF ,
                             DECODE(T.SLS_OFC_CD    , B.OFC_CD, T.ASGN_TTL_WGT        , 0) AS AD_WGT,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_TTL_QTY    , 0) AS AP_TEU,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_20FT_QTY   , 0) AS AP_20 ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_40FT_QTY   , 0) AS AP_40 ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_40FT_HC_QTY, 0) AS AP_HC ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_45FT_HC_QTY, 0) AS AP_45 ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_53FT_QTY   , 0) AS AP_53 ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_RF_QTY     , 0) AS AP_RF ,
                             DECODE(T.SLS_RGN_OFC_CD, B.OFC_CD, T.BKG_AVAL_TTL_WGT    , 0) AS AP_WGT,
                             0 AS GT_TEU,
                             0 AS GT_20 ,
                             0 AS GT_40 ,
                             0 AS GT_HC ,
                             0 AS GT_45 ,
                             0 AS GT_53 ,
                             0 AS GT_RF ,
                             0 AS GT_WGT,
                             B.EDIT,
                             NULL AS CFM_FLG,
                             T.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ,
                             T.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK,
                             T.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK
                        FROM SPC_ALOC_POL_POD T,
                             VSL_PORT_SKD     B
                       WHERE T.TRD_CD     = B.TRD_CD
                         AND T.RLANE_CD   = B.RLANE_CD
                         AND T.DIR_CD     = B.DIR_CD
                         AND T.VSL_CD     = B.VSL_CD
                         AND T.SKD_VOY_NO = B.SKD_VOY_NO
                         AND T.SKD_DIR_CD = B.SKD_DIR_CD
                         AND T.POL_YD_CD  = B.POL_CD
                         AND T.POD_YD_CD  = B.POD_CD
                         AND (T.SLS_RGN_OFC_CD = B.OFC_CD OR T.SLS_OFC_CD = B.OFC_CD)
                         AND T.TS_FLG     = 'Y'
                   ) U
          GROUP BY U.REP_TRD_CD,
                   U.TRD_CD    ,
                   U.OFC_CD    ,
                   U.IOC_CD    ,
                   U.OFC_CD    ,
                   U.POL_CD    ,
                   U.POD_CD
            HAVING U.IOC_CD LIKE 'T-%'
                OR U.POD_CD = SUBSTR('0000000', 1, LENGTH(U.POL_CD))
                OR ROUND(SUM(BKG_QUOTA), 1) > 0
                OR ROUND(SUM(NVL(FC_TEU, 0) + NVL(FC_HC, 0) + NVL(FC_45, 0) + NVL(FC_53, 0)), 1) > 0
                OR ROUND(SUM(UG_TEU), 1) >  0
                OR ROUND(SUM(UG_WGT), 1) >  0
                OR ROUND(SUM(AD_TEU), 1) >= 0
                OR ROUND(SUM(AP_TEU), 1) >= 0
                OR ROUND(SUM(AD_WGT), 1) >= 0
                OR ROUND(SUM(AP_WGT), 1) >= 0
                OR ROUND(SUM(BT_TEU), 1) >  0
                OR ROUND(SUM(BK_TEU), 1) >  0
                OR ROUND(SUM(GT_TEU), 1) >  0
         ) Z
GROUP BY GROUPING SETS (
                         (REP_TRD_CD, TRD_CD, IOC_CD, OFC_CD, POL_CD, POL_SEQ, POD_CD, POD_SEQ),
                         (REP_TRD_CD, TRD_CD, IOC_CD, OFC_CD, POL_CD, POL_SEQ),
                         (REP_TRD_CD, TRD_CD, IOC_CD, OFC_CD),
                         (REP_TRD_CD, TRD_CD, IOC_CD)
                       )
  HAVING (POL_CD IS NULL OR POL_CD <> SUBSTR('0000000', 1, LENGTH(POL_CD)))
     AND (POD_CD IS NULL OR POD_CD <> SUBSTR('0000000', 1, LENGTH(POD_CD)))
     AND (    IOC_CD LIKE 'T-%'
           OR ROUND(SUM(BKG_QUOTA), 1) > 0
           OR ROUND(SUM(NVL(FC_TEU, 0) + NVL(FC_HC, 0) + NVL(FC_45, 0) + NVL(FC_53, 0)), 1) > 0
           OR ROUND(SUM(UG_TEU), 1) >  0
           OR ROUND(SUM(UG_WGT), 1) >  0
           OR ROUND(SUM(AD_TEU), 1) >= 0
           OR ROUND(SUM(AP_TEU), 1) >= 0
           OR ROUND(SUM(AD_WGT), 1) >= 0
           OR ROUND(SUM(AP_WGT), 1) >= 0
           OR ROUND(SUM(BT_TEU), 1) >  0
           OR ROUND(SUM(BK_TEU), 1) >  0
           OR ROUND(SUM(GT_TEU), 1) >  0 )
ORDER BY DECODE(IOC_CD, 'OCN', 1, 'IPC', 2, 'EQ', 3, 'T/S', 4, 'T-OCN', 5, 'T-IPC', 6, 'T-T/S', 7, 10),
         DECODE((SELECT B.OFC_CD FROM BASE_KEY B), OFC_CD, 1, 2),
         DECODE(OFC_CD, '+', 'ZZZZZ', OFC_CD),
         POL_CD,
         NVL(POL_SEQ, -1),
         NVL(POD_SEQ, -1)			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="office" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
