<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AGNCommRequestDBDAOAddAcmSpclCmpnCSQL">
			<desc><![CDATA[AddAcmSpclCmpn

2016.04.01 박다은 Agreement Delt_flg 체크로직 추가
2016.04.25 박다은 [CSR:#11434] local currency 적용 로직 추가]]></desc>
			<sql><![CDATA[
INSERT INTO ACM_SPCL_CMPN 
(BKG_NO, SPCL_OFC_CD, SPCL_CMPN_SEQ, SPCL_CMPN_STS_CD, PPD_AMT, CRNT_AMT, IF_AMT, VSL_DEP_DT, LOC_DIV_CD, LOC_CD, AR_OFC_CD, AP_OFC_CD, AP_CTR_CD, COMM_STND_COST_CD, SPCL_OCCR_INFO_CD, SPCL_SLAN_CD, SPCL_RLANE_CD, SPCL_VSL_CD, SPCL_SKD_VOY_NO, SPCL_SKD_DIR_CD, SPCL_REV_DIR_CD, OFC_CHR_CD, VNDR_CNT_CD, VNDR_SEQ, CMDT_TP_CD, CMDT_CD, CUST_CNT_CD, CUST_SEQ, SPCL_AGMT_SEQ, SHPR_CNT_CD, SHPR_SEQ, RFA_NO, CUST_KND_CD, SPCL_DIV_CD, SPCL_BKG_RT, BKG_BX_QTY, SPCL_BX_AMT, BKG_TEU_QTY, SPCL_TEU_AMT, BKG_FEU_QTY, SPCL_FEU_AMT, BKG_RF_TEU_QTY, SPCL_RF_TEU_AMT, BKG_RF_FEU_QTY, SPCL_RF_FEU_AMT, SPCL_CMPN_RMK, ACCL_FLG, PAY_CHK_FLG, PAY_CHK_USR_ID, PAY_CHK_DT, PAY_CHK_GDT, CSR_NO, APRO_USR_ID, APRO_DT, APRO_GDT, GL_DT, ASA_NO, INV_TAX_RT, IF_USR_ID, IF_DT, IF_GDT, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT,
CURR_CD, PAY_XCH_RT, PAY_PPD_AMT, PAY_CRNT_AMT, PAY_IF_AMT)
SELECT
    BKG_NO,
    SPCL_OFC_CD,
    @[max_spcl_cmpn_seq]            AS SPCL_CMPN_SEQ,

  (CASE WHEN CRNT_AMT - @[ppd_crnt_spcl_amt] < 0 AND @[max_spcl_cmpn_seq] < 2 THEN 'CN'  
        WHEN CRNT_AMT - @[ppd_crnt_spcl_amt] = 0 THEN 'CZ'
        ELSE 'CS'
   END) AS SPCL_CMPN_STS_CD,

--    'CS'                            AS SPCL_CMPN_STS_CD,
    @[ppd_crnt_spcl_amt]            AS PPD_AMT,
    CRNT_AMT,
    CRNT_AMT - @[ppd_crnt_spcl_amt] AS IF_AMT,
    VSL_DEP_DT,
    NULL         AS LOC_DIV_CD,
    NULL         AS LOC_CD,
    (SELECT AR_OFC_CD FROM MDM_ORGANIZATION M WHERE M.OFC_CD = SPCL_OFC_CD)  AS AR_OFC_CD,
    (SELECT AP_OFC_CD FROM MDM_ORGANIZATION M WHERE M.OFC_CD = SPCL_OFC_CD)  AS AP_OFC_CD,
    (SELECT AP_CTR_CD FROM MDM_ORGANIZATION M WHERE M.OFC_CD = SPCL_OFC_CD)  AS AP_CTR_CD,
    COMM_STND_COST_CD,SPCL_OCCR_INFO_CD,SPCL_SLAN_CD,SPCL_RLANE_CD,SPCL_VSL_CD,SPCL_SKD_VOY_NO,SPCL_SKD_DIR_CD,SPCL_REV_DIR_CD,
    @[ofc_chr_cd] AS OFC_CHR_CD,
    VNDR_CNT_CD,VNDR_SEQ,CMDT_TP_CD,CMDT_CD,CUST_CNT_CD,CUST_SEQ,SPCL_AGMT_SEQ,SHPR_CNT_CD,SHPR_SEQ,RFA_NO,
    CUST_KND_CD,SPCL_DIV_CD,SPCL_BKG_RT,BKG_BX_QTY,SPCL_BX_AMT,BKG_TEU_QTY,SPCL_TEU_AMT,BKG_FEU_QTY,SPCL_FEU_AMT,BKG_RF_TEU_QTY,SPCL_RF_TEU_AMT,BKG_RF_FEU_QTY,SPCL_RF_FEU_AMT,
    NULL AS SPCL_CMPN_RMK,
    NULL AS ACCL_FLG,
    NULL AS PAY_CHK_FLG,
    NULL AS PAY_CHK_USR_ID,
    NULL AS PAY_CHK_DT,
    NULL AS PAY_CHK_GDT,
    NULL AS CSR_NO,
    NULL AS APRO_USR_ID,
    NULL AS APRO_DT,
    NULL AS APRO_GDT,
    NULL AS GL_DT,
    NULL AS ASA_NO,
    NULL AS INV_TAX_RT,
    NULL AS IF_USR_ID,
    NULL AS IF_DT,
    NULL AS IF_GDT,
    @[usr_id] AS CRE_USR_ID,
    SYSDATE AS CRE_DT,
    @[usr_id] AS UPD_USR_ID ,
    SYSDATE AS UPD_DT,
    CURR_CD AS CURR_CD, 
    PAY_XCH_RT AS PAY_XCH_RT, 
    ROUND(@[ppd_crnt_spcl_amt] * PAY_XCH_RT, 3) AS PAY_PPD_AMT, 
    ROUND(CRNT_AMT * PAY_XCH_RT, 3) AS PAY_CRNT_AMT, 
    ROUND((CRNT_AMT - @[ppd_crnt_spcl_amt]) * PAY_XCH_RT, 3) AS PAY_IF_AMT   
FROM (
    SELECT
        INFO.BKG_NO,
        AGMT.SPCL_OFC_CD,
        CASE 
        WHEN 'BA' = AGMT.SPCL_DIV_CD 
        THEN ( 
            SELECT 
            CASE NVL (AGMT.SPCL_BKG_RT, 0) 
            WHEN 0 THEN 0 
            ELSE ROUND (NVL ( SUM (BRT.CHG_AMT), 0) * (NVL (AGMT.SPCL_BKG_RT, 0) / 100), 2) 
            END 
            FROM BKG_CHG_RT BRT 
            WHERE BRT.BKG_NO         = INFO.BKG_NO 
            AND FRT_INCL_XCLD_DIV_CD = 'N' 
            AND CURR_CD              = 'USD' 
           ) 
        WHEN 'BF' = AGMT.SPCL_DIV_CD 
        THEN ( 
            SELECT 
            CASE NVL (AGMT.SPCL_BKG_RT, 0) 
            WHEN 0 THEN 0 
            ELSE ROUND (NVL ( SUM (BRT.CHG_AMT), 0) * (NVL (AGMT.SPCL_BKG_RT, 0) / 100), 2) 
            END 
            FROM BKG_CHG_RT BRT 
            WHERE BRT.BKG_NO         = INFO.BKG_NO 
            AND FRT_INCL_XCLD_DIV_CD = 'N' 
            AND CURR_CD              = 'USD' 
            AND BRT.CHG_CD IN ( 'OFT') 
            ) 
        WHEN 'BS' = AGMT.SPCL_DIV_CD 
        THEN 
           ( 
            SELECT 
            CASE NVL (AGMT.SPCL_BKG_RT, 0) 
            WHEN 0 THEN 0 
            ELSE ROUND (NVL( SUM (BRT.CHG_AMT), 0) * (NVL (AGMT.SPCL_BKG_RT, 0) / 100), 2) 
            END 
            FROM BKG_CHG_RT BRT 
            WHERE BRT.BKG_NO               = INFO.BKG_NO 
            AND FRT_INCL_XCLD_DIV_CD       = 'N' 
            AND CURR_CD                    = 'USD' 
            AND AGMT.SPCL_CHG_CTNT||',OFT' LIKE '%' || BRT.CHG_CD || '%' 
           ) 
        WHEN 'CA' = AGMT.SPCL_DIV_CD 
        THEN NVL (AGMT.SPCL_BX_AMT, 0) * QUTY.BKG_BX_QTY 
        WHEN 'CS' = AGMT.SPCL_DIV_CD 
        THEN (NVL (AGMT.SPCL_BX_AMT,     0) * QUTY.BKG_BX_QTY )
           + (NVL (AGMT.SPCL_TEU_AMT,    0) * QUTY.BKG_TEU_QTY )
           + (NVL (AGMT.SPCL_FEU_AMT,    0) * QUTY.BKG_FEU_QTY )
           + (NVL (AGMT.SPCL_RF_TEU_AMT, 0) * QUTY.BKG_RF_TEU_QTY )
           + (NVL (AGMT.SPCL_RF_FEU_AMT, 0) * QUTY.BKG_RF_FEU_QTY )
         END                                   AS CRNT_AMT,
        ( 
            SELECT SKD.VPS_ETD_DT 
            FROM   VSK_VSL_PORT_SKD SKD, BKG_VVD          BVV 
            WHERE  SKD.VSL_CD                      = NVL (BVV.VSL_CD, '*') 
            AND    SKD.SKD_VOY_NO                  = NVL (BVV.SKD_VOY_NO, '*') 
            AND    SKD.SKD_DIR_CD                  = NVL (BVV.SKD_DIR_CD, '*') 
            AND    SKD.VPS_PORT_CD                 = NVL (BVV.POL_CD, '*') 
            AND    NVL (SKD.SKD_CNG_STS_CD, ' ') <>  'S' 
            AND    BVV.VSL_PRE_PST_CD              = 'T' 
            AND    BVV.BKG_NO                      = INFO.BKG_NO 
            AND    ROWNUM                          = 1 
        )                                       AS VSL_DEP_DT,
        (SELECT COMM_STND_COST_CD FROM ACM_COMM_TP_CD_MAPG WHERE COMM_TP_CD = 'M' ) AS COMM_STND_COST_CD,
        BOOK.POL_CD                    AS SPCL_OCCR_INFO_CD,
        BOOK.SLAN_CD                   AS SPCL_SLAN_CD,
        RGST.RLANE_CD                  AS SPCL_RLANE_CD,
        BOOK.VSL_CD                    AS SPCL_VSL_CD,
        BOOK.SKD_VOY_NO                AS SPCL_SKD_VOY_NO,
        BOOK.SKD_DIR_CD                AS SPCL_SKD_DIR_CD,
        BOOK.REV_DIR_CD                AS SPCL_REV_DIR_CD,
        MTCH.VNDR_CNT_CD               AS VNDR_CNT_CD,
        MTCH.VNDR_SEQ                  AS VNDR_SEQ,
        AGMT.CMDT_TP_CD                AS CMDT_TP_CD,
        AGMT.CMDT_CD                   AS CMDT_CD,
        AGMT.CUST_CNT_CD               AS CUST_CNT_CD,
        AGMT.CUST_SEQ                  AS CUST_SEQ,
        AGMT.SPCL_AGMT_SEQ             AS SPCL_AGMT_SEQ,
        SUBSTR(INFO.SHPR,1,2)          AS SHPR_CNT_CD,
        TO_NUMBER(SUBSTR(INFO.SHPR,3)) AS SHPR_SEQ,
        BOOK.RFA_NO                    AS RFA_NO,
        AGMT.CUST_KND_CD               AS CUST_KND_CD,
        AGMT.SPCL_DIV_CD               AS SPCL_DIV_CD,
        AGMT.SPCL_BKG_RT               AS SPCL_BKG_RT,
        QUTY.BKG_BX_QTY                AS BKG_BX_QTY,
        AGMT.SPCL_BX_AMT               AS SPCL_BX_AMT,
        QUTY.BKG_TEU_QTY               AS BKG_TEU_QTY,
        AGMT.SPCL_TEU_AMT              AS SPCL_TEU_AMT,
        QUTY.BKG_FEU_QTY               AS BKG_FEU_QTY,
        AGMT.SPCL_FEU_AMT              AS SPCL_FEU_AMT,
        QUTY.BKG_RF_TEU_QTY            AS BKG_RF_TEU_QTY,
        AGMT.SPCL_RF_TEU_AMT           AS SPCL_RF_TEU_AMT,
        QUTY.BKG_RF_FEU_QTY            AS BKG_RF_FEU_QTY,
        AGMT.SPCL_RF_FEU_AMT           AS SPCL_RF_FEU_AMT,
        AGMT.PAY_XCH_RT                AS PAY_XCH_RT,
        AGMT.CURR_CD                   AS CURR_CD,

        ROW_NUMBER() OVER (PARTITION BY INFO.BKG_NO, SPCL_OFC_CD, NVL(INFO.SHPR,'*'), NVL(POR_GRP_TP_CD,'*'), NVL(POL_GRP_TP_CD,'*'), NVL(POD_GRP_TP_CD,'*')
                     ORDER BY DECODE(NVL(CMDT_TP_CD,'*'),'*','0',CMDT_TP_CD) DESC ) CMDT_DUP_CHK,
        ROW_NUMBER() OVER (PARTITION BY INFO.BKG_NO, SPCL_OFC_CD ,NVL(CMDT_TP_CD,'*'),NVL(POR_GRP_TP_CD,'*'), NVL(POL_GRP_TP_CD,'*'), NVL(POD_GRP_TP_CD,'*')
                     ORDER BY DECODE(NVL(INFO.SHPR,'*'),'*','0',INFO.SHPR) DESC ) SHPR_DUP_CHK,
        ROW_NUMBER() OVER (PARTITION BY INFO.BKG_NO, SPCL_OFC_CD ,NVL(CMDT_TP_CD,'*'),NVL(INFO.SHPR,'*'), NVL(POL_GRP_TP_CD,'*'), NVL(POD_GRP_TP_CD,'*')
                     ORDER BY DECODE(NVL(POR_GRP_TP_CD,'*'),'*','0',POR_GRP_TP_CD) DESC ) POR_DUP_CHK,
        ROW_NUMBER() OVER (PARTITION BY INFO.BKG_NO, SPCL_OFC_CD ,NVL(CMDT_TP_CD,'*'),NVL(INFO.SHPR,'*'), NVL(POR_GRP_TP_CD,'*'), NVL(POD_GRP_TP_CD,'*')
                     ORDER BY DECODE(NVL(POL_GRP_TP_CD,'*'),'*','0',POL_GRP_TP_CD) DESC ) POL_DUP_CHK,
        ROW_NUMBER() OVER (PARTITION BY INFO.BKG_NO, SPCL_OFC_CD ,NVL(CMDT_TP_CD,'*'),NVL(INFO.SHPR,'*'), NVL(POR_GRP_TP_CD,'*'), NVL(POL_GRP_TP_CD,'*')
                     ORDER BY DECODE(NVL(POD_GRP_TP_CD,'*'),'*','0',POD_GRP_TP_CD) DESC ) POD_DUP_CHK

    
    FROM
        ACM_SPCL_AGMT           AGMT, 
        ACM_SPCL_CUST_VNDR_MTCH MTCH, 
        BKG_BOOKING             BOOK,
        COA_RGST_BKG            RGST,
        (
            SELECT
              @[bkg_no] AS BKG_NO
            , @[box]    AS BKG_BX_QTY
            , @[teu]    AS BKG_TEU_QTY
            , @[feu]    AS BKG_FEU_QTY
            , @[rbox]   AS BKG_RF_QTY
            , @[rteu]   AS BKG_RF_TEU_QTY
            , @[rfeu]   AS BKG_RF_FEU_QTY
            FROM DUAL 
        ) QUTY,
        (
            
            SELECT 
                BKG.BKG_NO, 
                ( 
                SELECT 
                      BCU.CUST_CNT_CD||TO_CHAR (BCU.CUST_SEQ, 'FM000000') 
                FROM  BKG_CUSTOMER BCU 
                WHERE BCU.BKG_NO = BKG.BKG_NO 
                AND   BCU.BKG_CUST_TP_CD ='S' 
                AND   ROWNUM = 1 
                )                                                 AS SHPR,
                ( 
                SELECT 
                      BCU.CUST_CNT_CD||TO_CHAR (BCU.CUST_SEQ, 'FM000000') 
                FROM  BKG_CUSTOMER BCU 
                WHERE BCU.BKG_NO = BKG.BKG_NO 
                AND   BCU.BKG_CUST_TP_CD ='F' 
                AND   ROWNUM = 1 
                )                                                 AS FRT_FWDR, 
                BKG.SC_NO, 
                ( 
                SELECT 
                      SMN.REAL_CUST_CNT_CD||TO_CHAR(SMN.REAL_CUST_SEQ, 'FM000000') 
                FROM  PRI_SP_MN  SMN, 
                      PRI_SP_HDR SHD 
                WHERE SHD.SC_NO       = BKG.SC_NO
                AND   SHD.PROP_NO     = SMN.PROP_NO 
                AND   SMN.PROP_STS_CD = 'A' 
                AND   TO_DATE( @[rt_aply_dt] , 'YYYYMMDD')  BETWEEN SMN.EFF_DT AND SMN.EXP_DT 
                AND   ROWNUM = 1 
                )                                                 AS SC_REAL_CUST, 
                BKG.RFA_NO, 
                ( 
                SELECT 
                      RMN.CTRT_CUST_CNT_CD||TO_CHAR(RMN.CTRT_CUST_SEQ, 'FM000000') 
                FROM  PRI_RP_MN  RMN, 
                      PRI_RP_HDR RHD 
                WHERE RHD.RFA_NO      = BKG.RFA_NO
                AND   RHD.PROP_NO     = RMN.PROP_NO 
                AND   RMN.PROP_STS_CD = 'A' 
                AND   TO_DATE(  @[rt_aply_dt] , 'YYYYMMDD')  BETWEEN RMN.EFF_DT AND RMN.EXP_DT 
                AND ROWNUM = 1 
                )                                                 AS RFA_CTRTR,
                BKG.CMDT_CD, 
                BKG.REP_CMDT_CD, 
                BKG.POR_CD                                        AS POR_CD, 
                POR.RGN_CD                                        AS POR_RGN_CD, 
                POR.CNT_CD                                        AS POR_CNT_CD, 
                POR.SCONTI_CD                                     AS POR_SCONTI_CD, 
                POR.CONTI_CD                                      AS POR_CONTI_CD, 
                BKG.POL_CD                                        AS POL_CD,  
                POL.RGN_CD                                        AS POL_RGN_CD, 
                POL.CNT_CD                                        AS POL_CNT_CD, 
                POL.SCONTI_CD                                     AS POL_SCONTI_CD, 
                POL.CONTI_CD                                      AS POL_CONTI_CD, 
                BKG.POD_CD                                        AS POD_CD,  
                POD.RGN_CD                                        AS POD_RGN_CD, 
                POD.CNT_CD                                        AS POD_CNT_CD, 
                POD.SCONTI_CD                                     AS POD_SCONTI_CD, 
                POD.CONTI_CD                                      AS POD_CONTI_CD, 
                @[rt_aply_dt]                                      AS RT_APLY_DT
            FROM BKG_BOOKING      BKG,
                 MDM_LOCATION     POR, 
                 MDM_LOCATION     POL, 
                 MDM_LOCATION     POD
            WHERE 1=1
            AND BKG_NO      =  @[bkg_no]
            AND BKG.POR_CD  = POR.LOC_CD 
            AND BKG.POL_CD  = POL.LOC_CD 
            AND BKG.POD_CD  = POD.LOC_CD 
        
    )INFO
    
    WHERE 1=1
    AND BOOK.BKG_NO      = INFO.BKG_NO
    AND RGST.BKG_NO      = INFO.BKG_NO
    AND MTCH.CUST_CNT_CD = AGMT.CUST_CNT_CD 
    AND MTCH.CUST_SEQ    = AGMT.CUST_SEQ 
    AND AGMT.CUST_CNT_CD || TO_CHAR (AGMT.CUST_SEQ, 'FM000000') || AGMT.CUST_KND_CD 
    IN ( 
        INFO.SHPR         || 'S', 
        INFO.FRT_FWDR     || 'F', 
        INFO.RFA_CTRTR    || 'R',
        INFO.SC_REAL_CUST || 'C', 
        SUBSTR (INFO.SHPR        , 1, 2) || '999999' || 'S', 
        SUBSTR (INFO.FRT_FWDR    , 1, 2) || '999999' || 'F', 
        SUBSTR (INFO.RFA_CTRTR   , 1, 2) || '999999' || 'R', 
        SUBSTR (INFO.SC_REAL_CUST, 1, 2) || '999999' || 'C' 
        ) 
    /*  Effective Date 로직  */    
    AND AGMT.FM_EFF_DT <= INFO.RT_APLY_DT   
    AND AGMT.TO_EFF_DT >= INFO.RT_APLY_DT  
    /* SHIPPER가 존재하는지 */ 
    AND  NVL (AGMT.SHPR_CNT_CD, '*') || NVL (TO_CHAR(AGMT.SHPR_SEQ, 'FM000000'), '000000') = 
    CASE NVL (AGMT.SHPR_CNT_CD, '*') || NVL (TO_CHAR(AGMT.SHPR_SEQ, 'FM000000'), '000000') 
         WHEN '*000000' THEN '*000000' 
         ELSE INFO.SHPR
    END 
    /* RFA NO가 존재하는지 */ 
    AND  NVL (AGMT.RFA_NO, '*') = 
    CASE NVL (AGMT.RFA_NO, '*') 
         WHEN '*' THEN '*' 
         ELSE NVL (INFO.RFA_NO, '*') 
    END 
    /* SC NO가 존재하는지 */ 
    AND  NVL (AGMT.SC_NO, '*') = 
    CASE NVL (AGMT.SC_NO, '*') 
         WHEN '*' THEN '*' 
         ELSE NVL (INFO.SC_NO, '*') 
    END 
    /* REP COMMODITY, COMMODITY가  존재하는지 */ 
    AND  NVL (AGMT.CMDT_CD, '*') = 
    CASE NVL (AGMT.CMDT_TP_CD, '*') 
        WHEN '*' THEN NVL (AGMT.CMDT_CD, '*') 
        WHEN '2' THEN INFO.REP_CMDT_CD 
        WHEN '3' THEN INFO.CMDT_CD 
    END 
    /* POR Location 해당 ROUTE별로 존재하는지 */ 
    AND  NVL (AGMT.POR_ROUT_CD  , '*') = 
    CASE NVL (AGMT.POR_GRP_TP_CD, '*') 
         WHEN '*' THEN '*' 
         WHEN '5' THEN INFO.POR_CD 
         WHEN '4' THEN INFO.POR_RGN_CD 
         WHEN '3' THEN INFO.POR_CNT_CD 
         WHEN '2' THEN INFO.POR_SCONTI_CD 
         WHEN '1' THEN INFO.POR_CONTI_CD 
    END 
    /* POL Location 해당 ROUTE별로 존재하는지 */ 
    AND  NVL (AGMT.POL_ROUT_CD  , '*') = 
    CASE NVL (AGMT.POL_GRP_TP_CD, '*') 
         WHEN '*' THEN '*' 
         WHEN '5' THEN INFO.POL_CD 
         WHEN '4' THEN INFO.POL_RGN_CD 
         WHEN '3' THEN INFO.POL_CNT_CD 
         WHEN '2' THEN INFO.POL_SCONTI_CD 
         WHEN '1' THEN INFO.POL_CONTI_CD 
    END 
    /* POD Location 해당 ROUTE별로 존재하는지 */ 
    AND  NVL (AGMT.POD_ROUT_CD  , '*') = 
    CASE NVL (AGMT.POD_GRP_TP_CD, '*') 
         WHEN '*' THEN '*' 
         WHEN '5' THEN INFO.POD_CD 
         WHEN '4' THEN INFO.POD_RGN_CD 
         WHEN '3' THEN INFO.POD_CNT_CD 
         WHEN '2' THEN INFO.POD_SCONTI_CD 
         WHEN '1' THEN INFO.POD_CONTI_CD 
    END 
    AND AGMT.DELT_FLG = 'N'
)
WHERE 1=1
AND CMDT_DUP_CHK = 1
AND SHPR_DUP_CHK = 1
AND POR_DUP_CHK  = 1
AND POL_DUP_CHK  = 1
AND POD_DUP_CHK  = 1			]]></sql>
			<params>
				<param name="max_spcl_cmpn_seq" type="12" value="" out="N"/>
				<param name="ppd_crnt_spcl_amt" type="12" value="" out="N"/>
				<param name="ofc_chr_cd" type="12" value="" out="N"/>
				<param name="usr_id" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="box" type="12" value="" out="N"/>
				<param name="teu" type="12" value="" out="N"/>
				<param name="feu" type="12" value="" out="N"/>
				<param name="rbox" type="12" value="" out="N"/>
				<param name="rteu" type="12" value="" out="N"/>
				<param name="rfeu" type="12" value="" out="N"/>
				<param name="rt_aply_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
