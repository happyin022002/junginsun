<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ACMSimulationDBDAOGetFxRealAmtInfoRSQL">
			<desc><![CDATA[GetFxRealAmtInfo

ACM_AGN_AGMT_DTL.COMM_FX_AMT 가 0 보다 클 경우엔
CNTR TYPE SIZE 에 따른 AGN_AGMT_SEQ 를 모두 뽑아 실제 지급해야 할 
COMM_FX_AMT 를 구한다.]]></desc>
			<sql><![CDATA[
SELECT NVL(SUM(FX_REAL_AMT),0) AS FX_REAL_AMT
  FROM (
        SELECT
            NVL(SUM (REAL_FX_AMT),0) AS FX_REAL_AMT
        FROM (
            SELECT
                CNTR_NON_EXISTS_SCORE+CNTR_MAT_SCORE+ROUTE_NON_EXISTS_SCORE+DECODE(ROUTE_MAT_SCORE,ROUTE_TTL_SCORE,ROUTE_MAT_SCORE,0) AS TTL_SCORE
                ,RANK() OVER (PARTITION BY CNTR_TPSZ_CD ORDER BY CNTR_NON_EXISTS_SCORE+CNTR_MAT_SCORE+ROUTE_NON_EXISTS_SCORE+DECODE(ROUTE_MAT_SCORE,ROUTE_TTL_SCORE,ROUTE_MAT_SCORE,0) DESC ) RNK
                ,I.*
            FROM (
            
            SELECT  Q.CNTR_TPSZ_CD ,( Q.OP_CNTR_QTY * D.COMM_FX_AMT ) AS REAL_FX_AMT
                   ,Q.OP_CNTR_QTY  ,D.COMM_FX_AMT,D.AGN_AGMT_NO ,D.AGN_AGMT_SEQ
        
             ,( 
             SELECT CASE WHEN COUNT(*) = 0 THEN 1 ELSE 0 END 	
               FROM ACM_SIM_AGMT_DTL_CNTR C
              WHERE 1=1
                AND D.AGN_CD      = C.AGN_CD
                AND D.AGN_AGMT_NO = C.AGN_AGMT_NO
                AND D.IO_BND_CD   = C.IO_BND_CD
                AND D.AC_TP_CD    = C.AC_TP_CD
                AND D.AGN_AGMT_SEQ= C.AGN_AGMT_SEQ
            )AS CNTR_NON_EXISTS_SCORE
            ,(
             SELECT CASE WHEN COUNT(*) > 0 THEN 2 ELSE 0 END 
               FROM ACM_SIM_AGMT_DTL_CNTR C
              WHERE 1=1
                AND D.AGN_CD      = C.AGN_CD
                AND D.AGN_AGMT_NO = C.AGN_AGMT_NO
                AND D.IO_BND_CD   = C.IO_BND_CD
                AND D.AC_TP_CD    = C.AC_TP_CD
                AND D.AGN_AGMT_SEQ= C.AGN_AGMT_SEQ
                AND C.CNTR_TPSZ_CD= Q.CNTR_TPSZ_CD
            )AS CNTR_MAT_SCORE
            ,( SELECT CASE WHEN COUNT(1) = 0 THEN 1 ELSE 0 END 
               FROM ACM_SIM_AGMT_DTL_ROUT R
              WHERE 1=1
                AND D.AGN_CD      = R.AGN_CD
                AND D.AGN_AGMT_NO = R.AGN_AGMT_NO
                AND D.IO_BND_CD   = R.IO_BND_CD
                AND D.AC_TP_CD    = R.AC_TP_CD
                AND D.AGN_AGMT_SEQ= R.AGN_AGMT_SEQ
                AND LENGTH(R.ROUT_REF_DIV_CD) = 3
            )AS ROUTE_NON_EXISTS_SCORE
            ,( SELECT CASE WHEN COUNT(1) > 0 THEN COUNT(1) * 2 ELSE 0 END 
               FROM ACM_SIM_AGMT_DTL_ROUT R
              WHERE 1=1
                AND D.AGN_CD      = R.AGN_CD
                AND D.AGN_AGMT_NO = R.AGN_AGMT_NO
                AND D.IO_BND_CD   = R.IO_BND_CD
                AND D.AC_TP_CD    = R.AC_TP_CD
                AND D.AGN_AGMT_SEQ= R.AGN_AGMT_SEQ
                AND LENGTH(R.ROUT_REF_DIV_CD) = 3
                AND R.ROUT_INFO_CD = 
                    CASE 
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.CNT_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POR' THEN B.POR_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POL' THEN B.POL_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POD' THEN B.POD_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'DEL' THEN B.DEL_CD
                     END)AS ROUTE_MAT_SCORE
            , (SELECT COUNT(COUNT(ROUT_REF_DIV_CD)) * 2  -- ROUT_REF_DIV_CD 
                          FROM  ACM_SIM_AGMT_DTL_ROUT R
                          WHERE 1=1
                            AND R.AGN_CD       = D.AGN_CD 
                            AND R.AGN_AGMT_NO  = D.AGN_AGMT_NO 
                            AND R.IO_BND_CD    = D.IO_BND_CD 
                            AND R.AC_TP_CD     = D.AC_TP_CD 
                            AND R.AGN_AGMT_SEQ = D.AGN_AGMT_SEQ 
                            AND LENGTH(R.ROUT_REF_DIV_CD) = 3
                          GROUP BY ROUT_REF_DIV_CD 
                            )                                       AS ROUTE_TTL_SCORE
            --,D.*,Q.*
            FROM ACM_SIM_AGMT_DTL D--, BKG_QUANTITY Q
            , BKG_BOOKING B
            , MDM_LOCATION L1, MDM_LOCATION L2, MDM_LOCATION L3, MDM_LOCATION L4
            , (
                SELECT BKG_NO
                     , CASE WHEN OP_CNTR_QTY = EQ_SUBST_CGO_QTY
                            THEN SUBSTR(CNTR_TPSZ_CD, 1,1)||EQ_SUBST_CNTR_TPSZ_CD
                            WHEN OP_CNTR_QTY > EQ_SUBST_CGO_QTY
                            THEN DECODE(SUBSTR(CNTR_TPSZ_CD,1,1), 'R', DECODE(SUBSTR(EQ_SUBST_CNTR_TPSZ_CD,1,1),'D', SUBSTR(CNTR_TPSZ_CD,1,1)||EQ_SUBST_CNTR_TPSZ_CD, EQ_SUBST_CNTR_TPSZ_CD), EQ_SUBST_CNTR_TPSZ_CD)
                       END AS CNTR_TPSZ_CD
                     , CASE WHEN OP_CNTR_QTY = EQ_SUBST_CGO_QTY
                            THEN EQ_SUBST_CGO_QTY
                            WHEN OP_CNTR_QTY > EQ_SUBST_CGO_QTY
                            THEN DECODE(EQ_SUBST_CNTR_TPSZ_CD, NULL, OP_CNTR_QTY, EQ_SUBST_CGO_QTY)
                       END AS OP_CNTR_QTY  
                  FROM BKG_QUANTITY
                 WHERE 1=1
                   AND BKG_NO = @[bkg_no]
                   AND EQ_SUBST_CGO_QTY > 0
                 UNION 
                SELECT BKG_NO
                     , CASE WHEN OP_CNTR_QTY > EQ_SUBST_CGO_QTY
                            THEN CNTR_TPSZ_CD
                            WHEN OP_CNTR_QTY = EQ_SUBST_CGO_QTY
                            THEN SUBSTR(CNTR_TPSZ_CD, 1,1)||EQ_SUBST_CNTR_TPSZ_CD
                       END AS CNTR_TPSZ_CD
                      ,CASE WHEN OP_CNTR_QTY > EQ_SUBST_CGO_QTY
                            THEN OP_CNTR_QTY-EQ_SUBST_CGO_QTY
                            WHEN OP_CNTR_QTY = EQ_SUBST_CGO_QTY
                            THEN EQ_SUBST_CGO_QTY
                       END AS OP_CNTR_QTY
                  FROM BKG_QUANTITY
                 WHERE 1=1
                   AND BKG_NO = @[bkg_no]
                   AND EQ_SUBST_CGO_QTY > 0
                   UNION
                SELECT BKG_NO, CNTR_TPSZ_CD, OP_CNTR_QTY
                  FROM BKG_QUANTITY
                 WHERE 1=1
                   AND BKG_NO = @[bkg_no]
                   AND EQ_SUBST_CGO_QTY = 0
                ) Q -- Running Reefer 인지 아닌지 구분하여 계산 로직 처리
        
            WHERE 1=1
            AND D.AGN_CD      = @[agn_cd]
            AND D.AGN_AGMT_NO = @[agn_agmt_no]
            AND D.IO_BND_CD   = @[io_bnd_cd]
            AND D.AC_TP_CD    = @[ac_tp_cd]
            AND NVL(D.COMM_FX_AMT,0) <> 0
            AND B.BKG_NO      = Q.BKG_NO 
            AND B.BKG_STS_CD <> 'X'
            AND B.POR_CD = L1.LOC_CD
            AND B.POL_CD = L2.LOC_CD
            AND B.POD_CD = L3.LOC_CD
            AND B.DEL_CD = L4.LOC_CD
            AND Q.BKG_NO IN (
                            SELECT DISTINCT BKG_NO 
                              FROM BKG_BL_DOC 
                             WHERE BKG_NO = @[bkg_no] OR (BL_CVRD_TP_CD = 'C' AND MST_CVRD_BL_NO = @[bkg_no])
                             )
            AND Q.CNTR_TPSZ_CD NOT LIKE 'Q%'  
            AND D.FULL_MTY_CD = @[full_mty_cd]
            AND D.OFC_CD = CASE WHEN @[ofc_chr_cd] IN (3,4)
                            THEN
                                CASE
        
                                    WHEN D.OFC_SET_TP_CD = 'B' AND D.IO_BND_CD = 'O' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'B' AND D.IO_BND_CD = 'I' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
                                    WHEN D.OFC_SET_TP_CD = 'C' THEN @[clt_ofc_cd]
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'O' THEN NVL(@[cn_ob_finc],@[cn_ob_ar]) -- Contract Office 추가
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'I' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])                          
                                    WHEN D.OFC_SET_TP_CD = 'G' THEN @[chn_agn_cd]
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POR' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POL' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POD' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'DEL' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
        
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POR' THEN @[cn_ob_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POL' THEN @[cn_ob_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POD' THEN @[cn_ib_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'DEL' THEN @[cn_ib_ar]
        
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.IO_BND_CD = 'O' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.IO_BND_CD = 'I' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.IO_BND_CD = 'O' THEN @[cn_ob_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.IO_BND_CD = 'I' THEN @[cn_ib_ar]
                                END
        
                            ELSE
                                CASE
        
                                    WHEN D.OFC_SET_TP_CD = 'B' THEN NVL(@[bkg_ofc],@[bkg_ar])
        
                                    WHEN D.OFC_SET_TP_CD = 'C' THEN @[clt_ofc_cd]
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'O' THEN NVL(@[bkg_ofc],@[bkg_ar])-- Contract Office 추가
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'I' AND D.OFC_CVRG_CD = 'PFO' THEN NVL(@[pod_finc],@[pod_ar])
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'I' AND D.OFC_CVRG_CD = 'DFO' THEN NVL(@[del_finc],@[del_ar])

                                    WHEN D.OFC_SET_TP_CD = 'G' THEN @[chn_agn_cd]
        
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POR' THEN NVL(@[por_finc],@[por_ar]) -->  D.OFC_CD = :POR_FINC 조건 추가 이유 = POR_FINC 와 Match 되는 계약이 없을 경우는 POR_FINC 의 AR_OFC_CD 로 계약을 찾는다.
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POL' THEN NVL(@[pol_finc],@[pol_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POD' THEN NVL(@[pod_finc],@[pod_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'DEL' THEN NVL(@[del_finc],@[del_ar])
        
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POR' THEN @[por_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POL' THEN @[pol_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POD' THEN @[pod_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'DEL' THEN @[del_ar]
        
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'PRE' AND  @[vsl_pre_pst_cd] =  'S' THEN NVL(@[ts_finc],@[ts_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'PST' AND  @[vsl_pre_pst_cd] <> 'S' THEN NVL(@[ts_finc],@[ts_ar])
        
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'PRE' AND  @[vsl_pre_pst_cd] =  'S' THEN @[ts_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'PST' AND  @[vsl_pre_pst_cd] <> 'S' THEN @[ts_ar]
                                END
                       END
        
        
        
            )I    
        )
        WHERE RNK = 1
          AND CNTR_MAT_SCORE <> 0
          AND (ROUTE_NON_EXISTS_SCORE <> 0 OR ROUTE_MAT_SCORE <> 0)

#if (${mh_flg} == 'Y')        
        UNION ALL
        SELECT
            NVL(SUM (REAL_FX_AMT),0) AS FX_REAL_AMT
        FROM (
            SELECT
                CNTR_NON_EXISTS_SCORE+CNTR_MAT_SCORE+ROUTE_NON_EXISTS_SCORE+DECODE(ROUTE_MAT_SCORE,ROUTE_TTL_SCORE,ROUTE_MAT_SCORE,0) AS TTL_SCORE
                ,RANK() OVER (PARTITION BY CNTR_TPSZ_CD ORDER BY CNTR_NON_EXISTS_SCORE+CNTR_MAT_SCORE+ROUTE_NON_EXISTS_SCORE+DECODE(ROUTE_MAT_SCORE,ROUTE_TTL_SCORE,ROUTE_MAT_SCORE,0) DESC ) RNK
                ,I.*
            FROM (
            
            SELECT  Q.CNTR_TPSZ_CD ,( Q.OP_CNTR_QTY * D.COMM_FX_AMT ) AS REAL_FX_AMT
                   ,Q.OP_CNTR_QTY  ,D.COMM_FX_AMT,D.AGN_AGMT_NO ,D.AGN_AGMT_SEQ
        
             ,( 
             SELECT CASE WHEN COUNT(*) = 0 THEN 1 ELSE 0 END 	
               FROM ACM_SIM_AGMT_DTL_CNTR C
              WHERE 1=1
                AND D.AGN_CD      = C.AGN_CD
                AND D.AGN_AGMT_NO = C.AGN_AGMT_NO
                AND D.IO_BND_CD   = C.IO_BND_CD
                AND D.AC_TP_CD    = C.AC_TP_CD
                AND D.AGN_AGMT_SEQ= C.AGN_AGMT_SEQ
            )AS CNTR_NON_EXISTS_SCORE
            ,(
             SELECT CASE WHEN COUNT(*) > 0 THEN 2 ELSE 0 END 
               FROM ACM_SIM_AGMT_DTL_CNTR C
              WHERE 1=1
                AND D.AGN_CD      = C.AGN_CD
                AND D.AGN_AGMT_NO = C.AGN_AGMT_NO
                AND D.IO_BND_CD   = C.IO_BND_CD
                AND D.AC_TP_CD    = C.AC_TP_CD
                AND D.AGN_AGMT_SEQ= C.AGN_AGMT_SEQ
                AND C.CNTR_TPSZ_CD= Q.CNTR_TPSZ_CD
            )AS CNTR_MAT_SCORE
            ,( SELECT CASE WHEN COUNT(1) = 0 THEN 1 ELSE 0 END 
               FROM ACM_SIM_AGMT_DTL_ROUT R
              WHERE 1=1
                AND D.AGN_CD      = R.AGN_CD
                AND D.AGN_AGMT_NO = R.AGN_AGMT_NO
                AND D.IO_BND_CD   = R.IO_BND_CD
                AND D.AC_TP_CD    = R.AC_TP_CD
                AND D.AGN_AGMT_SEQ= R.AGN_AGMT_SEQ
                AND LENGTH(R.ROUT_REF_DIV_CD) = 3
            )AS ROUTE_NON_EXISTS_SCORE
            ,( SELECT CASE WHEN COUNT(1) > 0 THEN COUNT(1) * 2 ELSE 0 END 
               FROM ACM_SIM_AGMT_DTL_ROUT R
              WHERE 1=1
                AND D.AGN_CD      = R.AGN_CD
                AND D.AGN_AGMT_NO = R.AGN_AGMT_NO
                AND D.IO_BND_CD   = R.IO_BND_CD
                AND D.AC_TP_CD    = R.AC_TP_CD
                AND D.AGN_AGMT_SEQ= R.AGN_AGMT_SEQ
                AND LENGTH(R.ROUT_REF_DIV_CD) = 3
                AND R.ROUT_INFO_CD = 
                    CASE 
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 1 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.CONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 2 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.SCONTI_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POR' THEN L1.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POL' THEN L2.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'POD' THEN L3.CNT_CD
                         WHEN R.ROUT_LVL_CD = 3 AND R.ROUT_REF_DIV_CD = 'DEL' THEN L4.CNT_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POR' THEN B.POR_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POL' THEN B.POL_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'POD' THEN B.POD_CD
                         WHEN R.ROUT_LVL_CD = 4 AND R.ROUT_REF_DIV_CD = 'DEL' THEN B.DEL_CD
                     END)AS ROUTE_MAT_SCORE
            , (SELECT COUNT(COUNT(ROUT_REF_DIV_CD)) * 2  -- ROUT_REF_DIV_CD 
                          FROM  ACM_SIM_AGMT_DTL_ROUT R
                          WHERE 1=1
                            AND R.AGN_CD       = D.AGN_CD 
                            AND R.AGN_AGMT_NO  = D.AGN_AGMT_NO 
                            AND R.IO_BND_CD    = D.IO_BND_CD 
                            AND R.AC_TP_CD     = D.AC_TP_CD 
                            AND R.AGN_AGMT_SEQ = D.AGN_AGMT_SEQ 
                            AND LENGTH(R.ROUT_REF_DIV_CD) = 3
                          GROUP BY ROUT_REF_DIV_CD 
                            )                                       AS ROUTE_TTL_SCORE
            --,D.*,Q.*
            FROM ACM_SIM_AGMT_DTL D--, BKG_QUANTITY Q
            , BKG_BOOKING B
            , MDM_LOCATION L1, MDM_LOCATION L2, MDM_LOCATION L3, MDM_LOCATION L4
            ,  (SELECT TRO.BKG_NO
                     , DECODE(SUBSTR(BC.CNTR_TPSZ_CD,0,1), 'R', DECODE(BC.RC_FLG, 'N', 'RD'||SUBSTR(BC.CNTR_TPSZ_CD,2), BC.CNTR_TPSZ_CD), BC.CNTR_TPSZ_CD) CNTR_TPSZ_CD
                     , BC.CNTR_VOL_QTY AS OP_CNTR_QTY
                     , TRO.COMM_OFC_CD     
                  FROM BKG_EUR_TRO TRO
                     , BKG_CONTAINER BC
                 WHERE 1=1
                   AND TRO.BKG_NO = @[bkg_no]
                   AND TRO.BKG_NO = BC.BKG_NO
                   AND TRO.CNTR_NO = BC.CNTR_NO
                   AND TRO.CNTR_TPSZ_CD = BC.CNTR_TPSZ_CD
                   AND TRO.CXL_FLG = 'N'
                ) Q
        
            WHERE 1=1
            AND D.AGN_CD      = @[agn_cd]
            AND D.AGN_AGMT_NO = @[agn_agmt_no]
            AND D.IO_BND_CD   = @[io_bnd_cd]
            AND D.AC_TP_CD    = @[ac_tp_cd]
            AND D.OFC_CVRG_CD = 'MH'
            AND NVL(D.COMM_FX_AMT,-1) <> -1 
            AND B.BKG_NO      = Q.BKG_NO 
            AND B.BKG_STS_CD <> 'X'
            AND B.BL_NO_TP   <> '9' 
            AND B.POR_CD = L1.LOC_CD
            AND B.POL_CD = L2.LOC_CD
            AND B.POD_CD = L3.LOC_CD
            AND B.DEL_CD = L4.LOC_CD
            AND Q.BKG_NO IN (
                            SELECT DISTINCT BKG_NO 
                              FROM BKG_BL_DOC 
                             WHERE BKG_NO = @[bkg_no] OR (BL_CVRD_TP_CD = 'C' AND MST_CVRD_BL_NO = @[bkg_no])
                             )
            AND Q.CNTR_TPSZ_CD NOT LIKE 'Q%'
            AND D.FULL_MTY_CD = @[full_mty_cd]
            AND D.OFC_CD = Q.COMM_OFC_CD -- MH 추가  
            AND D.OFC_CD = CASE WHEN @[ofc_chr_cd] IN (3,4)
                            THEN
                                CASE
        
                                    WHEN D.OFC_SET_TP_CD = 'B' AND D.IO_BND_CD = 'O' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'B' AND D.IO_BND_CD = 'I' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
                                    WHEN D.OFC_SET_TP_CD = 'C' THEN @[clt_ofc_cd]
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'O' THEN NVL(@[cn_ob_finc],@[cn_ob_ar]) -- Contract Office 추가
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'I' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])                          
                           
                                    WHEN D.OFC_SET_TP_CD = 'G' THEN @[chn_agn_cd]
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POR' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POL' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POD' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'DEL' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
        
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POR' THEN @[cn_ob_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POL' THEN @[cn_ob_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POD' THEN @[cn_ib_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'DEL' THEN @[cn_ib_ar]
        
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.IO_BND_CD = 'O' THEN NVL(@[cn_ob_finc],@[cn_ob_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.IO_BND_CD = 'I' THEN NVL(@[cn_ib_finc],@[cn_ib_ar])
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.IO_BND_CD = 'O' THEN @[cn_ob_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.IO_BND_CD = 'I' THEN @[cn_ib_ar]
                                    WHEN D.OFC_SET_TP_CD = 'R' AND D.OFC_CVRG_CD = 'MH' THEN @[comm_ofc_cd] -- MH
                                END
        
                            ELSE
                                CASE
        
                                    WHEN D.OFC_SET_TP_CD = 'B' THEN NVL(@[bkg_ofc],@[bkg_ar])
        
                                    WHEN D.OFC_SET_TP_CD = 'C' THEN @[clt_ofc_cd]
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'O' THEN NVL(@[bkg_ofc],@[bkg_ar])-- Contract Office 추가
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'I' AND D.OFC_CVRG_CD = 'PFO' THEN NVL(@[pod_finc],@[pod_ar])
                                    WHEN D.OFC_SET_TP_CD = 'T' AND D.IO_BND_CD = 'I' AND D.OFC_CVRG_CD = 'DFO' THEN NVL(@[del_finc],@[del_ar])

                                    WHEN D.OFC_SET_TP_CD = 'G' THEN @[chn_agn_cd]
        
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POR' THEN NVL(@[por_finc],@[por_ar]) -->  D.OFC_CD = :POR_FINC 조건 추가 이유 = POR_FINC 와 Match 되는 계약이 없을 경우는 POR_FINC 의 AR_OFC_CD 로 계약을 찾는다.
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POL' THEN NVL(@[pol_finc],@[pol_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'POD' THEN NVL(@[pod_finc],@[pod_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'DEL' THEN NVL(@[del_finc],@[del_ar])
        
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POR' THEN @[por_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POL' THEN @[pol_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'POD' THEN @[pod_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'DEL' THEN @[del_ar]
        
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'PRE' AND  @[vsl_pre_pst_cd] =  'S' THEN NVL(@[ts_finc],@[ts_ar])
                                    WHEN D.OFC_SET_TP_CD = 'F' AND D.OFC_CVRG_CD = 'PST' AND  @[vsl_pre_pst_cd] <> 'S' THEN NVL(@[ts_finc],@[ts_ar])
        
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'PRE' AND  @[vsl_pre_pst_cd] =  'S' THEN @[ts_ar]
                                    WHEN D.OFC_SET_TP_CD = 'A' AND D.OFC_CVRG_CD = 'PST' AND  @[vsl_pre_pst_cd] <> 'S' THEN @[ts_ar]
                                    WHEN D.OFC_SET_TP_CD = 'R' AND D.OFC_CVRG_CD = 'MH' THEN @[comm_ofc_cd] -- MH
                                END
                       END
        
            )I    
        )
        WHERE RNK = 1
          AND CNTR_MAT_SCORE <> 0
          AND (ROUTE_NON_EXISTS_SCORE <> 0 OR ROUTE_MAT_SCORE <> 0)
#end          
)			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="agn_cd" type="12" value="" out="N"/>
				<param name="agn_agmt_no" type="12" value="" out="N"/>
				<param name="io_bnd_cd" type="12" value="" out="N"/>
				<param name="ac_tp_cd" type="12" value="" out="N"/>
				<param name="full_mty_cd" type="12" value="" out="N"/>
				<param name="ofc_chr_cd" type="12" value="" out="N"/>
				<param name="cn_ob_finc" type="12" value="" out="N"/>
				<param name="cn_ob_ar" type="12" value="" out="N"/>
				<param name="cn_ib_finc" type="12" value="" out="N"/>
				<param name="cn_ib_ar" type="12" value="" out="N"/>
				<param name="clt_ofc_cd" type="12" value="" out="N"/>
				<param name="chn_agn_cd" type="12" value="" out="N"/>
				<param name="bkg_ofc" type="12" value="" out="N"/>
				<param name="bkg_ar" type="12" value="" out="N"/>
				<param name="pod_finc" type="12" value="" out="N"/>
				<param name="pod_ar" type="12" value="" out="N"/>
				<param name="del_finc" type="12" value="" out="N"/>
				<param name="del_ar" type="12" value="" out="N"/>
				<param name="por_finc" type="12" value="" out="N"/>
				<param name="por_ar" type="12" value="" out="N"/>
				<param name="pol_finc" type="12" value="" out="N"/>
				<param name="pol_ar" type="12" value="" out="N"/>
				<param name="vsl_pre_pst_cd" type="12" value="" out="N"/>
				<param name="ts_finc" type="12" value="" out="N"/>
				<param name="ts_ar" type="12" value="" out="N"/>
				<param name="comm_ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
