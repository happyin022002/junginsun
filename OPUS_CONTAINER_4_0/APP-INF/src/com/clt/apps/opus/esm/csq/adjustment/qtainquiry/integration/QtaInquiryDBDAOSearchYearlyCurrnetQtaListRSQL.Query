<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="QtaInquiryDBDAOSearchYearlyCurrnetQtaListRSQL">
			<desc><![CDATA[[QTA Inquiry_Yearly Overall (Currently Updated)]을 [조회] 합니다.]]></desc>
			<sql><![CDATA[
SELECT DISTINCT
         BSE_YR
        ,OFC_VW_CD
        ,RHQ_CD
        ,RGN_OFC_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,BSE_MON
        ,BSE_WK
        ,VVD
        ,FNL_BSA_CAPA
        ,ROUND(SUM(LOD_QTY))    AS LOD_QTY
        ,ROUND(SUM(G_REV))      AS G_REV
        ,ROUND(DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))) AS GRPB
        ,DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))        AS GRPB_DECIMAL
        ,ROUND(SUM(PA_CM_C))              AS PA_CM_C
        ,ROUND(SUM(RA_CM_C))              AS RA_CM_C
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, SUM(PA_CM_C) / SUM(LOD_QTY)))                AS PA_CMCB
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, SUM(RA_CM_C) / SUM(LOD_QTY)))                AS RA_CMCB
        ,ROUND(SUM(G_REV) - SUM(PA_CM_C)) AS PA_CM
        ,ROUND(SUM(G_REV) - SUM(RA_CM_C)) AS RA_CM
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(PA_CM_C)) / SUM(LOD_QTY))) AS PA_CMPB
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(RA_CM_C)) / SUM(LOD_QTY))) AS RA_CMPB
    FROM (
           SELECT Q.BSE_YR
                 ,DECODE(Q.OFC_VW_CD, 'L', 'Loading', 'Contract') AS OFC_VW_CD
                 ,Q.TRD_CD
                 ,T.SUB_TRD_CD
                 ,Q.RLANE_CD
                 ,Q.DIR_CD
#if (${f_ofc_lvl} == '01')
                 ,'' AS RHQ_CD
                 ,'' AS RGN_OFC_CD
#elseif (${f_ofc_lvl} == '02')   
                 ,Q.RHQ_CD
                 ,'' AS RGN_OFC_CD
#elseif (${f_ofc_lvl} == '03') 
                 ,Q.RHQ_CD
                 ,Q.RGN_OFC_CD
#end
#if(${f_chk_week} == 'W' && ${f_chk_vvd} == 'V')
                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, T.BSE_WK, Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD) AS FNL_BSA_CAPA
#elseif (${f_chk_week} == 'W')
                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, T.BSE_WK) AS FNL_BSA_CAPA
#elseif (${f_chk_vvd} == 'V')
                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD) AS FNL_BSA_CAPA
#else
                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON) AS FNL_BSA_CAPA
#end
                 ,T.BSE_MON
#if(${f_chk_week} != 'W')
                 ,'' AS BSE_WK
#else
                 ,T.BSE_WK
#end
#if(${f_chk_vvd} != 'V')
                 ,'' AS VVD
#else
                 ,Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD AS VVD
#end
                 ,Q.LOD_QTY
                 ,Q.LOD_QTY * Q.GRS_RPB_REV AS G_REV
                 ,Q.LOD_QTY * Q.PA_CM_UC_AMT       AS PA_CM_C
                 ,Q.LOD_QTY * Q.RA_CM_UC_AMT       AS RA_CM_C
             FROM CSQ_CFM_QTA     Q
                 ,CSQ_CFM_TGT_VVD T
                 ,(
                     SELECT MAX(T.QTA_RLSE_VER_NO) AS QTA_RLSE_VER_NO
                           ,MIN(T.BSE_TP_CD)       AS BSE_TP_CD
                           ,MAX(T.BSE_YR)          AS BSE_YR
                           ,MAX(T.BSE_QTR_CD)      AS BSE_QTR_CD
                           ,MIN(T.QTA_TGT_CD)      AS QTA_TGT_CD
                           ,T.BSE_MON
                           ,T.BSE_WK
                       FROM CSQ_QTA_RLSE_VER V
                           ,CSQ_CFM_TGT_VVD  T
                      WHERE V.BSE_YR          = @[f_bse_yr]
                        AND V.CSQ_VER_STS_CD  = 'R'
#if (${f_year_tp_cd} == 'I')
                        AND V.BSE_TP_CD       = @[f_bse_tp_cd]
#end
                        AND V.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO
                        AND V.BSE_TP_CD       = T.BSE_TP_CD
                        AND V.BSE_YR          = T.BSE_YR
                        AND V.BSE_QTR_CD      = T.BSE_QTR_CD
                        AND T.QTA_TGT_CD      = 'D'		-- 고정
                   GROUP BY T.BSE_YR
                           ,T.BSE_MON
                           ,T.BSE_WK
                   ORDER BY T.BSE_MON
                           ,T.BSE_WK
                  ) V
            WHERE Q.QTA_RLSE_VER_NO = V.QTA_RLSE_VER_NO
              AND Q.BSE_TP_CD       = V.BSE_TP_CD
              AND Q.BSE_YR          = V.BSE_YR
              AND Q.BSE_QTR_CD      = V.BSE_QTR_CD
              AND Q.OFC_VW_CD       = @[f_ofc_vw_cd]
              AND Q.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO
              AND Q.BSE_TP_CD       = T.BSE_TP_CD
              AND Q.BSE_YR          = T.BSE_YR
              AND Q.BSE_QTR_CD      = T.BSE_QTR_CD
              AND Q.QTA_TGT_CD      = T.QTA_TGT_CD
              AND Q.TRD_CD          = T.TRD_CD
              AND Q.RLANE_CD        = T.RLANE_CD
              AND Q.DIR_CD          = T.DIR_CD
              AND Q.VSL_CD          = T.VSL_CD
              AND Q.SKD_VOY_NO      = T.SKD_VOY_NO
              AND Q.SKD_DIR_CD      = T.SKD_DIR_CD

              AND T.QTA_TGT_CD      = V.QTA_TGT_CD
              AND T.BSE_MON         = V.BSE_MON
              AND T.BSE_WK          = V.BSE_WK
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
              AND Q.TRD_CD          = @[f_trd_cd]
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
              AND Q.RLANE_CD        = @[f_rlane_cd]
#end
#if (${f_gubun} != 'on' && ${f_dir_cd} != '' && ${f_dir_cd} != 'All')
              AND Q.DIR_CD          = @[f_dir_cd]
#end
#if (${f_ofc_lvl} != '01' && ${f_rhq_cd} != '' && ${f_rhq_cd} != 'All')
              AND Q.RHQ_CD          = @[f_rhq_cd]
#end
#if (${f_ofc_lvl} == '03' && ${f_rgn_ofc_cd} != '' && ${f_rgn_ofc_cd} != 'All')
              AND Q.RGN_OFC_CD      = @[f_rgn_ofc_cd]
#end
#if (${f_fm_mon} != '' && ${f_to_mon} != '')
              AND T.BSE_MON BETWEEN @[f_fm_mon] AND @[f_to_mon]
#end
#if (${f_fm_wk} != '' && ${f_to_wk} != '')
              AND T.BSE_WK  BETWEEN @[f_fm_wk] AND @[f_to_wk]
#end
#if (${f_chk_aloc_qta} != '')
              AND Q.CSQ_CNG_TP_CD   = @[f_chk_aloc_qta]
#end
         )
GROUP BY BSE_YR
        ,OFC_VW_CD
        ,RHQ_CD
        ,RGN_OFC_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD 
        ,BSE_MON
        ,BSE_WK
        ,VVD
        ,FNL_BSA_CAPA
#if (${excel_flg} == 'Y') 
HAVING SUM(LOD_QTY) <> 0
#end
ORDER BY RHQ_CD
        ,RGN_OFC_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,BSE_MON
        ,BSE_WK			]]></sql>
			<params>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_ofc_vw_cd" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_rhq_cd" type="12" value="" out="N"/>
				<param name="f_rgn_ofc_cd" type="12" value="" out="N"/>
				<param name="f_fm_mon" type="12" value="" out="N"/>
				<param name="f_to_mon" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_to_wk" type="12" value="" out="N"/>
				<param name="f_chk_aloc_qta" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
