<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="Eur24ManifestDownloadDBDAOSearchBlInfoRSQL">
			<desc><![CDATA[EAM_BKG_1107에 사용되는 SQL]]></desc>
			<sql><![CDATA[
SELECT
 BKG_GET_TOKEN_FNC(ERR_YNS,1) AS ERR_YN
,BKG_GET_TOKEN_FNC(ERR_YNS,2) AS ENS_EDI_SVC_FLG
,BKG_GET_TOKEN_FNC(ERR_YNS,3) AS DR_YN
,BKG_GET_TOKEN_FNC(ERR_YNS,4) AS ATA_YN
,BKG_GET_TOKEN_FNC(ERR_YNS,5) AS ARN_YN
,BKG_GET_TOKEN_FNC(ERR_YNS,6) AS TRSM_VAL
,KKK.* 
FROM (

SELECT
/************************** 에러 BL여부 체크 ***********************/
  (
        SELECT 
                DECODE( INSTR(SH_NM||SH_AD||SH_CT||SH_CN||SH_ZIP||SH_STR||SH_EORI
                    ||CNEE_NM||CNEE_AD||CNEE_CT||CNEE_CN||CNEE_ZIP||CNEE_STR||CNEE_EORI
                    ||NTFY_NM||NTFY_AD||NTFY_CT||NTFY_CN||NTFY_ZIP||NTFY_STR||NTFY_EORI
                    ||BL_PK||BL_WT||CNTR_PK||CNTR_WT||CM_PK||CM_WT||CM_DS||CM_HTS||CNTR_SEAL,'E'),0,'N','Y') 
        ||','|| BKG_GET_TOKEN_FNC(PORT_OFC.PORT_OFC_CD_SVC_FLG,2) 
        ||','||  CASE WHEN DR_YN1 = 'Y' OR DR_YN2 = 'Y' THEN 'Y' ELSE 'N' END 
        ||','|| ATA_YN 
        ||','|| ARN_YN
        ||','|| TRSM_VAL

        FROM (
        SELECT
       			CASE WHEN BL_PK1 = 0 OR BL_PK1 != CNTR_PK_SUM THEN DECODE(BB_CGO_FLG,'Y','N','E') ELSE 'Y' END AS BL_PK
			   ,CASE WHEN BL_WT1 = 0 OR BL_WT1 != CNTR_WT_SUM THEN DECODE(BB_CGO_FLG,'Y','N','E') ELSE 'Y' END AS BL_WT
		
		       ,CASE WHEN CNTR_PK1 = 0 OR CNTR_PK1 != CM_PK_SUM THEN DECODE(BB_CGO_FLG,'Y','N','E') ELSE 'Y' END AS CNTR_PK
		       ,CASE WHEN CNTR_WT1 = 0 OR CNTR_WT1 != CM_WT_SUM THEN DECODE(BB_CGO_FLG,'Y','N','E') ELSE 'Y' END AS CNTR_WT

               ,(SELECT CASE WHEN NVL(TO_DATE(XXX.CSTMS_ESTM_ARR_DT,'YYYY-MM-DD HH24:MI'), TO_DATE(XXX.INIT_ETA_DT,'YYYY-MM-DD HH24:MI')) 
                                    < GLOBALDATE_PKG.TIME_CONV_FNC('KRPUS',SYSDATE-30,XXX.EU_1ST_PORT)
                              THEN 'Y'
                              ELSE 'N'
                         END
                    FROM DUAL
                ) AS TRSM_VAL

               ,NVL((SELECT 'Y'
                       FROM  BKG_CSTMS_ADV_EUR_RCV RCV
                      WHERE 1=1
                        AND  ACK_RCV_STS_CD  = 'A'
                        AND RCV. RCV_TMS = (  SELECT MAX(RCV_TMS)
                        						FROM BKG_CSTMS_ADV_EUR_SND A, BKG_CSTMS_ADV_EUR_RCV B
                                               WHERE A.EUR_EDI_MSG_TP_ID ='DIV'
                                                 AND A.VSL_CD            = XXX.VSL_CD
                                                 AND A.SKD_VOY_NO        = XXX.SKD_VOY_NO
                                                 AND A.SKD_DIR_CD        = XXX.SKD_DIR_CD
                                                 AND A.CSTMS_PORT_CD     = XXX.EU_1ST_PORT
                                                 AND A.MSG_SND_NO = B.MSG_RCV_NO
                                                 AND (ACK_KND_ID != 'S'
                                                      OR ACK_RCV_STS_CD != 'A')
                                              )
                         AND ROWNUM =1
                      ),'N') AS DR_YN1
               ,NVL( ( SELECT 'Y'
                         FROM BKG_CSTMS_EUR_VSL EVSL
                        WHERE EVSL.VSL_CD        = XXX.VSL_CD
                          AND EVSL.SKD_VOY_NO    = XXX.SKD_VOY_NO
                          AND EVSL.SKD_DIR_CD    = XXX.SKD_DIR_CD
                          AND EVSL.CSTMS_PORT_CD = XXX.EU_1ST_PORT
                          AND DVS_RQST_SMT_FLG   = 'Y'
                       ),'N') AS DR_YN2
			   ,DECODE( ROWNUM,1,( SELECT CASE WHEN  NVL(MAX(ACT.ACT_ARR_DT),TO_DATE(XXX.VPS_ETA_DT,'YYYY-MM-DD HH24:MI')) <= GLOBALDATE_PKG.TIME_CONV_FNC('KRPUS', SYSDATE, XXX.EU_1ST_PORT) THEN 'Y' 
                                ELSE 'N'
                           END  /* 새로운 POFE에서의 Actual ETA 이후에는 전송 안됨, DOWNLOAD 데이타만 적용 */
                      FROM VSK_ACT_PORT_SKD ACT
                     WHERE VSL_CD      = XXX.VSL_CD
                       AND SKD_VOY_NO  = XXX.SKD_VOY_NO
                       AND SKD_DIR_CD  = XXX.SKD_DIR_CD
                       AND VPS_PORT_CD = XXX.EU_1ST_PORT
                       AND ROWNUM = 1
                   )
				) AS ATA_YN
			,NVL( ( SELECT 'Y'
				      FROM BKG_CSTMS_ADV_EUR_RCV RCV
				     WHERE 1=1
				       AND ACK_RCV_STS_CD  = 'A'
				       AND RCV. RCV_TMS = (  SELECT MAX(RCV_TMS)
							  				   FROM BKG_CSTMS_ADV_EUR_SND A, BKG_CSTMS_ADV_EUR_RCV B
										      WHERE A.EUR_EDI_MSG_TP_ID ='ARN'
				                    			AND A.VSL_CD            = XXX.VSL_CD
							                    AND A.SKD_VOY_NO        = XXX.SKD_VOY_NO
							                    AND A.SKD_DIR_CD        = XXX.SKD_DIR_CD
				        			            AND A.CSTMS_PORT_CD     = XXX.EU_1ST_PORT
				                    			AND A.MSG_SND_NO = B.MSG_RCV_NO
							                    AND (ACK_KND_ID != 'S' OR ACK_RCV_STS_CD != 'A')
							              )
				      AND ROWNUM =1
				),'N') AS ARN_YN
               , XXX.*
        FROM (
        SELECT 
	   	        DECODE(CM_PK1,0,DECODE(BB_CGO_FLG,'Y','N','E'),'Y') AS CM_PK
			  , DECODE(CM_WT1,0,DECODE(BB_CGO_FLG,'Y','N','E'),'Y') AS CM_WT 
 
              , SUM(CNTR_PK1) OVER(PARTITION BY BL_NO) AS  CNTR_PK_SUM
              , SUM(CNTR_WT1) OVER(PARTITION BY BL_NO) AS  CNTR_WT_SUM
              
              , SUM(CM_PK1) OVER(PARTITION BY BL_NO,CNTR_CNTR_NO) AS  CM_PK_SUM
              , SUM(CM_WT1) OVER(PARTITION BY BL_NO,CNTR_CNTR_NO) AS  CM_WT_SUM
              
              , BKG_GET_TOKEN_FNC(XX.SND,1)  AS MSG_SND_NO
              , XX.*  
        FROM (
        SELECT 
                OPUSADM.BKG_GET_TOKEN_FNC(CM_DATA,1) AS CM_PK1
              , OPUSADM.BKG_GET_TOKEN_FNC(CM_DATA,2) AS CM_WT1
              , DECODE(OPUSADM.BKG_GET_TOKEN_FNC(CM_DATA,3),0,'N','Y') AS CM_MS
              , DECODE(NVL(OPUSADM.BKG_GET_TOKEN_FNC(CM_DATA,4),0),0,'E','Y') AS CM_DS
              , DECODE(NVL(OPUSADM.BKG_GET_TOKEN_FNC(CM_DATA,5),0),0,'N','Y') AS CM_MK
			  , CASE WHEN 
						(
							DECODE(NVL(OPUSADM.BKG_GET_TOKEN_FNC(TOT_CM_DATA,6),0),0,'N','Y') ='N' 
							OR NVL(OPUSADM.BKG_GET_TOKEN_FNC(TOT_CM_DATA,6),0) != NVL(OPUSADM.BKG_GET_TOKEN_FNC(TOT_CM_DATA,7),0)
						)
        			AND (SUBSTR(EU_1ST_PORT,1,2) = HTS_CNT_CD OR SUBSTR(POD,1,2) = HTS_CNT_CD OR SUBSTR(DEL,1,2) = HTS_CNT_CD) 
				THEN 'E'
				ELSE DECODE(NVL(OPUSADM.BKG_GET_TOKEN_FNC(TOT_CM_DATA,6),0),0,'N','Y')
				END CM_HTS
              ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_NM1,  'E','N',CNEE_NM1),CNEE_NM1)     AS CNEE_NM
              ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_AD1,  'E','N',CNEE_AD1),CNEE_AD1)     AS CNEE_AD
              ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_CT1,  'E','N',CNEE_CT1),CNEE_CT1)     AS CNEE_CT
              ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_CN1,  'E','N',CNEE_CN1),CNEE_CN1)     AS CNEE_CN
              ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_ZIP1, 'E','N',CNEE_ZIP1),CNEE_ZIP1)   AS CNEE_ZIP
              ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_STR1, 'E','N',CNEE_STR1),CNEE_STR1)   AS CNEE_STR
              ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_EORI1,'E','N',CNEE_EORI1),CNEE_EORI1) AS CNEE_EORI

              ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_NM1,DECODE(NTFY_NM1,  'E','N',NTFY_NM1))     AS NTFY_NM
              ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_AD1,DECODE(NTFY_AD1,  'E','N',NTFY_AD1))     AS NTFY_AD
              ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_CT1,DECODE(NTFY_CT1,  'E','N',NTFY_CT1))     AS NTFY_CT
              ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_CN1,DECODE(NTFY_CN1,  'E','N',NTFY_CN1))     AS NTFY_CN
              ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_ZIP1,DECODE(NTFY_ZIP1, 'E','N',NTFY_ZIP1))   AS NTFY_ZIP
              ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_STR1,DECODE(NTFY_STR1, 'E','N',NTFY_STR1))   AS NTFY_STR
              ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_EORI1,DECODE(NTFY_EORI1,'E','N',NTFY_EORI1)) AS NTFY_EORI
             , (SELECT EBL.MSG_SND_NO||','||TO_CHAR(SND.SND_DT  ,'YYYY-MM-DD HH24:MI')||','||TO_CHAR(SND.SND_GDT ,'YYYY-MM-DD HH24:MI')||','||SND.SND_USR_OFC_CD||','||EBL.MVMT_REF_NO||','||EBL.BL_NO
               FROM BKG_CSTMS_ADV_EUR_SND SND, BKG_CSTMS_EUR_BL EBL
               WHERE EBL.MSG_SND_NO    = SND.MSG_SND_NO(+)
                 AND EBL.VSL_CD        = X.VSL_CD
                 AND EBL.SKD_VOY_NO    = X.SKD_VOY_NO
                 AND EBL.SKD_DIR_CD    = X.SKD_DIR_CD
                 AND EBL.BL_NO         = X.BL_NO
                 AND EBL.CSTMS_PORT_CD = X.EU_1ST_PORT
              ) AS SND      
              , X.*
          FROM (         
                SELECT  
                    BL.VSL_CD || BL.SKD_VOY_NO || BL.SKD_DIR_CD AS VVD
                   ,BL.VSL_CD 
                   ,BL.SKD_VOY_NO 
                   ,BL.SKD_DIR_CD
                   ,BL.BL_NO   
                   ,BL.POD_CD AS POD
                   ,BL.DEL_CD AS DEL      
                   , BC.CNTR_NO AS CNTR_CNTR_NO
                   , DECODE(SHPR.CUST_NM,           NULL,'E','Y')	AS SH_NM
                   , DECODE(SHPR.CUST_ADDR,         NULL,'E','Y')	AS SH_AD
                   , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CUST_CTY_NM IS NULL
                               THEN 'E'
                          WHEN SHPR.CUST_CTY_NM IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END SH_CT
                   , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CSTMS_DECL_CNT_CD IS NULL
                               THEN 'E'
                          WHEN SHPR.CSTMS_DECL_CNT_CD IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END SH_CN
                   , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CUST_ZIP_ID IS NULL
                               THEN 'E'
                          WHEN SHPR.CUST_ZIP_ID IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END SH_ZIP
                   , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.EUR_CSTMS_ST_NM IS NULL
                               THEN 'E'
                          WHEN SHPR.EUR_CSTMS_ST_NM IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END SH_STR
                   , CASE WHEN SHPR.EORI_NO IS NOT NULL THEN 'Y'
                          WHEN SHPR.EORI_NO IS NULL 
                               AND (SHPR.CUST_CTY_NM IS NULL 
                                OR SHPR.CSTMS_DECL_CNT_CD IS NULL  
                                OR SHPR.CUST_ZIP_ID IS NULL )
                               THEN 'E'
                          ELSE 'N'
                     END SH_EORI
                              
                   , DECODE(CNEE.CUST_NM,           NULL,'E','Y')	AS CNEE_NM1
                   , DECODE(CNEE.CUST_ADDR,         NULL,'E','Y')	AS CNEE_AD1
                   , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CUST_CTY_NM IS NULL
                               THEN 'E'
                          WHEN CNEE.CUST_CTY_NM IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END CNEE_CT1
                   , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CSTMS_DECL_CNT_CD IS NULL
                               THEN 'E'
                          WHEN CNEE.CSTMS_DECL_CNT_CD IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END CNEE_CN1
                   , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CUST_ZIP_ID IS NULL
                               THEN 'E'
                          WHEN CNEE.CUST_ZIP_ID IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END CNEE_ZIP1
                   , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.EUR_CSTMS_ST_NM IS NULL
                               THEN 'E'
                          WHEN CNEE.EUR_CSTMS_ST_NM IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END CNEE_STR1
                   , CASE WHEN CNEE.EORI_NO IS NOT NULL THEN 'Y'
                          WHEN CNEE.EORI_NO IS NULL 
                               AND (CNEE.CUST_CTY_NM IS NULL 
                                 OR CNEE.CSTMS_DECL_CNT_CD IS NULL  
                                 OR CNEE.CUST_ZIP_ID IS NULL )
                               THEN 'E'
                          ELSE 'N'
                     END CNEE_EORI1       

                   , DECODE(NTFY.CUST_NM,           NULL,'E','Y')	AS NTFY_NM1
                   , DECODE(NTFY.CUST_ADDR,         NULL,'E','Y')	AS NTFY_AD1
                   , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CUST_CTY_NM IS NULL
                               THEN 'E'
                          WHEN NTFY.CUST_CTY_NM IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END NTFY_CT1
                   , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CSTMS_DECL_CNT_CD IS NULL
                               THEN 'E'
                          WHEN NTFY.CSTMS_DECL_CNT_CD IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END NTFY_CN1
                   , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CUST_ZIP_ID IS NULL
                               THEN 'E'
                          WHEN NTFY.CUST_ZIP_ID IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END NTFY_ZIP1
                   , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.EUR_CSTMS_ST_NM IS NULL
                               THEN 'E'
                          WHEN NTFY.EUR_CSTMS_ST_NM IS NOT NULL
                               THEN 'Y'
                          ELSE 'N'
                     END NTFY_STR1
                   , CASE WHEN NTFY.EORI_NO IS NOT NULL THEN 'Y'
                          WHEN NTFY.EORI_NO IS NULL 
                               AND (NTFY.CUST_CTY_NM IS NULL 
                                 OR NTFY.CSTMS_DECL_CNT_CD IS NULL  
                                 OR NTFY.CUST_ZIP_ID IS NULL )
                               THEN 'E'
                          ELSE 'N'
                     END NTFY_EORI1 
                   
                   , NVL(BL.PCK_QTY,0)	AS BL_PK1
                   , NVL(BL.ACT_WGT,0)	AS BL_WT1
                   
                   , NVL((SELECT 'Y'
                          FROM  BKG_CSTMS_EUR_SEAL_NO
                          WHERE VSL_CD        = BL.VSL_CD
                          AND   SKD_VOY_NO    = BL.SKD_VOY_NO
                          AND   SKD_DIR_CD    = BL.SKD_DIR_CD
                          AND   BL_NO         = BL.BL_NO
                          AND   CSTMS_PORT_CD = BL.CSTMS_PORT_CD
                          AND   CNTR_NO       = BC.CNTR_NO
                          AND   ROWNUM =1), 'E') AS CNTR_SEAL
                          
                   , NVL(BC.PCK_QTY,0)	AS CNTR_PK1
                   , NVL(BC.ACT_WGT,0)	AS CNTR_WT1
                   , DECODE(NVL(BC.MEAS_QTY,0), 0,'N','Y')	AS CNTR_MS
                   
                   , ( SELECT NVL(SUM(PCK_QTY ),0)    ||','|| /* PK */
                              NVL(SUM(CNTR_MF_WGT),0) ||','|| /* WT */
                              NVL(SUM(MEAS_QTY),0)    ||','|| /* MS */
                              COUNT(CNTR_MF_GDS_DESC)||','|| /* DS */
                              COUNT(CNTR_MF_MK_DESC) ||','|| /* MK */
							  COUNT(CMDT_HS_CD)              /* HTS*/
                       FROM BKG_CSTMS_EUR_CNTR_MF CM
                       WHERE VSL_CD        = BL.VSL_CD
                       AND   SKD_VOY_NO    = BL.SKD_VOY_NO
                       AND   SKD_DIR_CD    = BL.SKD_DIR_CD
                       AND   BL_NO         = BL.BL_NO
                       AND   CSTMS_PORT_CD = BL.CSTMS_PORT_CD
                       AND   CNTR_NO       = BC.CNTR_NO
                      ) AS CM_DATA    
                   , ( SELECT NVL(SUM(PCK_QTY ),0)    ||','|| /* PK */
                              NVL(SUM(CNTR_MF_WGT),0) ||','|| /* WT */
                              NVL(SUM(MEAS_QTY),0)    ||','|| /* MS */
                              COUNT(CNTR_MF_GDS_DESC)||','|| /* DS */
                              COUNT(CNTR_MF_MK_DESC) ||','|| /* MK */
							  COUNT(CMDT_HS_CD)      ||','|| /* HTS*/
							  COUNT(CNTR_CGO_SEQ)            /* CARGO SEQ */
                       FROM BKG_CSTMS_EUR_CNTR_MF CM
                       WHERE VSL_CD        = BL.VSL_CD
                       AND   SKD_VOY_NO    = BL.SKD_VOY_NO
                       AND   SKD_DIR_CD    = BL.SKD_DIR_CD
                       AND   BL_NO         = BL.BL_NO
                       AND   CSTMS_PORT_CD = BL.CSTMS_PORT_CD
                       --AND   CNTR_NO       = BC.CNTR_NO
                      ) AS TOT_CM_DATA    
           		   ,(SELECT ATTR_CTNT1
                    FROM BKG_CSTMS_CD_CONV_CTNT
                    WHERE CNT_CD= 'EU'
                    AND CSTMS_DIV_ID = 'EU_HS_CODE_CHECK'
                    AND DELT_FLG = 'N') HTS_CNT_CD
                   , BL.CSTMS_PORT_CD AS EU_1ST_PORT   
                   , BL.CSTMS_YD_CD   AS EU_1ST_PORT_YD_CD   

			   ,( SELECT TO_CHAR(VPS_ETA_DT,'YYYY-MM-DD HH24:MI')
			      FROM   VSK_VSL_PORT_SKD
			      WHERE  VSL_CD       = BL.VSL_CD
			      AND    SKD_VOY_NO   = BL.SKD_VOY_NO
		    	  AND    SKD_DIR_CD   = BL.SKD_DIR_CD
			      AND    VPS_PORT_CD  = BL.CSTMS_PORT_CD
			      AND    CLPT_IND_SEQ = 1
			     ) AS VPS_ETA_DT

               , ( SELECT TO_CHAR(INIT_ETA_DT, 'YYYY-MM-DD HH24:MI')
                    FROM VSK_VSL_PORT_SKD
                   WHERE VSL_CD       = BL.VSL_CD
                     AND SKD_VOY_NO   = BL.SKD_VOY_NO
                     AND SKD_DIR_CD   = BL.SKD_DIR_CD
                     AND VPS_PORT_CD  = BL.CSTMS_PORT_CD
                     AND CLPT_IND_SEQ = 1
                ) AS INIT_ETA_DT
                
               , TO_CHAR(BL.CSTMS_ESTM_ARR_DT,'YYYY-MM-DD HH24:MI') AS CSTMS_ESTM_ARR_DT

                   , BKG.CUST_TO_ORD_FLG
				   , BKG.BB_CGO_FLG
                FROM  BKG_CSTMS_EUR_BL BL
                   ,BKG_BOOKING BKG
                   ,BKG_CSTMS_EUR_CUST SHPR
                   ,BKG_CSTMS_EUR_CUST CNEE
                   ,BKG_CSTMS_EUR_CUST NTFY
                   ,BKG_CSTMS_EUR_CNTR BC 
                   ,BKG_CSTMS_ADV_EUR_SND SND
                WHERE  1=1
                AND BL.BL_NO        = BKG.BL_NO
                AND BL.VSL_CD        = SHPR.VSL_CD(+)
                AND BL.SKD_VOY_NO    = SHPR.SKD_VOY_NO(+)
                AND BL.SKD_DIR_CD    = SHPR.SKD_DIR_CD(+)
                AND BL.BL_NO         = SHPR.BL_NO(+)
                AND BL.CSTMS_PORT_CD = SHPR.CSTMS_PORT_CD(+)
                AND 'S'              = SHPR.BKG_CUST_TP_CD(+)
                
                AND BL.VSL_CD        = CNEE.VSL_CD(+)
                AND BL.SKD_VOY_NO    = CNEE.SKD_VOY_NO(+)
                AND BL.SKD_DIR_CD    = CNEE.SKD_DIR_CD(+)
                AND BL.BL_NO         = CNEE.BL_NO(+)
                AND BL.CSTMS_PORT_CD = CNEE.CSTMS_PORT_CD(+)
                AND 'C'              = CNEE.BKG_CUST_TP_CD(+)


                AND BL.VSL_CD        = NTFY.VSL_CD(+)
                AND BL.SKD_VOY_NO    = NTFY.SKD_VOY_NO(+)
                AND BL.SKD_DIR_CD    = NTFY.SKD_DIR_CD(+)
                AND BL.BL_NO         = NTFY.BL_NO(+)
                AND BL.CSTMS_PORT_CD = NTFY.CSTMS_PORT_CD(+)
                AND NTFY.BKG_CUST_TP_CD(+) = 'N'        

                AND BL.VSL_CD        = BC.VSL_CD(+)
                AND BL.SKD_VOY_NO    = BC.SKD_VOY_NO(+)
                AND BL.SKD_DIR_CD    = BC.SKD_DIR_CD(+)
                AND BL.BL_NO         = BC.BL_NO(+)
                AND BL.CSTMS_PORT_CD = BC.CSTMS_PORT_CD(+)

                AND BL.MSG_SND_NO    = SND.MSG_SND_NO(+)
                AND BL.VSL_CD        = SUBSTR(@[vvd],1,4)
                AND BL.SKD_VOY_NO    = SUBSTR(@[vvd],5,4)
                AND BL.SKD_DIR_CD    = SUBSTR(@[vvd],9,1)
                AND BL.CSTMS_PORT_CD = @[cstms_port_cd]
                AND BL.BL_NO =@[bl_no]

            ) X
          ) XX
         ) XXX
        ) Y 
    ,( SELECT ( SELECT EUR_CSTMS_OFC_ID||','||ENS_EDI_SVC_FLG
        FROM BKG_CSTMS_EUR_CD_STUP
        WHERE PORT_CD = @[cstms_port_cd]
        AND TML_CD IN ('ALL' , @[cstms_yd_cd])
        AND ROWNUM =1
        ) AS PORT_OFC_CD_SVC_FLG
        FROM DUAL
        ) PORT_OFC  

   WHERE ROWNUM=1
  ) AS ERR_YNS
/************************** 에러 BL여부 체크 끝***********************/
  ,(SELECT NVL(MVMT_REF_NO,'')
    FROM BKG_CSTMS_ADV_EUR_RCV
    WHERE MSG_RCV_NO = 
        (SELECT MAX(MSG_SND_NO) MSG_SND_NO
        FROM BKG_CSTMS_EUR_BL 
        WHERE BL_NO = @[bl_no]
        )
	AND EUR_EDI_MSG_TP_ID != 'S'
    AND ROWNUM = 1 
    ) RCV_MVMT_REF_NO
  , MVMT_REF_NO1 AS MVMT_REF_NO 
  , NVL(KTS_SEND_DT1,KTS_SEND_DT2)AS KTS_SEND_DT 
,KK.*
FROM (
SELECT BL.BL_NO,
  BL.CSTMS_PORT_CD,
  '' TYPE_CD,
  --SND.MSG_FUNC_ID,
  SND.VSL_CD,
  SND.SKD_VOY_NO,
  SND.SKD_DIR_CD,
  TO_CHAR(SND.SND_DT, 'YYYY-MM-DD HH24:MI-SS') SND_DT,
  
  NVL(BL.MVMT_REF_NO,( SELECT MVMT_REF_NO
								        FROM BKG_CSTMS_EUR_BL EBL
								       WHERE EBL.MSG_SND_NO    = (SELECT MAX(MSG_SND_NO) 
                                    							 	FROM BKG_CSTMS_ADV_EUR_SND
								                                   WHERE BL_NO          = BL.BL_NO
                                								     AND CSTMS_PORT_CD  = BL.CSTMS_PORT_CD
                                                    				 AND (VSL_CD != BL.VSL_CD OR SKD_VOY_NO != BL.SKD_VOY_NO OR SKD_DIR_CD != BL.SKD_DIR_CD)
									                               )
								      )
     ) AS MVMT_REF_NO1,
  DECODE(BL.MVMT_REF_NO,NULL,'N','Y') AS BL_MRN_YN,
  TO_CHAR(SND.CRE_DT,'YYYYMMDDHH24MI') AS KTS_SEND_DT1,
 (SELECT MAX(TO_CHAR(CRE_DT,'YYYYMMDDHH24')) 
    FROM BKG_CSTMS_ADV_EUR_SND  
   WHERE BL_NO          = BL.BL_NO
     AND CSTMS_PORT_CD  = BL.CSTMS_PORT_CD
  ) AS  KTS_SEND_DT2,

  BL.VSL_CD||BL.SKD_VOY_NO||BL.SKD_DIR_CD VVD,
  VSL.VSL_ENG_NM,
  VSL.LLOYD_NO,
  BKG.POR_CD,
  BL.BKG_POL_CD,
  BL.BKG_POD_CD,
  BKG.DEL_CD,
  BKG.RCV_TERM_CD,
  BKG.DE_TERM_CD,
  BL.PCK_QTY,
  BL.PCK_TP_CD,
  BL.ACT_WGT,
  BL.WGT_UT_CD,
  BL.MEAS_QTY,
  BL.MEAS_UT_CD,
  BL.CSTMS_DESC,
  BL.POL_CD,
  BL.POD_CD,
  BL.POL_NM,
  BL.POD_NM,
  BL.DEL_NM,
  BL.CMDT_CD,
  BL.TRSP_DOC_NO,
  BL.CSTMS_DECL_DT,
  BL.DECL_LOC_CD,
  BL.MSG_SND_NO,
  BL.POL_YD_CD,
  BL.POD_YD_CD,
  Y.RESULT MSG_FUNC_ID
  , NVL((SELECT 'N' 
           FROM BKG_VVD BV
          WHERE 1=1
            AND BV.BKG_NO     = BKG.BKG_NO
            AND BV.VSL_CD     = BL.VSL_CD
            AND BV.SKD_VOY_NO = BL.SKD_VOY_NO
            AND BV.SKD_DIR_CD = BL.SKD_DIR_CD
            AND BV.POL_CD     = BL.POL_CD
            AND BV.POD_CD     = BL.POD_CD
        ), 'Y') AS TRSM_BLCK_FLG
	    ,NVL((SELECT 'Y'  
      		  FROM BKG_CSTMS_CD_CONV_CTNT
              WHERE CNT_CD = 'EU'
      		  AND CSTMS_DIV_ID = 'EU_STF'
              AND DELT_FLG = 'N'
              AND ATTR_CTNT1 = @[account]
              AND ROWNUM = 1), 'N') AS EU_STF_FLG
FROM BKG_CSTMS_EUR_BL BL, BKG_CSTMS_ADV_EUR_SND SND, MDM_VSL_CNTR VSL, BKG_BOOKING BKG,
(SELECT 
CASE 
    WHEN ACK_CD = 'A' THEN 'Accepted' ||DECODE(ACK_KND_ID, 'S', '(S)') 
    WHEN ACK_CD = 'R' AND RESULT_CD ='351' THEN 'Do Not Load' ||DECODE(ACK_KND_ID, 'S', '(S)') 
    WHEN ACK_CD = 'R' THEN 'Rejected' ||DECODE(ACK_KND_ID, 'S', '(S)') 
    WHEN ACK_CD = 'H' THEN 'Hold'       ||DECODE(ACK_KND_ID,'S','(S)')
    WHEN ACK_CD = 'L' THEN 'Release'    ||DECODE(ACK_KND_ID,'S','(S)')
    WHEN ACK_CD = 'CA' THEN 'Add Info.' ||DECODE(ACK_KND_ID, 'S', '(S)')
    WHEN ACK_CD = 'AL' THEN 'Accepted with loading permission' ||DECODE(ACK_KND_ID, 'S', '(S)')
    WHEN ACK_CD = 'R' AND RESULT_CD ='398' THEN 'Cancellation' ||DECODE(ACK_KND_ID, 'S', '(S)')
    WHEN ACK_CD = 'D' THEN 'Relase rejection' ||DECODE(ACK_KND_ID, 'S', '(S)') 
    WHEN MSG_SND_NO IS NOT NULL AND RCV IS NULL THEN 'Not Received' END 
        AS RESULT
FROM (
    SELECT X.RCV,
      X.MSG_SND_NO,
      COUNT(MSG_SND_NO) OVER() AS SENT_BL_CNT ,
      BKG_GET_TOKEN_FNC(RCV, 2) AS EDI_RCV_SEQ ,
      BKG_GET_TOKEN_FNC(RCV, 3) AS ACK_CD ,
      BKG_GET_TOKEN_FNC(RCV, 5) AS RESULT_CD ,
      BKG_GET_TOKEN_FNC(RCV, 6) AS ACK_KND_ID
    FROM ( 
        SELECT 
          A.MSG_SND_NO ,
          (
            SELECT EDI_RCV_DT||','||EDI_RCV_SEQ||','|| ACK_RCV_STS_CD||','|| TO_CHAR(CRE_DT, 'YYYY-MM-DD HH24:MI')||','||EUR_CSTMS_ACK_CD||','||ACK_KND_ID
            FROM BKG_CSTMS_ADV_EUR_RCV
            WHERE RCV_TMS = (
                SELECT MAX(RCV_TMS)
                FROM BKG_CSTMS_ADV_EUR_RCV
                WHERE MSG_RCV_NO = SND.MSG_SND_NO
                  AND (ACK_KND_ID != 'S' OR ACK_RCV_STS_CD != 'A') ) ) RCV
        FROM BKG_CSTMS_EUR_BL A, BKG_CSTMS_ADV_EUR_SND SND
        WHERE A.MSG_SND_NO = SND.MSG_SND_NO(+)
          AND A.VSL_CD = SUBSTR(@[vvd], 1, 4)
          AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
          AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
          AND A.CSTMS_PORT_CD = @[cstms_port_cd]
          AND A.BL_NO = @[bl_no] ) X )) Y
WHERE BL.BL_NO = SND.BL_NO(+)
  AND BKG.BL_NO = BL.BL_NO
  AND BL.VSL_CD = VSL.VSL_CD
  AND BL.VSL_CD = SND.VSL_CD(+)
  AND BL.SKD_VOY_NO = SND.SKD_VOY_NO(+)
  AND BL.SKD_DIR_CD = SND.SKD_DIR_CD(+)
  AND BL.MSG_SND_NO = SND.MSG_SND_NO(+)
  AND BL.BL_NO = @[bl_no]
  AND BL.VSL_CD = SUBSTR(@[vvd], 1, 4)
  AND BL.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
  AND BL.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
  AND BL.CSTMS_PORT_CD = @[cstms_port_cd]
  AND BL.ROWID = (
    SELECT ROWID
    FROM (
        SELECT ROWID
        FROM BKG_CSTMS_EUR_BL A
        WHERE A.VSL_CD = SUBSTR(@[vvd], 1, 4)
          AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
          AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
          AND A.CSTMS_PORT_CD = @[cstms_port_cd]
          AND A.BL_NO =  @[bl_no])
    WHERE ROWNUM = 1)

) KK
) KKK			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="cstms_port_cd" type="12" value="" out="N"/>
				<param name="bl_no" type="12" value="" out="N"/>
				<param name="cstms_yd_cd" type="12" value="" out="N"/>
				<param name="account" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
