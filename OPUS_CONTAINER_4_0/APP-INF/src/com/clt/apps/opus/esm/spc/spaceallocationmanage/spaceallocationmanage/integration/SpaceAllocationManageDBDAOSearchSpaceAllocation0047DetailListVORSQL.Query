<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpaceAllocationManageDBDAOSearchSpaceAllocation0047DetailListVORSQL">
			<desc><![CDATA[SpaceAllocationManage의 데이타 모델에 해당되는 값을 불러온다.]]></desc>
			<sql><![CDATA[
WITH base_key AS (
    SELECT @[year]       AS YEAR      ,
           @[week]       AS WEEK      ,
           @[office]     AS RHQ_CD    ,
           @[lane]       AS RLANE_CD  ,
           @[bound]      AS DIR_CD    ,
           @[vsl_cd]     AS VSL_CD    ,
           @[skd_voy_no] AS SKD_VOY_NO,
           @[skd_dir_cd] AS SKD_DIR_CD,
           @[fcast]      AS FCAST     ,
           L.CONTI_CD    AS OFC_CONTI ,
           O.OFC_CD      AS OFC_CD
      FROM MDM_LOCATION     L,
           MDM_ORGANIZATION O
     WHERE L.LOC_CD = O.LOC_CD
       AND O.OFC_CD = @[office]
)
, BASE AS (
    SELECT B.YEAR,
           B.WEEK,
           SUBSTR(T.SLS_YRMON, 1, 4) AS COST_YR,
           SUBSTR(T.SLS_YRMON, 5)    AS MON    ,
           T.COST_WK   ,
           B.RHQ_CD    ,
           T.TRD_CD    ,
           B.RLANE_CD  ,
           B.DIR_CD    ,
           B.VSL_CD    ,
           B.SKD_VOY_NO,
           B.SKD_DIR_CD,
           B.FCAST     ,
           NVL((O.CTRL_PORT_FLG)   , 'N') AS POL_POD,
           NVL((O.CTRL_40FT_HC_FLG), 'N') AS HC40   ,
           NVL((O.CTRL_45FT_HC_FLG), 'N') AS HC45   ,
           NVL((O.CTRL_53FT_FLG)   , 'N') AS HC53   ,
           NVL((O.CTRL_RF_FLG)     , 'N') AS REEFER ,
           NVL((O.CTRL_WGT_FLG)    , 'N') AS WEIGHT ,
           NVL((O.CTRL_SPC_FLG)    , 'N') AS VOLUME ,
           B.OFC_CD   ,
           B.OFC_CONTI
      FROM COA_MON_VVD       T,
           BASE_KEY          B,
           SPC_ALOC_CTRL_OPT O
     WHERE T.RLANE_CD      = B.RLANE_CD
       AND T.VSL_CD        = B.VSL_CD
       AND T.SKD_VOY_NO    = B.SKD_VOY_NO
       AND T.DIR_CD        = B.DIR_CD
       AND O.RLANE_CD  (+) = B.RLANE_CD
       AND O.DIR_CD    (+) = B.DIR_CD
       AND O.VSL_CD    (+) = B.VSL_CD
       AND O.SKD_VOY_NO(+) = B.SKD_VOY_NO
       AND O.SKD_DIR_CD(+) = B.SKD_DIR_CD
       AND T.TRD_CD        = SAQ_GET_REP_TRD_FNC(B.RLANE_CD)
       AND SUBSTR(T.SLS_YRMON, 1, 4)||T.COST_WK = B.YEAR||B.WEEK
)
, REP_VVDS AS (
    SELECT V.TRD_CD     AS REP_TRD_CD    ,
           V.SUB_TRD_CD AS REP_SUB_TRD_CD,
           V.RLANE_CD,
           V.DIR_CD  ,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ,
           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON,
           V.COST_WK   ,
           V.VSL_CD    ,
           V.SKD_VOY_NO,
           V.DIR_CD AS SKD_DIR_CD,
           V.LST_LODG_PORT_CD    ,
           V.LST_LODG_PORT_ETD_DT,
           P.OFC_CD   ,
           P.OFC_CONTI,
           '1' AS STS
      FROM COA_MON_VVD V,
           BASE_KEY    P
     WHERE V.TRD_CD     = SAQ_GET_REP_TRD_FNC(V.RLANE_CD)
       AND V.SUB_TRD_CD = SAQ_GET_REP_SUB_TRD_FNC(V.RLANE_CD)
       AND V.VSL_CD     = P.VSL_CD
       AND V.SKD_VOY_NO = P.SKD_VOY_NO
       AND V.DIR_CD     = P.SKD_DIR_CD
       AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1
                                                                 FROM COA_MON_VVD N
                                                                WHERE N.SLAN_CD    = SUBSTR(V.RLANE_CD, 1, 3)
                                                                  AND N.VSL_CD      = V.VSL_CD
                                                                  AND N.SKD_VOY_NO = V.SKD_VOY_NO
                                                                  AND N.DIR_CD     = V.DIR_CD
                                                                  AND N.DELT_FLG   = 'N' ))
)
, PORT_SKD AS (
    SELECT V.VSL_CD       ,
           V.SKD_VOY_NO   ,
           V.SKD_DIR_CD   ,
           VPS.VPS_PORT_CD,
           VPS.YD_CD      ,
           VPS.CLPT_SEQ   ,
           VPS.CLPT_SEQ AS PORT_SEQ,
           VPS.VPS_ETD_DT ,
           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MAX_SEQ
      FROM MDM_LOCATION     L  ,
           VSK_VSL_PORT_SKD VPS,
           REP_VVDS         V
     WHERE L.LOC_CD       = VPS.VPS_PORT_CD
       AND VPS.VSL_CD     = V.VSL_CD
       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO
       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD
)
, VSL_PORT_SKD AS (
    SELECT RLANE_CD  ,
           DIR_CD    ,
           RHQ_CD    ,
           VSL_CD    ,
           SKD_VOY_NO,
           SKD_DIR_CD,
           COST_YR_WK,
           POL_CD    ,
           POD_CD    ,
           MAX(POL_SEQ) AS POL_SEQ,
           MIN(POD_SEQ) AS POD_SEQ,
           POL_CONTI,
           IOC_CD   ,
           PAST     ,
           POL_POD  ,
           HC40     ,
           HC45     ,
           HC53     ,
           REEFER   ,
           WEIGHT   ,
           VOLUME   ,
           OFC_CD   ,
           OFC_CONTI
      FROM (
              SELECT V.RLANE_CD  ,
                     V.DIR_CD    ,
                     V.RHQ_CD    ,
                     V.VSL_CD    ,
                     V.SKD_VOY_NO,
                     V.SKD_DIR_CD,
                     V.COST_YR||V.COST_WK          AS COST_YR_WK,
                     NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD    ,
                     NVL(S2.YD_CD, S2.VPS_PORT_CD) AS POD_CD    ,
                     S1.CLPT_SEQ AS POL_SEQ,
                     S2.CLPT_SEQ AS POD_SEQ,
                     L1.CONTI_CD AS POL_CONTI,
                     ( SELECT L.CONTI_CD
                         FROM MDM_LOCATION L
                        WHERE L.LOC_CD = S2.VPS_PORT_CD
                     ) AS POD_CONTI,
                     SAQ_GET_OCN_IPC_FNC(V.RLANE_CD, S1.VPS_PORT_CD, S2.VPS_PORT_CD) AS IOC_CD,
                     (DECODE(V.FCAST, '1', CASE
                                                WHEN S1.VPS_ETD_DT < GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), S1.VPS_PORT_CD ) THEN 'Y'
                                                                                                                                                         ELSE 'N'
                                            END, '2', 'N', '3', 'Y')
                     ) AS PAST,
                     POL_POD ,
                     HC40    ,
                     HC45    ,
                     HC53    ,
                     REEFER  ,
                     WEIGHT  ,
                     VOLUME  ,
                     V.OFC_CD,
                     V.OFC_CONTI
                FROM BASE         V ,
                     PORT_SKD     S1,
                     PORT_SKD     S2,
                     MDM_LOCATION L1
               WHERE S1.VSL_CD      = V.VSL_CD
                 AND S1.SKD_VOY_NO  = V.SKD_VOY_NO
                 AND S1.SKD_DIR_CD  = V.SKD_DIR_CD
                 AND S1.VSL_CD      = S2.VSL_CD
                 AND S1.SKD_VOY_NO  = S2.SKD_VOY_NO
                 AND S1.SKD_DIR_CD  = S2.SKD_DIR_CD
                 AND (    S1.PORT_SEQ = S1.MAX_SEQ   -- 단독 CALLING 또는 DOUBLE CALLING 인데 마지막 PORT 경우는 모두
                       OR S2.PORT_SEQ < S1.MAX_SEQ ) -- DOUBLE CALLING PORT중 POD 가 LAST DOUBLE CALLING PORT 보다 앞인 경우만 FILTERING
                 AND S1.VPS_PORT_CD = L1.LOC_CD
              UNION ALL
              SELECT V.RLANE_CD  ,
                     V.DIR_CD    ,
                     V.RHQ_CD    ,
                     V.VSL_CD    ,
                     V.SKD_VOY_NO,
                     V.SKD_DIR_CD,
                     V.COST_YR||V.COST_WK AS COST_YR_WK,
                     '0000000' AS POL_CD   ,
                     '0000000' AS POD_CD   ,
                     0         AS POL_SEQ  ,
                     0         AS POD_SEQ  ,
                     ' '       AS POL_CONTI,
                     ''        AS POD_CONTI,
                     DECODE(SUBSTR(V.TRD_CD, 0, 1), 'I', 'I', 'O') AS IOC_CD,
                     DECODE(V.FCAST, '1', '', '2', 'N', '3', 'Y')  AS PAST  ,
                     POL_POD,
                     HC40   ,
                     HC45   ,
                     HC53    ,
                     REEFER ,
                     WEIGHT ,
                     VOLUME ,
                     OFC_CD ,
                     OFC_CONTI
                FROM BASE V
           ) Z
  GROUP BY RLANE_CD  ,
           DIR_CD    ,
           RHQ_CD    ,
           VSL_CD    ,
           SKD_VOY_NO,
           SKD_DIR_CD,
           COST_YR_WK,
           POL_CD    ,
           POD_CD    ,
           POL_CONTI ,
           POD_CONTI ,
           IOC_CD    ,
           PAST      ,
           POL_POD   ,
           HC40      ,
           HC45      ,
           HC53      ,
           REEFER    ,
           WEIGHT    ,
           VOLUME    ,
           OFC_CD    ,
           OFC_CONTI
)
  SELECT MAX(TRD_CD)     AS TRD_CD    ,
         MAX(SUB_TRD_CD) AS SUB_TRD_CD,
         BASE_RHQ_CD,
         RHQ_CD     ,
         IOC_CD     ,
         NVL(OFC_CD, '+') AS OFC_CD   ,
         NVL(POL_CD, '+') AS POL_CD   ,
         NVL(POD_CD, '+') AS POD_CD   ,
         SUM(BKG_QUOTA)   AS BKG_QUOTA,
         (
           SELECT (BAR.BKG_REV - BAR.ESTM_CM_COST_AMT) / BAR.BKG_TTL_QTY
             FROM SPC_BKG_AVG_REV BAR,
                  BASE_KEY        P
            WHERE BAR.OFC_KND_CD IN ('1', '3')
              AND BAR.RLANE_CD    = P.RLANE_CD
              AND BAR.DIR_CD      = P.DIR_CD
              AND BAR.SLS_OFC_CD  = NVL(NVL(Z.OFC_CD, Z.RHQ_CD), '00000')
              AND BAR.TS_FLG      = DECODE(SUBSTR(Z.IOC_CD, LENGTH(Z.IOC_CD) - 2), 'T/S', 'Y', 'N')
              AND BAR.IOC_CD      = DECODE(SUBSTR(Z.IOC_CD, LENGTH(Z.IOC_CD) - 2), 'OCN', 'O', 'I')
              AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
              AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
              AND BAR.TRD_CD     <> 'IAS'
         ) AS CMB,
         DECODE(SUM(CMB2), 0, 0, SUM(CMB1) / SUM(CMB2)) AS FCT_CMB,
         (SUM(DECODE(@[fcast], '2', NVL(FC_TEU, 0) + NVL(FC_HC, 0) * 2 + NVL(FC_45, 0) * 2 + NVL(FC_53, 0) * 2,
                               '3', NVL(FC_TEU, 0),
                               '1', DECODE(PAST, 'Y', NVL(FC_TEU, 0), NVL(FC_TEU, 0) + NVL(FC_HC, 0) * 2 + NVL(FC_45, 0) * 2 + NVL(FC_53, 0) * 2)))
         ) AS FC_TTL_TEU,
         SUM(FC_TEU) AS FC_TEU,
         SUM(FC_20)  AS FC_20 ,
         SUM(FC_40)  AS FC_40 ,
         SUM(FC_HC)  AS FC_HC ,
         SUM(FC_45)  AS FC_45 ,
         SUM(FC_53)  AS FC_53 ,
         SUM(FC_RF)  AS FC_RF ,
         SUM(FC_WGT) AS FC_WGT,
         SUM(UG_TEU) AS UG_TEU,
         SUM(UG_20)  AS UG_20 ,
         SUM(UG_40)  AS UG_40 ,
         SUM(UG_HC)  AS UG_HC ,
         SUM(UG_45)  AS UG_45 ,
         SUM(UG_53)  AS UG_53 ,
         SUM(UG_RF)  AS UG_RF ,
         SUM(UG_WGT) AS UG_WGT,
         SUM(MR_TEU) AS MR_TEU,
         SUM(MR_20)  AS MR_20 ,
         SUM(MR_40)  AS MR_40 ,
         SUM(MR_HC)  AS MR_HC ,
         SUM(MR_45)  AS MR_45 ,
         SUM(MR_53)  AS MR_53 ,
         SUM(MR_RF)  AS MR_RF ,
         SUM(MR_WGT) AS MR_WGT,
         SUM(AP_TEU) AS AP_TEU,
         SUM(AP_20)  AS AP_20 ,
         SUM(AP_40)  AS AP_40 ,
         SUM(AP_HC)  AS AP_HC ,
         SUM(AP_45)  AS AP_45 ,
         SUM(AP_53)  AS AP_53 ,
         SUM(AP_RF)  AS AP_RF ,
         SUM(AP_WGT) AS AP_WGT,
         SUM(BK_TEU) AS BK_TEU,
         SUM(BK_20)  AS BK_20 ,
         SUM(BK_40)  AS BK_40 ,
         SUM(BK_HC)  AS BK_HC ,
         SUM(BK_45)  AS BK_45 ,
         SUM(BK_53)  AS BK_53 ,
         SUM(BK_RF)  AS BK_RF ,
         SUM(BK_WGT) AS BK_WGT,
         SUM(BT_TEU) AS BT_TEU,
         SUM(BT_20)  AS BT_20 ,
         SUM(BT_40)  AS BT_40 ,
         SUM(BT_HC)  AS BT_HC ,
         SUM(BT_45)  AS BT_45 ,
         SUM(BT_53)  AS BT_53 ,
         SUM(BT_RF)  AS BT_RF ,
         SUM(BT_WGT) AS BT_WGT,
         SUM(GT_TEU) AS GT_TEU,
         SUM(GT_20)  AS GT_20 ,
         SUM(GT_40)  AS GT_40 ,
         SUM(GT_HC)  AS GT_HC ,
         SUM(GT_45)  AS GT_45 ,
         SUM(GT_53)  AS GT_53 ,
         SUM(GT_RF)  AS GT_RF ,
         SUM(GT_WGT) AS GT_WGT,
         SUM(AP_MD)  AS AP_MD ,
         MIN(PAST)   AS PAST  ,
         'Y' AS EDIT,
         COUNT(DISTINCT DECODE(POL_CD||POD_CD, '0000000000', NULL, POL_CD||POD_CD)) + DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, '00000', NULL, POL_CD)), 0) AS CHILD_CNT,
         COUNT(DISTINCT DECODE(POL_CD||POD_CD, '0000000000', NULL, POL_CD||POD_CD)) AS LEAF_CNT,
         DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, '00000', NULL, POL_CD)), 0) AS POD_CNT,
         NVL(MAX(CFM_FLG), 'N') AS CFM_FLG,
         ( CASE
                WHEN POL_CD IS NULL AND POD_CD IS NULL AND OFC_CD IS NOT NULL THEN MAX(SPC_CTRL_ALOC_RMK)
                                                                              ELSE NULL
            END
         ) AS SPC_CTRL_ALOC_RMK,
         ( CASE
                WHEN POL_CD IS NOT NULL AND POD_CD IS NULL THEN MAX(SPC_CTRL_ALOC_POL_RMK)
                                                           ELSE NULL
            END
         ) AS SPC_CTRL_ALOC_POL_RMK,
         ( CASE
                WHEN POD_CD IS NOT NULL THEN MAX(SPC_CTRL_ALOC_POD_RMK)
                                        ELSE NULL
            END
         ) AS SPC_CTRL_ALOC_POD_RMK
    FROM (
            SELECT MAX(TRD_CD)     AS TRD_CD    ,
                   MAX(SUB_TRD_CD) AS SUB_TRD_CD,
                   U.BASE_RHQ_CD,
                   U.RHQ_CD     ,
                   U.IOC_CD     ,
                   U.OFC_CD     ,
                   U.POL_CD     ,
                   U.POD_CD     ,
                   U.POL_SEQ    ,
                   U.POD_SEQ    ,
                   SUM(U.BKG_QUOTA) AS BKG_QUOTA,
                   SUM(U.CMB1) AS CMB1  ,
                   SUM(CMB2)   AS CMB2  ,
                   SUM(FC_TEU) AS FC_TEU,
                   SUM(FC_20)  AS FC_20 ,
                   SUM(FC_40)  AS FC_40 ,
                   SUM(FC_HC)  AS FC_HC ,
                   SUM(FC_45)  AS FC_45 ,
                   SUM(FC_53)  AS FC_53 ,
                   SUM(FC_RF)  AS FC_RF ,
                   SUM(FC_WGT) AS FC_WGT,
                   SUM(UG_TEU) AS UG_TEU,
                   SUM(UG_20)  AS UG_20 ,
                   SUM(UG_40)  AS UG_40 ,
                   SUM(UG_HC)  AS UG_HC ,
                   SUM(UG_45)  AS UG_45 ,
                   SUM(UG_53)  AS UG_53 ,
                   SUM(UG_RF)  AS UG_RF ,
                   SUM(UG_WGT) AS UG_WGT,
                   SUM(MR_TEU) AS MR_TEU,
                   SUM(MR_20)  AS MR_20 ,
                   SUM(MR_40)  AS MR_40 ,
                   SUM(MR_HC)  AS MR_HC ,
                   SUM(MR_45)  AS MR_45 ,
                   SUM(MR_53)  AS MR_53 ,
                   SUM(MR_RF)  AS MR_RF ,
                   SUM(MR_WGT) AS MR_WGT,
                   SUM(AP_TEU) AS AP_TEU,
                   SUM(AP_20)  AS AP_20 ,
                   SUM(AP_40)  AS AP_40 ,
                   SUM(AP_HC)  AS AP_HC ,
                   SUM(AP_45)  AS AP_45 ,
                   SUM(AP_53)  AS AP_53 ,
                   SUM(AP_RF)  AS AP_RF ,
                   SUM(AP_WGT) AS AP_WGT,
                   SUM(BK_TEU) AS BK_TEU,
                   SUM(BK_20)  AS BK_20 ,
                   SUM(BK_40)  AS BK_40 ,
                   SUM(BK_HC)  AS BK_HC ,
                   SUM(BK_45)  AS BK_45 ,
                   SUM(BK_53)  AS BK_53 ,
                   SUM(BK_RF)  AS BK_RF ,
                   SUM(BK_WGT) AS BK_WGT,
                   SUM(BT_TEU) AS BT_TEU,
                   SUM(BT_20)  AS BT_20 ,
                   SUM(BT_40)  AS BT_40 ,
                   SUM(BT_HC)  AS BT_HC ,
                   SUM(BT_45)  AS BT_45 ,
                   SUM(BT_53)  AS BT_53 ,
                   SUM(BT_RF)  AS BT_RF ,
                   SUM(BT_WGT) AS BT_WGT,
                   SUM(GT_TEU) AS GT_TEU,
                   SUM(GT_20)  AS GT_20 ,
                   SUM(GT_40)  AS GT_40 ,
                   SUM(GT_HC)  AS GT_HC ,
                   SUM(GT_45)  AS GT_45 ,
                   SUM(GT_53)  AS GT_53 ,
                   SUM(GT_RF)  AS GT_RF ,
                   SUM(GT_WGT) AS GT_WGT,
                   SUM(DECODE(FLG, 103, 1, 203, 1, 0)) AS AP_MD,
                   PAST,
                   DECODE(POD_CD, '00000', DECODE(SUM(UG_WGT), 0, MAX(CFM_FLG), MIN(CFM_FLG))) AS CFM_FLG,
                   MAX(SPC_CTRL_ALOC_RMK)     AS SPC_CTRL_ALOC_RMK    ,
                   MAX(SPC_CTRL_ALOC_POL_RMK) AS SPC_CTRL_ALOC_POL_RMK,
                   MAX(SPC_CTRL_ALOC_POD_RMK) AS SPC_CTRL_ALOC_POD_RMK
              FROM (
                      -- Trunk Forecast
                      SELECT 101 AS FLG,
                             T.TRD_CD    ,
                             T.SUB_TRD_CD,
                             B.RHQ_CD     AS BASE_RHQ_CD,
                             T.SLS_RHQ_CD AS RHQ_CD     ,
                             DECODE(T.IOC_TS_CD, 'O', 'OCN', 'I', 'IPC', '') AS IOC_CD,
                             T.SLS_RGN_OFC_CD AS OFC_CD,
                             B.POL_CD ,
                             B.POD_CD ,
                             B.POL_SEQ,
                             B.POD_SEQ,
                             0 AS BKG_QUOTA,
                             0 AS CMB1     ,
                             0 AS CMB2     ,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_TTL_QTY)) AS FC_TEU,
                             0 AS FC_20,
                             0 AS FC_40,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_40FT_HC_QTY)) AS FC_HC ,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_45FT_HC_QTY)) AS FC_45 ,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_53FT_QTY))    AS FC_53 ,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_RF_QTY))      AS FC_RF ,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_TTL_WGT))     AS FC_WGT,
                             0 AS UG_TEU,
                             0 AS UG_20 ,
                             0 AS UG_40 ,
                             0 AS UG_HC ,
                             0 AS UG_45 ,
                             0 AS UG_53 ,
                             0 AS UG_RF ,
                             0 AS UG_WGT,
                             0 AS MR_TEU,
                             0 AS MR_20 ,
                             0 AS MR_40 ,
                             0 AS MR_HC ,
                             0 AS MR_45 ,
                             0 AS MR_53 ,
                             0 AS MR_RF ,
                             0 AS MR_WGT,
                             0 AS AP_TEU,
                             0 AS AP_20 ,
                             0 AS AP_40 ,
                             0 AS AP_HC ,
                             0 AS AP_45 ,
                             0 AS AP_53 ,
                             0 AS AP_RF ,
                             0 AS AP_WGT,
                             0 AS BK_TEU,
                             0 AS BK_20 ,
                             0 AS BK_40 ,
                             0 AS BK_HC ,
                             0 AS BK_45 ,
                             0 AS BK_53 ,
                             0 AS BK_RF ,
                             0 AS BK_WGT,
                             0 AS BT_TEU,
                             0 AS BT_20 ,
                             0 AS BT_40 ,
                             0 AS BT_HC ,
                             0 AS BT_45 ,
                             0 AS BT_53 ,
                             0 AS BT_RF ,
                             0 AS BT_WGT,
                             0 AS GT_TEU,
                             0 AS GT_20 ,
                             0 AS GT_40 ,
                             0 AS GT_HC ,
                             0 AS GT_45 ,
                             0 AS GT_53 ,
                             0 AS GT_RF ,
                             0 AS GT_WGT,
                             B.PAST,
                             NULL AS CFM_FLG              ,
                             NULL AS SPC_CTRL_ALOC_RMK    ,
                             NULL AS SPC_CTRL_ALOC_POL_RMK,
                             NULL AS SPC_CTRL_ALOC_POD_RMK
                        FROM SPC_DLY_FCAST_CUST T,
                             VSL_PORT_SKD       B
                       WHERE T.RLANE_CD   = B.RLANE_CD
                         AND T.DIR_CD     = B.DIR_CD
                         AND T.VSL_CD     = B.VSL_CD
                         AND T.SKD_VOY_NO = B.SKD_VOY_NO
                         AND T.SKD_DIR_CD = B.SKD_DIR_CD
                         AND SUBSTR(T.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD
                         AND SUBSTR(T.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD
                         AND (T.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI) 
                         AND T.IOC_TS_CD IN ('I','O')
                         AND NVL(T.CFM_TTL_QTY,0) + NVL(T.CFM_TTL_WGT,0) > 0
                    GROUP BY T.TRD_CD        ,
                             T.SUB_TRD_CD    ,
                             B.RHQ_CD        ,
                             T.SLS_RHQ_CD    ,
                             T.SLS_RGN_OFC_CD,
                             B.POL_CD        ,
                             B.POD_CD        ,
                             B.POL_SEQ       ,
                             B.POD_SEQ       ,
                             T.IOC_TS_CD     ,
                             B.PAST
                      UNION ALL
                      SELECT 103 AS FLG,
                             D.TRD_CD    ,
                             D.SUB_TRD_CD,
                             B.RHQ_CD     AS BASE_RHQ_CD,
                             D.SLS_RHQ_CD AS RHQ_CD     ,
                             DECODE(D.MNL_FLG, 'Y', 'T-','')||DECODE(D.IOC_CD,'O','OCN','I','IPC','') AS IOC_CD,
                             D.SLS_RGN_OFC_CD AS OFC_CD,
                             B.POL_CD ,
                             B.POD_CD ,
                             B.POL_SEQ,
                             B.POD_SEQ,
                             0 AS BKG_QUOTA,
                             0 AS CMB1     ,
                             0 AS CMB2     ,
                             0 AS FC_TEU   ,
                             0 AS FC_20    ,
                             0 AS FC_40    ,
                             0 AS FC_HC    ,
                             0 AS FC_45    ,
                             0 AS FC_53    ,
                             0 AS FC_RF    ,
                             0 AS FC_WGT   ,
                             0 AS UG_TEU   ,
                             0 AS UG_20    ,
                             0 AS UG_40    ,
                             0 AS UG_HC    ,
                             0 AS UG_45    ,
                             0 AS UG_53    ,
                             0 AS UG_RF    ,
                             0 AS UG_WGT   ,
                             0 AS MR_TEU   ,
                             0 AS MR_20    ,
                             0 AS MR_40    ,
                             0 AS MR_HC    ,
                             0 AS MR_45    ,
                             0 AS MR_53    ,
                             0 AS MR_RF    ,
                             0 AS MR_WGT   ,
                             D.ASGN_TTL_QTY     AS AP_TEU,
                             D.ASGN_20FT_QTY    AS AP_20 ,
                             D.ASGN_40FT_QTY    AS AP_40 ,
                             D.ASGN_40FT_HC_QTY AS AP_HC ,
                             D.ASGN_45FT_HC_QTY AS AP_45 ,
                             D.ASGN_53FT_QTY    AS AP_53 ,
                             D.ASGN_RF_QTY      AS AP_RF ,
                             D.ASGN_TTL_WGT     AS AP_WGT,
                             0 BK_TEU,
                             0 BK_20 ,
                             0 BK_40 ,
                             0 BK_HC ,
                             0 BK_45 ,
                             0 BK_53 ,
                             0 BK_RF ,
                             0 BK_WGT,
                             0 BT_TEU,
                             0 BT_20 ,
                             0 BT_40 ,
                             0 BT_HC ,
                             0 BT_45 ,
                             0 BT_53 ,
                             0 BT_RF ,
                             0 BT_WGT,
                             0 GT_TEU,
                             0 GT_20 ,
                             0 GT_40 ,
                             0 GT_HC ,
                             0 GT_45 ,
                             0 GT_53 ,
                             0 GT_RF ,
                             0 GT_WGT,
                             B.PAST,
                             NULL AS CFM_FLG,
                             D.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ,
                             D.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK,
                             D.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK
                        FROM SPC_ALOC_POL_POD D,
                             VSL_PORT_SKD     B
                       WHERE D.RLANE_CD   = B.RLANE_CD
                         AND D.DIR_CD     = B.DIR_CD
                         AND D.VSL_CD     = B.VSL_CD
                         AND D.SKD_VOY_NO = B.SKD_VOY_NO
                         AND D.SKD_DIR_CD = B.SKD_DIR_CD
                         AND SUBSTR(D.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD
                         AND SUBSTR(D.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD
                         AND (D.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI)
                         AND D.TS_FLG     = 'N'
                         AND D.SLS_OFC_CD = D.SLS_RGN_OFC_CD
                      UNION ALL
                      SELECT FLG        ,
                             TRD_CD     ,
                             SUB_TRD_CD ,
                             BASE_RHQ_CD,
                             RHQ_CD     ,
                             IOC_CD     ,
                             OFC_CD     ,
                             POL_CD     ,
                             POD_CD     ,
                             POL_SEQ    ,
                             POD_SEQ    ,
                             BKG_QUOTA  ,
                             CMB1       ,
                             CMB2       ,
                             SUM(FC_TEU) AS FC_TEU,
                             SUM(FC_20)  AS FC_20 ,
                             SUM(FC_40)  AS FC_40 ,
                             SUM(FC_HC)  AS FC_HC ,
                             SUM(FC_45)  AS FC_45 ,
                             SUM(FC_53)  AS FC_53 ,
                             SUM(FC_RF)  AS FC_RF ,
                             SUM(FC_WGT) AS FC_WGT,
                             UG_TEU,
                             UG_20 ,
                             UG_40 ,
                             UG_HC ,
                             UG_45 ,
                             UG_53 ,
                             UG_RF ,
                             UG_WGT,
                             MR_TEU,
                             MR_20 ,
                             MR_40 ,
                             MR_HC ,
                             MR_45 ,
                             MR_53 ,
                             MR_RF ,
                             MR_WGT,
                             AP_TEU,
                             AP_20 ,
                             AP_40 ,
                             AP_HC ,
                             AP_45 ,
                             AP_53 ,
                             AP_RF ,
                             AP_WGT,
                             SUM(BK_TEU) AS BK_TEU,
                             SUM(BK_20)  AS BK_20 ,
                             SUM(BK_40)  AS BK_40 ,
                             SUM(BK_HC)  AS BK_HC ,
                             SUM(BK_45)  AS BK_45 ,
                             SUM(BK_53)  AS BK_53 ,
                             SUM(BK_RF)  AS BK_RF ,
                             SUM(BK_WGT) AS BK_WGT,
                             SUM(BT_TEU) AS BT_TEU,
                             SUM(BT_20)  AS BT_20 ,
                             SUM(BT_40)  AS BT_40 ,
                             SUM(BT_HC)  AS BT_HC ,
                             SUM(BT_45)  AS BT_45 ,
                             SUM(BT_53)  AS BT_53 ,
                             SUM(BT_RF)  AS BT_RF ,
                             SUM(BT_WGT) AS BT_WGT,
                             GT_TEU ,
                             GT_20  ,
                             GT_40  ,
                             GT_HC  ,
                             GT_45  ,
                             GT_53  ,
                             GT_RF  ,
                             GT_WGT ,
                             PAST   ,
                             CFM_FLG,
                             SPC_CTRL_ALOC_RMK    ,
                             SPC_CTRL_ALOC_POL_RMK,
                             SPC_CTRL_ALOC_POD_RMK
                        FROM (
                                SELECT /*+ OPT_PARAM('_COMPLEX_VIEW_MERGING', 'FALSE') */
                                       104 AS FLG,
                                       D.TRD_CD    ,
                                       D.SUB_TRD_CD,
                                       B.RHQ_CD     AS BASE_RHQ_CD,
                                       D.SLS_RHQ_CD AS RHQ_CD     ,
                                       DECODE(D.VSL_PRE_PST_CD, 'T', DECODE(D.BKG_CGO_TP_CD, 'P', 'EQ', DECODE(D.IOC_CD, 'O', 'OCN', 'I', 'IPC', '')), 'T/S') AS IOC_CD,
                                       D.SLS_RGN_OFC_CD AS OFC_CD,
                                       B.POL_CD ,
                                       B.POD_CD ,
                                       B.POL_SEQ,
                                       B.POD_SEQ,
                                       0 AS BKG_QUOTA,
                                       0 AS CMB1     ,
                                       0 AS CMB2     ,
                                       DECODE(B.PAST, 'N', 0, D.BKG_TTL_QTY)     AS FC_TEU,
                                       DECODE(B.PAST, 'N', 0, D.BKG_20FT_QTY)    AS FC_20 ,
                                       DECODE(B.PAST, 'N', 0, D.BKG_40FT_QTY)    AS FC_40 ,
                                       DECODE(B.PAST, 'N', 0, D.BKG_40FT_HC_QTY) AS FC_HC ,
                                       DECODE(B.PAST, 'N', 0, D.BKG_45FT_HC_QTY) AS FC_45 ,
                                       DECODE(B.PAST, 'N', 0, D.BKG_53FT_QTY)    AS FC_53 ,
                                       DECODE(B.PAST, 'N', 0, D.BKG_RF_QTY)      AS FC_RF ,
                                       DECODE(B.PAST, 'N', 0, D.BKG_TTL_WGT)     AS FC_WGT,
                                       0 AS UG_TEU,
                                       0 AS UG_20 ,
                                       0 AS UG_40 ,
                                       0 AS UG_HC ,
                                       0 AS UG_45 ,
                                       0 AS UG_53 ,
                                       0 AS UG_RF ,
                                       0 AS UG_WGT,
                                       0 AS MR_TEU,
                                       0 AS MR_20 ,
                                       0 AS MR_40 ,
                                       0 AS MR_HC ,
                                       0 AS MR_45 ,
                                       0 AS MR_53 ,
                                       0 AS MR_RF ,
                                       0 AS MR_WGT,
                                       0 AS AP_TEU,
                                       0 AS AP_20 ,
                                       0 AS AP_40 ,
                                       0 AS AP_HC ,
                                       0 AS AP_45 ,
                                       0 AS AP_53 ,
                                       0 AS AP_RF ,
                                       0 AS AP_WGT,
                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_TTL_QTY)     AS BK_TEU,
                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_20FT_QTY)    AS BK_20 ,
                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_40FT_QTY)    AS BK_40 ,
                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_40FT_HC_QTY) AS BK_HC ,
                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_45FT_HC_QTY) AS BK_45 ,
                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_53FT_QTY)    AS BK_53 ,
                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_RF_QTY)      AS BK_RF ,
                                       DECODE(D.BKG_STS_CD, 'F', D.BKG_TTL_WGT)     AS BK_WGT,
                                       D.BKG_TTL_QTY     AS BT_TEU,
                                       D.BKG_20FT_QTY    AS BT_20 ,
                                       D.BKG_40FT_QTY    AS BT_40 ,
                                       D.BKG_40FT_HC_QTY AS BT_HC ,
                                       D.BKG_45FT_HC_QTY AS BT_45 ,
                                       D.BKG_53FT_QTY    AS BT_53 ,
                                       D.BKG_RF_QTY      AS BT_RF ,
                                       D.BKG_TTL_WGT     AS BT_WGT,
                                       0 AS GT_TEU,
                                       0 AS GT_20 ,
                                       0 AS GT_40 ,
                                       0 AS GT_HC ,
                                       0 AS GT_45 ,
                                       0 AS GT_53 ,
                                       0 AS GT_RF ,
                                       0 AS GT_WGT,
                                       B.PAST,
                                       NULL AS CFM_FLG,
                                       NULL AS SPC_CTRL_ALOC_RMK    ,
                                       NULL AS SPC_CTRL_ALOC_POL_RMK,
                                       NULL AS SPC_CTRL_ALOC_POD_RMK
                                  FROM SPC_BKG_V    D,
                                       VSL_PORT_SKD B
                                 WHERE D.RLANE_CD         = B.RLANE_CD
                                   AND D.DIR_CD           = B.DIR_CD
                                   AND D.VSL_CD           = B.VSL_CD
                                   AND D.SKD_VOY_NO       = B.SKD_VOY_NO
                                   AND D.SKD_DIR_CD       = B.SKD_DIR_CD
                                   AND D.POL_CD           = SUBSTR(B.POL_CD, 1, 5)
                                   AND D.POD_CD           = SUBSTR(B.POD_CD, 1, 5)
                                   AND (D.VSL_PRE_PST_CD  = 'T' OR B.POL_CONTI <> 'A')
                                   AND D.BKG_CGO_TP_CD   IN ('F', 'B', 'R')
                                   AND D.BKG_STS_CD      IN ('F', 'W')
                                   AND D.RLANE_CD        <> 'RBCCO'
                                   AND ((D.VSL_PRE_PST_CD = 'T' AND (D.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI)) OR (D.VSL_PRE_PST_CD <> 'T' AND ((D.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI))))
                             )
                    GROUP BY FLG        ,
                             TRD_CD     ,
                             SUB_TRD_CD ,
                             BASE_RHQ_CD,
                             RHQ_CD     ,
                             IOC_CD     ,
                             OFC_CD     ,
                             POL_CD     ,
                             POD_CD     ,
                             POL_SEQ    ,
                             POD_SEQ    ,
                             BKG_QUOTA  ,
                             CMB1       ,
                             CMB2       ,
                             UG_TEU     ,
                             UG_20      ,
                             UG_40      ,
                             UG_HC      ,
                             UG_45      ,
                             UG_53      ,
                             UG_RF      ,
                             UG_WGT     ,
                             MR_TEU     ,
                             MR_20      ,
                             MR_40      ,
                             MR_HC      ,
                             MR_45      ,
                             MR_53      ,
                             MR_RF      ,
                             MR_WGT     ,
                             AP_TEU     ,
                             AP_20      ,
                             AP_40      ,
                             AP_HC      ,
                             AP_45      ,
                             AP_53      ,
                             AP_RF      ,
                             AP_WGT     ,
                             GT_TEU     ,
                             GT_20      ,
                             GT_40      ,
                             GT_HC      ,
                             GT_45      ,
                             GT_53      ,
                             GT_RF      ,
                             GT_WGT     ,
                             PAST       ,
                             CFM_FLG    ,
                             SPC_CTRL_ALOC_RMK    ,
                             SPC_CTRL_ALOC_POL_RMK,
                             SPC_CTRL_ALOC_POD_RMK
                      UNION ALL
                      -- Booking Quota
                      SELECT 106 AS FLG,
                             MQ.TRD_CD,
                             ''        AS SUB_TRD_CD ,
                             M.RHQ_CD  AS BASE_RHQ_CD,
                             MQ.RHQ_CD AS RHQ_CD     ,
                             DECODE(SUBSTR(MQ.TRD_CD, 1, 1), 'I', 'IPC', 'OCN') AS IOC_CD,
                             NVL(O.CONV_RGN_OFC_CD, MQ.RGN_OFC_CD) AS OFC_CD,
                             MQ.POL_CD  ,
                             MQ.POD_CD  ,
                             VPS.POL_SEQ,
                             VPS.POD_SEQ,
                             ROUND(SUM(MQ.LOD_QTY)) AS BKG_QUOTA,
                             0 AS CMB1  ,
                             0 AS CMB2  ,
                             0 AS FC_TEU,
                             0 AS FC_20 ,
                             0 AS FC_40 ,
                             0 AS FC_HC ,
                             0 AS FC_45 ,
                             0 AS FC_53 ,
                             0 AS FC_RF ,
                             0 AS FC_WGT,
                             0 AS UG_TEU,
                             0 AS UG_20 ,
                             0 AS UG_40 ,
                             0 AS UG_HC ,
                             0 AS UG_45 ,
                             0 AS UG_53 ,
                             0 AS UG_RF ,
                             0 AS UG_WGT,
                             0 AS MR_TEU,
                             0 AS MR_20 ,
                             0 AS MR_40 ,
                             0 AS MR_HC ,
                             0 AS MR_45 ,
                             0 AS MR_53 ,
                             0 AS MR_RF ,
                             0 AS MR_WGT,
                             0 AS AP_TEU,
                             0 AS AP_20 ,
                             0 AS AP_40 ,
                             0 AS AP_HC ,
                             0 AS AP_45 ,
                             0 AS AP_53 ,
                             0 AS AP_RF ,
                             0 AS AP_WGT,
                             0 AS BK_TEU,
                             0 AS BK_20 ,
                             0 AS BK_40 ,
                             0 AS BK_HC ,
                             0 AS BK_45 ,
                             0 AS BK_53 ,
                             0 AS BK_RF ,
                             0 AS BK_WGT,
                             0 AS BT_TEU,
                             0 AS BT_20 ,
                             0 AS BT_40 ,
                             0 AS BT_HC ,
                             0 AS BT_45 ,
                             0 AS BT_53 ,
                             0 AS BT_RF ,
                             0 AS BT_WGT,
                             0 AS GT_TEU,
                             0 AS GT_20 ,
                             0 AS GT_40 ,
                             0 AS GT_HC ,
                             0 AS GT_45 ,
                             0 AS GT_53 ,
                             0 AS GT_RF ,
                             0 AS GT_WGT,
                             NVL(VPS.PAST, 'N') AS PAST,
                             NULL AS CFM_FLG,
                             NULL AS SPC_CTRL_ALOC_RMK    ,
                             NULL AS SPC_CTRL_ALOC_POL_RMK,
                             NULL AS SPC_CTRL_ALOC_POD_RMK
                        FROM BASE             M  ,
                             VSL_PORT_SKD     VPS,
                             SAQ_MON_CFM_QTA  MQ ,
                             SAQ_MON_QTA_RLSE MQR,
                             SPC_RGN_OFC_CONV O
                       WHERE MQR.BSE_YR          = M.YEAR
                         AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(M.MON) / 3)||'Q'
                         AND MQR.QTA_RLSE_STS_CD = 'R'
                         AND MQ.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO
                         AND MQ.BSE_YR           = MQR.BSE_YR
                         AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD
                         AND MQ.QTA_TGT_CD       = 'T'
                         AND MQ.RLANE_CD         = M.RLANE_CD
                         AND MQ.DIR_CD           = M.DIR_CD
                         AND MQ.VSL_CD           = M.VSL_CD
                         AND MQ.SKD_VOY_NO       = M.SKD_VOY_NO
                         AND MQ.SKD_DIR_CD       = M.SKD_DIR_CD
                         AND MQ.RHQ_CD           = M.RHQ_CD
                         AND MQ.RGN_OFC_CD       = O.SLS_RGN_OFC_CD(+)
                         AND VPS.RLANE_CD        = MQ.RLANE_CD
                         AND VPS.DIR_CD          = MQ.DIR_CD
                         AND VPS.VSL_CD          = MQ.VSL_CD
                         AND VPS.SKD_VOY_NO      = MQ.SKD_VOY_NO
                         AND VPS.SKD_DIR_CD      = MQ.SKD_DIR_CD
                         AND SUBSTR(VPS.POL_CD, 1, LENGTH(MQ.POL_CD)) = MQ.POL_CD
                         AND SUBSTR(VPS.POD_CD, 1, LENGTH(MQ.POD_CD)) = MQ.POD_CD
                         AND MQ.LOD_QTY > 0
                    GROUP BY MQ.TRD_CD,
                             M.RHQ_CD ,
                             MQ.RHQ_CD,
                             DECODE(SUBSTR(MQ.TRD_CD, 1, 1), 'I', 'IPC', 'OCN'),
                             NVL(O.CONV_RGN_OFC_CD, MQ.RGN_OFC_CD),
                             MQ.POL_CD  ,
                             MQ.POD_CD  ,
                             VPS.POL_SEQ,
                             VPS.POD_SEQ,
                             NVL(VPS.PAST, 'N')
                      UNION ALL
                      -- TS Forecast
                      SELECT 201 AS FLG,
                             T.TRD_CD    ,
                             T.SUB_TRD_CD,
                             B.RHQ_CD         AS BASE_RHQ_CD,
                             T.SLS_RHQ_CD     AS RHQ_CD     ,
                             'T/S'            AS IOC_CD     ,
                             T.SLS_RGN_OFC_CD AS OFC_CD     ,
                             B.POL_CD ,
                             B.POD_CD ,
                             B.POL_SEQ,
                             B.POD_SEQ,
                             0 AS BKG_QUOTA,
                             0 AS CMB1     ,
                             0 AS CMB2     ,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_TTL_QTY)) AS FC_TEU,
                             0 AS FC_20,
                             0 AS FC_40,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_40FT_HC_QTY)) AS FC_HC ,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_45FT_HC_QTY)) AS FC_45 ,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_53FT_QTY))    AS FC_53 ,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_RF_QTY))      AS FC_RF ,
                             DECODE(B.PAST, 'Y', 0, SUM(T.CFM_TTL_WGT))     AS FC_WGT,
                             0 AS UG_TEU,
                             0 AS UG_20 ,
                             0 AS UG_40 ,
                             0 AS UG_HC ,
                             0 AS UG_45 ,
                             0 AS UG_53 ,
                             0 AS UG_RF ,
                             0 AS UG_WGT,
                             0 AS MR_TEU,
                             0 AS MR_20 ,
                             0 AS MR_40 ,
                             0 AS MR_HC ,
                             0 AS MR_45 ,
                             0 AS MR_53 ,
                             0 AS MR_RF ,
                             0 AS MR_WGT,
                             0 AS AP_TEU,
                             0 AS AP_20 ,
                             0 AS AP_40 ,
                             0 AS AP_HC ,
                             0 AS AP_45 ,
                             0 AS AP_53 ,
                             0 AS AP_RF ,
                             0 AS AP_WGT,
                             0 AS BK_TEU,
                             0 AS BK_20 ,
                             0 AS BK_40 ,
                             0 AS BK_HC ,
                             0 AS BK_45 ,
                             0 AS BK_53 ,
                             0 AS BK_RF ,
                             0 AS BK_WGT,
                             0 AS BT_TEU,
                             0 AS BT_20 ,
                             0 AS BT_40 ,
                             0 AS BT_HC ,
                             0 AS BT_45 ,
                             0 AS BT_53 ,
                             0 AS BT_RF ,
                             0 AS BT_WGT,
                             0 AS GT_TEU,
                             0 AS GT_20 ,
                             0 AS GT_40 ,
                             0 AS GT_HC ,
                             0 AS GT_45 ,
                             0 AS GT_53 ,
                             0 AS GT_RF ,
                             0 AS GT_WGT,
                             PAST,
                             NULL AS CFM_FLG,
                             NULL AS SPC_CTRL_ALOC_RMK    ,
                             NULL AS SPC_CTRL_ALOC_POL_RMK,
                             NULL AS SPC_CTRL_ALOC_POD_RMK
                        FROM SPC_DLY_FCAST_CUST T,
                             VSL_PORT_SKD       B
                       WHERE T.RLANE_CD   = B.RLANE_CD
                         AND T.DIR_CD     = B.DIR_CD
                         AND T.VSL_CD     = B.VSL_CD
                         AND T.SKD_VOY_NO = B.SKD_VOY_NO
                         AND T.SKD_DIR_CD = B.SKD_DIR_CD
                         AND SUBSTR(T.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD
                         AND SUBSTR(T.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD
                         AND B.POL_CONTI <> 'A'
                         AND NVL(T.CFM_TTL_QTY,0) + NVL(T.CFM_TTL_WGT,0) > 0
                         AND ((T.SLS_RHQ_CD = B.RHQ_CD  OR B.OFC_CONTI = B.POL_CONTI))
                         AND T.IOC_TS_CD = 'T'
                    GROUP BY T.TRD_CD        ,
                             T.SUB_TRD_CD    ,
                             B.RHQ_CD        ,
                             T.SLS_RHQ_CD    ,
                             T.SLS_RGN_OFC_CD,
                             B.POL_CD        ,
                             B.POD_CD        ,
                             B.POL_SEQ       ,
                             B.POD_SEQ       ,
                             T.IOC_TS_CD     ,
                             B.PAST
                      UNION ALL
                      -- TS Allocation
                      SELECT 203 AS FLG,
                             D.TRD_CD    ,
                             D.SUB_TRD_CD,
                             B.RHQ_CD     AS BASE_RHQ_CD,
                             D.SLS_RHQ_CD AS RHQ_CD     ,
                             DECODE(D.MNL_FLG, 'Y', 'T-', '')||'T/S' AS IOC_CD,
                             D.SLS_RGN_OFC_CD AS OFC_CD,
                             D.POL_YD_CD,
                             D.POD_YD_CD,
                             B.POL_SEQ  ,
                             B.POD_SEQ  ,
                             0 AS BKG_QUOTA,
                             0 AS CMB1     ,
                             0 AS CMB2     ,
                             0 AS FC_TEU   ,
                             0 AS FC_20    ,
                             0 AS FC_40    ,
                             0 AS FC_HC    ,
                             0 AS FC_45    ,
                             0 AS FC_53    ,
                             0 AS FC_RF    ,
                             0 AS FC_WGT   ,
                             0 AS UG_TEU   ,
                             0 AS UG_20    ,
                             0 AS UG_40    ,
                             0 AS UG_HC    ,
                             0 AS UG_45    ,
                             0 AS UG_53    ,
                             0 AS UG_RF    ,
                             0 AS UG_WGT   ,
                             0 AS MR_TEU   ,
                             0 AS MR_20    ,
                             0 AS MR_40    ,
                             0 AS MR_HC    ,
                             0 AS MR_45    ,
                             0 AS MR_53    ,
                             0 AS MR_RF    ,
                             0 AS MR_WGT   ,
                             D.ASGN_TTL_QTY     AS AP_TEU,
                             D.ASGN_20FT_QTY    AS AP_20 ,
                             D.ASGN_40FT_QTY    AS AP_40 ,
                             D.ASGN_40FT_HC_QTY AS AP_HC ,
                             D.ASGN_45FT_HC_QTY AS AP_45 ,
                             D.ASGN_53FT_QTY    AS AP_53 ,
                             D.ASGN_RF_QTY      AS AP_RF ,
                             D.ASGN_TTL_WGT     AS AP_WGT,
                             0 AS BK_TEU,
                             0 AS BK_20 ,
                             0 AS BK_40 ,
                             0 AS BK_HC ,
                             0 AS BK_45 ,
                             0 AS BK_53 ,
                             0 AS BK_RF ,
                             0 AS BK_WGT,
                             0 AS BT_TEU,
                             0 AS BT_20 ,
                             0 AS BT_40 ,
                             0 AS BT_HC ,
                             0 AS BT_45 ,
                             0 AS BT_53 ,
                             0 AS BT_RF ,
                             0 AS BT_WGT,
                             0 AS GT_TEU,
                             0 AS GT_20 ,
                             0 AS GT_40 ,
                             0 AS GT_HC ,
                             0 AS GT_45 ,
                             0 AS GT_53 ,
                             0 AS GT_RF ,
                             0 AS GT_WGT,
                             PAST,
                             NULL AS CFM_FLG,
                             D.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ,
                             D.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK,
                             D.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK
                        FROM SPC_ALOC_POL_POD D,
                             VSL_PORT_SKD     B
                       WHERE D.RLANE_CD   = B.RLANE_CD
                         AND D.DIR_CD     = B.DIR_CD
                         AND D.VSL_CD     = B.VSL_CD
                         AND D.SKD_VOY_NO = B.SKD_VOY_NO
                         AND D.SKD_DIR_CD = B.SKD_DIR_CD
                         AND SUBSTR(D.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD
                         AND SUBSTR(D.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD
                         AND B.POL_CONTI <> 'A'
                         AND D.TS_FLG     = 'Y'
                         AND D.SLS_OFC_CD = D.SLS_RGN_OFC_CD
                         AND ((D.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI ))
                   ) U
          GROUP BY U.BASE_RHQ_CD,
                   U.RHQ_CD     ,
                   U.IOC_CD     ,
                   U.OFC_CD     ,
                   U.POL_CD     ,
                   U.POD_CD     ,
                   U.POL_SEQ    ,
                   U.POD_SEQ    ,
                   U.PAST
            HAVING U.IOC_CD LIKE 'T-%'
                OR U.POD_CD = '00000'
                OR ROUND(SUM(BKG_QUOTA), 1) > 0
                OR ROUND(SUM(NVL(FC_TEU, 0) + NVL(FC_WGT, 0) + NVL(FC_HC, 0) + NVL(FC_45, 0) + NVL(FC_53, 0)), 1) > 0
                OR ROUND(SUM(UG_TEU + UG_WGT), 1) > 0
                OR ROUND(SUM(MR_TEU + MR_WGT), 1) > 0
                OR ROUND(SUM(AP_TEU + AP_WGT), 1) > 0
                OR ROUND(SUM(BK_TEU + BK_WGT), 1) > 0
                OR ROUND(SUM(BT_TEU + BT_WGT), 1) > 0
                OR ROUND(SUM(GT_TEU + GT_WGT), 1) > 0
         ) Z
GROUP BY GROUPING SETS (
                         (BASE_RHQ_CD, RHQ_CD, IOC_CD, OFC_CD, POL_CD, POL_SEQ, POD_CD, POD_SEQ),
                         (BASE_RHQ_CD, RHQ_CD, IOC_CD, OFC_CD, POL_CD, POL_SEQ),
                         (BASE_RHQ_CD, RHQ_CD, IOC_CD, OFC_CD),
                         (BASE_RHQ_CD, IOC_CD)
                       )
  HAVING (POL_CD IS NULL OR POL_CD <> '00000')
     AND (POD_CD IS NULL OR POD_CD <> '00000')
     AND (    IOC_CD LIKE 'T-%'
           OR ROUND(SUM(BKG_QUOTA), 1) > 0
           OR ROUND(SUM(NVL(FC_TEU, 0) + NVL(FC_WGT, 0) + NVL(FC_HC, 0) + NVL(FC_45, 0) + NVL(FC_53, 0)), 1) > 0
           OR ROUND(SUM(UG_TEU + UG_WGT), 1) > 0
           OR ROUND(SUM(MR_TEU + MR_WGT), 1) > 0
           OR ROUND(SUM(AP_TEU + AP_WGT), 1) > 0
           OR ROUND(SUM(BK_TEU + BK_WGT), 1) > 0
           OR ROUND(SUM(BT_TEU + BT_WGT), 1) > 0
           OR ROUND(SUM(GT_TEU + GT_WGT), 1) > 0 )
ORDER BY DECODE(IOC_CD, 'OCN', 1, 'IPC', 2, 'EQ', 3, 'T/S', 4, 'T-OCN', 5, 'T-IPC', 6, 'T-T/S', 7, 10),
         DECODE(BASE_RHQ_CD, RHQ_CD, 0, 1),
         RHQ_CD,
         DECODE(OFC_CD, '+', 'ZZZZZ', OFC_CD),
         NVL(POL_SEQ, -1),
         NVL(POD_SEQ, -1)			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="office" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="fcast" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
