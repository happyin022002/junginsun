/*=========================================================
*Copyright(c) 2013 CyberLogitec
*@FileName : SpacecontrolinquiryDBDAOSearchSpaceControlTsVolumnListVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2013.02.05
*@LastModifier : 
*@LastVersion : 1.0
* 2013.02.05 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;

import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpacecontrolinquiryDBDAOSearchSpaceControlTsVolumnListVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * - Lee Sang-Yong : [프로젝트] Ticket ID : CHM-201004171 53ft 추가
	  * 2010.11.16 남궁진호 [CHM-201007114-01]  DRL.TO_CONTI_CD <> ‘F’ 조건 제거
	  * 2011.01.04 최윤성 [CHM-201008093-01] Office Level Table 생성
	  *  - SPC_ORGANIZATION_V 대신 SPC_OFC_LVL 로 대체
	  * -2011.06.01 [ CHM-201111305-01] 김종준 R5와 동일하게 R9이 적용될 수 있도록 쿼리수정
	  * -2012.01.10 [SRM-201222989] SFX 노선 소속 trade 변경에 따른 inquiry by T/S port 화면 보완
	  * -2012.01.11 [SRM-201222989] SFX 노선 소속 trade 변경에 따른 inquiry by T/S port 화면 보완
	  * 2012.12.03 [CHM-201221639] 김시몬 R9와 동일하게 R8이 적용될 수 있도록 쿼리수정
	  * </pre>
	  */
	public SpacecontrolinquiryDBDAOSearchSpaceControlTsVolumnListVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("port",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("subtrade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("eDate",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ioc",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("sDate",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("org",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration").append("\n"); 
		query.append("FileName : SpacecontrolinquiryDBDAOSearchSpaceControlTsVolumnListVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH PARAMS1 AS (" ).append("\n"); 
		query.append("    SELECT @[vvd]      AS VVD           ," ).append("\n"); 
		query.append("           @[sDate]    AS FM_DT         ," ).append("\n"); 
		query.append("           @[eDate]    AS TO_DT         ," ).append("\n"); 
		query.append("           @[port]     AS PORT_CD       ," ).append("\n"); 
		query.append("           @[trade]    AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           @[subtrade] AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           @[lane]     AS RLANE_CD      ," ).append("\n"); 
		query.append("           @[bound]    AS BOUND         ," ).append("\n"); 
		query.append("           @[ioc]      AS IOC_CD        ," ).append("\n"); 
		query.append("           @[org]      AS ORG" ).append("\n"); 
		query.append("      FROM DUAL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PARAMS AS (" ).append("\n"); 
		query.append("    SELECT VVD," ).append("\n"); 
		query.append("           LEAST(FM_DT, TO_DT)    AS FM_SDT," ).append("\n"); 
		query.append("           GREATEST(FM_DT, TO_DT) AS TO_SDT," ).append("\n"); 
		query.append("           TO_DATE(LEAST(REPLACE(FM_DT,'-',''), REPLACE(TO_DT,'-','')), 'YYYYMMDD')    AS FM_DT," ).append("\n"); 
		query.append("           TO_DATE(GREATEST(REPLACE(FM_DT,'-',''), REPLACE(TO_DT,'-','')), 'YYYYMMDD') AS TO_DT," ).append("\n"); 
		query.append("           PORT_CD       ," ).append("\n"); 
		query.append("           REP_TRD_CD    ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           RLANE_CD      ," ).append("\n"); 
		query.append("           BOUND         ," ).append("\n"); 
		query.append("           IOC_CD        ," ).append("\n"); 
		query.append("           ORG           ," ).append("\n"); 
		query.append("           SUBSTR(VVD, 1, 4) AS VSL_CD    ," ).append("\n"); 
		query.append("           SUBSTR(VVD, 5, 4) AS SKD_VOY_NO," ).append("\n"); 
		query.append("           SUBSTR(VVD, 9)    AS SKD_DIR_CD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             SELECT L.CONTI_CD" ).append("\n"); 
		query.append("               FROM MDM_LOCATION L" ).append("\n"); 
		query.append("              WHERE L.LOC_CD = PORT_CD" ).append("\n"); 
		query.append("           ) AS PORT_CONTI" ).append("\n"); 
		query.append("      FROM PARAMS1" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVDS AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT PRD.COST_YR," ).append("\n"); 
		query.append("           LPAD(CEIL((TO_CHAR(PS.VPS_ETB_DT, 'DDD') + 7 - TO_CHAR(TO_DATE(PRD.SLS_TO_DT, 'YYYYMMDD'), 'DDD')) / 7), 2, '0') AS COST_WK," ).append("\n"); 
		query.append("           PS.SLAN_CD   ," ).append("\n"); 
		query.append("           RL.REP_TRD_CD," ).append("\n"); 
		query.append("           DRL.SUB_TRD_CD AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           RL.RLANE_CD  ," ).append("\n"); 
		query.append("           PS.VSL_CD    ," ).append("\n"); 
		query.append("           PS.SKD_VOY_NO," ).append("\n"); 
		query.append("           PS.SKD_DIR_CD," ).append("\n"); 
		query.append("           NVL(PS.YD_CD, PS.VPS_PORT_CD) AS POL_CD," ).append("\n"); 
		query.append("           PS.CLPT_SEQ   AS POL_SEQ   ," ).append("\n"); 
		query.append("           PS.VPS_ETB_DT AS POL_ETB_DT," ).append("\n"); 
		query.append("           P.PORT_CONTI  AS POL_CONTI ," ).append("\n"); 
		query.append("           P.IOC_CD," ).append("\n"); 
		query.append("           P.ORG" ).append("\n"); 
		query.append("      FROM COA_WK_PRD       PRD," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD PS ," ).append("\n"); 
		query.append("           MDM_REV_LANE     RL ," ).append("\n"); 
		query.append("           MDM_DTL_REV_LANE DRL," ).append("\n"); 
		query.append("           PARAMS           P" ).append("\n"); 
		query.append("     WHERE PRD.COST_YR         = TO_CHAR(PS.VPS_ETB_DT, 'YYYY')" ).append("\n"); 
		query.append("       AND PRD.COST_WK         = '01'" ).append("\n"); 
		query.append("       AND RL.VSL_SLAN_CD      = PS.SLAN_CD" ).append("\n"); 
		query.append("       AND RL.RLANE_CD         = DRL.RLANE_CD" ).append("\n"); 
		query.append("       AND RL.REP_TRD_CD       = DRL.TRD_CD" ).append("\n"); 
		query.append("       AND DRL.VSL_SLAN_DIR_CD = PS.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND RL.DELT_FLG         = 'N'" ).append("\n"); 
		query.append("       AND DRL.DELT_FLG        = 'N'" ).append("\n"); 
		query.append("       /**  CHM-201007114-01 처리" ).append("\n"); 
		query.append("       AND DRL.TO_CONTI_CD    <> 'F' " ).append("\n"); 
		query.append("       **/" ).append("\n"); 
		query.append("       AND RL.REP_TRD_CD       = P.REP_TRD_CD" ).append("\n"); 
		query.append("       AND (P.REP_SUB_TRD_CD IS NULL OR P.REP_SUB_TRD_CD = DRL.SUB_TRD_CD)" ).append("\n"); 
		query.append("       AND (P.RLANE_CD IS NULL OR P.RLANE_CD = RL.RLANE_CD)" ).append("\n"); 
		query.append("       AND (P.BOUND IS NULL OR P.BOUND = PS.SKD_DIR_CD)" ).append("\n"); 
		query.append("       AND RL.VSL_TP_CD   = 'C'" ).append("\n"); 
		query.append("       AND RL.RLANE_CD   <> 'RBCCO'" ).append("\n"); 
		query.append("       AND PS.VPS_PORT_CD = P.PORT_CD" ).append("\n"); 
		query.append("       AND PS.SKD_DIR_CD  > ' '" ).append("\n"); 
		query.append("       AND PS.VPS_ETB_DT >= P.FM_DT" ).append("\n"); 
		query.append("       AND PS.VPS_ETB_DT  < P.TO_DT + 1" ).append("\n"); 
		query.append("       AND (PS.SKD_CNG_STS_CD IS NULL OR PS.SKD_CNG_STS_CD <> 'S')" ).append("\n"); 
		query.append("       AND PS.TURN_PORT_IND_CD IN ('Y', 'N')" ).append("\n"); 
		query.append("       AND P.VVD IS NULL" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT PRD.COST_YR," ).append("\n"); 
		query.append("           LPAD(CEIL((TO_CHAR(PS.VPS_ETB_DT, 'DDD') + 7 - TO_CHAR(TO_DATE(PRD.SLS_TO_DT, 'YYYYMMDD'), 'DDD')) / 7), 2, '0') AS COST_WK," ).append("\n"); 
		query.append("           PS.SLAN_CD   ," ).append("\n"); 
		query.append("           RL.REP_TRD_CD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             SELECT DRL.SUB_TRD_CD" ).append("\n"); 
		query.append("               FROM MDM_DTL_REV_LANE DRL" ).append("\n"); 
		query.append("              WHERE RL.RLANE_CD         = DRL.RLANE_CD" ).append("\n"); 
		query.append("                AND RL.REP_TRD_CD       = DRL.TRD_CD" ).append("\n"); 
		query.append("                AND DRL.VSL_SLAN_DIR_CD = PS.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND DRL.DELT_FLG        = 'N'" ).append("\n"); 
		query.append("                /**  CHM-201007114-01 처리 " ).append("\n"); 
		query.append("                AND DRL.TO_CONTI_CD    <> 'F' " ).append("\n"); 
		query.append("                **/" ).append("\n"); 
		query.append("                AND ROWNUM = 1" ).append("\n"); 
		query.append("           ) AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           RL.RLANE_CD  ," ).append("\n"); 
		query.append("           PS.VSL_CD    ," ).append("\n"); 
		query.append("           PS.SKD_VOY_NO," ).append("\n"); 
		query.append("           PS.SKD_DIR_CD," ).append("\n"); 
		query.append("           NVL(PS.YD_CD, PS.VPS_PORT_CD) AS POL_CD," ).append("\n"); 
		query.append("           PS.CLPT_SEQ    AS POL_SEQ   ," ).append("\n"); 
		query.append("           PS.VPS_ETB_DT  AS POL_ETB_DT," ).append("\n"); 
		query.append("           P.PORT_CONTI   AS POL_CONTI ," ).append("\n"); 
		query.append("           P.IOC_CD," ).append("\n"); 
		query.append("           P.ORG" ).append("\n"); 
		query.append("      FROM COA_WK_PRD       PRD," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD PS ," ).append("\n"); 
		query.append("           MDM_REV_LANE     RL ," ).append("\n"); 
		query.append("           PARAMS           P" ).append("\n"); 
		query.append("     WHERE PRD.COST_YR    = TO_CHAR(PS.VPS_ETB_DT, 'YYYY')" ).append("\n"); 
		query.append("       AND PRD.COST_WK    = '01'" ).append("\n"); 
		query.append("       AND RL.VSL_SLAN_CD = PS.SLAN_CD" ).append("\n"); 
		query.append("       AND RL.DELT_FLG    = 'N'" ).append("\n"); 
		query.append("       AND RL.VSL_TP_CD   = 'C'" ).append("\n"); 
		query.append("       AND RL.RLANE_CD   <> 'RBCCO'" ).append("\n"); 
		query.append("       AND PS.VPS_PORT_CD = P.PORT_CD" ).append("\n"); 
		query.append("       AND PS.SKD_DIR_CD  > ' '" ).append("\n"); 
		query.append("       AND PS.VSL_CD      = P.VSL_CD" ).append("\n"); 
		query.append("       AND PS.SKD_VOY_NO  = P.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND PS.SKD_DIR_CD  = P.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND (PS.SKD_CNG_STS_CD IS NULL OR PS.SKD_CNG_STS_CD <> 'S')" ).append("\n"); 
		query.append("       AND PS.TURN_PORT_IND_CD IN ('Y', 'N')" ).append("\n"); 
		query.append("       AND RL.RLANE_CD    IN (SELECT RLANE_CD " ).append("\n"); 
		query.append("                                FROM COA_MON_VVD" ).append("\n"); 
		query.append("                               WHERE VSL_CD = P.VSL_CD" ).append("\n"); 
		query.append("                                 AND SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                                 AND DIR_CD = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                                 AND DELT_FLG = 'N')" ).append("\n"); 
		query.append("       AND P.VVD IS NOT NULL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT PS.COST_YR       ," ).append("\n"); 
		query.append("           PS.COST_WK       ," ).append("\n"); 
		query.append("           PS.SLAN_CD       ," ).append("\n"); 
		query.append("           PS.REP_TRD_CD    ," ).append("\n"); 
		query.append("           PS.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           DRL.TRD_CD       ," ).append("\n"); 
		query.append("           DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("           PS.RLANE_CD      ," ).append("\n"); 
		query.append("           PS.VSL_CD        ," ).append("\n"); 
		query.append("           PS.SKD_VOY_NO    ," ).append("\n"); 
		query.append("           PS.SKD_DIR_CD    ," ).append("\n"); 
		query.append("           PS.POL_CD        ," ).append("\n"); 
		query.append("           PS.POL_SEQ       ," ).append("\n"); 
		query.append("           PS.POL_ETB_DT    ," ).append("\n"); 
		query.append("           SPC_CONTI_CONV_FNC(PS.POL_CONTI, PS.RLANE_CD,PS.SKD_DIR_CD) as pol_conti     ," ).append("\n"); 
		query.append("           NVL(VPS.YD_CD, VPS.VPS_PORT_CD) AS POD_CD," ).append("\n"); 
		query.append("           VPS.CLPT_SEQ   AS POD_SEQ   ," ).append("\n"); 
		query.append("           VPS.VPS_ETB_DT AS POD_ETB_DT," ).append("\n"); 
		query.append("           SPC_CONTI_CONV_FNC(L.CONTI_CD, PS.RLANE_CD,PS.SKD_DIR_CD)     AS POD_CONTI ," ).append("\n"); 
		query.append("           NVL(CO.CTRL_PORT_FLG   , 'N') AS CTRL_PORT," ).append("\n"); 
		query.append("           NVL(CO.CTRL_40FT_HC_FLG, 'N') AS CTRL_HC  ," ).append("\n"); 
		query.append("           NVL(CO.CTRL_45FT_HC_FLG, 'N') AS CTRL_45  ," ).append("\n"); 
		query.append("           NVL(CO.CTRL_53FT_FLG,    'N') AS CTRL_53  ," ).append("\n"); 
		query.append("           NVL(CO.CTRL_RF_FLG     , 'N') AS CTRL_RF  ," ).append("\n"); 
		query.append("           NVL(CO.CTRL_WGT_FLG    , 'N') AS CTRL_WGT ," ).append("\n"); 
		query.append("           PS.IOC_CD," ).append("\n"); 
		query.append("           PS.ORG" ).append("\n"); 
		query.append("      FROM MDM_DTL_REV_LANE  DRL," ).append("\n"); 
		query.append("           MDM_LOCATION      L  ," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD  VPS," ).append("\n"); 
		query.append("           SPC_ALOC_CTRL_OPT CO ," ).append("\n"); 
		query.append("           VVDS              PS" ).append("\n"); 
		query.append("     WHERE DRL.RLANE_CD        = PS.RLANE_CD" ).append("\n"); 
		query.append("       AND DRL.VSL_SLAN_DIR_CD = PS.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND DRL.IOC_CD          = DECODE(PS.POL_CONTI,SPC_CONTI_CONV_FNC(L.CONTI_CD, PS.RLANE_CD,PS.SKD_DIR_CD), 'I', 'O')" ).append("\n"); 
		query.append("       AND DRL.FM_CONTI_CD     = SPC_CONTI_CONV_FNC(PS.POL_CONTI, PS.RLANE_CD,PS.SKD_DIR_CD)" ).append("\n"); 
		query.append("       AND DRL.TO_CONTI_CD     = SPC_CONTI_CONV_FNC(L.CONTI_CD, PS.RLANE_CD,PS.SKD_DIR_CD)" ).append("\n"); 
		query.append("       AND DRL.DELT_FLG        = 'N'" ).append("\n"); 
		query.append("       AND L.LOC_CD            = VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("       AND VPS.VSL_CD          = PS.VSL_CD" ).append("\n"); 
		query.append("       AND VPS.SKD_VOY_NO      = PS.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND VPS.SKD_DIR_CD      = PS.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND VPS.SLAN_CD         = PS.SLAN_CD" ).append("\n"); 
		query.append("       AND VPS.CLPT_SEQ        > PS.POL_SEQ" ).append("\n"); 
		query.append("       AND CO.RLANE_CD  (+)    = PS.RLANE_CD" ).append("\n"); 
		query.append("       AND CO.DIR_CD    (+)    = PS.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND CO.VSL_CD    (+)    = PS.VSL_CD" ).append("\n"); 
		query.append("       AND CO.SKD_VOY_NO(+)    = PS.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND CO.SKD_DIR_CD(+)    = PS.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BOOKING AS (" ).append("\n"); 
		query.append("    SELECT --BV.BKG_NO        ," ).append("\n"); 
		query.append("           --BV.BKG_NO_SPLIT  ," ).append("\n"); 
		query.append("           --BV.VSL_PRE_PST_CD," ).append("\n"); 
		query.append("           BV.BKG_NO        ," ).append("\n"); 
		query.append("           BV.VSL_PRE_PST_CD," ).append("\n"); 
		query.append("           V.POL_ETB_DT     ," ).append("\n"); 
		query.append("           V.REP_TRD_CD     ," ).append("\n"); 
		query.append("           V.REP_SUB_TRD_CD ," ).append("\n"); 
		query.append("           V.TRD_CD         ," ).append("\n"); 
		query.append("           V.SUB_TRD_CD     ," ).append("\n"); 
		query.append("           V.RLANE_CD       ," ).append("\n"); 
		query.append("           V.COST_YR        ," ).append("\n"); 
		query.append("           V.COST_WK        ," ).append("\n"); 
		query.append("           V.VSL_CD         ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO     ," ).append("\n"); 
		query.append("           V.SKD_DIR_CD     ," ).append("\n"); 
		query.append("           DECODE(BV.VSL_PRE_PST_CD, 'T', DECODE(V.POL_CONTI, V.POD_CONTI, 'IPC', 'OCN'), 'T/S') AS IOC_CD," ).append("\n"); 
		query.append("           SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) AS SLS_OFC_CD," ).append("\n"); 
		query.append("           V.POL_CD ," ).append("\n"); 
		query.append("           V.POD_CD ," ).append("\n"); 
		query.append("           V.POD_SEQ," ).append("\n"); 
		query.append("           V.SLAN_CD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("              SELECT    TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2)*Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                     || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                     || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                     || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가" ).append("\n"); 
		query.append("                     || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                     || TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'DW', Q.OP_CNTR_QTY, 'DX', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') " ).append("\n"); 
		query.append("                     || TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'R2', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                     || TO_CHAR(SUM(CASE WHEN SUBSTR(Q.CNTR_TPSZ_CD, 1, 1) = 'R' AND Q.CNTR_TPSZ_CD <> 'R2' THEN Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY ELSE 0 END), 'FM0000000000.000')" ).append("\n"); 
		query.append("                     || TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                                             FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                                            WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("               WHERE B.BKG_NO = Q.BKG_NO " ).append("\n"); 
		query.append("           ) AS VAL," ).append("\n"); 
		query.append("           V.CTRL_PORT," ).append("\n"); 
		query.append("           V.CTRL_HC  ," ).append("\n"); 
		query.append("           V.CTRL_45  ," ).append("\n"); 
		query.append("           V.CTRL_53  ," ).append("\n"); 
		query.append("           V.CTRL_RF  ," ).append("\n"); 
		query.append("           V.CTRL_WGT ," ).append("\n"); 
		query.append("           V.ORG" ).append("\n"); 
		query.append("      FROM BKG_BOOKING B ," ).append("\n"); 
		query.append("           BKG_VVD     BV," ).append("\n"); 
		query.append("           PORT_SKD    V ," ).append("\n"); 
		query.append("           BKG_BL_DOC  D" ).append("\n"); 
		query.append("     WHERE B.BKG_NO         = BV.BKG_NO" ).append("\n"); 
		query.append("       AND B.BKG_STS_CD    IN('W','F')" ).append("\n"); 
		query.append("       AND B.BKG_CGO_TP_CD <> 'P'" ).append("\n"); 
		query.append("       AND BV.VSL_CD        = V.VSL_CD" ).append("\n"); 
		query.append("       AND BV.SKD_VOY_NO    = V.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND BV.SKD_DIR_CD    = V.SKD_DIR_CD" ).append("\n"); 
		query.append("       --AND SUBSTR(NVL(BV.POL_YD_CD, BV.POL_CD), 1, LENGTH(V.POL_CD)) = SUBSTR(V.POL_CD, 1, LENGTH(NVL(BV.POL_YD_CD, BV.POL_CD)))" ).append("\n"); 
		query.append("       --AND SUBSTR(NVL(BV.POD_YD_CD, BV.POD_CD), 1, LENGTH(V.POD_CD)) = SUBSTR(V.POD_CD, 1, LENGTH(NVL(BV.POD_YD_CD, BV.POD_CD)))" ).append("\n"); 
		query.append("       --AND BV.POL_CD        = SUBSTR(V.POL_CD, 1, 5)" ).append("\n"); 
		query.append("       --AND BV.POD_CD        = SUBSTR(V.POD_CD, 1, 5)" ).append("\n"); 
		query.append("       AND (    (V.COST_YR||V.COST_WK  < '201023' AND BV.POL_CD    = SUBSTR(V.POL_CD, 1, 5))" ).append("\n"); 
		query.append("             OR (V.COST_YR||V.COST_WK >= '201023' AND BV.POL_YD_CD = V.POL_CD))" ).append("\n"); 
		query.append("       AND (    (V.COST_YR||V.COST_WK  < '201023' AND BV.POD_CD    = SUBSTR(V.POD_CD, 1, 5))" ).append("\n"); 
		query.append("             OR (V.COST_YR||V.COST_WK >= '201023' AND BV.POD_YD_CD = V.POD_CD))" ).append("\n"); 
		query.append("       AND BV.SLAN_CD       = V.SLAN_CD" ).append("\n"); 
		query.append("       AND (V.ORG IS NULL OR SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) = V.ORG)" ).append("\n"); 
		query.append("       AND (V.IOC_CD IS NULL OR DECODE(BV.VSL_PRE_PST_CD, 'T', DECODE(V.POL_CONTI, V.POD_CONTI, 'IPC', 'OCN'), 'T/S') = V.IOC_CD)" ).append("\n"); 
		query.append("       AND B.BKG_NO         = D.BKG_NO" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("  SELECT TO_CHAR(Z7.ETB_DT, 'YYYY.MM.DD') AS ETB_DT," ).append("\n"); 
		query.append("         Z7.REP_TRD_CD    ," ).append("\n"); 
		query.append("         Z7.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("         Z7.TRD_CD        ," ).append("\n"); 
		query.append("         Z7.SUB_TRD_CD    ," ).append("\n"); 
		query.append("         Z7.RLANE_CD      ," ).append("\n"); 
		query.append("         Z7.COST_WK       ," ).append("\n"); 
		query.append("         Z7.VVD           ," ).append("\n"); 
		query.append("         Z7.IOC_CD        ," ).append("\n"); 
		query.append("         Z7.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("         '' AS SLS_AQ_CD  ," ).append("\n"); 
		query.append("         Z7.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("         MAX(Z7.SLS_OFC_CD)         AS SLS_OFC_CD        ," ).append("\n"); 
		query.append("         MAX(Z7.POD_CD)             AS POD_CD            ," ).append("\n"); 
		query.append("         MAX(Z7.FCAST_TTL)          AS FCAST_TTL         ," ).append("\n"); 
		query.append("         MAX(Z7.FCAST_HC)           AS FCAST_HC          ," ).append("\n"); 
		query.append("         MAX(Z7.FCAST_45)           AS FCAST_45          ," ).append("\n"); 
		query.append("         MAX(Z7.FCAST_53)           AS FCAST_53          ," ).append("\n"); 
		query.append("         MAX(Z7.FCAST_RF)           AS FCAST_RF          ," ).append("\n"); 
		query.append("         MAX(Z7.FCAST_WGT)          AS FCAST_WGT         ," ).append("\n"); 
		query.append("         MAX(Z7.ASGN_TTL)           AS ASGN_TTL          ," ).append("\n"); 
		query.append("         MAX(Z7.ASGN_HC)            AS ASGN_HC           ," ).append("\n"); 
		query.append("         MAX(Z7.ASGN_45)            AS ASGN_45           ," ).append("\n"); 
		query.append("         MAX(Z7.ASGN_53)            AS ASGN_53           ," ).append("\n"); 
		query.append("         MAX(Z7.ASGN_RF)            AS ASGN_RF           ," ).append("\n"); 
		query.append("         MAX(Z7.ASGN_WGT)           AS ASGN_WGT          ," ).append("\n"); 
		query.append("         MAX(Z7.DIF_TTL)            AS DIF_TTL           ," ).append("\n"); 
		query.append("         MAX(Z7.DIF_HC)             AS DIF_HC            ," ).append("\n"); 
		query.append("         MAX(Z7.DIF_45)             AS DIF_45            ," ).append("\n"); 
		query.append("         MAX(Z7.DIF_53)             AS DIF_53            ," ).append("\n"); 
		query.append("         MAX(Z7.DIF_RF)             AS DIF_RF            ," ).append("\n"); 
		query.append("         MAX(Z7.DIF_WGT)            AS DIF_WGT           ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_TTL)            AS BKG_TTL           ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_S20)            AS BKG_S20           ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_S40)            AS BKG_S40           ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_20)             AS BKG_20            ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_40)             AS BKG_40            ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_HC)             AS BKG_HC            ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_45)             AS BKG_45            ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_53)             AS BKG_53            ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_RF20)           AS BKG_RF20          ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_RF40)           AS BKG_RF40          ," ).append("\n"); 
		query.append("         MAX(Z7.BKG_WGT)            AS BKG_WGT           ," ).append("\n"); 
		query.append("         MAX(Z7.PRE_REP_TRD_CD)     AS PRE_REP_TRD_CD    ," ).append("\n"); 
		query.append("         MAX(Z7.PRE_REP_SUB_TRD_CD) AS PRE_REP_SUB_TRD_CD," ).append("\n"); 
		query.append("         MAX(Z7.PRE_RLANE_CD)       AS PRE_RLANE_CD      ," ).append("\n"); 
		query.append("         MAX(Z7.PRE_VVD)            AS PRE_VVD           ," ).append("\n"); 
		query.append("         MAX(Z7.PRE_ETB_DT)         AS PRE_ETB_DT        ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_TTL)            AS DIS_TTL           ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_S20)            AS DIS_S20           ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_S40)            AS DIS_S40           ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_20)             AS DIS_20            ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_40)             AS DIS_40            ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_HC)             AS DIS_HC            ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_45)             AS DIS_45            ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_53)             AS DIS_53            ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_RF20)           AS DIS_RF20          ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_RF40)           AS DIS_RF40          ," ).append("\n"); 
		query.append("         MAX(Z7.DIS_WGT)            AS DIS_WGT" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("            SELECT Z6.ETB_DT        ," ).append("\n"); 
		query.append("                   Z6.REP_TRD_CD    ," ).append("\n"); 
		query.append("                   Z6.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                   Z6.TRD_CD        ," ).append("\n"); 
		query.append("                   Z6.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                   Z6.RLANE_CD      ," ).append("\n"); 
		query.append("                   Z6.COST_WK       ," ).append("\n"); 
		query.append("                   Z6.VVD           ," ).append("\n"); 
		query.append("                   Z6.IOC_CD        ," ).append("\n"); 
		query.append("                   Z6.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                   Z6.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                   Z6.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                   RANK() OVER ( PARTITION BY Z6.ETB_DT, Z6.REP_TRD_CD, Z6.REP_SUB_TRD_CD, Z6.TRD_CD, Z6.SUB_TRD_CD, Z6.RLANE_CD, Z6.COST_WK, Z6.VVD, Z6.IOC_CD, Z6.SLS_RHQ_CD, Z6.SLS_AQ_CD, Z6.SLS_RGN_OFC_CD ORDER BY ROWNUM) AS RK," ).append("\n"); 
		query.append("                   Z6.SLS_OFC_CD    ," ).append("\n"); 
		query.append("                   Z6.POD_CD        ," ).append("\n"); 
		query.append("                   Z6.FCAST_TTL     ," ).append("\n"); 
		query.append("                   Z6.FCAST_HC      ," ).append("\n"); 
		query.append("                   Z6.FCAST_45      ," ).append("\n"); 
		query.append("                   Z6.FCAST_53      ," ).append("\n"); 
		query.append("                   Z6.FCAST_RF      ," ).append("\n"); 
		query.append("                   Z6.FCAST_WGT     ," ).append("\n"); 
		query.append("                   Z6.ASGN_TTL      ," ).append("\n"); 
		query.append("                   Z6.ASGN_HC       ," ).append("\n"); 
		query.append("                   Z6.ASGN_45       ," ).append("\n"); 
		query.append("                   Z6.ASGN_53       ," ).append("\n"); 
		query.append("                   Z6.ASGN_RF       ," ).append("\n"); 
		query.append("                   Z6.ASGN_WGT      ," ).append("\n"); 
		query.append("                   Z6.DIF_TTL       ," ).append("\n"); 
		query.append("                   Z6.DIF_HC        ," ).append("\n"); 
		query.append("                   Z6.DIF_45        ," ).append("\n"); 
		query.append("                   Z6.DIF_53        ," ).append("\n"); 
		query.append("                   Z6.DIF_RF        ," ).append("\n"); 
		query.append("                   Z6.DIF_WGT       ," ).append("\n"); 
		query.append("                   Z6.BKG_TTL       ," ).append("\n"); 
		query.append("                   Z6.BKG_S20       ," ).append("\n"); 
		query.append("                   Z6.BKG_S40       ," ).append("\n"); 
		query.append("                   Z6.BKG_20        ," ).append("\n"); 
		query.append("                   Z6.BKG_40        ," ).append("\n"); 
		query.append("                   Z6.BKG_HC        ," ).append("\n"); 
		query.append("                   Z6.BKG_45        ," ).append("\n"); 
		query.append("                   Z6.BKG_53        ," ).append("\n"); 
		query.append("                   Z6.BKG_RF20      ," ).append("\n"); 
		query.append("                   Z6.BKG_RF40      ," ).append("\n"); 
		query.append("                   Z6.BKG_WGT       ," ).append("\n"); 
		query.append("                   ''   AS PRE_REP_TRD_CD    ," ).append("\n"); 
		query.append("                   ''   AS PRE_REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                   ''   AS PRE_RLANE_CD      ," ).append("\n"); 
		query.append("                   ''   AS PRE_VVD           ," ).append("\n"); 
		query.append("                   ''   AS PRE_ETB_DT        ," ).append("\n"); 
		query.append("                   NULL AS DIS_TTL           ," ).append("\n"); 
		query.append("                   NULL AS DIS_S20           ," ).append("\n"); 
		query.append("                   NULL AS DIS_S40           ," ).append("\n"); 
		query.append("                   NULL AS DIS_20            ," ).append("\n"); 
		query.append("                   NULL AS DIS_40            ," ).append("\n"); 
		query.append("                   NULL AS DIS_HC            ," ).append("\n"); 
		query.append("                   NULL AS DIS_45            ," ).append("\n"); 
		query.append("                   NULL AS DIS_53            ," ).append("\n"); 
		query.append("                   NULL AS DIS_RF20          ," ).append("\n"); 
		query.append("                   NULL AS DIS_RF40          ," ).append("\n"); 
		query.append("                   NULL AS DIS_WGT" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      SELECT Z5.ETB_DT        ," ).append("\n"); 
		query.append("                             Z5.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             Z5.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             Z5.TRD_CD        ," ).append("\n"); 
		query.append("                             Z5.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                             Z5.RLANE_CD      ," ).append("\n"); 
		query.append("                             Z5.COST_WK       ," ).append("\n"); 
		query.append("                             Z5.VVD           ," ).append("\n"); 
		query.append("                             Z5.IOC_CD        ," ).append("\n"); 
		query.append("                             Z5.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                             Z5.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                             Z5.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                             Z5.SLS_OFC_CD    ," ).append("\n"); 
		query.append("                             Z5.POD_CD        ," ).append("\n"); 
		query.append("                             SUM(Z5.FCAST_TTL) AS FCAST_TTL," ).append("\n"); 
		query.append("                             SUM(Z5.FCAST_HC)  AS FCAST_HC ," ).append("\n"); 
		query.append("                             SUM(Z5.FCAST_45)  AS FCAST_45 ," ).append("\n"); 
		query.append("                             SUM(Z5.FCAST_53)  AS FCAST_53 ," ).append("\n"); 
		query.append("                             SUM(Z5.FCAST_RF)  AS FCAST_RF ," ).append("\n"); 
		query.append("                             SUM(Z5.FCAST_WGT) AS FCAST_WGT," ).append("\n"); 
		query.append("                             SUM(Z5.ASGN_TTL)  AS ASGN_TTL ," ).append("\n"); 
		query.append("                             SUM(Z5.ASGN_HC)   AS ASGN_HC  ," ).append("\n"); 
		query.append("                             SUM(Z5.ASGN_45)   AS ASGN_45  ," ).append("\n"); 
		query.append("                             SUM(Z5.ASGN_53)   AS ASGN_53  ," ).append("\n"); 
		query.append("                             SUM(Z5.ASGN_RF)   AS ASGN_RF  ," ).append("\n"); 
		query.append("                             SUM(Z5.ASGN_WGT)  AS ASGN_WGT ," ).append("\n"); 
		query.append("                             -- Alloc 정보가 입력되지 않은 경우에는 0으로 인식되어 BKG과의 Diff가 보여지도록 보완" ).append("\n"); 
		query.append("                             SUM(NVL(Z5.ASGN_TTL, 0)) - SUM(Z5.BKG_TTL) AS DIF_TTL,		" ).append("\n"); 
		query.append("                             SUM(NVL(Z5.ASGN_HC, 0))  - SUM(Z5.BKG_HC)  AS DIF_HC ," ).append("\n"); 
		query.append("                             SUM(NVL(Z5.ASGN_45, 0))  - SUM(Z5.BKG_45)  AS DIF_45 ," ).append("\n"); 
		query.append("                             SUM(NVL(Z5.ASGN_53, 0))  - SUM(Z5.BKG_53)  AS DIF_53 ," ).append("\n"); 
		query.append("                             SUM(NVL(Z5.ASGN_RF, 0))  - SUM(Z5.BKG_RF20) - SUM(Z5.BKG_RF40) AS DIF_RF," ).append("\n"); 
		query.append("                             SUM(NVL(Z5.ASGN_WGT, 0)) - SUM(Z5.BKG_WGT) AS DIF_WGT," ).append("\n"); 
		query.append("                             SUM(Z5.BKG_TTL)   AS BKG_TTL ," ).append("\n"); 
		query.append("                             SUM(Z5.BKG_20)    AS BKG_S20 , --20에 R2가 포함되어 있음:뒤자리 2만 취하므로append("\n"); 
		query.append("                             SUM(Z5.BKG_40) + SUM(Z5.BKG_HC) + SUM(Z5.BKG_45) + SUM(Z5.BKG_53) AS BKG_S40, --40/HC/45에 R4,R7,R5가 포함되어 있음" ).append("\n"); 
		query.append("                             SUM(Z5.BKG_20)    AS BKG_20  ," ).append("\n"); 
		query.append("                             SUM(Z5.BKG_40)    AS BKG_40  ," ).append("\n"); 
		query.append("                             SUM(Z5.BKG_HC)    AS BKG_HC  ," ).append("\n"); 
		query.append("                             SUM(Z5.BKG_45)    AS BKG_45  ," ).append("\n"); 
		query.append("                             SUM(Z5.BKG_53)    AS BKG_53  ," ).append("\n"); 
		query.append("                             SUM(Z5.BKG_RF20)  AS BKG_RF20," ).append("\n"); 
		query.append("                             SUM(Z5.BKG_RF40)  AS BKG_RF40," ).append("\n"); 
		query.append("                             SUM(Z5.BKG_WGT)   AS BKG_WGT" ).append("\n"); 
		query.append("                        FROM (" ).append("\n"); 
		query.append("                                -- 2009-04-23 서관영/최윤성 CSR:N200904130110, N200904150051 -- DAILY FORECAST 데이터 추가" ).append("\n"); 
		query.append("                                -- DAILY FORECAST" ).append("\n"); 
		query.append("                                SELECT Z3.POL_ETB_DT AS ETB_DT," ).append("\n"); 
		query.append("                                       Z3.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                       Z3.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                       Z3.TRD_CD        ," ).append("\n"); 
		query.append("                                       Z3.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                       Z3.RLANE_CD      ," ).append("\n"); 
		query.append("                                       Z3.COST_WK       ," ).append("\n"); 
		query.append("                                       Z3.VSL_CD||Z3.SKD_VOY_NO||Z3.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("                                       Z3.IOC_CD    ," ).append("\n"); 
		query.append("                                       Z3.SLS_RHQ_CD," ).append("\n"); 
		query.append("                                       NVL(Z3.SLS_AQ_CD     , ' ') AS SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                       NVL(Z3.SLS_RGN_OFC_CD, ' ') AS SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                       NVL(Z3.SLS_OFC_CD    , ' ') AS SLS_OFC_CD    ," ).append("\n"); 
		query.append("                                       NVL(Z3.POD_CD        , ' ') AS POD_CD        ," ).append("\n"); 
		query.append("                                       Z3.POD_SEQ      ," ).append("\n"); 
		query.append("                                       Z3.FCAST_TTL    ," ).append("\n"); 
		query.append("                                       Z3.FCAST_HC     ," ).append("\n"); 
		query.append("                                       Z3.FCAST_45     ," ).append("\n"); 
		query.append("                                       Z3.FCAST_53     ," ).append("\n"); 
		query.append("                                       Z3.FCAST_RF     ," ).append("\n"); 
		query.append("                                       Z3.FCAST_WGT    ," ).append("\n"); 
		query.append("                                       NULL AS ASGN_TTL," ).append("\n"); 
		query.append("                                       NULL AS ASGN_HC ," ).append("\n"); 
		query.append("                                       NULL AS ASGN_45 ," ).append("\n"); 
		query.append("                                       NULL AS ASGN_53 ," ).append("\n"); 
		query.append("                                       NULL AS ASGN_RF ," ).append("\n"); 
		query.append("                                       NULL AS ASGN_WGT," ).append("\n"); 
		query.append("                                       0    AS BKG_TTL ," ).append("\n"); 
		query.append("                                       0    AS BKG_20  ," ).append("\n"); 
		query.append("                                       0    AS BKG_40  ," ).append("\n"); 
		query.append("                                       0    AS BKG_HC  ," ).append("\n"); 
		query.append("                                       0    AS BKG_45  ," ).append("\n"); 
		query.append("                                       0    AS BKG_53  ," ).append("\n"); 
		query.append("                                       0    AS BKG_RF20," ).append("\n"); 
		query.append("                                       0    AS BKG_RF40," ).append("\n"); 
		query.append("                                       0    AS BKG_WGT" ).append("\n"); 
		query.append("                                  FROM (" ).append("\n"); 
		query.append("                                          SELECT Z2.POL_ETB_DT    ," ).append("\n"); 
		query.append("                                                 Z2.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                 Z2.TRD_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.RLANE_CD      ," ).append("\n"); 
		query.append("                                                 Z2.COST_WK       ," ).append("\n"); 
		query.append("                                                 Z2.VSL_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                 Z2.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                 Z2.IOC_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                 Z2.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                 ( CASE WHEN Z2.FLG + Q.SEQ >= 3 THEN Z2.SLS_RGN_OFC_CD END) AS SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                                 DECODE(Z2.FLG + Q.SEQ, 4, Z2.SLS_OFC_CD) AS SLS_OFC_CD," ).append("\n"); 
		query.append("                                                 Z2.POD_CD," ).append("\n"); 
		query.append("                                                 MIN(Z2.POD_SEQ) AS POD_SEQ," ).append("\n"); 
		query.append("                                                 Z2.FLG + Q.SEQ  AS TT," ).append("\n"); 
		query.append("                                                 DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.FCAST_TTL), SUM(Z2.FCAST_TTL)) AS FCAST_TTL," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_HC , 'Y', DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.FCAST_HC) , SUM(Z2.FCAST_HC)))  AS FCAST_HC ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_45 , 'Y', DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.FCAST_45) , SUM(Z2.FCAST_45)))  AS FCAST_45 ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_53 , 'Y', DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.FCAST_53) , SUM(Z2.FCAST_53)))  AS FCAST_53 ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_RF , 'Y', DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.FCAST_RF) , SUM(Z2.FCAST_RF)))  AS FCAST_RF ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_WGT, 'Y', DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.FCAST_WGT), SUM(Z2.FCAST_WGT))) AS FCAST_WGT," ).append("\n"); 
		query.append("                                                 Z2.CTRL_PORT," ).append("\n"); 
		query.append("                                                 Z2.CTRL_HC  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_45  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_53  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_RF  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_WGT ," ).append("\n"); 
		query.append("                                                 '' AS T" ).append("\n"); 
		query.append("                                            FROM (" ).append("\n"); 
		query.append("                                                    SELECT V.POL_ETB_DT     ," ).append("\n"); 
		query.append("                                                           DF.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                           DF.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                           DF.TRD_CD        ," ).append("\n"); 
		query.append("                                                           DF.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                           DF.RLANE_CD      ," ).append("\n"); 
		query.append("                                                           V.COST_WK        ," ).append("\n"); 
		query.append("                                                           DF.VSL_CD        ," ).append("\n"); 
		query.append("                                                           DF.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                           DF.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                           DECODE(DF.IOC_TS_CD, 'T', 'T/S','O', 'OCN', 'I', 'IPC') AS IOC_CD," ).append("\n"); 
		query.append("                                                           DECODE(DF.SLS_OFC_CD, DF.SLS_RHQ_CD, 1, DF.SLS_RGN_OFC_CD, 2, 3) AS FLG," ).append("\n"); 
		query.append("                                                           DF.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                           DF.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                           DF.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                                           DF.SLS_OFC_CD    ," ).append("\n"); 
		query.append("                                                           SUBSTR(DF.POD_YD_CD, 1, 5) AS POD_CD," ).append("\n"); 
		query.append("                                                           V.POD_SEQ," ).append("\n"); 
		query.append("                                                           DF.FCAST_TTL_QTY     AS FCAST_TTL," ).append("\n"); 
		query.append("                                                           DF.FCAST_40FT_HC_QTY AS FCAST_HC ," ).append("\n"); 
		query.append("                                                           DF.FCAST_45FT_HC_QTY AS FCAST_45 ," ).append("\n"); 
		query.append("                                                           DF.FCAST_53FT_QTY    AS FCAST_53 ," ).append("\n"); 
		query.append("                                                           DF.FCAST_RF_QTY      AS FCAST_RF ," ).append("\n"); 
		query.append("                                                           DF.FCAST_TTL_WGT     AS FCAST_WGT," ).append("\n"); 
		query.append("                                                           NULL AS AVAL_TTL," ).append("\n"); 
		query.append("                                                           NULL AS AVAL_HC ," ).append("\n"); 
		query.append("                                                           NULL AS AVAL_45 ," ).append("\n"); 
		query.append("                                                           NULL AS AVAL_53 ," ).append("\n"); 
		query.append("                                                           NULL AS AVAL_RF ," ).append("\n"); 
		query.append("                                                           NULL AS AVAL_WGT," ).append("\n"); 
		query.append("                                                           V.CTRL_PORT     ," ).append("\n"); 
		query.append("                                                           V.CTRL_HC       ," ).append("\n"); 
		query.append("                                                           V.CTRL_45       ," ).append("\n"); 
		query.append("                                                           V.CTRL_53       ," ).append("\n"); 
		query.append("                                                           V.CTRL_RF       ," ).append("\n"); 
		query.append("                                                           V.CTRL_WGT" ).append("\n"); 
		query.append("                                                      FROM SPC_DLY_FCAST_CUST DF," ).append("\n"); 
		query.append("                                                           PORT_SKD           V" ).append("\n"); 
		query.append("                                                     WHERE DF.REP_TRD_CD              = V.REP_TRD_CD" ).append("\n"); 
		query.append("                                                       AND DF.REP_SUB_TRD_CD          = V.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                                                       AND DF.RLANE_CD                = V.RLANE_CD" ).append("\n"); 
		query.append("                                                       AND DF.DIR_CD                  = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                       AND DF.VSL_CD                  = V.VSL_CD" ).append("\n"); 
		query.append("                                                       AND DF.SKD_VOY_NO              = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                       AND DF.SKD_DIR_CD              = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                       AND SUBSTR(DF.POL_YD_CD, 1, LENGTH(V.POL_CD)) = V.POL_CD" ).append("\n"); 
		query.append("                                                       AND SUBSTR(DF.POD_YD_CD, 1, LENGTH(V.POD_CD)) = V.POD_CD" ).append("\n"); 
		query.append("                                                       AND (V.IOC_CD IS NULL OR DECODE(DF.IOC_TS_CD, 'T', 'T/S','O', 'OCN', 'I', 'IPC') = V.IOC_CD)" ).append("\n"); 
		query.append("                                                       AND (V.ORG IS NULL OR V.ORG = DF.SLS_OFC_CD)" ).append("\n"); 
		query.append("                                                 ) Z2," ).append("\n"); 
		query.append("                                                 ( SELECT LEVEL SEQ" ).append("\n"); 
		query.append("                                                     FROM DUAL" ).append("\n"); 
		query.append("                                                  CONNECT BY LEVEL <= 2 ) Q" ).append("\n"); 
		query.append("                                           WHERE Q.SEQ = DECODE(Z2.FLG, 3, 1, Q.SEQ)" ).append("\n"); 
		query.append("                                             AND Z2.FLG + Q.SEQ > 2" ).append("\n"); 
		query.append("                                        GROUP BY Z2.POL_ETB_DT    ," ).append("\n"); 
		query.append("                                                 Z2.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                 Z2.TRD_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.RLANE_CD      ," ).append("\n"); 
		query.append("                                                 Z2.COST_WK       ," ).append("\n"); 
		query.append("                                                 Z2.VSL_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                 Z2.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                 Z2.IOC_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                 Z2.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                 CASE WHEN Z2.FLG + Q.SEQ >= 3 THEN Z2.SLS_RGN_OFC_CD END," ).append("\n"); 
		query.append("                                                 Z2.FLG + Q.SEQ   ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_PORT     ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_HC       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_45       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_53       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_RF       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_WGT      ," ).append("\n"); 
		query.append("                                                 -- TOTAL SUM 값이 필요하여 SLS_OFC_CD 값도 ROLLUP에 추가한뒤 하위부분에서 TT = 4 해당하는것만 취함." ).append("\n"); 
		query.append("                                                 ROLLUP(DECODE(Z2.FLG + Q.SEQ, 4, Z2.SLS_OFC_CD), Z2.POD_CD)" ).append("\n"); 
		query.append("                                          -- POD 별 TOTAL SUM 값이 필요하여 UNION ALL사용." ).append("\n"); 
		query.append("                                          UNION ALL" ).append("\n"); 
		query.append("                                          SELECT Z2.POL_ETB_DT    ," ).append("\n"); 
		query.append("                                                 Z2.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                 Z2.TRD_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.RLANE_CD      ," ).append("\n"); 
		query.append("                                                 Z2.COST_WK       ," ).append("\n"); 
		query.append("                                                 Z2.VSL_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                 Z2.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                 Z2.IOC_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                 Z2.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                 Z2.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                                 '' AS SLS_OFC_CD ," ).append("\n"); 
		query.append("                                                 Z2.POD_CD        ," ).append("\n"); 
		query.append("                                                 Z2.POD_SEQ       ," ).append("\n"); 
		query.append("                                                 Z2.TT            ," ).append("\n"); 
		query.append("                                                 SUM(Z2.FCAST_TTL) AS FCAST_TTL," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_HC , 'Y', SUM(Z2.FCAST_HC))  AS FCAST_HC ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_45 , 'Y', SUM(Z2.FCAST_45))  AS FCAST_45 ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_53 , 'Y', SUM(Z2.FCAST_53))  AS FCAST_53 ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_RF , 'Y', SUM(Z2.FCAST_RF))  AS FCAST_RF ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_WGT, 'Y', SUM(Z2.FCAST_WGT)) AS FCAST_WGT," ).append("\n"); 
		query.append("                                                 Z2.CTRL_PORT," ).append("\n"); 
		query.append("                                                 Z2.CTRL_HC  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_45  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_53  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_RF  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_WGT ," ).append("\n"); 
		query.append("                                                 '' AS T" ).append("\n"); 
		query.append("                                            FROM (" ).append("\n"); 
		query.append("                                                    SELECT Z2.POL_ETB_DT    ," ).append("\n"); 
		query.append("                                                           Z2.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                           Z2.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                           Z2.TRD_CD        ," ).append("\n"); 
		query.append("                                                           Z2.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                           Z2.RLANE_CD      ," ).append("\n"); 
		query.append("                                                           Z2.COST_WK       ," ).append("\n"); 
		query.append("                                                           Z2.VSL_CD        ," ).append("\n"); 
		query.append("                                                           Z2.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                           Z2.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                           Z2.IOC_CD        ," ).append("\n"); 
		query.append("                                                           Z2.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                           Z2.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                           Z2.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                                           Z2.SLS_OFC_CD    ," ).append("\n"); 
		query.append("                                                           Z2.POD_CD        ," ).append("\n"); 
		query.append("                                                           MIN(Z2.POD_SEQ)   AS POD_SEQ," ).append("\n"); 
		query.append("                                                           (Z2.FLG + Q.SEQ)  AS TT     ," ).append("\n"); 
		query.append("                                                           SUM(Z2.FCAST_TTL) AS FCAST_TTL," ).append("\n"); 
		query.append("                                                           DECODE(Z2.CTRL_HC , 'Y', SUM(Z2.FCAST_HC))  AS FCAST_HC ," ).append("\n"); 
		query.append("                                                           DECODE(Z2.CTRL_45 , 'Y', SUM(Z2.FCAST_45))  AS FCAST_45 ," ).append("\n"); 
		query.append("                                                           DECODE(Z2.CTRL_53 , 'Y', SUM(Z2.FCAST_53))  AS FCAST_53 ," ).append("\n"); 
		query.append("                                                           DECODE(Z2.CTRL_RF , 'Y', SUM(Z2.FCAST_RF))  AS FCAST_RF ," ).append("\n"); 
		query.append("                                                           DECODE(Z2.CTRL_WGT, 'Y', SUM(Z2.FCAST_WGT)) AS FCAST_WGT," ).append("\n"); 
		query.append("                                                           Z2.CTRL_PORT," ).append("\n"); 
		query.append("                                                           Z2.CTRL_HC  ," ).append("\n"); 
		query.append("                                                           Z2.CTRL_45  ," ).append("\n"); 
		query.append("                                                           Z2.CTRL_53  ," ).append("\n"); 
		query.append("                                                           Z2.CTRL_RF  ," ).append("\n"); 
		query.append("                                                           Z2.CTRL_WGT" ).append("\n"); 
		query.append("                                                      FROM (" ).append("\n"); 
		query.append("                                                              SELECT V.POL_ETB_DT     ," ).append("\n"); 
		query.append("                                                                     DF.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                                     DF.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                                     DF.TRD_CD        ," ).append("\n"); 
		query.append("                                                                     DF.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                                     DF.RLANE_CD      ," ).append("\n"); 
		query.append("                                                                     V.COST_WK        ," ).append("\n"); 
		query.append("                                                                     DF.VSL_CD        ," ).append("\n"); 
		query.append("                                                                     DF.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                                     DF.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                                     DECODE(DF.IOC_TS_CD, 'T', 'T/S','O', 'OCN', 'I', 'IPC')          AS IOC_CD," ).append("\n"); 
		query.append("                                                                     DECODE(DF.SLS_OFC_CD, DF.SLS_RHQ_CD, 1, DF.SLS_RGN_OFC_CD, 2, 3) AS FLG   ," ).append("\n"); 
		query.append("                                                                     DF.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                                     DF.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                                     DF.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                                                     DF.SLS_OFC_CD    ," ).append("\n"); 
		query.append("                                                                     SUBSTR(DF.POD_YD_CD, 1, 5) AS POD_CD," ).append("\n"); 
		query.append("                                                                     V.POD_SEQ," ).append("\n"); 
		query.append("                                                                     DF.FCAST_TTL_QTY     AS FCAST_TTL," ).append("\n"); 
		query.append("                                                                     DF.FCAST_40FT_HC_QTY AS FCAST_HC ," ).append("\n"); 
		query.append("                                                                     DF.FCAST_45FT_HC_QTY AS FCAST_45 ," ).append("\n"); 
		query.append("                                                                     DF.FCAST_53FT_QTY    AS FCAST_53 ," ).append("\n"); 
		query.append("                                                                     DF.FCAST_RF_QTY      AS FCAST_RF ," ).append("\n"); 
		query.append("                                                                     DF.FCAST_TTL_WGT     AS FCAST_WGT," ).append("\n"); 
		query.append("                                                                     V.CTRL_PORT," ).append("\n"); 
		query.append("                                                                     V.CTRL_HC  ," ).append("\n"); 
		query.append("                                                                     V.CTRL_45  ," ).append("\n"); 
		query.append("                                                                     V.CTRL_53  ," ).append("\n"); 
		query.append("                                                                     V.CTRL_RF  ," ).append("\n"); 
		query.append("                                                                     V.CTRL_WGT" ).append("\n"); 
		query.append("                                                                FROM SPC_DLY_FCAST_CUST DF," ).append("\n"); 
		query.append("                                                                     PORT_SKD           V" ).append("\n"); 
		query.append("                                                               WHERE DF.REP_TRD_CD              = V.REP_TRD_CD" ).append("\n"); 
		query.append("                                                                 AND DF.REP_SUB_TRD_CD          = V.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                                                                 AND DF.RLANE_CD                = V.RLANE_CD" ).append("\n"); 
		query.append("                                                                 AND DF.DIR_CD                  = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                 AND DF.VSL_CD                  = V.VSL_CD" ).append("\n"); 
		query.append("                                                                 AND DF.SKD_VOY_NO              = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                 AND DF.SKD_DIR_CD              = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                 AND SUBSTR(DF.POL_YD_CD, 1, LENGTH(V.POL_CD)) = V.POL_CD" ).append("\n"); 
		query.append("                                                                 AND SUBSTR(DF.POD_YD_CD, 1, LENGTH(V.POL_CD)) = V.POD_CD" ).append("\n"); 
		query.append("                                                                 AND (V.IOC_CD IS NULL OR DECODE(DF.IOC_TS_CD, 'T', 'T/S','O', 'OCN', 'I', 'IPC') = V.IOC_CD)" ).append("\n"); 
		query.append("                                                                 AND (V.ORG IS NULL OR V.ORG = DF.SLS_OFC_CD)" ).append("\n"); 
		query.append("                                                           ) Z2," ).append("\n"); 
		query.append("                                                           ( SELECT LEVEL AS SEQ" ).append("\n"); 
		query.append("                                                               FROM DUAL" ).append("\n"); 
		query.append("                                                            CONNECT BY LEVEL <= 2 ) Q" ).append("\n"); 
		query.append("                                                      WHERE Q.SEQ = DECODE(Z2.FLG, 3, 1, Q.SEQ)" ).append("\n"); 
		query.append("                                                        AND Z2.FLG + Q.SEQ > 2" ).append("\n"); 
		query.append("                                                        AND Z2.FLG + Q.SEQ = 4" ).append("\n"); 
		query.append("                                                   GROUP BY Z2.POL_ETB_DT    ," ).append("\n"); 
		query.append("                                                            Z2.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                            Z2.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                            Z2.TRD_CD        ," ).append("\n"); 
		query.append("                                                            Z2.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                            Z2.RLANE_CD      ," ).append("\n"); 
		query.append("                                                            Z2.COST_WK       ," ).append("\n"); 
		query.append("                                                            Z2.VSL_CD        ," ).append("\n"); 
		query.append("                                                            Z2.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                            Z2.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                            Z2.IOC_CD        ," ).append("\n"); 
		query.append("                                                            Z2.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                            Z2.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                            Z2.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                                            Z2.SLS_OFC_CD    ," ).append("\n"); 
		query.append("                                                            Z2.FLG + Q.SEQ   ," ).append("\n"); 
		query.append("                                                            Z2.CTRL_PORT     ," ).append("\n"); 
		query.append("                                                            Z2.CTRL_HC       ," ).append("\n"); 
		query.append("                                                            Z2.CTRL_45       ," ).append("\n"); 
		query.append("                                                            Z2.CTRL_53       ," ).append("\n"); 
		query.append("                                                            Z2.CTRL_RF       ," ).append("\n"); 
		query.append("                                                            Z2.CTRL_WGT      ," ).append("\n"); 
		query.append("                                                            Z2.POD_CD" ).append("\n"); 
		query.append("                                                 ) Z2" ).append("\n"); 
		query.append("                                           WHERE NVL(Z2.FCAST_TTL, 0) + NVL(Z2.FCAST_HC, 0) + NVL(Z2.FCAST_45, 0) + NVL(Z2.FCAST_53, 0) + NVL(Z2.FCAST_RF, 0) + NVL(Z2.FCAST_WGT, 0) <> 0" ).append("\n"); 
		query.append("                                        GROUP BY Z2.POL_ETB_DT    ," ).append("\n"); 
		query.append("                                                 Z2.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                 Z2.TRD_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.RLANE_CD      ," ).append("\n"); 
		query.append("                                                 Z2.COST_WK       ," ).append("\n"); 
		query.append("                                                 Z2.VSL_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                 Z2.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                 Z2.IOC_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                 Z2.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                 Z2.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                                 Z2.POD_CD        ," ).append("\n"); 
		query.append("                                                 Z2.POD_SEQ       ," ).append("\n"); 
		query.append("                                                 Z2.TT            ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_PORT     ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_HC       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_45       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_53       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_RF       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_WGT" ).append("\n"); 
		query.append("                                       ) Z3" ).append("\n"); 
		query.append("                                 WHERE (Z3.CTRL_PORT = 'Y' OR Z3.POD_CD IS NULL)" ).append("\n"); 
		query.append("                                   AND Z3.TT = 4" ).append("\n"); 
		query.append("                                UNION ALL" ).append("\n"); 
		query.append("                                --ALLOCATION" ).append("\n"); 
		query.append("                                SELECT Z3.POL_ETB_DT AS ETB_DT," ).append("\n"); 
		query.append("                                       Z3.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                       Z3.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                       Z3.TRD_CD        ," ).append("\n"); 
		query.append("                                       Z3.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                       Z3.RLANE_CD      ," ).append("\n"); 
		query.append("                                       Z3.COST_WK       ," ).append("\n"); 
		query.append("                                       Z3.VSL_CD||Z3.SKD_VOY_NO||Z3.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("                                       Z3.IOC_CD        ," ).append("\n"); 
		query.append("                                       Z3.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                       NVL(Z3.SLS_AQ_CD     , ' ') AS SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                       NVL(Z3.SLS_RGN_OFC_CD, ' ') AS SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                       NVL(Z3.SLS_OFC_CD    , ' ') AS SLS_OFC_CD    ," ).append("\n"); 
		query.append("                                       NVL(Z3.POD_CD        , ' ') AS POD_CD        ," ).append("\n"); 
		query.append("                                       Z3.POD_SEQ       ," ).append("\n"); 
		query.append("                                       NULL AS FCAST_TTL," ).append("\n"); 
		query.append("                                       NULL AS FCAST_HC ," ).append("\n"); 
		query.append("                                       NULL AS FCAST_45 ," ).append("\n"); 
		query.append("                                       NULL AS FCAST_53 ," ).append("\n"); 
		query.append("                                       NULL AS FCAST_RF ," ).append("\n"); 
		query.append("                                       NULL AS FCAST_WGT," ).append("\n"); 
		query.append("                                       Z3.ASGN_TTL      ," ).append("\n"); 
		query.append("                                       Z3.ASGN_HC       ," ).append("\n"); 
		query.append("                                       Z3.ASGN_45       ," ).append("\n"); 
		query.append("                                       Z3.ASGN_53       ," ).append("\n"); 
		query.append("                                       Z3.ASGN_RF       ," ).append("\n"); 
		query.append("                                       Z3.ASGN_WGT      ," ).append("\n"); 
		query.append("                                       0 AS BKG_TTL     ," ).append("\n"); 
		query.append("                                       0 AS BKG_20      ," ).append("\n"); 
		query.append("                                       0 AS BKG_40      ," ).append("\n"); 
		query.append("                                       0 AS BKG_HC      ," ).append("\n"); 
		query.append("                                       0 AS BKG_45      ," ).append("\n"); 
		query.append("                                       0 AS BKG_53      ," ).append("\n"); 
		query.append("                                       0 AS BKG_RF20    ," ).append("\n"); 
		query.append("                                       0 AS BKG_RF40    ," ).append("\n"); 
		query.append("                                       0 AS BKG_WGT" ).append("\n"); 
		query.append("                                  FROM (" ).append("\n"); 
		query.append("                                          SELECT Z2.POL_ETB_DT    ," ).append("\n"); 
		query.append("                                                 Z2.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                 Z2.TRD_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.RLANE_CD      ," ).append("\n"); 
		query.append("                                                 Z2.COST_WK       ," ).append("\n"); 
		query.append("                                                 Z2.VSL_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                 Z2.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                 Z2.IOC_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                 Z2.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                 (CASE WHEN Z2.FLG + Q.SEQ >= 3 THEN Z2.SLS_RGN_OFC_CD END) AS SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                                 DECODE(Z2.FLG + Q.SEQ, 4, Z2.SLS_OFC_CD) AS SLS_OFC_CD," ).append("\n"); 
		query.append("                                                 Z2.POD_CD," ).append("\n"); 
		query.append("                                                 MIN(Z2.POD_SEQ)  AS POD_SEQ," ).append("\n"); 
		query.append("                                                 (Z2.FLG + Q.SEQ) AS TT," ).append("\n"); 
		query.append("                                                 -- ALLOCATION TTL값과 하위 DATA의 합이 다른 이유는 하위 DATA는 ALLOCATION 당시의 BKG 값을 취하기 때문." ).append("\n"); 
		query.append("                                                 DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.AVAL_TTL), SUM(Z2.ASGN_TTL)) AS ASGN_TTL," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_HC , 'Y', DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.AVAL_HC) , SUM(Z2.ASGN_HC)))  AS ASGN_HC ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_45 , 'Y', DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.AVAL_45) , SUM(Z2.ASGN_45)))  AS ASGN_45 ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_53 , 'Y', DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.AVAL_53) , SUM(Z2.ASGN_53)))  AS ASGN_53 ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_RF , 'Y', DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.AVAL_RF) , SUM(Z2.ASGN_RF)))  AS ASGN_RF ," ).append("\n"); 
		query.append("                                                 DECODE(Z2.CTRL_WGT, 'Y', DECODE(Z2.FLG + Q.SEQ, 4, SUM(Z2.AVAL_WGT), SUM(Z2.ASGN_WGT))) AS ASGN_WGT," ).append("\n"); 
		query.append("                                                 Z2.CTRL_PORT," ).append("\n"); 
		query.append("                                                 Z2.CTRL_HC  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_45  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_53  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_RF  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_WGT ," ).append("\n"); 
		query.append("                                                 '' AS T" ).append("\n"); 
		query.append("                                            FROM (" ).append("\n"); 
		query.append("                                                    SELECT V.POL_ETB_DT     ," ).append("\n"); 
		query.append("                                                           AL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                           AL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                           AL.TRD_CD        ," ).append("\n"); 
		query.append("                                                           AL.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                           AL.RLANE_CD      ," ).append("\n"); 
		query.append("                                                           V.COST_WK        ," ).append("\n"); 
		query.append("                                                           AL.VSL_CD        ," ).append("\n"); 
		query.append("                                                           AL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                           AL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                           DECODE(AL.TS_FLG, 'Y', 'T/S', DECODE(AL.IOC_CD, 'O', 'OCN', 'I', 'IPC')) AS IOC_CD," ).append("\n"); 
		query.append("                                                           DECODE(AL.SLS_OFC_CD, AL.SLS_RHQ_CD, 1, AL.SLS_RGN_OFC_CD, 2, 3) AS FLG," ).append("\n"); 
		query.append("                                                           AL.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                           AL.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                           AL.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                                           AL.SLS_OFC_CD    ," ).append("\n"); 
		query.append("                                                           SUBSTR(AL.POD_YD_CD, 1, 5) AS POD_CD," ).append("\n"); 
		query.append("                                                           V.POD_SEQ," ).append("\n"); 
		query.append("                                                           AL.ASGN_TTL_QTY         AS ASGN_TTL," ).append("\n"); 
		query.append("                                                           AL.ASGN_40FT_HC_QTY     AS ASGN_HC ," ).append("\n"); 
		query.append("                                                           AL.ASGN_45FT_HC_QTY     AS ASGN_45 ," ).append("\n"); 
		query.append("                                                           AL.ASGN_53FT_QTY        AS ASGN_53 ," ).append("\n"); 
		query.append("                                                           AL.ASGN_RF_QTY          AS ASGN_RF ," ).append("\n"); 
		query.append("                                                           AL.ASGN_TTL_WGT         AS ASGN_WGT," ).append("\n"); 
		query.append("                                                           AL.BKG_AVAL_TTL_QTY     AS AVAL_TTL," ).append("\n"); 
		query.append("                                                           AL.BKG_AVAL_40FT_HC_QTY AS AVAL_HC ," ).append("\n"); 
		query.append("                                                           AL.BKG_AVAL_45FT_HC_QTY AS AVAL_45 ," ).append("\n"); 
		query.append("                                                           AL.BKG_AVAL_53FT_QTY    AS AVAL_53 ," ).append("\n"); 
		query.append("                                                           AL.BKG_AVAL_RF_QTY      AS AVAL_RF ," ).append("\n"); 
		query.append("                                                           AL.BKG_AVAL_TTL_WGT     AS AVAL_WGT," ).append("\n"); 
		query.append("                                                           V.CTRL_PORT," ).append("\n"); 
		query.append("                                                           V.CTRL_HC  ," ).append("\n"); 
		query.append("                                                           V.CTRL_45  ," ).append("\n"); 
		query.append("                                                           V.CTRL_53  ," ).append("\n"); 
		query.append("                                                           V.CTRL_RF  ," ).append("\n"); 
		query.append("                                                           V.CTRL_WGT" ).append("\n"); 
		query.append("                                                      FROM SPC_ALOC_POL_POD AL," ).append("\n"); 
		query.append("                                                           PORT_SKD         V" ).append("\n"); 
		query.append("                                                     WHERE AL.REP_TRD_CD              = V.REP_TRD_CD" ).append("\n"); 
		query.append("                                                       AND AL.REP_SUB_TRD_CD          = V.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                                                       AND AL.RLANE_CD                = V.RLANE_CD" ).append("\n"); 
		query.append("                                                       AND AL.DIR_CD                  = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                       AND AL.VSL_CD                  = V.VSL_CD" ).append("\n"); 
		query.append("                                                       AND AL.SKD_VOY_NO              = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                       AND AL.SKD_DIR_CD              = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                       AND SUBSTR(AL.POL_YD_CD, 1, LENGTH(V.POL_CD)) = V.POL_CD" ).append("\n"); 
		query.append("                                                       AND SUBSTR(AL.POD_YD_CD, 1, LENGTH(V.POD_CD)) = V.POD_CD" ).append("\n"); 
		query.append("                                                       AND (V.IOC_CD IS NULL OR DECODE(AL.TS_FLG, 'Y', 'T/S', DECODE(AL.IOC_CD, 'O', 'OCN', 'I', 'IPC')) = V.IOC_CD)" ).append("\n"); 
		query.append("                                                       AND (V.ORG IS NULL OR V.ORG = AL.SLS_OFC_CD)" ).append("\n"); 
		query.append("                                                 ) Z2," ).append("\n"); 
		query.append("                                                 ( SELECT LEVEL AS SEQ" ).append("\n"); 
		query.append("                                                     FROM DUAL" ).append("\n"); 
		query.append("                                                  CONNECT BY LEVEL <= 2 ) Q" ).append("\n"); 
		query.append("                                           WHERE Q.SEQ = DECODE(Z2.FLG, 3, 1, Q.SEQ)" ).append("\n"); 
		query.append("                                             AND Z2.FLG + Q.SEQ > 2" ).append("\n"); 
		query.append("                                        GROUP BY Z2.POL_ETB_DT    ," ).append("\n"); 
		query.append("                                                 Z2.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                 Z2.TRD_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                                 Z2.RLANE_CD      ," ).append("\n"); 
		query.append("                                                 Z2.COST_WK       ," ).append("\n"); 
		query.append("                                                 Z2.VSL_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                                 Z2.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                                 Z2.IOC_CD        ," ).append("\n"); 
		query.append("                                                 Z2.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                 Z2.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                 CASE WHEN Z2.FLG + Q.SEQ >= 3 THEN Z2.SLS_RGN_OFC_CD END," ).append("\n"); 
		query.append("                                                 DECODE(Z2.FLG + Q.SEQ, 4, Z2.SLS_OFC_CD)," ).append("\n"); 
		query.append("                                                 Z2.FLG + Q.SEQ   ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_PORT     ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_HC       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_45       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_53       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_RF       ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_WGT      ," ).append("\n"); 
		query.append("                                                 ROLLUP(Z2.POD_CD)" ).append("\n"); 
		query.append("                                       ) Z3" ).append("\n"); 
		query.append("                                 WHERE Z3.CTRL_PORT = 'Y' OR Z3.POD_CD IS NULL" ).append("\n"); 
		query.append("                                UNION ALL" ).append("\n"); 
		query.append("                                --BOOKING" ).append("\n"); 
		query.append("                                SELECT Z4.ETB_DT        ," ).append("\n"); 
		query.append("                                       Z4.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                       Z4.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                       Z4.TRD_CD        ," ).append("\n"); 
		query.append("                                       Z4.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                       Z4.RLANE_CD      ," ).append("\n"); 
		query.append("                                       Z4.COST_WK       ," ).append("\n"); 
		query.append("                                       Z4.VVD           ," ).append("\n"); 
		query.append("                                       Z4.IOC_CD        ," ).append("\n"); 
		query.append("                                       Z4.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                       Z4.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                       Z4.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                       Z4.SLS_OFC_CD    ," ).append("\n"); 
		query.append("                                       Z4.POD_CD        ," ).append("\n"); 
		query.append("                                       Z4.POD_SEQ       ," ).append("\n"); 
		query.append("                                       NULL AS FCAST_TTL," ).append("\n"); 
		query.append("                                       NULL AS FCAST_HC ," ).append("\n"); 
		query.append("                                       NULL AS FCAST_45 ," ).append("\n"); 
		query.append("                                       NULL AS FCAST_53 ," ).append("\n"); 
		query.append("                                       NULL AS FCAST_RF ," ).append("\n"); 
		query.append("                                       NULL AS FCAST_WGT," ).append("\n"); 
		query.append("                                       NULL AS ASGN_TTL ," ).append("\n"); 
		query.append("                                       NULL AS ASGN_HC  ," ).append("\n"); 
		query.append("                                       NULL AS ASGN_45  ," ).append("\n"); 
		query.append("                                       NULL AS ASGN_53  ," ).append("\n"); 
		query.append("                                       NULL AS ASGN_RF  ," ).append("\n"); 
		query.append("                                       NULL AS ASGN_WGT ," ).append("\n"); 
		query.append("                                       Z4.BKG_TTL       ," ).append("\n"); 
		query.append("                                       Z4.BKG_20        ," ).append("\n"); 
		query.append("                                       Z4.BKG_40        ," ).append("\n"); 
		query.append("                                       Z4.BKG_HC        ," ).append("\n"); 
		query.append("                                       Z4.BKG_45        ," ).append("\n"); 
		query.append("                                       Z4.BKG_53        ," ).append("\n"); 
		query.append("                                       Z4.BKG_RF20      ," ).append("\n"); 
		query.append("                                       Z4.BKG_RF40      ," ).append("\n"); 
		query.append("                                       Z4.BKG_WGT" ).append("\n"); 
		query.append("                                  FROM (" ).append("\n"); 
		query.append("                                          SELECT Z2.POL_ETB_DT AS ETB_DT," ).append("\n"); 
		query.append("                                                 Z2.REP_TRD_CD," ).append("\n"); 
		query.append("                                                 Z2.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                                 Z2.TRD_CD," ).append("\n"); 
		query.append("                                                 Z2.SUB_TRD_CD," ).append("\n"); 
		query.append("                                                 Z2.RLANE_CD," ).append("\n"); 
		query.append("                                                 Z2.COST_WK," ).append("\n"); 
		query.append("                                                 Z2.VSL_CD||Z2.SKD_VOY_NO||Z2.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("                                                 Z2.IOC_CD," ).append("\n"); 
		query.append("                                                 O.N2ND_PRNT_OFC_CD                AS SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                                 NVL(MAX(O.N3RD_PRNT_OFC_CD), ' ') AS SLS_AQ_CD     ," ).append("\n"); 
		query.append("                                                 NVL(O.N4TH_PRNT_OFC_CD, ' ')      AS SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                                 NVL(DECODE(O.OFC_KND_CD, '6', DECODE(Z2.SLS_OFC_CD, O.N4TH_PRNT_OFC_CD, O.N4TH_PRNT_OFC_CD, O.N5TH_PRNT_OFC_CD), Z2.SLS_OFC_CD), ' ') AS SLS_OFC_CD," ).append("\n"); 
		query.append("                                                 NVL(Z2.POD_CD, ' ')     AS POD_CD ," ).append("\n"); 
		query.append("                                                 NVL(MIN(Z2.POD_SEQ), 0) AS POD_SEQ," ).append("\n"); 
		query.append("                                                 SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL,  1, 14), 0))) AS BKG_TTL ," ).append("\n"); 
		query.append("                                                 SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 15, 14), 0))) AS BKG_20  ," ).append("\n"); 
		query.append("                                                 SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 29, 14), 0))) AS BKG_40  ," ).append("\n"); 
		query.append("                                                 SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 43, 14), 0))) AS BKG_HC  ," ).append("\n"); 
		query.append("                                                 SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 57, 14), 0))) AS BKG_45  ," ).append("\n"); 
		query.append("                                                 SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 71, 14), 0))) AS BKG_53  ," ).append("\n"); 
		query.append("                                                 SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 85, 14), 0))) AS BKG_RF20," ).append("\n"); 
		query.append("                                                 SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 99, 14), 0))) AS BKG_RF40," ).append("\n"); 
		query.append("                                                 SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 113, 14), 0))) AS BKG_WGT ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_PORT," ).append("\n"); 
		query.append("                                                 Z2.CTRL_HC  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_45  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_53  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_RF  ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_WGT" ).append("\n"); 
		query.append("                                            FROM BOOKING     Z2," ).append("\n"); 
		query.append("                                                 SPC_OFC_LVL O" ).append("\n"); 
		query.append("                                           WHERE Z2.SLS_OFC_CD = O.OFC_CD" ).append("\n"); 
		query.append("                                             AND Z2.COST_YR || Z2.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                                        GROUP BY Z2.POL_ETB_DT     ," ).append("\n"); 
		query.append("                                                 Z2.REP_TRD_CD     ," ).append("\n"); 
		query.append("                                                 Z2.REP_SUB_TRD_CD ," ).append("\n"); 
		query.append("                                                 Z2.TRD_CD         ," ).append("\n"); 
		query.append("                                                 Z2.SUB_TRD_CD     ," ).append("\n"); 
		query.append("                                                 Z2.RLANE_CD       ," ).append("\n"); 
		query.append("                                                 Z2.COST_WK        ," ).append("\n"); 
		query.append("                                                 Z2.VSL_CD         ," ).append("\n"); 
		query.append("                                                 Z2.SKD_VOY_NO     ," ).append("\n"); 
		query.append("                                                 Z2.SKD_DIR_CD     ," ).append("\n"); 
		query.append("                                                 Z2.IOC_CD         ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_PORT      ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_HC        ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_45        ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_53        ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_RF        ," ).append("\n"); 
		query.append("                                                 Z2.CTRL_WGT       ," ).append("\n"); 
		query.append("                                                 O.N2ND_PRNT_OFC_CD," ).append("\n"); 
		query.append("                                                 CUBE(/*O.N3RD_PRNT_OFC_CD, */ O.N4TH_PRNT_OFC_CD, DECODE(O.OFC_KND_CD, '6', DECODE(Z2.SLS_OFC_CD, O.N4TH_PRNT_OFC_CD, O.N4TH_PRNT_OFC_CD, O.N5TH_PRNT_OFC_CD), Z2.SLS_OFC_CD), Z2.POD_CD)" ).append("\n"); 
		query.append("                                          HAVING Z2.CTRL_PORT = 'Y' OR Z2.POD_CD IS NULL" ).append("\n"); 
		query.append("                                       ) Z4" ).append("\n"); 
		query.append("                                 WHERE NOT (" ).append("\n"); 
		query.append("                                                (Z4.SLS_RHQ_CD = 'SHAAS' AND Z4.SLS_RGN_OFC_CD = ' ')" ).append("\n"); 
		query.append("                                             OR (Z4.SLS_RHQ_CD IN ('HAMUR', 'NYCNA') AND (DECODE(Z4.SLS_RGN_OFC_CD, ' ', 0, 2) + DECODE(Z4.SLS_OFC_CD, ' ', 0, 1)) = 1)" ).append("\n"); 
		query.append("                                             OR (Z4.IOC_CD <> 'T/S' AND Z4.SLS_RGN_OFC_CD = ' ')" ).append("\n"); 
		query.append("                                           )" ).append("\n"); 
		query.append("                             ) Z5" ).append("\n"); 
		query.append("                    GROUP BY Z5.ETB_DT        ," ).append("\n"); 
		query.append("                             Z5.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             Z5.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             Z5.TRD_CD        ," ).append("\n"); 
		query.append("                             Z5.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                             Z5.RLANE_CD      ," ).append("\n"); 
		query.append("                             Z5.COST_WK       ," ).append("\n"); 
		query.append("                             Z5.VVD           ," ).append("\n"); 
		query.append("                             Z5.IOC_CD        ," ).append("\n"); 
		query.append("                             Z5.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                             Z5.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                             Z5.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                             Z5.SLS_OFC_CD    ," ).append("\n"); 
		query.append("                             Z5.POD_CD" ).append("\n"); 
		query.append("                      HAVING NOT (" ).append("\n"); 
		query.append("                                      (Z5.SLS_RHQ_CD = 'SHAAS' AND Z5.SLS_RGN_OFC_CD = ' ')" ).append("\n"); 
		query.append("                                   OR (Z5.SLS_RHQ_CD IN ('HAMUR') AND ((DECODE(Z5.SLS_RGN_OFC_CD, ' ', 0, 2) + DECODE(Z5.SLS_OFC_CD, ' ', 0, 1)) = 1))" ).append("\n"); 
		query.append("                                   OR (Z5.SLS_RHQ_CD IN ('NYCNA') AND (DECODE(Z5.SLS_RGN_OFC_CD, ' ', 0, 2) + DECODE(Z5.SLS_OFC_CD, ' ', 0, 1)) = 1)" ).append("\n"); 
		query.append("                                 )" ).append("\n"); 
		query.append("                    ORDER BY Z5.ETB_DT        ," ).append("\n"); 
		query.append("                             Z5.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             Z5.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             Z5.TRD_CD        ," ).append("\n"); 
		query.append("                             Z5.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                             Z5.RLANE_CD      ," ).append("\n"); 
		query.append("                             Z5.COST_WK       ," ).append("\n"); 
		query.append("                             Z5.VVD           ," ).append("\n"); 
		query.append("                             Z5.IOC_CD        ," ).append("\n"); 
		query.append("                             Z5.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                             Z5.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                             DECODE(Z5.SLS_OFC_CD, ' ', 1, Z5.SLS_RGN_OFC_CD, 2, 3)," ).append("\n"); 
		query.append("                             Z5.SLS_OFC_CD    ," ).append("\n"); 
		query.append("                             MIN(Z5.POD_SEQ)  ," ).append("\n"); 
		query.append("                             Z5.POD_CD" ).append("\n"); 
		query.append("                   ) Z6" ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("            --DISCHARGE BOOKING" ).append("\n"); 
		query.append("            SELECT Z3.POL_ETB_DT AS ETB_DT," ).append("\n"); 
		query.append("                   Z3.REP_TRD_CD    ," ).append("\n"); 
		query.append("                   Z3.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                   Z3.TRD_CD        ," ).append("\n"); 
		query.append("                   Z3.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                   Z3.RLANE_CD      ," ).append("\n"); 
		query.append("                   Z3.COST_WK       ," ).append("\n"); 
		query.append("                   Z3.VSL_CD||Z3.SKD_VOY_NO||Z3.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("                   Z3.IOC_CD        ," ).append("\n"); 
		query.append("                   Z3.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                   Z3.SLS_AQ_CD     ," ).append("\n"); 
		query.append("                   Z3.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                   RANK() OVER ( PARTITION BY Z3.POL_ETB_DT, Z3.REP_TRD_CD, Z3.REP_SUB_TRD_CD, Z3.TRD_CD, Z3.SUB_TRD_CD, Z3.RLANE_CD, Z3.COST_WK, Z3.VSL_CD, Z3.SKD_VOY_NO, Z3.SKD_DIR_CD, Z3.IOC_CD, Z3.SLS_RHQ_CD, Z3.SLS_AQ_CD, Z3.SLS_RGN_OFC_CD ORDER BY ROWNUM) AS RK," ).append("\n"); 
		query.append("                   ''   AS SLS_OFC_CD   ," ).append("\n"); 
		query.append("                   ''   AS POD_CD       ," ).append("\n"); 
		query.append("                   NULL AS FCAST_TTL    ," ).append("\n"); 
		query.append("                   NULL AS FCAST_HC     ," ).append("\n"); 
		query.append("                   NULL AS FCAST_45     ," ).append("\n"); 
		query.append("                   NULL AS FCAST_53     ," ).append("\n"); 
		query.append("                   NULL AS FCAST_RF     ," ).append("\n"); 
		query.append("                   NULL AS FCAST_WGT    ," ).append("\n"); 
		query.append("                   NULL AS ASGN_TTL     ," ).append("\n"); 
		query.append("                   NULL AS ASGN_HC      ," ).append("\n"); 
		query.append("                   NULL AS ASGN_45      ," ).append("\n"); 
		query.append("                   NULL AS ASGN_53      ," ).append("\n"); 
		query.append("                   NULL AS ASGN_RF      ," ).append("\n"); 
		query.append("                   NULL AS ASGN_WGT     ," ).append("\n"); 
		query.append("                   NULL AS DIF_TTL      ," ).append("\n"); 
		query.append("                   NULL AS DIF_HC       ," ).append("\n"); 
		query.append("                   NULL AS DIF_45       ," ).append("\n"); 
		query.append("                   NULL AS DIF_53       ," ).append("\n"); 
		query.append("                   NULL AS DIF_RF       ," ).append("\n"); 
		query.append("                   NULL AS DIF_WGT      ," ).append("\n"); 
		query.append("                   NULL AS BKG_TTL      ," ).append("\n"); 
		query.append("                   NULL AS BKG_S20      ," ).append("\n"); 
		query.append("                   NULL AS BKG_S40      ," ).append("\n"); 
		query.append("                   NULL AS BKG_20       ," ).append("\n"); 
		query.append("                   NULL AS BKG_40       ," ).append("\n"); 
		query.append("                   NULL AS BKG_HC       ," ).append("\n"); 
		query.append("                   NULL AS BKG_45       ," ).append("\n"); 
		query.append("                   NULL AS BKG_53       ," ).append("\n"); 
		query.append("                   NULL AS BKG_RF20     ," ).append("\n"); 
		query.append("                   NULL AS BKG_RF40     ," ).append("\n"); 
		query.append("                   NULL AS BKG_WGT      ," ).append("\n"); 
		query.append("                   Z3.PRE_REP_TRD_CD    ," ).append("\n"); 
		query.append("                   Z3.PRE_REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                   Z3.PRE_RLANE_CD      ," ).append("\n"); 
		query.append("                   Z3.PRE_VSL_CD||Z3.PRE_SKD_VOY_NO||Z3.PRE_SKD_DIR_CD AS PRE_VVD," ).append("\n"); 
		query.append("                   TO_CHAR(SAQ_GET_PORT_ETB_FNC(Z3.PRE_VSL_CD, Z3.PRE_SKD_VOY_NO, Z3.PRE_SKD_DIR_CD, SUBSTR(Z3.POD_CD, 1, 5)), 'YYYY.MM.DD') AS PRE_ETB_DT," ).append("\n"); 
		query.append("                   Z3.BKG_TTL_QTY     AS DIS_TTL ," ).append("\n"); 
		query.append("                   Z3.BKG_20FT_QTY    AS DIS_S20 , -- R2는 20에 포함됨" ).append("\n"); 
		query.append("                   Z3.BKG_40FT_QTY + Z3.BKG_40FT_HC_QTY + Z3.BKG_45FT_HC_QTY + Z3.BKG_53FT_QTY AS DIS_S40, --40/HC/45에 R4,R7,R5가 포함되어 있음" ).append("\n"); 
		query.append("                   Z3.BKG_20FT_QTY    AS DIS_20  ," ).append("\n"); 
		query.append("                   Z3.BKG_40FT_QTY    AS DIS_40  ," ).append("\n"); 
		query.append("                   Z3.BKG_40FT_HC_QTY AS DIS_HC  ," ).append("\n"); 
		query.append("                   Z3.BKG_45FT_HC_QTY AS DIS_45  ," ).append("\n"); 
		query.append("                   Z3.BKG_53FT_QTY    AS DIS_53  ," ).append("\n"); 
		query.append("                   Z3.BKG_RF20_QTY    AS DIS_RF20," ).append("\n"); 
		query.append("                   Z3.BKG_RF40_QTY    AS DIS_RF40," ).append("\n"); 
		query.append("                   Z3.BKG_TTL_WGT     AS DIS_WGT" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      SELECT Z2.POL_ETB_DT    ," ).append("\n"); 
		query.append("                             Z2.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             Z2.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             Z2.TRD_CD        ," ).append("\n"); 
		query.append("                             Z2.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                             Z2.RLANE_CD      ," ).append("\n"); 
		query.append("                             Z2.COST_WK       ," ).append("\n"); 
		query.append("                             Z2.VSL_CD        ," ).append("\n"); 
		query.append("                             Z2.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                             Z2.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                             Z2.IOC_CD        ," ).append("\n"); 
		query.append("                             NVL(O.N2ND_PRNT_OFC_CD, ' ') AS SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                             NVL(O.N3RD_PRNT_OFC_CD, ' ') AS SLS_AQ_CD     ," ).append("\n"); 
		query.append("                             NVL(O.N4TH_PRNT_OFC_CD, ' ') AS SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                             NVL(RL.RLANE_CD  , 'RBCCO')  AS PRE_RLANE_CD  ," ).append("\n"); 
		query.append("                             NVL(RL.REP_TRD_CD, 'IAS')    AS PRE_REP_TRD_CD," ).append("\n"); 
		query.append("                             SAQ_GET_REP_SUB_TRD_FNC(NVL(RL.RLANE_CD, 'RBCCO')) AS PRE_REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             Z2.PRE_VSL_CD    ," ).append("\n"); 
		query.append("                             Z2.PRE_SKD_VOY_NO," ).append("\n"); 
		query.append("                             Z2.PRE_SKD_DIR_CD," ).append("\n"); 
		query.append("                             Z2.POD_CD        ," ).append("\n"); 
		query.append("                             SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL,  1, 14), 0))) AS BKG_TTL_QTY    ," ).append("\n"); 
		query.append("                             SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 15, 14), 0))) AS BKG_20FT_QTY   ," ).append("\n"); 
		query.append("                             SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 29, 14), 0))) AS BKG_40FT_QTY   ," ).append("\n"); 
		query.append("                             SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 43, 14), 0))) AS BKG_40FT_HC_QTY," ).append("\n"); 
		query.append("                             SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 57, 14), 0))) AS BKG_45FT_HC_QTY," ).append("\n"); 
		query.append("                             SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 71, 14), 0))) AS BKG_53FT_QTY," ).append("\n"); 
		query.append("                             SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 85, 14), 0))) AS BKG_RF20_QTY   ," ).append("\n"); 
		query.append("                             SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 99, 14), 0))) AS BKG_RF40_QTY   ," ).append("\n"); 
		query.append("                             SUM(TO_NUMBER(NVL(SUBSTR(Z2.VAL, 113, 14), 0))) AS BKG_TTL_WGT" ).append("\n"); 
		query.append("                        FROM (" ).append("\n"); 
		query.append("                                SELECT V.POL_ETB_DT    ," ).append("\n"); 
		query.append("                                       V.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                       V.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                       V.TRD_CD        ," ).append("\n"); 
		query.append("                                       V.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                       V.RLANE_CD      ," ).append("\n"); 
		query.append("                                       V.COST_YR       ," ).append("\n"); 
		query.append("                                       V.COST_WK       ," ).append("\n"); 
		query.append("                                       V.VSL_CD        ," ).append("\n"); 
		query.append("                                       V.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                       V.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                       V.IOC_CD        ," ).append("\n"); 
		query.append("                                       NVL(BV.VSL_CD    , ' ') AS PRE_VSL_CD    ," ).append("\n"); 
		query.append("                                       NVL(BV.SKD_VOY_NO, ' ') AS PRE_SKD_VOY_NO," ).append("\n"); 
		query.append("                                       NVL(BV.SKD_DIR_CD, ' ') AS PRE_SKD_DIR_CD," ).append("\n"); 
		query.append("                                       NVL(BV.SLAN_CD   , ' ') AS SLAN_CD       ," ).append("\n"); 
		query.append("                                       SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) AS SLS_OFC_CD," ).append("\n"); 
		query.append("                                       V.POL_CD AS POD_CD," ).append("\n"); 
		query.append("                                       (" ).append("\n"); 
		query.append("                                          SELECT    TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2)*Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'DW', Q.OP_CNTR_QTY, 'DX', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'R2', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR(SUM(CASE WHEN SUBSTR(Q.CNTR_TPSZ_CD, 1, 1) = 'R' AND Q.CNTR_TPSZ_CD <> 'R2' THEN Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY ELSE 0 END), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                                                                         FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                                                                        WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                                            FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                           WHERE B.BKG_NO = Q.BKG_NO" ).append("\n"); 
		query.append("                                       ) AS VAL" ).append("\n"); 
		query.append("                                  FROM BKG_BOOKING B ," ).append("\n"); 
		query.append("                                       BKG_VVD     BV," ).append("\n"); 
		query.append("                                       BOOKING     V ," ).append("\n"); 
		query.append("                                       BKG_BL_DOC  D" ).append("\n"); 
		query.append("                                 WHERE V.BKG_NO = BV.BKG_NO" ).append("\n"); 
		query.append("                                   AND DECODE(V.VSL_PRE_PST_CD, 'T', 'S', 'U', 'T') = BV.VSL_PRE_PST_CD -- 대상 항차 직전 항차만 조회되도록 수정" ).append("\n"); 
		query.append("                                   AND (V.ORG IS NULL OR SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) = V.ORG)" ).append("\n"); 
		query.append("                                   AND B.BKG_NO         = BV.BKG_NO" ).append("\n"); 
		query.append("                                   AND B.BKG_STS_CD    IN('W','F')" ).append("\n"); 
		query.append("                                   AND B.BKG_CGO_TP_CD <> 'P'" ).append("\n"); 
		query.append("                                   AND B.BKG_NO         = D.BKG_NO" ).append("\n"); 
		query.append("                              ) Z2," ).append("\n"); 
		query.append("                              SPC_OFC_LVL  O ," ).append("\n"); 
		query.append("                              MDM_REV_LANE RL" ).append("\n"); 
		query.append("                        WHERE Z2.SLS_OFC_CD     = O.OFC_CD" ).append("\n"); 
		query.append("                          AND Z2.COST_YR || Z2.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                          AND RL.DELT_FLG   (+) = 'N'" ).append("\n"); 
		query.append("                          AND RL.VSL_TP_CD  (+) = 'C'" ).append("\n"); 
		query.append("                          AND RL.VSL_SLAN_CD(+) = Z2.SLAN_CD" ).append("\n"); 
		query.append("                     GROUP BY Z2.POL_ETB_DT     ," ).append("\n"); 
		query.append("                              Z2.REP_TRD_CD     ," ).append("\n"); 
		query.append("                              Z2.REP_SUB_TRD_CD ," ).append("\n"); 
		query.append("                              Z2.TRD_CD         ," ).append("\n"); 
		query.append("                              Z2.SUB_TRD_CD     ," ).append("\n"); 
		query.append("                              Z2.RLANE_CD       ," ).append("\n"); 
		query.append("                              Z2.COST_WK        ," ).append("\n"); 
		query.append("                              Z2.VSL_CD         ," ).append("\n"); 
		query.append("                              Z2.SKD_VOY_NO     ," ).append("\n"); 
		query.append("                              Z2.SKD_DIR_CD     ," ).append("\n"); 
		query.append("                              Z2.IOC_CD         ," ).append("\n"); 
		query.append("                              O.N2ND_PRNT_OFC_CD," ).append("\n"); 
		query.append("                              O.N3RD_PRNT_OFC_CD," ).append("\n"); 
		query.append("                              O.N4TH_PRNT_OFC_CD," ).append("\n"); 
		query.append("                              Z2.PRE_VSL_CD     ," ).append("\n"); 
		query.append("                              Z2.PRE_SKD_VOY_NO ," ).append("\n"); 
		query.append("                              Z2.PRE_SKD_DIR_CD ," ).append("\n"); 
		query.append("                              NVL(RL.RLANE_CD, 'RBCCO')," ).append("\n"); 
		query.append("                              NVL(RL.REP_TRD_CD, 'IAS')," ).append("\n"); 
		query.append("                              Z2.POD_CD" ).append("\n"); 
		query.append("                     ORDER BY Z2.POL_ETB_DT     ," ).append("\n"); 
		query.append("                              Z2.REP_TRD_CD     ," ).append("\n"); 
		query.append("                              Z2.REP_SUB_TRD_CD ," ).append("\n"); 
		query.append("                              Z2.TRD_CD         ," ).append("\n"); 
		query.append("                              Z2.SUB_TRD_CD     ," ).append("\n"); 
		query.append("                              Z2.RLANE_CD       ," ).append("\n"); 
		query.append("                              Z2.COST_WK        ," ).append("\n"); 
		query.append("                              Z2.VSL_CD         ," ).append("\n"); 
		query.append("                              Z2.SKD_VOY_NO     ," ).append("\n"); 
		query.append("                              Z2.SKD_DIR_CD     ," ).append("\n"); 
		query.append("                              Z2.IOC_CD         ," ).append("\n"); 
		query.append("                              O.N4TH_PRNT_OFC_CD," ).append("\n"); 
		query.append("                              PRE_RLANE_CD      ," ).append("\n"); 
		query.append("                              PRE_REP_TRD_CD    ," ).append("\n"); 
		query.append("                              PRE_REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                              NVL(Z2.PRE_VSL_CD , '0')," ).append("\n"); 
		query.append("                              Z2.PRE_SKD_VOY_NO ," ).append("\n"); 
		query.append("                              Z2.PRE_SKD_DIR_CD" ).append("\n"); 
		query.append("                   ) Z3" ).append("\n"); 
		query.append("         ) Z7" ).append("\n"); 
		query.append("GROUP BY Z7.ETB_DT        ," ).append("\n"); 
		query.append("         Z7.REP_TRD_CD    ," ).append("\n"); 
		query.append("         Z7.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("         Z7.TRD_CD        ," ).append("\n"); 
		query.append("         Z7.SUB_TRD_CD    ," ).append("\n"); 
		query.append("         Z7.RLANE_CD      ," ).append("\n"); 
		query.append("         Z7.COST_WK       ," ).append("\n"); 
		query.append("         Z7.VVD           ," ).append("\n"); 
		query.append("         Z7.IOC_CD        ," ).append("\n"); 
		query.append("         Z7.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("         Z7.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("         Z7.RK" ).append("\n"); 
		query.append("ORDER BY Z7.ETB_DT        ," ).append("\n"); 
		query.append("         Z7.REP_TRD_CD    ," ).append("\n"); 
		query.append("         Z7.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("         Z7.TRD_CD        ," ).append("\n"); 
		query.append("         Z7.SUB_TRD_CD    ," ).append("\n"); 
		query.append("         Z7.RLANE_CD      ," ).append("\n"); 
		query.append("         Z7.COST_WK       ," ).append("\n"); 
		query.append("         Z7.VVD           ," ).append("\n"); 
		query.append("         Z7.IOC_CD        ," ).append("\n"); 
		query.append("         Z7.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("         Z7.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("         Z7.RK" ).append("\n"); 

	}
}