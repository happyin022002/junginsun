/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0042MListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.07.28
*@LastModifier : 
*@LastVersion : 1.0
* 2016.07.28 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.spc.spaceallocationmanage.spaceallocationmanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpaceAllocationManageDBDAOSearchSpaceAllocation0042MListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * SpaceAllocationManage의 데이타 모델에 해당되는 값을 불러온다.
	  * 2015.07.22. SKY[CLT-000042051-10] Virtual add call - VT_ADD_CALL_FLG IS  NULL  로직 추가
	  * 2016.03.31 BKG 데이터 가져올때 YD_CD 로 메핑 
	  * 2016.04.07 SQL 튜닝 
	  * 2016.05.12 SPC_GET_HC_RT_BSA_FNC : SKD_VOY_NO parm 추가
	  * 2016.07.01 PL_CLPT_IND_SEQ, PD_CLPT_IND_SEQ 조건 추가
	  * 2016.07.12 Skip 로직 추가
	  * 2016.07.22 VVD_POL_POD 로직 수정 (WHERE A.PL_PD_PORT_CNT = '1')
	  * </pre>
	  */
	public SpaceAllocationManageDBDAOSearchSpaceAllocation0042MListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("office",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("duration",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("subtrade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fcast",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.spc.spaceallocationmanage.spaceallocationmanage.integration").append("\n"); 
		query.append("FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0042MListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH PARAMS AS (" ).append("\n"); 
		query.append("    SELECT @[year]                AS COST_YR   ," ).append("\n"); 
		query.append("           @[week]                AS COST_WK   ," ).append("\n"); 
		query.append("           TO_NUMBER(@[duration]) AS DURATION  ," ).append("\n"); 
		query.append("           @[trade]               AS TRD_CD    ," ).append("\n"); 
		query.append("           @[subtrade]            AS SUB_TRD_CD," ).append("\n"); 
		query.append("           @[lane]                AS RLANE_CD  ," ).append("\n"); 
		query.append("           @[bound]               AS DIR_CD    ," ).append("\n"); 
		query.append("           o.ofc_cd               AS OFC_CD    ," ).append("\n"); 
		query.append("           l.conti_cd             AS OFC_CONTI ," ).append("\n"); 
		query.append("           @[vvd]                 AS VVD       ," ).append("\n"); 
		query.append("           @[fcast]               AS STS" ).append("\n"); 
		query.append("     FROM MDM_LOCATION     L," ).append("\n"); 
		query.append("           MDM_ORGANIZATION O" ).append("\n"); 
		query.append("     WHERE L.LOC_CD  = O.LOC_CD" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${office} == 'ALL') " ).append("\n"); 
		query.append("              AND O.OFC_CD  in (" ).append("\n"); 
		query.append("                      SELECT T.OFC_CD" ).append("\n"); 
		query.append("                        FROM " ).append("\n"); 
		query.append("                            (" ).append("\n"); 
		query.append("                             SELECT * " ).append("\n"); 
		query.append("                             FROM SPC_OFC_LVL T" ).append("\n"); 
		query.append("                             WHERE 1=1" ).append("\n"); 
		query.append("                             )T," ).append("\n"); 
		query.append("                             COA_WK_PRD  W" ).append("\n"); 
		query.append("                       WHERE T.OFC_LVL = 2" ).append("\n"); 
		query.append("                         AND W.COST_YR || W.COST_WK BETWEEN T.OFC_APLY_FM_YRWK AND T.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                         AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT" ).append("\n"); 
		query.append("                         AND T.DELT_FLG IN ('N', null)" ).append("\n"); 
		query.append("     			)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("	 AND O.OFC_CD  = @[office]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", WEEKS AS (" ).append("\n"); 
		query.append("    SELECT /*+ INDEX(D XPKCOA_WK_PRD)*/" ).append("\n"); 
		query.append("           D.COST_YR   ," ).append("\n"); 
		query.append("           D.COST_WK   ," ).append("\n"); 
		query.append("           P.TRD_CD    ," ).append("\n"); 
		query.append("           P.SUB_TRD_CD," ).append("\n"); 
		query.append("           P.RLANE_CD  ," ).append("\n"); 
		query.append("           P.DIR_CD    ," ).append("\n"); 
		query.append("           P.OFC_CD    ," ).append("\n"); 
		query.append("           P.OFC_CONTI ," ).append("\n"); 
		query.append("           P.VVD       ," ).append("\n"); 
		query.append("           P.STS" ).append("\n"); 
		query.append("      FROM COA_WK_PRD D," ).append("\n"); 
		query.append("           PARAMS     P" ).append("\n"); 
		query.append("     WHERE D.COST_YR||D.COST_WK >= P.COST_YR||P.COST_WK" ).append("\n"); 
		query.append("       AND ROWNUM <= P.DURATION" ).append("\n"); 
		query.append("       AND P.VVD  IS NULL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", REP_VVDS AS (" ).append("\n"); 
		query.append("    SELECT V.TRD_CD     AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           V.SUB_TRD_CD AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD," ).append("\n"); 
		query.append("           V.DIR_CD  ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON," ).append("\n"); 
		query.append("           V.COST_WK   ," ).append("\n"); 
		query.append("           V.VSL_CD    ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO," ).append("\n"); 
		query.append("           V.DIR_CD AS SKD_DIR_CD," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           P.OFC_CD              ," ).append("\n"); 
		query.append("           P.OFC_CONTI           ," ).append("\n"); 
		query.append("           P.STS                 ," ).append("\n"); 
		query.append("           V.SLAN_CD" ).append("\n"); 
		query.append("      FROM COA_MON_VVD V," ).append("\n"); 
		query.append("           WEEKS       P" ).append("\n"); 
		query.append("     WHERE V.TRD_CD     = SAQ_GET_REP_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.SUB_TRD_CD = SAQ_GET_REP_SUB_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK = P.COST_YR||P.COST_WK" ).append("\n"); 
		query.append("       AND V.TRD_CD     LIKE P.TRD_CD     || '%'" ).append("\n"); 
		query.append("       AND V.SUB_TRD_CD LIKE P.SUB_TRD_CD || '%'" ).append("\n"); 
		query.append("       AND V.RLANE_CD   LIKE P.RLANE_CD   || '%'" ).append("\n"); 
		query.append("       AND V.DIR_CD     LIKE P.DIR_CD     || '%'" ).append("\n"); 
		query.append("       AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                                                                 FROM COA_MON_VVD N" ).append("\n"); 
		query.append("                                                                WHERE N.SLAN_CD    = SUBSTR(V.RLANE_CD, 1, 3)" ).append("\n"); 
		query.append("                                                                  AND N.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                                                                  AND N.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                  AND N.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("                                                                  AND N.DELT_FLG   = 'N' ))" ).append("\n"); 
		query.append("       AND P.VVD IS NULL" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT V.TRD_CD     AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           V.SUB_TRD_CD AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD," ).append("\n"); 
		query.append("           V.DIR_CD  ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON," ).append("\n"); 
		query.append("           V.COST_WK    ," ).append("\n"); 
		query.append("           V.VSL_CD     ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO ," ).append("\n"); 
		query.append("           V.DIR_CD AS SKD_DIR_CD," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           P.OFC_CD              ," ).append("\n"); 
		query.append("           P.OFC_CONTI           ," ).append("\n"); 
		query.append("           P.STS                 ," ).append("\n"); 
		query.append("           V.SLAN_CD" ).append("\n"); 
		query.append("      FROM COA_MON_VVD V," ).append("\n"); 
		query.append("           PARAMS      P" ).append("\n"); 
		query.append("     WHERE V.TRD_CD     = SAQ_GET_REP_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.SUB_TRD_CD = SAQ_GET_REP_SUB_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.VSL_CD     = SUBSTR(P.VVD, 1, 4)" ).append("\n"); 
		query.append("       AND V.SKD_VOY_NO = SUBSTR(P.VVD, 5, 4)" ).append("\n"); 
		query.append("       AND V.DIR_CD     = SUBSTR(P.VVD, 9)" ).append("\n"); 
		query.append("       AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                                                                 FROM COA_MON_VVD N" ).append("\n"); 
		query.append("                                                                WHERE N.SLAN_CD    = SUBSTR(V.RLANE_CD, 1, 3)" ).append("\n"); 
		query.append("                                                                  AND N.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                                                                  AND N.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                  AND N.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("                                                                  AND N.DELT_FLG   = 'N' ))" ).append("\n"); 
		query.append("       AND P.VVD IS NOT NULL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VSL_PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT V.REP_TRD_CD    ," ).append("\n"); 
		query.append("           V.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD      ," ).append("\n"); 
		query.append("           V.DIR_CD        ," ).append("\n"); 
		query.append("           V.COST_YR       ," ).append("\n"); 
		query.append("           V.COST_MON      ," ).append("\n"); 
		query.append("           V.COST_WK       ," ).append("\n"); 
		query.append("           V.VSL_CD        ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO    ," ).append("\n"); 
		query.append("           V.SKD_DIR_CD    ," ).append("\n"); 
		query.append("           NVL(VPS.YD_CD, VPS.VPS_PORT_CD) AS PORT_CD," ).append("\n"); 
		query.append("           VPS.CLPT_SEQ         AS PORT_SEQ," ).append("\n"); 
		query.append("           VPS.TURN_PORT_IND_CD AS PORT_IND," ).append("\n"); 
		query.append("           L.CONTI_CD           AS CONTI_CD," ).append("\n"); 
		query.append("           DECODE(SIGN(VPS.VPS_ETD_DT - GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS.VPS_PORT_CD )), -1, 'Y', 'N') AS PORT_PAST," ).append("\n"); 
		query.append("           VPS.VPS_ETA_DT AS ETA_DT," ).append("\n"); 
		query.append("           VPS.VPS_ETD_DT AS ETD_DT," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD      ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT  ," ).append("\n"); 
		query.append("           V.OFC_CD                ," ).append("\n"); 
		query.append("           V.OFC_CONTI             ," ).append("\n"); 
		query.append("           V.STS                   ," ).append("\n"); 
		query.append("           DECODE(VPS.SKD_CNG_STS_CD, 'S', 1, 0) AS SKIPPED," ).append("\n"); 
		query.append("           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MAX_SEQ," ).append("\n"); 
		query.append("           MIN(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MIN_SEQ," ).append("\n"); 
		query.append("           VPS.CLPT_IND_SEQ  AS CLPT_IND_SEQ," ).append("\n"); 
		query.append("           COUNT(*) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS PORT_CNT," ).append("\n"); 
		query.append("           V.SLAN_CD" ).append("\n"); 
		query.append("      FROM MDM_LOCATION     L  ," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD VPS," ).append("\n"); 
		query.append("           REP_VVDS         V" ).append("\n"); 
		query.append("     WHERE L.LOC_CD       = VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("       AND VPS.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND VPS.VT_ADD_CALL_FLG IS  NULL" ).append("\n"); 
		query.append("       AND NVL(VPS.SKD_CNG_STS_CD,1) <> 'S'" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_POL_POD AS (" ).append("\n"); 
		query.append("    SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POL_SEQ             ," ).append("\n"); 
		query.append("           PL_CLPT_IND_SEQ     ," ).append("\n"); 
		query.append("           POL_CONTI           ," ).append("\n"); 
		query.append("           POL_PAST            ," ).append("\n"); 
		query.append("           POL_ETA_DT          ," ).append("\n"); 
		query.append("           POL_ETD_DT          ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POD_SEQ             ," ).append("\n"); 
		query.append("           PD_CLPT_IND_SEQ     ," ).append("\n"); 
		query.append("           POD_CONTI           ," ).append("\n"); 
		query.append("           POD_PAST            ," ).append("\n"); 
		query.append("           POD_ETA_DT          ," ).append("\n"); 
		query.append("           POD_ETD_DT          ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           PAST                ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           STS                 ," ).append("\n"); 
		query.append("           POL_SKIP            ," ).append("\n"); 
		query.append("           POD_SKIP            ," ).append("\n"); 
		query.append("           LD_PORT             ," ).append("\n"); 
		query.append("           PL_PORT_CNT         ," ).append("\n"); 
		query.append("           PD_PORT_CNT         ," ).append("\n"); 
		query.append("           PL_PD_PORT_CNT" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("             SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("                    REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                    RLANE_CD            ," ).append("\n"); 
		query.append("                    DIR_CD              ," ).append("\n"); 
		query.append("                    TRD_CD              ," ).append("\n"); 
		query.append("                    SUB_TRD_CD          ," ).append("\n"); 
		query.append("                    COST_YR             ," ).append("\n"); 
		query.append("                    COST_MON            ," ).append("\n"); 
		query.append("                    COST_WK             ," ).append("\n"); 
		query.append("                    VSL_CD              ," ).append("\n"); 
		query.append("                    SKD_VOY_NO          ," ).append("\n"); 
		query.append("                    SKD_DIR_CD          ," ).append("\n"); 
		query.append("                    POL_CD              ," ).append("\n"); 
		query.append("                    POL_SEQ             ," ).append("\n"); 
		query.append("                    PL_CLPT_IND_SEQ     ," ).append("\n"); 
		query.append("                    POL_CONTI           ," ).append("\n"); 
		query.append("                    POL_PAST            ," ).append("\n"); 
		query.append("                    POL_ETA_DT          ," ).append("\n"); 
		query.append("                    POL_ETD_DT          ," ).append("\n"); 
		query.append("                    POD_CD              ," ).append("\n"); 
		query.append("                    POD_SEQ             ," ).append("\n"); 
		query.append("                    PD_CLPT_IND_SEQ     ," ).append("\n"); 
		query.append("                    POD_CONTI           ," ).append("\n"); 
		query.append("                    POD_PAST            ," ).append("\n"); 
		query.append("                    POD_ETA_DT          ," ).append("\n"); 
		query.append("                    POD_ETD_DT          ," ).append("\n"); 
		query.append("                    IOC_CD              ," ).append("\n"); 
		query.append("                    PAST                ," ).append("\n"); 
		query.append("                    LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                    LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                    OFC_CD              ," ).append("\n"); 
		query.append("                    OFC_CONTI           ," ).append("\n"); 
		query.append("                    STS                 ," ).append("\n"); 
		query.append("                    POL_SKIP            ," ).append("\n"); 
		query.append("                    POD_SKIP            ," ).append("\n"); 
		query.append("                    LD_PORT             ," ).append("\n"); 
		query.append("                    PL_PORT_CNT         ," ).append("\n"); 
		query.append("                    DECODE(SLAN_CD,'IMU','1',PD_PORT_CNT) AS PD_PORT_CNT," ).append("\n"); 
		query.append("                    ROW_NUMBER() OVER (PARTITION BY RLANE_CD, TRD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, POD_SEQ, PL_PORT_CNT, PD_PORT_CNT, POL_CD" ).append("\n"); 
		query.append("                                           ORDER BY RLANE_CD, TRD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, PL_PORT_CNT, PD_PORT_CNT, POL_CD) AS PL_PD_PORT_CNT" ).append("\n"); 
		query.append("               FROM (" ).append("\n"); 
		query.append("                      SELECT PL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             PL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             PL.RLANE_CD      ," ).append("\n"); 
		query.append("                             PL.DIR_CD        ," ).append("\n"); 
		query.append("                             DRL.TRD_CD       ," ).append("\n"); 
		query.append("                             DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                             PL.COST_YR       ," ).append("\n"); 
		query.append("                             PL.COST_MON      ," ).append("\n"); 
		query.append("                             PL.COST_WK       ," ).append("\n"); 
		query.append("                             PL.VSL_CD        ," ).append("\n"); 
		query.append("                             PL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                             PL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                             PL.PORT_CD         AS POL_CD    ," ).append("\n"); 
		query.append("                             MAX(PL.PORT_SEQ)   AS POL_SEQ   ," ).append("\n"); 
		query.append("                             PL.CLPT_IND_SEQ    AS PL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                             PL.CONTI_CD        AS POL_CONTI ," ).append("\n"); 
		query.append("                             MIN(PL.PORT_PAST)  AS POL_PAST  ," ).append("\n"); 
		query.append("                             PL.ETA_DT          AS POL_ETA_DT," ).append("\n"); 
		query.append("                             PL.ETD_DT          AS POL_ETD_DT," ).append("\n"); 
		query.append("                             PD.PORT_CD         AS POD_CD    ," ).append("\n"); 
		query.append("                             (CASE" ).append("\n"); 
		query.append("                                   WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ)" ).append("\n"); 
		query.append("                                                                           ELSE CASE" ).append("\n"); 
		query.append("                                                                                     WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) THEN MAX(PD.MAX_SEQ)" ).append("\n"); 
		query.append("                                                                                 END" ).append("\n"); 
		query.append("                               END" ).append("\n"); 
		query.append("                             ) AS POD_SEQ," ).append("\n"); 
		query.append("                             PD.CLPT_IND_SEQ   AS PD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                             PD.CONTI_CD       AS POD_CONTI ," ).append("\n"); 
		query.append("                             MIN(PD.PORT_PAST) AS POD_PAST  ," ).append("\n"); 
		query.append("                             PD.ETA_DT         AS POD_ETA_DT," ).append("\n"); 
		query.append("                             PD.ETD_DT         AS POD_ETD_DT," ).append("\n"); 
		query.append("                             DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')            AS IOC_CD," ).append("\n"); 
		query.append("                             DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y') AS PAST  ," ).append("\n"); 
		query.append("                             PL.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                             PL.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                             PL.OFC_CD              ," ).append("\n"); 
		query.append("                             PL.OFC_CONTI           ," ).append("\n"); 
		query.append("                             PL.STS                 ," ).append("\n"); 
		query.append("                             PL.SKIPPED  AS POL_SKIP," ).append("\n"); 
		query.append("                             PD.SKIPPED  AS POD_SKIP," ).append("\n"); 
		query.append("                             SUBSTR(( SELECT MAX(LTRIM(TO_CHAR(S1.PORT_SEQ,'FM000'))|| S1.PORT_CD)" ).append("\n"); 
		query.append("                                        FROM VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                                       WHERE S1.SKIPPED <> 1), 4) AS LD_PORT," ).append("\n"); 
		query.append("                             PL.PORT_CNT AS PL_PORT_CNT," ).append("\n"); 
		query.append("                             PD.PORT_CNT AS PD_PORT_CNT," ).append("\n"); 
		query.append("                             PL.SLAN_CD" ).append("\n"); 
		query.append("                        FROM MDM_DTL_REV_LANE DRL," ).append("\n"); 
		query.append("                             VSL_PORT_SKD     PD ," ).append("\n"); 
		query.append("                             VSL_PORT_SKD     PL" ).append("\n"); 
		query.append("                       WHERE DRL.RLANE_CD        = PL.RLANE_CD" ).append("\n"); 
		query.append("                         AND DRL.VSL_SLAN_DIR_CD = PL.DIR_CD" ).append("\n"); 
		query.append("                         AND DRL.FM_CONTI_CD     = PL.CONTI_CD" ).append("\n"); 
		query.append("                         AND DRL.TO_CONTI_CD     = PD.CONTI_CD" ).append("\n"); 
		query.append("                         AND PD.REP_TRD_CD       = PL.REP_TRD_CD" ).append("\n"); 
		query.append("                         AND PD.REP_SUB_TRD_CD   = PL.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                         AND PD.RLANE_CD         = PL.RLANE_CD" ).append("\n"); 
		query.append("                         AND PD.VSL_CD           = PL.VSL_CD" ).append("\n"); 
		query.append("                         AND PD.SKD_VOY_NO       = PL.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND PD.SKD_DIR_CD       = PL.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND PD.PORT_CD         <> PL.PORT_CD" ).append("\n"); 
		query.append("                         AND PD.PORT_SEQ         > PL.PORT_SEQ" ).append("\n"); 
		query.append("                         AND (    PL.PORT_SEQ = PL.MAX_SEQ    --  단독 CALLING 또는 DOUBLE CALLING 인데 마지막 PORT 경우는 모두" ).append("\n"); 
		query.append("                               OR PD.PORT_SEQ < PL.MAX_SEQ )  -- DOUBLE CALLING PORT중 POD 가 LAST DOUBLE CALLING PORT 보다 앞인 경우만 FILTERING" ).append("\n"); 
		query.append("                    GROUP BY PL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             PL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             PL.RLANE_CD      ," ).append("\n"); 
		query.append("                             PL.DIR_CD        ," ).append("\n"); 
		query.append("                             DRL.TRD_CD       ," ).append("\n"); 
		query.append("                             DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                             PL.COST_YR       ," ).append("\n"); 
		query.append("                             PL.COST_MON      ," ).append("\n"); 
		query.append("                             PL.COST_WK       ," ).append("\n"); 
		query.append("                             PL.VSL_CD        ," ).append("\n"); 
		query.append("                             PL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                             PL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                             PL.PORT_CD       ," ).append("\n"); 
		query.append("                             PL.CONTI_CD      ," ).append("\n"); 
		query.append("                             PD.PORT_CD       ," ).append("\n"); 
		query.append("                             PD.CONTI_CD      ," ).append("\n"); 
		query.append("                             PL.SKIPPED       ," ).append("\n"); 
		query.append("                             PD.SKIPPED       ," ).append("\n"); 
		query.append("                             PL.ETA_DT        ," ).append("\n"); 
		query.append("                             PL.ETD_DT        ," ).append("\n"); 
		query.append("                             PD.ETA_DT        ," ).append("\n"); 
		query.append("                             PD.ETD_DT        ," ).append("\n"); 
		query.append("                             DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')           ," ).append("\n"); 
		query.append("                             DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y')," ).append("\n"); 
		query.append("                             PL.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                             PL.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                             PL.OFC_CD              ," ).append("\n"); 
		query.append("                             PL.OFC_CONTI           ," ).append("\n"); 
		query.append("                             PL.STS                 ," ).append("\n"); 
		query.append("                             PL.CLPT_IND_SEQ        ," ).append("\n"); 
		query.append("                             PD.CLPT_IND_SEQ        ," ).append("\n"); 
		query.append("                             PL.PORT_CNT            ," ).append("\n"); 
		query.append("                             PD.PORT_CNT            ," ).append("\n"); 
		query.append("                             PL.SLAN_CD" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("           ) A" ).append("\n"); 
		query.append("     --WHERE A.PL_PD_PORT_CNT = '1'" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVDS AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT" ).append("\n"); 
		query.append("           REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           STS" ).append("\n"); 
		query.append("      FROM VVD_POL_POD VPP" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA AS (" ).append("\n"); 
		query.append("    SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POL_YD_CD           ," ).append("\n"); 
		query.append("           POD_YD_CD           ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           TS_FLG              ," ).append("\n"); 
		query.append("           PAST                ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY ," ).append("\n"); 
		query.append("           TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_TTL_WGT," ).append("\n"); 
		query.append("           OFC_CD" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("             SELECT DISTINCT /*+ ORDERED USE_NL(VVP BV B C) USE_HASH(O) INDEX_RS(BV (VSL_CD,SKD_VOY_NO,SKD_DIR_CD,POL_CD,POD_CD)) */" ).append("\n"); 
		query.append("                    VPP.REP_TRD_CD          ," ).append("\n"); 
		query.append("                    VPP.REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                    VPP.RLANE_CD            ," ).append("\n"); 
		query.append("                    VPP.DIR_CD              ," ).append("\n"); 
		query.append("                    VPP.COST_YR             ," ).append("\n"); 
		query.append("                    VPP.COST_MON            ," ).append("\n"); 
		query.append("                    VPP.COST_WK             ," ).append("\n"); 
		query.append("                    VPP.VSL_CD              ," ).append("\n"); 
		query.append("                    VPP.SKD_VOY_NO          ," ).append("\n"); 
		query.append("                    VPP.SKD_DIR_CD          ," ).append("\n"); 
		query.append("                    VPP.IOC_CD              ," ).append("\n"); 
		query.append("                    DECODE(BV.VSL_PRE_PST_CD, 'T', 'N', 'Y') AS TS_FLG," ).append("\n"); 
		query.append("                    VPP.PAST                ," ).append("\n"); 
		query.append("                    VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                    VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                    (" ).append("\n"); 
		query.append("                      SELECT    TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("                                                   , '2', 1" ).append("\n"); 
		query.append("                                                   , '5',SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD , VPP.SKD_VOY_NO,'D5')" ).append("\n"); 
		query.append("                                                   , '7',SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD , VPP.SKD_VOY_NO,'D7'), 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY *( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                                                    FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                                                   WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                        FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                       WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("                         AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                    ) AS VAL," ).append("\n"); 
		query.append("                    BV.BKG_NO   ," ).append("\n"); 
		query.append("                    BV.POL_CD   ," ).append("\n"); 
		query.append("                    BV.POD_CD   ," ).append("\n"); 
		query.append("                    BV.POL_YD_CD," ).append("\n"); 
		query.append("                    BV.POD_YD_CD," ).append("\n"); 
		query.append("                    O.OFC_CD" ).append("\n"); 
		query.append("              FROM VVD_POL_POD VPP," ).append("\n"); 
		query.append("                    BKG_VVD     BV ," ).append("\n"); 
		query.append("                    BKG_BOOKING B  ," ).append("\n"); 
		query.append("                    SPC_OFC_LVL O  ," ).append("\n"); 
		query.append("                    BKG_BL_DOC  D" ).append("\n"); 
		query.append("              WHERE O.OFC_TP_CD     IN ('BB', 'BA', 'BS')" ).append("\n"); 
		query.append("                AND O.OFC_CD         = B.OB_SLS_OFC_CD" ).append("\n"); 
		query.append("                AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                AND B.BKG_STS_CD    IN ('W', 'F')" ).append("\n"); 
		query.append("                AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("                AND B.BKG_NO         = BV.BKG_NO" ).append("\n"); 
		query.append("                AND BV.VSL_CD        = VPP.VSL_CD" ).append("\n"); 
		query.append("                AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND BV.POL_YD_CD     = VPP.POL_CD --2016.03.31 수정" ).append("\n"); 
		query.append("                AND BV.POD_YD_CD     = VPP.POD_CD --2016.03.31 수정" ).append("\n"); 
		query.append("                AND BV.POL_CD        = SUBSTR(VPP.POL_CD, 1, 5) -- INDEX 필터링을 통한 I/O 효율 개선을 위해 추가" ).append("\n"); 
		query.append("                AND BV.POD_CD        = SUBSTR(VPP.POD_CD, 1, 5) -- INDEX 필터링을 통한 I/O 효율 개선을 위해 추가" ).append("\n"); 
		query.append("             --   AND VPP.POL_CONTI    = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                AND B.BKG_NO         = D.BKG_NO" ).append("\n"); 
		query.append("                AND NVL(VPP.PL_CLPT_IND_SEQ,'1') = NVL(BV.POL_CLPT_IND_SEQ,'1')" ).append("\n"); 
		query.append("                AND NVL(VPP.PD_CLPT_IND_SEQ,'1') = NVL(BV.POD_CLPT_IND_SEQ,'1')" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  SELECT Z.REP_TRD_CD     AS TRD_CD    ," ).append("\n"); 
		query.append("         Z.REP_SUB_TRD_CD AS SUB_TRD_CD," ).append("\n"); 
		query.append("         Z.RLANE_CD  ," ).append("\n"); 
		query.append("         Z.DIR_CD    ," ).append("\n"); 
		query.append("         Z.COST_YR   ," ).append("\n"); 
		query.append("         Z.COST_MON  ," ).append("\n"); 
		query.append("         Z.COST_WK   ," ).append("\n"); 
		query.append("         Z.VSL_CD    ," ).append("\n"); 
		query.append("         Z.SKD_VOY_NO," ).append("\n"); 
		query.append("         Z.SKD_DIR_CD," ).append("\n"); 
		query.append("         Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('VOL'    , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS BSA_VOL," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('WGT'    , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS BSA_WGT," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('VOL_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_VOL," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('WGT_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_WGT," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('D5_LOD' , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_HC ," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('D7_LOD' , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_45 ," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('RF_LOD' , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_RF ," ).append("\n"); 
		query.append("         QTA_OCN    ," ).append("\n"); 
		query.append("         QTA_IPC    ," ).append("\n"); 
		query.append("         NVL(FC_OCN_VOL, 0) FC_OCN_VOL," ).append("\n"); 
		query.append("         FC_OCN_WGT ," ).append("\n"); 
		query.append("         NVL(FC_IPC_VOL, 0) FC_IPC_VOL," ).append("\n"); 
		query.append("         FC_IPC_WGT ," ).append("\n"); 
		query.append("         NVL(FC_TS_VOL, 0) FC_TS_VOL," ).append("\n"); 
		query.append("         FC_TS_WGT ," ).append("\n"); 
		query.append("         NVL(AL_OCN_VOL, 0) AL_OCN_VOL," ).append("\n"); 
		query.append("         AL_OCN_WGT ," ).append("\n"); 
		query.append("         NVL(AL_IPC_VOL, 0) AL_IPC_VOL," ).append("\n"); 
		query.append("         AL_IPC_WGT ," ).append("\n"); 
		query.append("         NVL(AL_TS_VOL, 0) AL_TS_VOL," ).append("\n"); 
		query.append("         AL_TS_WGT ," ).append("\n"); 
		query.append("         NVL(BKG_OCN_VOL, 0) BKG_OCN_VOL," ).append("\n"); 
		query.append("         BKG_OCN_WGT," ).append("\n"); 
		query.append("         NVL(BKG_IPC_VOL, 0) BKG_IPC_VOL," ).append("\n"); 
		query.append("         BKG_IPC_WGT," ).append("\n"); 
		query.append("         NVL(BKG_TS_VOL, 0) BKG_TS_VOL," ).append("\n"); 
		query.append("         BKG_TS_WGT," ).append("\n"); 
		query.append("         Z.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("         Z.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("         NVL(C.CTRL_LVL_CD     , 'L')       AS CTRL_PORT_FLG   ," ).append("\n"); 
		query.append("         NVL(C.CTRL_40FT_HC_FLG, 'N')       AS CTRL_40FT_HC_FLG," ).append("\n"); 
		query.append("         NVL(C.CTRL_45FT_HC_FLG, 'N')       AS CTRL_45FT_HC_FLG," ).append("\n"); 
		query.append("         NVL(C.CTRL_53FT_FLG   , 'N')       AS CTRL_53FT_FLG   ," ).append("\n"); 
		query.append("         NVL(C.CTRL_RF_FLG     , 'N')       AS CTRL_RF_FLG     ," ).append("\n"); 
		query.append("         NVL(C.CTRL_WGT_FLG    , 'N')       AS CTRL_WGT_FLG    ," ).append("\n"); 
		query.append("         NVL(C.CTRL_SPC_FLG    , 'N')       AS CTRL_SPC_FLG    ," ).append("\n"); 
		query.append("         DECODE(C.RLANE_CD, NULL, 'I', 'R') AS IBFLAG          ," ).append("\n"); 
		query.append("         SG.SPC_GNTE_QTY                    AS MTY_GNTE" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("            SELECT REP_TRD_CD    ," ).append("\n"); 
		query.append("                   REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                   RLANE_CD      ," ).append("\n"); 
		query.append("                   DIR_CD        ," ).append("\n"); 
		query.append("                   COST_YR       ," ).append("\n"); 
		query.append("                   COST_MON      ," ).append("\n"); 
		query.append("                   COST_WK       ," ).append("\n"); 
		query.append("                   VSL_CD        ," ).append("\n"); 
		query.append("                   SKD_VOY_NO    ," ).append("\n"); 
		query.append("                   SKD_DIR_CD    ," ).append("\n"); 
		query.append("                   SUM(QTA_OCN)     AS QTA_OCN    ," ).append("\n"); 
		query.append("                   SUM(QTA_IPC)     AS QTA_IPC    ," ).append("\n"); 
		query.append("                   SUM(FC_OCN_VOL)  AS FC_OCN_VOL ," ).append("\n"); 
		query.append("                   SUM(FC_OCN_WGT)  AS FC_OCN_WGT ," ).append("\n"); 
		query.append("                   SUM(FC_IPC_VOL)  AS FC_IPC_VOL ," ).append("\n"); 
		query.append("                   SUM(FC_IPC_WGT)  AS FC_IPC_WGT ," ).append("\n"); 
		query.append("                   SUM(FC_TS_VOL)  AS FC_TS_VOL ," ).append("\n"); 
		query.append("                   SUM(FC_TS_WGT)  AS FC_TS_WGT ," ).append("\n"); 
		query.append("                   SUM(AL_OCN_VOL)  AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                   SUM(AL_OCN_WGT)  AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                   SUM(AL_IPC_VOL)  AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                   SUM(AL_IPC_WGT)  AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                   SUM(AL_TS_VOL)  AS AL_TS_VOL ," ).append("\n"); 
		query.append("                   SUM(AL_TS_WGT)  AS AL_TS_WGT ," ).append("\n"); 
		query.append("                   SUM(BKG_OCN_VOL) AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                   SUM(BKG_OCN_WGT) AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                   SUM(BKG_IPC_VOL) AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                   SUM(BKG_IPC_WGT) AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                   SUM(BKG_TS_VOL)  AS BKG_TS_VOL," ).append("\n"); 
		query.append("                   SUM(BKG_TS_WGT)  AS BKG_TS_WGT," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   LST_LODG_PORT_ETD_DT           ," ).append("\n"); 
		query.append("                   LST_LODG_PORT_CD" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      SELECT /*+ USE_HASH(A O) */" ).append("\n"); 
		query.append("                             A.REP_TRD_CD          ," ).append("\n"); 
		query.append("                             A.REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                             A.RLANE_CD            ," ).append("\n"); 
		query.append("                             A.DIR_CD              ," ).append("\n"); 
		query.append("                             A.COST_YR             ," ).append("\n"); 
		query.append("                             A.COST_MON            ," ).append("\n"); 
		query.append("                             A.COST_WK             ," ).append("\n"); 
		query.append("                             A.VSL_CD              ," ).append("\n"); 
		query.append("                             A.SKD_VOY_NO          ," ).append("\n"); 
		query.append("                             A.SKD_DIR_CD          ," ).append("\n"); 
		query.append("                             A.QTA_OCN             ," ).append("\n"); 
		query.append("                             A.QTA_IPC             ," ).append("\n"); 
		query.append("                             A.FC_OCN_VOL          ," ).append("\n"); 
		query.append("                             A.FC_OCN_WGT          ," ).append("\n"); 
		query.append("                             A.FC_IPC_VOL          ," ).append("\n"); 
		query.append("                             A.FC_IPC_WGT          ," ).append("\n"); 
		query.append("                             A.FC_TS_VOL          ," ).append("\n"); 
		query.append("                             A.FC_TS_WGT          ," ).append("\n"); 
		query.append("                             A.AL_OCN_VOL          ," ).append("\n"); 
		query.append("                             A.AL_OCN_WGT          ," ).append("\n"); 
		query.append("                             A.AL_IPC_VOL          ," ).append("\n"); 
		query.append("                             A.AL_IPC_WGT          ," ).append("\n"); 
		query.append("                             A.AL_TS_VOL          ," ).append("\n"); 
		query.append("                             A.AL_TS_WGT          ," ).append("\n"); 
		query.append("                             A.BKG_OCN_VOL         ," ).append("\n"); 
		query.append("                             A.BKG_OCN_WGT         ," ).append("\n"); 
		query.append("                             A.BKG_IPC_VOL         ," ).append("\n"); 
		query.append("                             A.BKG_IPC_WGT         ," ).append("\n"); 
		query.append("                             A.BKG_TS_VOL         ," ).append("\n"); 
		query.append("                             A.BKG_TS_WGT         ," ).append("\n"); 
		query.append("                             A.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                             A.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                             A.OFC_CD" ).append("\n"); 
		query.append("                        FROM (" ).append("\n"); 
		query.append("                                --Load Quota (Port)" ).append("\n"); 
		query.append("                                SELECT 1          AS FLG ," ).append("\n"); 
		query.append("                                       VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                       VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                       VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                                       VPP.DIR_CD        ," ).append("\n"); 
		query.append("                                       VPP.COST_YR       ," ).append("\n"); 
		query.append("                                       VPP.COST_MON      ," ).append("\n"); 
		query.append("                                       VPP.COST_WK       ," ).append("\n"); 
		query.append("                                       VPP.VSL_CD        ," ).append("\n"); 
		query.append("                                       VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                       VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                       DECODE(VPP.IOC_CD, 'O', MQ.LOD_QTY) AS QTA_OCN," ).append("\n"); 
		query.append("                                       DECODE(VPP.IOC_CD, 'I', MQ.LOD_QTY) AS QTA_IPC," ).append("\n"); 
		query.append("                                       NULL      AS FC_OCN_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS FC_OCN_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS FC_IPC_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS FC_IPC_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS FC_TS_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS FC_TS_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS AL_TS_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS AL_TS_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                       NULL      AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                       NULL      AS BKG_TS_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_TS_WGT, " ).append("\n"); 
		query.append("                                       VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                       VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                                       RGN_OFC_CD OFC_CD" ).append("\n"); 
		query.append("                                  FROM SAQ_MON_CFM_QTA  MQ ," ).append("\n"); 
		query.append("                                       SAQ_MON_QTA_RLSE MQR," ).append("\n"); 
		query.append("                                       VVD_POL_POD      VPP" ).append("\n"); 
		query.append("                                 WHERE ( SELECT MQV.POL_CD" ).append("\n"); 
		query.append("                                           FROM SAQ_MON_CFM_QTA MQV" ).append("\n"); 
		query.append("                                          WHERE MQV.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                                            AND MQV.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                                            AND MQV.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                                            AND MQV.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                                            AND MQV.TRD_CD           = VPP.TRD_CD" ).append("\n"); 
		query.append("                                            AND MQV.DIR_CD           = VPP.DIR_CD" ).append("\n"); 
		query.append("                                            AND ROWNUM = 1) <> '00000'" ).append("\n"); 
		query.append("                                   AND MQR.BSE_YR            = VPP.COST_YR" ).append("\n"); 
		query.append("                                   AND MQR.BSE_QTR_CD        = CEIL(TO_NUMBER(VPP.COST_MON) / 3)||'Q'" ).append("\n"); 
		query.append("                                   AND MQR.QTA_RLSE_STS_CD   = 'R'" ).append("\n"); 
		query.append("                                   AND MQ.MQTA_RLSE_VER_NO   = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                                   AND MQ.BSE_YR             = MQR.BSE_YR" ).append("\n"); 
		query.append("                                   AND MQ.BSE_QTR_CD         = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                                   AND MQ.QTA_TGT_CD         = 'T'" ).append("\n"); 
		query.append("                                   AND MQ.TRD_CD             = VPP.TRD_CD" ).append("\n"); 
		query.append("                                   AND MQ.RLANE_CD           = VPP.RLANE_CD" ).append("\n"); 
		query.append("                                   AND MQ.DIR_CD             = VPP.DIR_CD" ).append("\n"); 
		query.append("                                   AND MQ.VSL_CD             = VPP.VSL_CD" ).append("\n"); 
		query.append("                                   AND MQ.SKD_VOY_NO         = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                   AND MQ.SKD_DIR_CD         = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                   AND MQ.POL_CD             = SUBSTR(VPP.POL_CD, 1, 5)" ).append("\n"); 
		query.append("                                   AND MQ.POD_CD             = SUBSTR(VPP.POD_CD, 1, 5)" ).append("\n"); 
		query.append("                                   AND VPP.POL_CONTI         = VPP.OFC_CONTI  " ).append("\n"); 
		query.append("        #if (${vvd} != '')" ).append("\n"); 
		query.append("                                   AND MQ.RHQ_CD             = VPP.OFC_CD" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("                                UNION ALL" ).append("\n"); 
		query.append("                                --Load Quota (Office)" ).append("\n"); 
		query.append("                                SELECT 2           AS FLG," ).append("\n"); 
		query.append("                                       VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                       VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                       VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                                       VPP.DIR_CD        ," ).append("\n"); 
		query.append("                                       VPP.COST_YR       ," ).append("\n"); 
		query.append("                                       VPP.COST_MON      ," ).append("\n"); 
		query.append("                                       VPP.COST_WK       ," ).append("\n"); 
		query.append("                                       VPP.VSL_CD        ," ).append("\n"); 
		query.append("                                       VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                       VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                       DECODE(VPP.IOC_CD, 'O', MQ.LOD_QTY) AS QTA_OCN," ).append("\n"); 
		query.append("                                       DECODE(VPP.IOC_CD, 'I', MQ.LOD_QTY) AS QTA_IPC," ).append("\n"); 
		query.append("                                       NULL      AS FC_OCN_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS FC_OCN_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS FC_IPC_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS FC_IPC_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS FC_TS_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS FC_TS_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS AL_TS_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS AL_TS_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                       NULL      AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                       NULL      AS BKG_TS_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_TS_WGT," ).append("\n"); 
		query.append("                                       VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                       VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                                       RGN_OFC_CD OFC_CD " ).append("\n"); 
		query.append("                                  FROM SAQ_MON_CFM_QTA  MQ ," ).append("\n"); 
		query.append("                                       SAQ_MON_QTA_RLSE MQR," ).append("\n"); 
		query.append("                                       VVDS             VPP" ).append("\n"); 
		query.append("                                 WHERE ( SELECT MQV.POL_CD" ).append("\n"); 
		query.append("                                           FROM SAQ_MON_CFM_QTA MQV" ).append("\n"); 
		query.append("                                          WHERE MQV.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                                            AND MQV.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                                            AND MQV.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                                            AND MQV.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                                            AND MQV.TRD_CD           = VPP.TRD_CD" ).append("\n"); 
		query.append("                                            AND MQV.DIR_CD           = VPP.DIR_CD" ).append("\n"); 
		query.append("                                            AND ROWNUM = 1) = '00000'" ).append("\n"); 
		query.append("                                   AND MQR.BSE_YR           = VPP.COST_YR" ).append("\n"); 
		query.append("                                   AND MQR.BSE_QTR_CD       = CEIL(TO_NUMBER(VPP.COST_MON)/3)||'Q'" ).append("\n"); 
		query.append("                                   AND MQR.QTA_RLSE_STS_CD  = 'R'" ).append("\n"); 
		query.append("                                   AND MQ.MQTA_RLSE_VER_NO  = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                                   AND MQ.BSE_YR            = MQR.BSE_YR" ).append("\n"); 
		query.append("                                   AND MQ.BSE_QTR_CD        = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                                   AND MQ.QTA_TGT_CD        = 'T'" ).append("\n"); 
		query.append("                                   AND MQ.TRD_CD            = VPP.TRD_CD" ).append("\n"); 
		query.append("                                   AND MQ.RLANE_CD          = VPP.RLANE_CD" ).append("\n"); 
		query.append("                                   AND MQ.DIR_CD            = VPP.DIR_CD" ).append("\n"); 
		query.append("                                   AND MQ.VSL_CD            = VPP.VSL_CD" ).append("\n"); 
		query.append("                                   AND MQ.SKD_VOY_NO        = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                   AND MQ.SKD_DIR_CD        = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("                                   AND MQ.RHQ_CD            = VPP.OFC_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                   AND MQ.LOD_QTY           > 0" ).append("\n"); 
		query.append("                                UNION ALL" ).append("\n"); 
		query.append("                                --Forecast" ).append("\n"); 
		query.append("                                SELECT /*+ ORDERED USE_NL(VVP F) */" ).append("\n"); 
		query.append("                                       3           AS FLG," ).append("\n"); 
		query.append("                                       VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                       VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                       VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                                       VPP.DIR_CD        ," ).append("\n"); 
		query.append("                                       VPP.COST_YR       ," ).append("\n"); 
		query.append("                                       VPP.COST_MON      ," ).append("\n"); 
		query.append("                                       VPP.COST_WK       ," ).append("\n"); 
		query.append("                                       VPP.VSL_CD        ," ).append("\n"); 
		query.append("                                       VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                       VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                       NULL    AS QTA_OCN," ).append("\n"); 
		query.append("                                       NULL    AS QTA_IPC," ).append("\n"); 
		query.append("                                       -- cfm_ttl_qty???????롫뮉 fc_ocn_vol, fc_ipc_vol揶쏅???(TEU + HC*2 + 45FT*2)嚥?癰?瑗?" ).append("\n"); 
		query.append("                                       DECODE(F.IOC_TS_CD, 'O', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD , VPP.SKD_VOY_NO,'D5') + NVL(F.CFM_45FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD , VPP.SKD_VOY_NO,'D7') + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_OCN_VOL," ).append("\n"); 
		query.append("                                       DECODE(F.IOC_TS_CD, 'O', F.CFM_TTL_WGT) AS FC_OCN_WGT," ).append("\n"); 
		query.append("                                       DECODE(F.IOC_TS_CD, 'I', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D5') + NVL(F.CFM_45FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D7') + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_IPC_VOL," ).append("\n"); 
		query.append("                                       DECODE(F.IOC_TS_CD, 'I', F.CFM_TTL_WGT) AS FC_IPC_WGT," ).append("\n"); 
		query.append("                                       DECODE(F.IOC_TS_CD, 'T', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D5') + NVL(F.CFM_45FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D7') + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_TS_VOL," ).append("\n"); 
		query.append("                                       DECODE(F.IOC_TS_CD, 'T', F.CFM_TTL_WGT) AS FC_TS_WGT," ).append("\n"); 
		query.append("                                       NULL      AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS AL_TS_VOL ," ).append("\n"); 
		query.append("                                       NULL      AS AL_TS_WGT ," ).append("\n"); 
		query.append("                                       NULL      AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                       NULL      AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                       NULL      AS BKG_TS_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_TS_WGT," ).append("\n"); 
		query.append("                                       VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                       VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                                       F.SLS_RGN_OFC_CD " ).append("\n"); 
		query.append("                                  FROM VVD_POL_POD        VPP," ).append("\n"); 
		query.append("                                       SPC_DLY_FCAST_CUST F  " ).append("\n"); 
		query.append("                                 WHERE F.RLANE_CD    = VPP.RLANE_CD" ).append("\n"); 
		query.append("                                   AND F.DIR_CD      = VPP.DIR_CD" ).append("\n"); 
		query.append("                                   AND F.VSL_CD      = VPP.VSL_CD" ).append("\n"); 
		query.append("                                   AND F.SKD_VOY_NO  = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                   AND F.SKD_DIR_CD  = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                   AND DECODE(SUBSTR(F.POL_YD_CD, 6, 2), '00', SUBSTR(F.POL_YD_CD, 1, 5), SUBSTR(F.POL_YD_CD, 1, LENGTH(VPP.POL_CD))) = DECODE(SUBSTR(F.POL_YD_CD, 6, 2), '00', SUBSTR(VPP.POL_CD, 1, 5), VPP.POL_CD)" ).append("\n"); 
		query.append("                                   AND DECODE(SUBSTR(F.POD_YD_CD, 6, 2), '00', SUBSTR(F.POD_YD_CD, 1, 5), SUBSTR(F.POD_YD_CD, 1, LENGTH(VPP.POD_CD))) = DECODE(SUBSTR(F.POD_YD_CD, 6, 2), '00', SUBSTR(VPP.POD_CD, 1, 5), VPP.POD_CD)" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("                                   AND  F.SLS_RHQ_CD  = VPP.OFC_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                   AND VPP.PAST      = 'N'" ).append("\n"); 
		query.append("                                   AND NVL(VPP.PL_CLPT_IND_SEQ,'1') = NVL(F.POL_IND_SEQ,'1')" ).append("\n"); 
		query.append("                                   AND NVL(VPP.PD_CLPT_IND_SEQ,'1') = NVL(F.POD_IND_SEQ,'1')" ).append("\n"); 
		query.append("--                                   AND F.IOC_TS_CD  IN ('O', 'I')" ).append("\n"); 
		query.append("                                   AND (NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) + NVL(F.CFM_53FT_QTY, 0) + NVL(F.CFM_TTL_WGT, 0)) > 0" ).append("\n"); 
		query.append("                                UNION ALL" ).append("\n"); 
		query.append("                                --Allocation" ).append("\n"); 
		query.append("                                SELECT /*+ ORDERED USE_NL(VVP A) */ " ).append("\n"); 
		query.append("                                       4           AS FLG," ).append("\n"); 
		query.append("                                       VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                       VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                       VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                                       VPP.DIR_CD        ," ).append("\n"); 
		query.append("                                       VPP.COST_YR       ," ).append("\n"); 
		query.append("                                       VPP.COST_MON      ," ).append("\n"); 
		query.append("                                       VPP.COST_WK       ," ).append("\n"); 
		query.append("                                       VPP.VSL_CD        ," ).append("\n"); 
		query.append("                                       VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                       VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                       NULL AS QTA_OCN   ," ).append("\n"); 
		query.append("                                       NULL AS QTA_IPC   ," ).append("\n"); 
		query.append("                                       NULL AS FC_OCN_VOL," ).append("\n"); 
		query.append("                                       NULL AS FC_OCN_WGT," ).append("\n"); 
		query.append("                                       NULL AS FC_IPC_VOL," ).append("\n"); 
		query.append("                                       NULL AS FC_IPC_WGT," ).append("\n"); 
		query.append("                                       NULL AS FC_TS_VOL ," ).append("\n"); 
		query.append("                                       NULL AS FC_TS_WGT ," ).append("\n"); 
		query.append("                                       DECODE(A.TS_FLG,'N',DECODE(A.IOC_CD, 'O', A.ASGN_TTL_QTY)) AS AL_OCN_VOL," ).append("\n"); 
		query.append("                                       DECODE(A.TS_FLG,'N',DECODE(A.IOC_CD, 'O', A.ASGN_TTL_WGT)) AS AL_OCN_WGT," ).append("\n"); 
		query.append("                                       DECODE(A.TS_FLG,'N',DECODE(A.IOC_CD, 'I', A.ASGN_TTL_QTY)) AS AL_IPC_VOL," ).append("\n"); 
		query.append("                                       DECODE(A.TS_FLG,'N',DECODE(A.IOC_CD, 'I', A.ASGN_TTL_WGT)) AS AL_IPC_WGT," ).append("\n"); 
		query.append("                                       DECODE(A.TS_FLG, 'Y', A.ASGN_TTL_QTY) AS AL_TS_VOL," ).append("\n"); 
		query.append("                                       DECODE(A.TS_FLG, 'Y', A.ASGN_TTL_WGT) AS AL_TS_WGT," ).append("\n"); 
		query.append("                                       NULL      AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                       NULL      AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                       NULL      AS BKG_TS_VOL," ).append("\n"); 
		query.append("                                       NULL      AS BKG_TS_WGT," ).append("\n"); 
		query.append("                                       VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                       VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                                       SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("                                  FROM VVD_POL_POD      VPP," ).append("\n"); 
		query.append("                                       SPC_ALOC_POL_POD A  " ).append("\n"); 
		query.append("                                       " ).append("\n"); 
		query.append("                                 WHERE A.RLANE_CD       = VPP.RLANE_CD" ).append("\n"); 
		query.append("                                   AND A.DIR_CD         = VPP.DIR_CD" ).append("\n"); 
		query.append("                                   AND A.VSL_CD         = VPP.VSL_CD" ).append("\n"); 
		query.append("                                   AND A.SKD_VOY_NO     = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                   AND A.SKD_DIR_CD     = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                   AND DECODE(SUBSTR(A.POL_YD_CD, 6, 2), '00', SUBSTR(A.POL_YD_CD, 1, 5), SUBSTR(A.POL_YD_CD, 1, LENGTH(VPP.POL_CD))) = DECODE(SUBSTR(A.POL_YD_CD, 6, 2), '00', SUBSTR(VPP.POL_CD, 1, 5), VPP.POL_CD)" ).append("\n"); 
		query.append("                                   AND DECODE(SUBSTR(A.POD_YD_CD, 6, 2), '00', SUBSTR(A.POD_YD_CD, 1, 5), SUBSTR(A.POD_YD_CD, 1, LENGTH(VPP.POD_CD))) = DECODE(SUBSTR(A.POD_YD_CD, 6, 2), '00', SUBSTR(VPP.POD_CD, 1, 5), VPP.POD_CD)" ).append("\n"); 
		query.append("                                   AND A.REP_TRD_CD     = VPP.REP_TRD_CD" ).append("\n"); 
		query.append("                                   AND A.REP_SUB_TRD_CD = VPP.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                                   AND A.TRD_CD         = VPP.TRD_CD" ).append("\n"); 
		query.append("                                   AND A.SUB_TRD_CD     = VPP.SUB_TRD_CD" ).append("\n"); 
		query.append("                                   AND NVL(VPP.PL_CLPT_IND_SEQ,'1') = NVL(A.POL_IND_SEQ,'1')" ).append("\n"); 
		query.append("                                   AND NVL(VPP.PD_CLPT_IND_SEQ,'1') = NVL(A.POD_IND_SEQ,'1')" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("                                   AND A.SLS_RHQ_CD  = VPP.OFC_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                --   AND VPP.POL_CONTI    = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                                UNION ALL" ).append("\n"); 
		query.append("                                --Booking" ).append("\n"); 
		query.append("                                SELECT 5        AS FLG," ).append("\n"); 
		query.append("                                       REP_TRD_CD     ," ).append("\n"); 
		query.append("                                       REP_SUB_TRD_CD ," ).append("\n"); 
		query.append("                                       RLANE_CD       ," ).append("\n"); 
		query.append("                                       DIR_CD         ," ).append("\n"); 
		query.append("                                       COST_YR        ," ).append("\n"); 
		query.append("                                       COST_MON       ," ).append("\n"); 
		query.append("                                       COST_WK        ," ).append("\n"); 
		query.append("                                       VSL_CD         ," ).append("\n"); 
		query.append("                                       SKD_VOY_NO     ," ).append("\n"); 
		query.append("                                       SKD_DIR_CD     ," ).append("\n"); 
		query.append("                                       NULL AS QTA_OCN," ).append("\n"); 
		query.append("                                       NULL AS QTA_IPC," ).append("\n"); 
		query.append("                                       DECODE(IOC_CD||PAST, 'OY', BKG_TTL_QTY) AS FC_OCN_VOL," ).append("\n"); 
		query.append("                                       DECODE(IOC_CD||PAST, 'OY', BKG_TTL_WGT) AS FC_OCN_WGT," ).append("\n"); 
		query.append("                                       DECODE(IOC_CD||PAST, 'IY', BKG_TTL_QTY) AS FC_IPC_VOL," ).append("\n"); 
		query.append("                                       DECODE(IOC_CD||PAST, 'IY', BKG_TTL_WGT) AS FC_IPC_WGT," ).append("\n"); 
		query.append("                                       DECODE(IOC_CD||PAST, 'TY', BKG_TTL_QTY) AS FC_TS_VOL," ).append("\n"); 
		query.append("                                       DECODE(IOC_CD||PAST, 'TY', BKG_TTL_WGT) AS FC_TS_WGT," ).append("\n"); 
		query.append("                                       NULL AS AL_OCN_VOL," ).append("\n"); 
		query.append("                                       NULL AS AL_OCN_WGT," ).append("\n"); 
		query.append("                                       NULL AS AL_IPC_VOL," ).append("\n"); 
		query.append("                                       NULL AS AL_IPC_WGT," ).append("\n"); 
		query.append("                                       NULL AS AL_TS_VOL ," ).append("\n"); 
		query.append("                                       NULL AS AL_TS_WGT ," ).append("\n"); 
		query.append("                                       DECODE(IOC_CD, 'O', DECODE(TS_FLG,'N',BKG_TTL_QTY)) AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                       DECODE(IOC_CD, 'O', DECODE(TS_FLG,'N',BKG_TTL_WGT)) AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                       DECODE(IOC_CD, 'I', DECODE(TS_FLG,'N',BKG_TTL_QTY)) AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                       DECODE(IOC_CD, 'I', DECODE(TS_FLG,'N',BKG_TTL_WGT)) AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                       DECODE(TS_FLG,'Y',BKG_TTL_QTY) AS BKG_TS_VOL," ).append("\n"); 
		query.append("                                       DECODE(TS_FLG,'Y',BKG_TTL_WGT) AS BKG_TS_WGT," ).append("\n"); 
		query.append("                                       LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                       LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                                       OFC_CD" ).append("\n"); 
		query.append("                                  FROM BKG_DATA" ).append("\n"); 
		query.append("                                 WHERE 1=1" ).append("\n"); 
		query.append("                                   --AND TS_FLG = 'N'" ).append("\n"); 
		query.append("                                   AND BKG_TTL_QTY + BKG_TTL_WGT > 0" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                               UNION ALL              -- BSA 泥댄겕?댁꽌 SAQ/BKG/FCAST/ALOC ???놁뼱???붾㈃??議고쉶?섎룄濡??ㅼ젙                                " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                               SELECT  /*+ ORDERED USE_NL(VVP A B) */ " ).append("\n"); 
		query.append("                                       6          AS FLG ," ).append("\n"); 
		query.append("                                       VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                       VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                       VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                                       VPP.DIR_CD        ," ).append("\n"); 
		query.append("                                       VPP.COST_YR       ," ).append("\n"); 
		query.append("                                       VPP.COST_MON      ," ).append("\n"); 
		query.append("                                       VPP.COST_WK       ," ).append("\n"); 
		query.append("                                       VPP.VSL_CD        ," ).append("\n"); 
		query.append("                                       VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                       VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                       NULL AS QTA_OCN   ," ).append("\n"); 
		query.append("                                       NULL AS QTA_IPC   ," ).append("\n"); 
		query.append("                                       NULL AS FC_OCN_VOL," ).append("\n"); 
		query.append("                                       NULL AS FC_OCN_WGT," ).append("\n"); 
		query.append("                                       NULL AS FC_IPC_VOL," ).append("\n"); 
		query.append("                                       NULL AS FC_IPC_WGT," ).append("\n"); 
		query.append("                                       NULL AS FC_TS_VOL ," ).append("\n"); 
		query.append("                                       NULL AS FC_TS_WGT ," ).append("\n"); 
		query.append("                                       NULL AS AL_OCN_VOL," ).append("\n"); 
		query.append("                                       NULL AS AL_OCN_WGT," ).append("\n"); 
		query.append("                                       NULL AS AL_IPC_VOL," ).append("\n"); 
		query.append("                                       NULL AS AL_IPC_WGT," ).append("\n"); 
		query.append("                                       NULL AS AL_TS_VOL," ).append("\n"); 
		query.append("                                       NULL AS AL_TS_WGT," ).append("\n"); 
		query.append("                                       NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                       NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                       NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                       NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                       NULL AS BKG_TS_VOL," ).append("\n"); 
		query.append("                                       NULL AS BKG_TS_WGT," ).append("\n"); 
		query.append("                                       VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                       VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                                       VPP.OFC_CD" ).append("\n"); 
		query.append("                            FROM  VVD_POL_POD      VPP" ).append("\n"); 
		query.append("                                  ,COA_MON_VVD A" ).append("\n"); 
		query.append("                                  ,BSA_VVD_OTR_CRR B  " ).append("\n"); 
		query.append("                            WHERE 1=1" ).append("\n"); 
		query.append("                            AND  A.TRD_CD = VPP.REP_TRD_CD" ).append("\n"); 
		query.append("                            AND A.DIR_CD = VPP.DIR_CD" ).append("\n"); 
		query.append("                            AND B.BSA_OP_JB_CD =  '007'" ).append("\n"); 
		query.append("                            AND B.CRR_CD IN (COM_CONSTANTMGR_PKG.COM_GETCOMPANYCODE_FNC)" ).append("\n"); 
		query.append("                            AND A.VSL_CD = VPP.VSL_CD" ).append("\n"); 
		query.append("                            AND A.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND A.DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                            AND A.TRD_CD = B.TRD_CD" ).append("\n"); 
		query.append("                            AND A.RLANE_CD = B.RLANE_CD" ).append("\n"); 
		query.append("                            AND A.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                            AND A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND A.DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("--                                UNION ALL" ).append("\n"); 
		query.append("--                                --TS List" ).append("\n"); 
		query.append("--                                SELECT 99      AS FLG        ," ).append("\n"); 
		query.append("--                                       V.REP_TRD_CD          ," ).append("\n"); 
		query.append("--                                       V.REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("--                                       V.RLANE_CD            ," ).append("\n"); 
		query.append("--                                       V.DIR_CD              ," ).append("\n"); 
		query.append("--                                       V.COST_YR             ," ).append("\n"); 
		query.append("--                                       V.COST_MON            ," ).append("\n"); 
		query.append("--                                       V.COST_WK             ," ).append("\n"); 
		query.append("--                                       V.VSL_CD              ," ).append("\n"); 
		query.append("--                                       V.SKD_VOY_NO          ," ).append("\n"); 
		query.append("--                                       V.SKD_DIR_CD          ," ).append("\n"); 
		query.append("--                                       NULL    AS QTA_OCN    ," ).append("\n"); 
		query.append("--                                       NULL    AS QTA_IPC    ," ).append("\n"); 
		query.append("--                                       NULL    AS FC_OCN_VOL ," ).append("\n"); 
		query.append("--                                       NULL    AS FC_OCN_WGT ," ).append("\n"); 
		query.append("--                                       NULL    AS FC_IPC_VOL ," ).append("\n"); 
		query.append("--                                       NULL    AS FC_IPC_WGT ," ).append("\n"); 
		query.append("--                                       NULL    AS AL_OCN_VOL ," ).append("\n"); 
		query.append("--                                       NULL    AS AL_OCN_WGT ," ).append("\n"); 
		query.append("--                                       NULL    AS AL_IPC_VOL ," ).append("\n"); 
		query.append("--                                       NULL    AS AL_IPC_WGT ," ).append("\n"); 
		query.append("--                                       NULL    AS BKG_OCN_VOL," ).append("\n"); 
		query.append("--                                       NULL    AS BKG_OCN_WGT," ).append("\n"); 
		query.append("--                                       NULL    AS BKG_IPC_VOL," ).append("\n"); 
		query.append("--                                       NULL    AS BKG_IPC_WGT," ).append("\n"); 
		query.append("--                                       V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("--                                       V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("--                                       OFC_CD" ).append("\n"); 
		query.append("--                                  FROM REP_VVDS V" ).append("\n"); 
		query.append("--                                 WHERE EXISTS ( SELECT 1" ).append("\n"); 
		query.append("--                                                  FROM SPC_DLY_FCAST_CUST F ," ).append("\n"); 
		query.append("--                                                       VSL_PORT_SKD       VP" ).append("\n"); 
		query.append("--                                                 WHERE (NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_TTL_WGT, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) + NVL(F.CFM_53FT_QTY, 0)) > 0" ).append("\n"); 
		query.append("--                                                   AND F.RLANE_CD    = VP.RLANE_CD" ).append("\n"); 
		query.append("--                                                   AND F.DIR_CD      = VP.DIR_CD" ).append("\n"); 
		query.append("--                                                   AND F.VSL_CD      = VP.VSL_CD" ).append("\n"); 
		query.append("--                                                   AND F.SKD_VOY_NO  = VP.SKD_VOY_NO" ).append("\n"); 
		query.append("--                                                   AND F.SKD_DIR_CD  = VP.SKD_DIR_CD" ).append("\n"); 
		query.append("--                                                   AND DECODE(SUBSTR(F.POL_YD_CD, 6, 2), '00', SUBSTR(F.POL_YD_CD, 1, 5), SUBSTR(F.POL_YD_CD, 1, LENGTH(VP.PORT_CD))) = DECODE(SUBSTR(F.POL_YD_CD, 6, 2), '00', SUBSTR(VP.PORT_CD, 1, 5), VP.PORT_CD)" ).append("\n"); 
		query.append("--                                                   AND F.IOC_TS_CD   = 'T'" ).append("\n"); 
		query.append("--                                                   AND VP.RLANE_CD   = V.RLANE_CD" ).append("\n"); 
		query.append("--                                                   AND VP.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("--                                                   AND VP.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("--                                                   AND VP.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("--                                                   AND VP.SKD_DIR_CD = V.SKD_DIR_CD )" ).append("\n"); 
		query.append("--                                    OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("--                                                  FROM SPC_ALOC_POL_POD A ," ).append("\n"); 
		query.append("--                                                       VSL_PORT_SKD     VP" ).append("\n"); 
		query.append("--                                                 WHERE A.ASGN_TTL_QTY + A.ASGN_TTL_WGT > 0" ).append("\n"); 
		query.append("--                                                   AND A.RLANE_CD    = VP.RLANE_CD" ).append("\n"); 
		query.append("--                                                   AND A.DIR_CD      = VP.DIR_CD" ).append("\n"); 
		query.append("--                                                   AND A.VSL_CD      = VP.VSL_CD" ).append("\n"); 
		query.append("--                                                   AND A.SKD_VOY_NO  = VP.SKD_VOY_NO" ).append("\n"); 
		query.append("--                                                   AND A.SKD_DIR_CD  = VP.SKD_DIR_CD" ).append("\n"); 
		query.append("--                                                   AND DECODE(SUBSTR(A.POL_YD_CD, 6, 2), '00', SUBSTR(A.POL_YD_CD, 1, 5), SUBSTR(A.POL_YD_CD, 1, LENGTH(VP.PORT_CD))) = DECODE(SUBSTR(A.POL_YD_CD, 6, 2), '00', SUBSTR(VP.PORT_CD, 1, 5), VP.PORT_CD)" ).append("\n"); 
		query.append("--                                                   AND A.TS_FLG      = 'Y'" ).append("\n"); 
		query.append("--                                                   AND VP.RLANE_CD   = V.RLANE_CD" ).append("\n"); 
		query.append("--                                                   AND VP.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("--                                                   AND VP.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("--                                                   AND VP.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("--                                                   AND VP.SKD_DIR_CD = V.SKD_DIR_CD )" ).append("\n"); 
		query.append("--                                    OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("--                                                  FROM BKG_DATA     B ," ).append("\n"); 
		query.append("--                                                       VSL_PORT_SKD VP" ).append("\n"); 
		query.append("--                                                 WHERE B.BKG_TTL_QTY + B.BKG_TTL_WGT > 0" ).append("\n"); 
		query.append("--                                                   AND B.RLANE_CD    = VP.RLANE_CD" ).append("\n"); 
		query.append("--                                                   AND B.DIR_CD      = VP.DIR_CD" ).append("\n"); 
		query.append("--                                                   AND B.VSL_CD      = VP.VSL_CD" ).append("\n"); 
		query.append("--                                                   AND B.SKD_VOY_NO  = VP.SKD_VOY_NO" ).append("\n"); 
		query.append("--                                                   AND B.SKD_DIR_CD  = VP.SKD_DIR_CD" ).append("\n"); 
		query.append("--                                                   AND (B.POL_CD = VP.PORT_CD OR B.POL_YD_CD = VP.PORT_CD)" ).append("\n"); 
		query.append("--                                                   AND B.TS_FLG      = 'Y'" ).append("\n"); 
		query.append("--                                                   AND VP.RLANE_CD   = V.RLANE_CD" ).append("\n"); 
		query.append("--                                                   AND VP.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("--                                                   AND VP.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("--                                                   AND VP.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("--                                                   AND VP.SKD_DIR_CD = V.SKD_DIR_CD )" ).append("\n"); 
		query.append("                             )           A," ).append("\n"); 
		query.append("                             SPC_OFC_LVL O," ).append("\n"); 
		query.append("                             PARAMS      P" ).append("\n"); 
		query.append("                       WHERE A.OFC_CD = O.OFC_CD" ).append("\n"); 
		query.append("                         AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                         AND (   O.N2ND_PRNT_OFC_CD = P.OFC_CD " ).append("\n"); 
		query.append("                              OR O.N3RD_PRNT_OFC_CD = P.OFC_CD )" ).append("\n"); 
		query.append("                   )" ).append("\n"); 
		query.append("          GROUP BY REP_TRD_CD          ," ).append("\n"); 
		query.append("                   REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                   RLANE_CD            ," ).append("\n"); 
		query.append("                   DIR_CD              ," ).append("\n"); 
		query.append("                   COST_YR             ," ).append("\n"); 
		query.append("                   COST_MON            ," ).append("\n"); 
		query.append("                   COST_WK             ," ).append("\n"); 
		query.append("                   VSL_CD              ," ).append("\n"); 
		query.append("                   SKD_VOY_NO          ," ).append("\n"); 
		query.append("                   SKD_DIR_CD          ," ).append("\n"); 
		query.append("                   LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                   LST_LODG_PORT_CD" ).append("\n"); 
		query.append("         	 )                 Z ," ).append("\n"); 
		query.append("         SPC_ALOC_CTRL_OPT C ," ).append("\n"); 
		query.append("         SAQ_MTY_SPC_GNTE  SG" ).append("\n"); 
		query.append("   WHERE C.RLANE_CD  (+) = Z.RLANE_CD" ).append("\n"); 
		query.append("     AND C.DIR_CD    (+) = Z.DIR_CD" ).append("\n"); 
		query.append("     AND C.VSL_CD    (+) = Z.VSL_CD" ).append("\n"); 
		query.append("     AND C.SKD_VOY_NO(+) = Z.SKD_VOY_NO" ).append("\n"); 
		query.append("     AND C.SKD_DIR_CD(+) = Z.SKD_DIR_CD" ).append("\n"); 
		query.append("     AND SG.BSE_YR   (+) = Z.COST_YR" ).append("\n"); 
		query.append("     AND SG.BSE_WK   (+) = Z.COST_WK" ).append("\n"); 
		query.append("     AND SG.RLANE_CD (+) = Z.RLANE_CD" ).append("\n"); 
		query.append("     AND SG.DIR_CD   (+) = Z.DIR_CD" ).append("\n"); 
		query.append("     AND SG.PORT_CD  (+) = Z.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("ORDER BY Z.REP_TRD_CD          ," ).append("\n"); 
		query.append("         Z.REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("         Z.RLANE_CD            ," ).append("\n"); 
		query.append("         Z.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("         Z.DIR_CD              ," ).append("\n"); 
		query.append("         Z.COST_YR             ," ).append("\n"); 
		query.append("         Z.COST_MON            ," ).append("\n"); 
		query.append("         Z.COST_WK             ," ).append("\n"); 
		query.append("         Z.VSL_CD              ," ).append("\n"); 
		query.append("         Z.SKD_VOY_NO          ," ).append("\n"); 
		query.append("         Z.SKD_DIR_CD" ).append("\n"); 

	}
}