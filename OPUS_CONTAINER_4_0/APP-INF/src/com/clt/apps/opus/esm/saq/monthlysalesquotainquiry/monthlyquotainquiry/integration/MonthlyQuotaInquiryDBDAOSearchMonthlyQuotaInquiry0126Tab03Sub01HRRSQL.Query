<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaInquiryDBDAOSearchMonthlyQuotaInquiry0126Tab03Sub01HRRSQL">
			<desc><![CDATA[Search MonthlyQuotaInquiry0126 Tab03 Sub01 HR]]></desc>
			<sql><![CDATA[
WITH TMP_INPUT_PARAMS AS 
    (SELECT DISTINCT 
        @[year] AS BSE_YR, 
        @[quarter] AS BSE_QTR_CD, 
        @[year]||

    #if (${month} < 10) 
		'0'||@[month]
    #else 
		@[month]
    #end
    
		AS YRMON_1,

        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||

    #if (${month} < 10) 
		'0'||@[month]
    #else 
		@[month]
    #end

	, 'YYYYMM'), 1), 'YYYYMM') AS YRMON_2, 

        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||

    #if (${month} < 10) 
		'0'||@[month]
    #else 
		@[month]
    #end

	, 'YYYYMM'), 2), 'YYYYMM') AS YRMON_3, 

        @[targetGrp] AS SAQ_TGT_GRP_CD, 
        @[version] AS RLSE_VER_NO, 
        @[trade] AS TRD_CD, 
        @[dirCd] AS DIR_CD,
        @[rhqCd] AS RHQ_CD,


#if (${ctrtAqCd} == '') 
		'  '
#else 
		@[ctrtAqCd] 
#end

        		AS AQ_CD, 

        @[ctrtOfcCd] AS OFC_CD, 
        @[subTrade] AS SUB_TRD_CD 

     FROM   DUAL), 
    VVD AS 
    (SELECT 
            VVD.TRD_CD,
            VVD.CONV_DIR_CD,
            VVD.SUB_TRD_CD,
            VVD.RLANE_CD,
            VVD.BSE_YR||VVD.BSE_MON AS YRMON, 
            SUM(VVD.FNL_BSA_CAPA) AS BSA, 
            COUNT(*) AS VOYAGE 
     FROM   SAQ_MON_CFM_TGT_VVD VVD, 
            TMP_INPUT_PARAMS INP 
     WHERE  VVD.BSE_YR = INP.BSE_YR 
     AND    VVD.BSE_QTR_CD = INP.BSE_QTR_CD 
     AND    VVD.MQTA_RLSE_VER_NO = INP.RLSE_VER_NO 
     AND    VVD.TRD_CD = INP.TRD_CD 
     AND    VVD.CONV_DIR_CD = INP.DIR_CD 
     AND    VVD.SUB_TRD_CD = INP.SUB_TRD_CD 
     GROUP BY VVD.TRD_CD, VVD.CONV_DIR_CD, VVD.SUB_TRD_CD, VVD.RLANE_CD, VVD.BSE_YR||VVD.BSE_MON) 
SELECT 
    7 AS SLEVEL, 
    SMR.DIR_CD, 
    RHQ_CD, 
    AQ_CD, 
    OFC_CD, 
    SUB_TRD_CD,
    DECODE(DIR.CONV_DIR_CD,'',SMR.RLANE_CD,SMR.RLANE_CD||' - '||DIR.DIR_CD) RLANE_CD, 
    DIR.DIR_CD CONV_DIR_CD, 
    ROW_SEQ, 
    TEXT AS ITEM_TEXT, 
    ITEM, 
    VAL_01+VAL_02+VAL_03 AS VAL_00, 
    VAL_01, 
    VAL_02, 
    VAL_03 
FROM  ( 
    SELECT 
          MIN(SMR.CONV_DIR_CD) AS DIR_CD, 
          MIN(SMR.RHQ_CD) RHQ_CD, 
          MIN(SMR.AQ_CD) AQ_CD,
          MIN(SMR.OFC_CD) OFC_CD,
          MIN(SMR.SUB_TRD_CD) SUB_TRD_CD,
          SMR.RLANE_CD, 
          ITM.ROW_SEQ, 
          ITM.TEXT, 
          CASE 
             WHEN ITM.CODE IN('05', '07', '08', '11', '12') THEN ITM.TEXT || '*' 
             ELSE ITM.TEXT 
          END ITEM, 


	    NVL(SUM(DECODE(SMR.YRMON, INP.YRMON_1,	
	        DECODE( ITM.CODE,  '01', (BSA),                     			
	                 '02', (VOYAGE),                           			
	                 '03', (SMR.LOD),                                 		
	                 '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),  			
	                 '05', (SMR.REV),                                 		
	                 '06', DECODE(LOD, 0, 0, (REV)/(LOD)*1000),              
	                 '07', (SMR.CM),                                  		
	                 '08', (SMR.RA_CM),                               		
	                 '09', DECODE(LOD, 0, 0, (CM)*1000/(LOD)),               
	                 '10', DECODE(LOD, 0, 0, (RA_CM)*1000/(LOD)),            
	                 '11', (SMR.OP),                                  		
	                 '12', (SMR.RA_OP),                               		
	                 '13', DECODE(LOD, 0, 0, (OP)*1000/(LOD)),               
	                 '14', DECODE(LOD, 0, 0, (RA_OP)*1000/(LOD)) ))), 0) AS VAL_01,


	    NVL(SUM(DECODE(SMR.YRMON, INP.YRMON_2,                     		
	        DECODE( ITM.CODE,  '01', (BSA),                     			
	                 '02', (VOYAGE),                           			
	                 '03', (SMR.LOD),                                 		
	                 '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),  			
	                 '05', (SMR.REV),                                 		
	                 '06', DECODE(LOD, 0, 0, (REV)/(LOD)*1000),              
	                 '07', (SMR.CM),                                  		
	                 '08', (SMR.RA_CM),                               		
	                 '09', DECODE(LOD, 0, 0, (CM)*1000/(LOD)),               
	                 '10', DECODE(LOD, 0, 0, (RA_CM)*1000/(LOD)),            
	                 '11', (SMR.OP),                                  		
	                 '12', (SMR.RA_OP),                               		
	                 '13', DECODE(LOD, 0, 0, (OP)*1000/(LOD)),               
	                 '14', DECODE(LOD, 0, 0, (RA_OP)*1000/(LOD)) ))), 0) AS VAL_02,
				

	    NVL(SUM(DECODE(SMR.YRMON, INP.YRMON_3,                     		
	        DECODE( ITM.CODE,  '01', (BSA),                     			
	                 '02', (VOYAGE),                           			
	                 '03', (SMR.LOD),                                 		
	                 '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),  			
	                 '05', (SMR.REV),                                 		
	                 '06', DECODE(LOD, 0, 0, (REV)/(LOD)*1000),              
	                 '07', (SMR.CM),                                  		
	                 '08', (SMR.RA_CM),                               		
	                 '09', DECODE(LOD, 0, 0, (CM)*1000/(LOD)),               
	                 '10', DECODE(LOD, 0, 0, (RA_CM)*1000/(LOD)),            
	                 '11', (SMR.OP),                                  		
	                 '12', (SMR.RA_OP),                               		
	                 '13', DECODE(LOD, 0, 0, (OP)*1000/(LOD)),               
	                 '14', DECODE(LOD, 0, 0, (RA_OP)*1000/(LOD)) ))), 0) AS VAL_03	
		

    FROM  ( 
            SELECT 
                 MIN(SMR.TRD_CD) AS TRD_CD, 
                 MIN(SMR.DIR_CD) AS DIR_CD, 
                 MIN(SMR.CONV_DIR_CD) AS CONV_DIR_CD, 
                 MIN(SMR.RHQ_CD) AS RHQ_CD,
                 MIN(NVL(SMR.AQ_CD, '  ')) AS AQ_CD,
                 MIN(SMR.RGN_OFC_CD) AS OFC_CD,
                 MIN(VVD.SUB_TRD_CD) AS SUB_TRD_CD,
                 SMR.RLANE_CD,
                 SMR.BSE_YR||SMR.BSE_MON AS YRMON, 
		
		
                         SUM(SMR.LOD_QTY) AS LOD, 
                         SUM(SMR.GRS_RPB_REV*SMR.LOD_QTY)/1000 AS REV,  
                         SUM((SMR.GRS_RPB_REV-SMR.CM_UC_AMT)*SMR.LOD_QTY)/1000 AS CM, 
                         SUM((SMR.GRS_RPB_REV-SMR.RA_CM_UC_AMT)*SMR.LOD_QTY)/1000 AS RA_CM,  
                         SUM((SMR.GRS_RPB_REV-SMR.OPFIT_UC_AMT)*SMR.LOD_QTY)/1000 AS OP, 
                         SUM((SMR.GRS_RPB_REV-SMR.RA_OPFIT_UC_AMT)*SMR.LOD_QTY )/1000 AS RA_OP 
		
		
            FROM SAQ_MON_CFM_QTA SMR 
                 JOIN 
                 TMP_INPUT_PARAMS INP 
                 ON 
                 ( 
                    SMR.BSE_YR = INP.BSE_YR AND 
                    SMR.BSE_QTR_CD = INP.BSE_QTR_CD AND 
                    SMR.MQTA_RLSE_VER_NO = INP.RLSE_VER_NO AND 
                    SMR.TRD_CD = INP.TRD_CD AND 
                    SMR.CONV_DIR_CD = INP.DIR_CD AND 
                    SMR.RHQ_CD = INP.RHQ_CD AND 
                    NVL(SMR.AQ_CD, '  ') = INP.AQ_CD AND 
                    SMR.RGN_OFC_CD = INP.OFC_CD AND 
            		   SMR.QTA_TGT_CD = @[selType]												
                 ) 
					 JOIN										 
                	   SAQ_MON_CFM_TGT_VVD VVD								 
					 ON										 
                 (										 
                    VVD.MQTA_RLSE_VER_NO = SMR.MQTA_RLSE_VER_NO AND				 
                    VVD.BSE_YR = SMR.BSE_YR AND							 
                    VVD.BSE_QTR_CD = SMR.BSE_QTR_CD AND						 
                    VVD.BSE_MON = SMR.BSE_MON AND						 
                    VVD.TRD_CD = SMR.TRD_CD AND							 
                    VVD.RLANE_CD = SMR.RLANE_CD AND						 
                    VVD.DIR_CD = SMR.DIR_CD AND							 
                    VVD.VSL_CD = SMR.VSL_CD AND							 
                    VVD.SKD_VOY_NO = SMR.SKD_VOY_NO AND						 
                    VVD.SKD_DIR_CD = SMR.SKD_DIR_CD						 
                                         )     										
            GROUP BY SMR.RLANE_CD, SMR.BSE_YR||SMR.BSE_MON 
          ) SMR 
          JOIN 
          ( 
            SELECT  INTG_CD_VAL_CTNT AS CODE, 
                    INTG_CD_VAL_DP_DESC AS TEXT, 
                    INTG_CD_VAL_DP_SEQ AS ROW_SEQ 
            FROM  COM_INTG_CD_DTL 
            WHERE INTG_CD_ID = 'CD01390' 

	#if($ilist.size() > 0)
            AND   ('ALL' = @[items0] OR (INTG_CD_VAL_DP_DESC IN (
                #foreach ($key in ${ilist})
                    #if($velocityCount < $ilist.size())
                    '$key',
                    #else
                    '$key'
                    #end
                #end
		)) )  

	#end

          ) ITM 
          ON 1 = 1 
          JOIN 
          VVD 
          ON 
          ( 
            SMR.TRD_CD = VVD.TRD_CD AND 
            SMR.CONV_DIR_CD = VVD.CONV_DIR_CD AND
            SMR.SUB_TRD_CD = VVD.SUB_TRD_CD AND
            SMR.RLANE_CD = VVD.RLANE_CD AND 
            SMR.YRMON = VVD.YRMON 
          ) 
          JOIN 
          TMP_INPUT_PARAMS INP 
          ON 1 = 1 
    GROUP BY SMR.RLANE_CD, ITM.ROW_SEQ, ITM.TEXT, ITM.CODE 
      ) SMR 
    ,     (                                                                                          
          SELECT                                                                                    
              DIR.RLANE_CD,                                                                                
              DIR.DIR_CD,							
              DIR.CONV_DIR_CD							
          FROM                                                                                    
              SAQ_MON_DIR_CONV DIR                                                                                
          WHERE                                                                                    
                 DIR.BSE_YR = @[year]                                                                           
             AND DIR.BSE_QTR_CD = @[quarter]                                                                                 
             AND DIR.TRD_CD = @[trade]                                         
             AND DIR.CONV_DIR_CD = @[dirCd]                                         		
          ) DIR                                                                                 
     WHERE                                                                                 
             DIR.RLANE_CD(+) = SMR.RLANE_CD 								
ORDER BY SMR.RLANE_CD, ROW_SEQ			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="quarter" type="12" value="" out="N"/>
				<param name="month" type="12" value="" out="N"/>
				<param name="targetGrp" type="12" value="" out="N"/>
				<param name="version" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="dirCd" type="12" value="" out="N"/>
				<param name="rhqCd" type="12" value="" out="N"/>
				<param name="ctrtAqCd" type="12" value="" out="N"/>
				<param name="ctrtOfcCd" type="12" value="" out="N"/>
				<param name="subTrade" type="12" value="" out="N"/>
				<param name="selType" type="12" value="" out="N"/>
				<param name="items0" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
