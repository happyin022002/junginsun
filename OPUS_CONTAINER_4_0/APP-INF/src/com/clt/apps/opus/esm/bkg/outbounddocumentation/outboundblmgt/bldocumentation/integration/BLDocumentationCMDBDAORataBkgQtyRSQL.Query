<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BLDocumentationCMDBDAORataBkgQtyRSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
#if (${ca_flg} == 'Y') 
SELECT CNTR_TPSZ_CD
,      'BKG' CATEGORY
,      sum(decode(DRY_CGO_FLG, 'Y', OP_CNTR_QTY, 0)) DRY_CGO_FLG
,      sum(decode(DCGO_FLG, 'Y', OP_CNTR_QTY, 0)) DCGO_FLG
,      sum(decode(RC_FLG, 'Y', OP_CNTR_QTY, 0)) RC_FLG
,      sum(decode(AWK_CGO_FLG, 'Y', OP_CNTR_QTY, 0)) AWK_CGO_FLG
,      sum(decode(BB_CGO_FLG, 'Y', OP_CNTR_QTY, 0)) BB_CGO_FLG
,      sum(decode(CRR_HNGR_SGL_BAR_USE_FLG, 'Y', OP_CNTR_QTY, 0)) +
       sum(decode(CRR_HNGR_DBL_BAR_USE_FLG, 'Y', OP_CNTR_QTY, 0)) +
       sum(decode(CRR_HNGR_TPL_BAR_USE_FLG, 'Y', OP_CNTR_QTY, 0)) +
       sum(decode(MER_HNGR_FLG, 'Y', OP_CNTR_QTY, 0)) HNGR_FLG
,      sum(decode(SOC_FLG, 'Y', OP_CNTR_QTY, 0)) SOC_FLG
,      sum(decode(RCV_TERM_CD, 'Y', OP_CNTR_QTY, 0)) RCV_TERM_Y
,      sum(decode(RCV_TERM_CD, 'D', OP_CNTR_QTY, 0)) RCV_TERM_D
,      sum(decode(RCV_TERM_CD, 'S', OP_CNTR_QTY, 0)) RCV_TERM_S
,      sum(decode(RCV_TERM_CD, 'T', OP_CNTR_QTY, 0)) RCV_TERM_T
,      sum(decode(RCV_TERM_CD, 'I', OP_CNTR_QTY, 0)) RCV_TERM_I
,      sum(decode(DE_TERM_CD, 'Y', OP_CNTR_QTY, 0)) DE_TERM_Y
,      sum(decode(DE_TERM_CD, 'D', OP_CNTR_QTY, 0)) DE_TERM_D
,      sum(decode(DE_TERM_CD, 'S', OP_CNTR_QTY, 0)) DE_TERM_S
,      sum(decode(DE_TERM_CD, 'T', OP_CNTR_QTY, 0)) DE_TERM_T
,      sum(decode(DE_TERM_CD, 'O', OP_CNTR_QTY, 0)) DE_TERM_O
,      sum(OP_CNTR_QTY) OP_CNTR_QTY
FROM   (SELECT DECODE(A.FLEX_HGT_FLG, 'Y', DECODE(B.CNTR_TPSZ_CD, 'D5', 'D4', B.CNTR_TPSZ_CD), B.CNTR_TPSZ_CD) CNTR_TPSZ_CD
,      B.DRY_CGO_FLG
,      B.DCGO_FLG
,      B.RC_FLG
,      B.AWK_CGO_FLG
,      B.BB_CGO_FLG
,      B.CRR_HNGR_SGL_BAR_USE_FLG
,      B.CRR_HNGR_DBL_BAR_USE_FLG
,      B.CRR_HNGR_TPL_BAR_USE_FLG
,      B.MER_HNGR_FLG
,      B.SOC_FLG
,      B.RCV_TERM_CD
,      B.DE_TERM_CD
,      B.OP_CNTR_QTY
FROM   BKG_BKG_HIS A, BKG_QTY_DTL_HIS B
WHERE  A.BKG_NO = B.BKG_NO
AND    A.BKG_NO = @[bkg_no]
AND    A.CORR_NO = 'TMP0000001'
AND    B.CORR_NO = 'TMP0000001'
AND    B.CNTR_TPSZ_CD NOT LIKE 'Q%')
GROUP BY CNTR_TPSZ_CD
#else 
SELECT CNTR_TPSZ_CD
,      'BKG' CATEGORY
,      sum(decode(DRY_CGO_FLG, 'Y', OP_CNTR_QTY, 0)) DRY_CGO_FLG
,      sum(decode(DCGO_FLG, 'Y', OP_CNTR_QTY, 0)) DCGO_FLG
,      sum(decode(RC_FLG, 'Y', OP_CNTR_QTY, 0)) RC_FLG
,      sum(decode(AWK_CGO_FLG, 'Y', OP_CNTR_QTY, 0)) AWK_CGO_FLG
,      sum(decode(BB_CGO_FLG, 'Y', OP_CNTR_QTY, 0)) BB_CGO_FLG
,      sum(decode(CRR_HNGR_SGL_BAR_USE_FLG, 'Y', OP_CNTR_QTY, 0)) +
       sum(decode(CRR_HNGR_DBL_BAR_USE_FLG, 'Y', OP_CNTR_QTY, 0)) +
       sum(decode(CRR_HNGR_TPL_BAR_USE_FLG, 'Y', OP_CNTR_QTY, 0)) +
       sum(decode(MER_HNGR_FLG, 'Y', OP_CNTR_QTY, 0)) HNGR_FLG
,      sum(decode(SOC_FLG, 'Y', OP_CNTR_QTY, 0)) SOC_FLG
,      sum(decode(RCV_TERM_CD, 'Y', OP_CNTR_QTY, 0)) RCV_TERM_Y
,      sum(decode(RCV_TERM_CD, 'D', OP_CNTR_QTY, 0)) RCV_TERM_D
,      sum(decode(RCV_TERM_CD, 'S', OP_CNTR_QTY, 0)) RCV_TERM_S
,      sum(decode(RCV_TERM_CD, 'T', OP_CNTR_QTY, 0)) RCV_TERM_T
,      sum(decode(RCV_TERM_CD, 'I', OP_CNTR_QTY, 0)) RCV_TERM_I
,      sum(decode(DE_TERM_CD, 'Y', OP_CNTR_QTY, 0)) DE_TERM_Y
,      sum(decode(DE_TERM_CD, 'D', OP_CNTR_QTY, 0)) DE_TERM_D
,      sum(decode(DE_TERM_CD, 'S', OP_CNTR_QTY, 0)) DE_TERM_S
,      sum(decode(DE_TERM_CD, 'T', OP_CNTR_QTY, 0)) DE_TERM_T
,      sum(decode(DE_TERM_CD, 'O', OP_CNTR_QTY, 0)) DE_TERM_O
,      sum(OP_CNTR_QTY) OP_CNTR_QTY
FROM   (SELECT DECODE(A.FLEX_HGT_FLG, 'Y', DECODE(B.CNTR_TPSZ_CD, 'D5', 'D4', B.CNTR_TPSZ_CD), B.CNTR_TPSZ_CD) CNTR_TPSZ_CD
,      B.DRY_CGO_FLG
,      B.DCGO_FLG
,      B.RC_FLG
,      B.AWK_CGO_FLG
,      B.BB_CGO_FLG
,      B.CRR_HNGR_SGL_BAR_USE_FLG
,      B.CRR_HNGR_DBL_BAR_USE_FLG
,      B.CRR_HNGR_TPL_BAR_USE_FLG
,      B.MER_HNGR_FLG
,      B.SOC_FLG
,      B.RCV_TERM_CD
,      B.DE_TERM_CD
,      B.OP_CNTR_QTY
FROM   BKG_BOOKING A, BKG_QTY_DTL B
WHERE  A.BKG_NO = B.BKG_NO
AND    A.BKG_NO = @[bkg_no]
AND    B.CNTR_TPSZ_CD NOT LIKE 'Q%')
GROUP BY CNTR_TPSZ_CD
#end			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="ATLY1080008" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
