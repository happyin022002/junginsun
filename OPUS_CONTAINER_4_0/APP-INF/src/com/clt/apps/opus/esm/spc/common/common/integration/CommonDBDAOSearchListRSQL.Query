<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CommonDBDAOSearchListRSQL">
			<desc><![CDATA[2010.08.23 최윤성 [CHM-201005492-01] RDR 실적 Summary 기능 개발 - Operator List 쿼리 추가
2010.12.30 최윤성 [CHM-201008093-01] Office Level Table 생성
 - SPC_ORGANIZATION_V 대신 SPC_OFC_LVL 로 대체
2015.07.22. SKY[CLT-000042051-10] Virtual add call - VT_ADD_CALL_FLG IS  NULL  로직 추가]]></desc>
			<sql><![CDATA[
#if (${methodname} == 'searchTradeComboList')

/* Trade List를  가져 온다 */
   SELECT B.TRD_CD,
          TRD_NM
     FROM (
             SELECT DISTINCT
                    B.TRD_CD
               FROM MDM_REV_LANE     A,
                    MDM_DTL_REV_LANE B,
                    MDM_VSL_SVC_LANE C
              WHERE A.RLANE_CD    = B.RLANE_CD
                AND A.VSL_TP_CD   = 'C'
#if (${isRepTrade} == 'true')
                /* Rep Trade 경우 추가 option 조건 */
                AND A.REP_TRD_CD  = B.TRD_CD
#end
                AND B.DELT_FLG   IN ('N', @[del])
                AND B.TRD_CD     <> 'COM'
                AND A.VSL_SLAN_CD = C.VSL_SLAN_CD
                AND DECODE(C.VSL_SVC_TP_CD, 'I', C.CO_CD, '1') = DECODE(C.VSL_SVC_TP_CD, 'I', 'H', '1')
                AND C.VSL_SVC_TP_CD <> 'O'
         ) A,
         MDM_TRADE B
   WHERE A.TRD_CD = B.TRD_CD
ORDER BY B.TRD_CD

#elseif (${methodname} == 'searchSubTradeComboList')

/* Sub Trade List를  가져 온다 */
   SELECT A.TRD_CD    ,
          B.SUB_TRD_CD,
          NVL(B.SUB_TRD_NM, ( SELECT T.TRD_NM
                                FROM MDM_TRADE T
                               WHERE T.TRD_CD = A.TRD_CD)
          ) AS SUB_TRD_NM
     FROM (
             SELECT DISTINCT
                    B.TRD_CD  ,
                    SUB_TRD_CD
               FROM MDM_REV_LANE     A,
                    MDM_DTL_REV_LANE B,
                    MDM_VSL_SVC_LANE C
              WHERE A.RLANE_CD = B.RLANE_CD
                AND A.VSL_TP_CD  = 'C'
#if (${isRepTrade} == 'true')
                AND A.REP_TRD_CD = B.TRD_CD  /* REP TRADE 경우 추가 OPTION 조건 */
#end
                AND B.DELT_FLG   IN ('N', @[del])
                AND B.TRD_CD     <> 'COM'
                AND A.VSL_SLAN_CD = C.VSL_SLAN_CD
                AND DECODE(C.VSL_SVC_TP_CD, 'I', C.CO_CD, '1') = DECODE(C.VSL_SVC_TP_CD, 'I', 'H', '1')
                AND C.VSL_SVC_TP_CD <> 'O'
				#if (${trdCd} != '')
					AND B.TRD_CD IN (@[trdCd])
				#end
				#if (${subTrdCd} != '')
				     AND B.SUB_TRD_CD   IN ($subTrdCd) 
				#end    
          ) A,
          MDM_SUB_TRD B
    WHERE 1=1
#if (${isall} == 'true')
      AND A.SUB_TRD_CD = B.SUB_TRD_CD(+)
#else
      AND A.SUB_TRD_CD = B.SUB_TRD_CD
#end
 ORDER BY A.TRD_CD    ,
          B.SUB_TRD_CD

#elseif (${methodname} == 'searchRLaneComboList')

/* Lane List를  가져 온다 */
  SELECT DISTINCT
         B.TRD_CD    ,
         B.SUB_TRD_CD,
         A.RLANE_CD  ,
         A.RLANE_NM
    FROM MDM_REV_LANE     A,
         MDM_DTL_REV_LANE B,
         MDM_VSL_SVC_LANE C
#if(${isPus} == 'true')
         , (SELECT DISTINCT P.VSL_SLAN_CD, P.SKD_DIR_CD
              FROM VSK_PF_SKD S,
                   VSK_PF_SKD_DTL P,
                   VSK_VSL_SKD V
             WHERE S.SLAN_STND_FLG = 'Y'
               AND S.VSL_SLAN_CD = P.VSL_SLAN_CD
               AND S.PF_SVC_TP_CD = P.PF_SVC_TP_CD
               AND P.PORT_CD = 'KRPUS'
               AND TURN_PORT_IND_CD <> 'F'
               AND V.VSL_SLAN_CD = S.VSL_SLAN_CD
               AND V.PF_SKD_TP_CD = S.PF_SVC_TP_CD
               AND V.SKD_STS_CD <> 'CLO') P
#end
   WHERE A.RLANE_CD     = B.RLANE_CD
     AND A.VSL_TP_CD    = 'C'
#if (${ipc} != 'true')
     AND A.REP_TRD_CD   = B.TRD_CD
#end
     AND B.DELT_FLG   IN ('N', @[del])
     AND B.TRD_CD     <> 'COM'
     AND A.VSL_SLAN_CD = C.VSL_SLAN_CD
     AND DECODE(C.VSL_SVC_TP_CD, 'I', C.CO_CD, '1') = DECODE(C.VSL_SVC_TP_CD, 'I', 'H', '1')
     AND C.VSL_SVC_TP_CD <> 'O'
#if (${locTrdCd} != '')
	 AND B.TRD_CD     IN (@[locTrdCd]) 
#end
#if (${locSubTrdCd} != '')
	 AND B.SUB_TRD_CD  IN (@[locSubTrdCd]) 
#end
#if(${isPus} == 'true')
     AND A.VSL_SLAN_CD = P.VSL_SLAN_CD
     AND B.VSL_SLAN_DIR_CD = P.SKD_DIR_CD
     AND B.FM_CONTI_CD = 'A'
     AND B.TO_CONTI_CD IN ('E', 'M')
     AND EXISTS (SELECT 'A' 
                   FROM COA_MON_VVD M
                  WHERE SUBSTR(M.SLS_YRMON, 1, 4) = TO_CHAR(SYSDATE, 'YYYY')
                    AND CEIL(TO_NUMBER(SUBSTR(M.SLS_YRMON, 5, 2)) / 3)||'Q' = CEIL(TO_NUMBER(TO_CHAR(SYSDATE, 'MM')) / 3)||'Q'
                    AND M.DELT_FLG = 'N'
                    AND M.TRD_CD = B.TRD_CD
                    AND M.RLANE_CD = B.RLANE_CD)
#end
ORDER BY B.TRD_CD    ,
         B.SUB_TRD_CD,
         A.RLANE_CD

#elseif (${methodname} == 'searchVesselSizeList')

/* VesselSize List를  가져 온다 */
  SELECT DISTINCT
#if (${lane} != '')
         C.CNTR_VSL_CLSS_CAPA AS CODE,
         TO_CHAR(C.CNTR_VSL_CLSS_CAPA, 'FM9,990') AS TEXT
#else
         C.CNTR_VSL_CLSS_CAPA AS CODE,
         V.RLANE_CD||'|'||C.CNTR_VSL_CLSS_CAPA AS TEXT
#end
    FROM MDM_VSL_CNTR C,
         COA_MON_VVD  V
   WHERE V.VSL_CD   = C.VSL_CD
#if (${lane} != '')
     AND V.RLANE_CD = @[lane]
#end
ORDER BY C.CNTR_VSL_CLSS_CAPA

#elseif (${methodname} == 'searchCustAbbrNmList')

/* Customer List를  가져 온다 */
SELECT A.CUST_CNT_CD || TRIM(TO_CHAR(A.CUST_SEQ, '000009')) AS CODE,
       DECODE(A.CUST_ABBR_NM, NULL, A.CUST_LGL_ENG_NM, A.CUST_ABBR_NM) || '|' || B.CUST_GRP_NM AS TEXT
  FROM MDM_CUSTOMER      A,
       MDM_CUST_PERF_GRP B
 WHERE A.CUST_GRP_ID = B.CUST_GRP_ID(+)
   AND A.CUST_CNT_CD = @[custCntCd]
   AND A.CUST_SEQ    = @[custSeq]
   AND A.DELT_FLG    = 'N'
   AND B.DELT_FLG(+) = 'N'

#elseif (${methodname} == 'searchOfficeList')

/* Salse Office List를  가져 온다 */
SELECT OFC_CD     AS CODE,
       OFC_ENG_NM AS TEXT
  FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY OFC_CD ASC) AS NO,
                 OFC_CD    ,
                 OFC_ENG_NM,
                 OFC_KND_CD,
                 LOC_CD
            FROM MDM_ORGANIZATION
           WHERE OFC_CD LIKE @[ofcCd]
             AND NVL(DELT_FLG, 'N') <> 'Y'
       ) A
 WHERE NO BETWEEN 1 AND 50

#elseif (${methodname} == 'searchVVDList')

/* VVD List를  가져 온다 */
SELECT VVD     AS CODE,
       SLAN_CD AS TEXT
  FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY SLAN_CD, VSL_CD||SKD_VOY_NO||SKD_DIR_CD, TO_NUMBER(CLPT_SEQ)) AS NO,
                 SLAN_CD,
                 VSL_CD || SKD_VOY_NO || SKD_DIR_CD AS VVD,
                 VPS_PORT_CD,
                 VPS_ETA_DT ,
                 VPS_ETD_DT
            FROM VSK_VSL_PORT_SKD
           WHERE 1=1
             AND VSL_CD || SKD_VOY_NO || SKD_DIR_CD = @[vvdCd]
             AND NVL(SKD_CNG_STS_CD, ' ') <> 'S'
             AND CLPT_IND_SEQ = '1'
             AND VT_ADD_CALL_FLG IS  NULL
       ) A
 WHERE NO BETWEEN 1 AND 50

#elseif (${methodname} == 'searchCommonCodeList')

/* Common Code List를  가져 온다 */
  SELECT INTG_CD_VAL_CTNT    AS CODE,
         INTG_CD_VAL_DP_DESC AS TEXT
    FROM COM_INTG_CD_DTL
   WHERE INTG_CD_ID = @[code]
ORDER BY INTG_CD_VAL_DP_SEQ

#elseif (${methodname} == 'searchRHQComboList')

/* RHQ List를  가져 온다 */

  SELECT T.OFC_CD    ,
         T.OFC_ENG_NM
    FROM 
        (
         SELECT * 
         FROM SPC_OFC_LVL T
         WHERE 1=1

	#if(${login_usr_ofc_cd} != '')
         CONNECT BY NOCYCLE PRIOR T.PRNT_OFC_CD = T.OFC_CD
         START WITH T.OFC_CD = @[login_usr_ofc_cd]
	#end

         )T,
         COA_WK_PRD  W
   WHERE T.OFC_LVL = 2
     AND W.COST_YR || W.COST_WK BETWEEN T.OFC_APLY_FM_YRWK AND T.OFC_APLY_TO_YRWK
     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
     AND T.DELT_FLG IN ('N', @[del])
ORDER BY 1

#elseif (${methodname} == 'searchAQComboList')

/* AQ List를  가져 온다 */
  SELECT V.OFC_CD    ,
         V.OFC_ENG_NM
#if (${module} == 'saq')
    FROM SAQ_ORGANIZATION_V V
   WHERE V.LVL = 3
#else
    FROM SPC_OFC_LVL V,
         COA_WK_PRD  W
   WHERE V.OFC_LVL = 3
     AND W.COST_YR || W.COST_WK BETWEEN V.OFC_APLY_FM_YRWK AND V.OFC_APLY_TO_YRWK
     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
#end
#if (${rhq} != '')
     AND V.N2ND_PRNT_OFC_CD = @[rhq]
#end
#if (${module} != 'saq')
     AND V.DELT_FLG IN ('N', @[del])
#end
ORDER BY 1

#elseif (${methodname} == 'searchRgnOfcComboList')

/* Rgn Office List를  가져 온다 */
  SELECT V.OFC_CD    ,
         V.OFC_ENG_NM
#if (${module} == 'saq')
    FROM SAQ_ORGANIZATION_V V
   WHERE V.LVL = 4
#else
    FROM SPC_OFC_LVL V,
         COA_WK_PRD  W
   WHERE V.OFC_LVL = 4
     AND W.COST_YR || W.COST_WK BETWEEN V.OFC_APLY_FM_YRWK AND V.OFC_APLY_TO_YRWK
     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
#end
#if (${rhq} != '')
     AND (V.N2ND_PRNT_OFC_CD = @[rhq] OR V.N3RD_PRNT_OFC_CD = @[rhq])
#end
#if (${module} != 'saq')
     AND V.DELT_FLG IN ('N', @[del])
#end
ORDER BY 1

#elseif (${methodname} == 'searchKAMerComboList')

/* GAMer List를  가져 온다 */
  SELECT DISTINCT
         V.KEY_ACCT_MGR_USR_ID AS CD,
         V.KEY_ACCT_MGR_USR_NM AS NM
    FROM MDM_CUSTOMER V
   WHERE V.KEY_ACCT_FLG = 'Y'
     AND V.DELT_FLG    IN ('N', @[del])
ORDER BY 1

#elseif (${methodname} == 'searchTargetGroupComboList')

/* Targer Group List를  가져 온다 */
  SELECT A.SAQ_TGT_GRP_CD   AS GRP_CD  ,
         A.SAQ_TGT_GRP_DESC AS GRP_DESC
    FROM SAQ_TGT_GRP A
   WHERE A.DELT_FLG IN ('N', @[del])
#if (${ofc} != '')
     AND A.OFC_CD = @[ofc]
#end
ORDER BY A.SAQ_TGT_GRP_CD  ,
         A.SAQ_TGT_GRP_DESC

#elseif (${methodname} == 'searchChildOfficeList')

/* Child Office List를  가져 온다 */
WITH PARAMS AS (
    SELECT @[ofcCd] AS OFC_CD, --이미 OFFICE CONVERSION이 이루어진 OFFICE
           SPC_SCR_OFC_CONV_FNC(@[loginUsrOfcCd], '') AS USR_OFC_CD, --로그인 USER의 ORIGINAL OFFICE
           TO_NUMBER(@[lvl])         AS LVL,
           TO_NUMBER(NVL(@[inc], 0)) AS INC
      FROM DUAL
)
, PARAMS_CNV AS (
    SELECT NVL(P.OFC_CD, P.USR_OFC_CD) AS OFC_CD,
           P.USR_OFC_CD,
           P.LVL       ,
           P.INC
      FROM PARAMS P
)
, PARAMS_OFC AS (
    SELECT DECODE(SIGN(P.LVL - O.OFC_LVL), -1, DECODE(P.LVL, 1, O.N1ST_PRNT_OFC_CD,
                                                             2, O.N2ND_PRNT_OFC_CD,
                                                             3, O.N3RD_PRNT_OFC_CD,
                                                             4, O.N4TH_PRNT_OFC_CD,
                                                             5, O.N5TH_PRNT_OFC_CD,
                                                             6, O.N6TH_PRNT_OFC_CD,
                                                             7, O.N7TH_PRNT_OFC_CD), P.OFC_CD) AS OFC_CD,
           P.USR_OFC_CD,
           P.LVL       ,
           P.INC       ,
           O.OFC_LVL   ,
           LEAST(P.LVL, O.OFC_LVL) AS F_LVL
      FROM SPC_OFC_LVL O,
           PARAMS_CNV  P,
           COA_WK_PRD  W
     WHERE O.OFC_CD = P.OFC_CD
       AND O.OFC_LVL IS NOT NULL
       AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
       AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
)
  SELECT O.OFC_CD AS  CODE,
         O.OFC_ENG_NM ||'~'|| ( SELECT DECODE(O.OFC_CD, DECODE(P.LVL, 2, OI.N2ND_PRNT_OFC_CD,
                                                                      3, OI.N3RD_PRNT_OFC_CD,
                                                                      4, OI.N4TH_PRNT_OFC_CD,
                                                                      5, OI.N5TH_PRNT_OFC_CD,
                                                                      6, OI.N6TH_PRNT_OFC_CD), 1, P.USR_OFC_CD, 1, 0)
                                  FROM SPC_OFC_LVL OI,
                                       COA_WK_PRD  W
                                 WHERE OI.OFC_CD = P.USR_OFC_CD
                                   AND W.COST_YR || W.COST_WK BETWEEN OI.OFC_APLY_FM_YRWK AND OI.OFC_APLY_TO_YRWK
                                   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
                              ) AS TEXT
    FROM SPC_OFC_LVL O,
         PARAMS_OFC  P,
         COA_WK_PRD  W
   WHERE (
              (     DECODE(P.F_LVL, 1, O.N1ST_PRNT_OFC_CD,
                                    2, O.N2ND_PRNT_OFC_CD,
                                    3, O.N3RD_PRNT_OFC_CD,
                                    4, O.N4TH_PRNT_OFC_CD,
                                    5, O.N5TH_PRNT_OFC_CD,
                                    6, O.N6TH_PRNT_OFC_CD,
                                    7, O.N7TH_PRNT_OFC_CD) = P.OFC_CD
                AND O.OFC_LVL = P.LVL
              )
           OR ( O.OFC_CD = P.OFC_CD AND P.INC = '1')
         )
     AND O.DELT_FLG = 'N'
     AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
ORDER BY DECODE(O.OFC_CD, P.OFC_CD, 0, 1),
         O.OFC_CD

#elseif (${methodname} == 'searchChildTeamOfficeList')

/* Child Team Office List를  가져 온다 */
WITH PARAMS AS (
    SELECT @[ofcCd] AS OFC_CD, -- 이미 OFFICE CONVERSION이 이루어진 OFFICE
           SPC_SCR_OFC_CONV_FNC(@[loginUsrOfcCd], '') AS USR_OFC_CD, -- 로그인 USER의 ORIGINAL OFFICE
           TO_NUMBER(@[lvl])         AS LVL,
           TO_NUMBER(NVL(@[inc], 0)) AS INC
      FROM DUAL
)
, PARAMS_CNV AS (
    SELECT NVL(P.OFC_CD, P.USR_OFC_CD) AS OFC_CD,
           P.USR_OFC_CD,
           P.LVL       ,
           P.INC
      FROM PARAMS P
)
, PARAMS_OFC AS (
    SELECT DECODE(SIGN(P.LVL - O.OFC_LVL), -1, DECODE(P.LVL, 1, O.N1ST_PRNT_OFC_CD,
                                                             2, O.N2ND_PRNT_OFC_CD,
                                                             3, O.N3RD_PRNT_OFC_CD,
                                                             4, O.N4TH_PRNT_OFC_CD,
                                                             5, O.N5TH_PRNT_OFC_CD,
                                                             6, O.N6TH_PRNT_OFC_CD,
                                                             7, O.N7TH_PRNT_OFC_CD), P.OFC_CD) AS OFC_CD,
           P.USR_OFC_CD,
           P.LVL       ,
           P.INC       ,
           O.OFC_LVL   ,
           LEAST(P.LVL, O.OFC_LVL) AS F_LVL
      FROM SPC_OFC_LVL O,
           PARAMS_CNV  P,
           COA_WK_PRD  W
     WHERE O.OFC_CD = P.OFC_CD
       AND O.OFC_LVL IS NOT NULL
       AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
       AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
)
  SELECT O.OFC_CD AS CODE,
         (O.OFC_ENG_NM ||'~'|| ( SELECT DECODE(O.OFC_CD, DECODE(P.LVL, 2, OI.N2ND_PRNT_OFC_CD,
                                                                       3, OI.N3RD_PRNT_OFC_CD,
                                                                       4, OI.N4TH_PRNT_OFC_CD,
                                                                       5, OI.N5TH_PRNT_OFC_CD,
                                                                       6, OI.N6TH_PRNT_OFC_CD), 1, P.USR_OFC_CD, 1, 0)
                                   FROM SPC_OFC_LVL OI,
                                        COA_WK_PRD  W
                                  WHERE OI.OFC_CD = P.USR_OFC_CD
                                    AND W.COST_YR || W.COST_WK BETWEEN OI.OFC_APLY_FM_YRWK AND OI.OFC_APLY_TO_YRWK
                                    AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
                               )
         ) AS TEXT
    FROM SPC_OFC_LVL O,
         PARAMS_OFC  P,
         COA_WK_PRD  W
   WHERE (
              (     DECODE(P.F_LVL, 1, O.N1ST_PRNT_OFC_CD,
                                    2, O.N2ND_PRNT_OFC_CD,
                                    3, O.N3RD_PRNT_OFC_CD,
                                    4, O.N4TH_PRNT_OFC_CD,
                                    5, O.N5TH_PRNT_OFC_CD,
                                    6, O.N6TH_PRNT_OFC_CD,
                                    7, O.N7TH_PRNT_OFC_CD) = P.OFC_CD
                AND O.OFC_LVL = P.LVL )
           OR (     O.OFC_CD  = P.OFC_CD
                AND P.INC     = '1'   )
         )
     AND O.DELT_FLG = 'N'
     AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
ORDER BY DECODE(O.OFC_CD, P.OFC_CD, 0, 1),
         O.OFC_CD

#elseif (${methodname} == 'searchSalesRepList')

/* Sales Rep List를  가져 온다 */
WITH PARAMS AS (
    SELECT @[ofcCd]         AS OFC_CD,
           @[lvl]           AS LVL   ,
           @[loginUsrOfcCd] AS USR_ID
    FROM DUAL
)
, OFFICES AS (
    SELECT O.OFC_CD,
           O.OFC_ENG_NM AS OFC_NM,
           O.OFC_LVL    AS LVL   ,
           P.USR_ID
      FROM SPC_OFC_LVL O,
           PARAMS      P,
           COA_WK_PRD  W
     WHERE (
                (P.LVL = 1 AND O.N1ST_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 2 AND O.N2ND_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 3 AND O.N3RD_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 4 AND O.N4TH_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 5 AND (O.N5TH_PRNT_OFC_CD = P.OFC_CD OR (O.N4TH_PRNT_OFC_CD = P.OFC_CD AND O.OFC_LVL = 4)))
             OR (P.LVL = 6 AND O.N6TH_PRNT_OFC_CD = P.OFC_CD)
           )
       AND O.DELT_FLG = 'N'
       AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
       AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
)
  SELECT SR.SREP_CD AS CODE,
         SR.SREP_NM ||'~'|| O.OFC_CD ||'~'|| O.OFC_NM ||'~'|| DECODE(UPPER(O.USR_ID), UPPER(SR.EMPE_CD), 1, 0) AS TEXT
    FROM MDM_SLS_REP SR,
         OFFICES     O
   WHERE SR.OFC_CD      = O.OFC_CD
     AND SR.DELT_FLG = 'N'
ORDER BY O.LVL     ,
         O.OFC_CD  ,
         SR.SREP_CD

#elseif (${methodname} == 'searchTeamSalesRepList')

/* Team Sales Rep List를  가져 온다 */
WITH PARAMS AS (
    SELECT @[ofcCd]         AS OFC_CD,
           @[lvl]           AS LVL   ,
           @[loginUsrOfcCd] AS USR_ID
      FROM DUAL
)
, OFFICES AS (
    SELECT O.OFC_CD,
           O.OFC_ENG_NM AS OFC_NM,
           O.OFC_LVL    AS LVL   ,
           P.USR_ID
      FROM SPC_OFC_LVL O,
           PARAMS      P,
           COA_WK_PRD  W
     WHERE (
                (P.LVL = 1 AND O.N1ST_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 2 AND O.N2ND_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 3 AND O.N3RD_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 4 AND O.N4TH_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 5 AND (O.N5TH_PRNT_OFC_CD = P.OFC_CD OR (O.N4TH_PRNT_OFC_CD = P.OFC_CD AND O.OFC_LVL = 4)))
             OR (P.LVL = 6 AND O.N6TH_PRNT_OFC_CD = P.OFC_CD)
           )
       AND O.DELT_FLG = 'N'
       AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
       AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
)
  SELECT SR.SREP_CD AS CODE,
         SR.SREP_NM || '~' || O.OFC_CD || '~' || O.OFC_NM || '~' || DECODE(UPPER(O.USR_ID), UPPER(SR.EMPE_CD), 1, 0) AS TEXT
    FROM MDM_SLS_REP SR,
         OFFICES     O
   WHERE SR.OFC_CD      = O.OFC_CD
     AND SR.DELT_FLG = 'N'

ORDER BY O.LVL   ,
         O.OFC_CD,
         SR.SREP_CD

#elseif (${methodname} == 'searchPortList')

/* Port List를  가져 온다 */
SELECT A.LOC_CD CODE,
       A.LOC_NM TEXT
  FROM MDM_LOCATION A
 WHERE A.LOC_CD LIKE @[portCd]
   AND NVL(A.PORT_INLND_CD, 'N') = 'Y'

#elseif (${methodname} == 'searchYardList')

/* Yard List를  가져 온다 */
SELECT YD_CD AS CODE,
       YD_NM AS TEXT
  FROM MDM_YARD
 WHERE 1=1
#if (${ofcCd} != '')
   AND OFC_CD = @[ofcCd]
#end
   AND YD_CD LIKE UPPER(@[yardCd])||'%'
   AND NVL(DELT_FLG, 'N') <> 'Y'

#elseif (${methodname} == 'searchOperatorList')

/* Operator List를  가져 온다 */
  SELECT DISTINCT
         OPR_CD AS CODE,
         OPR_CD AS TEXT
    FROM RDR_SUMMARY
ORDER BY OPR_CD

#elseif (${methodname} == 'searchWeekComboList')

/* Week List를  가져 온다 */
  SELECT COST_WK AS CODE,
         COST_WK AS TEXT
    FROM COA_WK_PRD
   WHERE COST_YR = @[year]
ORDER BY COST_WK

#elseif (${methodname} == 'searchCurrWeekList')

/* 현재 Week 를  가져 온다 */
SELECT COST_WK AS CODE,
       COST_WK AS TEXT
  FROM COA_WK_PRD
 WHERE @[date] BETWEEN SLS_FM_DT AND SLS_TO_DT

#end			]]></sql>
			<params>
				<param name="del" type="12" value="" out="N"/>
				<param name="trdCd" type="12" value="" out="N"/>
				<param name="locTrdCd" type="12" value="" out="N"/>
				<param name="locSubTrdCd" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="custCntCd" type="12" value="" out="N"/>
				<param name="custSeq" type="12" value="" out="N"/>
				<param name="ofcCd" type="12" value="" out="N"/>
				<param name="vvdCd" type="12" value="" out="N"/>
				<param name="code" type="12" value="" out="N"/>
				<param name="login_usr_ofc_cd" type="12" value="" out="N"/>
				<param name="rhq" type="12" value="" out="N"/>
				<param name="ofc" type="12" value="" out="N"/>
				<param name="loginUsrOfcCd" type="12" value="" out="N"/>
				<param name="lvl" type="12" value="" out="N"/>
				<param name="inc" type="12" value="" out="N"/>
				<param name="portCd" type="12" value="" out="N"/>
				<param name="yardCd" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="date" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
