/*=========================================================
*Copyright(c) 2011 CyberLogitec
*@FileName : RfaOftAutoRatingDBDAOsearchRfaAsiaEuropeOftAutoratingListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2011.03.18
*@LastModifier : 
*@LastVersion : 1.0
* 2011.03.18 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.bkg.outbounddocumentation.blrating.blrating.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class RfaOftAutoRatingDBDAOsearchRfaAsiaEuropeOftAutoratingListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * searchRfaAsiaEuropeOftAutoratingList
	  * </pre>
	  */
	public RfaOftAutoRatingDBDAOsearchRfaAsiaEuropeOftAutoratingListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rt_aply_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bkg_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cmdt_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.bkg.outbounddocumentation.blrating.blrating.integration").append("\n"); 
		query.append("FileName : RfaOftAutoRatingDBDAOsearchRfaAsiaEuropeOftAutoratingListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH" ).append("\n"); 
		query.append("BK AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("BOOKING 의 기본 정보를 SELECT 한다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${ca_flg} == 'N')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	BK.BKG_NO					," ).append("\n"); 
		query.append("				NULL CORR_NO			," ).append("\n"); 
		query.append("				NVL(@[cmdt_cd], BK.CMDT_CD)	CMDT_CD	," ).append("\n"); 
		query.append("				( SELECT REP_CMDT_CD FROM MDM_COMMODITY WHERE CMDT_CD = NVL(@[cmdt_cd], BK.CMDT_CD) )	REP_CMDT_CD	," ).append("\n"); 
		query.append("				DECODE(BK.PRE_RLY_PORT_CD||BK.PST_RLY_PORT_CD,NULL,'Y','N') DIR_CALL_FLG	," ).append("\n"); 
		query.append("				NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), BR.RT_APLY_DT)		RT_APLY_DT		," ).append("\n"); 
		query.append("				BK.SVC_SCP_CD," ).append("\n"); 
		query.append("				'R' CTRT_TP_CD," ).append("\n"); 
		query.append("				BK.SC_NO," ).append("\n"); 
		query.append("				BK.RFA_NO," ).append("\n"); 
		query.append("				BK.TAA_NO," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN BK.XTER_BKG_RQST_CD = 'EDI' THEN 'E'" ).append("\n"); 
		query.append("				WHEN BK.XTER_BKG_RQST_CD = 'WEB' THEN 'W'" ).append("\n"); 
		query.append("				WHEN BK.XTER_BKG_RQST_CD = 'DSK' THEN 'D'" ).append("\n"); 
		query.append("				ELSE 'E'" ).append("\n"); 
		query.append("				END	ESVC_TP_CD		," ).append("\n"); 
		query.append("				RS.PROP_NO				," ).append("\n"); 
		query.append("				RS.AMDT_SEQ				," ).append("\n"); 
		query.append("--				RS.NOTE_HDR_SEQ		,	/* RFA 는 STANDARD NOTE 가 없다. */" ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN L4.CML_ZN_FLG = 'Y' AND L3.RGN_CD IN ( 'UAG', 'UAN', 'UAS' ) THEN 'CZ'" ).append("\n"); 
		query.append("				ELSE 'NN'" ).append("\n"); 
		query.append("				END CML_ZN_CD			," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) AND BK.POD_CD = BK.DEL_CD AND BK.DE_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'" ).append("\n"); 
		query.append("				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L3.RGN_CD AND A.DEST_RGN_CD = L4.RGN_CD ), 'OT')" ).append("\n"); 
		query.append("				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) AND BK.POL_CD = BK.POR_CD AND BK.RCV_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'" ).append("\n"); 
		query.append("				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L2.RGN_CD AND A.DEST_RGN_CD = L1.RGN_CD ), 'OT')" ).append("\n"); 
		query.append("				END		USA_SVC_MOD_CD	,	-- PO, LO, IP, ML, OT" ).append("\n"); 
		query.append("				BK.POR_CD														," ).append("\n"); 
		query.append("				L1.CNT_CD||L1.STE_CD	POR_STE_CD		," ).append("\n"); 
		query.append("				L1.RGN_CD							POR_RGN_CD		," ).append("\n"); 
		query.append("				L1.CNT_CD							POR_CNT_CD		," ).append("\n"); 
		query.append("				L1.CONTI_CD						POR_CONTI_CD	," ).append("\n"); 
		query.append("				BK.POL_CD														," ).append("\n"); 
		query.append("				L2.CNT_CD||L2.STE_CD	POL_STE_CD		," ).append("\n"); 
		query.append("				L2.RGN_CD							POL_RGN_CD		," ).append("\n"); 
		query.append("				L2.CNT_CD							POL_CNT_CD		," ).append("\n"); 
		query.append("				L2.CONTI_CD						POL_CONTI_CD	," ).append("\n"); 
		query.append("				BK.POD_CD														," ).append("\n"); 
		query.append("				L3.CNT_CD||L3.STE_CD	POD_STE_CD		," ).append("\n"); 
		query.append("				L3.RGN_CD							POD_RGN_CD		," ).append("\n"); 
		query.append("				L3.CNT_CD							POD_CNT_CD		," ).append("\n"); 
		query.append("				L3.CONTI_CD						POD_CONTI_CD	," ).append("\n"); 
		query.append("				BK.DEL_CD														," ).append("\n"); 
		query.append("				L4.CNT_CD||L4.STE_CD	DEL_STE_CD		," ).append("\n"); 
		query.append("				L4.RGN_CD							DEL_RGN_CD		," ).append("\n"); 
		query.append("				L4.CNT_CD							DEL_CNT_CD		," ).append("\n"); 
		query.append("				L4.CONTI_CD						DEL_CONTI_CD	," ).append("\n"); 
		query.append("				BK.PRE_RLY_PORT_CD									," ).append("\n"); 
		query.append("				BK.PST_RLY_PORT_CD									," ).append("\n"); 
		query.append("				BK.POL_NOD_CD												," ).append("\n"); 
		query.append("				BK.POD_NOD_CD												," ).append("\n"); 
		query.append("				BK.ORG_TRNS_MOD_CD									," ).append("\n"); 
		query.append("				BK.DEST_TRNS_MOD_CD									," ).append("\n"); 
		query.append("				BK.AGMT_ACT_CNT_CD									," ).append("\n"); 
		query.append("				BK.AGMT_ACT_CUST_SEQ								," ).append("\n"); 
		query.append("				( SELECT SUM(A.OP_CNTR_QTY) FROM BKG_QTY_DTL A WHERE A.BKG_NO = BK.BKG_NO )	CNTR_QTY	," ).append("\n"); 
		query.append("				DECODE(BB.MEAS_UT_CD, 'CBF', BB.MEAS_QTY	* 0.0283	, BB.MEAS_QTY	)					MEAS_QTY	," ).append("\n"); 
		query.append("				DECODE(BB.WGT_UT_CD	, 'LBS', BB.ACT_WGT		* 0.45359	, BB.ACT_WGT	)					ACT_WGT" ).append("\n"); 
		query.append("FROM		BKG_BOOKING		BK	," ).append("\n"); 
		query.append("				BKG_BL_DOC		BB	," ).append("\n"); 
		query.append("				BKG_RATE			BR	," ).append("\n"); 
		query.append("				MDM_LOCATION	L1	," ).append("\n"); 
		query.append("				MDM_LOCATION	L2	," ).append("\n"); 
		query.append("				MDM_LOCATION	L3	," ).append("\n"); 
		query.append("				MDM_LOCATION	L4	," ).append("\n"); 
		query.append("				PRI_RP_HDR		RH	," ).append("\n"); 
		query.append("				PRI_RP_MN			RM	," ).append("\n"); 
		query.append("				PRI_RP_SCP_MN	RS" ).append("\n"); 
		query.append("WHERE		BB.BKG_NO				= BK.BKG_NO" ).append("\n"); 
		query.append("AND			BR.BKG_NO(+)		= BK.BKG_NO" ).append("\n"); 
		query.append("AND			L1.LOC_CD				= BK.POR_CD" ).append("\n"); 
		query.append("AND			L2.LOC_CD				= BK.POL_CD" ).append("\n"); 
		query.append("AND			L3.LOC_CD				= BK.POD_CD" ).append("\n"); 
		query.append("AND			L4.LOC_CD				= BK.DEL_CD" ).append("\n"); 
		query.append("AND			RH.RFA_NO				= BK.RFA_NO" ).append("\n"); 
		query.append("AND	   	RM.PROP_NO			= RH.PROP_NO" ).append("\n"); 
		query.append("AND     RM.PROP_STS_CD	= 'A'				-- APPROVED RFA" ).append("\n"); 
		query.append("AND			RS.PROP_NO			= RM.PROP_NO" ).append("\n"); 
		query.append("AND			RS.AMDT_SEQ			= RM.AMDT_SEQ" ).append("\n"); 
		query.append("AND			RS.SVC_SCP_CD		= BK.SVC_SCP_CD" ).append("\n"); 
		query.append("AND			NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), ( SELECT RT_APLY_DT FROM BKG_RATE A WHERE A.BKG_NO = BK.BKG_NO ))	BETWEEN RS.EFF_DT AND RS.EXP_DT" ).append("\n"); 
		query.append("AND			BK.BKG_NO				= @[bkg_no]	-- BKG No" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	BK.BKG_NO					," ).append("\n"); 
		query.append("				BK.CORR_NO				," ).append("\n"); 
		query.append("				NVL(@[cmdt_cd], BK.CMDT_CD)	CMDT_CD	," ).append("\n"); 
		query.append("				( SELECT REP_CMDT_CD FROM MDM_COMMODITY WHERE CMDT_CD = NVL(@[cmdt_cd], BK.CMDT_CD) )	REP_CMDT_CD	," ).append("\n"); 
		query.append("				DECODE(BK.PRE_RLY_PORT_CD||BK.PST_RLY_PORT_CD,NULL,'Y','N') DIR_CALL_FLG	," ).append("\n"); 
		query.append("				NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), BR.RT_APLY_DT)		RT_APLY_DT		," ).append("\n"); 
		query.append("				BK.SVC_SCP_CD			," ).append("\n"); 
		query.append("				'R' CTRT_TP_CD		," ).append("\n"); 
		query.append("				BK.SC_NO					," ).append("\n"); 
		query.append("				BK.RFA_NO					," ).append("\n"); 
		query.append("				BK.TAA_NO					," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN BK.XTER_BKG_RQST_CD = 'EDI' THEN 'E'" ).append("\n"); 
		query.append("				WHEN BK.XTER_BKG_RQST_CD = 'WEB' THEN 'W'" ).append("\n"); 
		query.append("				WHEN BK.XTER_BKG_RQST_CD = 'DSK' THEN 'D'" ).append("\n"); 
		query.append("				ELSE 'E'" ).append("\n"); 
		query.append("				END	ESVC_TP_CD		," ).append("\n"); 
		query.append("				RS.PROP_NO				," ).append("\n"); 
		query.append("				RS.AMDT_SEQ				," ).append("\n"); 
		query.append("--				SS.NOTE_HDR_SEQ		," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN L4.CML_ZN_FLG = 'Y' AND L3.RGN_CD IN ( 'UAG', 'UAN', 'UAS' ) THEN 'CZ'" ).append("\n"); 
		query.append("				ELSE 'NN'" ).append("\n"); 
		query.append("				END CML_ZN_CD			," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) AND BK.POD_CD = BK.DEL_CD AND BK.DE_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'" ).append("\n"); 
		query.append("				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) THEN ( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L3.RGN_CD AND A.DEST_RGN_CD = L4.RGN_CD )" ).append("\n"); 
		query.append("				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) AND BK.POL_CD = BK.POR_CD AND BK.RCV_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'" ).append("\n"); 
		query.append("				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) THEN ( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L2.RGN_CD AND A.DEST_RGN_CD = L1.RGN_CD )" ).append("\n"); 
		query.append("				END		USA_SVC_MOD_CD	,	-- PO, LO, IP, ML" ).append("\n"); 
		query.append("				BK.POR_CD														," ).append("\n"); 
		query.append("				L1.CNT_CD||L1.STE_CD	POR_STE_CD		," ).append("\n"); 
		query.append("				L1.RGN_CD							POR_RGN_CD		," ).append("\n"); 
		query.append("				L1.CNT_CD							POR_CNT_CD		," ).append("\n"); 
		query.append("				L1.CONTI_CD						POR_CONTI_CD	," ).append("\n"); 
		query.append("				BK.POL_CD														," ).append("\n"); 
		query.append("				L2.CNT_CD||L2.STE_CD	POL_STE_CD		," ).append("\n"); 
		query.append("				L2.RGN_CD							POL_RGN_CD		," ).append("\n"); 
		query.append("				L2.CNT_CD							POL_CNT_CD		," ).append("\n"); 
		query.append("				L2.CONTI_CD						POL_CONTI_CD	," ).append("\n"); 
		query.append("				BK.POD_CD														," ).append("\n"); 
		query.append("				L3.CNT_CD||L3.STE_CD	POD_STE_CD		," ).append("\n"); 
		query.append("				L3.RGN_CD							POD_RGN_CD		," ).append("\n"); 
		query.append("				L3.CNT_CD							POD_CNT_CD		," ).append("\n"); 
		query.append("				L3.CONTI_CD						POD_CONTI_CD	," ).append("\n"); 
		query.append("				BK.DEL_CD														," ).append("\n"); 
		query.append("				L4.CNT_CD||L4.STE_CD	DEL_STE_CD		," ).append("\n"); 
		query.append("				L4.RGN_CD							DEL_RGN_CD		," ).append("\n"); 
		query.append("				L4.CNT_CD							DEL_CNT_CD		," ).append("\n"); 
		query.append("				L4.CONTI_CD						DEL_CONTI_CD	," ).append("\n"); 
		query.append("				BK.PRE_RLY_PORT_CD									," ).append("\n"); 
		query.append("				BK.PST_RLY_PORT_CD									," ).append("\n"); 
		query.append("				BK.POL_NOD_CD												," ).append("\n"); 
		query.append("				BK.POD_NOD_CD												," ).append("\n"); 
		query.append("				BK.ORG_TRNS_MOD_CD									," ).append("\n"); 
		query.append("				BK.DEST_TRNS_MOD_CD									," ).append("\n"); 
		query.append("				BK.AGMT_ACT_CNT_CD									," ).append("\n"); 
		query.append("				BK.AGMT_ACT_CUST_SEQ								," ).append("\n"); 
		query.append("				( SELECT SUM(A.OP_CNTR_QTY) FROM BKG_QTY_DTL_HIS A WHERE A.BKG_NO = BK.BKG_NO AND A.CORR_NO = BK.CORR_NO )	CNTR_QTY	," ).append("\n"); 
		query.append("				DECODE(BB.MEAS_UT_CD, 'CBF', BB.MEAS_QTY	* 0.0283	, BB.MEAS_QTY	)		MEAS_QTY	," ).append("\n"); 
		query.append("				DECODE(BB.WGT_UT_CD	, 'LBS', BB.ACT_WGT		* 0.45359	, BB.ACT_WGT	)		ACT_WGT" ).append("\n"); 
		query.append("FROM		BKG_BKG_HIS				BK	," ).append("\n"); 
		query.append("				BKG_BL_DOC_HIS		BB	," ).append("\n"); 
		query.append("				BKG_RT_HIS				BR	," ).append("\n"); 
		query.append("				MDM_LOCATION			L1	," ).append("\n"); 
		query.append("				MDM_LOCATION			L2	," ).append("\n"); 
		query.append("				MDM_LOCATION			L3	," ).append("\n"); 
		query.append("				MDM_LOCATION			L4	," ).append("\n"); 
		query.append("				PRI_RP_HDR				RH	," ).append("\n"); 
		query.append("				PRI_RP_MN					RM	," ).append("\n"); 
		query.append("				PRI_RP_SCP_MN			RS" ).append("\n"); 
		query.append("WHERE		BB.BKG_NO				= BK.BKG_NO" ).append("\n"); 
		query.append("AND			BB.CORR_NO			= BK.CORR_NO" ).append("\n"); 
		query.append("AND			BR.BKG_NO(+)		= BK.BKG_NO" ).append("\n"); 
		query.append("AND			BR.CORR_NO(+)		= BK.CORR_NO" ).append("\n"); 
		query.append("AND			L1.LOC_CD				= BK.POR_CD" ).append("\n"); 
		query.append("AND			L2.LOC_CD				= BK.POL_CD" ).append("\n"); 
		query.append("AND			L3.LOC_CD				= BK.POD_CD" ).append("\n"); 
		query.append("AND			L4.LOC_CD				= BK.DEL_CD" ).append("\n"); 
		query.append("AND			RH.RFA_NO				= BK.RFA_NO" ).append("\n"); 
		query.append("AND	   	RM.PROP_NO			= RH.PROP_NO" ).append("\n"); 
		query.append("AND     RM.PROP_STS_CD	= 'A'				-- APPROVED RFA" ).append("\n"); 
		query.append("AND			RS.PROP_NO			= RM.PROP_NO" ).append("\n"); 
		query.append("AND			RS.AMDT_SEQ			= RM.AMDT_SEQ" ).append("\n"); 
		query.append("AND			RS.SVC_SCP_CD		= BK.SVC_SCP_CD" ).append("\n"); 
		query.append("AND			NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), ( SELECT RT_APLY_DT FROM BKG_RT_HIS A WHERE A.BKG_NO = BK.BKG_NO AND A.CORR_NO = BK.CORR_NO ))	BETWEEN RS.EFF_DT AND RS.EXP_DT" ).append("\n"); 
		query.append("AND			BK.BKG_NO				= @[bkg_no]	-- BKG No" ).append("\n"); 
		query.append("AND			BK.CORR_NO			= 'TPM0000001'	-- CORRECTION 중인 DATA 를 나타내는 고정된 상수값" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")	," ).append("\n"); 
		query.append("BQ AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("AUTORATING 을 실행할 단위(ROW) 를 SELECT 한다." ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("IMDG CLASS 을 경우 해당 CNTR TP/SZ 별 MIN 값을 취한다." ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("현재는 요구사항에 없으나, 향후 실제 TP/SZ 가 필요할때를 대비하여 CNTR_TPSZ_CD 를 가지고 있는다." ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("POR, POL, POD, DEL, PRE RELAY, POST RELAY 에 대해서는 ROUTE CONVERSION 을 적용한다." ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("D7/AK 를 D7/DR 운임 적용을 위한 예외 로직도 여기서 적용한다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	BK.BKG_NO									," ).append("\n"); 
		query.append("				BK.CORR_NO								," ).append("\n"); 
		query.append("				ROW_NUMBER() OVER ( PARTITION BY BK.BKG_NO ORDER BY BQ.BKG_BQ_SEQ ) BQ_SEQ	," ).append("\n"); 
		query.append("				BK.CMDT_CD								," ).append("\n"); 
		query.append("				BK.REP_CMDT_CD						," ).append("\n"); 
		query.append("				BK.DIR_CALL_FLG						," ).append("\n"); 
		query.append("				BK.RT_APLY_DT							," ).append("\n"); 
		query.append("				BK.SVC_SCP_CD							," ).append("\n"); 
		query.append("				BK.CTRT_TP_CD							," ).append("\n"); 
		query.append("				BK.SC_NO									," ).append("\n"); 
		query.append("				BK.RFA_NO									," ).append("\n"); 
		query.append("				BK.TAA_NO									," ).append("\n"); 
		query.append("				BK.ESVC_TP_CD							," ).append("\n"); 
		query.append("				BK.PROP_NO								," ).append("\n"); 
		query.append("				BK.AMDT_SEQ								," ).append("\n"); 
		query.append("				BK.CML_ZN_CD							," ).append("\n"); 
		query.append("				BK.USA_SVC_MOD_CD					," ).append("\n"); 
		query.append("				RC.POR_CD									," ).append("\n"); 
		query.append("				RC.POR_STE_CD							," ).append("\n"); 
		query.append("				RC.POR_RGN_CD							," ).append("\n"); 
		query.append("				RC.POR_CNT_CD							," ).append("\n"); 
		query.append("				RC.POR_CONTI_CD						," ).append("\n"); 
		query.append("				RC.POL_CD									," ).append("\n"); 
		query.append("				RC.POL_STE_CD							," ).append("\n"); 
		query.append("				RC.POL_RGN_CD							," ).append("\n"); 
		query.append("				RC.POL_CNT_CD							," ).append("\n"); 
		query.append("				RC.POL_CONTI_CD						," ).append("\n"); 
		query.append("				RC.POD_CD									," ).append("\n"); 
		query.append("				RC.POD_STE_CD							," ).append("\n"); 
		query.append("				RC.POD_RGN_CD							," ).append("\n"); 
		query.append("				RC.POD_CNT_CD							," ).append("\n"); 
		query.append("				RC.POD_CONTI_CD						," ).append("\n"); 
		query.append("				RC.DEL_CD									," ).append("\n"); 
		query.append("				RC.DEL_STE_CD							," ).append("\n"); 
		query.append("				RC.DEL_RGN_CD							," ).append("\n"); 
		query.append("				RC.DEL_CNT_CD							," ).append("\n"); 
		query.append("				RC.DEL_CONTI_CD						," ).append("\n"); 
		query.append("				RC.PRE_RLY_PORT_CD				," ).append("\n"); 
		query.append("				RC.PST_RLY_PORT_CD				," ).append("\n"); 
		query.append("				BK.POL_NOD_CD							," ).append("\n"); 
		query.append("				BK.POD_NOD_CD							," ).append("\n"); 
		query.append("				RC.POR_APPL_FLG						," ).append("\n"); 
		query.append("				RC.POL_APPL_FLG						," ).append("\n"); 
		query.append("				RC.POD_APPL_FLG						," ).append("\n"); 
		query.append("				RC.DEL_APPL_FLG						," ).append("\n"); 
		query.append("				RC.PRE_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("				RC.PST_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("        BK.ORG_TRNS_MOD_CD				," ).append("\n"); 
		query.append("				BK.DEST_TRNS_MOD_CD				," ).append("\n"); 
		query.append("				BK.AGMT_ACT_CNT_CD				," ).append("\n"); 
		query.append("				BK.AGMT_ACT_CUST_SEQ			," ).append("\n"); 
		query.append("				BK.CNTR_QTY								," ).append("\n"); 
		query.append("				BK.MEAS_QTY								," ).append("\n"); 
		query.append("				BK.ACT_WGT								," ).append("\n"); 
		query.append("				BQ.BKG_BQ_SEQ							," ).append("\n"); 
		query.append("				BQ.CNTR_TPSZ_CD						," ).append("\n"); 
		query.append("				BQ.CTRT_CNTR_TPSZ_CD			," ).append("\n"); 
		query.append("				( SELECT A.CNTR_SZ_CD FROM MDM_CNTR_TP_SZ A WHERE A.CNTR_TPSZ_CD = BQ.CTRT_CNTR_TPSZ_CD ) CTRT_CNTR_SZ_CD	," ).append("\n"); 
		query.append("				BQ.RCV_TERM_CD						," ).append("\n"); 
		query.append("				BQ.DE_TERM_CD							," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				/* D7/AK 를 D7/DR 운임 적용을 위한 예외 로직 */" ).append("\n"); 
		query.append("				WHEN BQ.CTRT_CNTR_TPSZ_CD = 'D7' AND BQ.AWK_CGO_FLG = 'Y' THEN 'DR'" ).append("\n"); 
		query.append("				/* AE, EA 운송에 대하여 DG 를 DR 운임을 적용하기 위한 예외 로직 */" ).append("\n"); 
		query.append("				WHEN RC.POR_CONTI_CD = 'A' AND RC.DEL_CONTI_CD = 'E' AND BQ.DCGO_FLG = 'Y' THEN 'DR'" ).append("\n"); 
		query.append("				WHEN RC.POR_CONTI_CD = 'E' AND RC.DEL_CONTI_CD = 'A' AND BQ.DCGO_FLG = 'Y' THEN 'DR'" ).append("\n"); 
		query.append("				WHEN BQ.DRY_CGO_FLG = 'Y' THEN 'DR'" ).append("\n"); 
		query.append("				END																	DR_TP		," ).append("\n"); 
		query.append("				DECODE(BQ.DCGO_FLG		, 'Y', 'DG')	DG_TP		," ).append("\n"); 
		query.append("				DECODE(BQ.RC_FLG			, 'Y', 'RF')	RF_TP		," ).append("\n"); 
		query.append("				DECODE(BQ.AWK_CGO_FLG	, 'Y', 'AK')	AK_TP		," ).append("\n"); 
		query.append("				DECODE(BQ.BB_CGO_FLG	, 'Y', 'BB')	BB_TP		," ).append("\n"); 
		query.append("				BQ.DRY_CGO_FLG						," ).append("\n"); 
		query.append("				BQ.DCGO_FLG								," ).append("\n"); 
		query.append("				BQ.RC_FLG									," ).append("\n"); 
		query.append("				BQ.AWK_CGO_FLG						," ).append("\n"); 
		query.append("				BQ.BB_CGO_FLG							," ).append("\n"); 
		query.append("				BQ.SOC_FLG								," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN BQ.DCGO_FLG 		= 'Y' THEN 'DG'" ).append("\n"); 
		query.append("				WHEN BQ.AWK_CGO_FLG	= 'Y' THEN 'AK'" ).append("\n"); 
		query.append("				WHEN BQ.RC_FLG	 		= 'Y' THEN 'RF'" ).append("\n"); 
		query.append("				WHEN BQ.BB_CGO_FLG	= 'Y' THEN 'BB'" ).append("\n"); 
		query.append("				ELSE 'DR'" ).append("\n"); 
		query.append("				END	PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				BQ.IMDG_CLSS_CD						," ).append("\n"); 
		query.append("				BQ.CTRT_CNTR_QTY" ).append("\n"); 
		query.append("FROM		BK	," ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	QD.BKG_NO									," ).append("\n"); 
		query.append("								ROW_NUMBER() OVER ( PARTITION BY QD.BKG_NO ORDER BY QD.CNTR_TPSZ_CD, QD.CTRT_CNTR_TPSZ_CD, QD.RCV_TERM_CD, QD.DE_TERM_CD, QD.DRY_CGO_FLG, QD.AWK_CGO_FLG, QD.DCGO_FLG, QD.RC_FLG, QD.BB_CGO_FLG, QD.SOC_FLG, QD.IMDG_CLSS_CD )	BKG_BQ_SEQ	," ).append("\n"); 
		query.append("								QD.CNTR_TPSZ_CD						," ).append("\n"); 
		query.append("								QD.CTRT_CNTR_TPSZ_CD			," ).append("\n"); 
		query.append("								QD.RCV_TERM_CD						," ).append("\n"); 
		query.append("								QD.DE_TERM_CD							," ).append("\n"); 
		query.append("								QD.DRY_CGO_FLG						," ).append("\n"); 
		query.append("								QD.AWK_CGO_FLG						," ).append("\n"); 
		query.append("								QD.DCGO_FLG								," ).append("\n"); 
		query.append("								QD.RC_FLG									," ).append("\n"); 
		query.append("								QD.BB_CGO_FLG							," ).append("\n"); 
		query.append("								QD.SOC_FLG								," ).append("\n"); 
		query.append("								QD.IMDG_CLSS_CD						," ).append("\n"); 
		query.append("								QD.CTRT_CNTR_QTY" ).append("\n"); 
		query.append("				FROM		(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${ca_flg} == 'N')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("								SELECT	QD.BKG_NO									," ).append("\n"); 
		query.append("												QD.CNTR_TPSZ_CD						," ).append("\n"); 
		query.append("												QD.CTRT_CNTR_TPSZ_CD			," ).append("\n"); 
		query.append("												QD.RCV_TERM_CD						," ).append("\n"); 
		query.append("												QD.DE_TERM_CD							," ).append("\n"); 
		query.append("												QD.DRY_CGO_FLG						," ).append("\n"); 
		query.append("												QD.AWK_CGO_FLG						," ).append("\n"); 
		query.append("												QD.DCGO_FLG								," ).append("\n"); 
		query.append("												QD.RC_FLG									," ).append("\n"); 
		query.append("												QD.BB_CGO_FLG							," ).append("\n"); 
		query.append("												QD.SOC_FLG								," ).append("\n"); 
		query.append("												DECODE(QD.DCGO_FLG, 'Y', ( SELECT MIN(IMDG_CLSS_CD) FROM BKG_DG_CGO A WHERE A.BKG_NO = QD.BKG_NO AND A.CNTR_TPSZ_CD = QD.CNTR_TPSZ_CD ))	IMDG_CLSS_CD	," ).append("\n"); 
		query.append("												QD.CTRT_CNTR_QTY" ).append("\n"); 
		query.append("								FROM		(" ).append("\n"); 
		query.append("												SELECT	QD.BKG_NO										," ).append("\n"); 
		query.append("																QD.CNTR_TPSZ_CD							," ).append("\n"); 
		query.append("																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	CTRT_CNTR_TPSZ_CD	," ).append("\n"); 
		query.append("																QD.RCV_TERM_CD							," ).append("\n"); 
		query.append("																QD.DE_TERM_CD								," ).append("\n"); 
		query.append("																QD.DRY_CGO_FLG							," ).append("\n"); 
		query.append("																QD.AWK_CGO_FLG							," ).append("\n"); 
		query.append("																QD.DCGO_FLG									," ).append("\n"); 
		query.append("																QD.RC_FLG										," ).append("\n"); 
		query.append("																QD.BB_CGO_FLG								," ).append("\n"); 
		query.append("																QD.SOC_FLG									," ).append("\n"); 
		query.append("																SUM(QD.OP_CNTR_QTY) CTRT_CNTR_QTY" ).append("\n"); 
		query.append("												FROM		BK	," ).append("\n"); 
		query.append("																BKG_QTY_DTL	QD" ).append("\n"); 
		query.append("												WHERE		QD.BKG_NO		= BK.BKG_NO" ).append("\n"); 
		query.append("												GROUP BY" ).append("\n"); 
		query.append("																QD.BKG_NO									," ).append("\n"); 
		query.append("																QD.CNTR_TPSZ_CD						," ).append("\n"); 
		query.append("																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	," ).append("\n"); 
		query.append("																QD.RCV_TERM_CD						," ).append("\n"); 
		query.append("																QD.DE_TERM_CD							," ).append("\n"); 
		query.append("																QD.DRY_CGO_FLG						," ).append("\n"); 
		query.append("																QD.AWK_CGO_FLG						," ).append("\n"); 
		query.append("																QD.DCGO_FLG								," ).append("\n"); 
		query.append("																QD.RC_FLG									," ).append("\n"); 
		query.append("																QD.BB_CGO_FLG							," ).append("\n"); 
		query.append("																QD.SOC_FLG" ).append("\n"); 
		query.append("												)	QD" ).append("\n"); 
		query.append("								)	QD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("								SELECT	QD.BKG_NO									," ).append("\n"); 
		query.append("												QD.CNTR_TPSZ_CD						," ).append("\n"); 
		query.append("												QD.CTRT_CNTR_TPSZ_CD			," ).append("\n"); 
		query.append("												QD.RCV_TERM_CD						," ).append("\n"); 
		query.append("												QD.DE_TERM_CD							," ).append("\n"); 
		query.append("												QD.DRY_CGO_FLG						," ).append("\n"); 
		query.append("												QD.AWK_CGO_FLG						," ).append("\n"); 
		query.append("												QD.DCGO_FLG								," ).append("\n"); 
		query.append("												QD.RC_FLG									," ).append("\n"); 
		query.append("												QD.BB_CGO_FLG							," ).append("\n"); 
		query.append("												QD.SOC_FLG								," ).append("\n"); 
		query.append("												DECODE(QD.DCGO_FLG, 'Y', ( SELECT MIN(IMDG_CLSS_CD) FROM BKG_DG_CGO_HIS A WHERE A.BKG_NO = QD.BKG_NO AND A.CORR_NO = QD.CORR_NO AND A.CNTR_TPSZ_CD = QD.CNTR_TPSZ_CD ))	IMDG_CLSS_CD	," ).append("\n"); 
		query.append("												QD.CTRT_CNTR_QTY" ).append("\n"); 
		query.append("								FROM		(" ).append("\n"); 
		query.append("												SELECT	QD.BKG_NO										," ).append("\n"); 
		query.append("																QD.CORR_NO									," ).append("\n"); 
		query.append("																QD.CNTR_TPSZ_CD							," ).append("\n"); 
		query.append("																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	CTRT_CNTR_TPSZ_CD	," ).append("\n"); 
		query.append("																QD.RCV_TERM_CD							," ).append("\n"); 
		query.append("																QD.DE_TERM_CD								," ).append("\n"); 
		query.append("																QD.DRY_CGO_FLG							," ).append("\n"); 
		query.append("																QD.AWK_CGO_FLG							," ).append("\n"); 
		query.append("																QD.DCGO_FLG									," ).append("\n"); 
		query.append("																QD.RC_FLG										," ).append("\n"); 
		query.append("																QD.BB_CGO_FLG								," ).append("\n"); 
		query.append("																QD.SOC_FLG									," ).append("\n"); 
		query.append("																SUM(QD.OP_CNTR_QTY) CTRT_CNTR_QTY" ).append("\n"); 
		query.append("												FROM		BK	," ).append("\n"); 
		query.append("																BKG_QTY_DTL_HIS	QD" ).append("\n"); 
		query.append("												WHERE		QD.BKG_NO		= BK.BKG_NO" ).append("\n"); 
		query.append("												AND			QD.CORR_NO	= BK.CORR_NO" ).append("\n"); 
		query.append("												GROUP BY" ).append("\n"); 
		query.append("																QD.BKG_NO									," ).append("\n"); 
		query.append("																QD.CORR_NO								," ).append("\n"); 
		query.append("																QD.CNTR_TPSZ_CD						," ).append("\n"); 
		query.append("																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	," ).append("\n"); 
		query.append("																QD.RCV_TERM_CD						," ).append("\n"); 
		query.append("																QD.DE_TERM_CD							," ).append("\n"); 
		query.append("																QD.DRY_CGO_FLG						," ).append("\n"); 
		query.append("																QD.AWK_CGO_FLG						," ).append("\n"); 
		query.append("																QD.DCGO_FLG								," ).append("\n"); 
		query.append("																QD.RC_FLG									," ).append("\n"); 
		query.append("																QD.BB_CGO_FLG							," ).append("\n"); 
		query.append("																QD.SOC_FLG" ).append("\n"); 
		query.append("												)	QD" ).append("\n"); 
		query.append("								)	QD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				)	BQ	," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("이 부분은 SURCHARGE 에는 적용하지 않고, OFT 에만 적용한다. ( S/C, RFA 공통 적용 )" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	A.BKG_NO								," ).append("\n"); 
		query.append("								A.POR_CD								," ).append("\n"); 
		query.append("								A.POR_STE_CD						," ).append("\n"); 
		query.append("								A.POR_RGN_CD						," ).append("\n"); 
		query.append("								A.POR_CNT_CD						," ).append("\n"); 
		query.append("								A.POR_CONTI_CD					," ).append("\n"); 
		query.append("								A.POR_APPL_FLG					," ).append("\n"); 
		query.append("								B.POL_CD								," ).append("\n"); 
		query.append("								B.POL_STE_CD						," ).append("\n"); 
		query.append("								B.POL_RGN_CD						," ).append("\n"); 
		query.append("								B.POL_CNT_CD						," ).append("\n"); 
		query.append("								B.POL_CONTI_CD					," ).append("\n"); 
		query.append("								B.POL_APPL_FLG					," ).append("\n"); 
		query.append("								C.POD_CD								," ).append("\n"); 
		query.append("								C.POD_STE_CD						," ).append("\n"); 
		query.append("								C.POD_RGN_CD						," ).append("\n"); 
		query.append("								C.POD_CNT_CD						," ).append("\n"); 
		query.append("								C.POD_CONTI_CD					," ).append("\n"); 
		query.append("								C.POD_APPL_FLG					," ).append("\n"); 
		query.append("								D.DEL_CD								," ).append("\n"); 
		query.append("								D.DEL_STE_CD						," ).append("\n"); 
		query.append("								D.DEL_RGN_CD						," ).append("\n"); 
		query.append("								D.DEL_CNT_CD						," ).append("\n"); 
		query.append("								D.DEL_CONTI_CD					," ).append("\n"); 
		query.append("								D.DEL_APPL_FLG					," ).append("\n"); 
		query.append("								E.PRE_RLY_PORT_CD				," ).append("\n"); 
		query.append("								E.PRE_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("								F.PST_RLY_PORT_CD				," ).append("\n"); 
		query.append("								F.PST_RLY_PORT_APPL_FLG" ).append("\n"); 
		query.append("				FROM		(" ).append("\n"); 
		query.append("								SELECT	BKG_NO							," ).append("\n"); 
		query.append("												POR_CD							," ).append("\n"); 
		query.append("												POR_STE_CD					," ).append("\n"); 
		query.append("												POR_RGN_CD					," ).append("\n"); 
		query.append("												POR_CNT_CD					," ).append("\n"); 
		query.append("												POR_CONTI_CD				," ).append("\n"); 
		query.append("												'N'	POR_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	BK.BKG_NO						," ).append("\n"); 
		query.append("												RC.CONV_LOC_CD				POR_CD				," ).append("\n"); 
		query.append("												ML.CNT_CD||ML.STE_CD	POR_STE_CD		," ).append("\n"); 
		query.append("												ML.RGN_CD							POR_RGN_CD		," ).append("\n"); 
		query.append("												ML.CNT_CD							POR_CNT_CD		," ).append("\n"); 
		query.append("												ML.CONTI_CD						POR_CONTI_CD	," ).append("\n"); 
		query.append("												RC.POR_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK	," ).append("\n"); 
		query.append("												PRI_ROUT_LOC_CONV	RC	," ).append("\n"); 
		query.append("												MDM_LOCATION	ML" ).append("\n"); 
		query.append("								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND			RC.ORG_LOC_CD		= BK.POR_CD" ).append("\n"); 
		query.append("								AND			RC.POR_APPL_FLG	= 'Y'" ).append("\n"); 
		query.append("								AND			ML.LOC_CD				= RC.CONV_LOC_CD" ).append("\n"); 
		query.append("								)	A	," ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	BKG_NO							," ).append("\n"); 
		query.append("												POL_CD							," ).append("\n"); 
		query.append("												POL_STE_CD					," ).append("\n"); 
		query.append("												POL_RGN_CD					," ).append("\n"); 
		query.append("												POL_CNT_CD					," ).append("\n"); 
		query.append("												POL_CONTI_CD				," ).append("\n"); 
		query.append("												'N'	POL_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	BK.BKG_NO						," ).append("\n"); 
		query.append("												RC.CONV_LOC_CD				POL_CD				," ).append("\n"); 
		query.append("												ML.CNT_CD||ML.STE_CD	POL_STE_CD		," ).append("\n"); 
		query.append("												ML.RGN_CD							POL_RGN_CD		," ).append("\n"); 
		query.append("												ML.CNT_CD							POL_CNT_CD		," ).append("\n"); 
		query.append("												ML.CONTI_CD						POL_CONTI_CD	," ).append("\n"); 
		query.append("												RC.POL_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK	," ).append("\n"); 
		query.append("												PRI_ROUT_LOC_CONV	RC	," ).append("\n"); 
		query.append("												MDM_LOCATION	ML" ).append("\n"); 
		query.append("								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND			RC.ORG_LOC_CD		= BK.POL_CD" ).append("\n"); 
		query.append("								AND			RC.POL_APPL_FLG	= 'Y'" ).append("\n"); 
		query.append("								AND			ML.LOC_CD				= RC.CONV_LOC_CD" ).append("\n"); 
		query.append("								)	B	," ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	BKG_NO							," ).append("\n"); 
		query.append("												POD_CD							," ).append("\n"); 
		query.append("												POD_STE_CD					," ).append("\n"); 
		query.append("												POD_RGN_CD					," ).append("\n"); 
		query.append("												POD_CNT_CD					," ).append("\n"); 
		query.append("												POD_CONTI_CD				," ).append("\n"); 
		query.append("												'N'	POD_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	BK.BKG_NO						," ).append("\n"); 
		query.append("												RC.CONV_LOC_CD				POD_CD				," ).append("\n"); 
		query.append("												ML.CNT_CD||ML.STE_CD	POD_STE_CD		," ).append("\n"); 
		query.append("												ML.RGN_CD							POD_RGN_CD		," ).append("\n"); 
		query.append("												ML.CNT_CD							POD_CNT_CD		," ).append("\n"); 
		query.append("												ML.CONTI_CD						POD_CONTI_CD	," ).append("\n"); 
		query.append("												RC.POD_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK	," ).append("\n"); 
		query.append("												PRI_ROUT_LOC_CONV	RC	," ).append("\n"); 
		query.append("												MDM_LOCATION	ML" ).append("\n"); 
		query.append("								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND			RC.ORG_LOC_CD		= BK.POD_CD" ).append("\n"); 
		query.append("								AND			RC.POD_APPL_FLG	= 'Y'" ).append("\n"); 
		query.append("								AND			ML.LOC_CD				= RC.CONV_LOC_CD" ).append("\n"); 
		query.append("								)	C	," ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	BKG_NO							," ).append("\n"); 
		query.append("												DEL_CD							," ).append("\n"); 
		query.append("												DEL_STE_CD					," ).append("\n"); 
		query.append("												DEL_RGN_CD					," ).append("\n"); 
		query.append("												DEL_CNT_CD					," ).append("\n"); 
		query.append("												DEL_CONTI_CD				," ).append("\n"); 
		query.append("												'N'	DEL_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	BK.BKG_NO						," ).append("\n"); 
		query.append("												RC.CONV_LOC_CD				DEL_CD				," ).append("\n"); 
		query.append("												ML.CNT_CD||ML.STE_CD	DEL_STE_CD		," ).append("\n"); 
		query.append("												ML.RGN_CD							DEL_RGN_CD		," ).append("\n"); 
		query.append("												ML.CNT_CD							DEL_CNT_CD		," ).append("\n"); 
		query.append("												ML.CONTI_CD						DEL_CONTI_CD	," ).append("\n"); 
		query.append("												RC.DEL_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK	," ).append("\n"); 
		query.append("												PRI_ROUT_LOC_CONV	RC	," ).append("\n"); 
		query.append("												MDM_LOCATION	ML" ).append("\n"); 
		query.append("								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND			RC.ORG_LOC_CD		= BK.DEL_CD" ).append("\n"); 
		query.append("								AND			RC.DEL_APPL_FLG	= 'Y'" ).append("\n"); 
		query.append("								AND			ML.LOC_CD				= RC.CONV_LOC_CD" ).append("\n"); 
		query.append("								)	D	," ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	BKG_NO											," ).append("\n"); 
		query.append("												PRE_RLY_PORT_CD							," ).append("\n"); 
		query.append("												'N'	PRE_RLY_PORT_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	BK.BKG_NO										," ).append("\n"); 
		query.append("												CONV_LOC_CD	PRE_RLY_PORT_CD	," ).append("\n"); 
		query.append("												PRE_RLY_PORT_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK	," ).append("\n"); 
		query.append("												PRI_ROUT_LOC_CONV	RC" ).append("\n"); 
		query.append("								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND			RC.ORG_LOC_CD		= BK.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("								AND			RC.PRE_RLY_PORT_APPL_FLG	= 'Y'" ).append("\n"); 
		query.append("								)	E	," ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	BKG_NO											," ).append("\n"); 
		query.append("												PST_RLY_PORT_CD							," ).append("\n"); 
		query.append("												'N'	PST_RLY_PORT_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	BK.BKG_NO										," ).append("\n"); 
		query.append("												CONV_LOC_CD	PST_RLY_PORT_CD	," ).append("\n"); 
		query.append("												PST_RLY_PORT_APPL_FLG" ).append("\n"); 
		query.append("								FROM		BK	," ).append("\n"); 
		query.append("												PRI_ROUT_LOC_CONV	RC" ).append("\n"); 
		query.append("								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND			RC.ORG_LOC_CD		= BK.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("								AND			RC.PST_RLY_PORT_APPL_FLG	= 'Y'" ).append("\n"); 
		query.append("								)	F" ).append("\n"); 
		query.append("				WHERE		B.BKG_NO		= A.BKG_NO" ).append("\n"); 
		query.append("				AND			C.BKG_NO		= A.BKG_NO" ).append("\n"); 
		query.append("				AND			D.BKG_NO		= A.BKG_NO" ).append("\n"); 
		query.append("				AND			E.BKG_NO		= A.BKG_NO" ).append("\n"); 
		query.append("				AND			F.BKG_NO		= A.BKG_NO" ).append("\n"); 
		query.append("				)	RC" ).append("\n"); 
		query.append("WHERE		BQ.BKG_NO		= BK.BKG_NO" ).append("\n"); 
		query.append("AND			RC.BKG_NO		= BK.BKG_NO" ).append("\n"); 
		query.append(")	," ).append("\n"); 
		query.append("GC AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("GROUP COMMODITY 을 SELECT 한다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	BK.BKG_NO							," ).append("\n"); 
		query.append("				G.PRC_GRP_CMDT_CD			," ).append("\n"); 
		query.append("				D.PRC_CMDT_TP_CD			," ).append("\n"); 
		query.append("				D.PRC_CMDT_DEF_CD" ).append("\n"); 
		query.append("FROM		BK	," ).append("\n"); 
		query.append("				PRI_RP_SCP_GRP_CMDT			G	," ).append("\n"); 
		query.append("				PRI_RP_SCP_GRP_CMDT_DTL	D" ).append("\n"); 
		query.append("WHERE		D.PROP_NO					= G.PROP_NO" ).append("\n"); 
		query.append("AND			D.AMDT_SEQ				= G.AMDT_SEQ" ).append("\n"); 
		query.append("AND			D.SVC_SCP_CD			= G.SVC_SCP_CD" ).append("\n"); 
		query.append("AND			D.GRP_CMDT_SEQ		= G.GRP_CMDT_SEQ" ).append("\n"); 
		query.append("AND			G.PROP_NO					= BK.PROP_NO" ).append("\n"); 
		query.append("AND			G.AMDT_SEQ				= BK.AMDT_SEQ" ).append("\n"); 
		query.append("AND			G.SVC_SCP_CD			= BK.SVC_SCP_CD" ).append("\n"); 
		query.append(")	," ).append("\n"); 
		query.append("GL AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("GROUP LOCATION 을 SELECT 한다." ).append("\n"); 
		query.append("NOTE CONVERSION 에서 사용하는 GROUP LOCATION ( 'EAST', 'WEST' ) 는 OFT 에서는 사용하지 않는다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	BK.BKG_NO					," ).append("\n"); 
		query.append("				G.PRC_GRP_LOC_CD	," ).append("\n"); 
		query.append("        D.LOC_CD" ).append("\n"); 
		query.append("FROM 		BK	," ).append("\n"); 
		query.append("				PRI_RP_SCP_GRP_LOC 			G	," ).append("\n"); 
		query.append("		 		PRI_RP_SCP_GRP_LOC_DTL	D" ).append("\n"); 
		query.append("WHERE		D.PROP_NO					= G.PROP_NO" ).append("\n"); 
		query.append("AND			D.AMDT_SEQ				= G.AMDT_SEQ" ).append("\n"); 
		query.append("AND			D.SVC_SCP_CD			= G.SVC_SCP_CD" ).append("\n"); 
		query.append("AND			D.GRP_LOC_SEQ			= G.GRP_LOC_SEQ" ).append("\n"); 
		query.append("AND			G.PROP_NO					= BK.PROP_NO" ).append("\n"); 
		query.append("AND			G.AMDT_SEQ				= BK.AMDT_SEQ" ).append("\n"); 
		query.append("AND			G.SVC_SCP_CD			= BK.SVC_SCP_CD" ).append("\n"); 
		query.append(")	," ).append("\n"); 
		query.append("NC AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("BOOKING 에 해당하는 NOTE CONVERSION 을 SELECT 한다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	BQ.BKG_NO							," ).append("\n"); 
		query.append("				BQ.BQ_SEQ							," ).append("\n"); 
		query.append("				BQ.BKG_BQ_SEQ					," ).append("\n"); 
		query.append("				NC.NOTE_CONV_MAPG_ID	," ).append("\n"); 
		query.append("				NC.NOTE_CONV_SEQ			," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN NC.NOTE_CONV_TP_CD = 'C' THEN CN.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				WHEN NC.NOTE_CONV_TP_CD = 'R' THEN RN.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				ELSE 0" ).append("\n"); 
		query.append("				END CMDT_HDR_SEQ						," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN NC.NOTE_CONV_TP_CD = 'R' THEN RN.ROUT_SEQ" ).append("\n"); 
		query.append("				ELSE 0" ).append("\n"); 
		query.append("				END ROUT_SEQ								," ).append("\n"); 
		query.append("				(	SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = 'S' AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) CONV_TP_PRIO	," ).append("\n"); 
		query.append("					DECODE(BKG_CMDT_TP_CD, 'C', 600, 'G', 400, 'R', 300, 0)" ).append("\n"); 
		query.append("					+ DECODE(BKG_POR_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("					+ DECODE(BKG_POL_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("					+ DECODE(BKG_POD_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("					+ DECODE(BKG_DEL_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("					+ DECODE(BKG_RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '45', 5, '53', 5, 'BL', 4, 'BX', 4, NULL, 4, 6)" ).append("\n"); 
		query.append("					+ DECODE(BKG_PRC_CGO_TP_CD		, NULL, 0, 1)" ).append("\n"); 
		query.append("					+ DECODE(BKG_IMDG_CLSS_CD			, NULL, 0, 1)" ).append("\n"); 
		query.append("					+ DECODE(BKG_SLAN_CD					, NULL, 0, 1)" ).append("\n"); 
		query.append("					+ DECODE(BKG_VSL_CD						, NULL, 0, 1)" ).append("\n"); 
		query.append("					+ DECODE(BKG_SOC_FLG					, NULL, 0, 1)" ).append("\n"); 
		query.append("					+ DECODE(BKG_TS_PORT_DEF_CD		, NULL, 0, 1)" ).append("\n"); 
		query.append("					+ DECODE(BKG_DIR_CALL_FLG			, NULL, 0, 1)" ).append("\n"); 
		query.append("					+ DECODE(BKG_MIN_CGO_WGT			, NULL, 0, 1)" ).append("\n"); 
		query.append("					+ DECODE(BKG_MAX_CGO_WGT			, NULL, 0, 1)" ).append("\n"); 
		query.append("					+ DECODE(BKG_HNGR_BAR_TP_CD		, NULL, 0, 1)	MTCH_PRIO	,	/* MATCHING PRIORITY */" ).append("\n"); 
		query.append("				NC.NOTE_CONV_TP_CD          ," ).append("\n"); 
		query.append("				NC.CHG_RULE_TP_CD           ," ).append("\n"); 
		query.append("				NC.NOTE_CONV_CHG_CD         ," ).append("\n"); 
		query.append("				NC.NOTE_CONV_RULE_CD        ," ).append("\n"); 
		query.append("				NC.RT_APPL_TP_CD            ," ).append("\n"); 
		query.append("				NC.RT_OP_CD                 ," ).append("\n"); 
		query.append("				NC.CURR_CD                  ," ).append("\n"); 
		query.append("				NC.FRT_RT_AMT               ," ).append("\n"); 
		query.append("				NC.PAY_TERM_CD              ," ).append("\n"); 
		query.append("				NC.BKG_RAT_UT_CD						," ).append("\n"); 
		query.append("				NC.BKG_PRC_CGO_TP_CD				," ).append("\n"); 
		query.append("				NC.BKG_IMDG_CLSS_CD" ).append("\n"); 
		query.append("FROM		BQ														," ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	NC.*" ).append("\n"); 
		query.append("				FROM		BK										," ).append("\n"); 
		query.append("								PRI_RFA_NOTE_CONV	NC" ).append("\n"); 
		query.append("				WHERE		NC.PROP_NO		= BK.PROP_NO" ).append("\n"); 
		query.append("				AND			NC.AMDT_SEQ		= BK.AMDT_SEQ" ).append("\n"); 
		query.append("				AND			NC.SVC_SCP_CD	= BK.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND			BK.RT_APLY_DT BETWEEN NC.EFF_DT AND NC.EXP_DT + 0.99999		/* 0.99999 는 23시 59분 59초를 의미 */" ).append("\n"); 
		query.append("				)	NC													," ).append("\n"); 
		query.append("				PRI_RP_SCP_RT_CNOTE				CN	," ).append("\n"); 
		query.append("				PRI_RP_SCP_RT_CMDT_RNOTE	RN" ).append("\n"); 
		query.append("WHERE		CN.NOTE_CONV_MAPG_ID(+) = NC.NOTE_CONV_MAPG_ID" ).append("\n"); 
		query.append("AND			RN.NOTE_CONV_MAPG_ID(+) = NC.NOTE_CONV_MAPG_ID" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("NOT RULE CODE 는 SURCHARGE 에서만 사용된다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			NC.CHG_RULE_TP_CD			= 'R'" ).append("\n"); 
		query.append("AND			NC.NOTE_CONV_RULE_CD	<> 'NOT'							/* RULE CODE 'NOT' 은 SURCHARGE 에서만 사용 됨 */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< RATING UNIT >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("								NC.BKG_RAT_UT_CD	IS NULL" ).append("\n"); 
		query.append("						OR	NC.BKG_RAT_UT_CD	= BQ.CTRT_CNTR_TPSZ_CD" ).append("\n"); 
		query.append("						OR	NC.BKG_RAT_UT_CD	IN ( 'BX', 'BL' )" ).append("\n"); 
		query.append("        		OR" ).append("\n"); 
		query.append(" 		    		(" ).append("\n"); 
		query.append("     						NC.BKG_RAT_UT_CD	IN ( '20', '40', 'HC', '45', '53' )" ).append("\n"); 
		query.append("   					AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = NC.BKG_RAT_UT_CD )	= BQ.CTRT_CNTR_SZ_CD" ).append("\n"); 
		query.append("   					)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< CARGO TYPE >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.BKG_PRC_CGO_TP_CD	IS NULL" ).append("\n"); 
		query.append("				OR	NC.BKG_PRC_CGO_TP_CD	IN ( BQ.DR_TP, BQ.DG_TP, BQ.RF_TP, BQ.AK_TP, BQ.BB_TP )" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< IMDG CLASS >" ).append("\n"); 
		query.append("NOTE CONV 의 IMDG CLSS CD 가 BKG 의 IMDG_CLSS_CD 의 일부부이라도 적용가능하다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.BKG_IMDG_CLSS_CD	IS NULL" ).append("\n"); 
		query.append("				OR	BQ.IMDG_CLSS_CD			LIKE NC.BKG_IMDG_CLSS_CD||'%'" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< COMMODITY >" ).append("\n"); 
		query.append("GROUP 은 사용하지 않는다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.BKG_CMDT_DEF_CD IS NULL" ).append("\n"); 
		query.append("				OR	NC.BKG_CMDT_DEF_CD = DECODE(NC.BKG_CMDT_TP_CD, 'C', BQ.CMDT_CD, 'R', BQ.REP_CMDT_CD)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ROUTE >" ).append("\n"); 
		query.append("STANDARD NOTE 의 경우는 GROUP 을 사용하지 않으므로," ).append("\n"); 
		query.append("STANDARD NOTE 를 위한 특별한 고려가 필요하지 않음." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("/* POR */" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.BKG_POR_DEF_CD IS NULL" ).append("\n"); 
		query.append("				OR	NC.BKG_POR_DEF_CD = DECODE(NC.BKG_POR_TP_CD, 'L', BQ.POR_CD, 'S', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								NC.BKG_POR_TP_CD	= 'G'" ).append("\n"); 
		query.append("						AND EXISTS	(" ).append("\n"); 
		query.append("												SELECT	'X'" ).append("\n"); 
		query.append("												FROM 		GL" ).append("\n"); 
		query.append("												WHERE		GL.PRC_GRP_LOC_CD	=	NC.BKG_POR_DEF_CD" ).append("\n"); 
		query.append("												AND			GL.LOC_CD					= BQ.POR_CD" ).append("\n"); 
		query.append("												)" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("/* POL */" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.BKG_POL_DEF_CD IS NULL" ).append("\n"); 
		query.append("				OR	NC.BKG_POL_DEF_CD = DECODE(NC.BKG_POL_TP_CD, 'L', BQ.POL_CD, 'S', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								NC.BKG_POL_TP_CD	= 'G'" ).append("\n"); 
		query.append("						AND EXISTS	(" ).append("\n"); 
		query.append("												SELECT	'X'" ).append("\n"); 
		query.append("												FROM 		GL" ).append("\n"); 
		query.append("												WHERE		GL.PRC_GRP_LOC_CD	=	NC.BKG_POL_DEF_CD" ).append("\n"); 
		query.append("												AND			GL.LOC_CD					= BQ.POL_CD" ).append("\n"); 
		query.append("												)" ).append("\n"); 
		query.append("							)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("/* POD */" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.BKG_POD_DEF_CD IS NULL" ).append("\n"); 
		query.append("				OR	NC.BKG_POD_DEF_CD = DECODE(NC.BKG_POD_TP_CD, 'L', BQ.POD_CD, 'S', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								NC.BKG_POD_TP_CD	= 'G'" ).append("\n"); 
		query.append("						AND EXISTS	(" ).append("\n"); 
		query.append("												SELECT	'X'" ).append("\n"); 
		query.append("												FROM 		GL" ).append("\n"); 
		query.append("												WHERE		GL.PRC_GRP_LOC_CD	=	NC.BKG_POD_DEF_CD" ).append("\n"); 
		query.append("												AND			GL.LOC_CD					= BQ.POD_CD" ).append("\n"); 
		query.append("												)" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("/* DEL */" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.BKG_DEL_DEF_CD IS NULL" ).append("\n"); 
		query.append("				OR	NC.BKG_DEL_DEF_CD = DECODE(NC.BKG_DEL_TP_CD, 'L', BQ.DEL_CD, 'S', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								NC.BKG_DEL_TP_CD	= 'G'" ).append("\n"); 
		query.append("						AND EXISTS	(" ).append("\n"); 
		query.append("												SELECT	'X'" ).append("\n"); 
		query.append("												FROM 		GL" ).append("\n"); 
		query.append("												WHERE		GL.PRC_GRP_LOC_CD	=	NC.BKG_DEL_DEF_CD" ).append("\n"); 
		query.append("												AND			GL.LOC_CD					= BQ.DEL_CD" ).append("\n"); 
		query.append("												)" ).append("\n"); 
		query.append("							)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< LANE & VVD >" ).append("\n"); 
		query.append("TRUNK, T/S 구분없이 LANE 이나 VVD 가 존재하는지 여부로 판단한다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("AND			EXISTS	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${ca_flg} == 'N')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("								SELECT	'X'" ).append("\n"); 
		query.append("								FROM		BKG_VVD	BV" ).append("\n"); 
		query.append("								WHERE		BV.BKG_NO			=	BQ.BKG_NO" ).append("\n"); 
		query.append("								AND			BV.SLAN_CD		= NVL(NC.BKG_SLAN_CD, BV.SLAN_CD)" ).append("\n"); 
		query.append("								AND			BV.VSL_CD			= NVL(NC.BKG_VSL_CD, BV.VSL_CD)" ).append("\n"); 
		query.append("								AND			BV.SKD_VOY_NO	= NVL(NC.BKG_SKD_VOY_NO, BV.SKD_VOY_NO)" ).append("\n"); 
		query.append("								AND			BV.SKD_DIR_CD	= NVL(NC.BKG_SKD_DIR_CD, BV.SKD_DIR_CD)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("								SELECT	'X'" ).append("\n"); 
		query.append("								FROM		BKG_VVD_HIS	BV" ).append("\n"); 
		query.append("								WHERE		BV.BKG_NO			=	BQ.BKG_NO" ).append("\n"); 
		query.append("								AND			BV.CORR_NO		= BQ.CORR_NO" ).append("\n"); 
		query.append("								AND			BV.SLAN_CD		= NVL(NC.BKG_SLAN_CD, BV.SLAN_CD)" ).append("\n"); 
		query.append("								AND			BV.VSL_CD			= NVL(NC.BKG_VSL_CD, BV.VSL_CD)" ).append("\n"); 
		query.append("								AND			BV.SKD_VOY_NO	= NVL(NC.BKG_SKD_VOY_NO, BV.SKD_VOY_NO)" ).append("\n"); 
		query.append("								AND			BV.SKD_DIR_CD	= NVL(NC.BKG_SKD_DIR_CD, BV.SKD_DIR_CD)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("/* SOC */" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.BKG_SOC_FLG	IS NULL" ).append("\n"); 
		query.append("				OR	NC.BKG_SOC_FLG	= BQ.SOC_FLG" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< T/S PORT >" ).append("\n"); 
		query.append("T/S 가 발생하는 PORT 를 대상으로 한다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.BKG_TS_PORT_DEF_CD IS NULL" ).append("\n"); 
		query.append("				OR	EXISTS	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${ca_flg} == 'N')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("										SELECT	'X'" ).append("\n"); 
		query.append("										FROM		BKG_VVD				V1	," ).append("\n"); 
		query.append("														BKG_VVD 			V2	," ).append("\n"); 
		query.append("														MDM_LOCATION	LO" ).append("\n"); 
		query.append("										WHERE		V2.BKG_NO			=	V1.BKG_NO" ).append("\n"); 
		query.append("										AND			V2.POL_CD			= V1.POD_CD" ).append("\n"); 
		query.append("										AND			LO.LOC_CD			= V1.POD_CD" ).append("\n"); 
		query.append("										AND			V1.BKG_NO			=	BQ.BKG_NO" ).append("\n"); 
		query.append("										AND			DECODE(NC.BKG_TS_PORT_TP_CD, 'L', LO.LOC_CD, 'S', LO.CNT_CD||LO.STE_CD, 'R', LO.RGN_CD, 'C', LO.CNT_CD) = NC.BKG_TS_PORT_DEF_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("										SELECT	'X'" ).append("\n"); 
		query.append("										FROM		BKG_VVD_HIS		V1	," ).append("\n"); 
		query.append("														BKG_VVD_HIS 	V2	," ).append("\n"); 
		query.append("														MDM_LOCATION	LO" ).append("\n"); 
		query.append("										WHERE		V2.BKG_NO			=	V1.BKG_NO" ).append("\n"); 
		query.append("										AND			V2.CORR_NO		= V1.CORR_NO" ).append("\n"); 
		query.append("										AND			V2.POL_CD			= V1.POD_CD" ).append("\n"); 
		query.append("										AND			LO.LOC_CD			= V1.POD_CD" ).append("\n"); 
		query.append("										AND			V1.BKG_NO			=	BQ.BKG_NO" ).append("\n"); 
		query.append("										AND			V1.CORR_NO		= BQ.CORR_NO" ).append("\n"); 
		query.append("										AND			DECODE(NC.BKG_TS_PORT_TP_CD, 'L', LO.LOC_CD, 'S', LO.CNT_CD||LO.STE_CD, 'R', LO.RGN_CD, 'C', LO.CNT_CD) = NC.BKG_TS_PORT_DEF_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("/* DIR CALL */" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.BKG_DIR_CALL_FLG	IS NULL" ).append("\n"); 
		query.append("				OR	NC.BKG_DIR_CALL_FLG	= BQ.DIR_CALL_FLG" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("/* B/L TP ( SURCHARGE ONLY ) */" ).append("\n"); 
		query.append(")	," ).append("\n"); 
		query.append("NC_P AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("적용될 CONVERSION 이 같은 NOTE_CONV_TP_CD 에서 하나의 NOTE_CONV_RULE_CD 가 되도록 우선순위가 낮은 것을 제거한다." ).append("\n"); 
		query.append("우선순위가 똑같은 경우에는 NOTE_CONV_MAPG_ID||LPAD(NOTE_CONV_SEQ, 6, '0') 가 적은 것을 우선한다." ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("이 부분은 계약과 BKG 를 직접 비교하지 않고, NOTE CONV 와만 비교하도록 하기 위함이다." ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("D7/AK 를 D7/DR 운임 적용을 위한 예외 로직도 여기서 적용한다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	NC.BKG_NO										," ).append("\n"); 
		query.append("				NC.BQ_SEQ										," ).append("\n"); 
		query.append("				NC.NOTE_CONV_MAPG_ID				," ).append("\n"); 
		query.append("				NC.NOTE_CONV_SEQ						," ).append("\n"); 
		query.append("				10 + ROW_NUMBER() OVER ( PARTITION BY NC.BQ_SEQ ORDER BY NC.NOTE_CONV_RULE_CD, NC.CONV_TP_PRIO DESC, NVL(NC.CMDT_HDR_SEQ, 0), NVL(NC.ROUT_SEQ, 0) )	NC_SEQ	,	/* BKG 과 겹치지 않도록 임의의 상수 10 을 더한다. */" ).append("\n"); 
		query.append("				'C'	BKG_CONV_TP_CD					," ).append("\n"); 
		query.append("				NC.CMDT_HDR_SEQ							," ).append("\n"); 
		query.append("				NC.ROUT_SEQ									," ).append("\n"); 
		query.append("				NC.CONV_TP_PRIO							," ).append("\n"); 
		query.append("				NC.NOTE_CONV_TP_CD					," ).append("\n"); 
		query.append("				NC.NOTE_CONV_CHG_CD					," ).append("\n"); 
		query.append("				NC.NOTE_CONV_RULE_CD				," ).append("\n"); 
		query.append("				NC.BKG_RAT_UT_CD						," ).append("\n"); 
		query.append("				NC.BKG_PRC_CGO_TP_CD				," ).append("\n"); 
		query.append("				NC.BKG_IMDG_CLSS_CD					," ).append("\n"); 
		query.append("				NC.RT_APPL_TP_CD						," ).append("\n"); 
		query.append("				NC.RT_OP_CD									," ).append("\n"); 
		query.append("				NC.CURR_CD									," ).append("\n"); 
		query.append("				NC.FRT_RT_AMT" ).append("\n"); 
		query.append("FROM		(" ).append("\n"); 
		query.append("				SELECT	NC.*	," ).append("\n"); 
		query.append("								ROW_NUMBER() OVER ( PARTITION BY NC.BQ_SEQ, NC.NOTE_CONV_RULE_CD, NC.NOTE_CONV_TP_CD, NC.CMDT_HDR_SEQ, NC.ROUT_SEQ" ).append("\n"); 
		query.append("																		ORDER BY NC.MTCH_PRIO DESC, NC.NOTE_CONV_MAPG_ID, NC.NOTE_CONV_SEQ ) ROW_NUMBER" ).append("\n"); 
		query.append("				FROM		NC" ).append("\n"); 
		query.append("				) NC" ).append("\n"); 
		query.append("WHERE		NC.ROW_NUMBER = 1" ).append("\n"); 
		query.append(")	," ).append("\n"); 
		query.append("APP_N AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("APP RULE CODE 에 존재하지만, BOOKING 과 MATCHING 되지 않은 것을 SELECT 한다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	BQ.BKG_NO		," ).append("\n"); 
		query.append("				BQ.BQ_SEQ		," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN NC.NOTE_CONV_TP_CD = 'C' THEN CN.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				WHEN NC.NOTE_CONV_TP_CD = 'R' THEN RN.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				ELSE 0" ).append("\n"); 
		query.append("				END CMDT_HDR_SEQ						," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN NC.NOTE_CONV_TP_CD = 'R' THEN RN.ROUT_SEQ" ).append("\n"); 
		query.append("				ELSE 0" ).append("\n"); 
		query.append("				END ROUT_SEQ								," ).append("\n"); 
		query.append("				(	SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = 'S' AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) CONV_TP_PRIO" ).append("\n"); 
		query.append("FROM		BQ														," ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	NC.*" ).append("\n"); 
		query.append("				FROM		BK										," ).append("\n"); 
		query.append("								PRI_SC_NOTE_CONV	NC" ).append("\n"); 
		query.append("				WHERE		NC.PROP_NO		= BK.PROP_NO" ).append("\n"); 
		query.append("				AND			NC.AMDT_SEQ		= BK.AMDT_SEQ" ).append("\n"); 
		query.append("				AND			NC.SVC_SCP_CD	= BK.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND			BK.RT_APLY_DT BETWEEN NC.EFF_DT AND NC.EXP_DT + 0.99999		/* 0.99999 는 23시 59분 59초를 의미 */" ).append("\n"); 
		query.append("				)	NC													," ).append("\n"); 
		query.append("				PRI_RP_SCP_RT_CNOTE				CN	," ).append("\n"); 
		query.append("				PRI_RP_SCP_RT_CMDT_RNOTE	RN" ).append("\n"); 
		query.append("WHERE		CN.NOTE_CONV_MAPG_ID(+) = NC.NOTE_CONV_MAPG_ID" ).append("\n"); 
		query.append("AND			RN.NOTE_CONV_MAPG_ID(+) = NC.NOTE_CONV_MAPG_ID" ).append("\n"); 
		query.append("AND			NC.CHG_RULE_TP_CD			= 'R'" ).append("\n"); 
		query.append("AND			NC.NOTE_CONV_RULE_CD	= 'APP'								/* APP 만 SELECT */" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						NC.RULE_APPL_CHG_TP_CD	IS NULL" ).append("\n"); 
		query.append("				OR	NC.RULE_APPL_CHG_TP_CD	= 'O'						/* OCEAN FREIGHT 를 대상으로 함 */" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("/* APPLICATION TYPE */" ).append("\n"); 
		query.append("AND			NC.RT_APPL_TP_CD = 'S'	-- Subject" ).append("\n"); 
		query.append("AND			NOT EXISTS	(												/* CHECK CHECK CHECK CHECK CHECK */" ).append("\n"); 
		query.append("										SELECT	'X'" ).append("\n"); 
		query.append("										FROM		NC A" ).append("\n"); 
		query.append("										WHERE		A.BQ_SEQ	= BQ.BQ_SEQ" ).append("\n"); 
		query.append("										AND			A.NOTE_CONV_MAPG_ID	= NC.NOTE_CONV_MAPG_ID" ).append("\n"); 
		query.append("										AND			A.NOTE_CONV_SEQ			= NC.NOTE_CONV_SEQ" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("OA AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	ORIGIN ARB" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT  BQ.BKG_NO								," ).append("\n"); 
		query.append("				BQ.BQ_SEQ								," ).append("\n"); 
		query.append("				OA.ADD_CHG_SEQ					," ).append("\n"); 
		query.append("				OA.ROUT_PNT_LOC_TP_CD		," ).append("\n"); 
		query.append("				OA.ROUT_PNT_LOC_DEF_CD	," ).append("\n"); 
		query.append("				OA.BSE_PORT_TP_CD				," ).append("\n"); 
		query.append("				OA.BSE_PORT_DEF_CD			," ).append("\n"); 
		query.append("				OA.RAT_UT_CD						," ).append("\n"); 
		query.append("				OA.PRC_CGO_TP_CD				," ).append("\n"); 
		query.append("				OA.PRC_TRSP_MOD_CD			," ).append("\n"); 
		query.append("				OA.RCV_DE_TERM_CD				," ).append("\n"); 
		query.append("				OA.MIN_CGO_WGT					," ).append("\n"); 
		query.append("				OA.MAX_CGO_WGT					," ).append("\n"); 
		query.append("				OA.CUST_CNT_CD					," ).append("\n"); 
		query.append("				OA.CUST_SEQ							," ).append("\n"); 
		query.append("				OA.CURR_CD							," ).append("\n"); 
		query.append("				OA.FNL_FRT_RT_AMT				," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				DECODE(OA.RAT_UT_CD, BQ.CTRT_CNTR_TPSZ_CD, 100, 'BX', 80, 60)" ).append("\n"); 
		query.append("				 	- DECODE(OA.RAT_UT_CD, '20', 10, '40', 10, 'HC', 10, '45', 10, '53', 10, 0)" ).append("\n"); 
		query.append("				 	+ DECODE(OA.PRC_CGO_TP_CD, BQ.DR_TP, 2, BQ.DG_TP, 2, BQ.RF_TP, 2, BQ.AK_TP, 2, BQ.BB_TP, 2, 0)" ).append("\n"); 
		query.append("				 	- DECODE(BQ.CTRT_CNTR_TPSZ_CD||BQ.AK_TP||OA.PRC_CGO_TP_CD, 'D7AKDR', 1, 0)	RAT_UT_MTCH_PRIO	," ).append("\n"); 
		query.append("						/* D7/AK 가 D7/DR 과 D7/AK 중에 D7/AK 가 먼저 선택 될 수 있도록 D7/AK 면서 DR 운임적인된 경우 -1 을 해준다. */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN	( OA.ROUT_PNT_LOC_TP_CD, OA.ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("							(" ).append("\n"); 
		query.append("							SELECT  'L', BQ.POR_CD" ).append("\n"); 
		query.append("							FROM		DUAL" ).append("\n"); 
		query.append("							UNION ALL" ).append("\n"); 
		query.append("							SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("							FROM		GL" ).append("\n"); 
		query.append("							WHERE		GL.LOC_CD		= BQ.POR_CD" ).append("\n"); 
		query.append("							)" ).append("\n"); 
		query.append("							THEN 'Y'" ).append("\n"); 
		query.append("				ELSE	'N'" ).append("\n"); 
		query.append("				END	POR_MTCH_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM    BQ  ," ).append("\n"); 
		query.append("        PRI_RP_SCP_TRSP_ADD_CHG   OA" ).append("\n"); 
		query.append("WHERE   OA.PROP_NO                = BQ.PROP_NO" ).append("\n"); 
		query.append("AND     OA.AMDT_SEQ               = BQ.AMDT_SEQ" ).append("\n"); 
		query.append("AND     OA.SVC_SCP_CD             = BQ.SVC_SCP_CD" ).append("\n"); 
		query.append("AND     OA.ADD_CHG_TP_CD          = 'A'" ).append("\n"); 
		query.append("AND     OA.ORG_DEST_TP_CD         = 'O'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	1.	ORIGIN ARB - ACTUAL CUSTOMER" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("						(" ).append("\n"); 
		query.append("		            OA.CUST_CNT_CD  		IS NULL" ).append("\n"); 
		query.append("		        AND BQ.AGMT_ACT_CNT_CD	IS NULL" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("        		OR" ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("	        			OA.CUST_CNT_CD	= BQ.AGMT_ACT_CNT_CD" ).append("\n"); 
		query.append("        		AND	OA.CUST_SEQ			= BQ.AGMT_ACT_CUST_SEQ" ).append("\n"); 
		query.append("        		)" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("         	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	2.	 ORIGIN ARB - ROUTE" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< POR >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( OA.ROUT_PNT_LOC_TP_CD, OA.ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT  'L', BQ.POR_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.POR_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'L', BQ.POL_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				WHERE		( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				AND			GL.LOC_CD		= BQ.POL_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN TRANS MODE >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("            OA.PRC_TRSP_MOD_CD  IS NULL" ).append("\n"); 
		query.append("        OR  OA.PRC_TRSP_MOD_CD  = BQ.ORG_TRNS_MOD_CD" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< BASE PORT ( POL OR PRE RELAY ) >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( OA.BSE_PORT_TP_CD, OA.BSE_PORT_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	'L', BQ.POL_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.POL_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L', BQ.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	3.	ORIGIN ARB - RATING UNIT" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN ARB RATING UNIT >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						OA.RAT_UT_CD	IN ( 'BX', BQ.CTRT_CNTR_TPSZ_CD )" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								OA.RAT_UT_CD  IN ( '20', '40', 'HC', '45', '53' )" ).append("\n"); 
		query.append("            AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = OA.RAT_UT_CD ) = BQ.CTRT_CNTR_SZ_CD" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN ARB CARGO TYPE >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     OA.PRC_CGO_TP_CD  IN ( BQ.DR_TP, BQ.DG_TP, BQ.RF_TP, BQ.AK_TP, BQ.BB_TP )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("DA AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	DEST ARB" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT  BQ.BKG_NO								," ).append("\n"); 
		query.append("				BQ.BQ_SEQ 							," ).append("\n"); 
		query.append("				DA.ADD_CHG_SEQ					," ).append("\n"); 
		query.append("				DA.ROUT_PNT_LOC_TP_CD		," ).append("\n"); 
		query.append("				DA.ROUT_PNT_LOC_DEF_CD	," ).append("\n"); 
		query.append("				DA.BSE_PORT_TP_CD				," ).append("\n"); 
		query.append("				DA.BSE_PORT_DEF_CD			," ).append("\n"); 
		query.append("				DA.RAT_UT_CD						," ).append("\n"); 
		query.append("				DA.PRC_CGO_TP_CD				," ).append("\n"); 
		query.append("				DA.PRC_TRSP_MOD_CD			," ).append("\n"); 
		query.append("				DA.RCV_DE_TERM_CD				," ).append("\n"); 
		query.append("				DA.MIN_CGO_WGT					," ).append("\n"); 
		query.append("				DA.MAX_CGO_WGT					," ).append("\n"); 
		query.append("				DA.CUST_CNT_CD					," ).append("\n"); 
		query.append("				DA.CUST_SEQ							," ).append("\n"); 
		query.append("				DA.CURR_CD							," ).append("\n"); 
		query.append("				DA.FNL_FRT_RT_AMT				," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				DECODE(DA.RAT_UT_CD, BQ.CTRT_CNTR_TPSZ_CD, 100, 'BX', 80, 60)" ).append("\n"); 
		query.append("				 	- DECODE(DA.RAT_UT_CD, '20', 10, '40', 10, 'HC', 10, '45', 10, '53', 10, 0)" ).append("\n"); 
		query.append("				 	+ DECODE(DA.PRC_CGO_TP_CD, BQ.DR_TP, 2, BQ.DG_TP, 2, BQ.RF_TP, 2, BQ.AK_TP, 2, BQ.BB_TP, 2, 0)" ).append("\n"); 
		query.append("				 	- DECODE(BQ.CTRT_CNTR_TPSZ_CD||BQ.AK_TP||DA.PRC_CGO_TP_CD, 'D7AKDR', 1, 0)	RAT_UT_MTCH_PRIO	," ).append("\n"); 
		query.append("						/* D7/AK 가 D7/DR 과 D7/AK 중에 D7/AK 가 먼저 선택 될 수 있도록 D7/AK 면서 DR 운임적인된 경우 -1 을 해준다. */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN	( DA.ROUT_PNT_LOC_TP_CD, DA.ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("							(" ).append("\n"); 
		query.append("							SELECT  'L', BQ.DEL_CD" ).append("\n"); 
		query.append("							FROM		DUAL" ).append("\n"); 
		query.append("							UNION ALL" ).append("\n"); 
		query.append("							SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("							FROM		GL" ).append("\n"); 
		query.append("							WHERE		GL.LOC_CD		= BQ.DEL_CD" ).append("\n"); 
		query.append("							)" ).append("\n"); 
		query.append("							THEN 'Y'" ).append("\n"); 
		query.append("				ELSE	'N'" ).append("\n"); 
		query.append("				END	DEL_MTCH_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM    BQ  ," ).append("\n"); 
		query.append("        PRI_RP_SCP_TRSP_ADD_CHG   DA" ).append("\n"); 
		query.append("WHERE   DA.PROP_NO                = BQ.PROP_NO" ).append("\n"); 
		query.append("AND     DA.AMDT_SEQ               = BQ.AMDT_SEQ" ).append("\n"); 
		query.append("AND     DA.SVC_SCP_CD             = BQ.SVC_SCP_CD" ).append("\n"); 
		query.append("AND     DA.ADD_CHG_TP_CD          = 'A'" ).append("\n"); 
		query.append("AND     DA.ORG_DEST_TP_CD         = 'D'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	1.	DEST ARB - ACTUAL CUSTOMER" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("						(" ).append("\n"); 
		query.append("		            DA.CUST_CNT_CD  		IS NULL" ).append("\n"); 
		query.append("		        AND BQ.AGMT_ACT_CNT_CD	IS NULL" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("        		OR" ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("	        			DA.CUST_CNT_CD	= BQ.AGMT_ACT_CNT_CD" ).append("\n"); 
		query.append("        		AND	DA.CUST_SEQ			= BQ.AGMT_ACT_CUST_SEQ" ).append("\n"); 
		query.append("        		)" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	2.	 DEST ARB - ROUTE" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DEST VIA PORT ( POD OR POST RELAY ) >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("                DA.BSE_PORT_DEF_CD  IS NULL" ).append("\n"); 
		query.append("            OR	( DA.BSE_PORT_TP_CD, DA.BSE_PORT_DEF_CD ) IN" ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	'L', BQ.POD_CD" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("								FROM		GL" ).append("\n"); 
		query.append("								WHERE		GL.LOC_CD		= BQ.POD_CD" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'L', BQ.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("								FROM		GL" ).append("\n"); 
		query.append("								WHERE		GL.LOC_CD		= BQ.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DEL >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( DA.ROUT_PNT_LOC_TP_CD, DA.ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT  'L', BQ.DEL_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.DEL_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'L', BQ.POD_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				WHERE		( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				AND			GL.LOC_CD		= BQ.POD_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DEST TRANS MODE >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("            DA.PRC_TRSP_MOD_CD  IS NULL" ).append("\n"); 
		query.append("        OR  DA.PRC_TRSP_MOD_CD  = BQ.DEST_TRNS_MOD_CD" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	3.	DEST ARB - RATING UNIT" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DEST ARB RATING UNIT >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						DA.RAT_UT_CD	IN ( 'BX', BQ.CTRT_CNTR_TPSZ_CD )" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								DA.RAT_UT_CD  IN ( '20', '40', 'HC', '45', '53' )" ).append("\n"); 
		query.append("            AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = DA.RAT_UT_CD ) = BQ.CTRT_CNTR_SZ_CD" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DEST ARB CARGO TYPE >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     DA.PRC_CGO_TP_CD  IN ( BQ.DR_TP, BQ.DG_TP, BQ.RF_TP, BQ.AK_TP, BQ.BB_TP )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")	," ).append("\n"); 
		query.append("RT AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	RATE" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	*" ).append("\n"); 
		query.append("FROM		(" ).append("\n"); 
		query.append("				SELECT	BQ.BKG_NO	," ).append("\n"); 
		query.append("								BQ.BQ_SEQ ," ).append("\n"); 
		query.append("								CM.PRC_CMDT_TP_CD				CM_PRC_CMDT_TP_CD				," ).append("\n"); 
		query.append("								CM.PRC_CMDT_DEF_CD			CM_PRC_CMDT_DEF_CD			," ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("								OV.ROUT_VIA_PORT_TP_CD	OV_ROUT_VIA_PORT_TP_CD	," ).append("\n"); 
		query.append("								OV.ROUT_VIA_PORT_DEF_CD	OV_ROUT_VIA_PORT_DEF_CD	," ).append("\n"); 
		query.append("								DV.ROUT_VIA_PORT_TP_CD	DV_ROUT_VIA_PORT_TP_CD	," ).append("\n"); 
		query.append("								DV.ROUT_VIA_PORT_DEF_CD	DV_ROUT_VIA_PORT_DEF_CD	," ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("								OP.ROUT_PNT_LOC_TP_CD		OP_ROUT_PNT_LOC_TP_CD 	," ).append("\n"); 
		query.append("								OP.ROUT_PNT_LOC_DEF_CD	OP_ROUT_PNT_LOC_DEF_CD	," ).append("\n"); 
		query.append("								OP.RCV_DE_TERM_CD				OP_RCV_DE_TERM_CD				," ).append("\n"); 
		query.append("								OP.PRC_TRSP_MOD_CD			OP_PRC_TRSP_MOD_CD			," ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("								DP.ROUT_PNT_LOC_TP_CD		DP_ROUT_PNT_LOC_TP_CD 	," ).append("\n"); 
		query.append("								DP.ROUT_PNT_LOC_DEF_CD	DP_ROUT_PNT_LOC_DEF_CD	," ).append("\n"); 
		query.append("								DP.RCV_DE_TERM_CD				DP_RCV_DE_TERM_CD				," ).append("\n"); 
		query.append("								DP.PRC_TRSP_MOD_CD			DP_PRC_TRSP_MOD_CD			," ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("								RT.CMDT_HDR_SEQ																	," ).append("\n"); 
		query.append("								RT.ROUT_SEQ																			," ).append("\n"); 
		query.append("								RT.RT_SEQ																				," ).append("\n"); 
		query.append("								RT.RAT_UT_CD																		," ).append("\n"); 
		query.append("								RT.PRC_CGO_TP_CD																," ).append("\n"); 
		query.append("								RT.CURR_CD																			," ).append("\n"); 
		query.append("								RT.FNL_FRT_RT_AMT																," ).append("\n"); 
		query.append("								CASE" ).append("\n"); 
		query.append("								WHEN	( OP.ROUT_PNT_LOC_TP_CD, OP.ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("											(" ).append("\n"); 
		query.append("											SELECT  'L', BQ.POR_CD" ).append("\n"); 
		query.append("											FROM		DUAL" ).append("\n"); 
		query.append("											UNION ALL" ).append("\n"); 
		query.append("											SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("											FROM		GL" ).append("\n"); 
		query.append("											WHERE		GL.LOC_CD		= BQ.POR_CD" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("											THEN 'Y'" ).append("\n"); 
		query.append("								ELSE	'N'" ).append("\n"); 
		query.append("								END	POR_MTCH_FLG	," ).append("\n"); 
		query.append("								CASE" ).append("\n"); 
		query.append("								WHEN	( DP.ROUT_PNT_LOC_TP_CD, DP.ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("											(" ).append("\n"); 
		query.append("											SELECT  'L', BQ.DEL_CD" ).append("\n"); 
		query.append("											FROM		DUAL" ).append("\n"); 
		query.append("											UNION ALL" ).append("\n"); 
		query.append("											SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("											FROM		GL" ).append("\n"); 
		query.append("											WHERE		GL.LOC_CD		= BQ.DEL_CD" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("											THEN 'Y'" ).append("\n"); 
		query.append("								ELSE	'N'" ).append("\n"); 
		query.append("								END	DEL_MTCH_FLG	," ).append("\n"); 
		query.append("							" ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	NVL(MAX(A.NC_SEQ), 0)" ).append("\n"); 
		query.append("								FROM		NC_P	A" ).append("\n"); 
		query.append("								WHERE		A.BQ_SEQ						= BQ.BQ_SEQ" ).append("\n"); 
		query.append("								AND			A.NOTE_CONV_RULE_CD	= 'APP'" ).append("\n"); 
		query.append("								AND			A.BKG_CONV_TP_CD		= 'C'" ).append("\n"); 
		query.append("								AND			DECODE(A.CMDT_HDR_SEQ, 0, CR.CMDT_HDR_SEQ, A.CMDT_HDR_SEQ)	= CR.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("								AND 		DECODE(A.ROUT_SEQ, 0, CR.ROUT_SEQ, A.ROUT_SEQ)							= CR.ROUT_SEQ" ).append("\n"); 
		query.append("								) APP_NC_SEQ	," ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	NVL(MAX(A.NC_SEQ), 0)" ).append("\n"); 
		query.append("								FROM		NC_P	A" ).append("\n"); 
		query.append("								WHERE		A.BQ_SEQ						= BQ.BQ_SEQ" ).append("\n"); 
		query.append("								AND			A.NOTE_CONV_RULE_CD	= 'RAS'" ).append("\n"); 
		query.append("								AND			A.BKG_CONV_TP_CD		= 'C'" ).append("\n"); 
		query.append("								AND			DECODE(A.CMDT_HDR_SEQ, 0, CR.CMDT_HDR_SEQ, A.CMDT_HDR_SEQ)	= CR.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("								AND 		DECODE(A.ROUT_SEQ, 0, CR.ROUT_SEQ, A.ROUT_SEQ)							= CR.ROUT_SEQ" ).append("\n"); 
		query.append("								) RAS_NC_SEQ	," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("								ROW_NUMBER() OVER (	PARTITION BY BQ.BQ_SEQ, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ" ).append("\n"); 
		query.append("																		ORDER BY DECODE(RT.RAT_UT_CD, BQ.CTRT_CNTR_TPSZ_CD, 100, 80, 'BL', 80, 60)" ).append("\n"); 
		query.append("																						 	- DECODE(RT.RAT_UT_CD, '20', 10, '40', 10, 'HC', 10, '45', 10, '53', 10 )" ).append("\n"); 
		query.append("																						 	+ DECODE(RT.PRC_CGO_TP_CD, BQ.DR_TP, 2, BQ.DG_TP, 2, BQ.RF_TP, 2, BQ.AK_TP, 2, BQ.BB_TP, 2, 0)" ).append("\n"); 
		query.append("																						 	- DECODE(BQ.CTRT_CNTR_TPSZ_CD||BQ.AK_TP||RT.PRC_CGO_TP_CD, 'D7AKDR', 1, 0)	DESC" ).append("\n"); 
		query.append("																							/* D7/AK 가 D7/DR 과 D7/AK 중에 D7/AK 가 먼저 선택 될 수 있도록 D7/AK 면서 DR 운임적인된 경우 -1 을 해준다. */" ).append("\n"); 
		query.append("																	) ROW_NUMBER" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				FROM    BQ  															," ).append("\n"); 
		query.append("								PRI_RP_SCP_RT_CMDT_HDR    CH			," ).append("\n"); 
		query.append("								PRI_RP_SCP_RT_CMDT        CM			," ).append("\n"); 
		query.append("								PRI_RP_SCP_RT_ACT_CUST		AC			," ).append("\n"); 
		query.append("								PRI_RP_SCP_RT_CMDT_ROUT		CR			," ).append("\n"); 
		query.append("								PRI_RP_SCP_RT_ROUT_PNT		OP			," ).append("\n"); 
		query.append("								PRI_RP_SCP_RT_ROUT_PNT		DP			," ).append("\n"); 
		query.append("								PRI_RP_SCP_RT_ROUT_VIA		OV      ," ).append("\n"); 
		query.append("								PRI_RP_SCP_RT_ROUT_VIA		DV      ," ).append("\n"); 
		query.append("								PRI_RP_SCP_RT             RT" ).append("\n"); 
		query.append("				WHERE		CH.PROP_NO		= BQ.PROP_NO AND CH.AMDT_SEQ		= BQ.AMDT_SEQ AND CH.SVC_SCP_CD			= BQ.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND			CM.PROP_NO		= CH.PROP_NO AND CM.AMDT_SEQ		= CH.AMDT_SEQ AND	CM.SVC_SCP_CD			= CH.SVC_SCP_CD AND	CM.CMDT_HDR_SEQ			= CH.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND			AC.PROP_NO(+)	= CH.PROP_NO AND CM.AMDT_SEQ(+)	= CH.AMDT_SEQ AND	CM.SVC_SCP_CD(+)	= CH.SVC_SCP_CD AND	CM.CMDT_HDR_SEQ(+)	= CH.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND     CR.PROP_NO		= CH.PROP_NO AND CR.AMDT_SEQ		= CH.AMDT_SEQ AND CR.SVC_SCP_CD			= CH.SVC_SCP_CD AND CR.CMDT_HDR_SEQ			= CH.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND     OP.PROP_NO		= CR.PROP_NO AND OP.AMDT_SEQ		= CR.AMDT_SEQ AND OP.SVC_SCP_CD			= CR.SVC_SCP_CD AND OP.CMDT_HDR_SEQ			= CR.CMDT_HDR_SEQ AND OP.ROUT_SEQ			= CR.ROUT_SEQ AND OP.ORG_DEST_TP_CD			= 'O'" ).append("\n"); 
		query.append("				AND     DP.PROP_NO		= CR.PROP_NO AND DP.AMDT_SEQ		= CR.AMDT_SEQ AND DP.SVC_SCP_CD			= CR.SVC_SCP_CD AND DP.CMDT_HDR_SEQ			= CR.CMDT_HDR_SEQ AND DP.ROUT_SEQ			= CR.ROUT_SEQ AND DP.ORG_DEST_TP_CD			= 'D'" ).append("\n"); 
		query.append("				AND     OV.PROP_NO(+)	= CR.PROP_NO AND OV.AMDT_SEQ(+)	= CR.AMDT_SEQ AND OV.SVC_SCP_CD(+)	= CR.SVC_SCP_CD AND OV.CMDT_HDR_SEQ(+)	= CR.CMDT_HDR_SEQ AND OV.ROUT_SEQ(+)	= CR.ROUT_SEQ AND OV.ORG_DEST_TP_CD(+)	= 'O'" ).append("\n"); 
		query.append("				AND     DV.PROP_NO(+)	= CR.PROP_NO AND DV.AMDT_SEQ(+)	= CR.AMDT_SEQ AND DV.SVC_SCP_CD(+)	= CR.SVC_SCP_CD AND DV.CMDT_HDR_SEQ(+)	= CR.CMDT_HDR_SEQ AND DV.ROUT_SEQ(+)	= CR.ROUT_SEQ AND DV.ORG_DEST_TP_CD(+)	= 'D'" ).append("\n"); 
		query.append("				AND     RT.PROP_NO		= CR.PROP_NO AND RT.AMDT_SEQ		= CR.AMDT_SEQ AND RT.SVC_SCP_CD			= CR.SVC_SCP_CD AND RT.CMDT_HDR_SEQ			= CR.CMDT_HDR_SEQ AND RT.ROUT_SEQ			= CR.ROUT_SEQ" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("					1.	RATE - COMMODITY" ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("				< COMMODITY >" ).append("\n"); 
		query.append("				FAK ( REP_CMDT_CD : 0000 ) 인 계약은 모든 BOOKING 에 적용가능한다." ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				AND     ( CM.PRC_CMDT_TP_CD, CM.PRC_CMDT_DEF_CD ) IN" ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	'C', BQ.CMDT_CD" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'R', BQ.REP_CMDT_CD" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'G', GC.PRC_GRP_CMDT_CD" ).append("\n"); 
		query.append("								FROM		GC" ).append("\n"); 
		query.append("								WHERE		GC.PRC_CMDT_TP_CD		= 'C'" ).append("\n"); 
		query.append("								AND			GC.PRC_CMDT_DEF_CD  = BQ.CMDT_CD" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'G', GC.PRC_GRP_CMDT_CD" ).append("\n"); 
		query.append("								FROM		GC" ).append("\n"); 
		query.append("								WHERE		GC.PRC_CMDT_TP_CD		= 'R'" ).append("\n"); 
		query.append("								AND			GC.PRC_CMDT_DEF_CD  = BQ.REP_CMDT_CD" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'C', CMDT_CD" ).append("\n"); 
		query.append("								FROM		MDM_COMMODITY" ).append("\n"); 
		query.append("								WHERE		REP_CMDT_CD	= '0000'" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'R', '0000'" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'G', GC.PRC_GRP_CMDT_CD" ).append("\n"); 
		query.append("								FROM		GC" ).append("\n"); 
		query.append("								WHERE		GC.PRC_CMDT_TP_CD		= 'C'" ).append("\n"); 
		query.append("								AND			GC.PRC_CMDT_DEF_CD  IN ( SELECT CMDT_CD FROM MDM_COMMODITY WHERE REP_CMDT_CD = '0000' )" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'G', GC.PRC_GRP_CMDT_CD" ).append("\n"); 
		query.append("								FROM		GC" ).append("\n"); 
		query.append("								WHERE		GC.PRC_CMDT_TP_CD		= 'R'" ).append("\n"); 
		query.append("								AND			GC.PRC_CMDT_DEF_CD  = '0000'" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("				< ACTUAL CUSTOMER >" ).append("\n"); 
		query.append("				BKG 와 CONTRACT 모두에 ACTUAL CUSTOMER 가 존재하지 않거나," ).append("\n"); 
		query.append("				BKG 의 ACTUAL CUSTOMER 와 일치하는 경우" ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				AND     (" ).append("\n"); 
		query.append("										(" ).append("\n"); 
		query.append("						            AC.CUST_CNT_CD  		IS NULL" ).append("\n"); 
		query.append("						        AND BQ.AGMT_ACT_CNT_CD	IS NULL" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("				        		OR" ).append("\n"); 
		query.append("				        		(" ).append("\n"); 
		query.append("					        			AC.CUST_CNT_CD	= BQ.AGMT_ACT_CNT_CD" ).append("\n"); 
		query.append("				        		AND	AC.CUST_SEQ			= BQ.AGMT_ACT_CUST_SEQ" ).append("\n"); 
		query.append("				        		)" ).append("\n"); 
		query.append("				        )" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("					2.	RATE - ROUTE" ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("				< ORIGIN >" ).append("\n"); 
		query.append("				PATTERN 1,3 일때는 POR, (POL)" ).append("\n"); 
		query.append("				PATTERN 2,4 일때는 POL, PRE" ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				AND     ( OP.ROUT_PNT_LOC_TP_CD, OP.ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	'L',	BQ.POR_CD" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("								FROM		GL" ).append("\n"); 
		query.append("								WHERE		GL.LOC_CD		= BQ.POR_CD" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'L',	BQ.POL_CD" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("								FROM		GL" ).append("\n"); 
		query.append("								WHERE		GL.LOC_CD		= BQ.POL_CD" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'L', BQ.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("								FROM		GL" ).append("\n"); 
		query.append("								WHERE		GL.LOC_CD		= BQ.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("				< ORIGIN VIA >" ).append("\n"); 
		query.append("				PATTERN 1,2,3,4 일때는 POL, PRE" ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				AND     (" ).append("\n"); 
		query.append("										OV.ROUT_VIA_PORT_DEF_CD	IS NULL" ).append("\n"); 
		query.append("								OR	( OV.ROUT_VIA_PORT_TP_CD, OV.ROUT_VIA_PORT_DEF_CD ) IN" ).append("\n"); 
		query.append("										(" ).append("\n"); 
		query.append("										SELECT	'L',	BQ.POL_CD" ).append("\n"); 
		query.append("										FROM		DUAL" ).append("\n"); 
		query.append("										UNION ALL" ).append("\n"); 
		query.append("										SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("										FROM		GL" ).append("\n"); 
		query.append("										WHERE		GL.LOC_CD		= BQ.POL_CD" ).append("\n"); 
		query.append("										UNION ALL" ).append("\n"); 
		query.append("										SELECT	'L', BQ.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("										FROM		DUAL" ).append("\n"); 
		query.append("										UNION ALL" ).append("\n"); 
		query.append("										SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("										FROM		GL" ).append("\n"); 
		query.append("										WHERE		GL.LOC_CD		= BQ.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("				< DESTINATION VIA >" ).append("\n"); 
		query.append("				PATTERN 1,2,3,4 일때는 POD, POST" ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				AND     (" ).append("\n"); 
		query.append("										DV.ROUT_VIA_PORT_DEF_CD	IS NULL" ).append("\n"); 
		query.append("								OR	( DV.ROUT_VIA_PORT_TP_CD, DV.ROUT_VIA_PORT_DEF_CD ) IN" ).append("\n"); 
		query.append("										(" ).append("\n"); 
		query.append("										SELECT	'L',	BQ.POD_CD" ).append("\n"); 
		query.append("										FROM		DUAL" ).append("\n"); 
		query.append("										UNION ALL" ).append("\n"); 
		query.append("										SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("										FROM		GL" ).append("\n"); 
		query.append("										WHERE		GL.LOC_CD		= BQ.POD_CD" ).append("\n"); 
		query.append("										UNION ALL" ).append("\n"); 
		query.append("										SELECT	'L', BQ.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("										FROM		DUAL" ).append("\n"); 
		query.append("										UNION ALL" ).append("\n"); 
		query.append("										SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("										FROM		GL" ).append("\n"); 
		query.append("										WHERE		GL.LOC_CD		= BQ.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("				< DESTINATION >" ).append("\n"); 
		query.append("				PATTERN 1,2 일때는 DEL, (POD)" ).append("\n"); 
		query.append("				PATTERN 3,4 일때는 POD, POST" ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				AND     ( DP.ROUT_PNT_LOC_TP_CD, DP.ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("								(" ).append("\n"); 
		query.append("								SELECT	'L',	BQ.DEL_CD" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("								FROM		GL" ).append("\n"); 
		query.append("								WHERE		GL.LOC_CD		= BQ.DEL_CD" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'L',	BQ.POD_CD" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("								FROM		GL" ).append("\n"); 
		query.append("								WHERE		GL.LOC_CD		= BQ.POD_CD" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT	'L', BQ.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("								FROM		DUAL" ).append("\n"); 
		query.append("								UNION ALL" ).append("\n"); 
		query.append("								SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("								FROM		GL" ).append("\n"); 
		query.append("								WHERE		GL.LOC_CD		= BQ.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("					3.	RATE - RATING UNIT" ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("				< RATE RATING UNIT >" ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				AND			(" ).append("\n"); 
		query.append("										RT.RAT_UT_CD	IN ( 'BL', BQ.CTRT_CNTR_TPSZ_CD )" ).append("\n"); 
		query.append("								OR	(" ).append("\n"); 
		query.append("												RT.RAT_UT_CD  IN ( '20', '40', 'HC', '45', '53' )" ).append("\n"); 
		query.append("				            AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = RT.RAT_UT_CD ) = BQ.CTRT_CNTR_SZ_CD" ).append("\n"); 
		query.append("				            )" ).append("\n"); 
		query.append("				        )" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				/*******************************************************************************************" ).append("\n"); 
		query.append("				< DEST ARB CARGO TYPE >" ).append("\n"); 
		query.append("				*******************************************************************************************/" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				AND     RT.PRC_CGO_TP_CD  IN ( BQ.DR_TP, BQ.DG_TP, BQ.RF_TP, BQ.AK_TP, BQ.BB_TP )" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("WHERE		ROW_NUMBER	= 1" ).append("\n"); 
		query.append(")	," ).append("\n"); 
		query.append("RATE AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	1. PATTERN #1 ( 0000 )" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	'0000'												PRC_RT_MTCH_PATT_CD				," ).append("\n"); 
		query.append("				BQ.SC_NO											CTRT_NO										," ).append("\n"); 
		query.append("				BQ.PROP_NO										PROP_NO										," ).append("\n"); 
		query.append("				BQ.AMDT_SEQ										AMDT_SEQ									," ).append("\n"); 
		query.append("				BQ.SVC_SCP_CD									SVC_SCP_CD								," ).append("\n"); 
		query.append("				BQ.BKG_NO											BKG_NO										," ).append("\n"); 
		query.append("				BQ.BQ_SEQ											BQ_SEQ										," ).append("\n"); 
		query.append("				BQ.BKG_BQ_SEQ									BKG_BQ_SEQ								," ).append("\n"); 
		query.append("				BQ.CNTR_TPSZ_CD								BQ_CNTR_TPSZ_CD						," ).append("\n"); 
		query.append("				BQ.CTRT_CNTR_TPSZ_CD					BQ_CTRT_CNTR_TPSZ_CD			," ).append("\n"); 
		query.append("				BQ.RCV_TERM_CD								BQ_RCV_TERM_CD						," ).append("\n"); 
		query.append("				BQ.DE_TERM_CD									BQ_DE_TERM_CD							," ).append("\n"); 
		query.append("				BQ.DRY_CGO_FLG								BQ_DRY_CGO_FLG						," ).append("\n"); 
		query.append("				BQ.DCGO_FLG										BQ_DCGO_FLG								," ).append("\n"); 
		query.append("				BQ.RC_FLG											BQ_RC_FLG									," ).append("\n"); 
		query.append("				BQ.AWK_CGO_FLG								BQ_AWK_CGO_FLG						," ).append("\n"); 
		query.append("				BQ.BB_CGO_FLG									BQ_BB_CGO_FLG							," ).append("\n"); 
		query.append("				BQ.SOC_FLG										BQ_SOC_FLG								," ).append("\n"); 
		query.append("				BQ.PRC_CGO_TP_CD							BQ_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				BQ.IMDG_CLSS_CD								BQ_IMDG_CLSS_CD						," ).append("\n"); 
		query.append("				BQ.CTRT_CNTR_QTY							BQ_CTRT_CNTR_QTY					," ).append("\n"); 
		query.append("				BQ.POR_APPL_FLG								BQ_POR_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.POL_APPL_FLG								BQ_POL_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.POD_APPL_FLG								BQ_POD_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.DEL_APPL_FLG								BQ_DEL_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.PRE_RLY_PORT_APPL_FLG			BQ_POR_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("				BQ.PST_RLY_PORT_APPL_FLG			BQ_PST_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.CMDT_HDR_SEQ								RT_CMDT_HDR_SEQ						," ).append("\n"); 
		query.append("				RT.ROUT_SEQ										RT_ROUT_SEQ								," ).append("\n"); 
		query.append("				RT.RT_SEQ											RT_RT_SEQ									," ).append("\n"); 
		query.append("				0															OA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("				0															DA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.CM_PRC_CMDT_TP_CD																		," ).append("\n"); 
		query.append("				RT.CM_PRC_CMDT_DEF_CD																		," ).append("\n"); 
		query.append("				RT.OP_ROUT_PNT_LOC_DEF_CD			POR_CD										," ).append("\n"); 
		query.append("				'N/A'													POL_CD										," ).append("\n"); 
		query.append("				RT.DV_ROUT_VIA_PORT_DEF_CD		POD_CD										," ).append("\n"); 
		query.append("				RT.DP_ROUT_PNT_LOC_DEF_CD			DEL_CD										," ).append("\n"); 
		query.append("				RT.OP_RCV_DE_TERM_CD					RCV_TERM_CD								," ).append("\n"); 
		query.append("				RT.DP_RCV_DE_TERM_CD					DE_TERM_CD								," ).append("\n"); 
		query.append("				RT.RAT_UT_CD									RAT_UT_CD									," ).append("\n"); 
		query.append("				RT.PRC_CGO_TP_CD							PRC_CGO_TP_CD							," ).append("\n"); 
		query.append("				RT.CURR_CD										CURR_CD										," ).append("\n"); 
		query.append("				RT.OP_PRC_TRSP_MOD_CD					ORG_TRSP_MOD_CD						," ).append("\n"); 
		query.append("				RT.DP_PRC_TRSP_MOD_CD					DEST_TRSP_MOD_CD					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.OP_ROUT_PNT_LOC_DEF_CD			OP_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				'N/A'													OV_ROUT_VIA_PORT_DEF_CD		," ).append("\n"); 
		query.append("				RT.DV_ROUT_VIA_PORT_DEF_CD		DV_ROUT_VIA_PORT_DEF_CD		," ).append("\n"); 
		query.append("				RT.DP_ROUT_PNT_LOC_DEF_CD			DP_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				RT.RAT_UT_CD									RT_RAT_UT_CD							," ).append("\n"); 
		query.append("				RT.PRC_CGO_TP_CD							RT_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				RT.OP_PRC_TRSP_MOD_CD					OP_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				RT.DP_PRC_TRSP_MOD_CD					DP_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				RT.CURR_CD										RT_CURR_CD								," ).append("\n"); 
		query.append("				RT.FNL_FRT_RT_AMT							RT_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				NULL													OA_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				NULL													OA_BSE_PORT_DEF_CD				," ).append("\n"); 
		query.append("				NULL													OA_RAT_UT_CD							," ).append("\n"); 
		query.append("				NULL													OA_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				NULL													OA_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				NULL													OA_RCV_DE_TERM_CD					," ).append("\n"); 
		query.append("				NULL													OA_CURR_CD								," ).append("\n"); 
		query.append("				NULL													OA_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("				NULL													OA_RAT_UT_MTCH_PRIO				," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				NULL													DA_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				NULL													DA_BSE_PORT_DEF_CD				," ).append("\n"); 
		query.append("				NULL													DA_RAT_UT_CD							," ).append("\n"); 
		query.append("				NULL													DA_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				NULL													DA_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				NULL													DA_RCV_DE_TERM_CD					," ).append("\n"); 
		query.append("				NULL													DA_CURR_CD								," ).append("\n"); 
		query.append("				NULL													DA_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("				NULL													DA_RAT_UT_MTCH_PRIO				," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT_APP.BKG_CONV_TP_CD      		RT_APP_BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_MAPG_ID   		RT_APP_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_SEQ       		RT_APP_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_RULE_CD   		RT_APP_NOTE_CONV_RULE_CD  ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_TP_CD     		RT_APP_NOTE_CONV_TP_CD    ," ).append("\n"); 
		query.append("				RT_APP.RT_OP_CD            		RT_APP_RT_OP_CD           ," ).append("\n"); 
		query.append("				RT_APP.CURR_CD             		RT_APP_CURR_CD            ," ).append("\n"); 
		query.append("				RT_APP.FRT_RT_AMT          		RT_APP_FRT_RT_AMT         ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT_RAS.BKG_CONV_TP_CD      		RT_RAS_BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_MAPG_ID   		RT_RAS_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_SEQ       		RT_RAS_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_RULE_CD   		RT_RAS_NOTE_CONV_RULE_CD  ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_TP_CD     		RT_RAS_NOTE_CONV_TP_CD    ," ).append("\n"); 
		query.append("				RT_RAS.RT_OP_CD            		RT_RAS_RT_OP_CD           ," ).append("\n"); 
		query.append("				RT_RAS.CURR_CD             		RT_RAS_CURR_CD            ," ).append("\n"); 
		query.append("				RT_RAS.FRT_RT_AMT          		RT_RAS_FRT_RT_AMT					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.POR_MTCH_FLG								POR_MTCH_FLG							," ).append("\n"); 
		query.append("				RT.DEL_MTCH_FLG								DEL_MTCH_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("JOIN TABLE" ).append("\n"); 
		query.append("1.1 BQ, RT" ).append("\n"); 
		query.append("1.2 RT RULE					: APP, RAS" ).append("\n"); 
		query.append("2.1 OA							: X" ).append("\n"); 
		query.append("2.2 OA RULE					: X" ).append("\n"); 
		query.append("3.1 DA							: X" ).append("\n"); 
		query.append("3.2 DA RULE					: X" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("				BQ	," ).append("\n"); 
		query.append("				RT	," ).append("\n"); 
		query.append("				NC_P											RT_APP	," ).append("\n"); 
		query.append("				NC_P											RT_RAS" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WHERE		RT.BKG_NO = BQ.BKG_NO AND RT.BQ_SEQ = BQ.BQ_SEQ" ).append("\n"); 
		query.append("AND			RT_APP.BKG_NO(+)	= RT.BKG_NO AND RT_APP.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_APP.NOTE_CONV_RULE_CD(+)	= 'APP' AND RT_APP.NC_SEQ(+)	= RT.APP_NC_SEQ" ).append("\n"); 
		query.append("AND			RT_RAS.BKG_NO(+)	= RT.BKG_NO AND RT_RAS.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_RAS.NOTE_CONV_RULE_CD(+)	= 'RAS' AND RT_RAS.NC_SEQ(+)	= RT.RAS_NC_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	1.1 ROUTE / TERM / TRANS MODE" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( RT.OP_ROUT_PNT_LOC_TP_CD, RT.OP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.POR_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.POR_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.POL_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				WHERE		( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				AND			GL.LOC_CD		= BQ.POL_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< RCV TERM >" ).append("\n"); 
		query.append("예외적으로 POR_MTCH_FLG = 'N' 일 경우에, BKG : 'D', RFA : 'Y' 가 허용된다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("						(" ).append("\n"); 
		query.append("								RT.POR_MTCH_FLG 			= 'Y'" ).append("\n"); 
		query.append("						AND	NVL(RT.OP_RCV_DE_TERM_CD, BQ.RCV_TERM_CD) = BQ.RCV_TERM_CD" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								RT.POR_MTCH_FLG 			= 'N'" ).append("\n"); 
		query.append("						AND	BQ.POR_CD							<> BQ.POL_CD" ).append("\n"); 
		query.append("						AND	(" ).append("\n"); 
		query.append("										NVL(RT.OP_RCV_DE_TERM_CD, BQ.RCV_TERM_CD) = BQ.RCV_TERM_CD" ).append("\n"); 
		query.append("								OR	(" ).append("\n"); 
		query.append("												BQ.RCV_TERM_CD 				= 'D'" ).append("\n"); 
		query.append("										AND	RT.OP_RCV_DE_TERM_CD	= 'Y'" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								RT.POR_MTCH_FLG 								= 'N'" ).append("\n"); 
		query.append("						AND	BQ.POR_CD												= BQ.POL_CD" ).append("\n"); 
		query.append("						AND	NVL(RT.OP_RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN TRANS MODE >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("					 	RT.OP_PRC_TRSP_MOD_CD	IS NULL" ).append("\n"); 
		query.append("				OR	RT.OP_PRC_TRSP_MOD_CD	= BQ.ORG_TRNS_MOD_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN VIA >" ).append("\n"); 
		query.append("RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DESTINATION VIA >" ).append("\n"); 
		query.append("RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DESTINATION >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( RT.DP_ROUT_PNT_LOC_TP_CD, RT.DP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.DEL_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.DEL_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.POD_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				WHERE		( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				AND			GL.LOC_CD		= BQ.POD_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DE TERM >" ).append("\n"); 
		query.append("예외적으로 DEL_MTCH_FLG = 'N' 일 경우에, BKG : 'D', RFA : 'Y' 가 허용된다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("						(" ).append("\n"); 
		query.append("								RT.DEL_MTCH_FLG 			= 'Y'" ).append("\n"); 
		query.append("						AND	NVL(RT.DP_RCV_DE_TERM_CD, BQ.DE_TERM_CD) = BQ.DE_TERM_CD" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								RT.DEL_MTCH_FLG 			= 'N'" ).append("\n"); 
		query.append("						AND	BQ.DEL_CD							<> BQ.POD_CD" ).append("\n"); 
		query.append("						AND	(" ).append("\n"); 
		query.append("										NVL(RT.DP_RCV_DE_TERM_CD, BQ.DE_TERM_CD) = BQ.DE_TERM_CD" ).append("\n"); 
		query.append("								OR	(" ).append("\n"); 
		query.append("												BQ.DE_TERM_CD 				= 'D'" ).append("\n"); 
		query.append("										AND	RT.DP_RCV_DE_TERM_CD	= 'Y'" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								RT.DEL_MTCH_FLG 								= 'N'" ).append("\n"); 
		query.append("						AND	BQ.DEL_CD												= BQ.POD_CD" ).append("\n"); 
		query.append("						AND	NVL(RT.DP_RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DEST TRANS MODE >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						RT.DP_PRC_TRSP_MOD_CD	IS NULL" ).append("\n"); 
		query.append("				OR	RT.DP_PRC_TRSP_MOD_CD	= BQ.DEST_TRNS_MOD_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	1.2 ETC" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* APP */" ).append("\n"); 
		query.append("/*" ).append("\n"); 
		query.append("	RT_APP.RT_APPL_TP_CD 가 NULL (APP 존재하지 않음) 이거나 'S' 인 경우에만 운임을 사용할 수 있다." ).append("\n"); 
		query.append("	그리고 추가적으로 APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재하지 않아야 한다." ).append("\n"); 
		query.append("	APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재한다면," ).append("\n"); 
		query.append("	그것은 BKG 와 다른 조건으로 운임을 사용하도록 APP RULE 이 되어 있다는 것을 의미한다." ).append("\n"); 
		query.append("*/" ).append("\n"); 
		query.append("AND			NVL(RT_APP.RT_APPL_TP_CD, 'S')	= 'S'" ).append("\n"); 
		query.append("AND			NOT EXISTS	(" ).append("\n"); 
		query.append("										SELECT	'X'" ).append("\n"); 
		query.append("										FROM		APP_N	A" ).append("\n"); 
		query.append("										WHERE		A.BQ_SEQ																										= BQ.BQ_SEQ" ).append("\n"); 
		query.append("										AND			DECODE(A.CMDT_HDR_SEQ, 0, RT.CMDT_HDR_SEQ, A.CMDT_HDR_SEQ)	= RT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("										AND			DECODE(A.ROUT_SEQ, 0, RT.ROUT_SEQ, A.ROUT_SEQ)							= RT.ROUT_SEQ" ).append("\n"); 
		query.append("										AND			A.CONV_TP_PRIO																							< RT_APP.CONV_TP_PRIO" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	2. PATTERN #2 ( 0100 )" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	'0100'												PRC_RT_MTCH_PATT_CD				," ).append("\n"); 
		query.append("				BQ.SC_NO											CTRT_NO										," ).append("\n"); 
		query.append("				BQ.PROP_NO										PROP_NO										," ).append("\n"); 
		query.append("				BQ.AMDT_SEQ										AMDT_SEQ									," ).append("\n"); 
		query.append("				BQ.SVC_SCP_CD									SVC_SCP_CD								," ).append("\n"); 
		query.append("				BQ.BKG_NO											BKG_NO										," ).append("\n"); 
		query.append("				BQ.BQ_SEQ											BQ_SEQ										," ).append("\n"); 
		query.append("				BQ.BKG_BQ_SEQ									BKG_BQ_SEQ								," ).append("\n"); 
		query.append("				BQ.CNTR_TPSZ_CD								BQ_CNTR_TPSZ_CD						," ).append("\n"); 
		query.append("				BQ.CTRT_CNTR_TPSZ_CD					BQ_CTRT_CNTR_TPSZ_CD			," ).append("\n"); 
		query.append("				BQ.RCV_TERM_CD								BQ_RCV_TERM_CD						," ).append("\n"); 
		query.append("				BQ.DE_TERM_CD									BQ_DE_TERM_CD							," ).append("\n"); 
		query.append("				BQ.DRY_CGO_FLG								BQ_DRY_CGO_FLG						," ).append("\n"); 
		query.append("				BQ.DCGO_FLG										BQ_DCGO_FLG								," ).append("\n"); 
		query.append("				BQ.RC_FLG											BQ_RC_FLG									," ).append("\n"); 
		query.append("				BQ.AWK_CGO_FLG								BQ_AWK_CGO_FLG						," ).append("\n"); 
		query.append("				BQ.BB_CGO_FLG									BQ_BB_CGO_FLG							," ).append("\n"); 
		query.append("				BQ.SOC_FLG										BQ_SOC_FLG								," ).append("\n"); 
		query.append("				BQ.PRC_CGO_TP_CD							BQ_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				BQ.IMDG_CLSS_CD								BQ_IMDG_CLSS_CD						," ).append("\n"); 
		query.append("				BQ.CTRT_CNTR_QTY							BQ_CTRT_CNTR_QTY					," ).append("\n"); 
		query.append("				BQ.POR_APPL_FLG								BQ_POR_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.POL_APPL_FLG								BQ_POL_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.POD_APPL_FLG								BQ_POD_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.DEL_APPL_FLG								BQ_DEL_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.PRE_RLY_PORT_APPL_FLG			BQ_POR_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("				BQ.PST_RLY_PORT_APPL_FLG			BQ_PST_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.CMDT_HDR_SEQ								RT_CMDT_HDR_SEQ						," ).append("\n"); 
		query.append("				RT.ROUT_SEQ										RT_ROUT_SEQ								," ).append("\n"); 
		query.append("				RT.RT_SEQ											RT_RT_SEQ									," ).append("\n"); 
		query.append("				OA.ADD_CHG_SEQ								OA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("				0															DA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.CM_PRC_CMDT_TP_CD					CM_PRC_CMDT_TP_CD					," ).append("\n"); 
		query.append("				RT.CM_PRC_CMDT_DEF_CD					CM_PRC_CMDT_DEF_CD				," ).append("\n"); 
		query.append("				OA.ROUT_PNT_LOC_DEF_CD				POR_CD										," ).append("\n"); 
		query.append("				OA.BSE_PORT_DEF_CD						POL_CD										," ).append("\n"); 
		query.append("				RT.DV_ROUT_VIA_PORT_DEF_CD		POD_CD										," ).append("\n"); 
		query.append("				RT.DP_ROUT_PNT_LOC_DEF_CD			DEL_CD										," ).append("\n"); 
		query.append("				OA.RCV_DE_TERM_CD							RCV_TERM_CD								," ).append("\n"); 
		query.append("				RT.DP_RCV_DE_TERM_CD					DE_TERM_CD								," ).append("\n"); 
		query.append("				RT.RAT_UT_CD									RAT_UT_CD									," ).append("\n"); 
		query.append("				RT.PRC_CGO_TP_CD							PRC_CGO_TP_CD							," ).append("\n"); 
		query.append("				RT.CURR_CD										CURR_CD										," ).append("\n"); 
		query.append("				OA.PRC_TRSP_MOD_CD						ORG_TRSP_MOD_CD						," ).append("\n"); 
		query.append("				RT.DP_PRC_TRSP_MOD_CD					DEST_TRSP_MOD_CD					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.OP_ROUT_PNT_LOC_DEF_CD			OP_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				'N/A'													OV_ROUT_VIA_PORT_DEF_CD		," ).append("\n"); 
		query.append("				RT.DV_ROUT_VIA_PORT_DEF_CD		DV_ROUT_VIA_PORT_DEF_CD		," ).append("\n"); 
		query.append("				RT.DP_ROUT_PNT_LOC_DEF_CD			DP_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				RT.RAT_UT_CD									RT_RAT_UT_CD							," ).append("\n"); 
		query.append("				RT.PRC_CGO_TP_CD							RT_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				RT.OP_PRC_TRSP_MOD_CD					OP_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				RT.DP_PRC_TRSP_MOD_CD					DP_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				RT.CURR_CD										RT_CURR_CD								," ).append("\n"); 
		query.append("				RT.FNL_FRT_RT_AMT							RT_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				OA.ROUT_PNT_LOC_DEF_CD				OA_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				OA.BSE_PORT_DEF_CD						OA_BSE_PORT_DEF_CD				," ).append("\n"); 
		query.append("				OA.RAT_UT_CD									OA_RAT_UT_CD							," ).append("\n"); 
		query.append("				OA.PRC_CGO_TP_CD							OA_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				OA.PRC_TRSP_MOD_CD						OA_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				OA.RCV_DE_TERM_CD							OA_RCV_DE_TERM_CD					," ).append("\n"); 
		query.append("				OA.CURR_CD										OA_CURR_CD								," ).append("\n"); 
		query.append("				OA.FNL_FRT_RT_AMT							OA_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("				OA.RAT_UT_MTCH_PRIO						OA_RAT_UT_MTCH_PRIO				," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				NULL													DA_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				NULL													DA_BSE_PORT_DEF_CD				," ).append("\n"); 
		query.append("				NULL													DA_RAT_UT_CD							," ).append("\n"); 
		query.append("				NULL													DA_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				NULL													DA_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				NULL													DA_RCV_DE_TERM_CD					," ).append("\n"); 
		query.append("				NULL													DA_CURR_CD								," ).append("\n"); 
		query.append("				NULL													DA_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("				NULL													DA_RAT_UT_MTCH_PRIO				," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT_APP.BKG_CONV_TP_CD      		RT_APP_BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_MAPG_ID   		RT_APP_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_SEQ       		RT_APP_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_RULE_CD   		RT_APP_NOTE_CONV_RULE_CD  ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_TP_CD     		RT_APP_NOTE_CONV_TP_CD    ," ).append("\n"); 
		query.append("				RT_APP.RT_OP_CD            		RT_APP_RT_OP_CD           ," ).append("\n"); 
		query.append("				RT_APP.CURR_CD             		RT_APP_CURR_CD            ," ).append("\n"); 
		query.append("				RT_APP.FRT_RT_AMT          		RT_APP_FRT_RT_AMT         ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT_RAS.BKG_CONV_TP_CD      		RT_RAS_BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_MAPG_ID   		RT_RAS_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_SEQ       		RT_RAS_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_RULE_CD   		RT_RAS_NOTE_CONV_RULE_CD  ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_TP_CD     		RT_RAS_NOTE_CONV_TP_CD    ," ).append("\n"); 
		query.append("				RT_RAS.RT_OP_CD            		RT_RAS_RT_OP_CD           ," ).append("\n"); 
		query.append("				RT_RAS.CURR_CD             		RT_RAS_CURR_CD            ," ).append("\n"); 
		query.append("				RT_RAS.FRT_RT_AMT          		RT_RAS_FRT_RT_AMT					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				OA.POR_MTCH_FLG								POR_MTCH_FLG							," ).append("\n"); 
		query.append("				RT.DEL_MTCH_FLG								DEL_MTCH_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("JOIN TABLE" ).append("\n"); 
		query.append("1.1 BQ, OA, RT" ).append("\n"); 
		query.append("1.2 RT RULE					: APP, RAS" ).append("\n"); 
		query.append("2.1 OA							: O" ).append("\n"); 
		query.append("2.2 OA RULE					: X" ).append("\n"); 
		query.append("3.1 DA							: X" ).append("\n"); 
		query.append("3.2 DA RULE					: X" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("				BQ	," ).append("\n"); 
		query.append("				OA	," ).append("\n"); 
		query.append("				RT	," ).append("\n"); 
		query.append("				NC_P											RT_APP	," ).append("\n"); 
		query.append("				NC_P											RT_RAS" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WHERE		RT.BKG_NO = BQ.BKG_NO AND RT.BQ_SEQ = BQ.BQ_SEQ" ).append("\n"); 
		query.append("AND			OA.BKG_NO = BQ.BKG_NO AND OA.BQ_SEQ = BQ.BQ_SEQ" ).append("\n"); 
		query.append("AND			RT_APP.BKG_NO(+)	= RT.BKG_NO AND RT_APP.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_APP.NOTE_CONV_RULE_CD(+)	= 'APP' AND RT_APP.NC_SEQ(+)	= RT.APP_NC_SEQ" ).append("\n"); 
		query.append("AND			RT_RAS.BKG_NO(+)	= RT.BKG_NO AND RT_RAS.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_RAS.NOTE_CONV_RULE_CD(+)	= 'RAS' AND RT_RAS.NC_SEQ(+)	= RT.RAS_NC_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	2.1 ROUTE / TERM / TRANS MODE" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( RT.OP_ROUT_PNT_LOC_TP_CD, RT.OP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.POL_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.POL_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L', BQ.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN VIA >" ).append("\n"); 
		query.append("RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DESTINATION VIA >" ).append("\n"); 
		query.append("RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DESTINATION >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( RT.DP_ROUT_PNT_LOC_TP_CD, RT.DP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.DEL_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.DEL_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.POD_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				WHERE		( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				AND			GL.LOC_CD		= BQ.POD_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DE TERM >" ).append("\n"); 
		query.append("예외적으로 DEL_MTCH_FLG = 'N' 일 경우에, BKG : 'D', RFA : 'Y' 가 허용된다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("						(" ).append("\n"); 
		query.append("								RT.DEL_MTCH_FLG 			= 'Y'" ).append("\n"); 
		query.append("						AND	NVL(RT.DP_RCV_DE_TERM_CD, BQ.DE_TERM_CD) = BQ.DE_TERM_CD" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								RT.DEL_MTCH_FLG 			= 'N'" ).append("\n"); 
		query.append("						AND	BQ.DEL_CD							<> BQ.POD_CD" ).append("\n"); 
		query.append("						AND	(" ).append("\n"); 
		query.append("										NVL(RT.DP_RCV_DE_TERM_CD, BQ.DE_TERM_CD) = BQ.DE_TERM_CD" ).append("\n"); 
		query.append("								OR	(" ).append("\n"); 
		query.append("												BQ.DE_TERM_CD 				= 'D'" ).append("\n"); 
		query.append("										AND	RT.DP_RCV_DE_TERM_CD	= 'Y'" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								RT.DEL_MTCH_FLG 								= 'N'" ).append("\n"); 
		query.append("						AND	BQ.DEL_CD												= BQ.POD_CD" ).append("\n"); 
		query.append("						AND	NVL(RT.DP_RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DEST TRANS MODE >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("						RT.DP_PRC_TRSP_MOD_CD	IS NULL" ).append("\n"); 
		query.append("				OR	RT.DP_PRC_TRSP_MOD_CD	= BQ.DEST_TRNS_MOD_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	2.2 ETC" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* APP */" ).append("\n"); 
		query.append("/*" ).append("\n"); 
		query.append("	RT_APP.RT_APPL_TP_CD 가 NULL (APP 존재하지 않음) 이거나 'S' 인 경우에만 운임을 사용할 수 있다." ).append("\n"); 
		query.append("	그리고 추가적으로 APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재하지 않아야 한다." ).append("\n"); 
		query.append("	APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재한다면," ).append("\n"); 
		query.append("	그것은 BKG 와 다른 조건으로 운임을 사용하도록 APP RULE 이 되어 있다는 것을 의미한다." ).append("\n"); 
		query.append("*/" ).append("\n"); 
		query.append("AND			NVL(RT_APP.RT_APPL_TP_CD, 'S')	= 'S'" ).append("\n"); 
		query.append("AND			NOT EXISTS	(" ).append("\n"); 
		query.append("										SELECT	'X'" ).append("\n"); 
		query.append("										FROM		APP_N	A" ).append("\n"); 
		query.append("										WHERE		A.BQ_SEQ																										= BQ.BQ_SEQ" ).append("\n"); 
		query.append("										AND			DECODE(A.CMDT_HDR_SEQ, 0, RT.CMDT_HDR_SEQ, A.CMDT_HDR_SEQ)	= RT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("										AND			DECODE(A.ROUT_SEQ, 0, RT.ROUT_SEQ, A.ROUT_SEQ)							= RT.ROUT_SEQ" ).append("\n"); 
		query.append("										AND			A.CONV_TP_PRIO																							< RT_APP.CONV_TP_PRIO" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	2.3 ORIGIN ARB" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< RCV TERM >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("						(		OA.POR_MTCH_FLG 			= 'Y'" ).append("\n"); 
		query.append("						AND	NVL(OA.RCV_DE_TERM_CD, BQ.RCV_TERM_CD)  = BQ.RCV_TERM_CD" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								OA.POR_MTCH_FLG 			= 'N'" ).append("\n"); 
		query.append("						AND	BQ.POR_CD							<> BQ.POL_CD" ).append("\n"); 
		query.append("						AND	(" ).append("\n"); 
		query.append("											NVL(OA.RCV_DE_TERM_CD, BQ.RCV_TERM_CD)  = BQ.RCV_TERM_CD" ).append("\n"); 
		query.append("								OR	(" ).append("\n"); 
		query.append("												BQ.RCV_TERM_CD 				= 'D'" ).append("\n"); 
		query.append("										AND	OA.RCV_DE_TERM_CD			= 'Y'" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								OA.POR_MTCH_FLG 								= 'N'" ).append("\n"); 
		query.append("						AND	BQ.POR_CD												= BQ.POL_CD" ).append("\n"); 
		query.append("						AND	NVL(OA.RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* ORIGIN ARB JOIN ( OARB.BPORT = RATE.ORIGIN ) */" ).append("\n"); 
		query.append("AND			RT.OP_RCV_DE_TERM_CD					<> 'D'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			( RT.OP_ROUT_PNT_LOC_TP_CD,  RT.OP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	OA.BSE_PORT_TP_CD, OA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L', GL.LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		OA.BSE_PORT_TP_CD	= 'G'" ).append("\n"); 
		query.append("				AND		  GL.PRC_GRP_LOC_CD	= OA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		OA.BSE_PORT_TP_CD	= 'L'" ).append("\n"); 
		query.append("				AND			GL.LOC_CD					= OA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	3. PATTERN #3 ( 0010 )" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	'0010'												PRC_RT_MTCH_PATT_CD				," ).append("\n"); 
		query.append("				BQ.SC_NO											CTRT_NO										," ).append("\n"); 
		query.append("				BQ.PROP_NO										PROP_NO										," ).append("\n"); 
		query.append("				BQ.AMDT_SEQ										AMDT_SEQ									," ).append("\n"); 
		query.append("				BQ.SVC_SCP_CD									SVC_SCP_CD								," ).append("\n"); 
		query.append("				BQ.BKG_NO											BKG_NO										," ).append("\n"); 
		query.append("				BQ.BQ_SEQ											BQ_SEQ										," ).append("\n"); 
		query.append("				BQ.BKG_BQ_SEQ									BKG_BQ_SEQ								," ).append("\n"); 
		query.append("				BQ.CNTR_TPSZ_CD								BQ_CNTR_TPSZ_CD						," ).append("\n"); 
		query.append("				BQ.CTRT_CNTR_TPSZ_CD					BQ_CTRT_CNTR_TPSZ_CD			," ).append("\n"); 
		query.append("				BQ.RCV_TERM_CD								BQ_RCV_TERM_CD						," ).append("\n"); 
		query.append("				BQ.DE_TERM_CD									BQ_DE_TERM_CD							," ).append("\n"); 
		query.append("				BQ.DRY_CGO_FLG								BQ_DRY_CGO_FLG						," ).append("\n"); 
		query.append("				BQ.DCGO_FLG										BQ_DCGO_FLG								," ).append("\n"); 
		query.append("				BQ.RC_FLG											BQ_RC_FLG									," ).append("\n"); 
		query.append("				BQ.AWK_CGO_FLG								BQ_AWK_CGO_FLG						," ).append("\n"); 
		query.append("				BQ.BB_CGO_FLG									BQ_BB_CGO_FLG							," ).append("\n"); 
		query.append("				BQ.SOC_FLG										BQ_SOC_FLG								," ).append("\n"); 
		query.append("				BQ.PRC_CGO_TP_CD							BQ_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				BQ.IMDG_CLSS_CD								BQ_IMDG_CLSS_CD						," ).append("\n"); 
		query.append("				BQ.CTRT_CNTR_QTY							BQ_CTRT_CNTR_QTY					," ).append("\n"); 
		query.append("				BQ.POR_APPL_FLG								BQ_POR_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.POL_APPL_FLG								BQ_POL_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.POD_APPL_FLG								BQ_POD_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.DEL_APPL_FLG								BQ_DEL_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.PRE_RLY_PORT_APPL_FLG			BQ_POR_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("				BQ.PST_RLY_PORT_APPL_FLG			BQ_PST_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.CMDT_HDR_SEQ								RT_CMDT_HDR_SEQ						," ).append("\n"); 
		query.append("				RT.ROUT_SEQ										RT_ROUT_SEQ								," ).append("\n"); 
		query.append("				RT.RT_SEQ											RT_RT_SEQ									," ).append("\n"); 
		query.append("				0															OA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("				DA.ADD_CHG_SEQ								DA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.CM_PRC_CMDT_TP_CD					CM_PRC_CMDT_TP_CD					," ).append("\n"); 
		query.append("				RT.CM_PRC_CMDT_DEF_CD					CM_PRC_CMDT_DEF_CD				," ).append("\n"); 
		query.append("				RT.OP_ROUT_PNT_LOC_DEF_CD			POR_CD										," ).append("\n"); 
		query.append("				'N/A'													POL_CD										," ).append("\n"); 
		query.append("				RT.DV_ROUT_VIA_PORT_DEF_CD		POD_CD										," ).append("\n"); 
		query.append("				DA.ROUT_PNT_LOC_DEF_CD				DEL_CD										," ).append("\n"); 
		query.append("				RT.OP_RCV_DE_TERM_CD					RCV_TERM_CD								," ).append("\n"); 
		query.append("				DA.RCV_DE_TERM_CD							DE_TERM_CD								," ).append("\n"); 
		query.append("				RT.RAT_UT_CD									RAT_UT_CD									," ).append("\n"); 
		query.append("				RT.PRC_CGO_TP_CD							PRC_CGO_TP_CD							," ).append("\n"); 
		query.append("				RT.CURR_CD										CURR_CD										," ).append("\n"); 
		query.append("				RT.OP_PRC_TRSP_MOD_CD					ORG_TRSP_MOD_CD						," ).append("\n"); 
		query.append("				DA.PRC_TRSP_MOD_CD						DEST_TRSP_MOD_CD					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.OP_ROUT_PNT_LOC_DEF_CD			OP_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				'N/A'													OV_ROUT_VIA_PORT_DEF_CD		," ).append("\n"); 
		query.append("				RT.DV_ROUT_VIA_PORT_DEF_CD		DV_ROUT_VIA_PORT_DEF_CD		," ).append("\n"); 
		query.append("				RT.DP_ROUT_PNT_LOC_DEF_CD			DP_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				RT.RAT_UT_CD									RT_RAT_UT_CD							," ).append("\n"); 
		query.append("				RT.PRC_CGO_TP_CD							RT_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				RT.OP_PRC_TRSP_MOD_CD					OP_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				RT.DP_PRC_TRSP_MOD_CD					DP_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				RT.CURR_CD										RT_CURR_CD								," ).append("\n"); 
		query.append("				RT.FNL_FRT_RT_AMT							RT_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				NULL													OA_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				NULL													OA_BSE_PORT_DEF_CD				," ).append("\n"); 
		query.append("				NULL													OA_RAT_UT_CD							," ).append("\n"); 
		query.append("				NULL													OA_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				NULL													OA_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				NULL													OA_RCV_DE_TERM_CD					," ).append("\n"); 
		query.append("				NULL													OA_CURR_CD								," ).append("\n"); 
		query.append("				NULL													OA_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("				NULL													OA_RAT_UT_MTCH_PRIO				," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				DA.ROUT_PNT_LOC_DEF_CD				DA_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				DA.BSE_PORT_DEF_CD						DA_BSE_PORT_DEF_CD				," ).append("\n"); 
		query.append("				DA.RAT_UT_CD									DA_RAT_UT_CD							," ).append("\n"); 
		query.append("				DA.PRC_CGO_TP_CD							DA_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				DA.PRC_TRSP_MOD_CD						DA_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				DA.RCV_DE_TERM_CD							DA_RCV_DE_TERM_CD					," ).append("\n"); 
		query.append("				DA.CURR_CD										DA_CURR_CD								," ).append("\n"); 
		query.append("				DA.FNL_FRT_RT_AMT							DA_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("				DA.RAT_UT_MTCH_PRIO						DA_RAT_UT_MTCH_PRIO				," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT_APP.BKG_CONV_TP_CD      		RT_APP_BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_MAPG_ID   		RT_APP_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_SEQ       		RT_APP_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_RULE_CD   		RT_APP_NOTE_CONV_RULE_CD  ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_TP_CD     		RT_APP_NOTE_CONV_TP_CD    ," ).append("\n"); 
		query.append("				RT_APP.RT_OP_CD            		RT_APP_RT_OP_CD           ," ).append("\n"); 
		query.append("				RT_APP.CURR_CD             		RT_APP_CURR_CD            ," ).append("\n"); 
		query.append("				RT_APP.FRT_RT_AMT          		RT_APP_FRT_RT_AMT         ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT_RAS.BKG_CONV_TP_CD      		RT_RAS_BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_MAPG_ID   		RT_RAS_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_SEQ       		RT_RAS_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_RULE_CD   		RT_RAS_NOTE_CONV_RULE_CD  ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_TP_CD     		RT_RAS_NOTE_CONV_TP_CD    ," ).append("\n"); 
		query.append("				RT_RAS.RT_OP_CD            		RT_RAS_RT_OP_CD           ," ).append("\n"); 
		query.append("				RT_RAS.CURR_CD             		RT_RAS_CURR_CD            ," ).append("\n"); 
		query.append("				RT_RAS.FRT_RT_AMT          		RT_RAS_FRT_RT_AMT					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.POR_MTCH_FLG								POR_MTCH_FLG							," ).append("\n"); 
		query.append("				DA.DEL_MTCH_FLG								DEL_MTCH_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("JOIN TABLE" ).append("\n"); 
		query.append("1.1 BQ, DA, RT" ).append("\n"); 
		query.append("1.2 RT RULE					: APP, RAS" ).append("\n"); 
		query.append("2.1 OA							: X" ).append("\n"); 
		query.append("2.2 OA RULE					: X" ).append("\n"); 
		query.append("3.1 DA							: O" ).append("\n"); 
		query.append("3.2 DA RULE					: X" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("				BQ	," ).append("\n"); 
		query.append("				DA	," ).append("\n"); 
		query.append("				RT	," ).append("\n"); 
		query.append("				NC_P											RT_APP	," ).append("\n"); 
		query.append("				NC_P											RT_RAS" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WHERE		RT.BKG_NO = BQ.BKG_NO AND RT.BQ_SEQ = BQ.BQ_SEQ" ).append("\n"); 
		query.append("AND			DA.BKG_NO = BQ.BKG_NO AND DA.BQ_SEQ = BQ.BQ_SEQ" ).append("\n"); 
		query.append("AND			RT_APP.BKG_NO(+)	= RT.BKG_NO AND RT_APP.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_APP.NOTE_CONV_RULE_CD(+)	= 'APP' AND RT_APP.NC_SEQ(+)	= RT.APP_NC_SEQ" ).append("\n"); 
		query.append("AND			RT_RAS.BKG_NO(+)	= RT.BKG_NO AND RT_RAS.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_RAS.NOTE_CONV_RULE_CD(+)	= 'RAS' AND RT_RAS.NC_SEQ(+)	= RT.RAS_NC_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	3.1 ROUTE / TERM / TRANS MODE" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( RT.OP_ROUT_PNT_LOC_TP_CD, RT.OP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.POR_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.POR_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.POL_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				WHERE		( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' )" ).append("\n"); 
		query.append("				AND			GL.LOC_CD		= BQ.POL_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< RCV TERM >" ).append("\n"); 
		query.append("예외적으로 POR_MTCH_FLG = 'N' 일 경우에, BKG : 'D', RFA : 'Y' 가 허용된다." ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("						(" ).append("\n"); 
		query.append("								RT.POR_MTCH_FLG 			= 'Y'" ).append("\n"); 
		query.append("						AND	NVL(RT.OP_RCV_DE_TERM_CD, BQ.RCV_TERM_CD) = BQ.RCV_TERM_CD" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								RT.POR_MTCH_FLG 			= 'N'" ).append("\n"); 
		query.append("						AND	BQ.POR_CD							<> BQ.POL_CD" ).append("\n"); 
		query.append("						AND	(" ).append("\n"); 
		query.append("										NVL(RT.OP_RCV_DE_TERM_CD, BQ.RCV_TERM_CD) = BQ.RCV_TERM_CD" ).append("\n"); 
		query.append("								OR	(" ).append("\n"); 
		query.append("												BQ.RCV_TERM_CD 				= 'D'" ).append("\n"); 
		query.append("										AND	RT.OP_RCV_DE_TERM_CD	= 'Y'" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								RT.POR_MTCH_FLG 								= 'N'" ).append("\n"); 
		query.append("						AND	BQ.POR_CD												= BQ.POL_CD" ).append("\n"); 
		query.append("						AND	NVL(RT.OP_RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN TRANS MODE >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			(" ).append("\n"); 
		query.append("					 	RT.OP_PRC_TRSP_MOD_CD	IS NULL" ).append("\n"); 
		query.append("				OR	RT.OP_PRC_TRSP_MOD_CD	= BQ.ORG_TRNS_MOD_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN VIA >" ).append("\n"); 
		query.append("RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DESTINATION VIA >" ).append("\n"); 
		query.append("RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DESTINATION >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( RT.DP_ROUT_PNT_LOC_TP_CD, RT.DP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.POD_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.POD_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L', BQ.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	3.2 ETC" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* APP */" ).append("\n"); 
		query.append("/*" ).append("\n"); 
		query.append("	RT_APP.RT_APPL_TP_CD 가 NULL (APP 존재하지 않음) 이거나 'S' 인 경우에만 운임을 사용할 수 있다." ).append("\n"); 
		query.append("	그리고 추가적으로 APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재하지 않아야 한다." ).append("\n"); 
		query.append("	APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재한다면," ).append("\n"); 
		query.append("	그것은 BKG 와 다른 조건으로 운임을 사용하도록 APP RULE 이 되어 있다는 것을 의미한다." ).append("\n"); 
		query.append("*/" ).append("\n"); 
		query.append("AND			NVL(RT_APP.RT_APPL_TP_CD, 'S')	= 'S'" ).append("\n"); 
		query.append("AND			NOT EXISTS	(" ).append("\n"); 
		query.append("										SELECT	'X'" ).append("\n"); 
		query.append("										FROM		APP_N	A" ).append("\n"); 
		query.append("										WHERE		A.BQ_SEQ																										= BQ.BQ_SEQ" ).append("\n"); 
		query.append("										AND			DECODE(A.CMDT_HDR_SEQ, 0, RT.CMDT_HDR_SEQ, A.CMDT_HDR_SEQ)	= RT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("										AND			DECODE(A.ROUT_SEQ, 0, RT.ROUT_SEQ, A.ROUT_SEQ)							= RT.ROUT_SEQ" ).append("\n"); 
		query.append("										AND			A.CONV_TP_PRIO																							< RT_APP.CONV_TP_PRIO" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	3.3 DEST ARB" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DE TERM >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("						(		DA.DEL_MTCH_FLG 			= 'Y'" ).append("\n"); 
		query.append("						AND	NVL(DA.RCV_DE_TERM_CD, BQ.DE_TERM_CD)  = BQ.DE_TERM_CD" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								DA.DEL_MTCH_FLG 			= 'N'" ).append("\n"); 
		query.append("						AND	BQ.DEL_CD							<> BQ.POD_CD" ).append("\n"); 
		query.append("						AND	(" ).append("\n"); 
		query.append("											NVL(DA.RCV_DE_TERM_CD, BQ.DE_TERM_CD)  = BQ.DE_TERM_CD" ).append("\n"); 
		query.append("								OR	(" ).append("\n"); 
		query.append("												BQ.DE_TERM_CD 				= 'D'" ).append("\n"); 
		query.append("										AND	DA.RCV_DE_TERM_CD			= 'Y'" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				OR	(" ).append("\n"); 
		query.append("								DA.DEL_MTCH_FLG 								= 'N'" ).append("\n"); 
		query.append("						AND	BQ.DEL_CD												= BQ.POD_CD" ).append("\n"); 
		query.append("						AND	NVL(DA.RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* DEST ARB JOIN ( DARB.BPORT = RATE.DEST ) */" ).append("\n"); 
		query.append("AND			RT.DP_RCV_DE_TERM_CD					<> 'D'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			( RT.DP_ROUT_PNT_LOC_TP_CD,  RT.DP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	DA.BSE_PORT_TP_CD, DA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L', GL.LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		DA.BSE_PORT_TP_CD	= 'G'" ).append("\n"); 
		query.append("				AND		  GL.PRC_GRP_LOC_CD	= DA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		DA.BSE_PORT_TP_CD	= 'L'" ).append("\n"); 
		query.append("				AND			GL.LOC_CD					= DA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	4. PATTERN #4 ( 0110 )" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	'0110'												PRC_RT_MTCH_PATT_CD				," ).append("\n"); 
		query.append("				BQ.SC_NO											CTRT_NO										," ).append("\n"); 
		query.append("				BQ.PROP_NO										PROP_NO										," ).append("\n"); 
		query.append("				BQ.AMDT_SEQ										AMDT_SEQ									," ).append("\n"); 
		query.append("				BQ.SVC_SCP_CD									SVC_SCP_CD								," ).append("\n"); 
		query.append("				BQ.BKG_NO											BKG_NO										," ).append("\n"); 
		query.append("				BQ.BQ_SEQ											BQ_SEQ										," ).append("\n"); 
		query.append("				BQ.BKG_BQ_SEQ									BKG_BQ_SEQ								," ).append("\n"); 
		query.append("				BQ.CNTR_TPSZ_CD								BQ_CNTR_TPSZ_CD						," ).append("\n"); 
		query.append("				BQ.CTRT_CNTR_TPSZ_CD					BQ_CTRT_CNTR_TPSZ_CD			," ).append("\n"); 
		query.append("				BQ.RCV_TERM_CD								BQ_RCV_TERM_CD						," ).append("\n"); 
		query.append("				BQ.DE_TERM_CD									BQ_DE_TERM_CD							," ).append("\n"); 
		query.append("				BQ.DRY_CGO_FLG								BQ_DRY_CGO_FLG						," ).append("\n"); 
		query.append("				BQ.DCGO_FLG										BQ_DCGO_FLG								," ).append("\n"); 
		query.append("				BQ.RC_FLG											BQ_RC_FLG									," ).append("\n"); 
		query.append("				BQ.AWK_CGO_FLG								BQ_AWK_CGO_FLG						," ).append("\n"); 
		query.append("				BQ.BB_CGO_FLG									BQ_BB_CGO_FLG							," ).append("\n"); 
		query.append("				BQ.SOC_FLG										BQ_SOC_FLG								," ).append("\n"); 
		query.append("				BQ.PRC_CGO_TP_CD							BQ_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				BQ.IMDG_CLSS_CD								BQ_IMDG_CLSS_CD						," ).append("\n"); 
		query.append("				BQ.CTRT_CNTR_QTY							BQ_CTRT_CNTR_QTY					," ).append("\n"); 
		query.append("				BQ.POR_APPL_FLG								BQ_POR_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.POL_APPL_FLG								BQ_POL_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.POD_APPL_FLG								BQ_POD_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.DEL_APPL_FLG								BQ_DEL_APPL_FLG						," ).append("\n"); 
		query.append("				BQ.PRE_RLY_PORT_APPL_FLG			BQ_POR_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("				BQ.PST_RLY_PORT_APPL_FLG			BQ_PST_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.CMDT_HDR_SEQ								RT_CMDT_HDR_SEQ						," ).append("\n"); 
		query.append("				RT.ROUT_SEQ										RT_ROUT_SEQ								," ).append("\n"); 
		query.append("				RT.RT_SEQ											RT_RT_SEQ									," ).append("\n"); 
		query.append("				OA.ADD_CHG_SEQ								OA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("				DA.ADD_CHG_SEQ								DA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.CM_PRC_CMDT_TP_CD					CM_PRC_CMDT_TP_CD					," ).append("\n"); 
		query.append("				RT.CM_PRC_CMDT_DEF_CD					CM_PRC_CMDT_DEF_CD				," ).append("\n"); 
		query.append("				OA.ROUT_PNT_LOC_DEF_CD				POR_CD										," ).append("\n"); 
		query.append("				OA.BSE_PORT_DEF_CD						POL_CD										," ).append("\n"); 
		query.append("				RT.DV_ROUT_VIA_PORT_DEF_CD		POD_CD										," ).append("\n"); 
		query.append("				DA.ROUT_PNT_LOC_DEF_CD				DEL_CD										," ).append("\n"); 
		query.append("				OA.RCV_DE_TERM_CD							RCV_TERM_CD								," ).append("\n"); 
		query.append("				DA.RCV_DE_TERM_CD							DE_TERM_CD								," ).append("\n"); 
		query.append("				RT.RAT_UT_CD									RAT_UT_CD									," ).append("\n"); 
		query.append("				RT.PRC_CGO_TP_CD							PRC_CGO_TP_CD							," ).append("\n"); 
		query.append("				RT.CURR_CD										CURR_CD										," ).append("\n"); 
		query.append("				OA.PRC_TRSP_MOD_CD						ORG_TRSP_MOD_CD						," ).append("\n"); 
		query.append("				DA.PRC_TRSP_MOD_CD						DEST_TRSP_MOD_CD					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT.OP_ROUT_PNT_LOC_DEF_CD			OP_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				'N/A'													OV_ROUT_VIA_PORT_DEF_CD		," ).append("\n"); 
		query.append("				RT.DV_ROUT_VIA_PORT_DEF_CD		DV_ROUT_VIA_PORT_DEF_CD		," ).append("\n"); 
		query.append("				RT.DP_ROUT_PNT_LOC_DEF_CD			DP_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				RT.RAT_UT_CD									RT_RAT_UT_CD							," ).append("\n"); 
		query.append("				RT.PRC_CGO_TP_CD							RT_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				RT.OP_PRC_TRSP_MOD_CD					OP_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				RT.DP_PRC_TRSP_MOD_CD					DP_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				RT.CURR_CD										RT_CURR_CD								," ).append("\n"); 
		query.append("				RT.FNL_FRT_RT_AMT							RT_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				OA.ROUT_PNT_LOC_DEF_CD				OA_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				OA.BSE_PORT_DEF_CD						OA_BSE_PORT_DEF_CD				," ).append("\n"); 
		query.append("				OA.RAT_UT_CD									OA_RAT_UT_CD							," ).append("\n"); 
		query.append("				OA.PRC_CGO_TP_CD							OA_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				OA.PRC_TRSP_MOD_CD						OA_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				OA.RCV_DE_TERM_CD							OA_RCV_DE_TERM_CD					," ).append("\n"); 
		query.append("				OA.CURR_CD										OA_CURR_CD								," ).append("\n"); 
		query.append("				OA.FNL_FRT_RT_AMT							OA_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("				OA.RAT_UT_MTCH_PRIO						OA_RAT_UT_MTCH_PRIO				," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				DA.ROUT_PNT_LOC_DEF_CD				DA_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				DA.BSE_PORT_DEF_CD						DA_BSE_PORT_DEF_CD				," ).append("\n"); 
		query.append("				DA.RAT_UT_CD									DA_RAT_UT_CD							," ).append("\n"); 
		query.append("				DA.PRC_CGO_TP_CD							DA_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				DA.PRC_TRSP_MOD_CD						DA_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				DA.RCV_DE_TERM_CD							DA_RCV_DE_TERM_CD					," ).append("\n"); 
		query.append("				DA.CURR_CD										DA_CURR_CD								," ).append("\n"); 
		query.append("				DA.FNL_FRT_RT_AMT							DA_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("				DA.RAT_UT_MTCH_PRIO						DA_RAT_UT_MTCH_PRIO				," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT_APP.BKG_CONV_TP_CD      		RT_APP_BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_MAPG_ID   		RT_APP_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_SEQ       		RT_APP_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_RULE_CD   		RT_APP_NOTE_CONV_RULE_CD  ," ).append("\n"); 
		query.append("				RT_APP.NOTE_CONV_TP_CD     		RT_APP_NOTE_CONV_TP_CD    ," ).append("\n"); 
		query.append("				RT_APP.RT_OP_CD            		RT_APP_RT_OP_CD           ," ).append("\n"); 
		query.append("				RT_APP.CURR_CD             		RT_APP_CURR_CD            ," ).append("\n"); 
		query.append("				RT_APP.FRT_RT_AMT          		RT_APP_FRT_RT_AMT         ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				RT_RAS.BKG_CONV_TP_CD      		RT_RAS_BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_MAPG_ID   		RT_RAS_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_SEQ       		RT_RAS_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_RULE_CD   		RT_RAS_NOTE_CONV_RULE_CD  ," ).append("\n"); 
		query.append("				RT_RAS.NOTE_CONV_TP_CD     		RT_RAS_NOTE_CONV_TP_CD    ," ).append("\n"); 
		query.append("				RT_RAS.RT_OP_CD            		RT_RAS_RT_OP_CD           ," ).append("\n"); 
		query.append("				RT_RAS.CURR_CD             		RT_RAS_CURR_CD            ," ).append("\n"); 
		query.append("				RT_RAS.FRT_RT_AMT          		RT_RAS_FRT_RT_AMT					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				OA.POR_MTCH_FLG								POR_MTCH_FLG							," ).append("\n"); 
		query.append("				DA.DEL_MTCH_FLG								DEL_MTCH_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("JOIN TABLE" ).append("\n"); 
		query.append("1.1 BQ, OA, DA, RT" ).append("\n"); 
		query.append("1.2 RT RULE					: APP, RAS" ).append("\n"); 
		query.append("2.1 OA							: O" ).append("\n"); 
		query.append("2.2 OA RULE					: X" ).append("\n"); 
		query.append("3.1 DA							: O" ).append("\n"); 
		query.append("3.2 DA RULE					: X" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("				BQ	," ).append("\n"); 
		query.append("				OA	," ).append("\n"); 
		query.append("				DA	," ).append("\n"); 
		query.append("				RT	," ).append("\n"); 
		query.append("				NC_P											RT_APP	," ).append("\n"); 
		query.append("				NC_P											RT_RAS" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WHERE		RT.BKG_NO = BQ.BKG_NO AND RT.BQ_SEQ = BQ.BQ_SEQ" ).append("\n"); 
		query.append("AND			OA.BKG_NO = BQ.BKG_NO AND OA.BQ_SEQ = BQ.BQ_SEQ" ).append("\n"); 
		query.append("AND			DA.BKG_NO = BQ.BKG_NO AND DA.BQ_SEQ = BQ.BQ_SEQ" ).append("\n"); 
		query.append("AND			RT_APP.BKG_NO(+)	= RT.BKG_NO AND RT_APP.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_APP.NOTE_CONV_RULE_CD(+)	= 'APP' AND RT_APP.NC_SEQ(+)	= RT.APP_NC_SEQ" ).append("\n"); 
		query.append("AND			RT_RAS.BKG_NO(+)	= RT.BKG_NO AND RT_RAS.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_RAS.NOTE_CONV_RULE_CD(+)	= 'RAS' AND RT_RAS.NC_SEQ(+)	= RT.RAS_NC_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	4.1 ROUTE / TERM / TRANS MODE" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( RT.OP_ROUT_PNT_LOC_TP_CD, RT.OP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.POL_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.POL_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L', BQ.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< ORIGIN VIA >" ).append("\n"); 
		query.append("RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DESTINATION VIA >" ).append("\n"); 
		query.append("RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< DESTINATION >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND     ( RT.DP_ROUT_PNT_LOC_TP_CD, RT.DP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	'L',	BQ.POD_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.POD_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L', BQ.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT  'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		GL.LOC_CD		= BQ.PST_RLY_PORT_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	4.2 ETC" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* APP */" ).append("\n"); 
		query.append("/*" ).append("\n"); 
		query.append("	RT_APP.RT_APPL_TP_CD 가 NULL (APP 존재하지 않음) 이거나 'S' 인 경우에만 운임을 사용할 수 있다." ).append("\n"); 
		query.append("	그리고 추가적으로 APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재하지 않아야 한다." ).append("\n"); 
		query.append("	APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재한다면," ).append("\n"); 
		query.append("	그것은 BKG 와 다른 조건으로 운임을 사용하도록 APP RULE 이 되어 있다는 것을 의미한다." ).append("\n"); 
		query.append("*/" ).append("\n"); 
		query.append("AND			NVL(RT_APP.RT_APPL_TP_CD, 'S')	= 'S'" ).append("\n"); 
		query.append("AND			NOT EXISTS	(" ).append("\n"); 
		query.append("										SELECT	'X'" ).append("\n"); 
		query.append("										FROM		APP_N	A" ).append("\n"); 
		query.append("										WHERE		A.BQ_SEQ																										= BQ.BQ_SEQ" ).append("\n"); 
		query.append("										AND			DECODE(A.CMDT_HDR_SEQ, 0, RT.CMDT_HDR_SEQ, A.CMDT_HDR_SEQ)	= RT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("										AND			DECODE(A.ROUT_SEQ, 0, RT.ROUT_SEQ, A.ROUT_SEQ)							= RT.ROUT_SEQ" ).append("\n"); 
		query.append("										AND			A.CONV_TP_PRIO																							< RT_APP.CONV_TP_PRIO" ).append("\n"); 
		query.append("										)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	4.3 ORIGIN ARB - JOIN" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* ORIGIN ARB JOIN ( OARB.BPORT = RATE.ORIGIN ) */" ).append("\n"); 
		query.append("AND			RT.OP_RCV_DE_TERM_CD					<> 'D'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			( RT.OP_ROUT_PNT_LOC_TP_CD,  RT.OP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	OA.BSE_PORT_TP_CD, OA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L', GL.LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		OA.BSE_PORT_TP_CD	= 'G'" ).append("\n"); 
		query.append("				AND		  GL.PRC_GRP_LOC_CD	= OA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		OA.BSE_PORT_TP_CD	= 'L'" ).append("\n"); 
		query.append("				AND			GL.LOC_CD					= OA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("	4.4 DEST ARB - JOIN" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* DEST ARB JOIN ( DARB.BPORT = RATE.DEST ) */" ).append("\n"); 
		query.append("AND			RT.DP_RCV_DE_TERM_CD					<> 'D'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND			( RT.DP_ROUT_PNT_LOC_TP_CD,  RT.DP_ROUT_PNT_LOC_DEF_CD ) IN" ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	DA.BSE_PORT_TP_CD, DA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				FROM		DUAL" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'L', GL.LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		DA.BSE_PORT_TP_CD	= 'G'" ).append("\n"); 
		query.append("				AND		  GL.PRC_GRP_LOC_CD	= DA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT	'G', GL.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("				FROM		GL" ).append("\n"); 
		query.append("				WHERE		DA.BSE_PORT_TP_CD	= 'L'" ).append("\n"); 
		query.append("				AND			GL.LOC_CD					= DA.BSE_PORT_DEF_CD" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	R.CTRT_NO										CTRT_NO										," ).append("\n"); 
		query.append("				R.PRC_RT_MTCH_PATT_CD				PRC_RT_MTCH_PATT_CD				," ).append("\n"); 
		query.append("				R.PROP_NO										PROP_NO										," ).append("\n"); 
		query.append("				R.AMDT_SEQ									AMDT_SEQ									," ).append("\n"); 
		query.append("				R.SVC_SCP_CD								SVC_SCP_CD								," ).append("\n"); 
		query.append("				R.BQ_SEQ										BQ_SEQ										," ).append("\n"); 
		query.append("				R.BKG_BQ_SEQ								BKG_BQ_SEQ								," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* BKG_AUTO_RT_OCN_FRT_TMP 에 임시 저장할 칼럼 START */" ).append("\n"); 
		query.append("				R.BQ_CNTR_TPSZ_CD						CNTR_TPSZ_CD							," ).append("\n"); 
		query.append("				R.BQ_CTRT_CNTR_TPSZ_CD			CTRT_CNTR_TPSZ_CD					," ).append("\n"); 
		query.append("				R.BQ_RCV_TERM_CD						RCV_TERM_CD								," ).append("\n"); 
		query.append("				R.BQ_DE_TERM_CD							DE_TERM_CD								," ).append("\n"); 
		query.append("				R.BQ_DRY_CGO_FLG						DRY_CGO_FLG								," ).append("\n"); 
		query.append("				R.BQ_AWK_CGO_FLG						AWK_CGO_FLG								," ).append("\n"); 
		query.append("				R.BQ_DCGO_FLG								DCGO_FLG									," ).append("\n"); 
		query.append("				R.BQ_RC_FLG									RC_FLG										," ).append("\n"); 
		query.append("				R.BQ_BB_CGO_FLG							BB_CGO_FLG								," ).append("\n"); 
		query.append("				R.BQ_SOC_FLG								SOC_FLG										," ).append("\n"); 
		query.append("				R.BQ_IMDG_CLSS_CD						IMDG_CLSS_CD							," ).append("\n"); 
		query.append("				R.RT_CMDT_HDR_SEQ						PRC_CMDT_HDR_SEQ					," ).append("\n"); 
		query.append("				R.RT_ROUT_SEQ								PRC_ROUT_SEQ							," ).append("\n"); 
		query.append("				R.RT_RT_SEQ									PRC_RT_SEQ								," ).append("\n"); 
		query.append("/* BKG_AUTO_RT_OCN_FRT_TMP 에 임시 저장할 칼럼 END */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* UI GRID START */" ).append("\n"); 
		query.append("				R.PRC_RT_MTCH_PATT_CD				RT_MTCH_PATT_CD						," ).append("\n"); 
		query.append("				CASE" ).append("\n"); 
		query.append("				WHEN CM_PRC_CMDT_TP_CD = 'C' THEN (	SELECT CMDT_NM" ).append("\n"); 
		query.append("																						FROM MDM_COMMODITY A" ).append("\n"); 
		query.append("																						WHERE A.CMDT_CD = R.CM_PRC_CMDT_DEF_CD	)" ).append("\n"); 
		query.append("				WHEN CM_PRC_CMDT_TP_CD = 'G' THEN	(	SELECT PRC_GRP_CMDT_DESC" ).append("\n"); 
		query.append("																				 		FROM PRI_SP_SCP_GRP_CMDT A" ).append("\n"); 
		query.append("																				 		WHERE A.PROP_NO = R.PROP_NO AND A.AMDT_SEQ = R.AMDT_SEQ AND A.SVC_SCP_CD = R.SVC_SCP_CD AND A.PRC_GRP_CMDT_CD = R.CM_PRC_CMDT_DEF_CD	)" ).append("\n"); 
		query.append("				END	CMDT_NM																						," ).append("\n"); 
		query.append("				R.POR_CD										POR_CD										," ).append("\n"); 
		query.append("				R.POL_CD										POL_CD										," ).append("\n"); 
		query.append("				R.POD_CD										POD_CD										," ).append("\n"); 
		query.append("				R.DEL_CD										DEL_CD										," ).append("\n"); 
		query.append("				R.RCV_TERM_CD||'/'||R.DE_TERM_CD						RCV_DE_TERM_CD	,	" ).append("\n"); 
		query.append("				R.RAT_UT_CD									RAT_UT_CD									," ).append("\n"); 
		query.append("				R.PRC_CGO_TP_CD							PRC_CGO_TP_CD							," ).append("\n"); 
		query.append("				R.CURR_CD										CURR_CD										," ).append("\n"); 
		query.append("				R.ORG_TRSP_MOD_CD						ORG_TRSP_MOD_CD						," ).append("\n"); 
		query.append("				R.DEST_TRSP_MOD_CD					DEST_TRSP_MOD_CD					," ).append("\n"); 
		query.append("				0														FNL_FRT_RT_AMT						," ).append("\n"); 
		query.append("				R.ORG_TRSP_MOD_CD||'/'||R.DEST_TRSP_MOD_CD	TRNS_MOD_CD			," ).append("\n"); 
		query.append("				R.BQ_CTRT_CNTR_QTY					OP_CNTR_QTY								," ).append("\n"); 
		query.append("				RN.NOTE_CTNT								NOTE_CTNT									," ).append("\n"); 
		query.append("				'NOTE'											NOTE											," ).append("\n"); 
		query.append("				'DTL'												DTL												," ).append("\n"); 
		query.append("/* UI GRID END */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* CHARGE UI 에 필요 속성 START */" ).append("\n"); 
		query.append("				R.BQ_PRC_CGO_TP_CD					CGO_CATE_CD								," ).append("\n"); 
		query.append("/* CHARGE UI 에 필요 속성 END */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				R.BQ_POR_APPL_FLG						BQ_POR_APPL_FLG						," ).append("\n"); 
		query.append("				R.BQ_POL_APPL_FLG						BQ_POL_APPL_FLG						," ).append("\n"); 
		query.append("				R.BQ_POD_APPL_FLG						BQ_POD_APPL_FLG						," ).append("\n"); 
		query.append("				R.BQ_DEL_APPL_FLG						BQ_DEL_APPL_FLG						," ).append("\n"); 
		query.append("				R.BQ_POR_RLY_PORT_APPL_FLG	BQ_POR_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("				R.BQ_PST_RLY_PORT_APPL_FLG	BQ_PST_RLY_PORT_APPL_FLG	," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				R.OA_ADD_CHG_SEQ						OA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("				R.DA_ADD_CHG_SEQ						DA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("                                                               " ).append("\n"); 
		query.append("                                                               " ).append("\n"); 
		query.append("				R.CM_PRC_CMDT_TP_CD					CM_PRC_CMDT_TP_CD					," ).append("\n"); 
		query.append("				R.CM_PRC_CMDT_DEF_CD				CM_PRC_CMDT_DEF_CD				," ).append("\n"); 
		query.append("				R.RCV_TERM_CD								RCV_TERM_CD								," ).append("\n"); 
		query.append("				R.DE_TERM_CD								DE_TERM_CD								," ).append("\n"); 
		query.append("                                                               " ).append("\n"); 
		query.append("				R.OP_ROUT_PNT_LOC_DEF_CD		OP_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				R.OV_ROUT_VIA_PORT_DEF_CD		OV_ROUT_VIA_PORT_DEF_CD		," ).append("\n"); 
		query.append("				R.DV_ROUT_VIA_PORT_DEF_CD		DV_ROUT_VIA_PORT_DEF_CD		," ).append("\n"); 
		query.append("				R.DP_ROUT_PNT_LOC_DEF_CD		DP_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("                                                               " ).append("\n"); 
		query.append("				R.OP_PRC_TRSP_MOD_CD				OP_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				R.DP_PRC_TRSP_MOD_CD				DP_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("                                                               " ).append("\n"); 
		query.append("				R.RT_RAT_UT_CD							RT_RAT_UT_CD							," ).append("\n"); 
		query.append("				R.RT_PRC_CGO_TP_CD					RT_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				R.RT_CURR_CD								RT_CURR_CD								," ).append("\n"); 
		query.append("				R.RT_FNL_FRT_RT_AMT					RT_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("                                                               " ).append("\n"); 
		query.append("				R.OA_ROUT_PNT_LOC_DEF_CD		OA_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				R.OA_BSE_PORT_DEF_CD				OA_BSE_PORT_DEF_CD				," ).append("\n"); 
		query.append("				R.OA_RAT_UT_CD							OA_RAT_UT_CD							," ).append("\n"); 
		query.append("				R.OA_PRC_CGO_TP_CD					OA_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				R.OA_PRC_TRSP_MOD_CD				OA_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				R.OA_RCV_DE_TERM_CD					OA_RCV_DE_TERM_CD					," ).append("\n"); 
		query.append("				R.OA_CURR_CD								OA_CURR_CD								," ).append("\n"); 
		query.append("				R.OA_FNL_FRT_RT_AMT					OA_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("                                                               " ).append("\n"); 
		query.append("				R.DA_ROUT_PNT_LOC_DEF_CD		DA_ROUT_PNT_LOC_DEF_CD		," ).append("\n"); 
		query.append("				R.DA_BSE_PORT_DEF_CD				DA_BSE_PORT_DEF_CD				," ).append("\n"); 
		query.append("				R.DA_RAT_UT_CD							DA_RAT_UT_CD							," ).append("\n"); 
		query.append("				R.DA_PRC_CGO_TP_CD					DA_PRC_CGO_TP_CD					," ).append("\n"); 
		query.append("				R.DA_PRC_TRSP_MOD_CD				DA_PRC_TRSP_MOD_CD				," ).append("\n"); 
		query.append("				R.DA_RCV_DE_TERM_CD					DA_RCV_DE_TERM_CD					," ).append("\n"); 
		query.append("				R.DA_CURR_CD								DA_CURR_CD								," ).append("\n"); 
		query.append("				R.DA_FNL_FRT_RT_AMT					DA_FNL_FRT_RT_AMT					," ).append("\n"); 
		query.append("                                                               " ).append("\n"); 
		query.append("				R.RT_APP_BKG_CONV_TP_CD     RT_APP_BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("				R.RT_APP_NOTE_CONV_MAPG_ID  RT_APP_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("				R.RT_APP_NOTE_CONV_SEQ      RT_APP_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("				R.RT_APP_NOTE_CONV_RULE_CD  RT_APP_NOTE_CONV_RULE_CD  ," ).append("\n"); 
		query.append("				R.RT_APP_NOTE_CONV_TP_CD    RT_APP_NOTE_CONV_TP_CD    ," ).append("\n"); 
		query.append("				R.RT_APP_RT_OP_CD           RT_APP_RT_OP_CD           ," ).append("\n"); 
		query.append("				R.RT_APP_CURR_CD            RT_APP_CURR_CD            ," ).append("\n"); 
		query.append("				R.RT_APP_FRT_RT_AMT         RT_APP_FRT_RT_AMT         ," ).append("\n"); 
		query.append("                                                               " ).append("\n"); 
		query.append("				R.RT_RAS_BKG_CONV_TP_CD     RT_RAS_BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("				R.RT_RAS_NOTE_CONV_MAPG_ID  RT_RAS_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("				R.RT_RAS_NOTE_CONV_SEQ      RT_RAS_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("				R.RT_RAS_NOTE_CONV_RULE_CD  RT_RAS_NOTE_CONV_RULE_CD  ," ).append("\n"); 
		query.append("				R.RT_RAS_NOTE_CONV_TP_CD    RT_RAS_NOTE_CONV_TP_CD    ," ).append("\n"); 
		query.append("				R.RT_RAS_RT_OP_CD           RT_RAS_RT_OP_CD           ," ).append("\n"); 
		query.append("				R.RT_RAS_CURR_CD            RT_RAS_CURR_CD            ," ).append("\n"); 
		query.append("				R.RT_RAS_FRT_RT_AMT					RT_RAS_FRT_RT_AMT					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				R.POR_MTCH_FLG							POR_MTCH_FLG							," ).append("\n"); 
		query.append("				R.DEL_MTCH_FLG							DEL_MTCH_FLG							," ).append("\n"); 
		query.append("				" ).append("\n"); 
		query.append("				DECODE(R.POR_CD, R.POL_CD, 'N', 'Y')	OIH_FLG					," ).append("\n"); 
		query.append("				DECODE(R.DEL_CD, R.POD_CD, 'N', 'Y')	DIH_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM		(" ).append("\n"); 
		query.append("				SELECT	R.*			," ).append("\n"); 
		query.append("								ROW_NUMBER() OVER (	PARTITION BY" ).append("\n"); 
		query.append("																			R.BKG_BQ_SEQ								," ).append("\n"); 
		query.append("																			R.RT_CMDT_HDR_SEQ						," ).append("\n"); 
		query.append("																			R.RT_ROUT_SEQ								," ).append("\n"); 
		query.append("																			R.RT_RT_SEQ									," ).append("\n"); 
		query.append("																			R.OA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("																			R.DA_ADD_CHG_SEQ						," ).append("\n"); 
		query.append("																			R.RT_APP_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("																			R.RT_APP_NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("																			R.RT_RAS_NOTE_CONV_MAPG_ID  ," ).append("\n"); 
		query.append("																			R.RT_RAS_NOTE_CONV_SEQ" ).append("\n"); 
		query.append("																		ORDER BY" ).append("\n"); 
		query.append("																			DECODE(R.BQ_POR_APPL_FLG,'Y', 1, 0)" ).append("\n"); 
		query.append("																			+ DECODE(R.BQ_POL_APPL_FLG,'Y', 1, 0)" ).append("\n"); 
		query.append("																			+ DECODE(R.BQ_POD_APPL_FLG,'Y', 1, 0)" ).append("\n"); 
		query.append("																			+ DECODE(R.BQ_DEL_APPL_FLG,'Y', 1, 0)" ).append("\n"); 
		query.append("																			+ DECODE(R.BQ_POR_RLY_PORT_APPL_FLG,'Y', 1, 0)" ).append("\n"); 
		query.append("																			+ DECODE(R.BQ_PST_RLY_PORT_APPL_FLG,'Y', 1, 0)" ).append("\n"); 
		query.append("																	)	ROW_NUMBER" ).append("\n"); 
		query.append("				FROM		(" ).append("\n"); 
		query.append("								SELECT	R.*	," ).append("\n"); 
		query.append("												RANK() OVER (	PARTITION BY" ).append("\n"); 
		query.append("																				R.BQ_SEQ										," ).append("\n"); 
		query.append("																				R.PRC_RT_MTCH_PATT_CD				," ).append("\n"); 
		query.append("																				R.RT_CMDT_HDR_SEQ						," ).append("\n"); 
		query.append("																				R.RT_ROUT_SEQ								," ).append("\n"); 
		query.append("																				R.RT_RT_SEQ" ).append("\n"); 
		query.append("																			ORDER BY" ).append("\n"); 
		query.append("																				NVL(R.OA_RAT_UT_MTCH_PRIO, 0)	DESC					," ).append("\n"); 
		query.append("																				NVL(R.DA_RAT_UT_MTCH_PRIO, 0)	DESC" ).append("\n"); 
		query.append("																		)	ARB_MTCH_PRIO" ).append("\n"); 
		query.append("								FROM		RATE	R" ).append("\n"); 
		query.append("								)	R" ).append("\n"); 
		query.append("				WHERE		R.ARB_MTCH_PRIO = 1" ).append("\n"); 
		query.append("				)	R	," ).append("\n"); 
		query.append("				(" ).append("\n"); 
		query.append("				SELECT	PROP_NO						," ).append("\n"); 
		query.append("				        AMDT_SEQ					," ).append("\n"); 
		query.append("				        SVC_SCP_CD				," ).append("\n"); 
		query.append("				        CMDT_HDR_SEQ			," ).append("\n"); 
		query.append("				        ROUT_SEQ					," ).append("\n"); 
		query.append("								REPLACE(LTRIM(SYS_CONNECT_BY_PATH(NOTE_CTNT,'@*'),'@*'), '@*', CHR(13)||CHR(10)||CHR(13)||CHR(10))	NOTE_CTNT" ).append("\n"); 
		query.append("				FROM		(" ).append("\n"); 
		query.append("								SELECT	RN.PROP_NO						," ).append("\n"); 
		query.append("												RN.AMDT_SEQ						," ).append("\n"); 
		query.append("												RN.SVC_SCP_CD					," ).append("\n"); 
		query.append("												RN.CMDT_HDR_SEQ				," ).append("\n"); 
		query.append("												RN.ROUT_SEQ						," ).append("\n"); 
		query.append("								        ROW_NUMBER() OVER ( PARTITION BY RN.PROP_NO, RN.AMDT_SEQ, RN.SVC_SCP_CD, RN.CMDT_HDR_SEQ, RN.ROUT_SEQ ORDER BY RN.ROUT_NOTE_SEQ ) ROW_NUMBER	," ).append("\n"); 
		query.append("												COUNT(1) OVER ( PARTITION BY RN.PROP_NO, RN.AMDT_SEQ, RN.SVC_SCP_CD, RN.CMDT_HDR_SEQ, RN.ROUT_SEQ )	CNT	," ).append("\n"); 
		query.append("												RN.ROUT_NOTE_SEQ ||'. '||RN.NOTE_CTNT NOTE_CTNT" ).append("\n"); 
		query.append("								FROM		(" ).append("\n"); 
		query.append("												SELECT	DISTINCT" ).append("\n"); 
		query.append("																PROP_NO								," ).append("\n"); 
		query.append("																AMDT_SEQ							," ).append("\n"); 
		query.append("																SVC_SCP_CD						," ).append("\n"); 
		query.append("																RT_CMDT_HDR_SEQ				," ).append("\n"); 
		query.append("																RT_ROUT_SEQ" ).append("\n"); 
		query.append("												FROM		RATE" ).append("\n"); 
		query.append("												)	A	," ).append("\n"); 
		query.append("												PRI_RP_SCP_RT_CMDT_RNOTE RN" ).append("\n"); 
		query.append("								WHERE		RN.PROP_NO						= A.PROP_NO" ).append("\n"); 
		query.append("								AND			RN.AMDT_SEQ						= A.AMDT_SEQ" ).append("\n"); 
		query.append("								AND			RN.SVC_SCP_CD					= A.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND			RN.CMDT_HDR_SEQ				= A.RT_CMDT_HDR_SEQ" ).append("\n"); 
		query.append("								AND			RN.ROUT_SEQ						= A.RT_ROUT_SEQ" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("				WHERE		LEVEL		= CNT" ).append("\n"); 
		query.append("				START WITH ROW_NUMBER = 1" ).append("\n"); 
		query.append("				CONNECT BY" ).append("\n"); 
		query.append("								PROP_NO 					= PRIOR PROP_NO" ).append("\n"); 
		query.append("				AND			AMDT_SEQ					= PRIOR AMDT_SEQ" ).append("\n"); 
		query.append("				AND			SVC_SCP_CD				= PRIOR SVC_SCP_CD" ).append("\n"); 
		query.append("				AND			CMDT_HDR_SEQ			= PRIOR CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND     ROUT_SEQ					= PRIOR ROUT_SEQ" ).append("\n"); 
		query.append("				AND			ROW_NUMBER				= PRIOR ROW_NUMBER + 1" ).append("\n"); 
		query.append("				)	RN" ).append("\n"); 
		query.append("WHERE		RN.PROP_NO(+)						= R.PROP_NO" ).append("\n"); 
		query.append("AND			RN.AMDT_SEQ(+)					= R.AMDT_SEQ" ).append("\n"); 
		query.append("AND			RN.SVC_SCP_CD(+)				= R.SVC_SCP_CD" ).append("\n"); 
		query.append("AND			RN.CMDT_HDR_SEQ(+)			= R.RT_CMDT_HDR_SEQ" ).append("\n"); 
		query.append("AND			RN.ROUT_SEQ(+)					= R.RT_ROUT_SEQ" ).append("\n"); 
		query.append("AND			R.ROW_NUMBER						= 1" ).append("\n"); 

	}
}