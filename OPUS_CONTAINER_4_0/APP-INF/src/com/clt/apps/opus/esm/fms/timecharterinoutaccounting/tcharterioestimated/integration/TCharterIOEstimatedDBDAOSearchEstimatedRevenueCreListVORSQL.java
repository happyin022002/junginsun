/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : TCharterIOEstimatedDBDAOSearchEstimatedRevenueCreListVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.11.26
*@LastModifier : 
*@LastVersion : 1.0
* 2015.11.26 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.fms.timecharterinoutaccounting.tcharterioestimated.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class TCharterIOEstimatedDBDAOSearchEstimatedRevenueCreListVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Estimate Revenue Creation
	  * </pre>
	  */
	public TCharterIOEstimatedDBDAOSearchEstimatedRevenueCreListVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("to_duration",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("re_divr_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fr_duration",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("est_type",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("exe_yrmon",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.fms.timecharterinoutaccounting.tcharterioestimated.integration").append("\n"); 
		query.append("FileName : TCharterIOEstimatedDBDAOSearchEstimatedRevenueCreListVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("--/*계약 Data*/" ).append("\n"); 
		query.append("WITH V_FMS_CONTRACT AS (" ).append("\n"); 
		query.append("        SELECT DISTINCT VSL_CD" ).append("\n"); 
		query.append("             , FLET_CTRT_NO" ).append("\n"); 
		query.append("             , FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("             , FLET_CTRT_FACT_CD" ).append("\n"); 
		query.append("             , ACMM_RT_AMT" ).append("\n"); 
		query.append("          FROM FMS_CONTRACT" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("           AND FLET_CTRT_FACT_CD = 'ACT'" ).append("\n"); 
		query.append("           AND DELT_FLG = 'N'" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_FMS_CONTRACT;" ).append("\n"); 
		query.append("--/*Prepayment Settlement VVD Data : Contract Hire Data.*/" ).append("\n"); 
		query.append(",   V_FMS_VVD AS (" ).append("\n"); 
		query.append("        SELECT A.*" ).append("\n"); 
		query.append("          FROM (" ).append("\n"); 
		query.append("                SELECT DISTINCT G.EXE_YRMON" ).append("\n"); 
		query.append("                     , V.REV_YRMON" ).append("\n"); 
		query.append("                     , V.RLANE_CD" ).append("\n"); 
		query.append("                     , V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD||V.REV_DIR_CD AS VVD_CD" ).append("\n"); 
		query.append("                     , V.VSL_CD" ).append("\n"); 
		query.append("                     , V.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , V.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , V.REV_DIR_CD" ).append("\n"); 
		query.append("                     , V.VST_DT" ).append("\n"); 
		query.append("                     , V.VED_DT" ).append("\n"); 
		query.append("                     , C.FLET_CTRT_NO" ).append("\n"); 
		query.append("                     , C.FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                     , C.FLET_CTRT_FACT_CD" ).append("\n"); 
		query.append("                     , C.ACMM_RT_AMT" ).append("\n"); 
		query.append("                     , (SELECT DECODE(M.REP_TRD_CD,'COM','Y','N') " ).append("\n"); 
		query.append("                          FROM MDM_REV_LANE M" ).append("\n"); 
		query.append("                         WHERE M.RLANE_CD = G.RLANE_CD" ).append("\n"); 
		query.append("                        ) AS COM_VVD_FLG" ).append("\n"); 
		query.append("                  FROM FMS_VVD V" ).append("\n"); 
		query.append("                     , GL_ESTM_REV_VVD G" ).append("\n"); 
		query.append("                     , V_FMS_CONTRACT C" ).append("\n"); 
		query.append("                 WHERE 1=1" ).append("\n"); 
		query.append("                   AND G.EXE_YRMON      = REPLACE(@[exe_yrmon],'-') " ).append("\n"); 
		query.append("                   AND G.REV_YRMON      BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')" ).append("\n"); 
		query.append("                   AND G.ESTM_VVD_TP_CD = @[est_type]" ).append("\n"); 
		query.append("                   AND G.VSL_CD         = V.VSL_CD" ).append("\n"); 
		query.append("                   AND G.SKD_VOY_NO     = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                   AND G.SKD_DIR_CD     = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                   AND G.REV_DIR_CD     = V.REV_DIR_CD " ).append("\n"); 
		query.append("                   AND V.REV_YRMON      BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')" ).append("\n"); 
		query.append("                   AND V.VSL_CD         = C.VSL_CD " ).append("\n"); 
		query.append("              ) A" ).append("\n"); 
		query.append("        WHERE 1=1" ).append("\n"); 
		query.append("          AND ((A.FLET_CTRT_TP_CD = 'TI' AND A.COM_VVD_FLG = 'N') OR (A.FLET_CTRT_TP_CD = 'TO' AND A.COM_VVD_FLG = 'Y'))" ).append("\n"); 
		query.append("        ORDER BY A.EXE_YRMON, A.VVD_CD, A.REV_YRMON          " ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_FMS_VVD;" ).append("\n"); 
		query.append("--/* Other Account data(Except prepayments) 을 위한 VVD Data.*/" ).append("\n"); 
		query.append(",   V_FMS_VVD_OTR AS (" ).append("\n"); 
		query.append("        SELECT A.*" ).append("\n"); 
		query.append("          FROM (" ).append("\n"); 
		query.append("                SELECT DISTINCT G.EXE_YRMON" ).append("\n"); 
		query.append("                     , V.REV_YRMON" ).append("\n"); 
		query.append("                     , V.RLANE_CD" ).append("\n"); 
		query.append("                     , V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD||V.REV_DIR_CD AS VVD_CD" ).append("\n"); 
		query.append("                     , V.VSL_CD" ).append("\n"); 
		query.append("                     , V.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , V.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , V.REV_DIR_CD" ).append("\n"); 
		query.append("                     , V.VST_DT" ).append("\n"); 
		query.append("                     , V.VED_DT" ).append("\n"); 
		query.append("                  FROM FMS_VVD V" ).append("\n"); 
		query.append("                     , GL_ESTM_REV_VVD G" ).append("\n"); 
		query.append("                 WHERE 1=1" ).append("\n"); 
		query.append("                   AND G.EXE_YRMON      = REPLACE(@[exe_yrmon],'-') " ).append("\n"); 
		query.append("                   AND G.REV_YRMON      BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')" ).append("\n"); 
		query.append("                   AND G.ESTM_VVD_TP_CD = @[est_type]" ).append("\n"); 
		query.append("                   AND G.VSL_CD         = V.VSL_CD" ).append("\n"); 
		query.append("                   AND G.SKD_VOY_NO     = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                   AND G.SKD_DIR_CD     = V.SKD_DIR_CD" ).append("\n"); 
		query.append("                   AND G.REV_DIR_CD     = V.REV_DIR_CD " ).append("\n"); 
		query.append("                   AND V.REV_YRMON      BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')" ).append("\n"); 
		query.append("            ) A" ).append("\n"); 
		query.append("        WHERE 1=1" ).append("\n"); 
		query.append("        ORDER BY A.EXE_YRMON, A.VVD_CD, A.REV_YRMON          " ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_FMS_VVD_OTR;" ).append("\n"); 
		query.append("--/*Prepayment Settlement Contract Hire 금액을 구한다.*/" ).append("\n"); 
		query.append(", V_FMS_HIRE AS (  " ).append("\n"); 
		query.append("    SELECT A.VSL_CD" ).append("\n"); 
		query.append("         , A.SKD_VOY_NO" ).append("\n"); 
		query.append("         , A.SKD_DIR_CD" ).append("\n"); 
		query.append("         , A.REV_DIR_CD" ).append("\n"); 
		query.append("         , A.EXE_YRMON" ).append("\n"); 
		query.append("         , A.REV_YRMON" ).append("\n"); 
		query.append("         , A.FLET_CTRT_NO" ).append("\n"); 
		query.append("         , A.FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("         , A.HIRE_EFF_DT" ).append("\n"); 
		query.append("         , A.HIRE_EXP_DT" ).append("\n"); 
		query.append("         --/*WORKING Month 이후는 Date는 0 으로 계산한다.*/" ).append("\n"); 
		query.append("         , CASE WHEN A.EXE_YRMON < TO_CHAR(A.HIRE_EFF_DT,'YYYYMM') THEN 0" ).append("\n"); 
		query.append("                ELSE ROUND( A.HIRE_EXP_DT - A.HIRE_EFF_DT, 4 )" ).append("\n"); 
		query.append("           END AS ESTM_DYS" ).append("\n"); 
		query.append("         , A.HIRE_N1ST_AMT" ).append("\n"); 
		query.append("         , A.HIRE_N2ND_AMT" ).append("\n"); 
		query.append("         , A.ORI_HIRE_EFF_DT AS ORI_HIRE_EFF_DT" ).append("\n"); 
		query.append("         , A.ORI_HIRE_EXP_DT AS ORI_HIRE_EXP_DT" ).append("\n"); 
		query.append("         , ROUND( A.ORI_HIRE_EXP_DT - A.ORI_HIRE_EFF_DT, 4 ) AS SAIL_DYS" ).append("\n"); 
		query.append("         , A.ACMM_RT_AMT" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("            SELECT A.VSL_CD" ).append("\n"); 
		query.append("                 , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                 , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                 , A.REV_DIR_CD" ).append("\n"); 
		query.append("                 , A.EXE_YRMON" ).append("\n"); 
		query.append("                 , A.REV_YRMON" ).append("\n"); 
		query.append("                 , A.FLET_CTRT_NO" ).append("\n"); 
		query.append("                 , A.FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                 , A.HIRE_EFF_DT" ).append("\n"); 
		query.append("                 --/*WORKING Month 이후는 Date는 가져오지 않고 Last Day로 변환 한다.*/" ).append("\n"); 
		query.append("                 , CASE WHEN TO_CHAR(A.HIRE_EFF_DT,'YYYYMM') <= A.EXE_YRMON AND A.EXE_YRMON < TO_CHAR(A.HIRE_EXP_DT,'YYYYMM') THEN TO_DATE(TO_CHAR(LAST_DAY(TO_DATE(A.EXE_YRMON,'YYYYMM')),'YYYYMMDD')||'235959','YYYYMMDDHH24MISS')" ).append("\n"); 
		query.append("                        ELSE A.HIRE_EXP_DT" ).append("\n"); 
		query.append("                   END AS HIRE_EXP_DT" ).append("\n"); 
		query.append("                 , A.HIRE_N1ST_AMT" ).append("\n"); 
		query.append("                 , A.HIRE_N2ND_AMT" ).append("\n"); 
		query.append("                 , A.HIRE_EFF_DT AS ORI_HIRE_EFF_DT" ).append("\n"); 
		query.append("                 , A.HIRE_EXP_DT AS ORI_HIRE_EXP_DT" ).append("\n"); 
		query.append("                 , ROUND( A.HIRE_EXP_DT - A.HIRE_EFF_DT, 4 ) AS SAIL_DYS" ).append("\n"); 
		query.append("                 , A.ACMM_RT_AMT" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                    SELECT A.VSL_CD" ).append("\n"); 
		query.append("                         , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                         , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                         , A.REV_DIR_CD" ).append("\n"); 
		query.append("                         , A.EXE_YRMON" ).append("\n"); 
		query.append("                         , A.REV_YRMON" ).append("\n"); 
		query.append("                         , A.FLET_CTRT_NO" ).append("\n"); 
		query.append("                         , A.FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                         , A.HIRE_EFF_DT" ).append("\n"); 
		query.append("                         , A.HIRE_EXP_DT" ).append("\n"); 
		query.append("                         --/*동일 VVD 의 1번째 Row의 날짜를 가져오기 위한 ROW_NUMBER.*/" ).append("\n"); 
		query.append("                         , ROW_NUMBER() OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, A.REV_YRMON, A.FLET_CTRT_NO, A.FLET_CTRT_TP_CD, A.HIRE_EXP_DT  ORDER BY A.HIRE_EFF_DT ) AS RN" ).append("\n"); 
		query.append("                         --/*동일 VVD 의 1번째 Row의 날짜를 가져오기 위한 Count.*/" ).append("\n"); 
		query.append("                         , COUNT(1)     OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, A.REV_YRMON, A.FLET_CTRT_NO, A.FLET_CTRT_TP_CD, A.HIRE_EXP_DT ) AS CNT" ).append("\n"); 
		query.append("                         , A.HIRE_N1ST_AMT" ).append("\n"); 
		query.append("                         , A.HIRE_N2ND_AMT" ).append("\n"); 
		query.append("                         , A.ACMM_RT_AMT" ).append("\n"); 
		query.append("                      FROM (" ).append("\n"); 
		query.append("                            SELECT A.VSL_CD" ).append("\n"); 
		query.append("                                 , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                 , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                 , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                 , A.EXE_YRMON" ).append("\n"); 
		query.append("                                 , A.REV_YRMON" ).append("\n"); 
		query.append("                                 , C.FLET_CTRT_NO" ).append("\n"); 
		query.append("                                 , A.FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                                 , CASE WHEN A.VST_DT||'000000' >= TO_CHAR(C.EFF_DT,'YYYYMMDDHH24MISS') THEN TO_DATE(A.VST_DT||'000000', 'YYYYMMDDHH24MISS')" ).append("\n"); 
		query.append("                                        ELSE C.EFF_DT --TRUNC(C.EFF_DT)" ).append("\n"); 
		query.append("                                   END HIRE_EFF_DT" ).append("\n"); 
		query.append("                                   --/*VVD의 End Date 가 계약 End Date가 작은 경우 계약날짜 셋팅 (주의 : 계약은 +1일이 되어 있음)*/" ).append("\n"); 
		query.append("                                 , CASE WHEN A.VED_DT||'235959' > TO_CHAR(C.EXP_DT,'YYYYMMDDHH24MISS') THEN DECODE(SUBSTR(TO_CHAR(C.EXP_DT,'YYYYMMDDHH24MI'), 9, 4),'0000', C.EXP_DT-1,C.EXP_DT)" ).append("\n"); 
		query.append("                                        ELSE TO_DATE(A.VED_DT||'235959', 'YYYYMMDDHH24MISS')" ).append("\n"); 
		query.append("                                   END HIRE_EXP_DT" ).append("\n"); 
		query.append("                                 , CASE WHEN SUBSTR(TO_CHAR(FIRST_VALUE(C.EXP_DT) OVER(PARTITION BY C.FLET_CTRT_NO, A.FLET_CTRT_TP_CD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD ORDER BY C.EXP_DT),'YYYYMMDDHH24MISS'),9,4) = '0000' AND C.HIR_CURR_N2ND_CD IS NULL " ).append("\n"); 
		query.append("                                        THEN NVL(C.HIR_RT_N1ST_AMT/DECODE(C.HIR_CURR_N1ST_CD, 'USD', 1, (" ).append("\n"); 
		query.append("                                                                SELECT NVL(EX1.USD_LOCL_XCH_RT,1)" ).append("\n"); 
		query.append("                                                                  FROM GL_MON_XCH_RT EX1" ).append("\n"); 
		query.append("                                                                 WHERE C.HIR_CURR_N1ST_CD = EX1.CURR_CD" ).append("\n"); 
		query.append("                                                                   AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON" ).append("\n"); 
		query.append("                                                                   AND EX1.ACCT_XCH_RT_LVL = '1')),0)" ).append("\n"); 
		query.append("                                        ELSE FIRST_VALUE(NVL(C.HIR_RT_N1ST_AMT/DECODE(C.HIR_CURR_N1ST_CD, 'USD', 1, (" ).append("\n"); 
		query.append("                                                                SELECT NVL(EX1.USD_LOCL_XCH_RT,1)" ).append("\n"); 
		query.append("                                                                  FROM GL_MON_XCH_RT EX1" ).append("\n"); 
		query.append("                                                                 WHERE C.HIR_CURR_N1ST_CD = EX1.CURR_CD" ).append("\n"); 
		query.append("                                                                   AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON" ).append("\n"); 
		query.append("                                                                   AND EX1.ACCT_XCH_RT_LVL = '1')),0)) OVER(PARTITION BY C.FLET_CTRT_NO, A.FLET_CTRT_TP_CD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, C.EXP_DT ORDER BY C.EXP_DT DESC)" ).append("\n"); 
		query.append("                                   END HIRE_N1ST_AMT" ).append("\n"); 
		query.append("                                 , CASE WHEN SUBSTR(TO_CHAR(FIRST_VALUE(C.EXP_DT) OVER(PARTITION BY C.FLET_CTRT_NO, A.FLET_CTRT_TP_CD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD ORDER BY C.EXP_DT),'YYYYMMDDHH24MISS'),9,4) = '0000' AND C.HIR_CURR_N2ND_CD IS NULL " ).append("\n"); 
		query.append("                                        THEN NVL(C.HIR_RT_N2ND_AMT/DECODE(C.HIR_CURR_N2ND_CD, 'USD', 1, (" ).append("\n"); 
		query.append("                                                                SELECT NVL(EX1.USD_LOCL_XCH_RT,1)" ).append("\n"); 
		query.append("                                                                  FROM GL_MON_XCH_RT EX1" ).append("\n"); 
		query.append("                                                                 WHERE C.HIR_CURR_N2ND_CD = EX1.CURR_CD" ).append("\n"); 
		query.append("                                                                   AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON" ).append("\n"); 
		query.append("                                                                   AND EX1.ACCT_XCH_RT_LVL = '1')),0)" ).append("\n"); 
		query.append("                                        ELSE FIRST_VALUE(NVL(C.HIR_RT_N2ND_AMT/DECODE(C.HIR_CURR_N2ND_CD, 'USD', 1, (" ).append("\n"); 
		query.append("                                                            SELECT NVL(EX1.USD_LOCL_XCH_RT,1)" ).append("\n"); 
		query.append("                                                              FROM GL_MON_XCH_RT EX1" ).append("\n"); 
		query.append("                                                             WHERE C.HIR_CURR_N2ND_CD = EX1.CURR_CD" ).append("\n"); 
		query.append("                                                               AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON" ).append("\n"); 
		query.append("                                                               AND EX1.ACCT_XCH_RT_LVL = '1')),0)) OVER(PARTITION BY C.FLET_CTRT_NO, A.FLET_CTRT_TP_CD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, C.EXP_DT   ORDER BY C.EXP_DT DESC)" ).append("\n"); 
		query.append("                                   END HIRE_N2ND_AMT" ).append("\n"); 
		query.append("                                 , A.ACMM_RT_AMT" ).append("\n"); 
		query.append("                              FROM V_FMS_VVD A" ).append("\n"); 
		query.append("                                 , FMS_HIRE C" ).append("\n"); 
		query.append("                             WHERE 1=1" ).append("\n"); 
		query.append("                               AND A.FLET_CTRT_NO       = C.FLET_CTRT_NO" ).append("\n"); 
		query.append("                               --AND A.VST_DT             <= TO_CHAR(C.EXP_DT,'YYYYMMDD')" ).append("\n"); 
		query.append("                               AND A.VST_DT             <= TO_CHAR(DECODE(DECODE(SUBSTR(TO_CHAR(C.EXP_DT, 'YYYYMMDDHH24MI'), 9, 4), '0000', 'A', 'B'), 'A', C.EXP_DT - 1, C.EXP_DT),'YYYYMMDD')" ).append("\n"); 
		query.append("                               AND A.VED_DT             >= TO_CHAR(C.EFF_DT,'YYYYMMDD')" ).append("\n"); 
		query.append("                       ) A" ).append("\n"); 
		query.append("                ) A " ).append("\n"); 
		query.append("        ) A" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("--SELECT * FROM V_FMS_HIRE; 26" ).append("\n"); 
		query.append("SELECT 'I' AS IBFLAG" ).append("\n"); 
		query.append("     , A.EXE_YRMON" ).append("\n"); 
		query.append("     , A.REV_YRMON" ).append("\n"); 
		query.append("     , A.ACT_DT" ).append("\n"); 
		query.append("     , A.FLET_CTRT_TP_CD AS RE_DIVR_CD" ).append("\n"); 
		query.append("     , A.RLANE_CD" ).append("\n"); 
		query.append("     , A.VVD_CD" ).append("\n"); 
		query.append("     , A.VSL_CD" ).append("\n"); 
		query.append("     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("     , A.REV_DIR_CD" ).append("\n"); 
		query.append("     , A.ACCT_CD" ).append("\n"); 
		query.append("     , A.ACCT_ITM_NM" ).append("\n"); 
		query.append("     , A.VST_DT" ).append("\n"); 
		query.append("     , A.VED_DT" ).append("\n"); 
		query.append("     , A.ESTM_DYS" ).append("\n"); 
		query.append("     , A.SAIL_DYS" ).append("\n"); 
		query.append("     , A.ORI_HIRE_EFF_DT" ).append("\n"); 
		query.append("     , A.ORI_HIRE_EXP_DT" ).append("\n"); 
		query.append("     , A.HIRE_AMT" ).append("\n"); 
		query.append("     , A.EST_AMT" ).append("\n"); 
		query.append("     , A.ACT_AMT" ).append("\n"); 
		query.append("     , A.ACC_AMT" ).append("\n"); 
		query.append("     , ROWNUM AS ESTM_SEQ_NO " ).append("\n"); 
		query.append("     , 'RV' AS ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("     , TO_CHAR(A.SLP_EFF_DT,'YYYYMMDD') AS SLP_EFF_DT" ).append("\n"); 
		query.append("     , TO_CHAR(A.SLP_EXP_DT,'YYYYMMDD') AS SLP_EXP_DT" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("        SELECT A.EXE_YRMON" ).append("\n"); 
		query.append("             , A.REV_YRMON" ).append("\n"); 
		query.append("             , A.ACT_DT" ).append("\n"); 
		query.append("             , A.FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("             , A.RLANE_CD" ).append("\n"); 
		query.append("             , A.VVD_CD" ).append("\n"); 
		query.append("             , A.VSL_CD" ).append("\n"); 
		query.append("             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("             , A.REV_DIR_CD" ).append("\n"); 
		query.append("             , A.ACCT_CD" ).append("\n"); 
		query.append("             , A.ACCT_ITM_NM" ).append("\n"); 
		query.append("             , A.VST_DT" ).append("\n"); 
		query.append("             , A.VED_DT" ).append("\n"); 
		query.append("             , A.ESTM_DYS" ).append("\n"); 
		query.append("             , A.SAIL_DYS" ).append("\n"); 
		query.append("             , A.ORI_HIRE_EFF_DT" ).append("\n"); 
		query.append("             , A.ORI_HIRE_EXP_DT" ).append("\n"); 
		query.append("             , A.HIRE_AMT" ).append("\n"); 
		query.append("             , A.EST_AMT" ).append("\n"); 
		query.append("             , A.ACT_AMT" ).append("\n"); 
		query.append("             , A.ACC_AMT" ).append("\n"); 
		query.append("             , A.SLP_EFF_DT" ).append("\n"); 
		query.append("             , A.SLP_EXP_DT" ).append("\n"); 
		query.append("          FROM (" ).append("\n"); 
		query.append("          #if (${acct_cd_chart} != '' && ${acct_cd_chart} == 'C') " ).append("\n"); 
		query.append("                /*1. 510911	Time Charter Hire : TI/TO 구분없이 VVD,   FLET_SRC_TP_CD = 30 Data 조회.*/" ).append("\n"); 
		query.append("                SELECT A.EXE_YRMON" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , TO_CHAR(B.HIRE_EFF_DT,'YYYYMMDD') AS ACT_DT" ).append("\n"); 
		query.append("                     , NVL(C.FLET_CTRT_TP_CD, A.FLET_CTRT_TP_CD) AS FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS VVD_CD" ).append("\n"); 
		query.append("                     , A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , (SELECT MAX(AC.ACCT_CD)" ).append("\n"); 
		query.append("                          FROM FMS_ACCT_CATE AC" ).append("\n"); 
		query.append("                             , FMS_ACCT_ITM AI" ).append("\n"); 
		query.append("                         WHERE AC.FLET_ACCT_CATE_CD = 'TC'" ).append("\n"); 
		query.append("                           AND AC.ACCT_CD = AI.ACCT_CD" ).append("\n"); 
		query.append("                           AND AC.ACCT_ITM_SEQ = AI.ACCT_ITM_SEQ) AS ACCT_CD" ).append("\n"); 
		query.append("                     , (SELECT MAX(MA.ACCT_ENG_NM)" ).append("\n"); 
		query.append("                          FROM FMS_ACCT_CATE AC" ).append("\n"); 
		query.append("                             , FMS_ACCT_ITM AI" ).append("\n"); 
		query.append("                             , MDM_ACCOUNT MA" ).append("\n"); 
		query.append("                         WHERE 1=1 --MA.JNL_CRE_FLG = 'Y'" ).append("\n"); 
		query.append("                           AND AC.FLET_ACCT_CATE_CD = 'TC'" ).append("\n"); 
		query.append("                           AND AC.ACCT_CD = AI.ACCT_CD" ).append("\n"); 
		query.append("                           AND AC.ACCT_ITM_SEQ = AI.ACCT_ITM_SEQ" ).append("\n"); 
		query.append("                           AND MA.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                           AND MA.ACCT_CD = AI.ACCT_CD) AS ACCT_ITM_NM" ).append("\n"); 
		query.append("                     , TO_CHAR(B.ORI_HIRE_EFF_DT,'YYYYMMDD') AS VST_DT" ).append("\n"); 
		query.append("                     , TO_CHAR(B.ORI_HIRE_EXP_DT,'YYYYMMDD') AS VED_DT" ).append("\n"); 
		query.append("                     , B.ESTM_DYS" ).append("\n"); 
		query.append("                     , B.SAIL_DYS" ).append("\n"); 
		query.append("                     , TO_CHAR(B.ORI_HIRE_EFF_DT,'YYYYMMDD') AS ORI_HIRE_EFF_DT" ).append("\n"); 
		query.append("                     , TO_CHAR(B.ORI_HIRE_EXP_DT,'YYYYMMDD') AS ORI_HIRE_EXP_DT" ).append("\n"); 
		query.append("                     , ROUND(B.HIRE_AMT, 0) AS HIRE_AMT" ).append("\n"); 
		query.append("                     , ROUND(SUM(NVL(B.EST_AMT,0)), 3) AS EST_AMT" ).append("\n"); 
		query.append("                     , ROUND(SUM(NVL(C.ACT_AMT,0)), 3) AS ACT_AMT" ).append("\n"); 
		query.append("                     , ROUND(SUM(NVL(B.EST_AMT,0)) - SUM(NVL(C.ACT_AMT,0)) , 3) AS ACC_AMT" ).append("\n"); 
		query.append("                     , C.SLP_EFF_DT" ).append("\n"); 
		query.append("                     , C.SLP_EXP_DT" ).append("\n"); 
		query.append("                  FROM (SELECT DISTINCT A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , A.FLET_CTRT_NO" ).append("\n"); 
		query.append("                             , DECODE(A.FLET_CTRT_TP_CD,'TI','E','R') AS FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                             , A.RLANE_CD" ).append("\n"); 
		query.append("                             , A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.VST_DT" ).append("\n"); 
		query.append("                             , A.VED_DT" ).append("\n"); 
		query.append("                          FROM V_FMS_VVD A" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                        ) A" ).append("\n"); 
		query.append("                     , (SELECT A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , A.FLET_CTRT_NO" ).append("\n"); 
		query.append("                             , MIN(A.HIRE_EFF_DT) HIRE_EFF_DT" ).append("\n"); 
		query.append("                             , MAX(A.HIRE_EXP_DT) HIRE_EXP_DT" ).append("\n"); 
		query.append("                             , MIN(A.HIRE_N1ST_AMT + A.HIRE_N2ND_AMT) HIRE_AMT" ).append("\n"); 
		query.append("                             , SUM(NVL(A.EST_AMT + A.EST_ACMM_AMT + NVL(B.EST_OTR_AMT,0), 0)) EST_AMT" ).append("\n"); 
		query.append("                             , A.ORI_HIRE_EFF_DT" ).append("\n"); 
		query.append("                             , A.ORI_HIRE_EXP_DT" ).append("\n"); 
		query.append("                             , A.ESTM_DYS" ).append("\n"); 
		query.append("                             , A.SAIL_DYS" ).append("\n"); 
		query.append("                          FROM (" ).append("\n"); 
		query.append("                                SELECT A.VSL_CD" ).append("\n"); 
		query.append("                                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                                     , A.REV_YRMON" ).append("\n"); 
		query.append("                                     , A.FLET_CTRT_NO" ).append("\n"); 
		query.append("                                     , A.HIRE_EFF_DT" ).append("\n"); 
		query.append("                                     , A.HIRE_EXP_DT" ).append("\n"); 
		query.append("                                     , A.ESTM_DYS" ).append("\n"); 
		query.append("                                     , A.HIRE_N1ST_AMT" ).append("\n"); 
		query.append("                                     , A.HIRE_N2ND_AMT" ).append("\n"); 
		query.append("                                     , A.ESTM_DYS*(A.HIRE_N1ST_AMT + A.HIRE_N2ND_AMT) AS EST_AMT" ).append("\n"); 
		query.append("                                     , (SELECT NVL(A.ESTM_DYS*(A.HIRE_N1ST_AMT + A.HIRE_N2ND_AMT) * TO_NUMBER(FV.ACMM_RT_AMT/100) * -1, 0)" ).append("\n"); 
		query.append("                                          FROM V_FMS_HIRE FV" ).append("\n"); 
		query.append("                                         WHERE 1=1" ).append("\n"); 
		query.append("                                           --AND FV.FLET_CTRT_TP_CD   = 'TI'" ).append("\n"); 
		query.append("                                           AND FV.FLET_CTRT_NO      = A.FLET_CTRT_NO" ).append("\n"); 
		query.append("                                           AND FV.VSL_CD            = A.VSL_CD" ).append("\n"); 
		query.append("                                           AND FV.SKD_VOY_NO        = A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                           AND FV.REV_DIR_CD        = A.REV_DIR_CD" ).append("\n"); 
		query.append("                                           AND ROWNUM = 1) AS EST_ACMM_AMT" ).append("\n"); 
		query.append("                                     , A.ORI_HIRE_EFF_DT" ).append("\n"); 
		query.append("                                     , A.ORI_HIRE_EXP_DT" ).append("\n"); 
		query.append("                                     , A.SAIL_DYS" ).append("\n"); 
		query.append("                                  FROM V_FMS_HIRE A" ).append("\n"); 
		query.append("                                 WHERE 1=1" ).append("\n"); 
		query.append("                                ) A" ).append("\n"); 
		query.append("                              , ( SELECT DISTINCT TH.VSL_CD" ).append("\n"); 
		query.append("                                         , TH.SKD_VOY_NO" ).append("\n"); 
		query.append("                                         , TH.SKD_DIR_CD" ).append("\n"); 
		query.append("                                         , TH.REV_DIR_CD" ).append("\n"); 
		query.append("                                         , TH.FLET_CTRT_NO" ).append("\n"); 
		query.append("                                         , SUM(CASE WHEN TH.ESTM_DYS <> 0 THEN FMS_OTRAMT_FNC(OE.FLET_CTRT_NO, OE.ACCT_CD, OE.ACCT_ITM_SEQ, TO_CHAR(TH.HIRE_EFF_DT,'YYYYMMDDHH24MI'), TO_CHAR(TH.HIRE_EXP_DT + 0.00001,'YYYYMMDDHH24MI')) " ).append("\n"); 
		query.append("                                                ELSE 0" ).append("\n"); 
		query.append("                                           END) AS EST_OTR_AMT" ).append("\n"); 
		query.append("                                      FROM FMS_OTR_EXPN OE" ).append("\n"); 
		query.append("                                         , V_FMS_HIRE TH" ).append("\n"); 
		query.append("                                     WHERE 1=1" ).append("\n"); 
		query.append("                                       AND OE.FLET_CTRT_NO  =  TH.FLET_CTRT_NO" ).append("\n"); 
		query.append("                                       AND OE.EFF_DT        <= TH.HIRE_EFF_DT" ).append("\n"); 
		query.append("                                       AND OE.EXP_DT        >= TH.HIRE_EXP_DT" ).append("\n"); 
		query.append("                                       --AND TH.FLET_CTRT_TP_CD = 'TI'" ).append("\n"); 
		query.append("                                     GROUP BY TH.VSL_CD" ).append("\n"); 
		query.append("                                         , TH.SKD_VOY_NO" ).append("\n"); 
		query.append("                                         , TH.SKD_DIR_CD" ).append("\n"); 
		query.append("                                         , TH.REV_DIR_CD" ).append("\n"); 
		query.append("                                         , TH.FLET_CTRT_NO" ).append("\n"); 
		query.append("                               ) B" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           --AND A.ESTM_DYS > 0 -- 추가" ).append("\n"); 
		query.append("                           AND A.VSL_CD = B.VSL_CD(+)" ).append("\n"); 
		query.append("                           AND A.SKD_VOY_NO = B.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                           AND A.SKD_DIR_CD = B.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                           AND A.FLET_CTRT_NO = B.FLET_CTRT_NO(+)" ).append("\n"); 
		query.append("                         GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , A.FLET_CTRT_NO " ).append("\n"); 
		query.append("                             , A.ORI_HIRE_EFF_DT" ).append("\n"); 
		query.append("                             , A.ORI_HIRE_EXP_DT" ).append("\n"); 
		query.append("                             , A.ESTM_DYS" ).append("\n"); 
		query.append("                             , A.SAIL_DYS" ).append("\n"); 
		query.append("                       ) B" ).append("\n"); 
		query.append("                     , (SELECT A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , A.FLET_CTRT_NO" ).append("\n"); 
		query.append("                             , SUM(FS.CSR_AMT/DECODE(FS.CSR_CURR_CD, 'USD', 1, (SELECT NVL(EX1.USD_LOCL_XCH_RT,1)" ).append("\n"); 
		query.append("                                                                                  FROM GL_MON_XCH_RT EX1" ).append("\n"); 
		query.append("                                                                                 WHERE FS.CSR_CURR_CD = EX1.CURR_CD" ).append("\n"); 
		query.append("                                                                                   AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON" ).append("\n"); 
		query.append("                                                                                   AND EX1.ACCT_XCH_RT_LVL = '1'))) ACT_AMT" ).append("\n"); 
		query.append("                             , MIN(FS.VVD_EFF_DT) SLP_EFF_DT" ).append("\n"); 
		query.append("                             , MAX(FS.VVD_EXP_DT) SLP_EXP_DT" ).append("\n"); 
		query.append("                             , DECODE(FS.SLP_TP_CD,'07','E','R') AS FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                          FROM V_FMS_VVD A" ).append("\n"); 
		query.append("                             , FMS_CONSULTATION FC" ).append("\n"); 
		query.append("                             , FMS_CSUL_SLP FS" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND A.FLET_CTRT_NO       = FC.FLET_CTRT_NO" ).append("\n"); 
		query.append("                           AND FC.SLP_TP_CD         = FS.SLP_TP_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_FUNC_CD       = FS.SLP_FUNC_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_OFC_CD        = FS.SLP_OFC_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_ISS_DT        = FS.SLP_ISS_DT" ).append("\n"); 
		query.append("                           AND FC.SLP_SER_NO        = FS.SLP_SER_NO" ).append("\n"); 
		query.append("                           AND A.VSL_CD             = FS.VSL_CD" ).append("\n"); 
		query.append("                           AND A.SKD_VOY_NO         = FS.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND A.SKD_DIR_CD         = FS.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND A.REV_DIR_CD         = FS.REV_DIR_CD" ).append("\n"); 
		query.append("                           AND FC.APRO_FLG          = 'Y'" ).append("\n"); 
		query.append("                           AND FC.CXL_FLG           = 'N'" ).append("\n"); 
		query.append("                           AND SUBSTR(FC.EFF_DT,1,6)  BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')" ).append("\n"); 
		query.append("                           AND FS.FLET_SRC_TP_CD    IN (  /*30 Prepayments Settlement 된 레코드.*/" ).append("\n"); 
		query.append("		                                              #foreach($FLET_SRC_TP_CD IN ${cht_flet_src_tp_cds})" ).append("\n"); 
		query.append("                                                           #if($cht_flet_src_tp_cds.hasNext()) '$FLET_SRC_TP_CD', #else '$FLET_SRC_TP_CD' #end" ).append("\n"); 
		query.append("                                                      #end )" ).append("\n"); 
		query.append("                         GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , A.FLET_CTRT_NO" ).append("\n"); 
		query.append("                             , DECODE(FS.SLP_TP_CD,'07','E','R')" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                        /*Sublet Revenue(TO) 계약에 걸린 Account(110811) 실적구하기.*/" ).append("\n"); 
		query.append("                        UNION ALL" ).append("\n"); 
		query.append("                        SELECT A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , A.FLET_CTRT_NO" ).append("\n"); 
		query.append("                             , SUM(FS.CSR_AMT/DECODE(FS.CSR_CURR_CD, 'USD', 1, (SELECT NVL(EX1.USD_LOCL_XCH_RT,1)" ).append("\n"); 
		query.append("                                                                                  FROM GL_MON_XCH_RT EX1" ).append("\n"); 
		query.append("                                                                                 WHERE FS.CSR_CURR_CD = EX1.CURR_CD" ).append("\n"); 
		query.append("                                                                                   AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON" ).append("\n"); 
		query.append("                                                                                   AND EX1.ACCT_XCH_RT_LVL = '1'))) ACT_AMT" ).append("\n"); 
		query.append("                             , MIN(FS.VVD_EFF_DT) SLP_EFF_DT" ).append("\n"); 
		query.append("                             , MAX(FS.VVD_EXP_DT) SLP_EXP_DT" ).append("\n"); 
		query.append("                             , DECODE(FS.SLP_TP_CD,'07','E','R') AS FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                          FROM V_FMS_VVD A" ).append("\n"); 
		query.append("                             , FMS_CONSULTATION FC" ).append("\n"); 
		query.append("                             , FMS_CSUL_SLP FS" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND A.FLET_CTRT_NO       = FC.FLET_CTRT_NO" ).append("\n"); 
		query.append("                           AND FC.SLP_TP_CD         = FS.SLP_TP_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_FUNC_CD       = FS.SLP_FUNC_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_OFC_CD        = FS.SLP_OFC_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_ISS_DT        = FS.SLP_ISS_DT" ).append("\n"); 
		query.append("                           AND FC.SLP_SER_NO        = FS.SLP_SER_NO" ).append("\n"); 
		query.append("                           AND A.VSL_CD             = FS.VSL_CD" ).append("\n"); 
		query.append("                           AND A.SKD_VOY_NO         = FS.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND A.SKD_DIR_CD         = FS.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND A.REV_DIR_CD         = FS.REV_DIR_CD" ).append("\n"); 
		query.append("                           AND FC.APRO_FLG          = 'Y'" ).append("\n"); 
		query.append("                           AND FC.CXL_FLG           = 'N'" ).append("\n"); 
		query.append("                           AND SUBSTR(FC.EFF_DT,1,6)  BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')" ).append("\n"); 
		query.append("                           AND FS.FLET_SRC_TP_CD    NOT IN (  /* !30 !R1 Prepayments Settlement 된 레코드.*/" ).append("\n"); 
		query.append("		                                              #foreach($FLET_SRC_TP_CD IN ${cht_not_flet_src_tp_cds})" ).append("\n"); 
		query.append("                                                           #if($cht_not_flet_src_tp_cds.hasNext()) '$FLET_SRC_TP_CD', #else '$FLET_SRC_TP_CD' #end" ).append("\n"); 
		query.append("                                                      #end )" ).append("\n"); 
		query.append("                           AND FS.ACCT_CD IN (  SELECT AI.AR_CR_ACCT_CD /*Sublet Revenue(TO) 411211 Hire 계정 */" ).append("\n"); 
		query.append("                                                  FROM FMS_ACCT_CATE AC" ).append("\n"); 
		query.append("                                                     , FMS_ACCT_ITM AI" ).append("\n"); 
		query.append("                                                 WHERE AC.FLET_ACCT_CATE_CD = 'TO'" ).append("\n"); 
		query.append("                                                   AND AC.ACCT_CD = AI.ACCT_CD" ).append("\n"); 
		query.append("                                                   AND AC.ACCT_ITM_SEQ = AI.ACCT_ITM_SEQ" ).append("\n"); 
		query.append("                                                   AND AI.AR_CR_ACCT_CD = FS.ACCT_CD" ).append("\n"); 
		query.append("                                                   )" ).append("\n"); 
		query.append("                         GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , A.FLET_CTRT_NO" ).append("\n"); 
		query.append("                             , DECODE(FS.SLP_TP_CD,'07','E','R')" ).append("\n"); 
		query.append("                       ) C" ).append("\n"); 
		query.append("                 WHERE A.VSL_CD         = B.VSL_CD" ).append("\n"); 
		query.append("                   AND A.SKD_VOY_NO     = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                   AND A.SKD_DIR_CD     = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                   AND A.REV_DIR_CD     = B.REV_DIR_CD" ).append("\n"); 
		query.append("                   AND A.EXE_YRMON      = B.EXE_YRMON" ).append("\n"); 
		query.append("                   AND A.REV_YRMON      = B.REV_YRMON" ).append("\n"); 
		query.append("                   AND A.FLET_CTRT_NO   = B.FLET_CTRT_NO" ).append("\n"); 
		query.append("                   AND A.VSL_CD         = C.VSL_CD(+)" ).append("\n"); 
		query.append("                   AND A.SKD_VOY_NO     = C.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                   AND A.SKD_DIR_CD     = C.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                   AND A.REV_DIR_CD     = C.REV_DIR_CD(+)" ).append("\n"); 
		query.append("                   AND A.EXE_YRMON      = C.EXE_YRMON(+)" ).append("\n"); 
		query.append("                   AND A.REV_YRMON      = C.REV_YRMON(+)" ).append("\n"); 
		query.append("                   AND A.FLET_CTRT_NO   = C.FLET_CTRT_NO(+)" ).append("\n"); 
		query.append("                 GROUP BY " ).append("\n"); 
		query.append("                       A.EXE_YRMON" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , TO_CHAR(B.HIRE_EFF_DT,'YYYYMMDD')" ).append("\n"); 
		query.append("                     , NVL(C.FLET_CTRT_TP_CD, A.FLET_CTRT_TP_CD)" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     --, A.VST_DT" ).append("\n"); 
		query.append("                     --, A.VED_DT" ).append("\n"); 
		query.append("                     , B.ESTM_DYS" ).append("\n"); 
		query.append("                     , B.SAIL_DYS" ).append("\n"); 
		query.append("                     , B.HIRE_AMT" ).append("\n"); 
		query.append("                     , B.ORI_HIRE_EFF_DT" ).append("\n"); 
		query.append("                     , B.ORI_HIRE_EXP_DT" ).append("\n"); 
		query.append("                     , C.SLP_EFF_DT" ).append("\n"); 
		query.append("                     , C.SLP_EXP_DT" ).append("\n"); 
		query.append("        #end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if (${acct_cd_chart} != '' && ${acct_cd_chart} == 'C' &&  ${acct_cd_other} != '' && ${acct_cd_other} == 'O') " ).append("\n"); 
		query.append("        		UNION ALL" ).append("\n"); 
		query.append("		#end         " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if (${acct_cd_other} != '' && ${acct_cd_other} == 'O') " ).append("\n"); 
		query.append("                /*2. Others Account VVD,   FLET_SRC_TP_CD <> 30 Data 조회*/" ).append("\n"); 
		query.append("                SELECT A.EXE_YRMON" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , A.VST_DT AS ACT_DT" ).append("\n"); 
		query.append("                     , C.FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS VVD_CD" ).append("\n"); 
		query.append("                     , A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , C.ACCT_CD" ).append("\n"); 
		query.append("                     , C.ACCT_ITM_NM" ).append("\n"); 
		query.append("                     , A.VST_DT" ).append("\n"); 
		query.append("                     , A.VED_DT" ).append("\n"); 
		query.append("                     , NULL AS ESTM_DYS" ).append("\n"); 
		query.append("                     , NULL AS SAIL_DYS" ).append("\n"); 
		query.append("                     , A.VST_DT AS ORI_HIRE_EFF_DT" ).append("\n"); 
		query.append("                     , A.VED_DT AS ORI_HIRE_EXP_DT" ).append("\n"); 
		query.append("                     , NULL AS HIRE_AMT" ).append("\n"); 
		query.append("                     , NULL AS EST_AMT" ).append("\n"); 
		query.append("                     , ROUND(SUM(NVL(C.ACT_AMT,0)), 3) AS ACT_AMT" ).append("\n"); 
		query.append("                     , ROUND(0 - SUM(NVL(C.ACT_AMT,0)) , 3) AS ACC_AMT" ).append("\n"); 
		query.append("                     , C.SLP_EFF_DT" ).append("\n"); 
		query.append("                     , C.SLP_EXP_DT" ).append("\n"); 
		query.append("                  FROM (SELECT DISTINCT A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , A.RLANE_CD" ).append("\n"); 
		query.append("                             , A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.VST_DT" ).append("\n"); 
		query.append("                             , A.VED_DT" ).append("\n"); 
		query.append("                          FROM V_FMS_VVD_OTR A" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                        ) A" ).append("\n"); 
		query.append("                     , (" ).append("\n"); 
		query.append("                        /*Other Account..*/" ).append("\n"); 
		query.append("                        SELECT A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , SUM(FS.CSR_AMT/DECODE(FS.CSR_CURR_CD, 'USD', 1, (SELECT NVL(EX1.USD_LOCL_XCH_RT,1)" ).append("\n"); 
		query.append("                                                                                  FROM GL_MON_XCH_RT EX1" ).append("\n"); 
		query.append("                                                                                 WHERE FS.CSR_CURR_CD = EX1.CURR_CD" ).append("\n"); 
		query.append("                                                                                   AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON" ).append("\n"); 
		query.append("                                                                                   AND EX1.ACCT_XCH_RT_LVL = '1'))) ACT_AMT" ).append("\n"); 
		query.append("                             , MIN(FS.VVD_EFF_DT) SLP_EFF_DT" ).append("\n"); 
		query.append("                             , MAX(FS.VVD_EXP_DT) SLP_EXP_DT" ).append("\n"); 
		query.append("                             , FS.ACCT_CD" ).append("\n"); 
		query.append("                             , (SELECT MA.ACCT_ENG_NM" ).append("\n"); 
		query.append("                                  FROM MDM_ACCOUNT MA" ).append("\n"); 
		query.append("                                 WHERE 1=1 --MA.JNL_CRE_FLG = 'Y'" ).append("\n"); 
		query.append("                                   AND MA.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                   AND MA.ACCT_CD = FS.ACCT_CD) AS ACCT_ITM_NM" ).append("\n"); 
		query.append("                             , DECODE(FS.SLP_TP_CD,'07','E','R') AS FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                          FROM V_FMS_VVD_OTR A" ).append("\n"); 
		query.append("                             , FMS_CONSULTATION FC" ).append("\n"); 
		query.append("                             , FMS_CSUL_SLP FS" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND FC.SLP_TP_CD         = FS.SLP_TP_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_FUNC_CD       = FS.SLP_FUNC_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_OFC_CD        = FS.SLP_OFC_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_ISS_DT        = FS.SLP_ISS_DT" ).append("\n"); 
		query.append("                           AND FC.SLP_SER_NO        = FS.SLP_SER_NO" ).append("\n"); 
		query.append("                           AND A.VSL_CD             = FS.VSL_CD" ).append("\n"); 
		query.append("                           AND A.SKD_VOY_NO         = FS.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND A.SKD_DIR_CD         = FS.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND A.REV_DIR_CD         = FS.REV_DIR_CD" ).append("\n"); 
		query.append("                           AND FC.APRO_FLG          = 'Y'" ).append("\n"); 
		query.append("                           AND FC.CXL_FLG           = 'N'" ).append("\n"); 
		query.append("                           AND SUBSTR(FC.EFF_DT,1,6)  BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')" ).append("\n"); 
		query.append("                           --AND FS.FLET_SRC_TP_CD    <> '30' /*Prepayments Settlement외 Other 레코드.*/" ).append("\n"); 
		query.append("                           AND FS.FLET_SRC_TP_CD    NOT IN ( /*30 Prepayments Settlement외 Other 레코드. , 차변 에서 차변 계정을 제외한다(중복 CsrAmt를 방지).*/" ).append("\n"); 
		query.append("		                                              #foreach($FLET_SRC_TP_CD IN ${otr_flet_src_tp_cds})" ).append("\n"); 
		query.append("                                                           #if($otr_flet_src_tp_cds.hasNext()) '$FLET_SRC_TP_CD', #else '$FLET_SRC_TP_CD' #end" ).append("\n"); 
		query.append("                                                      #end )" ).append("\n"); 
		query.append("						   AND FS.ACCT_CD NOT IN (  SELECT DISTINCT AR_CR_ACCT_CD /*411211, 411915 계정*/" ).append("\n"); 
		query.append("                                                      FROM FMS_ACCT_ITM" ).append("\n"); 
		query.append("                                                     WHERE AR_CR_ACCT_CD IS NOT NULL" ).append("\n"); 
		query.append("                                                    UNION ALL" ).append("\n"); 
		query.append("                                                    SELECT AC.ACCT_CD /* 110811 TO 계약의 Sublet Revenue Hire 계정.*/" ).append("\n"); 
		query.append("                                                      FROM FMS_ACCT_CATE AC" ).append("\n"); 
		query.append("                                                         , FMS_ACCT_ITM AI" ).append("\n"); 
		query.append("                                                     WHERE AC.FLET_ACCT_CATE_CD = 'TO'" ).append("\n"); 
		query.append("                                                       AND AC.ACCT_CD = AI.ACCT_CD" ).append("\n"); 
		query.append("                                                       AND AC.ACCT_ITM_SEQ = AI.ACCT_ITM_SEQ" ).append("\n"); 
		query.append("                                           ) " ).append("\n"); 
		query.append("                           AND FS.STL_FLG           = 'N' /*Other이므로 Settlement가 안된 Data 조건.*/" ).append("\n"); 
		query.append("                         GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , FS.ACCT_CD" ).append("\n"); 
		query.append("                             , DECODE(FS.SLP_TP_CD,'07','E','R')" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                        UNION ALL" ).append("\n"); 
		query.append("                        /*Other Account(Sublet Revenue BOD,BOR)..*/" ).append("\n"); 
		query.append("                        SELECT A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , SUM(FS.CSR_AMT/DECODE(FS.CSR_CURR_CD, 'USD', 1, (SELECT NVL(EX1.USD_LOCL_XCH_RT,1)" ).append("\n"); 
		query.append("                                                                                  FROM GL_MON_XCH_RT EX1" ).append("\n"); 
		query.append("                                                                                 WHERE FS.CSR_CURR_CD = EX1.CURR_CD" ).append("\n"); 
		query.append("                                                                                   AND EX1.ACCT_XCH_RT_YRMON = A.REV_YRMON" ).append("\n"); 
		query.append("                                                                                   AND EX1.ACCT_XCH_RT_LVL = '1'))) ACT_AMT" ).append("\n"); 
		query.append("                             , MIN(FS.VVD_EFF_DT) SLP_EFF_DT" ).append("\n"); 
		query.append("                             , MAX(FS.VVD_EXP_DT) SLP_EXP_DT" ).append("\n"); 
		query.append("                             , FS.ACCT_CD" ).append("\n"); 
		query.append("                             , (SELECT MA.ACCT_ENG_NM" ).append("\n"); 
		query.append("                                  FROM MDM_ACCOUNT MA" ).append("\n"); 
		query.append("                                 WHERE 1=1 --MA.JNL_CRE_FLG = 'Y'" ).append("\n"); 
		query.append("                                   AND MA.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                   AND MA.ACCT_CD = FS.ACCT_CD) AS ACCT_ITM_NM" ).append("\n"); 
		query.append("                             , DECODE(FS.SLP_TP_CD,'07','E','R') AS FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                          FROM V_FMS_VVD_OTR A" ).append("\n"); 
		query.append("                             , FMS_CONSULTATION FC" ).append("\n"); 
		query.append("                             , FMS_CSUL_SLP FS" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND FC.SLP_TP_CD         = FS.SLP_TP_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_FUNC_CD       = FS.SLP_FUNC_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_OFC_CD        = FS.SLP_OFC_CD" ).append("\n"); 
		query.append("                           AND FC.SLP_ISS_DT        = FS.SLP_ISS_DT" ).append("\n"); 
		query.append("                           AND FC.SLP_SER_NO        = FS.SLP_SER_NO" ).append("\n"); 
		query.append("                           AND A.VSL_CD             = FS.VSL_CD" ).append("\n"); 
		query.append("                           AND A.SKD_VOY_NO         = FS.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND A.SKD_DIR_CD         = FS.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND A.REV_DIR_CD         = FS.REV_DIR_CD" ).append("\n"); 
		query.append("                           AND FC.APRO_FLG          = 'Y'" ).append("\n"); 
		query.append("                           AND FC.CXL_FLG           = 'N'" ).append("\n"); 
		query.append("                           AND SUBSTR(FC.EFF_DT,1,6)  BETWEEN REPLACE(@[fr_duration],'-') AND REPLACE(@[to_duration],'-')" ).append("\n"); 
		query.append("                           --AND FS.FLET_SRC_TP_CD    <> '30' /*Prepayments Settlement외 Other 레코드.*/" ).append("\n"); 
		query.append("                           AND FS.FLET_SRC_TP_CD    NOT IN ( /*30 Prepayments Settlement외 Other 레코드. , 차변 에서 차변 계정을 제외한다(중복 CsrAmt를 방지).*/" ).append("\n"); 
		query.append("		                                              #foreach($FLET_SRC_TP_CD IN ${otr_not_flet_src_tp_cds})" ).append("\n"); 
		query.append("                                                           #if($otr_flet_src_tp_cds.hasNext()) '$FLET_SRC_TP_CD', #else '$FLET_SRC_TP_CD' #end" ).append("\n"); 
		query.append("                                                      #end )" ).append("\n"); 
		query.append("						   AND FS.ACCT_CD NOT IN (  SELECT AI.AR_CR_ACCT_CD /* 411211 TO 계약의 Sublet Revenue에서의 변환된 계정은 제외. BOD,BOR 계정을 찾기 위한 부분..*/" ).append("\n"); 
		query.append("                                                      FROM FMS_ACCT_CATE AC" ).append("\n"); 
		query.append("                                                         , FMS_ACCT_ITM AI" ).append("\n"); 
		query.append("                                                     WHERE AC.FLET_ACCT_CATE_CD = 'TO'" ).append("\n"); 
		query.append("                                                       AND AC.ACCT_CD = AI.ACCT_CD" ).append("\n"); 
		query.append("                                                       AND AC.ACCT_ITM_SEQ = AI.ACCT_ITM_SEQ" ).append("\n"); 
		query.append("                                                    UNION ALL" ).append("\n"); 
		query.append("                                                    SELECT AC.ACCT_CD /* 110811 TO 계약의 Sublet Revenue Hire 계정.*/" ).append("\n"); 
		query.append("                                                      FROM FMS_ACCT_CATE AC" ).append("\n"); 
		query.append("                                                         , FMS_ACCT_ITM AI" ).append("\n"); 
		query.append("                                                     WHERE AC.FLET_ACCT_CATE_CD = 'TO'" ).append("\n"); 
		query.append("                                                       AND AC.ACCT_CD = AI.ACCT_CD" ).append("\n"); 
		query.append("                                                       AND AC.ACCT_ITM_SEQ = AI.ACCT_ITM_SEQ" ).append("\n"); 
		query.append("                                           ) " ).append("\n"); 
		query.append("                           AND FS.STL_FLG           = 'N' /*Other이므로 Settlement가 안된 Data 조건.*/" ).append("\n"); 
		query.append("                         GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , FS.ACCT_CD" ).append("\n"); 
		query.append("                             , DECODE(FS.SLP_TP_CD,'07','E','R')" ).append("\n"); 
		query.append("                             " ).append("\n"); 
		query.append("                       ) C" ).append("\n"); 
		query.append("                 WHERE 1=1 " ).append("\n"); 
		query.append("                   AND A.VSL_CD         = C.VSL_CD" ).append("\n"); 
		query.append("                   AND A.SKD_VOY_NO     = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                   AND A.SKD_DIR_CD     = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                   AND A.REV_DIR_CD     = C.REV_DIR_CD" ).append("\n"); 
		query.append("                   AND A.EXE_YRMON      = C.EXE_YRMON" ).append("\n"); 
		query.append("                   AND A.REV_YRMON      = C.REV_YRMON" ).append("\n"); 
		query.append("                 GROUP BY " ).append("\n"); 
		query.append("                       A.EXE_YRMON" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , A.VST_DT" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , C.FLET_CTRT_TP_CD" ).append("\n"); 
		query.append("                     , C.ACCT_CD" ).append("\n"); 
		query.append("                     , C.ACCT_ITM_NM" ).append("\n"); 
		query.append("                     , A.VST_DT" ).append("\n"); 
		query.append("                     , A.VED_DT" ).append("\n"); 
		query.append("                     , C.SLP_EFF_DT" ).append("\n"); 
		query.append("                     , C.SLP_EXP_DT" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("       			) A" ).append("\n"); 
		query.append(" 		WHERE 1=1" ).append("\n"); 
		query.append("		#if (${vvd_cd} != '')" ).append("\n"); 
		query.append("   		  AND A.VVD_CD LIKE @[vvd_cd]||'%'" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		#if (${re_divr_cd} != '') " ).append("\n"); 
		query.append("          AND A.FLET_CTRT_TP_CD = @[re_divr_cd] /*Expense, Revenue*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("   		  AND SUBSTR(A.VST_DT,1,6) <= REPLACE(@[exe_yrmon],'-')" ).append("\n"); 
		query.append("        ORDER BY A.FLET_CTRT_TP_CD,  A.VVD_CD, NVL(A.HIRE_AMT,'0') DESC, A.ACT_DT, A.ACCT_CD" ).append("\n"); 
		query.append("    ) A" ).append("\n"); 

	}
}