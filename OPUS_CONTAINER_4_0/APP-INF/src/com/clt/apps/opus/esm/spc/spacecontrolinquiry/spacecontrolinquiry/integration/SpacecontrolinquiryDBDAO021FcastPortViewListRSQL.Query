<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpacecontrolinquiryDBDAO021FcastPortViewListRSQL">
			<desc><![CDATA[searchSpaceControlInquiry021FcastPortViewList

2016.05.12 SPC_GET_HC_RT_BSA_FNC : SKD_VOY_NO parm 추가]]></desc>
			<sql><![CDATA[
WITH VVDS AS (
    SELECT M.TRD_CD    ,
           M.SUB_TRD_CD,
           M.RLANE_CD  ,
           M.DIR_CD    ,
           M.IOC_CD    ,
           W.COST_YR   ,
           SUBSTR(M.SLS_YRMON, 5) AS COST_MON,
           M.COST_WK   ,
           W.NUM       ,
           M.VSL_CD    ,
           M.SKD_VOY_NO,
           M.DIR_CD AS SKD_DIR_CD,
           RHQ_CD    AS RHQ_CD,
           AQ_CD  ,
           OFC_CD ,
           PORT_CD,
           SPC_GET_WK_VVD_BSA_FNC('VOL', M.TRD_CD, M.RLANE_CD, M.DIR_CD, SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK, M.VSL_CD||M.SKD_VOY_NO||M.DIR_CD) AS BSA
      FROM COA_MON_VVD M,
           (
              SELECT /*+ INDEX(P XPKCOA_WK_PRD) */
                     P.COST_YR ,
                     P.COST_WK ,
                     ROWNUM AS NUM,
                     YR        ,
                     WK        ,
                     DUR       ,
                     TRD_CD    ,
                     SUB_TRD_CD,
                     DIR_CD    ,
                     RHQ_CD    ,
                     AQ_CD     ,
                     OFC_CD    ,
                     PORT_CD
                FROM COA_WK_PRD P,
                     (
                        SELECT @[year]     AS YR    ,
                               @[week]     AS WK    ,
                               @[duration] AS DUR   ,
                               @[trade]    AS TRD_CD,
          
#if (${subtrade1} != '')
                               @[subtrade1] AS SUB_TRD_CD,
#else
                               @[subtrade2] AS SUB_TRD_CD,
#end
          
                               @[bound]        AS DIR_CD ,
                               @[rhq]          AS RHQ_CD ,
                               @[area]         AS AQ_CD  ,
                               @[sales_office] AS OFC_CD ,
                               @[pol_cd]       AS PORT_CD
                          FROM DUAL
                     ) PARAMS
               WHERE P.COST_YR||P.COST_WK >= YR||WK
                 AND ROWNUM               <= DUR
           )       W,
           COM_CPY_NO  P
     WHERE (SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK) = W.COST_YR||W.COST_WK
       AND M.DELT_FLG = 'N'
       AND M.TRD_CD   = W.TRD_CD
       AND M.SUB_TRD_CD LIKE W.SUB_TRD_CD || '%'
       AND M.DIR_CD     LIKE W.DIR_CD || '%'


       AND P.CPY_NO < 1

)
, QTA AS (
    SELECT T2.SAQ_RGN_OFC_CD      AS OFC_CD,
           A.COST_YR||A.COST_WK   AS WK    ,
           A.NUM,
           ROUND(SUM(T1.LOD_QTY)) AS LOAD  ,
           0 AS GREV  ,
           0 AS CMCOST
      FROM VVDS               A ,
           SAQ_MON_CFM_QTA    T1,
           SAQ_MON_QTA_RLSE   B ,
           SPC_OFC_LVL        T2
     WHERE B.BSE_YR            = A.COST_YR
       AND B.BSE_QTR_CD        = CEIL(TO_NUMBER(A.COST_MON) / 3)||'Q'
       AND B.QTA_RLSE_STS_CD   = 'R'
       AND T1.MQTA_RLSE_VER_NO = B.MQTA_RLSE_VER_NO
       AND T1.BSE_YR           = B.BSE_YR
       AND T1.BSE_QTR_CD       = B.BSE_QTR_CD
       AND T1.QTA_TGT_CD       = 'T'
       AND T1.BSE_MON          = A.COST_MON
       AND T1.TRD_CD           = A.TRD_CD
       AND T1.RLANE_CD         = A.RLANE_CD
       AND T1.DIR_CD           = A.SKD_DIR_CD
       AND T1.VSL_CD           = A.VSL_CD
       AND T1.SKD_VOY_NO       = A.SKD_VOY_NO
       AND T1.SKD_DIR_CD       = A.SKD_DIR_CD
       AND (A.PORT_CD IS NULL OR T1.POL_CD         = A.PORT_CD)
       AND (A.RHQ_CD  IS NULL OR T1.RHQ_CD         = A.RHQ_CD )
       AND (A.AQ_CD   IS NULL OR T1.AQ_CD          = A.AQ_CD  )
       AND (A.OFC_CD  IS NULL OR T2.SAQ_RGN_OFC_CD = A.OFC_CD )
       AND T1.RGN_OFC_CD = T2.OFC_CD
       AND A.COST_YR || A.COST_WK BETWEEN T2.OFC_APLY_FM_YRWK AND T2.OFC_APLY_TO_YRWK
  GROUP BY T2.SAQ_RGN_OFC_CD   ,
           A.COST_YR||A.COST_WK,
           A.NUM
)
, FCST AS (
    SELECT B.SLS_RGN_OFC_CD     AS OFC_CD,
           A.COST_YR||A.COST_WK AS WK    ,
           A.NUM,
           SUM(NVL(B.CFM_TTL_QTY, 0) + NVL(B.CFM_40FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(B.TRD_CD, B.RLANE_CD, B.DIR_CD, B.VSL_CD, B.SKD_VOY_NO, 'D5') + NVL(B.CFM_45FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(B.TRD_CD, B.RLANE_CD, B.DIR_CD, B.VSL_CD, B.SKD_VOY_NO, 'D7') + NVL(B.CFM_53FT_QTY, 0) * 2) AS LOAD,
           0 AS GREV  ,
           0 AS CMCOST
      FROM VVDS               A,
           SPC_DLY_FCAST_CUST B
     WHERE B.TRD_CD     = A.TRD_CD
       AND B.SUB_TRD_CD = A.SUB_TRD_CD
       AND B.RLANE_CD   = A.RLANE_CD
       AND B.IOC_TS_CD  = A.IOC_CD
       AND B.VSL_CD     = A.VSL_CD
       AND B.SKD_VOY_NO = A.SKD_VOY_NO
       AND B.SKD_DIR_CD = A.DIR_CD 
       AND B.DIR_CD     = A.DIR_CD 
       AND B.SLS_RHQ_CD          LIKE A.RHQ_CD  || '%'
       AND NVL(B.SLS_AQ_CD, ' ') LIKE A.AQ_CD   || '%'
       AND B.SLS_RGN_OFC_CD      LIKE A.OFC_CD  || '%'
       AND B.POL_YD_CD           LIKE A.PORT_CD || '%'
  GROUP BY B.SLS_RGN_OFC_CD    ,
           A.COST_YR||A.COST_WK,
           A.NUM
)
, PFCST AS (
    SELECT B.SLS_RGN_OFC_CD     AS OFC_CD,
           A.COST_YR||A.COST_WK AS WK    ,
           A.NUM,
           SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(B.TRD_CD, B.RLANE_CD, B.DIR_CD, B.VSL_CD, B.SKD_VOY_NO, 'D5') + NVL(B.FCAST_45FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(B.TRD_CD, B.RLANE_CD, B.DIR_CD, B.VSL_CD, B.SKD_VOY_NO, 'D7') + NVL(B.FCAST_53FT_QTY, 0) * 2) AS LOAD,
           0 AS GREV  ,
           0 AS CMCOST
      FROM VVDS              A,
           SPC_DLY_FCAST_HIS B
     WHERE B.FCAST_TP_CD = 'D'
       AND B.TRD_CD      = A.TRD_CD
       AND B.SUB_TRD_CD  = A.SUB_TRD_CD
       AND B.RLANE_CD    = A.RLANE_CD
       AND B.IOC_TS_CD   = A.IOC_CD
       AND B.VSL_CD      = A.VSL_CD
       AND B.SKD_VOY_NO  = A.SKD_VOY_NO
       AND B.SKD_DIR_CD  = A.DIR_CD
       AND B.DIR_CD      = A.DIR_CD
       AND B.OFC_KND_CD  = '3'
       AND B.SLS_RHQ_CD          LIKE A.RHQ_CD  || '%'
       AND NVL(B.SLS_AQ_CD, ' ') LIKE A.AQ_CD   || '%'
       AND B.SLS_RGN_OFC_CD      LIKE A.OFC_CD  || '%'
       AND B.POL_YD_CD           LIKE A.PORT_CD || '%'
       AND B.BSE_DT = ( SELECT /*+ INDEX_DESC(C XPKSPC_DLY_FCAST_HIS) */
                               MIN(C.BSE_DT)
                          FROM SPC_DLY_FCAST_HIS C
                         WHERE B.FCAST_TP_CD = 'D'
                           AND C.FCAST_TP_CD = B.FCAST_TP_CD
                           AND C.OFC_KND_CD  = B.OFC_KND_CD
                           AND C.RLANE_CD    = B.RLANE_CD
                           AND C.DIR_CD      = B.DIR_CD
                           AND C.VSL_CD      = B.VSL_CD
                           AND C.SKD_VOY_NO  = B.SKD_VOY_NO
                           AND C.SKD_DIR_CD  = B.SKD_DIR_CD
                           AND C.SLS_OFC_CD  = B.SLS_OFC_CD
                           AND C.POL_YD_CD   = B.POL_YD_CD
                           AND C.POD_YD_CD   = B.POD_YD_CD
                           AND B.OFC_KND_CD  = '3'
                           AND ROWNUM < 3 )
  GROUP BY B.SLS_RGN_OFC_CD    ,
           A.COST_YR||A.COST_WK,
           A.NUM
)
, BKG AS (
    SELECT /*+ OPT_PARAM('_COMPLEX_VIEW_MERGING', 'FALSE')
               FULL(B.O.Z.M) INDEX(B.Z2.BV XAK6BKG_BKG_VVD) INDEX(B.Z2.B XAK4BKG_BOOKING) */
           B.SLS_RGN_OFC_CD     AS OFC_CD,
           A.COST_YR||A.COST_WK AS WK    ,
           A.NUM,
           BKG_TTL_QTY AS LOAD,
           0 AS GREV  ,
           0 AS CMCOST
      FROM VVDS      A,
           SPC_BKG_V B
     WHERE B.TRD_CD         = A.TRD_CD
       AND B.RLANE_CD       = A.RLANE_CD
       AND B.VSL_CD         = A.VSL_CD
       AND B.SKD_VOY_NO     = A.SKD_VOY_NO
       AND B.SKD_DIR_CD     = A.DIR_CD
       AND B.IOC_CD         = A.IOC_CD
       AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
       AND B.BKG_STS_CD    IN ('F')
       AND B.VSL_PRE_PST_CD = 'T'
       AND B.POL_CD              LIKE A.PORT_CD || '%'
       AND B.SLS_RHQ_CD          LIKE A.RHQ_CD  || '%'
       AND NVL(B.SLS_AQ_CD, ' ') LIKE A.AQ_CD   || '%'
       AND B.SLS_RGN_OFC_CD      LIKE A.OFC_CD  || '%'
       AND B.RLANE_CD <> 'RBCCO'
)
, TMP_DATA AS (
    SELECT 1 AS FLG,
           OFC_CD,
           WK    ,
           NUM   ,
           LOAD   AS QTA_LOAD,
           GREV   AS QTA_GREV,
           CMCOST AS QTA_COST,
           0      AS FCT_LOAD,
           0      AS FCT_GREV,
           0      AS FCT_COST,
           0      AS PFC_LOAD,
           0      AS PFC_GREV,
           0      AS PFC_COST,
           0      AS BKG_LOAD,
           0      AS BKG_GREV,
           0      AS BKG_COST
      FROM QTA
    UNION ALL
    SELECT 2 AS FLG,
           OFC_CD,
           WK    ,
           NUM   ,
           0      AS QTA_LOAD,
           0      AS QTA_GREV,
           0      AS QTA_COST,
           LOAD   AS FCT_LOAD,
           GREV   AS FCT_GREV,
           CMCOST AS FCT_COST,
           0      AS PFC_LOAD,
           0      AS PFC_GREV,
           0      AS PFC_COST,
           0      AS BKG_LOAD,
           0      AS BKG_GREV,
           0      AS BKG_COST
      FROM FCST
    UNION ALL
    SELECT 3 AS FLG,
           OFC_CD,
           WK    ,
           NUM   ,
           0      AS QTA_LOAD,
           0      AS QTA_GREV,
           0      AS QTA_COST,
           0      AS FCT_LOAD,
           0      AS FCT_GREV,
           0      AS FCT_COST,
           LOAD   AS PFC_LOAD,
           GREV   AS PFC_GREV,
           CMCOST AS PFC_COST,
           0      AS BKG_LOAD,
           0      AS BKG_GREV,
           0      AS BKG_COST
      FROM PFCST
)
, ALL_DATA AS (
    SELECT 3 AS FLG,
           OFC_CD,
           WK    ,
           NUM   ,
           QTA_LOAD,
           QTA_GREV,
           QTA_COST,
           FCT_LOAD,
           FCT_GREV,
           FCT_COST,
           PFC_LOAD,
           PFC_GREV,
           PFC_COST,
           BKG_LOAD,
           BKG_GREV,
           BKG_COST
      FROM TMP_DATA
    UNION ALL
    SELECT 4 AS FLG,
           OFC_CD,
           WK    ,
           NUM   ,
           0         AS QTA_LOAD,
           0         AS QTA_GREV,
           0         AS QTA_COST,
           0         AS FCT_LOAD,
           0         AS FCT_GREV,
           0         AS FCT_COST,
           0         AS PFC_LOAD,
           0         AS PFC_GREV,
           0         AS PFC_COST,
           SUM(LOAD) AS BKG_LOAD,
           GREV      AS BKG_GREV,
           CMCOST    AS BKG_COST
      FROM BKG
  GROUP BY OFC_CD,
           WK    ,
           NUM   ,
           GREV  ,
           CMCOST
)
, TGT AS (
    SELECT OFC_CD,
           NUM   ,
           SUM(QTA_LOAD) AS QTA_LOAD,
           SUM(QTA_GREV) AS QTA_GREV,
           SUM(QTA_COST) AS QTA_COST,
           SUM(FCT_LOAD) AS FCT_LOAD,
           SUM(FCT_GREV) AS FCT_GREV,
           SUM(FCT_COST) AS FCT_COST,
           SUM(PFC_LOAD) AS PFC_LOAD,
           SUM(PFC_GREV) AS PFC_GREV,
           SUM(PFC_COST) AS PFC_COST,
           SUM(BKG_LOAD) AS BKG_LOAD,
           SUM(BKG_GREV) AS BKG_GREV,
           SUM(BKG_COST) AS BKG_COST
      FROM ALL_DATA
  GROUP BY OFC_CD,
           WK    ,
           NUM
)
, BASE AS (
    SELECT OFC_CD,
           NUM
      FROM ( SELECT DISTINCT
                    OFC_CD
               FROM TMP_DATA ),
           (     SELECT LEVEL AS NUM
                   FROM DUAL
             CONNECT BY LEVEL <= ( SELECT DUR
                                     FROM (
                                            SELECT @[year]     AS YR    ,
                                                   @[week]     AS WK    ,
                                                   @[duration] AS DUR   ,
                                                   @[trade]    AS TRD_CD,
                              
#if (${subtrade1} != '')
                                                   @[subtrade1] AS SUB_TRD_CD,
#else
                                                   @[subtrade2] AS SUB_TRD_CD,
#end
                              
                                                   @[bound]        AS DIR_CD ,
                                                   @[rhq]          AS RHQ_CD ,
                                                   @[area]         AS AQ_CD  ,
                                                   @[sales_office] AS OFC_CD ,
                                                   @[pol_cd]       AS PORT_CD
                                              FROM DUAL
                                           )))
)
, OFC_DATA AS (
    SELECT B.OFC_CD ,
           B.NUM    ,
           '' AS TMP,
           QTA_LOAD ,
           QTA_GREV ,
           QTA_COST ,
           FCT_LOAD ,
           FCT_GREV ,
           FCT_COST ,
           PFC_LOAD ,
           PFC_GREV ,
           PFC_COST ,
           BKG_LOAD ,
           BKG_GREV ,
           BKG_COST
      FROM TGT  A,
           BASE B
     WHERE B.OFC_CD = A.OFC_CD (+)
       AND B.NUM    = A.NUM    (+)
)
, BSA AS (
    SELECT NUM,
           NVL(RHQ_CD, 'TOTAL') AS RHQ_CD,
           SUM(BSA)             AS BSA
      FROM VVDS
  GROUP BY GROUPING SETS (
                           (NUM, RHQ_CD),
                           (NUM)
                         )
)
, AQ_DATA AS (
    SELECT AQ_CD ,
           OFC_CD,
           NUM   ,
           ROUND(QTA_LOAD)                     AS QTA_LOAD ,
           ROUND(QTA_GREV / 1000)              AS QTA_GREV ,
           ROUND(QTA_GRPB)                     AS QTA_GRPB ,
           ROUND(QTA_CM / 1000)                AS QTA_CM   ,
           ROUND(QTA_CMB)                      AS QTA_CMB  ,
           ROUND(FCT_LOAD)                     AS FCT_LOAD ,
           ROUND(FCT_GREV / 1000)              AS FCT_GREV ,
           ROUND(FCT_GRPB)                     AS FCT_GRPB ,
           ROUND(FCT_CM / 1000)                AS FCT_CM   ,
           ROUND(FCT_CMB)                      AS FCT_CMB  ,
           ROUND(PFC_LOAD)                     AS PFC_LOAD ,
           ROUND(PFC_GREV / 1000)              AS PFC_GREV ,
           ROUND(PFC_GRPB)                     AS PFC_GRPB ,
           ROUND(PFC_CM / 1000)                AS PFC_CM   ,
           ROUND(PFC_CMB)                      AS PFC_CMB  ,
           ROUND(FCT_LOAD  - PFC_LOAD)         AS DIFF_LOAD,
           ROUND((FCT_GREV - PFC_GREV) / 1000) AS DIFF_GREV,
           ROUND(FCT_GRPB - PFC_GRPB)          AS DIFF_GRPB,
           ROUND((FCT_CM - PFC_CM) / 1000)     AS DIFF_CM  ,
           ROUND(FCT_CMB - PFC_CMB)            AS DIFF_CMB ,
           ROUND(BKG_LOAD)                     AS BKG_LOAD ,
           ROUND(BKG_GREV / 1000)              AS BKG_GREV ,
           ROUND(BKG_GRPB)                     AS BKG_GRPB ,
           ROUND(BKG_CM / 1000)                AS BKG_CM   ,
           ROUND(BKG_CMB)                      AS BKG_CMB  ,
           ROUND(DECODE(QTA_LOAD, 0, 0, FCT_LOAD * 100 / QTA_LOAD))||'%' AS PREF_LOAD,
           ROUND(DECODE(QTA_GREV, 0, 0, FCT_GREV * 100 / QTA_GREV))||'%' AS PREF_GREV,
           ROUND(DECODE(QTA_GRPB, 0, 0, FCT_GRPB * 100 / QTA_GRPB))||'%' AS PREF_GRPB,
           ROUND(DECODE(QTA_CM  , 0, 0, FCT_CM   * 100 / QTA_CM  ))||'%' AS PREF_CM  ,
           ROUND(DECODE(QTA_CMB , 0, 0, FCT_CMB  * 100 / QTA_CMB ))||'%' AS PREF_CMB,
           BSA,
           LVL
      FROM (
              SELECT AQ_CD   ,
                     OFC_CD  ,
                     Z.NUM   ,
                     QTA_LOAD,
                     QTA_GREV,
                     DECODE(QTA_LOAD, 0, 0, QTA_GREV / QTA_LOAD) AS QTA_GRPB,
                     QTA_GREV - QTA_COST AS QTA_CM,
                     DECODE(QTA_LOAD, 0, 0, (QTA_GREV - QTA_COST) / QTA_LOAD) AS QTA_CMB,
                     FCT_LOAD,
                     FCT_GREV,
                     DECODE(FCT_LOAD, 0, 0, FCT_GREV / FCT_LOAD) AS FCT_GRPB,
                     FCT_GREV - FCT_COST AS FCT_CM,
                     DECODE(FCT_LOAD, 0, 0, (FCT_GREV - FCT_COST) / FCT_LOAD) AS FCT_CMB,
                     PFC_LOAD,
                     PFC_GREV,
                     DECODE(PFC_LOAD, 0, 0, PFC_GREV / PFC_LOAD) AS PFC_GRPB,
                     PFC_GREV - PFC_COST AS PFC_CM,
                     DECODE(PFC_LOAD, 0, 0, (PFC_GREV - PFC_COST) / PFC_LOAD) AS PFC_CMB,
                     BKG_LOAD,
                     BKG_GREV,
                     DECODE(BKG_LOAD, 0, 0, BKG_GREV / BKG_LOAD) AS BKG_GRPB,
                     BKG_GREV - BKG_COST AS BKG_CM,
                     DECODE(BKG_LOAD, 0, 0, (BKG_GREV - BKG_COST) / BKG_LOAD) AS BKG_CMB,
                     B.BSA,
                     LVL
                FROM (
                        SELECT NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD) AS AQ_CD,
                               D.OFC_CD AS OFC_CD,
                               D.NUM,
                               SUM(QTA_LOAD) AS QTA_LOAD,
                               SUM(QTA_GREV) AS QTA_GREV,
                               SUM(QTA_COST) AS QTA_COST,
                               SUM(FCT_LOAD) AS FCT_LOAD,
                               SUM(FCT_GREV) AS FCT_GREV,
                               SUM(FCT_COST) AS FCT_COST,
                               SUM(PFC_LOAD) AS PFC_LOAD,
                               SUM(PFC_GREV) AS PFC_GREV,
                               SUM(PFC_COST) AS PFC_COST,
                               SUM(BKG_LOAD) AS BKG_LOAD,
                               SUM(BKG_GREV) AS BKG_GREV,
                               SUM(BKG_COST) AS BKG_COST,
                               2 - (GROUPING_ID(NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)) + GROUPING_ID(D.OFC_CD)) AS LVL
                          FROM SPC_OFC_LVL O,
                               OFC_DATA    D
                         WHERE O.OFC_CD = D.OFC_CD
                           AND (  -- Duraion 때문에 연도가 바뀌는 Data 를 위한 로직
                                  SELECT W.COST_YR || W.COST_WK
                                    FROM COA_WK_PRD W
                                   WHERE ( SELECT TO_CHAR(( SELECT TO_DATE(SLS_FM_DT, 'YYYYMMDD')
                                                              FROM COA_WK_PRD W
                                                             WHERE W.COST_YR = @[year]
                                                               AND W.COST_WK = @[week]
                                                          ) + ( D.NUM * 7 ) - 7 ,'YYYYMMDD')
                                             FROM DUAL
                                         )  BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
                               ) BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                      GROUP BY GROUPING SETS (
                                               (D.NUM, NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD), D.OFC_CD),
                                               (D.NUM, NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)),
                                               (D.NUM)
                                             )
                     ) Z,
                     BSA B
               WHERE Z.NUM = B.NUM(+)

 
                 AND NVL(Z.AQ_CD, 'TOTAL') = B.RHQ_CD(+)


           )
  ORDER BY NVL(AQ_CD , 'ZZZZZZ'),
           NVL(OFC_CD, '00000') ,
           NUM
)
  SELECT NVL(AQ_CD, 'TOTAL') AS AQ_CD,
         DECODE(AQ_CD, NULL, '', NVL(OFC_CD, '-')) AS OFC_CD,
         NUM      ,
         NVL(QTA_LOAD, 0) QTA_LOAD,
         NVL(QTA_GREV, 0) QTA_GREV,
         NVL(QTA_GRPB, 0) QTA_GRPB,
         NVL(QTA_CM , 0)  QTA_CM,
         NVL(QTA_CMB , 0) QTA_CMB,
         NVL(FCT_LOAD , 0) FCT_LOAD,
         NVL(FCT_GREV, 0) FCT_GREV,
         NVL(FCT_GRPB, 0) FCT_GRPB,
         NVL(FCT_CM , 0)  FCT_CM,
         NVL(FCT_CMB, 0)  FCT_CMB,
         NVL(PFC_LOAD, 0) PFC_LOAD,
         NVL(PFC_GREV, 0) PFC_GREV,
         NVL(PFC_GRPB, 0) PFC_GREV,
         NVL(PFC_CM, 0)   PFC_CM,
         NVL(PFC_CMB, 0)  PFC_CMB,
         NVL(DIFF_LOAD, 0) DIFF_LOAD,
         NVL(DIFF_GREV, 0) DIFF_GREV,
         NVL(DIFF_GRPB, 0) DIFF_GRPB,
         NVL(DIFF_CM, 0)  DIFF_CM,
         NVL(DIFF_CMB, 0) DIFF_CMB,
         NVL(BKG_LOAD, 0) BKG_LOAD,
         NVL(BKG_GREV, 0) BKG_GREV,
         NVL(BKG_GRPB, 0) BKG_GRPB,
         NVL(BKG_CM , 0)  BKG_CM,
         NVL(BKG_CMB, 0)  BKG_CMB,
         NVL(PREF_LOAD, 0) PREF_LOAD,
         NVL(PREF_GREV, 0) PREF_GREV,
         NVL(PREF_GRPB, 0) PREF_GRPB,
         NVL(PREF_CM, 0)  PREF_CM,
         NVL(PREF_CMB, 0) PREF_CMB,
         NVL(BSA, 0)  BSA,
         DECODE(BSA, 0, 0, ROUND(FCT_LOAD / BSA * 100))||'%' AS LF,
         LVL
    FROM AQ_DATA			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="duration" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="subtrade1" type="12" value="" out="N"/>
				<param name="subtrade2" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="rhq" type="12" value="" out="N"/>
				<param name="area" type="12" value="" out="N"/>
				<param name="sales_office" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
