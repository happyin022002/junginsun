<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="UnmatchBLDBDAOCheckRfaOftDiscrepancyDetailRSQL">
			<desc><![CDATA[checkRfaOftDiscrepancyDetail]]></desc>
			<sql><![CDATA[
WITH
XR AS
(
/*******************************************************************************************
환율 정보 조회
*******************************************************************************************/

SELECT	CURR_CD					,
				USD_LOCL_XCH_RT
FROM		GL_MON_XCH_RT
WHERE		ACCT_XCH_RT_YRMON	= LEAST(( SELECT TO_CHAR(RT_APLY_DT, 'YYYYMM') FROM BKG_RATE WHERE BKG_NO = @[bkg_no] ), (SELECT MAX(ACCT_XCH_RT_YRMON) FROM GL_MON_XCH_RT ))
AND			ACCT_XCH_RT_LVL		= '1'
AND			@[ca_flg]					= 'N'

UNION ALL

SELECT	CURR_CD					,
				USD_LOCL_XCH_RT
FROM		GL_MON_XCH_RT
WHERE		ACCT_XCH_RT_YRMON	= LEAST(( SELECT TO_CHAR(RT_APLY_DT, 'YYYYMM') FROM BKG_RT_HIS WHERE BKG_NO = @[bkg_no] AND CORR_NO	= 'TMP0000001' ), (SELECT MAX(ACCT_XCH_RT_YRMON) FROM GL_MON_XCH_RT ))
AND			ACCT_XCH_RT_LVL		= '1'
AND			@[ca_flg]					= 'Y'
)	,
BK AS
(
/*******************************************************************************************
B/L TYPE CODE 를 SELECT 한다.
*******************************************************************************************/

SELECT	(
				SELECT	NVL(RT_BL_TP_CD, 'N')
				FROM		BKG_RATE
				WHERE		BKG_NO				= @[bkg_no]
				AND			@[ca_flg]			= 'N'
				UNION ALL
				SELECT	NVL(RT_BL_TP_CD, 'N')
				FROM		BKG_RT_HIS
				WHERE		BKG_NO				= @[bkg_no]
				AND			CORR_NO				= 'TMP0000001'	-- CORRECTION 중인 DATA 를 나타내는 고정된 상수값
				AND			@[ca_flg]			= 'Y'
        )	RT_BL_TP_CD	,
        (
				SELECT	MAX(BB_CGO_FLG)
				FROM		BKG_QTY_DTL
				WHERE		BKG_NO				= @[bkg_no]
				AND			@[ca_flg]			= 'N'
				HAVING  MAX(BB_CGO_FLG) IS NOT NULL
				UNION ALL
				SELECT	MAX(BB_CGO_FLG)
				FROM		BKG_QTY_DTL_HIS
				WHERE		BKG_NO				= @[bkg_no]
				AND			CORR_NO				= 'TMP0000001'	-- CORRECTION 중인 DATA 를 나타내는 고정된 상수값
				AND			@[ca_flg]			= 'Y'
				HAVING  MAX(BB_CGO_FLG) IS NOT NULL
        )	BB_CGO_FLG
FROM		DUAL
)

SELECT	'E'	UMCH_TP_CD					,
				'B'	UMCH_BKG_CTRT_TP_CD	,
				ROW_NUMBER() OVER ( ORDER BY DECODE(CHG_CD, 'OFT', 1, 'OAR', 2, 'DAR', 3, 4), RAT_UT_CD )	UMCH_ITM_SEQ	,
				CHG_CD									,
				RAT_UT_CD								,
				RAT_AS_QTY	RAT_UT_QTY	,
				CURR_CD									,
				CHG_UT_AMT	FRT_RT_AMT
FROM		BKG_CHG_RT
WHERE		BKG_NO				= @[bkg_no]
AND			CHG_CD				IN ( 'OFT', 'OAR', 'DAR' )
AND			NVL(FRT_INCL_XCLD_DIV_CD, 'N')	= 'N'
AND			( SELECT RT_BL_TP_CD FROM BK )	NOT IN ( 'M', 'C' )
AND			( SELECT BB_CGO_FLG FROM BK )		= 'N'
AND			@[ca_flg]			= 'N'

UNION ALL

SELECT	'E'	UMCH_TP_CD					,
				'B'	UMCH_BKG_CTRT_TP_CD	,
				ROW_NUMBER() OVER ( ORDER BY DECODE(CHG_CD, 'OFT', 1, 'OAR', 2, 'DAR', 3, 4), RAT_UT_CD )	UMCH_ITM_SEQ	,
				CHG_CD									,
				RAT_UT_CD								,
				RAT_AS_QTY	RAT_UT_QTY	,
				CURR_CD									,
				CHG_UT_AMT	FRT_RT_AMT
FROM		BKG_CHG_RT_HIS
WHERE		BKG_NO				= @[bkg_no]
AND			CORR_NO				= 'TMP0000001'
AND			CHG_CD				IN ( 'OFT', 'OAR', 'DAR' )
AND			NVL(FRT_INCL_XCLD_DIV_CD, 'N')	= 'N'
AND			( SELECT RT_BL_TP_CD FROM BK )	NOT IN ( 'M', 'C' )
AND			( SELECT BB_CGO_FLG FROM BK )		= 'N'
AND			@[ca_flg]			= 'Y'

UNION ALL

SELECT	'E'	UMCH_TP_CD					,
				'C'	UMCH_BKG_CTRT_TP_CD	,
				ROW_NUMBER() OVER ( ORDER BY DECODE(CHG_CD, 'OFT', 1, 'OAR', 2, 'DAR', 3, 4), RAT_UT_CD )	UMCH_ITM_SEQ	,
				CHG_CD									,
				RAT_UT_CD								,
				RAT_AS_QTY	RAT_UT_QTY	,
				CURR_CD									,
				CHG_UT_AMT	FRT_RT_AMT
FROM		BKG_REV_AUD_CHG_TMP
WHERE		OFT_CMB_SEQ
				=
				(
				SELECT	OFT_CMB_SEQ
				FROM		(
								SELECT	OFT_CMB_SEQ		,
												ROW_NUMBER() OVER ( ORDER BY OFT_CHG_AMT, SUR_CHG_AMT, OFT_CMB_SEQ )	ROW_NUMBER
								FROM		(
												SELECT	RA.OFT_CMB_SEQ	,
																SUM(
																CASE
																WHEN CHG_CD IN ( 'OFT', 'OAR', 'DAR' ) THEN RA.RAT_AS_QTY * RA.CHG_UT_AMT / DECODE(RA.RAT_UT_CD, 'PC', 100, 1) / XR.USD_LOCL_XCH_RT
																ELSE 0
																END
																)	OFT_CHG_AMT		,
																SUM(
																CASE
																WHEN CHG_CD NOT IN ( 'OFT', 'OAR', 'DAR' ) THEN RA.RAT_AS_QTY * RA.CHG_UT_AMT / DECODE(RA.RAT_UT_CD, 'PC', 100, 1) / XR.USD_LOCL_XCH_RT
																ELSE 0
																END
																)	SUR_CHG_AMT
												FROM		BKG_REV_AUD_CHG_TMP	RA	,
																XR
												WHERE		XR.CURR_CD = RA.CURR_CD
												GROUP BY
																RA.OFT_CMB_SEQ
								        )
								)
				WHERE		ROW_NUMBER	= 1
				)
AND			CHG_CD	IN ( 'OFT', 'OAR', 'DAR' )
AND			( SELECT RT_BL_TP_CD FROM BK )	NOT IN ( 'M', 'C' )
AND			( SELECT BB_CGO_FLG FROM BK )		= 'N'
			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="ca_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
