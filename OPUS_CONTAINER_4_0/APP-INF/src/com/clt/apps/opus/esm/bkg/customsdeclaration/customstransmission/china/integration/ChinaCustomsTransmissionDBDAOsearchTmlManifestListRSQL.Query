<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChinaCustomsTransmissionDBDAOsearchTmlManifestListRSQL">
			<desc><![CDATA[searchTmlManifestList]]></desc>
			<sql><![CDATA[
SELECT  INFO.BKG_NO,
        INFO.BL_NO,
        INFO.POL_CD,
        INFO.POD_CD,
        INFO.DEL_CD,
		INFO.BKG_STS_CD,
        INFO.PCK_QTY,
        INFO.PCK_TP_CD,
        INFO.ACT_WGT,
        INFO.WGT_UT_CD,
        INFO.SHPR_NM,
        INFO.SHPR_ADDR,
        INFO.CNEE_NM,
        INFO.CNEE_ADDR,
        INFO.NTFY_NM,
        INFO.NTFY_ADDR,
        INFO.BKG_CGO_TP_CD,
        INFO.TR,
        INFO.DCGO_FLG,
        INFO.RC_FLG,
		NTC.SND_USR_ID TRSM_MSG_TP_ID,
		MAX(TO_CHAR(NTC.SND_DT, 'YYYYMMDDHH24MISS')) MF_SND_DT,
        CNTR.SEAL_NO_FLG,
        CNTR.SEALER_CD_FLG,
        CNTR.CNTR_CNT,
		-- VSL Info
		'' AS CALL_SGN_NO,
		'' AS PRE_PORT,
		'' AS NXT_PORT,
		'' AS VPS_ETA_DT,
		'' AS VPS_ETD_DT,
		'' AS VSL_ENG_NM,
		-- 조회 조건
		@[vvd] 	  AS VVD,
		@[loc_cd] AS LOC_CD,
		-- 총 개수
		'' AS TOTAL
  FROM (
            SELECT  B.BKG_NO BKG_NO,
                    B.BL_NO BL_NO,
                    B.POL_CD POL_CD,
                    B.POD_CD POD_CD,
                    B.DEL_CD DEL_CD,
					B.BKG_STS_CD,
                    DECODE(NVL(BL.PCK_QTY,0),0,'N','Y') PCK_QTY,
                    DECODE(BL.PCK_TP_CD,NULL,'N','Y') PCK_TP_CD,
                    DECODE(NVL(BL.ACT_WGT,0),0,'N','Y') ACT_WGT,
                    DECODE(BL.WGT_UT_CD,NULL,'N','Y') WGT_UT_CD,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CUST_NM)), 0, 'N',NULL,'N', 'Y')) SHPR_NM,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CUST_ADDR)), 0, 'N',NULL,'N', 'Y')) SHPR_ADDR,
                    DECODE(C.BKG_CUST_TP_CD,'C',DECODE(LENGTH(TRIM(C.CUST_NM)), 0, 'N',NULL,'N', 'Y')) CNEE_NM,
                    DECODE(C.BKG_CUST_TP_CD,'C',DECODE(B.CUST_TO_ORD_FLG,'Y','Y',DECODE(LENGTH(TRIM(C.CUST_ADDR)), 0, 'N',NULL,'N', 'Y'))) CNEE_ADDR,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(LENGTH(TRIM(N.CUST_NM)), 0, 'N',NULL,'N', 'Y')) NTFY_NM,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(B.SAM_CNEE_NTFY_FLG,'Y','Y',DECODE(LENGTH(TRIM(N.CUST_ADDR)), 0, 'N',NULL,'N', 'Y'))) NTFY_ADDR,
                    B.BKG_CGO_TP_CD,
                    DECODE(B.POL_CD, @[loc_cd], 'E', 'R') TR,
                    DECODE(B.DCGO_FLG,'N','N','Y') DCGO_FLG,
                    DECODE(B.RC_FLG,'N','N','Y') RC_FLG
            FROM    BKG_VVD BV,
                    BKG_BOOKING B,
                    BKG_BL_DOC BL,
                    BKG_CUSTOMER S,
                    BKG_CUSTOMER C,
                    BKG_CUSTOMER N,
    			    BKG_BL_ISS I
            WHERE   BV.VSL_CD           =    SUBSTR(@[vvd],1,4)
            AND     BV.SKD_VOY_NO       =    SUBSTR(@[vvd],5,4)
            AND     BV.SKD_DIR_CD       =    SUBSTR(@[vvd],9,1)
            AND     BV.BKG_NO           =    B.BKG_NO
            AND     BV.BKG_NO           =    BL.BKG_NO
            AND	    B.BKG_STS_CD		<>	'S'
		    AND	    B.BKG_STS_CD		<>	decode(@[bl_type],'C',' ','X')
			AND	    BV.POL_CD	        =	@[loc_cd]				--T/S 물량 포함을 위해 SQL 문으로 수정. 2009.12.31 전창현
		    --AND     SUBSTR(B.POD_CD,1,2) not in ('CA', 'US')
			AND     B.POL_CD            LIKE 'CN%'					--T/S 물량 포함을 위해 SQL 문으로 수정. 2009.12.31 전창현
		    AND     B.BKG_NO			=    I.BKG_NO
		    AND     (I.OBL_ISS_DT is not null or I.OBL_ISS_FLG = 'Y')
            AND     B.BKG_NO            =    S.BKG_NO(+)
            AND     B.BKG_NO            =    C.BKG_NO(+)
            AND     B.BKG_NO            =    N.BKG_NO(+)
            AND     S.BKG_CUST_TP_CD(+) =    'S'
            AND     C.BKG_CUST_TP_CD(+) =    'C'
            AND     N.BKG_CUST_TP_CD(+) =    'N'
        	--ZONE 콤보리스트에 따른 조건
			#if (${zone} == 'I')
        	--2) IPT : I ->
        	AND (SUBSTR(B.ORG_SCONTI_CD,1,1) = SUBSTR(B.DEST_SCONTI_CD,1,1))
			#elseif (${zone} == 'O')
        	--3) OCN : O ->
        	AND (SUBSTR(B.ORG_SCONTI_CD,1,1) <> SUBSTR(B.DEST_SCONTI_CD,1,1))
			#else
        	--1) All : A -> 추가 조건 없음.
			#end
        	UNION
        	SELECT  B.BKG_NO BKG_NO,
                    B.BL_NO BL_NO,
                    B.POL_CD POL_CD,
                    B.POD_CD POD_CD,
                    B.DEL_CD DEL_CD,
					B.BKG_STS_CD,
                    DECODE(NVL(BL.PCK_QTY,0),0,'N','Y') PCK_QTY,
                    DECODE(BL.PCK_TP_CD,NULL,'N','Y') PCK_TP_CD,
                    DECODE(NVL(BL.ACT_WGT,0),0,'N','Y') ACT_WGT,
                    DECODE(BL.WGT_UT_CD,NULL,'N','Y') WGT_UT_CD,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CUST_NM)), 0, 'N',NULL,'N', 'Y')) SHPR_NM,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CUST_ADDR)), 0, 'N',NULL,'N', 'Y')) SHPR_ADDR,
                    DECODE(C.BKG_CUST_TP_CD,'C',DECODE(LENGTH(TRIM(C.CUST_NM)), 0, 'N',NULL,'N', 'Y')) CNEE_NM,
                    DECODE(C.BKG_CUST_TP_CD,'C',DECODE(B.CUST_TO_ORD_FLG,'Y','Y',DECODE(LENGTH(TRIM(C.CUST_ADDR)), 0, 'N',NULL,'N', 'Y'))) CNEE_ADDR,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(LENGTH(TRIM(N.CUST_NM)), 0, 'N',NULL,'N', 'Y')) NTFY_NM,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(B.SAM_CNEE_NTFY_FLG,'Y','Y',DECODE(LENGTH(TRIM(N.CUST_ADDR)), 0, 'N',NULL,'N', 'Y'))) NTFY_ADDR,
                    B.BKG_CGO_TP_CD,
                    DECODE(B.POL_CD, @[loc_cd], 'E', 'R') TR,
                    DECODE(B.DCGO_FLG,'N','N','Y') DCGO_FLG,
                    DECODE(B.RC_FLG,'N','N','Y') RC_FLG
            FROM    BKG_VVD BV,
                    BKG_BOOKING B,
                    BKG_BL_DOC BL,
                    BKG_CUSTOMER S,
                    BKG_CUSTOMER C,
                    BKG_CUSTOMER N,
    			    BKG_CSTMS_ADV_BL A
            WHERE   BV.VSL_CD           =    SUBSTR(@[vvd],1,4)
            AND     BV.SKD_VOY_NO       =    SUBSTR(@[vvd],5,4)
            AND     BV.SKD_DIR_CD       =    SUBSTR(@[vvd],9,1)
			AND		BV.POL_CD			= 	@[loc_cd]
            AND     BV.BKG_NO           =    B.BKG_NO
            AND     BV.BKG_NO           =    BL.BKG_NO
            AND	    B.BKG_STS_CD		<>	'S'
		    AND	    B.BKG_STS_CD		<>	decode(@[bl_type],'C',' ','X')
	        AND     B.POL_CD            LIKE    'CN%'
		    AND     BV.BKG_NO			=    A.BKG_NO
		    --AND     A.CNT_CD            in   ('CA', 'US')
            AND     B.BKG_NO            =    S.BKG_NO(+)
            AND     B.BKG_NO            =    C.BKG_NO(+)
            AND     B.BKG_NO            =    N.BKG_NO(+)
            AND     S.BKG_CUST_TP_CD(+) =    'S'
            AND     C.BKG_CUST_TP_CD(+) =    'C'
            AND     N.BKG_CUST_TP_CD(+) =    'N'
        	--ZONE 콤보리스트에 따른 조건
			#if (${zone} == 'I')
        	--2) IPT : I ->
        	AND (SUBSTR(B.ORG_SCONTI_CD,1,1) = SUBSTR(B.DEST_SCONTI_CD,1,1))
			#elseif (${zone} == 'O')
        	--3) OCN : O ->
        	AND (SUBSTR(B.ORG_SCONTI_CD,1,1) <> SUBSTR(B.DEST_SCONTI_CD,1,1))
			#else
        	--1) All : A -> 추가 조건 없음.
			#end
         ) INFO,
    	 (   SELECT  CNTR.BKG_NO,
                	 COUNT(*) CNTR_CNT,
                	 MIN(DECODE(TRIM(SEAL.CNTR_SEAL_NO),NULL,'N','Y')) SEAL_NO_FLG,
                	 MIN(DECODE(SUBSTR(CNTR.CNTR_TPSZ_CD,1,1),'F','Y','A','Y',DECODE(TRIM(SEAL.SEAL_PTY_TP_CD),NULL,'N','Y'))) SEALER_CD_FLG
        	 FROM    BKG_VVD BV,
           	     	 BKG_CONTAINER CNTR,
                	 BKG_CNTR_SEAL_NO SEAL
             WHERE   BV.VSL_CD     = SUBSTR(@[vvd],1,4)
             AND     BV.SKD_VOY_NO = SUBSTR(@[vvd],5,4)
             AND     BV.SKD_DIR_CD = SUBSTR(@[vvd],9,1)
        	 AND     BV.BKG_NO     = CNTR.BKG_NO
        	 AND     CNTR.BKG_NO   = SEAL.BKG_NO(+)
        	 AND     CNTR.CNTR_NO  = SEAL.CNTR_NO(+)
        	 GROUP BY CNTR.BKG_NO
    	 ) CNTR,
		(	SELECT *
 		 	FROM (
    			SELECT  N.BKG_NO, N.SND_USR_ID, N.SND_DT, N.NTC_KND_CD, N.NTC_VIA_CD,
            			DENSE_RANK() OVER(PARTITION BY N.BKG_NO ORDER BY N.SND_DT DESC) AS RNUM
    			FROM    BKG_VVD V, BKG_NTC_HIS N
    			WHERE   V.VSL_CD     = SUBSTR(@[vvd],1,4)
    			AND     V.SKD_VOY_NO = SUBSTR(@[vvd],5,4)
    			AND     V.SKD_DIR_CD = SUBSTR(@[vvd],9,1)
    			AND     V.BKG_NO     = N.BKG_NO
				AND     N.NTC_KND_CD = 'TM'
				AND		N.SND_DT 	 IS NOT NULL
 			)
 			WHERE RNUM = 1
		) NTC
   WHERE INFO.BKG_NO       = CNTR.BKG_NO(+)
     AND INFO.BKG_NO       = NTC.BKG_NO(+)
	 AND NTC.NTC_VIA_CD(+) = 'E'
	 AND NTC.NTC_KND_CD(+) = 'TM'  --기존 터미널 EDI 는 BT 인자로 입력됨. 겹치지 않음.
	 AND decode(NVL(NTC.SND_USR_ID,'N'),'N','N','S') like decode(@[bl_type],'A','%','N','N','C','S',@[bl_type])
GROUP BY INFO.BKG_NO,
         INFO.BL_NO,
         INFO.POL_CD,
         INFO.POD_CD,
         INFO.DEL_CD,
		 INFO.BKG_STS_CD,
         INFO.PCK_QTY,
         INFO.PCK_TP_CD,
         INFO.ACT_WGT,
         INFO.WGT_UT_CD,
         INFO.SHPR_NM,
         INFO.SHPR_ADDR,
         INFO.CNEE_NM,
         INFO.CNEE_ADDR,
         INFO.NTFY_NM,
         INFO.NTFY_ADDR,
         INFO.BKG_CGO_TP_CD,
         INFO.TR,
         INFO.DCGO_FLG,
         INFO.RC_FLG,
		 NTC.SND_USR_ID,
         CNTR.SEAL_NO_FLG,
         CNTR.SEALER_CD_FLG,
         CNTR.CNTR_CNT
ORDER BY INFO.BL_NO			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="bl_type" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
