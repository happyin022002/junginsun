<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ACMSimulationDBDAOSearchAGNCommMassSimSimulationNumberExcelListRSQL">
			<desc><![CDATA[SearchAGNCommMassSimSimulationNumberExcelList]]></desc>
			<sql><![CDATA[
SELECT A.BKG_NO,
       C.BL_NO,
       A.IO_BND_CD,
       MAX(A.AC_TP_CD) AS AC_TP_CD, --Type
       MAX(A.COMM_STND_COST_CD) AS COMM_STND_COST_CD, -- Account
       R.VSL_CD||R.SKD_VOY_NO||R.DIR_CD AS REV_VVD_CD,
       (SELECT M.COST_YRMON AS REV_MON
        FROM COA_MON_VVD M , COA_RGST_BKG R
        WHERE 1=1 
        AND R.BKG_NO     = A.BKG_NO
        AND M.TRD_CD     = R.TRD_CD
        AND M.RLANE_CD   = R.RLANE_CD          
        AND M.IOC_CD     = R.IOC_CD            
        AND M.VSL_CD     = R.VSL_CD            
        AND M.SKD_VOY_NO = R.SKD_VOY_NO        
        AND M.DIR_CD     = R.DIR_CD) AS REV_MON, -- R.Mon
       MAX(DECODE(A.AC_VSL_CD, 'CNTC', '', A.AC_VSL_CD||A.AC_SKD_VOY_NO||A.AC_SKD_DIR_CD||A.AC_REV_DIR_CD)) AS COMM_VVD,
       TO_CHAR(TO_DATE(A.SAIL_ARR_DT, 'YYYYMMDD'), 'YYYY-MM-DD') AS SAIL_ARR_DT,
        (ACM_JOIN_FNC(CURSOR(SELECT CNTR_TPSZ_CD || 'x' || OP_CNTR_QTY
                        	   FROM (
                                    SELECT BKG_NO
                                         , CASE WHEN OP_CNTR_QTY = EQ_SUBST_CGO_QTY
                                                THEN SUBSTR(CNTR_TPSZ_CD, 1,1)||EQ_SUBST_CNTR_TPSZ_CD
                                                WHEN OP_CNTR_QTY > EQ_SUBST_CGO_QTY
                                                THEN DECODE(SUBSTR(CNTR_TPSZ_CD,1,1), 'R', DECODE(SUBSTR(EQ_SUBST_CNTR_TPSZ_CD,1,1),'D', SUBSTR(CNTR_TPSZ_CD,1,1)||EQ_SUBST_CNTR_TPSZ_CD, EQ_SUBST_CNTR_TPSZ_CD), EQ_SUBST_CNTR_TPSZ_CD)
                                           END AS CNTR_TPSZ_CD
                                         , CASE WHEN OP_CNTR_QTY = EQ_SUBST_CGO_QTY
                                                THEN EQ_SUBST_CGO_QTY
                                                WHEN OP_CNTR_QTY > EQ_SUBST_CGO_QTY
                                                THEN DECODE(EQ_SUBST_CNTR_TPSZ_CD, NULL, OP_CNTR_QTY, EQ_SUBST_CGO_QTY)
                                           END AS OP_CNTR_QTY  
                                      FROM BKG_QUANTITY BQ
                                     WHERE 1=1
                                       AND BQ.EQ_SUBST_CGO_QTY > 0
                                     UNION 
                                    SELECT BKG_NO
                                         , CASE WHEN OP_CNTR_QTY > EQ_SUBST_CGO_QTY
                                                THEN CNTR_TPSZ_CD
                                                WHEN OP_CNTR_QTY = EQ_SUBST_CGO_QTY
                                                THEN SUBSTR(CNTR_TPSZ_CD, 1,1)||EQ_SUBST_CNTR_TPSZ_CD
                                           END AS CNTR_TPSZ_CD
                                          ,CASE WHEN OP_CNTR_QTY > EQ_SUBST_CGO_QTY
                                                THEN OP_CNTR_QTY-EQ_SUBST_CGO_QTY
                                                WHEN OP_CNTR_QTY = EQ_SUBST_CGO_QTY
                                                THEN EQ_SUBST_CGO_QTY
                                           END AS OP_CNTR_QTY
                                      FROM BKG_QUANTITY BQ
                                     WHERE 1=1
                                       AND BQ.EQ_SUBST_CGO_QTY > 0
                                       UNION
                                    SELECT BKG_NO, CNTR_TPSZ_CD, OP_CNTR_QTY
                                      FROM BKG_QUANTITY BQ
                                     WHERE 1=1
                                       AND BQ.EQ_SUBST_CGO_QTY = 0
                                    ) Q 
                                WHERE Q.BKG_NO = A.BKG_NO  
                                    
        ))) CNTR_QTY, -- RD TYPE 구분
       SUM(A.CRNT_REV_AMT) AS CRNT_REV_AMT,
       SUM(A.DDCT_CHG_AMT) AS DDCT_CHG_AMT,
       SUM(A.DDCT_TRSP_AMT) AS DDCT_TRSP_AMT,
       SUM(A.CRNT_REV_AMT - A.DDCT_CHG_AMT - A.DDCT_TRSP_AMT) AS POST_REV_AMT,
       SUM(DECODE(SIGN(INSTR('GKHSCNR', A.AC_TP_CD)), 1, A.PPD_AMT, 0)) AS PPD_AMT,
       SUM(DECODE(SIGN(INSTR('GKHSCNR', A.AC_TP_CD)), 1, A.IF_AMT, 0)) AS USD_AMT,
       A.AR_OFC_CD AS RESPB_OFC_CD,
       A.AR_OFC_CD,
       MAX(A.AP_OFC_CD) AS AP_OFC_CD,
       (SELECT RHQ_CD
       FROM ACM_OFC_INFO
       WHERE AGN_CD = A.AGN_CD AND ROWNUM = 1) AS HQ_OFC_CD,
       MAX(A.OFC_CHR_CD) AS OFC_CHR_CD,
       MAX(A.SIM_NO) AS SIM_NO
  FROM ACM_SIM_COMM A,
       COA_RGST_BKG R,
       BKG_BOOKING C
 WHERE 1 = 1
   AND A.SIM_NO = @[sim_no]
   AND A.CRE_USR_ID <> 'COST'
   AND C.BKG_NO = A.BKG_NO(+)
   AND C.BKG_NO = R.BKG_NO
 GROUP BY C.BL_NO,
          A.BKG_NO,
          A.IO_BND_CD,
          R.VSL_CD||R.SKD_VOY_NO||R.DIR_CD,
          A.AC_RLANE_CD,
          A.SAIL_ARR_DT,
          A.LOC_CD,
          A.AC_SEQ,
          C.BKG_STS_CD,
          A.REV_DIV_CD,
          A.CURR_CD,
          A.AC_STS_CD,
          A.CRE_DT,
          A.BDR_FLG,
          A.AC_PROC_DESC,
          A.AR_OFC_CD,
          A.AGN_CD
 ORDER BY BKG_NO, BL_NO, IO_BND_CD			]]></sql>
			<params>
				<param name="sim_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
