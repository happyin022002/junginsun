<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CommonDBDAOSearchCommonCodeForPlanningRSQL">
			<desc><![CDATA[planning단계에서의 콤보를 정의한다.]]></desc>
			<sql><![CDATA[
#if (${methodname} == 'searchTradeControl')

/* Trade 콤보의 목록을 가져온다 */
SELECT DISTINCT         
       A1.TRD_CD AS CODE
      ,A1.TRD_CD AS NAME    
 FROM CSQ_DAT_RLT A1
WHERE A1.BSE_TP_CD     = @[f_bse_tp_cd]
  AND A1.BSE_YR        = @[f_bse_yr]
  AND A1.BSE_QTR_CD    = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
  AND A1.OFC_VW_CD     = @[f_ofc_vw_cd]
#if (${f_gubun} == 'HO')
  AND A1.TEAM_CD       = (SELECT CASE WHEN @[f_ofc_org_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN TEAM_CD
                                                                                                                                       ELSE @[f_ofc_org_cd]
                                 END TEAM_CD
                            FROM DUAL)
#elseif (${f_gubun} == 'RHQ')
  AND A1.RHQ_CD        = (SELECT CASE WHEN @[f_ofc_org_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN RHQ_CD
                                                                                                                                       ELSE @[f_ofc_org_cd]
                                 END TEAM_CD
                            FROM DUAL)
  AND A1.OB_DIV_CD     = DECODE(@[f_ob_div_cd],'All',OB_DIV_CD,@[f_ob_div_cd])
#end
  AND 1 =  (
              SELECT DISTINCT 1
                FROM CSQ_QTA_LANE_MGMT S1
               WHERE S1.TRD_CD     = A1.TRD_CD 
                 AND S1.BSE_TP_CD  = A1.BSE_TP_CD
                 AND S1.BSE_YR     = A1.BSE_YR
                 AND S1.BSE_QTR_CD = A1.BSE_QTR_CD
                 AND S1.IAS_SCTR_FLG  = 'N'
                 AND S1.CSQ_ACT_FLG   = 'Y' 
            )
ORDER BY TRD_CD


#elseif (${methodname} == 'searchrLaneControl')

/* Rlane 콤보의 목록을 가져온다 */
SELECT DISTINCT         
       A1.RLANE_CD AS CODE,  
       A1.RLANE_CD AS NAME  
FROM CSQ_QTA_LANE_MGMT A1,
     CSQ_DAT_RLT A2
WHERE A1.BSE_TP_CD     = @[f_bse_tp_cd]
  AND A1.BSE_YR        = @[f_bse_yr]
  AND A1.BSE_QTR_CD    = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
  AND A1.TRD_CD        = @[f_trd_cd]
  AND A1.CSQ_ACT_FLG = 'Y'
#if (${f_ofc_vw_cd} != '')
  AND A2.OFC_VW_CD     = @[f_ofc_vw_cd]
#end
#if (${f_gubun} == 'HO')
  AND A2.TEAM_CD       = (SELECT CASE WHEN @[f_ofc_org_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN A2.TEAM_CD
                                                                                                                                           ELSE @[f_ofc_org_cd]
                                   END TEAM_CD
                             FROM DUAL)
#elseif (${f_gubun} == 'RHQ')
  AND A2.RHQ_CD        = (SELECT CASE WHEN @[f_ofc_org_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN A2.RHQ_CD
                                                                                                                                           ELSE @[f_ofc_org_cd]
                                   END RHQ_CD
                             FROM DUAL)
#end
  AND A1.BSE_TP_CD     = A2.BSE_TP_CD
  AND A1.BSE_YR        = A2.BSE_YR
  AND A1.BSE_QTR_CD    = A2.BSE_QTR_CD
  AND A1.TRD_CD        = A2.TRD_CD
ORDER BY A1.RLANE_CD

#elseif (${methodname} == 'searchMonth')

/* Month 콤보의 목록을 가져온다 */
  SELECT BSE_MON AS CODE
        ,BSE_MON AS NAME
    FROM (
            SELECT '1Q' QTR_CD,'01' BSE_MON FROM DUAL UNION ALL
            SELECT '1Q' QTR_CD,'02' BSE_MON FROM DUAL UNION ALL
            SELECT '1Q' QTR_CD,'03' BSE_MON FROM DUAL UNION ALL
            SELECT '2Q' QTR_CD,'04' BSE_MON FROM DUAL UNION ALL
            SELECT '2Q' QTR_CD,'05' BSE_MON FROM DUAL UNION ALL
            SELECT '2Q' QTR_CD,'06' BSE_MON FROM DUAL UNION ALL
            SELECT '3Q' QTR_CD,'07' BSE_MON FROM DUAL UNION ALL
            SELECT '3Q' QTR_CD,'08' BSE_MON FROM DUAL UNION ALL
            SELECT '3Q' QTR_CD,'09' BSE_MON FROM DUAL UNION ALL
            SELECT '4Q' QTR_CD,'10' BSE_MON FROM DUAL UNION ALL
            SELECT '4Q' QTR_CD,'11' BSE_MON FROM DUAL UNION ALL
            SELECT '4Q' QTR_CD,'12' BSE_MON FROM DUAL            
            
         )
  WHERE QTR_CD = NVL(@[f_bse_qtr_cd],QTR_CD)
  ORDER BY BSE_MON

#elseif (${methodname} == 'searchWeek')

/* Week 콤보의 목록을 가져온다 */
  SELECT BSE_WK AS CODE
        ,BSE_WK AS NAME
    FROM (
            SELECT '1Q' QTR_CD
                  ,'00' BSE_WK 
              FROM DUAL
            UNION ALL
            SELECT CASE WHEN LEVEL < 14 THEN '1Q'
                        WHEN LEVEL < 27 THEN '2Q'
                        WHEN LEVEL < 40 THEN '3Q'
                   ELSE '4Q'
                   END AS QTR_CD
                  ,CASE WHEN LEVEL < 10 THEN '0'||LEVEL
                   ELSE TO_CHAR(LEVEL) 
                   END AS BSE_WK
             FROM DUAL CONNECT BY LEVEL < 54 
         )
  WHERE QTR_CD = NVL(@[f_bse_qtr_cd],QTR_CD)


#elseif (${methodname} == 'searchBoundControl')

/* Bound 콤보의 목록을 가져온다 */
SELECT DISTINCT
       CONV_DIR_CD AS CODE
      ,CONV_DIR_CD AS NAME
  FROM CSQ_QTA_STEP_VER
  WHERE 1=1
#if (${f_gubun} == 'HO')
   AND SUBSTR(QTA_VER_NO,4,6) = (SELECT CASE WHEN @[f_ofc_org_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN SUBSTR(QTA_VER_NO,4,6)
                                                                                                                                                 ELSE @[f_ofc_org_cd]
                                         END TEAM_CD
                                   FROM DUAL)
#elseif (${f_gubun} == 'RHQ')
   AND SUBSTR(QTA_VER_NO,4,5) = (SELECT CASE WHEN @[f_ofc_org_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN SUBSTR(QTA_VER_NO,4,5)
                                                                                                                                                 ELSE @[f_ofc_org_cd]
                                         END TEAM_CD
                                   FROM DUAL)
#end
   AND  BSE_TP_CD               = @[f_bse_tp_cd]
   AND  BSE_YR                  = @[f_bse_yr]
   AND  BSE_QTR_CD              = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
#if (${f_ofc_vw_cd} != '')
   AND  OFC_VW_CD               = @[f_ofc_vw_cd]
#end
   and  QTA_STEP_CD             = NVL(@[f_qta_step_cd],QTA_STEP_CD)
   AND  TRD_CD                  = @[f_trd_cd]
 ORDER BY CONV_DIR_CD

#elseif (${methodname} == 'searchRLaneGroupList')

--노선의 VVD 정보를 가지고 온다.
SELECT DISTINCT RLANE_CD||DIR_CD CODE
      ,VSL_CD||SKD_VOY_NO||SKD_DIR_CD NAME 
  FROM CSQ_CFM_TGT_VVD 
 WHERE 1=1
   AND SUBSTR(QTA_RLSE_VER_NO,-2) = '02'
   AND BSE_TP_CD   = 'Q'
   AND BSE_YR      = @[f_bse_yr]
   AND BSE_QTR_CD  = @[f_bse_qtr_cd]
   AND TRD_CD      = NVL(@[f_trd_cd], TRD_CD) 
#if (${f_sub_trd_cd} != '' && ${f_sub_trd_cd} != 'All')
   AND SUB_TRD_CD  = @[f_sub_trd_cd]
#end
 ORDER BY CODE
   		 ,NAME 



#elseif (${methodname} == 'searchBSAList')


SELECT DISTINCT CODE, NAME
  FROM (
        SELECT DISTINCT
               A1.RLANE_CD
              ,A1.FNL_BSA_CAPA
              ,MAX(A2.RANGE_BSA)+9 CODE
              ,MAX(A2.RANGE_BSA)+9 NAME --차이가 0~9 사이일 경우 큰 BSA를 대표로 그룹핑한다.
          FROM (
                         SELECT DISTINCT
                               A1.RLANE_CD
                              ,A1.DIR_CD
                              ,A1.FNL_BSA_CAPA
                          FROM CSQ_QTA_TGT_VVD A1, CSQ_QTA_LANE_MGMT A2
                         WHERE A1.BSE_TP_CD   = @[f_bse_tp_cd]
                           AND A1.BSE_YR      = @[f_bse_yr]
                           AND A1.BSE_QTR_CD  = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
                           AND A1.RLANE_CD    = @[f_rlane_cd]
                           AND A1.DELT_FLG    = 'N'
                           AND A2.CSQ_ACT_FLG = 'Y'
                           AND A2.IAS_SCTR_FLG = 'Y'
                           AND A1.BSE_TP_CD   = A2.BSE_TP_CD
                           AND A1.BSE_YR      = A2.BSE_YR
                           AND A1.BSE_QTR_CD  = A2.BSE_QTR_CD
                           AND A1.TRD_CD      = A2.TRD_CD
                           AND A1.RLANE_CD    = A2.RLANE_CD
                         ORDER BY A1.DIR_CD, A1.RLANE_CD,A1.FNL_BSA_CAPA DESC

               ) A1
              ,(
                         SELECT DISTINCT A1.RLANE_CD
                                        ,A1.DIR_CD
                                        ,A1.FNL_BSA_CAPA
                                        ,A1.FNL_BSA_CAPA - 9 AS RANGE_BSA
                          FROM CSQ_QTA_TGT_VVD A1, CSQ_QTA_LANE_MGMT A2
                         WHERE A1.BSE_TP_CD   = @[f_bse_tp_cd]
                           AND A1.BSE_YR      = @[f_bse_yr]
                           AND A1.BSE_QTR_CD  = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
                           AND A1.RLANE_CD    = @[f_rlane_cd]
                           AND A2.CSQ_ACT_FLG = 'Y'
                           AND A2.IAS_SCTR_FLG = 'Y'
                           AND A1.BSE_TP_CD   = A2.BSE_TP_CD
                           AND A1.BSE_YR      = A2.BSE_YR
                           AND A1.BSE_QTR_CD  = A2.BSE_QTR_CD
                           AND A1.TRD_CD      = A2.TRD_CD
                           AND A1.RLANE_CD    = A2.RLANE_CD
                         ORDER BY A1.DIR_CD, A1.RLANE_CD, A1.FNL_BSA_CAPA DESC

               ) A2
         WHERE 1=1
           AND A1.DIR_CD        = A2.DIR_CD
           AND A1.RLANE_CD      = A2.RLANE_CD
           AND A1.FNL_BSA_CAPA >= A2.RANGE_BSA
         GROUP BY A1.RLANE_CD, A1.FNL_BSA_CAPA
       )
UNION
SELECT DISTINCT GRP_BSA_CAPA, GRP_BSA_CAPA
  FROM CSQ_SCTR_ADD_TGT_VVD
 WHERE BSE_TP_CD  = @[f_bse_tp_cd]
   AND BSE_YR     = @[f_bse_yr]
   AND BSE_QTR_CD = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
   AND RLANE_CD   = @[f_rlane_cd]
ORDER BY NAME

#elseif (${methodname} == 'searchRhqListByPortion')

/* Portion Adjustment 시트 내 RHQ 콤보의 목록을 가져온다 */
SELECT DISTINCT
       A1.RHQ_CD AS CODE
      ,A1.RHQ_CD AS NAME
 FROM CSQ_QTA_OFC A1
     ,CSQ_QTA_LANE_OFC A2
WHERE 1=1
  AND A2.BSE_TP_CD     = 'Q'
  AND A2.BSE_YR        = @[f_bse_yr]
  AND A2.BSE_QTR_CD    = @[f_bse_qtr_cd]
  AND A2.OFC_VW_CD     = SUBSTR(@[f_ofc_vw_cd],0, 1)
  AND A2.TRD_CD        = @[f_trd_cd]
  AND A2.RLANE_CD      = @[f_rlane_cd]
  AND A2.DIR_CD        = @[f_dir_cd]
  AND A1.RHQ_CD        = A2.RHQ_CD
  AND A1.RGN_OFC_CD    = A2.RGN_OFC_CD
  AND A1.DELT_FLG      = 'N'
  AND A2.CSQ_ACT_FLG   = 'Y'
ORDER BY A1.RHQ_CD

#elseif (${methodname} == 'searchOfcListByPortion')

/* Portion Adjustment 시트 내  Office 콤보의 목록을 가져온다 */
SELECT DISTINCT
       A1.RGN_OFC_CD AS CODE
      ,A1.RGN_OFC_CD AS NAME
 FROM CSQ_QTA_OFC A1
     ,CSQ_QTA_LANE_OFC A2
WHERE 1=1
  AND A2.BSE_TP_CD     = 'Q'
  AND A2.BSE_YR        = @[f_bse_yr]
  AND A2.BSE_QTR_CD    = @[f_bse_qtr_cd]
  AND A2.OFC_VW_CD     = SUBSTR(@[f_ofc_vw_cd],0, 1)
  AND A2.TRD_CD        = @[f_trd_cd]
  AND A2.RLANE_CD      = @[f_rlane_cd]
  AND A2.DIR_CD        = @[f_dir_cd]
  and A1.RHQ_CD        = @[f_rhq_cd]
  AND A1.RHQ_CD        = A2.RHQ_CD
  AND A1.RGN_OFC_CD    = A2.RGN_OFC_CD
  AND A1.DELT_FLG      = 'N'
  AND A2.CSQ_ACT_FLG   = 'Y'
ORDER BY A1.RGN_OFC_CD

#elseif (${methodname} == 'searchPfGroupPlanList')

-- PF Group List 콤보의 목록을 가져온다.
SELECT DISTINCT 
       RLANE_CD||'|'||PF_GRP_CD NAME
      ,PF_GRP_CD CODE
FROM CSQ_SCTR_LANE_OFC
WHERE 1=1
AND CSQ_ACT_FLG = 'Y'
AND RLANE_CD 	= @[f_rlane_cd]
AND BSE_TP_CD   = @[f_bse_tp_cd]
AND BSE_YR      = @[f_bse_yr]
AND BSE_QTR_CD  = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
ORDER BY NAME, CODE 

#elseif (${methodname} == 'searchPolCdSectorList')

/* R/Lane에 따른 POL Sector 콤보의 목록을 가져온다 */
SELECT DISTINCT 
       POL_CD CODE
      ,POL_CD NAME
#if (${tb_nm} == 'csq_sctr_pair_mgmt')
FROM CSQ_SCTR_PAIR_MGMT
#elseif (${tb_nm} == 'csq_sctr_lane_ofc')
FROM CSQ_SCTR_LANE_OFC
#end
WHERE 1=1
AND CSQ_ACT_FLG = 'Y'
AND RLANE_CD 	= @[f_rlane_cd]
AND BSE_TP_CD   = @[f_bse_tp_cd]
AND BSE_YR      = @[f_bse_yr]
AND BSE_QTR_CD  = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
ORDER BY POL_CD

#elseif (${methodname} == 'searchPodCdSectorList')

/* R/Lane에 따른 POD Sector 콤보의 목록을 가져온다 */
SELECT DISTINCT 
       POD_CD CODE
      ,POD_CD NAME
#if (${tb_nm} == 'csq_sctr_pair_mgmt')
FROM CSQ_SCTR_PAIR_MGMT
#elseif (${tb_nm} == 'csq_sctr_lane_ofc')
FROM CSQ_SCTR_LANE_OFC
#end
WHERE 1=1
AND CSQ_ACT_FLG = 'Y'
AND RLANE_CD 	= @[f_rlane_cd]
AND BSE_TP_CD   = @[f_bse_tp_cd]
AND BSE_YR      = @[f_bse_yr]
AND BSE_QTR_CD  = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
ORDER BY POD_CD

#elseif (${methodname} == 'searchPolCdSectorMultiList')

/* Multi R/Lane에 따른 POL Sector 콤보의 목록을 가져온다 */
SELECT DISTINCT 
       POL_CD CODE
      ,POL_CD NAME
FROM CSQ_SCTR_PAIR_MGMT
WHERE 1=1
#if (${f_act_flag} != 'N')
AND CSQ_ACT_FLG = 'Y'
#end
AND RLANE_CD IN ( ${f_rlane_cd} )
AND BSE_TP_CD   = @[f_bse_tp_cd]
AND BSE_YR      = @[f_bse_yr]
AND BSE_QTR_CD  = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
ORDER BY POL_CD

#elseif (${methodname} == 'searchPodCdSectorMultiList')

/* Multi R/Lane에 따른 POD Sector 콤보의 목록을 가져온다 */
SELECT DISTINCT 
       POD_CD CODE
      ,POD_CD NAME
FROM CSQ_SCTR_PAIR_MGMT
WHERE 1=1
#if (${f_act_flag} != 'N')
AND CSQ_ACT_FLG = 'Y'
#end
AND RLANE_CD IN ( ${f_rlane_cd} )
AND BSE_TP_CD   = @[f_bse_tp_cd]
AND BSE_YR      = @[f_bse_yr]
AND BSE_QTR_CD  = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
ORDER BY POD_CD
#end			]]></sql>
			<params>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_bse_qtr_cd" type="12" value="" out="N"/>
				<param name="f_ofc_vw_cd" type="12" value="" out="N"/>
				<param name="f_ofc_org_cd" type="12" value="" out="N"/>
				<param name="f_ob_div_cd" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_qta_step_cd" type="12" value="" out="N"/>
				<param name="f_sub_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_rhq_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
