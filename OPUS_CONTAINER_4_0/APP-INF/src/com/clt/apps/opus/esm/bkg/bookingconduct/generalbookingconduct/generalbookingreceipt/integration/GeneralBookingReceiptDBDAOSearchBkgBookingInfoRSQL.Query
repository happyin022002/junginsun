<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralBookingReceiptDBDAOSearchBkgBookingInfoRSQL">
			<desc><![CDATA[Booking 기본정보 조회]]></desc>
			<sql><![CDATA[
SELECT                       				
							BK.BKG_PTY_CUST_CNT_CD AS BKG_PTY_CNT_CD
							, BK.BKG_PTY_CUST_SEQ
							, (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER WHERE CUST_CNT_CD = BK.BKG_PTY_CUST_CNT_CD AND CUST_SEQ = BK.BKG_PTY_CUST_SEQ) AS BKG_PTY_CUST_NM
							, BK.BKG_NO	
							, BK.IRR_BL_NO_FLG	
							, BK.BKG_WT_CHK_FLG
					        , BK.BKG_NO         OLD_BKG_NO	 
					        , BK.MNL_BKG_NO_FLG
					        , BK.SPLIT_FLG				
							, BK.SPLIT_RSN_CD
							, BK.ADV_SHTG_CD
                            , BK.EDI_HLD_FLG	
					        , BK.BL_NO||NVL(BK.BL_TP_CD, DECODE(ISS.OBL_SRND_FLG, 'Y', 'S', null)) BL_NO					
					        , BK.SI_FLG					
					        , BL.BDR_FLG				
							, @[ca_flg] CA_FLG					
					        , BL.CORR_USR_ID CA_USER					
					        , BK.BKG_STS_CD		
							, BK.IRR_BL_NO_FLG			
					        , DECODE(BK.WT_RSN_SPCL_CGO_FLG||BK.WT_RSN_HLD_FLG 					
					                , 'YN', 'Special Cargo Non Approval'					
					                , 'NY', 'User holding'					
					                , 'YY', 'SPC CGO non APVL & User hold', ' ') WAIT_RSN					
					--------BKG ROUTE---
							, BK.SLAN_CD    SLAN_CD
							, BK.SVC_SCP_CD SVC_SCP_CD
					        , BK.VSL_CD||BK.SKD_VOY_NO||BK.SKD_DIR_CD BKG_TRUNK_VVD					
					        , BK.VSL_CD||BK.SKD_VOY_NO||BK.SKD_DIR_CD BKG_TRUNK_VVD_OLD
					        , BK.POR_CD	BKG_POR_CD				
					        , BK.POR_CD POR_CD_OLD				
							, BL.POR_NM POR_NM
					        , SUBSTR(BK.POR_NOD_CD, 6, 2) BKG_POR_YD_CD		
							, SUBSTR(BK.POR_NOD_CD, 6, 2) POR_YD_CD_OLD  			
					        , BK.POL_CD BKG_POL_CD					
					        , BK.POL_CD	POL_CD_OLD
							, BL.POL_NM POL_NM
					        , SUBSTR(BK.POL_NOD_CD, 6, 2) BKG_POL_YD_CD		
					        , SUBSTR(BK.POL_NOD_CD, 6, 2) POL_YD_CD_OLD		
					        , BK.POD_CD BKG_POD_CD					
					        , BK.POD_CD	POD_CD_OLD
							, BL.POD_NM POD_NM
					        , SUBSTR(BK.POD_NOD_CD, 6, 2) BKG_POD_YD_CD				
					        , SUBSTR(BK.POD_NOD_CD, 6, 2) POD_YD_CD_OLD	
					        , BK.DEL_CD	BKG_DEL_CD				
					        , BK.DEL_CD DEL_CD_OLD
							, BL.DEL_NM DEL_NM
					        , SUBSTR(BK.DEL_NOD_CD, 6, 2) BKG_DEL_YD_CD		
					        , SUBSTR(BK.DEL_NOD_CD, 6, 2) DEL_YD_CD_OLD	
							, BL.FNL_DEST_NM              FNL_DEST_NM
					        , BK.OCP_CD					
					        , BK.RCV_TERM_CD					
					        , BK.RCV_TERM_CD RCV_TERM_CD_OLD
					        , BK.DE_TERM_CD					
					        , BK.DE_TERM_CD DE_TERM_CD_OLD
					        , BK.PRE_RLY_PORT_CD	
					        , SUBSTR(PRE.POD_YD_CD, 6, 2) PRE_RLY_PORT_YD_CD					
					        , PRE.VSL_CD||PRE.SKD_VOY_NO||PRE.SKD_DIR_CD PRE_VVD_CD					
					        , BK.PST_RLY_PORT_CD		
					        , SUBSTR(PST.POL_YD_CD, 6, 2) PST_RLY_PORT_YD_CD			
					        , PST.VSL_CD||PST.SKD_VOY_NO||PST.SKD_DIR_CD PST_VVD_CD		
                            , BK.PCTL_NO					
					--------CUSTOMS---
					        , BK.USA_CSTMS_FILE_CD				
					        , BK.CND_CSTMS_FILE_CD
					        , BK.SCAC_CD
					--------CONTRACT---		
							, BK.RFA_NO RFA_NO   
					        , BK.RFA_NO RFA_NO_OLD	
							, '' as RFA_AVAILABLE
                            , BK.SC_NO SC_NO			        				
					        , BK.SC_NO SC_NO_OLD 			
							, '' as SC_AVAILABLE	
                            , BK.TAA_NO TAA_NO			
                            , BK.TAA_NO TAA_NO_OLD	
							, '' as TAA_AVAILABLE			
					        , BK.CTRT_OFC_CD					
					        , BK.CTRT_SREP_CD					
					--------COMMODITY---						
					        , BL.ACT_WGT					
					        , BL.WGT_UT_CD									
					        , BK.CMDT_CD					
					        , BK.CMDT_CD CMDT_CD_OLD
					        , BK.REP_CMDT_CD					
					        , (SELECT CMDT.CMDT_NM FROM MDM_COMMODITY CMDT WHERE BK.CMDT_CD = CMDT.CMDT_CD) CMDT_DESC	
					--------FLEX HEIGHT---
					        , BK.FLEX_HGT_FLG					
					--------SPECIAL CARGO INFO---		 					
					        , BK.DCGO_FLG					
					        , BK.DCGO_FLG DCGO_FLG_OLD
					        , BK.RC_FLG					
					        , BK.RC_FLG RC_FLG_OLD
					        , BK.AWK_CGO_FLG					
					        , BK.AWK_CGO_FLG AWK_CGO_FLG_OLD
					        , BK.BB_CGO_FLG					
					        , BK.BB_CGO_FLG BB_CGO_FLG_OLD
					        , BK.RD_CGO_FLG					
					        , BK.SOC_FLG				
					        , BK.EQ_SUBST_FLG 
							, '' as REJECT_FLAG
        , NVL((
               SELECT DSP --A:APPROVE -> 파랑, N:REJECT -> 빨강, P:PENDING, R:RQST, OTHER:SPECIAL CARGO EXIST
                 FROM (SELECT NVL(DG.SPCL_CGO_APRO_CD,'Y') AS DSP
                         FROM COM_INTG_CD_DTL CD
#if ('Y'==${ca_flg})
                            , BKG_DG_CGO_HIS DG
                        WHERE DG.BKG_NO = @[bkg_no]
                          AND 'TMP0000001' = DG.CORR_NO
#else
                            , BKG_DG_CGO DG
                        WHERE DG.BKG_NO = @[bkg_no]
#end
                          AND 'CD01955' = CD.INTG_CD_ID(+)
                          AND DG.SPCL_CGO_APRO_CD = CD.INTG_CD_VAL_CTNT(+)
                        ORDER BY CD.INTG_CD_VAL_DP_SEQ)
                WHERE 1 = ROWNUM
          ), DECODE(BK.DCGO_FLG, 'Y', 'Y', NULL)) DG_FLG
        , NVL((
               SELECT DSP
                 FROM (SELECT NVL(RF.SPCL_CGO_APRO_CD,'Y') AS DSP
                         FROM COM_INTG_CD_DTL CD
#if ('Y'==${ca_flg})
                            , BKG_RF_CGO_HIS RF
                        WHERE RF.BKG_NO = @[bkg_no]
                          AND 'TMP0000001' = RF.CORR_NO
#else
                            , BKG_RF_CGO RF
                        WHERE RF.BKG_NO = @[bkg_no]
#end
                          AND 'CD01955' = CD.INTG_CD_ID(+)
                          AND RF.SPCL_CGO_APRO_CD = CD.INTG_CD_VAL_CTNT(+)
                        ORDER BY CD.INTG_CD_VAL_DP_SEQ)
                WHERE 1 = ROWNUM
          ), DECODE(BK.RC_FLG, 'Y', 'Y', NULL)) RF_FLG
        , NVL((
               SELECT DSP
                 FROM (SELECT NVL(AK.SPCL_CGO_APRO_CD,'Y') AS DSP
                         FROM COM_INTG_CD_DTL CD
#if ('Y'==${ca_flg})
                            , BKG_AWK_CGO_HIS AK
                        WHERE AK.BKG_NO = @[bkg_no]
                          AND 'TMP0000001' = AK.CORR_NO
#else
                            , BKG_AWK_CGO AK
                        WHERE AK.BKG_NO = @[bkg_no]
#end
                          AND 'CD01955' = CD.INTG_CD_ID(+)
                          AND AK.SPCL_CGO_APRO_CD = CD.INTG_CD_VAL_CTNT(+)
                        ORDER BY CD.INTG_CD_VAL_DP_SEQ)
                WHERE 1 = ROWNUM
          ), DECODE(BK.AWK_CGO_FLG, 'Y', 'Y', NULL)) AWK_FLG
        , NVL((
               SELECT DSP
                 FROM (SELECT NVL(BB.SPCL_CGO_APRO_CD,'Y') AS DSP
                         FROM COM_INTG_CD_DTL CD
#if ('Y'==${ca_flg})
                            , BKG_BB_CGO_HIS BB
                        WHERE BB.BKG_NO = @[bkg_no]
                          AND 'TMP0000001' = BB.CORR_NO
#else
                            , BKG_BB_CGO BB
                        WHERE BB.BKG_NO = @[bkg_no]
#end
                          AND 'CD01955' = CD.INTG_CD_ID(+)
                          AND BB.SPCL_CGO_APRO_CD = CD.INTG_CD_VAL_CTNT(+)
                        ORDER BY CD.INTG_CD_VAL_DP_SEQ)
                WHERE 1 = ROWNUM
          ), DECODE(BK.BB_CGO_FLG, 'Y', 'Y', NULL)) BB_FLG
					--------STOWAGE-------------------------------------------------------------------	
					        --, DECODE(NVL(BK.STWG_CD, 'NULL'), 'NULL', 'N', 'Y') STWG_FLG			
					        --, BK.STWG_CD					
					        --, BK.STWG_RMK					
					        , DECODE(NVL(STW.STWG_CD, 'NULL'), 'NULL', 'N', 'Y') STWG_FLG			
					        , STW.STWG_CD					
					        , STW.STWG_RMK					
					        , BK.HNGR_FLG		
					--------STOP OFF---
							, DECODE(NVL(BK.STOP_OFF_LOC_CD, 'NULL'), 'NULL', 'N', 'Y') STOP_OFF_FLG			
					        , BK.STOP_OFF_LOC_CD					
					        , BK.STOP_OFF_CNTC_PSON_NM				
					        , BK.STOP_OFF_CNTC_PHN_NO					
					        , BK.STOP_OFF_DIFF_RMK					
					--------ETC CGO TYPE---
					        , BK.RAIL_BLK_CD					
					        , BK.HOT_DE_FLG					
					        , BK.SPCL_HIDE_FLG					
					        , BK.FD_GRD_FLG					
					        , BK.PRCT_FLG --PRECAUTION
					        , BK.TWN_SO_NO				
					        , BK.BKG_CGO_TP_CD --'R'=REVENUE EMPTY, 'P'=EMPTY REPO, 'F'=NORMAL FULL BKG
        , NVL((SELECT 'Y' --PREMIUM(HOT DELIVERY)를 선택할 수 있는 화주임
#if (${ca_flg}== 'Y')        					 
        		FROM BKG_CUST_HIS CUST, MDM_CUSTOMER MDM_CUST
               WHERE CUST.BKG_NO      = BK.BKG_NO
			     AND CUST.CORR_NO     = 'TMP0000001'
#else                	
                FROM BKG_CUSTOMER CUST, MDM_CUSTOMER MDM_CUST
               WHERE CUST.BKG_NO      = BK.BKG_NO
#end    					  
                 AND CUST.CUST_CNT_CD = MDM_CUST.CUST_CNT_CD
                 AND CUST.CUST_SEQ    = MDM_CUST.CUST_SEQ
                 AND CUST.BKG_CUST_TP_CD IN ('S', 'F')
                 AND MDM_CUST.VBS_CLSS_CD = '01'
                 AND ROWNUM = 1), 'N') PREMIUM_AVAILABLE_FLG
					--------PLANNED DELIVERY SCHEDULE---
					        , TO_CHAR(BK.MTY_DOR_ARR_DT,  'YYYY-MM-DD') MTY_DOR_ARR_DT					
					        , TO_CHAR(BK.MTY_DOR_ARR_DT,  'YYYY-MM-DD') MTY_DOR_ARR_DT_OLD
					        , TO_CHAR(BK.LODG_DUE_DT,     'YYYY-MM-DD') LODG_DUE_DT					
					        , TO_CHAR(BK.LODG_DUE_DT,     'YYYY-MM-DD') LODG_DUE_DT_OLD
					        , TO_CHAR(BK.DE_DUE_DT,       'YYYY-MM-DD') DE_DUE_DT					
					        , TO_CHAR(BK.DE_DUE_DT,       'YYYY-MM-DD') DE_DUE_DT_OLD
					--------EMPTY CNTR P/UP, RTN CY---
					        , BK.MTY_PKUP_YD_CD					
					        , BK.MTY_PKUP_YD_CD MTY_PKUP_YD_CD_OLD
					        , TO_CHAR(BK.MTY_PKUP_DT,     'YYYY-MM-DD') MTY_PKUP_DT					
					        , TO_CHAR(BK.MTY_PKUP_DT,     'YYYY-MM-DD') MTY_PKUP_DT_OLD
					        , BK.FULL_RTN_YD_CD					
					        , BK.FULL_RTN_YD_CD	FULL_RTN_YD_CD_OLD
                            , BK.MTY_RTN_YD_CD
							, BK.FULL_PKUP_YD_CD		
					--------PARTIAL BKG---ROUTE 변경하고 저장시 PARTIAL CHANGE POP-UP
        , NVL((SELECT 'Y'
#if (${ca_flg}== 'Y')        					 
        		 FROM BKG_BKG_HIS BK1, BKG_CNTR_HIS CNTR1
            		, BKG_BOOKING BK2, BKG_CONTAINER CNTR2
        		WHERE BK1.BKG_NO      	= CNTR1.BKG_NO 
        		  AND BK2.BKG_NO        = CNTR2.BKG_NO
				  AND BK1.CORR_NO 		= 'TMP0000001'
				  AND CNTR1.CORR_NO 	= 'TMP0000001'
#else                	
            	 FROM BKG_BOOKING BK1, BKG_CONTAINER CNTR1
            		, BKG_BOOKING BK2, BKG_CONTAINER CNTR2
            	WHERE BK1.BKG_NO        = CNTR1.BKG_NO 
            	  AND BK2.BKG_NO        = CNTR2.BKG_NO
#end         					
            	  AND BK1.BKG_NO        <> BK2.BKG_NO   --다른 BKG
                  AND CNTR1.CNTR_NO     = CNTR2.CNTR_NO --같은 CNTR
                  AND BK1.BKG_CGO_TP_CD = BK2.BKG_CGO_TP_CD
                  AND BK1.POL_CD        = BK2.POL_CD
                  AND BK1.POD_CD        = BK2.POD_CD
                  AND BK1.VSL_CD        = BK2.VSL_CD
                  AND BK1.SKD_VOY_NO    = BK2.SKD_VOY_NO
                  AND BK1.SKD_DIR_CD    = BK2.SKD_DIR_CD
                  AND CNTR1.CNTR_PRT_FLG= 'Y'
                  AND CNTR2.CNTR_PRT_FLG= 'Y'
				  AND BK1.BKG_STS_CD    <> 'X'
				  AND BK2.BKG_STS_CD    <> 'X'
                  AND BK1.BKG_NO        = BK.BKG_NO
                  AND ROWNUM = 1), 'N') PARTIAL_VVD_ASSIGN_FLG
#if (${ca_flg}== 'Y')        					 
		, NVL((SELECT 'Y' FROM BKG_CNTR_HIS CNTR WHERE CNTR.BKG_NO = BK.BKG_NO AND ROWNUM = 1), 'N') CNTR_FLG
#else                	
		, NVL((SELECT 'Y' FROM BKG_CONTAINER CNTR WHERE CNTR.BKG_NO = BK.BKG_NO AND ROWNUM = 1), 'N') CNTR_FLG
#end
					--------SVC MODE, ROUTE---
					        , BK.ORG_SCONTI_CD  		
					        , BK.DEST_SCONTI_CD 					
					        , BK.ORG_TRNS_SVC_MOD_CD	
					        , BK.DEST_TRNS_SVC_MOD_CD	
					        , BK.ORG_TRNS_MOD_CD
					        , BK.DEST_TRNS_MOD_CD
					        , BK.BLCK_STWG_CD	
					--------REFERENCE NO---
        , NVL((SELECT 'Y'
#if (${ca_flg}== 'Y')        					 
           	     FROM BKG_REF_HIS REFNO
		 	    WHERE REFNO.BKG_NO = BK.BKG_NO
				  AND REFNO.CORR_NO = 'TMP0000001'
#else                	
                 FROM BKG_REFERENCE REFNO
				WHERE REFNO.BKG_NO = BK.BKG_NO
#end    					  
         		  AND BKG_REF_TP_CD IN ('EBRF', 'EBSH' ,'EBFF', 'RGBK', 'ESRF', 'ESSH', 'ESFF', 'FINV')
         		  AND ROWNUM = 1
								), 'N') REF_FLG
					--------ROLL OVER INFO---
						 	, (SELECT COUNT(1) FROM BKG_ROLL_OVR ROL WHERE ROL.BKG_NO = BK.BKG_NO) ROLL_OVR_CNT  
					--------BKG STAFF INFO---
					        , BK.OB_SLS_OFC_CD					
					        , BK.OB_SREP_CD       								
					        , BK.BKG_OFC_CD					
					        , USR.USR_NM		
					        , BK.DOC_USR_ID		
					        , USR.OFC_CD
					        , USR.USR_EML
							, USR.XTN_PHN_NO
					--------EXTERNAL REQUEST---
					        , decode(BK.XTER_BKG_RQST_CD, 'CLT', 'OFF', BK.XTER_BKG_RQST_CD) XTER_BKG_RQST_CD
							, BK.XTER_VGM_RQST_CD
							, BK.XTER_BKG_RQST_REF_NO				
					        , decode(BK.XTER_SI_CD, 'CLT', 'OFF', BK.XTER_SI_CD) XTER_SI_CD
							, BK.XTER_SI_REF_NO
							, BK.XTER_RQST_AUTO_NTC_FLG
					--------REMARK---
					        , BK.INTER_RMK					
					        , BK.XTER_RMK        	
                            , BK.VNDR_RMK
					--------ETC---				
#if (${ca_flg}== 'Y')        					 
		, (SELECT CUST_REF_NO_CTNT
			 FROM BKG_REF_HIS R 
			WHERE R.BKG_REF_TP_CD 	= 'FMCN' 
		 	  AND R.BKG_NO 			= BK.BKG_NO 
			  AND R.CORR_NO 		= 'TMP0000001'
			  AND rownum = 1) FMC_NO
#else                	
		, (SELECT CUST_REF_NO_CTNT 
			 FROM BKG_REFERENCE R 
		    WHERE R.BKG_REF_TP_CD 	= 'FMCN' 
			  AND R.BKG_NO 			= BK.BKG_NO
			  AND rownum = 1) FMC_NO
#end    			--------CONTRACT Party---	
							, BK.BKG_CTRL_PTY_CUST_CNT_CD
							, BK.BKG_CTRL_PTY_CUST_SEQ		
							, (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER MDM WHERE MDM.CUST_CNT_CD = BK.BKG_CTRL_PTY_CUST_CNT_CD AND MDM.CUST_SEQ = BK.BKG_CTRL_PTY_CUST_SEQ AND DELT_FLG ='N')  BKG_CTRL_PTY_CUST_NM
					--------ONLY FOR VO---
							, '' AS REV_DIR_CD
							, '' AS FIRST_POL_CD
							, '' AS FIRST_POL_CLPT_IND_SEQ
							, '' AS FIRST_VVD_CD
							, '' AS LAST_POD_CD
							, '' AS LAST_POD_CLPT_IND_SEQ
							, '' AS LAST_VVD_CD
							, '' AS CRE_USR_ID
							, '' AS UPD_USR_ID
							, '' AS VVD_FLAG
							, '' AS FILER_CD
							, '' AS IS_RATED_FLG
					--------추후에 SQL 통합 고려---
							, '' AS BKG_CNTC_PSON_NM
							, '' AS BKG_CNTC_PSON_EML
							, '' AS BKG_CNTC_PSON_FAX_NO
							, '' AS BKG_CNTC_PSON_MPHN_NO
							, '' AS BKG_CNTC_PSON_PHN_NO
							, '' AS SI_CNTC_PSON_NM
							, '' AS SI_CNTC_PSON_EML
							, '' AS SI_CNTC_PSON_FAX_NO
							, '' AS SI_CNTC_PSON_MPHN_NO
							, '' AS SI_CNTC_PSON_PHN_NO
#if (${ca_flg}== 'Y')
		              FROM 	BKG_BKG_HIS BK,
					  		BKG_BL_DOC_HIS BL, 
					  		BKG_VVD_HIS PRE, 	
					  		BKG_VVD_HIS PST,   
							BKG_BL_ISS_HIS ISS,
							BKG_STWG_CGO_HIS STW, 
#else
		              FROM 	BKG_BOOKING BK,
					  		BKG_BL_DOC BL, 	
					  		BKG_VVD PRE, 	
					  		BKG_VVD PST,    
							BKG_BL_ISS ISS,
							BKG_STWG_CGO STW,
#end    					
					  		COM_USER USR					
					 WHERE BK.BKG_NO         = BL.BKG_NO			
					   AND BK.BKG_NO		 = ISS.BKG_NO(+)		
					   AND BK.BKG_NO         = PRE.BKG_NO(+)					
					   AND 'S'               = PRE.VSL_PRE_PST_CD(+)					
					   AND BK.PRE_RLY_PORT_CD= PRE.POD_CD(+)					
					   AND BK.BKG_NO         = PST.BKG_NO(+)					
					   AND BK.PST_RLY_PORT_CD= PST.POL_CD(+)					
					   AND 'U'               = PST.VSL_PRE_PST_CD(+)			
					   AND UPPER(BK.DOC_USR_ID) = UPPER(USR.USR_ID(+))
					   AND BK.BKG_NO		 = STW.BKG_NO(+)
					   AND 1		 		 = STW.STWG_SEQ(+)
#if (${ca_flg}== 'Y')
					   AND BK.CORR_NO 		 = 'TMP0000001'
					   AND BL.CORR_NO 		 = 'TMP0000001'
					   AND ISS.CORR_NO(+)	 = 'TMP0000001'
					   AND PRE.CORR_NO(+) 	 = 'TMP0000001'
					   AND PST.CORR_NO(+) 	 = 'TMP0000001'
					   AND STW.CORR_NO(+)	 = 'TMP0000001'
#end				
					   AND BK.BKG_NO         = @[bkg_no]			]]></sql>
			<params>
				<param name="ca_flg" type="12" value="N" out="N"/>
				<param name="bkg_no" type="12" value="NBO9BA32455" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
