<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaInquiryDBDAOSearchMonthlyQuotaInquiry0126Tab05RSQL">
			<desc><![CDATA[분기별별 확정된 내용을 Week, Sub Trade,Lane, VVD Group, VVD, RHQ, Area Director,C.Office 별로 Grouping 된 형태로 조회 한다. (주요 table saq_mon_cfm_qta, saq_mon_cfm_tgt_vvd)]]></desc>
			<sql><![CDATA[
WITH TMP_INPUT_PARAMS AS 
    (SELECT DISTINCT 
        @[year] AS BSE_YR, 
        @[quarter] AS BSE_QTR_CD, 	
        @[year]||

    #if (${month} < 10) 
		'0'||@[month]
    #else 
		@[month]
    #end
    
		AS YRMON_1,

        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||

    #if (${month} < 10) 
		'0'||@[month]
    #else 
		@[month]
    #end

	, 'YYYYMM'), 1), 'YYYYMM') AS YRMON_2, 

        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||

    #if (${month} < 10) 
		'0'||@[month]
    #else 
		@[month]
    #end

	, 'YYYYMM'), 2), 'YYYYMM') AS YRMON_3, 

        @[targetGrp] AS SAQ_TGT_GRP_CD,  
        @[version] AS RLSE_VER_NO,  
        @[trade] AS TRD_CD,  
        @[dirCd] AS DIR_CD, 
        @[subTrade] AS SUB_TRD_CD, 
        @[rlaneCd] AS RLANE_CD, 
        (SELECT N2ND_PRNT_OFC_CD  
         FROM   SAQ_ORGANIZATION_V  
         WHERE  OFC_CD = @[rhqCd]) AS RHQ_CD,  
        @[rhqCd] AS AQ_CD_ORG,  		
        @[aqCd] AS AQ_CD,  
        @[from_wk] AS FROM_WK,  
        @[to_wk] AS TO_WK  
     FROM   DUAL)  
    ,TEMP_SMR AS
    (SELECT 
         DISTINCT
         SMR.VSL_CD,
         SMR.SKD_VOY_NO,
         SMR.SKD_DIR_CD,
         SMR.TRD_CD,    
         SMR.DIR_CD, 
         VVD.SUB_TRD_CD,
         SMR.RLANE_CD,  
         SMR.BSE_QTR_CD, 
         VVD.BSE_WK
    FROM SAQ_MON_CFM_QTA SMR 
         JOIN  
         TMP_INPUT_PARAMS INP  
         ON  
         (  
            SMR.BSE_YR = INP.BSE_YR AND  
            SMR.BSE_QTR_CD = INP.BSE_QTR_CD AND  
            SMR.MQTA_RLSE_VER_NO = INP.RLSE_VER_NO AND  
            SMR.TRD_CD = INP.TRD_CD AND  
            SMR.CONV_DIR_CD = INP.DIR_CD AND 

#if (${rlaneCd} != '') 

            SMR.RLANE_CD = INP.RLANE_CD AND 
#end
            SMR.RHQ_CD LIKE INP.RHQ_CD||'%' AND 
            NVL(SMR.AQ_CD, '  ') LIKE INP.AQ_CD||'%'


#if (${isRhq} == 'false') 
		        AND NVL(SMR.AQ_CD, '  ') LIKE INP.AQ_CD_ORG||'%'
#end	
		
		        AND SMR.QTA_TGT_CD = @[selType]												
         )      
         JOIN										 		
       	   SAQ_MON_CFM_TGT_VVD VVD								 	
         ON										 		
         (										 		
            VVD.MQTA_RLSE_VER_NO = SMR.MQTA_RLSE_VER_NO AND				 		
            VVD.BSE_YR = SMR.BSE_YR AND							 		
            VVD.BSE_QTR_CD = SMR.BSE_QTR_CD AND						 		
            VVD.BSE_MON = SMR.BSE_MON AND						 		
            VVD.TRD_CD = SMR.TRD_CD AND							 		
            VVD.RLANE_CD = SMR.RLANE_CD AND						 		
            VVD.DIR_CD = SMR.DIR_CD AND							 		
            VVD.VSL_CD = SMR.VSL_CD AND							 		
            VVD.SKD_VOY_NO = SMR.SKD_VOY_NO AND						 		
            VVD.SKD_DIR_CD = SMR.SKD_DIR_CD AND						 		
            VVD.BSE_WK BETWEEN INP.FROM_WK AND INP.TO_WK AND 		
            VVD.SUB_TRD_CD LIKE INP.SUB_TRD_CD || '%'  		
         )												
         )														
    ,VVD AS 
    (SELECT 
            VVD.VSL_CD,
            VVD.SKD_VOY_NO,
            VVD.SKD_DIR_CD,
            VVD.RLANE_CD||'-'||VVD.SPRT_GRP_CD||VVD.BSA_GRP_CD AS VVD_GRP_CD,
            VVD.TRD_CD, 
            VVD.CONV_DIR_CD, 
            VVD.SUB_TRD_CD, 
            VVD.RLANE_CD, 
            VVD.BSE_YR, 
            VVD.BSE_WK, 
            SUM(VVD.FNL_BSA_CAPA) AS BSA, 
            COUNT(*) AS VOYAGE 
     FROM   SAQ_MON_CFM_TGT_VVD VVD
            JOIN 
            TMP_INPUT_PARAMS INP
            ON
            ( 
                VVD.BSE_YR = INP.BSE_YR AND  
                VVD.BSE_QTR_CD = INP.BSE_QTR_CD AND  
                VVD.MQTA_RLSE_VER_NO = INP.RLSE_VER_NO AND  
                VVD.TRD_CD = INP.TRD_CD AND  
                VVD.CONV_DIR_CD = INP.DIR_CD AND 
                VVD.SUB_TRD_CD LIKE INP.SUB_TRD_CD || '%' AND 
                VVD.BSE_WK BETWEEN INP.FROM_WK AND INP.TO_WK 

#if (${rlaneCd} != '')
	             AND   VVD.RLANE_CD = INP.RLANE_CD 
#end
            )
            JOIN
            TEMP_SMR SMR
            ON
            (
               SMR.VSL_CD = VVD.VSL_CD AND
               SMR.SKD_VOY_NO = VVD.SKD_VOY_NO AND
               SMR.SKD_DIR_CD = VVD.SKD_DIR_CD AND
               SMR.TRD_CD = VVD.TRD_CD AND
               SMR.DIR_CD = VVD.DIR_CD AND
               SMR.SUB_TRD_CD = VVD.SUB_TRD_CD AND
               SMR.RLANE_CD = VVD.RLANE_CD AND
               SMR.BSE_QTR_CD = VVD.BSE_QTR_CD  AND          
               SMR.BSE_WK = VVD.BSE_WK            
            )               
     GROUP BY VVD.BSE_WK,VVD.VSL_CD, VVD.SKD_VOY_NO, VVD.SKD_DIR_CD, VVD.RLANE_CD||'-'||VVD.SPRT_GRP_CD||VVD.BSA_GRP_CD, VVD.TRD_CD, VVD.CONV_DIR_CD, VVD.SUB_TRD_CD, VVD.RLANE_CD, VVD.BSE_YR)
		
 SELECT  
     KEY,  
     SLEVEL,
     SMR.BSE_YR,
     SMR.BSE_WK,
     SMR.SUB_TRD_CD,
     DECODE(DIR.CONV_DIR_CD,'',SMR.RLANE_CD,SMR.RLANE_CD||' - '||DIR.DIR_CD) RLANE_CD, 
     DIR.DIR_CD CONV_DIR_CD, 
     VVD_GRP_CD,
     VVD_CD,
     RHQ_CD,  
     AQ_CD,  
     OFC_CD_1, 
     CASE
       WHEN SLEVEL = 7 THEN 'TOTAL'
       ELSE ''
     END OFC_CD_2, 
     ROW_SEQ,  
     TEXT AS ITEM_TEXT, 
     DECODE(TEXT,'G.REV','G.REV*','CM(P)','CM*','CMPB(P)','CMPB',TEXT) AS ITEM,  
     VAL  
 
 FROM  (  
     SELECT
 	   MIN(KEY) AS KEY, 
 	  CASE SLEVEL
 	     WHEN 1 THEN 'TOTAL'
 	     ELSE SMR.SUB_TRD_CD
 	  END SUB_TRD_CD,         
 	  CASE SLEVEL
 	     WHEN 1 THEN ''
 	     WHEN 2 THEN 'TOTAL'
 	     ELSE SMR.RLANE_CD
 	  END RLANE_CD,             
 	  CASE SLEVEL
 	     WHEN 1 THEN ''
 	     WHEN 2 THEN ''
 	     WHEN 3 THEN 'TOTAL'
 	     ELSE SMR.VVD_GRP_CD
 	  END VVD_GRP_CD,          
 	  CASE SLEVEL
 	     WHEN 1 THEN ''
 	     WHEN 2 THEN ''
 	     WHEN 3 THEN ''
 	     WHEN 4 THEN 'TOTAL'
 	     ELSE SMR.VVD_CD
 	  END VVD_CD,           	  
 	  CASE SLEVEL
 	     WHEN 1 THEN ''
 	     WHEN 2 THEN ''
 	     WHEN 3 THEN ''
 	     WHEN 4 THEN ''
 	     ELSE SMR.RHQ_CD
 	  END RHQ_CD,            
 	  CASE SLEVEL
 	     WHEN 1 THEN ''
 	     WHEN 2 THEN ''
 	     WHEN 3 THEN ''
 	     WHEN 4 THEN ''
 	     WHEN 5 THEN 'TOTAL'
 	     ELSE SMR.AQ_CD
 	  END AQ_CD,  
 	  CASE SLEVEL
 	     WHEN 1 THEN ''
 	     WHEN 2 THEN ''
 	     WHEN 3 THEN ''
 	     WHEN 4 THEN ''
 	     WHEN 5 THEN ''
 	     WHEN 6 THEN 'TOTAL'
 	     ELSE SMR.OFC_CD
 	  END OFC_CD_1,     
 	  
 	  ITM.ROW_SEQ,  
 	  ITM.TEXT,  
-- 	  CASE  
-- 	     WHEN ITM.CODE IN('05', '07', '08', '11', '12') THEN ITM.TEXT || '*'  
-- 	     ELSE ITM.TEXT  
-- 	  END ITEM,  
 
 	   SLEVEL,
 	  
 	  OFC_CD,
 	  SMR.BSE_YR,
 	  SMR.BSE_WK,
 	  SUM(LOD) LOD,
 	  SUM(REV) REV,
 	  SUM(CM) CM,
 	  SUM(RA_CM) RA_CM,
 	  SUM(OP) OP,
 	  SUM(RA_OP) RA_OP ,
 	    NVL(SUM(                     		
 		DECODE( ITM.CODE,                  			
 			 '02', (VOYAGE),                           			
 			 '03', (SMR.LOD),                                 					
 			 '05', (SMR.REV),                                 		
 			 '06', DECODE(LOD, 0, 0, (REV)/(LOD)*1000),              
 			 '07', (SMR.CM),                                  		
 			 '08', (SMR.RA_CM),                               		
 			 '09', DECODE(LOD, 0, 0, (CM)*1000/(LOD)),               
 			 '10', DECODE(LOD, 0, 0, (RA_CM)*1000/(LOD)),            
 			 '11', (SMR.OP),                                  		
 			 '12', (SMR.RA_OP),                               		
 			 '13', DECODE(LOD, 0, 0, (OP)*1000/(LOD)),               
 			 '14', DECODE(LOD, 0, 0, (RA_OP)*1000/(LOD)) )), 0) AS VAL	    		  
     FROM  (
 	    SELECT
 		  G_FLAG,
 		  CASE G_FLAG
 		     WHEN '01111111' THEN 1
 		     WHEN '00111111' THEN 2
 		     WHEN '00011111' THEN 3
 		     WHEN '00001111' THEN 4
 		     WHEN '00000011' THEN 5
 		     WHEN '00000001' THEN 6
 		     WHEN '00000000' THEN 7
 		  END SLEVEL,                    
 		  KEY,
 		  SUB_TRD_CD,
 		  RLANE_CD,
 		  VVD_GRP_CD,
 		  VVD_CD,
 		  RHQ_CD,
 		  AQ_CD,
 		  OFC_CD,
 		  BSE_YR,    
 		  BSE_WK,
 		  VOYAGE, 
 		  LOD,
 		  REV,
 		  CM,
 		  RA_CM,
 		  OP,
 		  RA_OP                    
 	    FROM  (
 		    SELECT
 			 GROUPING(BSE_WK)||GROUPING(SUB_TRD_CD)||GROUPING(RLANE_CD)||GROUPING(VVD_GRP_CD)||GROUPING(VVD_CD)||GROUPING(RHQ_CD)||GROUPING(AQ_CD)||GROUPING(OFC_CD)AS G_FLAG,
 			 MIN(SMR.BSE_YR||SMR.BSE_WK||SMR.SUB_TRD_CD||SMR.RLANE_CD||SMR.VVD_GRP_CD||VVD_CD||SMR.RHQ_CD||SMR.AQ_CD||SMR.OFC_CD) AS KEY,
 			 SMR.SUB_TRD_CD,
 			 SMR.RLANE_CD,
 			 SMR.VVD_GRP_CD,
 			 SMR.RHQ_CD,  
 			 SMR.AQ_CD,
 			 SMR.OFC_CD,  
 			 SMR.BSE_YR,    
 			 SMR.BSE_WK,
 			 VVD_CD,
 			 COUNT(DISTINCT VVD_CD) VOYAGE,    
 			 SUM(LOD) AS LOD,
 			 SUM(REV) AS REV,
 			 SUM(CM) AS CM,
 			 SUM(RA_CM) AS RA_CM,
 			 SUM(OP) AS OP,
 			 SUM(RA_OP) AS RA_OP
 		    FROM     (    
 				SELECT  
 				     VVD.SUB_TRD_CD, 
 				     SMR.RLANE_CD, 
 				     VVD.VVD_GRP_CD, 
 				     SMR.RHQ_CD AS RHQ_CD,
 				     NVL(SMR.AQ_CD, '  ') AS AQ_CD, 
 				     SMR.RGN_OFC_CD AS OFC_CD, 
 				     SMR.BSE_YR ,
 				     VVD.BSE_WK,
 				     VVD.VSL_CD || VVD.SKD_VOY_NO || VVD.SKD_DIR_CD  VVD_CD,
 					 SUM(SMR.LOD_QTY) AS LOD, 
 					 SUM(SMR.GRS_RPB_REV*SMR.LOD_QTY)/1000 AS REV,  
 					 SUM((SMR.GRS_RPB_REV-SMR.CM_UC_AMT)*SMR.LOD_QTY)/1000 AS CM, 
 					 SUM((SMR.GRS_RPB_REV-SMR.RA_CM_UC_AMT)*SMR.LOD_QTY)/1000 AS RA_CM,  
 					 SUM((SMR.GRS_RPB_REV-SMR.OPFIT_UC_AMT)*SMR.LOD_QTY)/1000 AS OP, 
 					 SUM((SMR.GRS_RPB_REV-SMR.RA_OPFIT_UC_AMT)*SMR.LOD_QTY )/1000 AS RA_OP                                       
 				FROM SAQ_MON_CFM_QTA SMR  
 				     JOIN  
 				     TMP_INPUT_PARAMS INP  
 				     ON  
 				     (  
 					SMR.BSE_YR = INP.BSE_YR AND  
 					SMR.BSE_QTR_CD = INP.BSE_QTR_CD AND  
 					SMR.MQTA_RLSE_VER_NO = INP.RLSE_VER_NO AND  
 					SMR.TRD_CD = INP.TRD_CD AND  
 					SMR.CONV_DIR_CD = INP.DIR_CD AND 
 					SMR.RLANE_CD LIKE INP.RLANE_CD || '%' AND 
 					SMR.RHQ_CD LIKE INP.RHQ_CD||'%' AND 
 					NVL(SMR.AQ_CD, '  ') LIKE INP.AQ_CD||'%' 
		
#if (${isRhq} == 'false') 
		        AND NVL(SMR.AQ_CD, '  ') LIKE INP.AQ_CD_ORG||'%' 
#end
 				     AND SMR.QTA_TGT_CD = @[selType] 		
 				     )  
 				     JOIN
 				     VVD
 				     ON
 				     (
 				       SMR.TRD_CD = VVD.TRD_CD AND
 				       SMR.CONV_DIR_CD = VVD.CONV_DIR_CD AND
 				       SMR.RLANE_CD = VVD.RLANE_CD AND
 				       SMR.BSE_YR = VVD.BSE_YR AND
 				       SMR.VSL_CD = VVD.VSL_CD AND
 				       SMR.SKD_VOY_NO = VVD.SKD_VOY_NO AND
 				       SMR.SKD_DIR_CD = VVD.SKD_DIR_CD AND
 					   VVD.BSE_WK BETWEEN INP.FROM_WK AND INP.TO_WK AND 		
 					   VVD.SUB_TRD_CD LIKE INP.SUB_TRD_CD || '%' 		
 				     )                                               
 				GROUP BY VVD.SUB_TRD_CD,SMR.RLANE_CD,VVD.VVD_GRP_CD, SMR.RHQ_CD, NVL(SMR.AQ_CD, '  '), SMR.RGN_OFC_CD, SMR.BSE_YR,VVD.BSE_WK, VVD.VSL_CD || VVD.SKD_VOY_NO || VVD.SKD_DIR_CD
 			     ) SMR                                     
 		    GROUP BY GROUPING SETS( (SMR.BSE_YR,SMR.BSE_WK),
 					    (SMR.BSE_YR,SMR.BSE_WK,SMR.SUB_TRD_CD),  
 					    (SMR.BSE_YR,SMR.BSE_WK,SMR.SUB_TRD_CD,SMR.RLANE_CD,SMR.VVD_GRP_CD,VVD_CD, SMR.RHQ_CD),  
 					    (SMR.BSE_YR,SMR.BSE_WK,SMR.SUB_TRD_CD,SMR.RLANE_CD,SMR.VVD_GRP_CD,VVD_CD, SMR.RHQ_CD, SMR.AQ_CD),
 					    (SMR.BSE_YR,SMR.BSE_WK,SMR.SUB_TRD_CD,SMR.RLANE_CD,SMR.VVD_GRP_CD,VVD_CD, SMR.RHQ_CD, SMR.AQ_CD, SMR.OFC_CD))     
 		  ) SMR     
 	  ) SMR                                                                     
 	  JOIN  
 	  (  
 	    SELECT  INTG_CD_VAL_CTNT AS CODE,  
 		    INTG_CD_VAL_DP_DESC AS TEXT,  
 		    INTG_CD_VAL_DP_SEQ AS ROW_SEQ  
 	    FROM  COM_INTG_CD_DTL  
 	    WHERE INTG_CD_ID = 'CD01390'  

			#if($ilist.size() > 0)
            AND   ('ALL' = @[items0] OR (INTG_CD_VAL_DP_DESC IN (
                #foreach ($key in ${ilist})
                    #if($velocityCount < $ilist.size())
                    '$key',
                    #else
                    '$key'
                    #end
                #end
                   )) )  
			#end

          ) ITM  
 	  ON 1 = 1   
 	  JOIN 
 	  TMP_INPUT_PARAMS INP 
 	  ON 1 = 1            
       GROUP BY SMR.BSE_YR,SMR.BSE_WK,SMR.SUB_TRD_CD,SMR.RLANE_CD,SMR.SLEVEL, SMR.VVD_GRP_CD,SMR.VVD_CD, SMR.RHQ_CD, SMR.AQ_CD, SMR.OFC_CD, ITM.ROW_SEQ, ITM.TEXT, ITM.CODE   
       ) SMR  
    ,     (                                                                                          
          SELECT                                                                                    
              DIR.RLANE_CD,                                                                                
              DIR.DIR_CD,							
              DIR.CONV_DIR_CD							
          FROM                                                                                    
              SAQ_MON_DIR_CONV DIR                                                                                
          WHERE                                                                                    
                   DIR.BSE_YR = @[year]                                                                           
             AND DIR.BSE_QTR_CD = @[quarter]                                                                                 
             AND DIR.TRD_CD = @[trade]                                  
             AND DIR.CONV_DIR_CD = @[dirCd]                                         		
          ) DIR                                                                                 
     WHERE                                                                                 
             DIR.RLANE_CD(+) = SMR.RLANE_CD 							
 ORDER BY KEY, SLEVEL, ROW_SEQ			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="quarter" type="12" value="" out="N"/>
				<param name="month" type="12" value="" out="N"/>
				<param name="targetGrp" type="12" value="" out="N"/>
				<param name="version" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="dirCd" type="12" value="" out="N"/>
				<param name="subTrade" type="12" value="" out="N"/>
				<param name="rlaneCd" type="12" value="" out="N"/>
				<param name="rhqCd" type="12" value="" out="N"/>
				<param name="aqCd" type="12" value="" out="N"/>
				<param name="from_wk" type="12" value="" out="N"/>
				<param name="to_wk" type="12" value="" out="N"/>
				<param name="selType" type="12" value="" out="N"/>
				<param name="items0" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
