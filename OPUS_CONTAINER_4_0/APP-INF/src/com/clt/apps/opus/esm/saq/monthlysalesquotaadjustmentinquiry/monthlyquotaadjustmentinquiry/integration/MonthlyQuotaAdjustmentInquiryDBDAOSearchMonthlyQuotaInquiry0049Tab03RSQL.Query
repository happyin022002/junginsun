<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaAdjustmentInquiryDBDAOSearchMonthlyQuotaInquiry0049Tab03RSQL">
			<desc><![CDATA[MonthlySalesQuotaAdjustmentInquiry의 데이타 모델에 해당되는 값을 불러온다.]]></desc>
			<sql><![CDATA[
WITH TMP_INPUT_PARAMS AS
    (SELECT DISTINCT
        @[datCreStepCd] AS DAT_CRE_STEP_CD,
        @[tgtOrzCd] AS TGT_ORZ_CD,
        '2' AS DAT_CRE_LVL_CD,    -- RHQ이상만 있으면 '1', A.D 이상만 있으면 '2', 지점 조직이 있으면 '3'
        @[year] AS BSE_YR,
        @[bse_quarter] AS BSE_QTR_CD,
        @[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10') AS YRMON_1,
        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10'), 'YYYYMM'), 1), 'YYYYMM') AS YRMON_2,
        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10'), 'YYYYMM'), 2), 'YYYYMM') AS YRMON_3,
        @[targetGrp] AS SAQ_TGT_GRP_CD,
        @[qtaMstVerNo] AS QTA_MST_VER_NO,
        @[version] AS GLINE_VER_NO,
        @[trade] AS TRD_CD,
        @[dirCd] AS DIR_CD,
        (SELECT N2ND_PRNT_OFC_CD
         FROM   SAQ_ORGANIZATION_V
         WHERE  OFC_CD = @[rhqCd]) AS RHQ_CD,
        @[rhqCd] AS AQ_CD
     FROM   DUAL)
    ,SAQ_MON_QTA_ADJ_SMRY_HDR_VIEW AS
    (
       SELECT DISTINCT HDR.SAQ_TGT_GRP_CD,HDR.DAT_CRE_STEP_CD,HDR.TGT_ORZ_CD,HDR.BSE_YR,HDR.BSE_QTR_CD,HDR.GLINE_VER_NO,HDR.TRD_CD,HDR.DIR_CD
        FROM SAQ_MON_QTA_ADJ_SMRY_HDR HDR
           , TMP_INPUT_PARAMS INP
        WHERE HDR.DAT_CRE_STEP_CD = INP.DAT_CRE_STEP_CD
              AND HDR.TGT_ORZ_CD = INP.TGT_ORZ_CD
              AND HDR.BSE_YR = INP.BSE_YR
              AND HDR.BSE_QTR_CD = INP.BSE_QTR_CD
              AND HDR.GLINE_VER_NO = INP.GLINE_VER_NO
              AND HDR.SAQ_TGT_GRP_CD = INP.SAQ_TGT_GRP_CD
              AND HDR.TRD_CD LIKE INP.TRD_CD||'%'
              AND HDR.DIR_CD LIKE INP.DIR_CD||'%'
    )
    ,MAP AS
    (SELECT
         DISTINCT
         SMR.TRD_CD,
         SMR.DIR_CD,
         SMR.RHQ_CD AS RHQ_CD,
         NVL(SMR.AQ_CD, '  ') AS AQ_CD,
         SMR.SUB_TRD_CD,
         SMR.RLANE_CD,
         SMR.BSE_YR||SMR.BSE_MON AS YRMON
    FROM SAQ_MON_QTA_ADJ_SMRY_HDR_VIEW HDR
         , SAQ_MON_QTA_ADJ_SMRY SMR
         , TMP_INPUT_PARAMS INP
    WHERE
        HDR.DAT_CRE_STEP_CD = INP.DAT_CRE_STEP_CD
       AND HDR.TGT_ORZ_CD = INP.TGT_ORZ_CD
       AND SMR.DAT_CRE_LVL_CD >= INP.DAT_CRE_LVL_CD
       AND HDR.BSE_YR = INP.BSE_YR
       AND HDR.BSE_QTR_CD = INP.BSE_QTR_CD
       AND HDR.GLINE_VER_NO = INP.GLINE_VER_NO
       AND HDR.TRD_CD = INP.TRD_CD
       AND HDR.DIR_CD LIKE INP.DIR_CD||'%'

#if (${isRhq} == 'false') 
	   AND   NVL(SMR.AQ_CD, '  ') LIKE INP.AQ_CD||'%'
#end

       AND SMR.RHQ_CD LIKE INP.RHQ_CD||'%'
       AND SMR.BSE_YR = HDR.BSE_YR
       AND SMR.BSE_QTR_CD = HDR.BSE_QTR_CD
       AND SMR.SAQ_TGT_GRP_CD = HDR.SAQ_TGT_GRP_CD
       AND SMR.GLINE_VER_NO = HDR.GLINE_VER_NO
       AND SMR.TRD_CD = HDR.TRD_CD
       AND SMR.DIR_CD = HDR.DIR_CD
       AND SMR.DAT_CRE_STEP_CD = HDR.DAT_CRE_STEP_CD
     )

    ,TEMP_SMR AS
    (SELECT
         DISTINCT
         SMR.TRD_CD,
         SMR.DIR_CD,
         SMR.SUB_TRD_CD,
         SMR.RLANE_CD,
         SMR.BSE_MON,
         SMR.VSL_CD,
         SMR.SKD_VOY_NO,
         SMR.SKD_DIR_CD
    FROM SAQ_MON_QTA_ADJ_SMRY_HDR_VIEW HDR
         , SAQ_MON_QTA_ADJ_SMRY SMR
         , TMP_INPUT_PARAMS INP
    WHERE
        HDR.DAT_CRE_STEP_CD = INP.DAT_CRE_STEP_CD
       AND HDR.TGT_ORZ_CD = INP.TGT_ORZ_CD
       AND SMR.DAT_CRE_LVL_CD >= INP.DAT_CRE_LVL_CD
       AND HDR.BSE_YR = INP.BSE_YR
       AND HDR.BSE_QTR_CD = INP.BSE_QTR_CD
       AND HDR.GLINE_VER_NO = INP.GLINE_VER_NO
       AND HDR.TRD_CD = INP.TRD_CD
       AND HDR.DIR_CD LIKE INP.DIR_CD||'%'

#if (${isRhq} == 'false') 
	   AND   NVL(SMR.AQ_CD, '  ') LIKE INP.AQ_CD||'%'
#end

       AND SMR.RHQ_CD LIKE INP.RHQ_CD||'%'
       AND SMR.BSE_YR = HDR.BSE_YR
       AND SMR.BSE_QTR_CD = HDR.BSE_QTR_CD
       AND SMR.SAQ_TGT_GRP_CD = HDR.SAQ_TGT_GRP_CD
       AND SMR.GLINE_VER_NO = HDR.GLINE_VER_NO
       AND SMR.TRD_CD = HDR.TRD_CD
       AND SMR.DIR_CD = HDR.DIR_CD
       AND SMR.DAT_CRE_STEP_CD = HDR.DAT_CRE_STEP_CD
    )
    ,VVD AS
    (SELECT
            VVD.TRD_CD,
            VVD.DIR_CD,
            VVD.SUB_TRD_CD,
            VVD.RLANE_CD,
            VVD.BSE_YR||VVD.BSE_MON AS YRMON,
            SUM(VVD.FNL_BSA_CAPA) AS BSA,
            COUNT(*) AS VOYAGE
     FROM   SAQ_MON_TGT_VVD_ADJ VVD
            JOIN
            TMP_INPUT_PARAMS INP
            ON
            (
               VVD.BSE_YR = INP.BSE_YR AND
               VVD.BSE_QTR_CD = INP.BSE_QTR_CD AND
               VVD.GLINE_VER_NO = INP.GLINE_VER_NO AND
               VVD.TRD_CD LIKE INP.TRD_CD||'%' AND
               VVD.DIR_CD LIKE INP.DIR_CD||'%'
            )
            JOIN
            TEMP_SMR SMR
            ON
            (
               SMR.TRD_CD = VVD.TRD_CD AND
               SMR.DIR_CD = VVD.DIR_CD AND
               SMR.SUB_TRD_CD = VVD.SUB_TRD_CD AND
               SMR.RLANE_CD = VVD.RLANE_CD AND
               SMR.BSE_MON = VVD.BSE_MON  AND
               SMR.VSL_CD = VVD.VSL_CD AND
               SMR.SKD_VOY_NO = VVD.SKD_VOY_NO AND
               SMR.SKD_DIR_CD = VVD.SKD_DIR_CD
            )
     GROUP BY VVD.TRD_CD, VVD.DIR_CD, VVD.SUB_TRD_CD, VVD.RLANE_CD, VVD.BSE_YR||VVD.BSE_MON)
SELECT
    KEY,
    SLEVEL,
    DIR_CD,
    RHQ_CD,
    AQ_CD,
    SUB_TRD_CD,
    CASE
      WHEN SLEVEL = 5 THEN 'TOTAL'
      ELSE ''
    END RLANE_CD,
    '' CONV_DIR_CD,
    ROW_SEQ,
    TEXT AS ITEM_TEXT,
    ITEM,
    VAL_00,
    VAL_01,
    VAL_02,
    VAL_03
FROM  (
    SELECT
          MIN(KEY) AS KEY,
          SLEVEL,
          CASE SLEVEL
             WHEN 1 THEN 'TOTAL'
             ELSE SMR.DIR_CD
          END DIR_CD,
          CASE SLEVEL
             WHEN 1 THEN ''
             WHEN 2 THEN 'TOTAL'
             ELSE SMR.RHQ_CD
          END RHQ_CD,
          CASE SLEVEL
             WHEN 1 THEN ''
             WHEN 2 THEN ''
             WHEN 3 THEN 'TOTAL'
             ELSE SMR.AQ_CD
          END AQ_CD,
          CASE SLEVEL
             WHEN 1 THEN ''
             WHEN 2 THEN ''
             WHEN 3 THEN ''
             WHEN 4 THEN 'TOTAL'
             ELSE SMR.SUB_TRD_CD
          END SUB_TRD_CD,
          ITM.ROW_SEQ,
          ITM.TEXT,
          CASE
             WHEN ITM.CODE IN('05', '07', '08', '11', '12') THEN ITM.TEXT || '*'
             ELSE ITM.TEXT
          END ITEM,

	  NVL(DECODE( ITM.CODE,  '01', SUM(BSA),
	               '02', SUM(VOYAGE),
	               '03', SUM(SMR.LOD),
	               '04', DECODE(SUM(BSA), 0, 0, SUM(SMR.LOD)/SUM(BSA)*100),
	               '05', SUM(SMR.REV),
	               '06', DECODE(SUM(LOD),0,0,SUM(REV)/SUM(LOD)*1000),
	               '07', SUM(SMR.CM),
	               '08', SUM(SMR.RA_CM),
	               '09', DECODE(SUM(LOD),0,0,SUM(CM)*1000/SUM(LOD)),
	               '10', DECODE(SUM(LOD),0,0,SUM(RA_CM)*1000/SUM(LOD)),
	               '11', SUM(SMR.OP),
	               '12', SUM(SMR.RA_OP),
	               '13', DECODE(SUM(LOD),0,0,SUM(OP)*1000/SUM(LOD)),
	               '14', DECODE(SUM(LOD),0,0,SUM(RA_OP)*1000/SUM(LOD) )), 0) AS VAL_00,
	  NVL(SUM(DECODE(SMR.YRMON, INP.YRMON_1,
	      DECODE( ITM.CODE,  '01', (BSA),
	               '02', (VOYAGE),
	               '03', (SMR.LOD),
	               '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),
	               '05', (SMR.REV),
	               '06', DECODE(LOD,0,0,(REV)/(LOD)*1000),
	               '07', (SMR.CM),
	               '08', (SMR.RA_CM),
	               '09', DECODE(LOD,0,0,(CM)*1000/(LOD)),
	               '10', DECODE(LOD,0,0,(RA_CM)*1000/(LOD)),
	               '11', (SMR.OP),
	               '12', (SMR.RA_OP),
	               '13', DECODE(LOD,0,0,(OP)*1000/(LOD)),
	               '14', DECODE(LOD,0,0,(RA_OP)*1000/(LOD)) ))), 0) AS VAL_01,
	  NVL(SUM(DECODE(SMR.YRMON, INP.YRMON_2,
	      DECODE( ITM.CODE,  '01', (BSA),
	               '02', (VOYAGE),
	               '03', (SMR.LOD),
	               '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),
	               '05', (SMR.REV),
	               '06', DECODE(LOD,0,0,(REV)/(LOD)*1000),
	               '07', (SMR.CM),
	               '08', (SMR.RA_CM),
	               '09', DECODE(LOD,0,0,(CM)*1000/(LOD)),
	               '10', DECODE(LOD,0,0,(RA_CM)*1000/(LOD)),
	               '11', (SMR.OP),
	               '12', (SMR.RA_OP),
	               '13', DECODE(LOD,0,0,(OP)*1000/(LOD)),
	               '14', DECODE(LOD,0,0,(RA_OP)*1000/(LOD)) ))), 0) AS VAL_02,
	  NVL(SUM(DECODE(SMR.YRMON, INP.YRMON_3,
	      DECODE( ITM.CODE,  '01', (BSA),
	               '02', (VOYAGE),
	               '03', (SMR.LOD),
	               '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),
	               '05', (SMR.REV),
	               '06', DECODE(LOD,0,0,(REV)/(LOD)*1000),
	               '07', (SMR.CM),
	               '08', (SMR.RA_CM),
	               '09', DECODE(LOD,0,0,(CM)*1000/(LOD)),
	               '10', DECODE(LOD,0,0,(RA_CM)*1000/(LOD)),
	               '11', (SMR.OP),
	               '12', (SMR.RA_OP),
	               '13', DECODE(LOD,0,0,(OP)*1000/(LOD)),
	               '14', DECODE(LOD,0,0,(RA_OP)*1000/(LOD)) ))), 0) AS VAL_03
	               
    FROM  (
            SELECT
                  KEY,
                  CASE G_FLAG
                     WHEN '1111' THEN 1
                     WHEN '0111' THEN 2
                     WHEN '0011' THEN 3
                     WHEN '0001' THEN 4
                     WHEN '0000' THEN 5
                  END SLEVEL,
                  DIR_CD,
                  RHQ_CD,
                  AQ_CD,
                  SUB_TRD_CD,
                  YRMON,
                  0 AS BSA,
                  CASE G_FLAG
                     WHEN '1111' THEN VOYAGE_LVL_1
                     WHEN '0111' THEN VOYAGE_LVL_2
                     WHEN '0011' THEN VOYAGE_LVL_3
                     WHEN '0001' THEN VOYAGE_LVL_4
                     WHEN '0000' THEN VOYAGE_LVL_5
                  END VOYAGE,
                  LOD,
                  REV,
                  CM,
                  RA_CM,
                  OP,
                  RA_OP
            FROM  (
                    SELECT
                          G_FLAG,
                          KEY,
                          DIR_CD,
                          RHQ_CD,
                          AQ_CD,
                          SUB_TRD_CD,
                          YRMON,
                          (SELECT SUM(VOYAGE)
                           FROM  VVD
                           WHERE 1 = 1
                           AND   YRMON = SMR.YRMON) AS VOYAGE_LVL_1,
                          (SELECT SUM(VOYAGE)
                           FROM  VVD
                           WHERE 1 = 1
                           AND   YRMON = SMR.YRMON
                           AND   DIR_CD = SMR.DIR_CD) AS VOYAGE_LVL_2,
                          (SELECT SUM(VOYAGE)
                           FROM  VVD
                           WHERE 1 = 1
                           AND   YRMON = SMR.YRMON
                           AND   DIR_CD = SMR.DIR_CD) AS VOYAGE_LVL_3,
                          (SELECT SUM(VOYAGE)
                           FROM  VVD
                           WHERE 1 = 1
                           AND   YRMON = SMR.YRMON
                           AND   DIR_CD = SMR.DIR_CD
                           AND   SUB_TRD_CD||RLANE_CD IN(SELECT SUB_TRD_CD||RLANE_CD
                                                         FROM   MAP
                                                         WHERE  1 = 1
                                                         AND    YRMON = SMR.YRMON
                                                         AND    DIR_CD = SMR.DIR_CD
                                                         AND    RHQ_CD = SMR.RHQ_CD
                                                         AND    AQ_CD = SMR.AQ_CD)) AS VOYAGE_LVL_4,
                          (SELECT SUM(VOYAGE)
                           FROM  VVD
                           WHERE 1 = 1
                           AND   YRMON = SMR.YRMON
                           AND   DIR_CD = SMR.DIR_CD
                           AND   SUB_TRD_CD = SMR.SUB_TRD_CD
                           AND   RLANE_CD IN(SELECT RLANE_CD
                                             FROM   MAP
                                             WHERE  1 = 1
                                             AND    YRMON = SMR.YRMON
                                             AND    DIR_CD = SMR.DIR_CD
                                             AND    RHQ_CD = SMR.RHQ_CD
                                             AND    AQ_CD = SMR.AQ_CD
                                             AND    SUB_TRD_CD = SMR.SUB_TRD_CD)) AS VOYAGE_LVL_5,
                          LOD,
                          REV,
                          CM,
                          RA_CM,
                          OP,
                          RA_OP
                    FROM  (
                            SELECT
                                 GROUPING(DIR_CD)||GROUPING(RHQ_CD)||GROUPING(AQ_CD)||GROUPING(SUB_TRD_CD)AS G_FLAG,
                                 MIN(SMR.DIR_CD||SMR.RHQ_CD||SMR.AQ_CD||SMR.SUB_TRD_CD) AS KEY,
                                 SMR.DIR_CD,
                                 SMR.RHQ_CD,
                                 SMR.AQ_CD,
                                 SMR.SUB_TRD_CD,
                                 SMR.YRMON,
                                 SUM(LOD) AS LOD,
                                 SUM(REV) AS REV,
                                 SUM(CM) AS CM,
                                 SUM(RA_CM) AS RA_CM,
                                 SUM(OP) AS OP,
                                 SUM(RA_OP) AS RA_OP
                            FROM (
                                    SELECT
                                         MIN(SMR.TRD_CD) AS TRD_CD,
                                         SMR.DIR_CD,
                                         SMR.RHQ_CD AS RHQ_CD,
                                         NVL(SMR.AQ_CD, '  ') AS AQ_CD,
                                         SMR.SUB_TRD_CD,
                                         SMR.BSE_YR||SMR.BSE_MON AS YRMON,

                         		SUM(SMR.LOD_QTY) AS LOD,
                         		SUM(SMR.GRS_RPB_REV*SMR.LOD_QTY)/1000 AS REV,
                         		SUM((SMR.GRS_RPB_REV-SMR.CM_UC_AMT)*SMR.LOD_QTY)/1000 AS CM,
                         		SUM((SMR.GRS_RPB_REV-SMR.RA_CM_UC_AMT)*SMR.LOD_QTY)/1000 AS RA_CM,
                         		SUM((SMR.GRS_RPB_REV-SMR.OPFIT_UC_AMT)*SMR.LOD_QTY)/1000 AS OP,
                         		SUM((SMR.GRS_RPB_REV-SMR.RA_OPFIT_UC_AMT)*SMR.LOD_QTY )/1000 AS RA_OP

                                    FROM SAQ_MON_QTA_ADJ_SMRY_HDR_VIEW HDR
                                         , SAQ_MON_QTA_ADJ_SMRY SMR
                                         , TMP_INPUT_PARAMS INP
                                    WHERE
                                           HDR.DAT_CRE_STEP_CD = INP.DAT_CRE_STEP_CD
                                           AND HDR.TGT_ORZ_CD = INP.TGT_ORZ_CD
                                           AND HDR.BSE_YR = INP.BSE_YR
                                           AND HDR.BSE_QTR_CD = INP.BSE_QTR_CD
                                           AND HDR.GLINE_VER_NO = INP.GLINE_VER_NO
                                           AND HDR.TRD_CD LIKE INP.TRD_CD||'%'
                                           AND HDR.DIR_CD LIKE INP.DIR_CD||'%'

#if (${isRhq} == 'false') 
	   AND   NVL(SMR.AQ_CD, '  ') LIKE INP.AQ_CD||'%'
#end

                                           AND SMR.RHQ_CD LIKE INP.RHQ_CD||'%'
                                           AND SMR.BSE_YR = HDR.BSE_YR
                                           AND SMR.BSE_QTR_CD = HDR.BSE_QTR_CD
                                           AND SMR.SAQ_TGT_GRP_CD = HDR.SAQ_TGT_GRP_CD
                                           AND SMR.GLINE_VER_NO = HDR.GLINE_VER_NO
                                           AND SMR.TRD_CD = HDR.TRD_CD
                                           AND SMR.DIR_CD = HDR.DIR_CD
                                           AND SMR.DAT_CRE_STEP_CD = HDR.DAT_CRE_STEP_CD
                                    GROUP BY SMR.DIR_CD, SMR.RHQ_CD, NVL(SMR.AQ_CD, '  '), SMR.SUB_TRD_CD, SMR.BSE_YR||SMR.BSE_MON
                                  ) SMR
                            GROUP BY GROUPING SETS((SMR.YRMON),
                                                    (SMR.DIR_CD, SMR.YRMON),
                                                    (SMR.DIR_CD, SMR.RHQ_CD, SMR.YRMON),
                                                    (SMR.DIR_CD, SMR.RHQ_CD, SMR.AQ_CD, SMR.YRMON),
                                                    (SMR.DIR_CD, SMR.RHQ_CD, SMR.AQ_CD, SMR.SUB_TRD_CD, SMR.YRMON))
                          ) SMR
                  ) SMR
          ) SMR
          JOIN
          (
            SELECT  INTG_CD_VAL_CTNT AS CODE,
                    INTG_CD_VAL_DP_DESC AS TEXT,
                    INTG_CD_VAL_DP_SEQ AS ROW_SEQ
            FROM  COM_INTG_CD_DTL
            WHERE INTG_CD_ID = 'CD01390'
            AND   ('ALL' = @[items0] OR (INTG_CD_VAL_DP_DESC IN (@[items0], @[items1], @[items2], @[items3], @[items4], @[items5], @[items6], @[items7])) )
          ) ITM
          ON 1 = 1
          JOIN
          TMP_INPUT_PARAMS INP
          ON 1 = 1
      GROUP BY SMR.SLEVEL, SMR.DIR_CD, SMR.RHQ_CD, SMR.AQ_CD, SMR.SUB_TRD_CD, ITM.ROW_SEQ, ITM.TEXT, ITM.CODE
      ) SMR
ORDER BY KEY, SLEVEL, ROW_SEQ			]]></sql>
			<params>
				<param name="datCreStepCd" type="12" value="" out="N"/>
				<param name="tgtOrzCd" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="bse_quarter" type="12" value="" out="N"/>
				<param name="targetGrp" type="12" value="" out="N"/>
				<param name="qtaMstVerNo" type="12" value="" out="N"/>
				<param name="version" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="dirCd" type="12" value="" out="N"/>
				<param name="rhqCd" type="12" value="" out="N"/>
				<param name="items0" type="12" value="" out="N"/>
				<param name="items1" type="12" value="" out="N"/>
				<param name="items2" type="12" value="" out="N"/>
				<param name="items3" type="12" value="" out="N"/>
				<param name="items4" type="12" value="" out="N"/>
				<param name="items5" type="12" value="" out="N"/>
				<param name="items6" type="12" value="" out="N"/>
				<param name="items7" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
