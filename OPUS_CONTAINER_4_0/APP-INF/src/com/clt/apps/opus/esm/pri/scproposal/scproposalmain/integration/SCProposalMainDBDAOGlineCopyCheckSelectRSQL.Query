<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SCProposalMainDBDAOGlineCopyCheckSelectRSQL">
			<desc><![CDATA[Guideline Copy Copy Data Check]]></desc>
			<sql><![CDATA[
SELECT SG.SVC_SCP_CD
     , SG.GLINE_SEQ
     , DECODE(OL.OLD_LOC_CHK,1,0,SIGN(NVL(LO.LOC_CHK,0))) AS LOC_CHK
     , DECODE(OL.OLD_CMDT_CHK,1,0,SIGN(NVL(CM.CMDT_CHK,0))) AS CMDT_CHK
     , DECODE(OL.OLD_CMDT_CHK,1,0,SIGN(NVL(CT.CMDT_TPW_CHK,0))) AS CMDT_TPW_CHK
     , DECODE(OL.OLD_ARB_ORG_CHK,1,0,SIGN(NVL(AO.ARB_ORG_CHK,0))) AS ARB_ORG_CHK
     , DECODE(OL.OLD_ARB_DES_CHK,1,0,SIGN(NVL(AD.ARB_DES_CHK,0))) AS ARB_DES_CHK
     , DECODE(OL.OLD_GOH_CHK,1,0,SIGN(NVL(GO.GOH_CHK,0))) AS GOH_CHK
     , DECODE(SIGN(OL.OLD_RATE_CHK),1,0,SIGN(NVL(RT.RATE_CHK,0))) AS RATE_CHK
     , DECODE(OL.OLD_NOTE_CHK,1,0,SIGN(NVL(NT.NOTE_CHK,0))) AS NOTE_CHK
     , NVL(OL.OLD_LOC_CHK,0) AS OLD_LOC_CHK
     , NVL(OL.OLD_CMDT_CHK,0) AS OLD_CMDT_CHK
FROM (  -- Scope Main
    SELECT SVC_SCP_CD
         , GLINE_SEQ
    FROM (
        SELECT B.SVC_SCP_CD
             , B.GLINE_SEQ
             , ROW_NUMBER() OVER (ORDER BY B.EFF_DT DESC) AS SEQ
        FROM PRI_SP_SCP_MN A
            ,PRI_SG_MN B
        WHERE A.PROP_NO = @[prop_no]
        AND   A.AMDT_SEQ = @[amdt_seq]
        AND   A.SVC_SCP_CD = @[svc_scp_cd]
        AND   B.SVC_SCP_CD = A.SVC_SCP_CD
        AND   B.CFM_FLG = 'Y'
        AND   A.EFF_DT BETWEEN B.EFF_DT AND B.EXP_DT
    )
    WHERE SEQ = 1
) SG
LEFT OUTER JOIN
(  -- Grp Location
    SELECT C.SVC_SCP_CD
         , C.GLINE_SEQ
         , COUNT(C.SVC_SCP_CD) AS LOC_CHK
    FROM PRI_SG_GRP_LOC C
        ,PRI_SG_GRP_LOC_DTL D
    WHERE C.SVC_SCP_CD = @[svc_scp_cd]
    AND   D.GLINE_SEQ = C.GLINE_SEQ
    AND   D.SVC_SCP_CD = C.SVC_SCP_CD
    AND   D.GLINE_SEQ = C.GLINE_SEQ
    AND   D.GRP_LOC_SEQ = C.GRP_LOC_SEQ
    GROUP BY C.SVC_SCP_CD, C.GLINE_SEQ
) LO
ON LO.SVC_SCP_CD = SG.SVC_SCP_CD
AND LO.GLINE_SEQ = SG.GLINE_SEQ
LEFT OUTER JOIN
(  -- Grp Commodity
    SELECT E.SVC_SCP_CD
         , E.GLINE_SEQ
         , COUNT(E.SVC_SCP_CD) AS CMDT_CHK
    FROM PRI_SG_GRP_CMDT E
        ,PRI_SG_GRP_CMDT_DTL F
    WHERE E.SVC_SCP_CD = @[svc_scp_cd]
    AND   F.GLINE_SEQ = E.GLINE_SEQ
    AND   F.SVC_SCP_CD = E.SVC_SCP_CD
    AND   F.GLINE_SEQ = E.GLINE_SEQ
    AND   F.GRP_CMDT_SEQ = E.GRP_CMDT_SEQ
    GROUP BY E.SVC_SCP_CD, E.GLINE_SEQ
) CM
ON CM.SVC_SCP_CD = SG.SVC_SCP_CD
AND CM.GLINE_SEQ = SG.GLINE_SEQ
LEFT OUTER JOIN
(  -- Grp Commodity TPW
    SELECT
         SVC_SCP_CD  
       , GLINE_SEQ
       , COUNT(SVC_SCP_CD) AS CMDT_TPW_CHK
    FROM  PRI_SG_GRP_CMDT
    WHERE SVC_SCP_CD = @[svc_scp_cd]
    AND   PRC_CUST_TP_CD = @[prc_cust_tp_cd]
    GROUP BY SVC_SCP_CD, GLINE_SEQ
) CT
ON CT.SVC_SCP_CD = SG.SVC_SCP_CD
AND CT.GLINE_SEQ = SG.GLINE_SEQ
LEFT OUTER JOIN
(  -- Orgin Arbitrary
    SELECT SVC_SCP_CD
         , GLINE_SEQ
         , COUNT(SVC_SCP_CD) AS ARB_ORG_CHK
    FROM PRI_SG_ARB
    WHERE SVC_SCP_CD = @[svc_scp_cd]
    AND   ORG_DEST_TP_CD = 'O'
    GROUP BY SVC_SCP_CD,GLINE_SEQ
) AO
ON AO.SVC_SCP_CD = SG.SVC_SCP_CD
AND AO.GLINE_SEQ = SG.GLINE_SEQ
LEFT OUTER JOIN
(  -- Destination Arbitrary
    SELECT SVC_SCP_CD
         , GLINE_SEQ
         , COUNT(SVC_SCP_CD) AS ARB_DES_CHK
    FROM PRI_SG_ARB
    WHERE SVC_SCP_CD = @[svc_scp_cd]
    AND   ORG_DEST_TP_CD = 'D'
    GROUP BY SVC_SCP_CD,GLINE_SEQ
) AD
ON AD.SVC_SCP_CD = SG.SVC_SCP_CD
AND AD.GLINE_SEQ = SG.GLINE_SEQ
LEFT OUTER JOIN
(  -- GOH
    SELECT SVC_SCP_CD
         , GLINE_SEQ
         , COUNT(SVC_SCP_CD) AS GOH_CHK
    FROM PRI_SG_GOH_CHG
    WHERE SVC_SCP_CD = @[svc_scp_cd]
    GROUP BY SVC_SCP_CD,GLINE_SEQ
) GO
ON GO.SVC_SCP_CD = SG.SVC_SCP_CD
AND GO.GLINE_SEQ = SG.GLINE_SEQ
LEFT OUTER JOIN
(  -- RATE 
    SELECT B.SVC_SCP_CD
         , B.GLINE_SEQ
         , COUNT(B.SVC_SCP_CD) AS RATE_CHK
    FROM PRI_SG_RT_CMDT_HDR B
    WHERE B.SVC_SCP_CD = @[svc_scp_cd]
    AND   B.PRC_CUST_TP_CD = @[prc_cust_tp_cd]
    AND   (
        EXISTS (
            SELECT 'X'
            FROM PRI_SG_RT_CMDT C
            WHERE C.SVC_SCP_CD = B.SVC_SCP_CD
            AND   C.GLINE_SEQ = B.GLINE_SEQ
            AND   C.PRC_CUST_TP_CD = B.PRC_CUST_TP_CD
            AND   C.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ
        )
        AND EXISTS (
            SELECT 'X'
            FROM PRI_SG_RT_CMDT_ROUT D
            WHERE D.SVC_SCP_CD = B.SVC_SCP_CD
            AND   D.GLINE_SEQ = B.GLINE_SEQ
            AND   D.PRC_CUST_TP_CD = B.PRC_CUST_TP_CD
            AND   D.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ
            AND   EXISTS (
                    SELECT 'X'
                    FROM PRI_SG_RT H
                       , PRI_SP_MQC J
                       , PRI_SP_SCP_MQC I
                    WHERE H.SVC_SCP_CD = D.SVC_SCP_CD
                    AND   H.GLINE_SEQ = D.GLINE_SEQ
                    AND   H.PRC_CUST_TP_CD = D.PRC_CUST_TP_CD
                    AND   H.CMDT_HDR_SEQ = D.CMDT_HDR_SEQ
                    AND   H.ROUT_SEQ = D.ROUT_SEQ
                    AND   J.PROP_NO = @[prop_no]
                    AND   J.AMDT_SEQ = @[amdt_seq]
                    AND   I.PROP_NO = J.PROP_NO
                    AND   I.AMDT_SEQ = J.AMDT_SEQ
                    AND   I.SVC_SCP_CD = H.SVC_SCP_CD
                    AND   DECODE(I.PROP_SCP_MQC_QTY, 0, J.PROP_MQC_QTY, I.PROP_SCP_MQC_QTY) BETWEEN H.MQC_RNG_FM_QTY AND H.MQC_RNG_TO_QTY
            )
        )
    )
    GROUP BY B.SVC_SCP_CD,B.GLINE_SEQ
) RT
ON RT.SVC_SCP_CD = SG.SVC_SCP_CD
AND RT.GLINE_SEQ = SG.GLINE_SEQ
LEFT OUTER JOIN
(  -- STANDARD NOTE
    SELECT B.SVC_SCP_CD
         , COUNT(B.SVC_SCP_CD) AS NOTE_CHK
    FROM (
            SELECT SVC_SCP_CD
                 , NOTE_HDR_SEQ
            FROM (
                SELECT BB.SVC_SCP_CD
                     , BB.NOTE_HDR_SEQ
                     , DENSE_RANK() OVER (PARTITION BY BB.SVC_SCP_CD
                              ORDER BY BB.SVC_SCP_CD,BB.PRC_CUST_TP_CD NULLS LAST) AS SEQ
                FROM PRI_SP_SCP_MN AA
                    ,PRI_SG_STND_NOTE_HDR BB
                WHERE AA.PROP_NO = @[prop_no]
                AND   AA.AMDT_SEQ = @[amdt_seq]
                AND   BB.SVC_SCP_CD = AA.SVC_SCP_CD
                AND   DECODE(TRIM(BB.PRC_CUST_TP_CD),@[prc_cust_tp_cd],1,NULL,1,0) = 1
                AND   BB.CFM_FLG = 'Y'
                AND   AA.EFF_DT BETWEEN BB.EFF_DT AND BB.EXP_DT
            )
            WHERE SEQ = 1
        ) A
       , PRI_SG_STND_NOTE B
       , PRI_SG_STND_NOTE_CTNT C
    WHERE B.SVC_SCP_CD = A.SVC_SCP_CD
    AND   B.NOTE_HDR_SEQ = A.NOTE_HDR_SEQ
    AND   C.SVC_SCP_CD = B.SVC_SCP_CD
    AND   C.NOTE_HDR_SEQ = B.NOTE_HDR_SEQ
    AND   C.NOTE_SEQ = B.NOTE_SEQ
    GROUP BY B.SVC_SCP_CD
) NT
ON NT.SVC_SCP_CD = SG.SVC_SCP_CD
LEFT OUTER JOIN
(  -- Proposal data check
    SELECT @[svc_scp_cd] AS SVC_SCP_CD
         , SIGN((SELECT COUNT(SVC_SCP_CD)
                 FROM PRI_SP_SCP_GRP_LOC
                 WHERE PROP_NO = @[prop_no]
                 AND   AMDT_SEQ = @[amdt_seq]
                 AND   SVC_SCP_CD = @[svc_scp_cd])) AS OLD_LOC_CHK
         , SIGN((SELECT COUNT(SVC_SCP_CD)
                 FROM PRI_SP_SCP_GRP_CMDT
                 WHERE PROP_NO = @[prop_no]
                 AND   AMDT_SEQ = @[amdt_seq]
                 AND   SVC_SCP_CD = @[svc_scp_cd])) AS OLD_CMDT_CHK
         , SIGN((SELECT COUNT(SVC_SCP_CD)
                 FROM PRI_SP_SCP_TRSP_ADD_CHG
                 WHERE PROP_NO = @[prop_no]
                 AND   AMDT_SEQ = @[amdt_seq]
                 AND   SVC_SCP_CD = @[svc_scp_cd]
                 AND   ORG_DEST_TP_CD = 'O')) AS OLD_ARB_ORG_CHK
         , SIGN((SELECT COUNT(SVC_SCP_CD)
                 FROM PRI_SP_SCP_TRSP_ADD_CHG
                 WHERE PROP_NO = @[prop_no]
                 AND   AMDT_SEQ = @[amdt_seq]
                 AND   SVC_SCP_CD = @[svc_scp_cd]
                 AND   ORG_DEST_TP_CD = 'D')) AS OLD_ARB_DES_CHK
         , SIGN((SELECT COUNT(GOH_CHG_SEQ)
                 FROM PRI_SP_SCP_GOH_CHG
                 WHERE PROP_NO = @[prop_no]
                 AND   AMDT_SEQ = @[amdt_seq]
                 AND   SVC_SCP_CD = @[svc_scp_cd])) AS OLD_GOH_CHK
         , SIGN((SELECT COUNT(RT_SEQ)
                 FROM PRI_SP_SCP_RT
                 WHERE PROP_NO = @[prop_no]
                 AND   AMDT_SEQ = @[amdt_seq]
                 AND   SVC_SCP_CD = @[svc_scp_cd])) AS OLD_RATE_CHK
         , SIGN((SELECT COUNT(NOTE_SEQ)
                 FROM PRI_SP_SCP_NOTE
                 WHERE PROP_NO = @[prop_no]
                 AND   AMDT_SEQ = @[amdt_seq]
                 AND   SVC_SCP_CD = @[svc_scp_cd]
                 AND   NOTE_TP_CD = 'T')) AS OLD_NOTE_CHK
    FROM DUAL
) OL
ON OL.SVC_SCP_CD = SG.SVC_SCP_CD			]]></sql>
			<params>
				<param name="prop_no" type="12" value="" out="N"/>
				<param name="amdt_seq" type="12" value="" out="N"/>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
				<param name="prc_cust_tp_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
