<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralBookingReceiptDBDAOsearchAllocStsByTrunkLaneRSQL">
			<desc><![CDATA[Trunk Lane 기준으로 Allocation Status를 조회한다]]></desc>
			<sql><![CDATA[
WITH BKG AS (
    SELECT BB.BKG_NO
           ,NVL(BAM.BKG_ALOC_SEQ,0) BKG_ALOC_SEQ
           ,LVL.OFC_N3RD_LVL_CD, LVL.GSO, BB.OB_SLS_OFC_CD
           ,BB.SLAN_CD, BB.VSL_CD, BB.SKD_VOY_NO, BB.SKD_DIR_CD
           ,BV.POL_CD T_POL_CD, BV.POD_CD T_POD_CD
           ,BAM.ALOC_SVC_CD
           ,(SELECT BAMD.BKG_ALOC_SEQ FROM BKG_ALOC_MGMT_LOC_DTL BAMD WHERE BAMD.BKG_ALOC_SEQ = BAM.BKG_ALOC_SEQ AND BAMD.LOC_DIV_CD = 'POL' AND BAMD.LOC_CD = BV.POL_CD AND ROWNUM = 1) T_POL_ALOC_SEQ
           ,(SELECT BAMD.BKG_ALOC_SEQ FROM BKG_ALOC_MGMT_LOC_DTL BAMD WHERE BAMD.BKG_ALOC_SEQ = BAM.BKG_ALOC_SEQ AND BAMD.LOC_DIV_CD = 'POD' AND BAMD.LOC_CD = BV.POD_CD AND ROWNUM = 1) T_POD_ALOC_SEQ           
           ,BAM.ALOC_LOD_QTY_RTO
           ,(SELECT CICD.INTG_CD_VAL_DP_DESC
              FROM COM_INTG_CD_DTL CICD 
             WHERE CICD.INTG_CD_ID = 'CD03267' 
               AND CICD.INTG_CD_VAL_CTNT = 'T') ITEM
    FROM BKG_ALOC_MGMT BAM
         ,BKG_BOOKING BB
         ,BKG_VVD BV
         ,BKG_OFC_LVL_V LVL 
    WHERE BAM.BKG_ALOC_TP_CD(+) = 'T'
    AND BAM.TRNK_SLAN_CD(+) = BB.SLAN_CD
    AND NVL(BAM.TRNK_DIR_CD(+),BB.SKD_DIR_CD) =  BB.SKD_DIR_CD 
    AND NVL(BAM.VSL_CD(+),BB.VSL_CD) = BB.VSL_CD
    AND NVL(BAM.SKD_VOY_NO(+),BB.SKD_VOY_NO) = BB.SKD_VOY_NO
    AND NVL(BAM.SKD_DIR_CD(+),BB.SKD_DIR_CD) = BB.SKD_DIR_CD
    AND BB.OB_SLS_OFC_CD = LVL.OFC_CD
    AND BB.BKG_NO = BV.BKG_NO
    AND BV.VSL_PRE_PST_CD = 'T'
    AND BB.BKG_NO = @[bkg_no]
    )
, ALOC AS (
    SELECT BKG.BKG_ALOC_SEQ
           ,SUM(ASGN_TTL_QTY)     AS L_RHQ_ALLOC
           ,SUM(CASE WHEN BKG.GSO = A.SLS_OFC_CD THEN ASGN_TTL_QTY ELSE 0 END) AS L_OFC_ALLOC
           ,SUM(CASE WHEN SUBSTR(A.POL_YD_CD,1,5) IN (SELECT BAMD.LOC_CD
                                                      FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                                      WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POL_ALOC_SEQ
                                                      AND BAMD.LOC_DIV_CD = 'POL'
                                                      ) 
                     THEN ASGN_TTL_QTY ELSE 0 END)     AS L_RHQ_ALLOC_POL
           ,SUM(CASE WHEN BKG.GSO = A.SLS_OFC_CD 
                     AND  SUBSTR(A.POL_YD_CD,1,5) IN (SELECT BAMD.LOC_CD
                                                      FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                                      WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POL_ALOC_SEQ
                                                      AND BAMD.LOC_DIV_CD = 'POL'
                                                      ) 
                     THEN ASGN_TTL_QTY ELSE 0 END) AS L_OFC_ALLOC_POL
           ,SUM(CASE WHEN SUBSTR(A.POD_YD_CD,1,5) IN (SELECT BAMD.LOC_CD
                                                      FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                                      WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                                      AND BAMD.LOC_DIV_CD = 'POD'
                                                      ) 
                     THEN ASGN_TTL_QTY ELSE 0 END)     AS L_RHQ_ALLOC_POD
           ,SUM(CASE WHEN BKG.GSO = A.SLS_OFC_CD 
                     AND  SUBSTR(A.POD_YD_CD,1,5) IN (SELECT BAMD.LOC_CD
                                                      FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                                      WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                                      AND BAMD.LOC_DIV_CD = 'POD'
                                                      ) 
                     THEN ASGN_TTL_QTY ELSE 0 END) AS L_OFC_ALLOC_POD  
                      ,SUM(CASE WHEN SUBSTR(A.POL_YD_CD,1,5) IN (SELECT BAMD.LOC_CD
                                                      FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                                      WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                                      AND BAMD.LOC_DIV_CD = 'POL'
                                                      ) 
                          AND SUBSTR(A.POD_YD_CD,1,5) IN (SELECT BAMD.LOC_CD
                                                      FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                                      WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                                      AND BAMD.LOC_DIV_CD = 'POD'
                                                      ) 
                     THEN ASGN_TTL_QTY ELSE 0 END)     AS L_RHQ_ALLOC_POL_POD
           ,SUM(CASE WHEN BKG.GSO = A.SLS_OFC_CD 
                     AND  SUBSTR(A.POL_YD_CD,1,5) IN (SELECT BAMD.LOC_CD
                                                      FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                                      WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                                      AND BAMD.LOC_DIV_CD = 'POL'
                                                      ) 
                          AND SUBSTR(A.POD_YD_CD,1,5) IN (SELECT BAMD.LOC_CD
                                                      FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                                      WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                                      AND BAMD.LOC_DIV_CD = 'POD'
                                                      ) 
                     THEN ASGN_TTL_QTY ELSE 0 END) AS L_OFC_ALLOC_POL_POD                                                                                 
      FROM BKG,
           SPC_ALOC_POL_POD  A,
           VSK_VSL_PORT_SKD  PD,
           VSK_VSL_PORT_SKD  PL
     WHERE A.RLANE_CD    LIKE BKG.SLAN_CD||'%'     
       AND A.IOC_CD      = 'O'   -- 변동없음
       AND A.DIR_CD      = BKG.SKD_DIR_CD
       AND A.VSL_CD      = BKG.VSL_CD
       AND A.SKD_VOY_NO  = BKG.SKD_VOY_NO
       AND A.SKD_DIR_CD  = BKG.SKD_DIR_CD
       AND A.SLS_RHQ_CD  = BKG.OFC_N3RD_LVL_CD
       AND A.VSL_CD      = PL.VSL_CD
       AND A.SKD_VOY_NO  = PL.SKD_VOY_NO
       AND A.SKD_DIR_CD  = PL.SKD_DIR_CD
       AND A.POL_YD_CD   = PL.YD_CD
       AND A.POL_IND_SEQ = PL.CLPT_IND_SEQ
       AND NVL(PL.SKD_CNG_STS_CD,'N') != 'S'  
       AND A.VSL_CD      = PD.VSL_CD
       AND A.SKD_VOY_NO  = PD.SKD_VOY_NO
       AND A.SKD_DIR_CD  = PD.SKD_DIR_CD
       AND A.POD_YD_CD   = PD.YD_CD
       AND A.POD_IND_SEQ = PD.CLPT_IND_SEQ
       AND NVL(PD.SKD_CNG_STS_CD,'N') != 'S' 
     GROUP BY BKG.BKG_ALOC_SEQ
     )    
, BKG_TEU AS (
     SELECT BKG.BKG_ALOC_SEQ
            ,NVL(SUM(DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,-1),'2',BQ.OP_CNTR_QTY,BQ.OP_CNTR_QTY*2)),0) BKG_LRHQ_VOL
            ,SUM(CASE WHEN BKG.GSO = LVL1.GSO THEN DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,-1),'2',BQ.OP_CNTR_QTY,BQ.OP_CNTR_QTY*2) ELSE 0 END) BKG_LOFC_VOL
            ,SUM(CASE WHEN BV.POL_CD IN (SELECT BAMD.LOC_CD
                                          FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                          WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POL_ALOC_SEQ
                                          AND BAMD.LOC_DIV_CD = 'POL') 
                     THEN DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,-1),'2',BQ.OP_CNTR_QTY,BQ.OP_CNTR_QTY*2) ELSE 0 END)     AS BKG_LRHQ_VOL_POL
           ,SUM(CASE WHEN BKG.GSO = LVL1.GSO 
                     AND  BV.POL_CD IN (SELECT BAMD.LOC_CD
                                          FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                          WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POL_ALOC_SEQ
                                          AND BAMD.LOC_DIV_CD = 'POL') 
                     THEN DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,-1),'2',BQ.OP_CNTR_QTY,BQ.OP_CNTR_QTY*2) ELSE 0 END) AS BKG_LOFC_VOL_POL
           ,SUM(CASE WHEN BV.POD_CD IN (SELECT BAMD.LOC_CD
                                          FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                          WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                          AND BAMD.LOC_DIV_CD = 'POD') 
                     THEN DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,-1),'2',BQ.OP_CNTR_QTY,BQ.OP_CNTR_QTY*2) ELSE 0 END)     AS BKG_LRHQ_VOL_POD
           ,SUM(CASE WHEN BKG.GSO = LVL1.GSO 
                     AND  BV.POD_CD IN (SELECT BAMD.LOC_CD
                                          FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                          WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                          AND BAMD.LOC_DIV_CD = 'POD') 
                     THEN DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,-1),'2',BQ.OP_CNTR_QTY,BQ.OP_CNTR_QTY*2) ELSE 0 END) AS BKG_LOFC_VOL_POD  
                      ,SUM(CASE WHEN BV.POL_CD IN (SELECT BAMD.LOC_CD
                                          FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                          WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                          AND BAMD.LOC_DIV_CD = 'POL') 
                     AND BV.POD_CD IN (SELECT BAMD.LOC_CD
                                          FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                          WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                          AND BAMD.LOC_DIV_CD = 'POD') 
                     THEN DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,-1),'2',BQ.OP_CNTR_QTY,BQ.OP_CNTR_QTY*2) ELSE 0 END)     AS BKG_LRHQ_VOL_POL_POD
           ,SUM(CASE WHEN BKG.GSO = LVL1.GSO 
                     AND  BV.POL_CD IN (SELECT BAMD.LOC_CD
                                          FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                          WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                          AND BAMD.LOC_DIV_CD = 'POL') 
                     AND  BV.POD_CD IN (SELECT BAMD.LOC_CD
                                          FROM BKG_ALOC_MGMT_LOC_DTL BAMD
                                          WHERE BAMD.BKG_ALOC_SEQ = BKG.T_POD_ALOC_SEQ
                                          AND BAMD.LOC_DIV_CD = 'POD') 
                     THEN DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,-1),'2',BQ.OP_CNTR_QTY,BQ.OP_CNTR_QTY*2) ELSE 0 END) AS BKG_LOFC_VOL_POL_POD 
       FROM BKG
            ,BKG_BOOKING BB1
            ,BKG_VVD BV
            ,BKG_QUANTITY BQ
            ,BKG_OFC_LVL_V LVL1
       WHERE BB1.BKG_NO = BQ.BKG_NO
       AND   BB1.BKG_NO = BV.BKG_NO
       AND   BV.VSL_PRE_PST_CD = 'T'
       AND   BB1.VSL_CD = BKG.VSL_CD
       AND   BB1.SKD_VOY_NO = BKG.SKD_VOY_NO
       AND   BB1.SKD_DIR_CD = BKG.SKD_DIR_CD
       AND   BB1.BKG_STS_CD <> 'X'
       AND   BB1.BKG_CGO_TP_CD = 'F'
       AND   (NVL(BB1.ALOC_STS_CD,'F') = 'F' OR BB1.BKG_NO = BKG.BKG_NO)
       AND   BB1.OB_SLS_OFC_CD = LVL1.OFC_CD
       AND   LVL1.OFC_N3RD_LVL_CD = BKG.OFC_N3RD_LVL_CD 
       GROUP BY BKG.BKG_ALOC_SEQ
)
SELECT 'S' ALOC_STS_CD, 'T' BKG_ALOC_TP_CD, ALOC_SVC_CD, '' BKG_ALOC_RMK 
FROM (
    SELECT ITEM
         , BKG.SLAN_CD TRNK_SLAN_CD
         , BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD VVD
         , BKG.OFC_N3RD_LVL_CD L_RHQ
         , BKG.GSO OB_SLS_OFC_CD
         , 'ALL' TYPE
         , BKG_TEU.BKG_LOFC_VOL BKG_LOFC_VOL
         , ALOC.L_OFC_ALLOC L_OFC_ALLOC
         , BKG.ALOC_LOD_QTY_RTO
         , BKG.ALOC_SVC_CD
         , ALOC.L_RHQ_ALLOC
         , BKG_TEU.BKG_LRHQ_VOL
         , CASE WHEN L_OFC_ALLOC = 0 THEN 0
                ELSE ROUND(BKG_LOFC_VOL/L_OFC_ALLOC*100,1) 
                END OFC_RATIO
         , CASE WHEN L_RHQ_ALLOC = 0 THEN 0
                ELSE ROUND(BKG_LRHQ_VOL/L_RHQ_ALLOC*100,1) 
                END RHQ_RATIO
    FROM BKG, ALOC, BKG_TEU
    WHERE BKG.BKG_ALOC_SEQ = ALOC.BKG_ALOC_SEQ(+)
    AND   BKG.BKG_ALOC_SEQ = BKG_TEU.BKG_ALOC_SEQ
    AND   NVL(BKG.T_POL_ALOC_SEQ,0) = 0
    AND   NVL(BKG.T_POD_ALOC_SEQ,0) = 0
    UNION ALL
    SELECT ITEM
         , BKG.SLAN_CD TRNK_SLAN_CD
         , BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD VVD
         , BKG.OFC_N3RD_LVL_CD L_RHQ
         , BKG.GSO OB_SLS_OFC_CD
         , BKG.T_POL_CD||'/          ' TRUNK_TP
         , BKG_TEU.BKG_LOFC_VOL_POL
         , ALOC.L_OFC_ALLOC_POL
         , BKG.ALOC_LOD_QTY_RTO
         , BKG.ALOC_SVC_CD
         , ALOC.L_RHQ_ALLOC_POL
         , BKG_TEU.BKG_LRHQ_VOL_POL
         , CASE WHEN L_OFC_ALLOC_POL = 0 THEN 0
                ELSE ROUND(BKG_LOFC_VOL_POL/L_OFC_ALLOC_POL*100,1) 
                END OFC_RATIO
         , CASE WHEN L_RHQ_ALLOC_POL = 0 THEN 0
                ELSE ROUND(BKG_LRHQ_VOL_POL/L_RHQ_ALLOC_POL*100,1) 
                END RHQ_RATIO
    FROM BKG, ALOC, BKG_TEU
    WHERE BKG.BKG_ALOC_SEQ = ALOC.BKG_ALOC_SEQ
    AND   BKG.BKG_ALOC_SEQ = BKG_TEU.BKG_ALOC_SEQ
    AND   NVL(BKG.T_POL_ALOC_SEQ,0) <> 0
    AND   NVL(BKG.T_POD_ALOC_SEQ,0) = 0
    UNION ALL
    SELECT ITEM
         , BKG.SLAN_CD TRNK_SLAN_CD
         , BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD VVD
         , BKG.OFC_N3RD_LVL_CD L_RHQ
         , BKG.GSO OB_SLS_OFC_CD
         , '          /'||BKG.T_POD_CD TRUNK_TP
         , BKG_TEU.BKG_LOFC_VOL_POD
         , ALOC.L_OFC_ALLOC_POD
         , BKG.ALOC_LOD_QTY_RTO
         , BKG.ALOC_SVC_CD
         , ALOC.L_RHQ_ALLOC_POD
         , BKG_TEU.BKG_LRHQ_VOL_POD
         , CASE WHEN L_OFC_ALLOC_POD = 0 THEN 0
                ELSE ROUND(BKG_LOFC_VOL_POD/L_OFC_ALLOC_POD*100,1) 
                END OFC_RATIO
         , CASE WHEN L_RHQ_ALLOC_POD = 0 THEN 0
                ELSE ROUND(BKG_LRHQ_VOL_POD/L_RHQ_ALLOC_POD*100,1) 
                END RHQ_RATIO
    FROM BKG, ALOC, BKG_TEU
    WHERE BKG.BKG_ALOC_SEQ = ALOC.BKG_ALOC_SEQ
    AND   BKG.BKG_ALOC_SEQ = BKG_TEU.BKG_ALOC_SEQ
    AND   NVL(BKG.T_POL_ALOC_SEQ,0) = 0
    AND   NVL(BKG.T_POD_ALOC_SEQ,0) <> 0
    UNION ALL
    SELECT ITEM
         , BKG.SLAN_CD TRNK_SLAN_CD
         , BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD VVD
         , BKG.OFC_N3RD_LVL_CD L_RHQ
         , BKG.GSO OB_SLS_OFC_CD
         , BKG.T_POL_CD||'/'||BKG.T_POD_CD TRUNK_TP
         , BKG_TEU.BKG_LOFC_VOL_POL_POD
         , ALOC.L_OFC_ALLOC_POL_POD
         , BKG.ALOC_LOD_QTY_RTO
         , BKG.ALOC_SVC_CD
         , ALOC.L_RHQ_ALLOC_POL_POD
         , BKG_TEU.BKG_LRHQ_VOL_POL_POD
         , CASE WHEN L_OFC_ALLOC_POL_POD = 0 THEN 0
                ELSE ROUND(BKG_LOFC_VOL_POL_POD/L_OFC_ALLOC_POL_POD*100,1) 
                END OFC_RATIO
         , CASE WHEN L_RHQ_ALLOC_POL_POD = 0 THEN 0
                ELSE ROUND(BKG_LRHQ_VOL_POL_POD/L_RHQ_ALLOC_POL_POD*100,1) 
                END RHQ_RATIO
    FROM BKG, ALOC, BKG_TEU
    WHERE BKG.BKG_ALOC_SEQ = ALOC.BKG_ALOC_SEQ
    AND   BKG.BKG_ALOC_SEQ = BKG_TEU.BKG_ALOC_SEQ
    AND   NVL(BKG.T_POL_ALOC_SEQ,0) <> 0
    AND   NVL(BKG.T_POD_ALOC_SEQ,0) <> 0
)
WHERE (OFC_RATIO > ALOC_LOD_QTY_RTO
    OR RHQ_RATIO > ALOC_LOD_QTY_RTO )
AND ROWNUM = 1			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
