/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : StatusReportDBDAOOutBdMovementStsListInVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.10.20
*@LastModifier : 
*@LastVersion : 1.0
* 2016.10.20 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.bkg.bookingreport.statusreport.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class StatusReportDBDAOOutBdMovementStsListInVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  *    
	  * </pre>
	  */
	public StatusReportDBDAOOutBdMovementStsListInVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("xter_bkg_rqst_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rcv_term_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pre_1_vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pre_1_pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bkg_dt_to",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("de_term_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rlane_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bkg_cgo_tp_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("chk_dup_vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cust_seq",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bkg_sts_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("dest_trns_svc_mod_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cntr_cfm_flg",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("org_yd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("sub_trd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("por_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bkg_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bkg_dt_fr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cust_nm",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bkg_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cust_cnt_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.bkg.bookingreport.statusreport.integration").append("\n"); 
		query.append("FileName : StatusReportDBDAOOutBdMovementStsListInVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH AAA AS " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("   SELECT  SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR" ).append("\n"); 
		query.append("         , V.COST_WK" ).append("\n"); 
		query.append("         , V.SLS_YRMON" ).append("\n"); 
		query.append("         , V.TRD_CD" ).append("\n"); 
		query.append("         , V.SUB_TRD_CD" ).append("\n"); 
		query.append("         , V.RLANE_CD" ).append("\n"); 
		query.append("         , V.DIR_CD" ).append("\n"); 
		query.append("         , V.VSL_CD" ).append("\n"); 
		query.append("         , V.SKD_VOY_NO" ).append("\n"); 
		query.append("         , V.DIR_CD AS SKD_DIR_CD" ).append("\n"); 
		query.append("         , V.IOC_CD" ).append("\n"); 
		query.append("   FROM    MDM_REV_LANE RL" ).append("\n"); 
		query.append("         , COA_MON_VVD V" ).append("\n"); 
		query.append("   WHERE   RL.RLANE_CD = V.RLANE_CD" ).append("\n"); 
		query.append("   AND     V.DELT_FLG = 'N'" ).append("\n"); 
		query.append("   AND     V.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("   AND     V.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("   AND     V.DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_VVD_DATE_1 AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("   SELECT  B.BKG_NO" ).append("\n"); 
		query.append("         , BV.SLAN_CD" ).append("\n"); 
		query.append("         , BV.VSL_CD" ).append("\n"); 
		query.append("         , BV.SKD_VOY_NO" ).append("\n"); 
		query.append("         , BV.SKD_DIR_CD" ).append("\n"); 
		query.append("         , DRL.TRD_CD" ).append("\n"); 
		query.append("         , DRL.SUB_TRD_CD" ).append("\n"); 
		query.append("         , DRL.RLANE_CD" ).append("\n"); 
		query.append("         , BV.POL_CD" ).append("\n"); 
		query.append("         , BV.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         , BV.POD_CD" ).append("\n"); 
		query.append("         , B.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("         , (" ).append("\n"); 
		query.append("              SELECT  CONTI_CD" ).append("\n"); 
		query.append("              FROM    MDM_LOCATION L" ).append("\n"); 
		query.append("              WHERE   L.LOC_CD = BV.POL_CD" ).append("\n"); 
		query.append("           ) FM_CONTI_CD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("              SELECT  CONTI_CD" ).append("\n"); 
		query.append("              FROM    MDM_LOCATION L" ).append("\n"); 
		query.append("              WHERE   L.LOC_CD = BV.POD_CD" ).append("\n"); 
		query.append("           ) TO_CONTI_CD" ).append("\n"); 
		query.append("   FROM    BKG_VVD BV" ).append("\n"); 
		query.append("         , BKG_BOOKING B" ).append("\n"); 
		query.append("         , AAA M" ).append("\n"); 
		query.append("         , MDM_DTL_REV_LANE DRL" ).append("\n"); 
		query.append("         , MDM_REV_LANE RL" ).append("\n"); 
		query.append("   WHERE   B.BKG_NO = BV.BKG_NO" ).append("\n"); 
		query.append("   AND     M.VSL_CD = BV.VSL_CD" ).append("\n"); 
		query.append("   AND     M.SKD_VOY_NO = BV.SKD_VOY_NO" ).append("\n"); 
		query.append("   AND     M.SKD_DIR_CD = BV.SKD_DIR_CD" ).append("\n"); 
		query.append("   AND     RL.VSL_SLAN_CD = BV.SLAN_CD" ).append("\n"); 
		query.append("   AND     DRL.RLANE_CD = RL.RLANE_CD" ).append("\n"); 
		query.append("   AND     DRL.RLANE_CD = M.RLANE_CD" ).append("\n"); 
		query.append("   AND     DRL.VSL_SLAN_DIR_CD = M.DIR_CD" ).append("\n"); 
		query.append("   AND     DRL.IOC_CD = M.IOC_CD" ).append("\n"); 
		query.append("   AND     DRL.TRD_CD = M.TRD_CD" ).append("\n"); 
		query.append("   AND     DRL.SUB_TRD_CD = M.SUB_TRD_CD" ).append("\n"); 
		query.append("   AND     DRL.DELT_FLG = 'N'" ).append("\n"); 
		query.append("   AND     DRL.FM_CONTI_CD = ( SELECT CONTI_CD FROM MDM_LOCATION L WHERE L.LOC_CD = BV.POL_CD )" ).append("\n"); 
		query.append("   AND     DRL.TO_CONTI_CD = ( SELECT CONTI_CD FROM MDM_LOCATION L WHERE L.LOC_CD = BV.POD_CD )" ).append("\n"); 
		query.append("   AND     RL.RLANE_CD = M.RLANE_CD" ).append("\n"); 
		query.append("   AND     RL.VSL_TP_CD = 'C'" ).append("\n"); 
		query.append("   AND     RL.DELT_FLG = 'N'" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_VVD_DATE AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT K.* , NVL(KK.KK,'N') CNTR_QTY_DIF" ).append("\n"); 
		query.append("    FROM BKG_VVD_DATE_1 K" ).append("\n"); 
		query.append("    , ( SELECT BKG_NO, 'Y' KK" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("    SELECT AA.BKG_NO, CNTR_TPSZ_CD, COUNT(*)" ).append("\n"); 
		query.append("    FROM BKG_CONTAINER AA, BKG_VVD_DATE_1 BB" ).append("\n"); 
		query.append("    WHERE AA.BKG_NO = BB.BKG_NO" ).append("\n"); 
		query.append("    GROUP BY AA.BKG_NO, AA.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("    MINUS" ).append("\n"); 
		query.append("    SELECT AA.BKG_NO, CNTR_TPSZ_CD, OP_CNTR_QTY" ).append("\n"); 
		query.append("    FROM BKG_QUANTITY AA, BKG_VVD_DATE_1 BB" ).append("\n"); 
		query.append("    WHERE AA.BKG_NO = BB.BKG_NO )) KK" ).append("\n"); 
		query.append("    WHERE K.BKG_NO = KK.BKG_NO(+)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("SELECT  ROWNUM RNUM" ).append("\n"); 
		query.append("      , TRD_CD" ).append("\n"); 
		query.append("      , SUB_TRD_CD" ).append("\n"); 
		query.append("      , RLANE_CD" ).append("\n"); 
		query.append("      , TRUNK_VVD" ).append("\n"); 
		query.append("      , BKG_NO" ).append("\n"); 
		query.append("      , BKG_RANK" ).append("\n"); 
		query.append("      , BKG_STS_CD" ).append("\n"); 
		query.append("      , CUST_NM" ).append("\n"); 
		query.append("      , BKG_CGO_TP_CD" ).append("\n"); 
		query.append("      , POR_CD" ).append("\n"); 
		query.append("      , POD_CD" ).append("\n"); 
		query.append("      , POL_CD" ).append("\n"); 
		query.append("      , DEL_CD" ).append("\n"); 
		query.append("      , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("      , OP_CNTR_QTY" ).append("\n"); 
		query.append("      , RCV_TERM_CD" ).append("\n"); 
		query.append("      , DE_TERM_CD" ).append("\n"); 
		query.append("      , CNTR_NO" ).append("\n"); 
		query.append("      , CNTR_TPSZ_CD_MV" ).append("\n"); 
		query.append("      , CNTR_VOL_QTY" ).append("\n"); 
		query.append("      , EQ_SUBST_TPSZ_CD" ).append("\n"); 
		query.append("      , ADV_SHTG_CD" ).append("\n"); 
		query.append("      , CNMV_STS_CD" ).append("\n"); 
		query.append("      , ORG_YD_CD" ).append("\n"); 
		query.append("      , CNMV_EVNT_DT" ).append("\n"); 
		query.append("      , VPS_CCT_DT" ).append("\n"); 
		query.append("      , VPS_ETD_DT" ).append("\n"); 
		query.append("      , RCV_TERM_CD_MV" ).append("\n"); 
		query.append("      , DE_TERM_CD_MV" ).append("\n"); 
		query.append("      , BKG_CRE_DT" ).append("\n"); 
		query.append("      , CNTR_PRT_FLG" ).append("\n"); 
		query.append("      , CNTR_CFM_FLG" ).append("\n"); 
		query.append("      , CNMV_YR" ).append("\n"); 
		query.append("      , CNMV_ID_NO" ).append("\n"); 
		query.append("      , CNMV_CYC_NO" ).append("\n"); 
		query.append("      , DEST_TRNS_SVC_MOD_CD" ).append("\n"); 
		query.append("      , XTER_BKG_RQST_CD" ).append("\n"); 
		query.append("      , PRE_1_VVD" ).append("\n"); 
		query.append("      , PRE_1_POL_CD" ).append("\n"); 
		query.append("      , KEY_POL_CD" ).append("\n"); 
		query.append("      , BKG_GET_TOKEN_FNC(CLM,1) AS CLM_SGHT_CD" ).append("\n"); 
		query.append("      , BKG_GET_TOKEN_FNC(CLM,2) AS ARR_LOC_NM" ).append("\n"); 
		query.append("      , BKG_GET_TOKEN_FNC(CLM,3) AS ARR_STE_CD " ).append("\n"); 
		query.append("      , BKG_GET_TOKEN_FNC(CLM,4) AS ARR_DT" ).append("\n"); 
		query.append("      , BKG_GET_TOKEN_FNC(CLM,5) AS DEP_DT" ).append("\n"); 
		query.append("      , VSL_PRE_PST_CD" ).append("\n"); 
		query.append("      , DG" ).append("\n"); 
		query.append("      , DG_STS" ).append("\n"); 
		query.append("      , RF" ).append("\n"); 
		query.append("      , RF_STS" ).append("\n"); 
		query.append("      , AK" ).append("\n"); 
		query.append("      , AK_STS" ).append("\n"); 
		query.append("      , SUBGROUP_TITLE" ).append("\n"); 
		query.append("      , VVD_CD" ).append("\n"); 
		query.append("      , OFC_INC_SUB" ).append("\n"); 
		query.append("      , CUST_TP_CD" ).append("\n"); 
		query.append("      , CUST_CNT_CD" ).append("\n"); 
		query.append("      , CUST_SEQ" ).append("\n"); 
		query.append("      , CHK_LT_TYPE" ).append("\n"); 
		query.append("      , CHK_INC_CLM" ).append("\n"); 
		query.append("      , BKG_DT_FR" ).append("\n"); 
		query.append("      , BKG_DT_TO" ).append("\n"); 
		query.append("      , BKG_OFC_CD" ).append("\n"); 
		query.append("      , COP_NO" ).append("\n"); 
		query.append("      , CBKG_NO" ).append("\n"); 
		query.append("      , CLM_DT" ).append("\n"); 
		query.append("      , CNTR_CHECK" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("        SELECT  ROWNUM RNUM" ).append("\n"); 
		query.append("              , TRD_CD" ).append("\n"); 
		query.append("              , SUB_TRD_CD" ).append("\n"); 
		query.append("              , RLANE_CD" ).append("\n"); 
		query.append("              ,  TRUNK_VVD" ).append("\n"); 
		query.append("              ,  BKG_NO" ).append("\n"); 
		query.append("              ,  BKG_RANK" ).append("\n"); 
		query.append("              ,  BKG_STS_CD" ).append("\n"); 
		query.append("              ,  CUST_NM" ).append("\n"); 
		query.append("              ,  BKG_CGO_TP_CD" ).append("\n"); 
		query.append("              ,  POR_CD" ).append("\n"); 
		query.append("              ,  POD_CD" ).append("\n"); 
		query.append("              ,  POL_CD" ).append("\n"); 
		query.append("              ,  DEL_CD" ).append("\n"); 
		query.append("              , NVL(CNTR_TPSZ_CD, (SELECT CNTR_TPSZ_CD FROM BKG_QUANTITY WHERE BKG_NO = T.BKG_NO AND CNTR_TPSZ_CD = SUBSTR(T.CNTR_TPSZ_CD_MV,1,1)||DECODE(SUBSTR(T.CNTR_TPSZ_CD_MV,2,1),'4','5','4'))) CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              , NVL(OP_CNTR_QTY, (SELECT OP_CNTR_QTY FROM BKG_QUANTITY WHERE BKG_NO = T.BKG_NO AND CNTR_TPSZ_CD = SUBSTR(T.CNTR_TPSZ_CD_MV,1,1)||DECODE(SUBSTR(T.CNTR_TPSZ_CD_MV,2,1),'4','5','4'))) OP_CNTR_QTY" ).append("\n"); 
		query.append("              --,      CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              --,      OP_CNTR_QTY" ).append("\n"); 
		query.append("              ,  RCV_TERM_CD" ).append("\n"); 
		query.append("              ,  DE_TERM_CD" ).append("\n"); 
		query.append("              ,  CNTR_NO" ).append("\n"); 
		query.append("              ,  CNTR_TPSZ_CD_MV" ).append("\n"); 
		query.append("              ,  CNTR_VOL_QTY" ).append("\n"); 
		query.append("              ,  EQ_SUBST_TPSZ_CD" ).append("\n"); 
		query.append("              ,  ADV_SHTG_CD" ).append("\n"); 
		query.append("              ,  CNMV_STS_CD" ).append("\n"); 
		query.append("              ,  ORG_YD_CD" ).append("\n"); 
		query.append("              ,  CNMV_EVNT_DT" ).append("\n"); 
		query.append("              ,  VPS_CCT_DT" ).append("\n"); 
		query.append("              ,  VPS_ETD_DT" ).append("\n"); 
		query.append("              ,  RCV_TERM_CD_MV" ).append("\n"); 
		query.append("              ,  DE_TERM_CD_MV" ).append("\n"); 
		query.append("              ,  BKG_CRE_DT" ).append("\n"); 
		query.append("              ,  CNTR_PRT_FLG" ).append("\n"); 
		query.append("              ,  CNTR_CFM_FLG" ).append("\n"); 
		query.append("              ,  CNMV_YR" ).append("\n"); 
		query.append("              ,  CNMV_ID_NO" ).append("\n"); 
		query.append("              ,  CNMV_CYC_NO" ).append("\n"); 
		query.append("              ,  DEST_TRNS_SVC_MOD_CD" ).append("\n"); 
		query.append("              ,  XTER_BKG_RQST_CD" ).append("\n"); 
		query.append("              ,  PRE_1_VVD" ).append("\n"); 
		query.append("              ,  PRE_1_POL_CD" ).append("\n"); 
		query.append("              ,  KEY_POL_CD" ).append("\n"); 
		query.append("              , CASE WHEN BKG_GET_TOKEN_FNC(CLM,4) IS NULL--ARR_DT" ).append("\n"); 
		query.append("                     THEN EDI_322" ).append("\n"); 
		query.append("                     WHEN BKG_GET_TOKEN_FNC(EDI_322,4) IS NULL" ).append("\n"); 
		query.append("                     THEN CLM" ).append("\n"); 
		query.append("                     WHEN BKG_GET_TOKEN_FNC(CLM,4) > BKG_GET_TOKEN_FNC(EDI_322,4)" ).append("\n"); 
		query.append("                     THEN CLM" ).append("\n"); 
		query.append("                END CLM" ).append("\n"); 
		query.append("              ,  VSL_PRE_PST_CD" ).append("\n"); 
		query.append("              ,  DG" ).append("\n"); 
		query.append("              ,  DG_STS" ).append("\n"); 
		query.append("              ,  DECODE(RF,'','',RF || ' C') RF" ).append("\n"); 
		query.append("              ,  RF_STS" ).append("\n"); 
		query.append("              ,  AK" ).append("\n"); 
		query.append("              ,  AK_STS" ).append("\n"); 
		query.append("              ,  SUBGROUP_TITLE" ).append("\n"); 
		query.append("              ,  VVD_CD" ).append("\n"); 
		query.append("              ,  OFC_INC_SUB" ).append("\n"); 
		query.append("              ,  CUST_TP_CD" ).append("\n"); 
		query.append("              ,  CUST_CNT_CD" ).append("\n"); 
		query.append("              ,  CUST_SEQ" ).append("\n"); 
		query.append("              ,  CHK_LT_TYPE" ).append("\n"); 
		query.append("              ,  CHK_INC_CLM" ).append("\n"); 
		query.append("              ,  BKG_DT_FR" ).append("\n"); 
		query.append("              ,  BKG_DT_TO" ).append("\n"); 
		query.append("              ,  BKG_OFC_CD" ).append("\n"); 
		query.append("              ,  COP_NO" ).append("\n"); 
		query.append("              ,  BKG_NO AS CBKG_NO" ).append("\n"); 
		query.append("              ,  TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI') AS CLM_DT" ).append("\n"); 
		query.append("              ,  DECODE(  ADV_SHTG_CD,NULL,DECODE(CRN_VVD_CNT,NULL,''," ).append("\n"); 
		query.append("                                          DECODE(PRE_VVD_CNT,NULL,''," ).append("\n"); 
		query.append("                                          DECODE(SUBSTR(CRN_VVD_CNT,-2),SUBSTR(PRE_VVD_CNT,-2),'D','')))," ).append("\n"); 
		query.append("                                          ADV_SHTG_CD" ).append("\n"); 
		query.append("                ) CNTR_CHECK" ).append("\n"); 
		query.append("        FROM    (" ).append("\n"); 
		query.append("                    SELECT DISTINCT A.*" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                   SELECT   DISTINCT BVD.TRD_CD" ).append("\n"); 
		query.append("                          , BVD.SUB_TRD_CD" ).append("\n"); 
		query.append("                          , BVD.RLANE_CD" ).append("\n"); 
		query.append("                          , VB.TRUNK_VVD" ).append("\n"); 
		query.append("                          , VB.BKG_NO" ).append("\n"); 
		query.append("                          , RANK() OVER(PARTITION BY VB.TRUNK_VVD, VB.BKG_NO, VB.POL_CD, A.CNTR_TPSZ_CD ORDER BY B.CNTR_NO) BKG_RANK" ).append("\n"); 
		query.append("                          , VB.BKG_STS_CD" ).append("\n"); 
		query.append("                          , SUBSTR(TRANSLATE(NVL(VB.SHPR_NAME,' '),CHR(10),' '),1,20) CUST_NM" ).append("\n"); 
		query.append("                          , VB.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("                          , VB.POR_CD" ).append("\n"); 
		query.append("                          , VB.POD_CD" ).append("\n"); 
		query.append("                          , VB.POL_CD" ).append("\n"); 
		query.append("                          , VB.DEL_CD" ).append("\n"); 
		query.append("                          , A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                          , A.OP_CNTR_QTY" ).append("\n"); 
		query.append("                          , B.RCV_TERM_CD" ).append("\n"); 
		query.append("                          , B.DE_TERM_CD" ).append("\n"); 
		query.append("                          , B.CNTR_NO" ).append("\n"); 
		query.append("                          , B.CNTR_TPSZ_CD  CNTR_TPSZ_CD_MV" ).append("\n"); 
		query.append("                          , B.CNTR_VOL_QTY" ).append("\n"); 
		query.append("                          , B.EQ_SUBST_TPSZ_CD" ).append("\n"); 
		query.append("                          , B.ADV_SHTG_CD" ).append("\n"); 
		query.append("	                      , DECODE(BK.BKG_STS_CD,'X',''," ).append("\n"); 
		query.append("				                DECODE((SELECT COP.COP_STS_CD FROM SCE_COP_HDR COP WHERE COP.BKG_NO = B.BKG_NO AND COP.CNTR_NO = B.CNTR_NO AND COP.COP_STS_CD <> 'X'),'F','MT'," ).append("\n"); 
		query.append("					                (SELECT MST.CNMV_STS_CD FROM MST_CONTAINER MST WHERE MST.CNTR_NO = B.CNTR_NO))) CNMV_STS_CD" ).append("\n"); 
		query.append("                          , B.ORG_YD_CD" ).append("\n"); 
		query.append("                          , TO_CHAR(B.CNMV_EVNT_DT, 'YYYY-MM-DD HH24:MI') CNMV_EVNT_DT" ).append("\n"); 
		query.append("                          , BK.PORT_CLZ_DT AS VPS_CCT_DT" ).append("\n"); 
		query.append("                          , TO_CHAR(V.VPS_ETD_DT,  'YYYY-MM-DD HH24:MI') VPS_ETD_DT" ).append("\n"); 
		query.append("                          , VB.RCV_TERM_CD RCV_TERM_CD_MV" ).append("\n"); 
		query.append("                          , VB.DE_TERM_CD DE_TERM_CD_MV" ).append("\n"); 
		query.append("                          , TO_CHAR(VB.BKG_CRE_DT,'YYYY-MM-DD') BKG_CRE_DT" ).append("\n"); 
		query.append("                          , B.CNTR_PRT_FLG" ).append("\n"); 
		query.append("                          , B.CNTR_CFM_FLG" ).append("\n"); 
		query.append("                          , MOVE.CNMV_YR" ).append("\n"); 
		query.append("                          , MOVE.CNMV_ID_NO" ).append("\n"); 
		query.append("                          , MOVE.CNMV_CYC_NO" ).append("\n"); 
		query.append("                          , VB.DEST_TRNS_SVC_MOD_CD" ).append("\n"); 
		query.append("                          , VB.XTER_BKG_RQST_CD" ).append("\n"); 
		query.append("                          , VB.PRE_1_VVD" ).append("\n"); 
		query.append("                          , VB.PRE_1_POL_CD" ).append("\n"); 
		query.append("                          , VB.KEY_POL_CD" ).append("\n"); 
		query.append("                          , (  SELECT  NVL(CLM.CLM_SGHT_CD,' ')||','||NVL(CLM.ARR_LOC_NM,' ')||','||NVL(CLM.ARR_STE_CD,' ')||','||NVL(TO_CHAR(CLM.ARR_DT,'YYYY-MM-DD HH24:MI'),' ')||','||NVL(TO_CHAR(CLM.DEP_DT,'YYYY-MM-DD HH24:MI'),' ')" ).append("\n"); 
		query.append("                               FROM    SCE_CLM_IF CLM, SCE_CLM_SGHT SGHT" ).append("\n"); 
		query.append("                               WHERE   1 = 1" ).append("\n"); 
		query.append("                               AND CLM.CNTR_NO = MOVE.CNTR_NO" ).append("\n"); 
		query.append("                               AND CLM.CNMV_YR = MOVE.CNMV_YR" ).append("\n"); 
		query.append("                               AND CLM.CLM_CYC_NO = MOVE.CNMV_CYC_NO" ).append("\n"); 
		query.append("                               AND CLM.CNMV_ID_NO = MOVE.CNMV_ID_NO" ).append("\n"); 
		query.append("                               AND CLM.CLM_SGHT_CD = SGHT.CLM_SGHT_CD" ).append("\n"); 
		query.append("                               AND TO_CHAR(CLM.CLM_SEQ,'000')||TO_CHAR(CLM.ARR_DT,'YYYY-MM-DD HH24:MI:SS') = (  SELECT  MAX(TO_CHAR(CLM_SEQ,'000'))||TO_CHAR(MAX(Z.ARR_DT),'YYYY-MM-DD HH24:MI:SS')" ).append("\n"); 
		query.append("                                                                                                                FROM    SCE_CLM_IF Z" ).append("\n"); 
		query.append("                                                                                                                WHERE   Z.CNTR_NO = CLM.CNTR_NO" ).append("\n"); 
		query.append("                                                                                                                AND     Z.CNMV_YR = CLM.CNMV_YR" ).append("\n"); 
		query.append("                                                                                                                AND     Z.CLM_CYC_NO = CLM.CLM_CYC_NO" ).append("\n"); 
		query.append("                                                                                                             )" ).append("\n"); 
		query.append("                            ) CLM     " ).append("\n"); 
		query.append("                          , (SELECT NVL(EDI_322_STS_CD,' ')||','||NVL(NVL(EVNT_CTY_NM, NVL((SELECT YD_NM FROM MDM_YARD M WHERE M.YD_CD = EVNT_YD_CD), EVNT_YD_CD)),' ')||','||NVL(EVNT_STE_CD,' ')||','||NVL(TO_CHAR(EVNT_DT,'YYYY-MM-DD HH24:MI'),' ')||','||' '" ).append("\n"); 
		query.append("                               FROM EDI_322_MSG EDI" ).append("\n"); 
		query.append("                               WHERE EDI.EQ_NO = MOVE.CNTR_NO" ).append("\n"); 
		query.append("                               AND NVL(EDI.BKG_EDI_322_NO, EDI.BL_EDI_322_NO) = MOVE.BKG_NO" ).append("\n"); 
		query.append("                               AND EVNT_DT = (SELECT MAX(EVNT_DT)" ).append("\n"); 
		query.append("                                              FROM EDI_322_MSG Z" ).append("\n"); 
		query.append("                                              WHERE Z.EQ_NO = EDI.EQ_NO)" ).append("\n"); 
		query.append("                               AND ROWNUM = 1" ).append("\n"); 
		query.append("                            ) EDI_322" ).append("\n"); 
		query.append("                          , DECODE(VB.VSL_PRE_PST_CD,'T','TRUNK','U','POST','S','PRE') VSL_PRE_PST_CD" ).append("\n"); 
		query.append("                          , (  SELECT  K.SPCL_CGO_APRO_CD " ).append("\n"); 
		query.append("                               FROM    BKG_DG_CGO K " ).append("\n"); 
		query.append("                               WHERE   K.BKG_NO = B.BKG_NO" ).append("\n"); 
		query.append("                               AND     K.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                               AND     K.DCGO_SEQ = (  SELECT MAX(G.DCGO_SEQ) FROM BKG_DG_CGO G WHERE G.BKG_NO = B.BKG_NO AND G.CNTR_NO = B.CNTR_NO  )" ).append("\n"); 
		query.append("                            )  AS DG_STS" ).append("\n"); 
		query.append("                          , BKG_JOIN_FNC(CURSOR(  SELECT IMDG_UN_NO FROM BKG_DG_CGO WHERE BKG_NO = VB.BKG_NO AND   CNTR_NO =B.CNTR_NO  )) DG" ).append("\n"); 
		query.append("                          , (  SELECT  J.SPCL_CGO_APRO_CD " ).append("\n"); 
		query.append("                               FROM    BKG_RF_CGO J " ).append("\n"); 
		query.append("                               WHERE   J.BKG_NO = VB.BKG_NO" ).append("\n"); 
		query.append("                               AND     J.RC_SEQ = (  SELECT MAX(S.RC_SEQ) FROM BKG_RF_CGO S WHERE S.BKG_NO = B.BKG_NO AND S.CNTR_NO = B.CNTR_NO  )" ).append("\n"); 
		query.append("                            ) AS RF_STS" ).append("\n"); 
		query.append("                          , BKG_JOIN_FNC(CURSOR(  SELECT CDO_TEMP FROM BKG_RF_CGO WHERE BKG_NO = VB.BKG_NO AND CNTR_NO =B.CNTR_NO  ))  RF" ).append("\n"); 
		query.append("                          , (  SELECT  Y.SPCL_CGO_APRO_CD" ).append("\n"); 
		query.append("                               FROM    BKG_AWK_CGO Y" ).append("\n"); 
		query.append("                               WHERE   Y.BKG_NO = VB.BKG_NO" ).append("\n"); 
		query.append("                               AND     Y.AWK_CGO_SEQ = (  SELECT MAX(Q.AWK_CGO_SEQ) FROM BKG_AWK_CGO Q WHERE Q.BKG_NO = B.BKG_NO AND Q.CNTR_NO = B.CNTR_NO  )" ).append("\n"); 
		query.append("                            ) AS AK_STS" ).append("\n"); 
		query.append("                          , BKG_JOIN_FNC(CURSOR(  SELECT  OVR_FWRD_LEN||'/' ||OVR_BKWD_LEN||'/' ||OVR_HGT ||'/' || OVR_LF_LEN ||'/' || OVR_RT_LEN" ).append("\n"); 
		query.append("                                                  FROM    BKG_AWK_CGO" ).append("\n"); 
		query.append("                                                  WHERE   BKG_NO = VB.BKG_NO" ).append("\n"); 
		query.append("                                                  AND     CNTR_NO = B.CNTR_NO)" ).append("\n"); 
		query.append("                            )   AK" ).append("\n"); 
		query.append("                          , 'VVD : ' || V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD || '   POL : ' || VB.KEY_POL_CD" ).append("\n"); 
		query.append("                           	|| '    CCT : ' || TO_CHAR((PRD_COMMON_PKG.PRD_GET_CCT_BY_BKG_INFO_FNC(V.VSL_CD, V.SKD_VOY_NO, V.SKD_DIR_CD, V.VPS_PORT_CD, V.CLPT_IND_SEQ, V.YD_CD, BK.DCGO_FLG||BK.RC_FLG||BK.AWK_CGO_FLG||BK.BB_CGO_FLG||NVL((SELECT 'Y' FROM BKG_QTY_DTL QD WHERE QD.BKG_NO = BK.BKG_NO AND QD.DRY_CGO_FLG = 'Y' AND ROWNUM = 1), 'N'))),  'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("                           	|| '   ETD : ' || TO_CHAR(V.VPS_ETD_DT,  'YYYY-MM-DD HH24:MI')  SUBGROUP_TITLE" ).append("\n"); 
		query.append("                          , '' VVD_CD" ).append("\n"); 
		query.append("                          , '' OFC_INC_SUB" ).append("\n"); 
		query.append("                          , '' CUST_TP_CD" ).append("\n"); 
		query.append("                          , '' CUST_CNT_CD" ).append("\n"); 
		query.append("                          , '' CUST_SEQ" ).append("\n"); 
		query.append("                          , '' CHK_LT_TYPE" ).append("\n"); 
		query.append("                          , '' CHK_INC_CLM" ).append("\n"); 
		query.append("                          , '' BKG_DT_FR" ).append("\n"); 
		query.append("                          , '' BKG_DT_TO" ).append("\n"); 
		query.append("                          , '' BKG_OFC_CD" ).append("\n"); 
		query.append("                          , (  SELECT  COP_NO" ).append("\n"); 
		query.append("                               FROM    SCE_COP_HDR K" ).append("\n"); 
		query.append("                               WHERE   K.BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                               AND     K.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                               AND     K.POD_NOD_CD = BK.POD_NOD_CD" ).append("\n"); 
		query.append("                               AND     K.DEL_NOD_CD = BK.DEL_NOD_CD " ).append("\n"); 
		query.append("                               AND     K.COP_STS_CD <> 'X'" ).append("\n"); 
		query.append("                            ) AS COP_NO  " ).append("\n"); 
		query.append("                          , (  SELECT  TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD||SUBSTR(DECODE(SUBSTR(ORG_YD_CD,1,5),'CNHKG','HKGCN',SUBSTR(ORG_YD_CD,1,5)),1,2)" ).append("\n"); 
		query.append("                               FROM    CTM_MOVEMENT" ).append("\n"); 
		query.append("                               WHERE   CNTR_NO = B.CNTR_NO " ).append("\n"); 
		query.append("                               AND     BKG_NO =BK.BKG_NO " ).append("\n"); 
		query.append("                               AND     NVL(TRNK_VSL_CD,'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                               AND     CNMV_EVNT_DT = (  SELECT  MAX(CNMV_EVNT_DT) " ).append("\n"); 
		query.append("                                                         FROM    CTM_MOVEMENT " ).append("\n"); 
		query.append("                                                         WHERE   CNTR_NO = B.CNTR_NO " ).append("\n"); 
		query.append("                                                         AND     BKG_NO =BK.BKG_NO " ).append("\n"); 
		query.append("                                                         AND     MVMT_STS_CD = 'OC'" ).append("\n"); 
		query.append("                                                      )" ).append("\n"); 
		query.append("                               AND     MVMT_STS_CD ='OC'                      " ).append("\n"); 
		query.append("                               AND     ROWNUM = 1  " ).append("\n"); 
		query.append("                            ) CRN_VVD_CNT" ).append("\n"); 
		query.append("                          , (  SELECT  TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD||SUBSTR(DECODE(SUBSTR(CTM.ORG_YD_CD, 1, 5), 'CNHKG', 'HKGCN', SUBSTR(CTM.ORG_YD_CD, 1, 5)), 1, 2)" ).append("\n"); 
		query.append("                               FROM    CTM_MOVEMENT CTM" ).append("\n"); 
		query.append("                                     , BKG_BOOKING BB" ).append("\n"); 
		query.append("                                     , BKG_CONTAINER BC" ).append("\n"); 
		query.append("                               WHERE   CTM.BKG_NO = BB.BKG_NO" ).append("\n"); 
		query.append("                               AND     CTM.BKG_NO = BC.BKG_NO" ).append("\n"); 
		query.append("                               AND     CTM.CNTR_NO = BC.CNTR_NO" ).append("\n"); 
		query.append("                               AND     CTM.BKG_NO <> BK.BKG_NO" ).append("\n"); 
		query.append("                               AND     CTM.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                               AND     CTM.BKG_CGO_TP_CD ='F'" ).append("\n"); 
		query.append("                               AND     NVL(CTM.TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                               AND     CTM.CNMV_CYC_NO = (  SELECT  MAX(CNMV_CYC_NO) - 1" ).append("\n"); 
		query.append("                                                            FROM    CTM_MOVEMENT" ).append("\n"); 
		query.append("                                                            WHERE   CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                                                            AND     BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                                                            AND     MVMT_STS_CD = 'OC'" ).append("\n"); 
		query.append("                                                            AND     NVL(TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                                                        )" ).append("\n"); 
		query.append("                               AND     CTM.CNMV_EVNT_DT < (  SELECT MAX(CNMV_EVNT_DT)" ).append("\n"); 
		query.append("                                                             FROM   CTM_MOVEMENT" ).append("\n"); 
		query.append("                                                             WHERE  CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                                                             AND    BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                                                             AND    MVMT_STS_CD ='OC'" ).append("\n"); 
		query.append("                                                             AND    NVL(TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                                                          )" ).append("\n"); 
		query.append("                               AND     CTM.CNMV_EVNT_DT >= ( SELECT MAX(CNMV_EVNT_DT) - 30" ).append("\n"); 
		query.append("                                                             FROM   CTM_MOVEMENT" ).append("\n"); 
		query.append("                                                             WHERE  CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                                                             AND    BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                                                             AND    MVMT_STS_CD ='OC'" ).append("\n"); 
		query.append("                                                             AND    NVL(TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                                                          )" ).append("\n"); 
		query.append("                               AND     CTM.MVMT_STS_CD IN ('OC','OP')" ).append("\n"); 
		query.append("                               AND     BB.BKG_STS_CD <> 'X'" ).append("\n"); 
		query.append("                               AND     ROWNUM = 1" ).append("\n"); 
		query.append("                            ) PRE_VVD_CNT" ).append("\n"); 
		query.append("                   FROM     BKG_WORK_V VB" ).append("\n"); 
		query.append("                          , BKG_QUANTITY A" ).append("\n"); 
		query.append("                          , VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                          , BKG_CONTAINER B" ).append("\n"); 
		query.append("                          , BKG_BOOKING BK" ).append("\n"); 
		query.append("                          , CTM_MOVEMENT MOVE" ).append("\n"); 
		query.append("                          , BKG_VVD_DATE BVD" ).append("\n"); 
		query.append("                   WHERE    VB.BKG_NO = A.BKG_NO" ).append("\n"); 
		query.append("                   AND      V.VSL_CD(+) = VB.KEY_VSL_CD" ).append("\n"); 
		query.append("                   AND      V.SKD_VOY_NO(+) = VB.KEY_SKD_VOY_NO" ).append("\n"); 
		query.append("                   AND      V.SKD_DIR_CD(+) = VB.KEY_SKD_DIR_CD" ).append("\n"); 
		query.append("--                   AND      ( DECODE(VB.PRE_1_POL_CD,NULL,VB.TRUNK_POL,VB.PRE_1_POL_CD) = V.VPS_PORT_CD(+) )" ).append("\n"); 
		query.append("                   AND      V.VPS_PORT_CD(+) = VB.KEY_POL_CD" ).append("\n"); 
		query.append("                   AND      NVL(V.CLPT_IND_SEQ,BVD.POL_CLPT_IND_SEQ) = BVD.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   AND      VB.BKG_NO       = BK.BKG_NO" ).append("\n"); 
		query.append("                   AND      B.CNTR_NO = MOVE.CNTR_NO(+)" ).append("\n"); 
		query.append("                   AND      B.CNMV_YR = MOVE.CNMV_YR(+)" ).append("\n"); 
		query.append("                   AND      B.CNMV_ID_NO = MOVE.CNMV_ID_NO(+)" ).append("\n"); 
		query.append("                   AND      A.BKG_NO       = B.BKG_NO(+)" ).append("\n"); 
		query.append("                   AND      A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("                              AND      BVD.CNTR_QTY_DIF = 'N'" ).append("\n"); 
		query.append("                   AND      (VB.BKG_STS_CD = 'F' OR VB.BKG_STS_CD = 'W' OR Vb.BKG_STS_CD = 'A')" ).append("\n"); 
		query.append("                   AND      VB.BKG_NO = BVD.BKG_NO(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${vvd_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.KEY_VSL_CD = SUBSTR(@[vvd_cd],1,4)" ).append("\n"); 
		query.append("                   AND      VB.KEY_SKD_VOY_NO = SUBSTR(@[vvd_cd],5,4)" ).append("\n"); 
		query.append("                   AND      VB.KEY_SKD_DIR_CD = SUBSTR(@[vvd_cd],9,1)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${trd_cd} != '')" ).append("\n"); 
		query.append("                   AND     BVD.TRD_CD = @[trd_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${sub_trd_cd} != '') " ).append("\n"); 
		query.append("                   AND     BVD.SUB_TRD_CD = @[sub_trd_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${rlane_cd} != '') " ).append("\n"); 
		query.append("                   AND     BVD.RLANE_CD = @[rlane_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${ofc_inc_sub} == 'Y') " ).append("\n"); 
		query.append("                   AND      VB.BKG_OFC_CD IN (" ).append("\n"); 
		query.append("                                                SELECT  OFC_CD  " ).append("\n"); 
		query.append("                                                FROM    MDM_ORGANIZATION MO" ).append("\n"); 
		query.append("                                                START WITH MO.OFC_CD = NVL(@[bkg_ofc_cd],VB.BKG_OFC_CD)" ).append("\n"); 
		query.append("                                                CONNECT BY PRIOR MO.OFC_CD = MO.PRNT_OFC_CD" ).append("\n"); 
		query.append("                                             )" ).append("\n"); 
		query.append("#else " ).append("\n"); 
		query.append("       #if (${bkg_ofc_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_OFC_CD = @[bkg_ofc_cd] " ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_dt_fr} != '' || ${bkg_dt_fr} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_CRE_DT BETWEEN TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD') AND TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("#elseif (${bkg_dt_fr} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_CRE_DT <= TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("#elseif (${bkg_dt_to} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_CRE_DT >= TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD')" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_no} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_NO = @[bkg_no]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pol_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.KEY_POL_CD  LIKE RTRIM(@[pol_cd]) || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${por_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.POR_CD LIKE RTRIM(@[por_cd]) || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${rcv_term_cd} != '') " ).append("\n"); 
		query.append("                   AND      B.RCV_TERM_CD = @[rcv_term_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${de_term_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.DE_TERM_CD = @[de_term_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${org_yd_cd} != '') " ).append("\n"); 
		query.append("                   AND      B.ORG_YD_CD LIKE  @[org_yd_cd] || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${chk_lt_type} == 'L') " ).append("\n"); 
		query.append("                   AND      VB.KEY_POL_CD = VB.POL_CD      --L/T Local  " ).append("\n"); 
		query.append("#elseif (${chk_lt_type} == 'T') " ).append("\n"); 
		query.append("                   AND      VB.KEY_POL_CD <> VB.POL_CD     --T/S" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${cntr_cfm_flg} != '') " ).append("\n"); 
		query.append("                   AND      B.CNTR_CFM_FLG = @[cntr_cfm_flg]  --Booking Container의 Tab의 Confirm 정보 " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_sts_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_STS_CD = @[bkg_sts_cd]  --예약 현황 " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${pre_1_vvd} != '') " ).append("\n"); 
		query.append("                   AND      VB.PRE_1_VVD LIKE @[pre_1_vvd] || '%' --pre_vvd" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${pre_1_pol_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.PRE_1_POL_CD = @[pre_1_pol_cd]            --pre_pol       " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${xter_bkg_rqst_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.XTER_BKG_RQST_CD = @[xter_bkg_rqst_cd]    --BKG Kind " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${cnmv_sts_cd} == 'Y') " ).append("\n"); 
		query.append("                   AND      B.CNMV_STS_CD = 'OC'     --O/C Status    Container Status가 OC인 항목 조회" ).append("\n"); 
		query.append("#elseif  (${cnmv_sts_cd} == 'N') " ).append("\n"); 
		query.append("                   AND      B.CNMV_STS_CD != 'OC'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_cgo_tp_cd} != '') " ).append("\n"); 
		query.append("                   AND      BK.BKG_CGO_TP_CD = @[bkg_cgo_tp_cd]   --화물 종류All, Full, Empty로 구분 (Cargo Type 코드 참고)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${dest_trns_svc_mod_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.DEST_TRNS_SVC_MOD_CD = @[dest_trns_svc_mod_cd]  --Service Mode" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("--------------------------------------------------------------------------" ).append("\n"); 
		query.append("--1.'SHPR'" ).append("\n"); 
		query.append("#if (${cust_tp_cd} == 'S') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd] " ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.SHIPPER LIKE @[cust_cnt_cd] || @[cust_seq] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.SHPR_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("--2.'CNEE'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'C') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.CONSIGNEE,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.CONSIGNEE LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.CONSIGNEE_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("--3.'NTFY'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'N') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.NTFY LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.NTFY_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("--4.'ANFY'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'A') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.ANTY LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.ANTY_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("--5.'FWDR'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'F')" ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.FFDR LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.FFDR_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("--6.'선택하지 않았을때..'" ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      ( SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd] OR " ).append("\n"); 
		query.append("                              SUBSTR(VB.CONSIGNEE,1,2)= @[cust_cnt_cd] OR" ).append("\n"); 
		query.append("                              SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd] OR" ).append("\n"); 
		query.append("                              SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd] OR " ).append("\n"); 
		query.append("                              SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      ( VB.SHIPPER = @[cust_cnt_cd] || @[cust_seq] OR    " ).append("\n"); 
		query.append("                              VB.CONSIGNEE = @[cust_cnt_cd] || @[cust_seq] OR" ).append("\n"); 
		query.append("                              VB.NTFY = @[cust_cnt_cd]|| @[cust_seq] OR" ).append("\n"); 
		query.append("                              VB.ANTY = @[cust_cnt_cd]|| @[cust_seq] OR " ).append("\n"); 
		query.append("                              VB.FFDR = @[cust_cnt_cd]|| @[cust_seq]" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      ( VB.SHPR_NAME = @[cust_nm] OR " ).append("\n"); 
		query.append("                              VB.CONSIGNEE_NAME = @[cust_nm] OR" ).append("\n"); 
		query.append("                              VB.NTFY_NAME = @[cust_nm] OR" ).append("\n"); 
		query.append("                              VB.ANTY_NAME = @[cust_nm] OR " ).append("\n"); 
		query.append("                              VB.FFDR_NAME = @[cust_nm]" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                           UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   SELECT   DISTINCT BVD.TRD_CD" ).append("\n"); 
		query.append("                          , BVD.SUB_TRD_CD" ).append("\n"); 
		query.append("                          , BVD.RLANE_CD" ).append("\n"); 
		query.append("                          , VB.TRUNK_VVD" ).append("\n"); 
		query.append("                          , VB.BKG_NO" ).append("\n"); 
		query.append("                          , RANK() OVER(PARTITION BY VB.TRUNK_VVD, VB.BKG_NO, VB.POL_CD, A.CNTR_TPSZ_CD ORDER BY B.CNTR_NO) BKG_RANK" ).append("\n"); 
		query.append("                          , VB.BKG_STS_CD" ).append("\n"); 
		query.append("                          , SUBSTR(TRANSLATE(NVL(VB.SHPR_NAME,' '),CHR(10),' '),1,20) CUST_NM" ).append("\n"); 
		query.append("                          , VB.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("                          , VB.POR_CD" ).append("\n"); 
		query.append("                          , VB.POD_CD" ).append("\n"); 
		query.append("                          , VB.POL_CD" ).append("\n"); 
		query.append("                          , VB.DEL_CD" ).append("\n"); 
		query.append("                          , A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                          , A.OP_CNTR_QTY" ).append("\n"); 
		query.append("                          , B.RCV_TERM_CD" ).append("\n"); 
		query.append("                          , B.DE_TERM_CD" ).append("\n"); 
		query.append("                          , B.CNTR_NO" ).append("\n"); 
		query.append("                          , B.CNTR_TPSZ_CD  CNTR_TPSZ_CD_MV" ).append("\n"); 
		query.append("                          , B.CNTR_VOL_QTY" ).append("\n"); 
		query.append("                          , B.EQ_SUBST_TPSZ_CD" ).append("\n"); 
		query.append("                          , B.ADV_SHTG_CD" ).append("\n"); 
		query.append("	                      , DECODE(BK.BKG_STS_CD,'X',''," ).append("\n"); 
		query.append("				                DECODE((SELECT COP.COP_STS_CD FROM SCE_COP_HDR COP WHERE COP.BKG_NO = B.BKG_NO AND COP.CNTR_NO = B.CNTR_NO AND COP.COP_STS_CD <> 'X'),'F','MT'," ).append("\n"); 
		query.append("					                (SELECT MST.CNMV_STS_CD FROM MST_CONTAINER MST WHERE MST.CNTR_NO = B.CNTR_NO))) CNMV_STS_CD" ).append("\n"); 
		query.append("                          , B.ORG_YD_CD" ).append("\n"); 
		query.append("                          , TO_CHAR(B.CNMV_EVNT_DT, 'YYYY-MM-DD HH24:MI') CNMV_EVNT_DT" ).append("\n"); 
		query.append("                          , BK.PORT_CLZ_DT AS VPS_CCT_DT" ).append("\n"); 
		query.append("                          , TO_CHAR(V.VPS_ETD_DT,  'YYYY-MM-DD HH24:MI') VPS_ETD_DT" ).append("\n"); 
		query.append("                          , VB.RCV_TERM_CD RCV_TERM_CD_MV" ).append("\n"); 
		query.append("                          , VB.DE_TERM_CD DE_TERM_CD_MV" ).append("\n"); 
		query.append("                          , TO_CHAR(VB.BKG_CRE_DT,'YYYY-MM-DD') BKG_CRE_DT" ).append("\n"); 
		query.append("                          , B.CNTR_PRT_FLG" ).append("\n"); 
		query.append("                          , B.CNTR_CFM_FLG" ).append("\n"); 
		query.append("                          , MOVE.CNMV_YR" ).append("\n"); 
		query.append("                          , MOVE.CNMV_ID_NO" ).append("\n"); 
		query.append("                          , MOVE.CNMV_CYC_NO" ).append("\n"); 
		query.append("                          , VB.DEST_TRNS_SVC_MOD_CD" ).append("\n"); 
		query.append("                          , VB.XTER_BKG_RQST_CD" ).append("\n"); 
		query.append("                          , VB.PRE_1_VVD" ).append("\n"); 
		query.append("                          , VB.PRE_1_POL_CD" ).append("\n"); 
		query.append("                          , VB.KEY_POL_CD" ).append("\n"); 
		query.append("                          , (  SELECT  NVL(CLM.CLM_SGHT_CD,' ')||','||NVL(CLM.ARR_LOC_NM,' ')||','||NVL(CLM.ARR_STE_CD,' ')||','||NVL(TO_CHAR(CLM.ARR_DT,'YYYY-MM-DD HH24:MI'),' ')||','||NVL(TO_CHAR(CLM.DEP_DT,'YYYY-MM-DD HH24:MI'),' ')" ).append("\n"); 
		query.append("                               FROM    SCE_CLM_IF CLM, SCE_CLM_SGHT SGHT" ).append("\n"); 
		query.append("                               WHERE   1 = 1" ).append("\n"); 
		query.append("                               AND CLM.CNTR_NO = MOVE.CNTR_NO" ).append("\n"); 
		query.append("                               AND CLM.CNMV_YR = MOVE.CNMV_YR" ).append("\n"); 
		query.append("                               AND CLM.CLM_CYC_NO = MOVE.CNMV_CYC_NO" ).append("\n"); 
		query.append("                               AND CLM.CNMV_ID_NO = MOVE.CNMV_ID_NO" ).append("\n"); 
		query.append("                               AND CLM.CLM_SGHT_CD = SGHT.CLM_SGHT_CD" ).append("\n"); 
		query.append("                               AND TO_CHAR(CLM.CLM_SEQ,'000')||TO_CHAR(CLM.ARR_DT,'YYYY-MM-DD HH24:MI:SS') = (  SELECT  MAX(TO_CHAR(CLM_SEQ,'000'))||TO_CHAR(MAX(Z.ARR_DT),'YYYY-MM-DD HH24:MI:SS')" ).append("\n"); 
		query.append("                                                                                                                FROM    SCE_CLM_IF Z" ).append("\n"); 
		query.append("                                                                                                                WHERE   Z.CNTR_NO = CLM.CNTR_NO" ).append("\n"); 
		query.append("                                                                                                                AND     Z.CNMV_YR = CLM.CNMV_YR" ).append("\n"); 
		query.append("                                                                                                                AND     Z.CLM_CYC_NO = CLM.CLM_CYC_NO" ).append("\n"); 
		query.append("                                                                                                             )" ).append("\n"); 
		query.append("                            ) CLM     " ).append("\n"); 
		query.append("                          , (SELECT NVL(EDI_322_STS_CD,' ')||','||NVL(NVL(EVNT_CTY_NM, NVL((SELECT YD_NM FROM MDM_YARD M WHERE M.YD_CD = EVNT_YD_CD), EVNT_YD_CD)),' ')||','||NVL(EVNT_STE_CD,' ')||','||NVL(TO_CHAR(EVNT_DT,'YYYY-MM-DD HH24:MI'),' ')||','||' '" ).append("\n"); 
		query.append("                               FROM EDI_322_MSG EDI" ).append("\n"); 
		query.append("                               WHERE EDI.EQ_NO = MOVE.CNTR_NO" ).append("\n"); 
		query.append("                               AND NVL(EDI.BKG_EDI_322_NO, EDI.BL_EDI_322_NO) = MOVE.BKG_NO" ).append("\n"); 
		query.append("                               AND EVNT_DT = (SELECT MAX(EVNT_DT)" ).append("\n"); 
		query.append("                                              FROM EDI_322_MSG Z" ).append("\n"); 
		query.append("                                              WHERE Z.EQ_NO = EDI.EQ_NO)" ).append("\n"); 
		query.append("                               AND ROWNUM = 1" ).append("\n"); 
		query.append("                            ) EDI_322" ).append("\n"); 
		query.append("                          , DECODE(VB.VSL_PRE_PST_CD,'T','TRUNK','U','POST','S','PRE') VSL_PRE_PST_CD" ).append("\n"); 
		query.append("                          , (  SELECT  K.SPCL_CGO_APRO_CD " ).append("\n"); 
		query.append("                               FROM    BKG_DG_CGO K " ).append("\n"); 
		query.append("                               WHERE   K.BKG_NO = B.BKG_NO" ).append("\n"); 
		query.append("                               AND     K.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                               AND     K.DCGO_SEQ = (  SELECT MAX(G.DCGO_SEQ) FROM BKG_DG_CGO G WHERE G.BKG_NO = B.BKG_NO AND G.CNTR_NO = B.CNTR_NO  )" ).append("\n"); 
		query.append("                            )  AS DG_STS" ).append("\n"); 
		query.append("                          , BKG_JOIN_FNC(CURSOR(  SELECT IMDG_UN_NO FROM BKG_DG_CGO WHERE BKG_NO = VB.BKG_NO AND   CNTR_NO =B.CNTR_NO  )) DG" ).append("\n"); 
		query.append("                          , (  SELECT  J.SPCL_CGO_APRO_CD " ).append("\n"); 
		query.append("                               FROM    BKG_RF_CGO J " ).append("\n"); 
		query.append("                               WHERE   J.BKG_NO = VB.BKG_NO" ).append("\n"); 
		query.append("                               AND     J.RC_SEQ = (  SELECT MAX(S.RC_SEQ) FROM BKG_RF_CGO S WHERE S.BKG_NO = B.BKG_NO AND S.CNTR_NO = B.CNTR_NO  )" ).append("\n"); 
		query.append("                            ) AS RF_STS" ).append("\n"); 
		query.append("                          , BKG_JOIN_FNC(CURSOR(  SELECT CDO_TEMP FROM BKG_RF_CGO WHERE BKG_NO = VB.BKG_NO AND CNTR_NO =B.CNTR_NO  ))  RF" ).append("\n"); 
		query.append("                          , (  SELECT  Y.SPCL_CGO_APRO_CD" ).append("\n"); 
		query.append("                               FROM    BKG_AWK_CGO Y" ).append("\n"); 
		query.append("                               WHERE   Y.BKG_NO = VB.BKG_NO" ).append("\n"); 
		query.append("                               AND     Y.AWK_CGO_SEQ = (  SELECT MAX(Q.AWK_CGO_SEQ) FROM BKG_AWK_CGO Q WHERE Q.BKG_NO = B.BKG_NO AND Q.CNTR_NO = B.CNTR_NO  )" ).append("\n"); 
		query.append("                            ) AS AK_STS" ).append("\n"); 
		query.append("                          , BKG_JOIN_FNC(CURSOR(  SELECT  OVR_FWRD_LEN||'/' ||OVR_BKWD_LEN||'/' ||OVR_HGT ||'/' || OVR_LF_LEN ||'/' || OVR_RT_LEN" ).append("\n"); 
		query.append("                                                  FROM    BKG_AWK_CGO" ).append("\n"); 
		query.append("                                                  WHERE   BKG_NO = VB.BKG_NO" ).append("\n"); 
		query.append("                                                  AND     CNTR_NO = B.CNTR_NO)" ).append("\n"); 
		query.append("                            )   AK" ).append("\n"); 
		query.append("                          , 'VVD : ' || V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD || '   POL : ' || VB.KEY_POL_CD" ).append("\n"); 
		query.append("                           	|| '    CCT : ' || TO_CHAR((PRD_COMMON_PKG.PRD_GET_CCT_BY_BKG_INFO_FNC(V.VSL_CD, V.SKD_VOY_NO, V.SKD_DIR_CD, V.VPS_PORT_CD, V.CLPT_IND_SEQ, V.YD_CD, BK.DCGO_FLG||BK.RC_FLG||BK.AWK_CGO_FLG||BK.BB_CGO_FLG||NVL((SELECT 'Y' FROM BKG_QTY_DTL QD WHERE QD.BKG_NO = BK.BKG_NO AND QD.DRY_CGO_FLG = 'Y' AND ROWNUM = 1), 'N'))),  'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("                           	|| '   ETD : ' || TO_CHAR(V.VPS_ETD_DT,  'YYYY-MM-DD HH24:MI')  SUBGROUP_TITLE" ).append("\n"); 
		query.append("                          , '' VVD_CD" ).append("\n"); 
		query.append("                          , '' OFC_INC_SUB" ).append("\n"); 
		query.append("                          , '' CUST_TP_CD" ).append("\n"); 
		query.append("                          , '' CUST_CNT_CD" ).append("\n"); 
		query.append("                          , '' CUST_SEQ" ).append("\n"); 
		query.append("                          , '' CHK_LT_TYPE" ).append("\n"); 
		query.append("                          , '' CHK_INC_CLM" ).append("\n"); 
		query.append("                          , '' BKG_DT_FR" ).append("\n"); 
		query.append("                          , '' BKG_DT_TO" ).append("\n"); 
		query.append("                          , '' BKG_OFC_CD" ).append("\n"); 
		query.append("                          , (  SELECT  COP_NO" ).append("\n"); 
		query.append("                               FROM    SCE_COP_HDR K" ).append("\n"); 
		query.append("                               WHERE   K.BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                               AND     K.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                               AND     K.POD_NOD_CD = BK.POD_NOD_CD" ).append("\n"); 
		query.append("                               AND     K.DEL_NOD_CD = BK.DEL_NOD_CD " ).append("\n"); 
		query.append("                               AND     K.COP_STS_CD <> 'X'" ).append("\n"); 
		query.append("                            ) AS COP_NO  " ).append("\n"); 
		query.append("                          , (  SELECT  TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD||SUBSTR(DECODE(SUBSTR(ORG_YD_CD,1,5),'CNHKG','HKGCN',SUBSTR(ORG_YD_CD,1,5)),1,2)" ).append("\n"); 
		query.append("                               FROM    CTM_MOVEMENT" ).append("\n"); 
		query.append("                               WHERE   CNTR_NO = B.CNTR_NO " ).append("\n"); 
		query.append("                               AND     BKG_NO =BK.BKG_NO " ).append("\n"); 
		query.append("                               AND     NVL(TRNK_VSL_CD,'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                               AND     CNMV_EVNT_DT = (  SELECT  MAX(CNMV_EVNT_DT) " ).append("\n"); 
		query.append("                                                         FROM    CTM_MOVEMENT " ).append("\n"); 
		query.append("                                                         WHERE   CNTR_NO = B.CNTR_NO " ).append("\n"); 
		query.append("                                                         AND     BKG_NO =BK.BKG_NO " ).append("\n"); 
		query.append("                                                         AND     MVMT_STS_CD = 'OC'" ).append("\n"); 
		query.append("                                                      )" ).append("\n"); 
		query.append("                               AND     MVMT_STS_CD ='OC'                      " ).append("\n"); 
		query.append("                               AND     ROWNUM = 1  " ).append("\n"); 
		query.append("                            ) CRN_VVD_CNT" ).append("\n"); 
		query.append("                          , (  SELECT  TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD||SUBSTR(DECODE(SUBSTR(CTM.ORG_YD_CD, 1, 5), 'CNHKG', 'HKGCN', SUBSTR(CTM.ORG_YD_CD, 1, 5)), 1, 2)" ).append("\n"); 
		query.append("                               FROM    CTM_MOVEMENT CTM" ).append("\n"); 
		query.append("                                     , BKG_BOOKING BB" ).append("\n"); 
		query.append("                                     , BKG_CONTAINER BC" ).append("\n"); 
		query.append("                               WHERE   CTM.BKG_NO = BB.BKG_NO" ).append("\n"); 
		query.append("                               AND     CTM.BKG_NO = BC.BKG_NO" ).append("\n"); 
		query.append("                               AND     CTM.CNTR_NO = BC.CNTR_NO" ).append("\n"); 
		query.append("                               AND     CTM.BKG_NO <> BK.BKG_NO" ).append("\n"); 
		query.append("                               AND     CTM.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                               AND     CTM.BKG_CGO_TP_CD ='F'" ).append("\n"); 
		query.append("                               AND     NVL(CTM.TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                               AND     CTM.CNMV_CYC_NO = (  SELECT  MAX(CNMV_CYC_NO) - 1" ).append("\n"); 
		query.append("                                                            FROM    CTM_MOVEMENT" ).append("\n"); 
		query.append("                                                            WHERE   CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                                                            AND     BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                                                            AND     MVMT_STS_CD = 'OC'" ).append("\n"); 
		query.append("                                                            AND     NVL(TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                                                         )" ).append("\n"); 
		query.append("                               AND     CTM.CNMV_EVNT_DT < (  SELECT MAX(CNMV_EVNT_DT)" ).append("\n"); 
		query.append("                                                             FROM   CTM_MOVEMENT" ).append("\n"); 
		query.append("                                                             WHERE  CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                                                             AND    BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                                                             AND    MVMT_STS_CD ='OC'" ).append("\n"); 
		query.append("                                                             AND    NVL(TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                                                          )" ).append("\n"); 
		query.append("                               AND     CTM.CNMV_EVNT_DT >= ( SELECT MAX(CNMV_EVNT_DT) - 30" ).append("\n"); 
		query.append("                                                             FROM   CTM_MOVEMENT" ).append("\n"); 
		query.append("                                                             WHERE  CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                                                             AND    BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                                                             AND    MVMT_STS_CD ='OC'" ).append("\n"); 
		query.append("                                                             AND    NVL(TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                                                          )" ).append("\n"); 
		query.append("                               AND     CTM.MVMT_STS_CD IN ('OC','OP')" ).append("\n"); 
		query.append("                               AND     BB.BKG_STS_CD <> 'X'" ).append("\n"); 
		query.append("                               AND     ROWNUM = 1" ).append("\n"); 
		query.append("                            ) PRE_VVD_CNT" ).append("\n"); 
		query.append("                   FROM     BKG_WORK_V VB" ).append("\n"); 
		query.append("                          , BKG_QUANTITY A" ).append("\n"); 
		query.append("                          , VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                          , BKG_CONTAINER B" ).append("\n"); 
		query.append("                          , BKG_BOOKING BK" ).append("\n"); 
		query.append("                          , CTM_MOVEMENT MOVE" ).append("\n"); 
		query.append("                          , BKG_VVD_DATE BVD" ).append("\n"); 
		query.append("                   WHERE    VB.BKG_NO = B.BKG_NO" ).append("\n"); 
		query.append("                   AND      V.VSL_CD(+) = VB.KEY_VSL_CD" ).append("\n"); 
		query.append("                   AND      V.SKD_VOY_NO(+) = VB.KEY_SKD_VOY_NO" ).append("\n"); 
		query.append("                   AND      V.SKD_DIR_CD(+) = VB.KEY_SKD_DIR_CD" ).append("\n"); 
		query.append("--                   AND      ( DECODE(VB.PRE_1_POL_CD,NULL,VB.TRUNK_POL,VB.PRE_1_POL_CD) = V.VPS_PORT_CD(+) )" ).append("\n"); 
		query.append("                   AND      V.VPS_PORT_CD(+) = VB.KEY_POL_CD" ).append("\n"); 
		query.append("                   AND      NVL(V.CLPT_IND_SEQ,BVD.POL_CLPT_IND_SEQ) = BVD.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   AND      VB.BKG_NO       = BK.BKG_NO" ).append("\n"); 
		query.append("                   AND      B.CNTR_NO = MOVE.CNTR_NO(+)" ).append("\n"); 
		query.append("                   AND      B.CNMV_YR = MOVE.CNMV_YR(+)" ).append("\n"); 
		query.append("                   AND      B.CNMV_ID_NO = MOVE.CNMV_ID_NO(+)" ).append("\n"); 
		query.append("                   AND      A.BKG_NO(+)       = B.BKG_NO" ).append("\n"); 
		query.append("                   AND      A.CNTR_TPSZ_CD(+) = B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                              AND      BVD.CNTR_QTY_DIF = 'Y'" ).append("\n"); 
		query.append("                   AND      (VB.BKG_STS_CD = 'F' OR VB.BKG_STS_CD = 'W' OR Vb.BKG_STS_CD = 'A')" ).append("\n"); 
		query.append("                   AND      VB.BKG_NO = BVD.BKG_NO(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${vvd_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.KEY_VSL_CD = SUBSTR(@[vvd_cd],1,4)" ).append("\n"); 
		query.append("                   AND      VB.KEY_SKD_VOY_NO = SUBSTR(@[vvd_cd],5,4)" ).append("\n"); 
		query.append("                   AND      VB.KEY_SKD_DIR_CD = SUBSTR(@[vvd_cd],9,1)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${trd_cd} != '')" ).append("\n"); 
		query.append("                   AND     BVD.TRD_CD = @[trd_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${sub_trd_cd} != '') " ).append("\n"); 
		query.append("                   AND     BVD.SUB_TRD_CD = @[sub_trd_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${rlane_cd} != '') " ).append("\n"); 
		query.append("                   AND     BVD.RLANE_CD = @[rlane_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${ofc_inc_sub} == 'Y') " ).append("\n"); 
		query.append("                   AND      VB.BKG_OFC_CD IN (" ).append("\n"); 
		query.append("                                                SELECT  OFC_CD  " ).append("\n"); 
		query.append("                                                FROM    MDM_ORGANIZATION MO" ).append("\n"); 
		query.append("                                                START WITH MO.OFC_CD = NVL(@[bkg_ofc_cd],VB.BKG_OFC_CD)" ).append("\n"); 
		query.append("                                                CONNECT BY PRIOR MO.OFC_CD = MO.PRNT_OFC_CD" ).append("\n"); 
		query.append("                                             )" ).append("\n"); 
		query.append("#else " ).append("\n"); 
		query.append("       #if (${bkg_ofc_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_OFC_CD = @[bkg_ofc_cd] " ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_dt_fr} != '' || ${bkg_dt_fr} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_CRE_DT BETWEEN TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD') AND TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("#elseif (${bkg_dt_fr} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_CRE_DT <= TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("#elseif (${bkg_dt_to} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_CRE_DT >= TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD')" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_no} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_NO = @[bkg_no]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pol_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.KEY_POL_CD  LIKE RTRIM(@[pol_cd]) || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${por_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.POR_CD LIKE RTRIM(@[por_cd]) || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${rcv_term_cd} != '') " ).append("\n"); 
		query.append("                   AND      B.RCV_TERM_CD = @[rcv_term_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${de_term_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.DE_TERM_CD = @[de_term_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${org_yd_cd} != '') " ).append("\n"); 
		query.append("                   AND      B.ORG_YD_CD LIKE  @[org_yd_cd] || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${chk_lt_type} == 'L') " ).append("\n"); 
		query.append("                   AND      VB.KEY_POL_CD = VB.POL_CD      --L/T Local  " ).append("\n"); 
		query.append("#elseif (${chk_lt_type} == 'T') " ).append("\n"); 
		query.append("                   AND      VB.KEY_POL_CD <> VB.POL_CD     --T/S" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${cntr_cfm_flg} != '') " ).append("\n"); 
		query.append("                   AND      B.CNTR_CFM_FLG = @[cntr_cfm_flg]  --Booking Container의 Tab의 Confirm 정보 " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_sts_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_STS_CD = @[bkg_sts_cd]  --예약 현황 " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${pre_1_vvd} != '') " ).append("\n"); 
		query.append("                   AND      VB.PRE_1_VVD LIKE @[pre_1_vvd] || '%' --pre_vvd" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${pre_1_pol_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.PRE_1_POL_CD = @[pre_1_pol_cd]            --pre_pol       " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${xter_bkg_rqst_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.XTER_BKG_RQST_CD = @[xter_bkg_rqst_cd]    --BKG Kind " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${cnmv_sts_cd} == 'Y') " ).append("\n"); 
		query.append("                   AND      B.CNMV_STS_CD = 'OC'     --O/C Status    Container Status가 OC인 항목 조회" ).append("\n"); 
		query.append("#elseif  (${cnmv_sts_cd} == 'N') " ).append("\n"); 
		query.append("                   AND      B.CNMV_STS_CD != 'OC'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_cgo_tp_cd} != '') " ).append("\n"); 
		query.append("                   AND      BK.BKG_CGO_TP_CD = @[bkg_cgo_tp_cd]   --화물 종류All, Full, Empty로 구분 (Cargo Type 코드 참고)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${dest_trns_svc_mod_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.DEST_TRNS_SVC_MOD_CD = @[dest_trns_svc_mod_cd]  --Service Mode" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("--------------------------------------------------------------------------" ).append("\n"); 
		query.append("--1.'SHPR'" ).append("\n"); 
		query.append("#if (${cust_tp_cd} == 'S') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd] " ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.SHIPPER LIKE @[cust_cnt_cd] || @[cust_seq] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.SHPR_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("--2.'CNEE'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'C') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.CONSIGNEE,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.CONSIGNEE LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.CONSIGNEE_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("--3.'NTFY'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'N') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.NTFY LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.NTFY_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("--4.'ANFY'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'A') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.ANTY LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.ANTY_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("--5.'FWDR'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'F')" ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.FFDR LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.FFDR_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("--6.'선택하지 않았을때..'" ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      ( SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd] OR " ).append("\n"); 
		query.append("                              SUBSTR(VB.CONSIGNEE,1,2)= @[cust_cnt_cd] OR" ).append("\n"); 
		query.append("                              SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd] OR" ).append("\n"); 
		query.append("                              SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd] OR " ).append("\n"); 
		query.append("                              SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      ( VB.SHIPPER = @[cust_cnt_cd] || @[cust_seq] OR    " ).append("\n"); 
		query.append("                              VB.CONSIGNEE = @[cust_cnt_cd] || @[cust_seq] OR" ).append("\n"); 
		query.append("                              VB.NTFY = @[cust_cnt_cd]|| @[cust_seq] OR" ).append("\n"); 
		query.append("                              VB.ANTY = @[cust_cnt_cd]|| @[cust_seq] OR " ).append("\n"); 
		query.append("                              VB.FFDR = @[cust_cnt_cd]|| @[cust_seq]" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      ( VB.SHPR_NAME = @[cust_nm] OR " ).append("\n"); 
		query.append("                              VB.CONSIGNEE_NAME = @[cust_nm] OR" ).append("\n"); 
		query.append("                              VB.NTFY_NAME = @[cust_nm] OR" ).append("\n"); 
		query.append("                              VB.ANTY_NAME = @[cust_nm] OR " ).append("\n"); 
		query.append("                              VB.FFDR_NAME = @[cust_nm]" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                           UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   SELECT   DISTINCT BVD.TRD_CD" ).append("\n"); 
		query.append("                          , BVD.SUB_TRD_CD" ).append("\n"); 
		query.append("                          , BVD.RLANE_CD" ).append("\n"); 
		query.append("                          , VB.TRUNK_VVD" ).append("\n"); 
		query.append("                         , VB.BKG_NO" ).append("\n"); 
		query.append("                          , RANK() OVER(PARTITION BY VB.TRUNK_VVD, VB.BKG_NO, VB.POL_CD, A.CNTR_TPSZ_CD ORDER BY B.CNTR_NO) BKG_RANK" ).append("\n"); 
		query.append("                          , VB.BKG_STS_CD" ).append("\n"); 
		query.append("                          , SUBSTR(TRANSLATE(NVL(VB.SHPR_NAME,' '),CHR(10),' '),1,20) CUST_NM" ).append("\n"); 
		query.append("                          , VB.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("                          , VB.POR_CD" ).append("\n"); 
		query.append("                          , VB.POD_CD" ).append("\n"); 
		query.append("                          , VB.POL_CD" ).append("\n"); 
		query.append("                          , VB.DEL_CD" ).append("\n"); 
		query.append("                          , A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                          , A.OP_CNTR_QTY" ).append("\n"); 
		query.append("                          , B.RCV_TERM_CD" ).append("\n"); 
		query.append("                          , B.DE_TERM_CD" ).append("\n"); 
		query.append("                          , B.CNTR_NO" ).append("\n"); 
		query.append("                          , B.CNTR_TPSZ_CD  CNTR_TPSZ_CD_MV" ).append("\n"); 
		query.append("                          , B.CNTR_VOL_QTY" ).append("\n"); 
		query.append("                          , B.EQ_SUBST_TPSZ_CD" ).append("\n"); 
		query.append("                          , B.ADV_SHTG_CD" ).append("\n"); 
		query.append("	                      , DECODE(BK.BKG_STS_CD,'X',''," ).append("\n"); 
		query.append("				                DECODE((SELECT COP.COP_STS_CD FROM SCE_COP_HDR COP WHERE COP.BKG_NO = B.BKG_NO AND COP.CNTR_NO = B.CNTR_NO AND COP.COP_STS_CD <> 'X'),'F','MT'," ).append("\n"); 
		query.append("					                (SELECT MST.CNMV_STS_CD FROM MST_CONTAINER MST WHERE MST.CNTR_NO = B.CNTR_NO))) CNMV_STS_CD" ).append("\n"); 
		query.append("                          , B.ORG_YD_CD" ).append("\n"); 
		query.append("                          , TO_CHAR(B.CNMV_EVNT_DT, 'YYYY-MM-DD HH24:MI') CNMV_EVNT_DT" ).append("\n"); 
		query.append("                          , BK.PORT_CLZ_DT AS VPS_CCT_DT" ).append("\n"); 
		query.append("                          , TO_CHAR(V.VPS_ETD_DT,  'YYYY-MM-DD HH24:MI') VPS_ETD_DT" ).append("\n"); 
		query.append("                          , VB.RCV_TERM_CD RCV_TERM_CD_MV" ).append("\n"); 
		query.append("                          , VB.DE_TERM_CD DE_TERM_CD_MV" ).append("\n"); 
		query.append("                          , TO_CHAR(VB.BKG_CRE_DT,'YYYY-MM-DD') BKG_CRE_DT" ).append("\n"); 
		query.append("                          , B.CNTR_PRT_FLG" ).append("\n"); 
		query.append("                          , B.CNTR_CFM_FLG" ).append("\n"); 
		query.append("                          , MOVE.CNMV_YR" ).append("\n"); 
		query.append("                          , MOVE.CNMV_ID_NO" ).append("\n"); 
		query.append("                          , MOVE.CNMV_CYC_NO" ).append("\n"); 
		query.append("                          , VB.DEST_TRNS_SVC_MOD_CD" ).append("\n"); 
		query.append("                          , VB.XTER_BKG_RQST_CD" ).append("\n"); 
		query.append("                          , VB.PRE_1_VVD" ).append("\n"); 
		query.append("                          , VB.PRE_1_POL_CD" ).append("\n"); 
		query.append("                          , VB.KEY_POL_CD" ).append("\n"); 
		query.append("                          , (  SELECT  NVL(CLM.CLM_SGHT_CD,' ')||','||NVL(CLM.ARR_LOC_NM,' ')||','||NVL(CLM.ARR_STE_CD,' ')||','||NVL(TO_CHAR(CLM.ARR_DT,'YYYY-MM-DD HH24:MI'),' ')||','||NVL(TO_CHAR(CLM.DEP_DT,'YYYY-MM-DD HH24:MI'),' ')" ).append("\n"); 
		query.append("                               FROM    SCE_CLM_IF CLM, SCE_CLM_SGHT SGHT" ).append("\n"); 
		query.append("                               WHERE   1 = 1" ).append("\n"); 
		query.append("                               AND CLM.CNTR_NO = MOVE.CNTR_NO" ).append("\n"); 
		query.append("                               AND CLM.CNMV_YR = MOVE.CNMV_YR" ).append("\n"); 
		query.append("                               AND CLM.CLM_CYC_NO = MOVE.CNMV_CYC_NO" ).append("\n"); 
		query.append("                               AND CLM.CNMV_ID_NO = MOVE.CNMV_ID_NO" ).append("\n"); 
		query.append("                               AND CLM.CLM_SGHT_CD = SGHT.CLM_SGHT_CD" ).append("\n"); 
		query.append("                               AND TO_CHAR(CLM.CLM_SEQ,'000')||TO_CHAR(CLM.ARR_DT,'YYYY-MM-DD HH24:MI:SS') = (  SELECT  MAX(TO_CHAR(CLM_SEQ,'000'))||TO_CHAR(MAX(Z.ARR_DT),'YYYY-MM-DD HH24:MI:SS')" ).append("\n"); 
		query.append("                                                                                                                FROM    SCE_CLM_IF Z" ).append("\n"); 
		query.append("                                                                                                                WHERE   Z.CNTR_NO = CLM.CNTR_NO" ).append("\n"); 
		query.append("                                                                                                                AND     Z.CNMV_YR = CLM.CNMV_YR" ).append("\n"); 
		query.append("                                                                                                                AND     Z.CLM_CYC_NO = CLM.CLM_CYC_NO" ).append("\n"); 
		query.append("                                                                                                             )" ).append("\n"); 
		query.append("                            ) CLM     " ).append("\n"); 
		query.append("                          , (SELECT NVL(EDI_322_STS_CD,' ')||','||NVL(NVL(EVNT_CTY_NM, NVL((SELECT YD_NM FROM MDM_YARD M WHERE M.YD_CD = EVNT_YD_CD), EVNT_YD_CD)),' ')||','||NVL(EVNT_STE_CD,' ')||','||NVL(TO_CHAR(EVNT_DT,'YYYY-MM-DD HH24:MI'),' ')||','||' '" ).append("\n"); 
		query.append("                               FROM EDI_322_MSG EDI" ).append("\n"); 
		query.append("                               WHERE EDI.EQ_NO = MOVE.CNTR_NO" ).append("\n"); 
		query.append("                               AND NVL(EDI.BKG_EDI_322_NO, EDI.BL_EDI_322_NO) = MOVE.BKG_NO" ).append("\n"); 
		query.append("                               AND EVNT_DT = (SELECT MAX(EVNT_DT)" ).append("\n"); 
		query.append("                                              FROM EDI_322_MSG Z" ).append("\n"); 
		query.append("                                              WHERE Z.EQ_NO = EDI.EQ_NO)" ).append("\n"); 
		query.append("                               AND ROWNUM = 1" ).append("\n"); 
		query.append("                            ) EDI_322" ).append("\n"); 
		query.append("                          , DECODE(VB.VSL_PRE_PST_CD,'T','TRUNK','U','POST','S','PRE') VSL_PRE_PST_CD" ).append("\n"); 
		query.append("                          , (  SELECT  K.SPCL_CGO_APRO_CD " ).append("\n"); 
		query.append("                               FROM    BKG_DG_CGO K " ).append("\n"); 
		query.append("                               WHERE   K.BKG_NO = B.BKG_NO" ).append("\n"); 
		query.append("                               AND     K.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                               AND     K.DCGO_SEQ = (  SELECT MAX(G.DCGO_SEQ) FROM BKG_DG_CGO G WHERE G.BKG_NO = B.BKG_NO AND G.CNTR_NO = B.CNTR_NO  )" ).append("\n"); 
		query.append("                            )  AS DG_STS" ).append("\n"); 
		query.append("                          , BKG_JOIN_FNC(CURSOR(  SELECT IMDG_UN_NO FROM BKG_DG_CGO WHERE BKG_NO = VB.BKG_NO AND   CNTR_NO =B.CNTR_NO  )) DG" ).append("\n"); 
		query.append("                          , (  SELECT  J.SPCL_CGO_APRO_CD " ).append("\n"); 
		query.append("                               FROM    BKG_RF_CGO J " ).append("\n"); 
		query.append("                               WHERE   J.BKG_NO = VB.BKG_NO" ).append("\n"); 
		query.append("                               AND     J.RC_SEQ = (  SELECT MAX(S.RC_SEQ) FROM BKG_RF_CGO S WHERE S.BKG_NO = B.BKG_NO AND S.CNTR_NO = B.CNTR_NO  )" ).append("\n"); 
		query.append("                            ) AS RF_STS" ).append("\n"); 
		query.append("                          , BKG_JOIN_FNC(CURSOR(  SELECT CDO_TEMP FROM BKG_RF_CGO WHERE BKG_NO = VB.BKG_NO AND CNTR_NO =B.CNTR_NO  ))  RF" ).append("\n"); 
		query.append("                          , (  SELECT  Y.SPCL_CGO_APRO_CD" ).append("\n"); 
		query.append("                               FROM    BKG_AWK_CGO Y" ).append("\n"); 
		query.append("                               WHERE   Y.BKG_NO = VB.BKG_NO" ).append("\n"); 
		query.append("                               AND     Y.AWK_CGO_SEQ = (  SELECT MAX(Q.AWK_CGO_SEQ) FROM BKG_AWK_CGO Q WHERE Q.BKG_NO = B.BKG_NO AND Q.CNTR_NO = B.CNTR_NO  )" ).append("\n"); 
		query.append("                            ) AS AK_STS" ).append("\n"); 
		query.append("                          , BKG_JOIN_FNC(CURSOR(  SELECT  OVR_FWRD_LEN||'/' ||OVR_BKWD_LEN||'/' ||OVR_HGT ||'/' || OVR_LF_LEN ||'/' || OVR_RT_LEN" ).append("\n"); 
		query.append("                                                  FROM    BKG_AWK_CGO" ).append("\n"); 
		query.append("                                                  WHERE   BKG_NO = VB.BKG_NO" ).append("\n"); 
		query.append("                                                  AND     CNTR_NO = B.CNTR_NO)" ).append("\n"); 
		query.append("                            )   AK" ).append("\n"); 
		query.append("                          , 'VVD : ' || V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD || '   POL : ' || VB.KEY_POL_CD" ).append("\n"); 
		query.append("                           	|| '    CCT : ' || TO_CHAR((PRD_COMMON_PKG.PRD_GET_CCT_BY_BKG_INFO_FNC(V.VSL_CD, V.SKD_VOY_NO, V.SKD_DIR_CD, V.VPS_PORT_CD, V.CLPT_IND_SEQ, V.YD_CD, BK.DCGO_FLG||BK.RC_FLG||BK.AWK_CGO_FLG||BK.BB_CGO_FLG||NVL((SELECT 'Y' FROM BKG_QTY_DTL QD WHERE QD.BKG_NO = BK.BKG_NO AND QD.DRY_CGO_FLG = 'Y' AND ROWNUM = 1), 'N'))),  'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("                           	|| '   ETD : ' || TO_CHAR(V.VPS_ETD_DT,  'YYYY-MM-DD HH24:MI')  SUBGROUP_TITLE" ).append("\n"); 
		query.append("                          , '' VVD_CD" ).append("\n"); 
		query.append("                          , '' OFC_INC_SUB" ).append("\n"); 
		query.append("                          , '' CUST_TP_CD" ).append("\n"); 
		query.append("                          , '' CUST_CNT_CD" ).append("\n"); 
		query.append("                          , '' CUST_SEQ" ).append("\n"); 
		query.append("                          , '' CHK_LT_TYPE" ).append("\n"); 
		query.append("                          , '' CHK_INC_CLM" ).append("\n"); 
		query.append("                          , '' BKG_DT_FR" ).append("\n"); 
		query.append("                          , '' BKG_DT_TO" ).append("\n"); 
		query.append("                          , '' BKG_OFC_CD" ).append("\n"); 
		query.append("                          , (  SELECT  COP_NO" ).append("\n"); 
		query.append("                               FROM    SCE_COP_HDR K" ).append("\n"); 
		query.append("                               WHERE   K.BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                               AND     K.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                               AND     K.POD_NOD_CD = BK.POD_NOD_CD" ).append("\n"); 
		query.append("                               AND     K.DEL_NOD_CD = BK.DEL_NOD_CD " ).append("\n"); 
		query.append("                               AND     K.COP_STS_CD <> 'X'" ).append("\n"); 
		query.append("                            ) AS COP_NO  " ).append("\n"); 
		query.append("                          , (  SELECT  TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD||SUBSTR(DECODE(SUBSTR(ORG_YD_CD,1,5),'CNHKG','HKGCN',SUBSTR(ORG_YD_CD,1,5)),1,2)" ).append("\n"); 
		query.append("                               FROM    CTM_MOVEMENT" ).append("\n"); 
		query.append("                               WHERE   CNTR_NO = B.CNTR_NO " ).append("\n"); 
		query.append("                               AND     BKG_NO =BK.BKG_NO " ).append("\n"); 
		query.append("                               AND     NVL(TRNK_VSL_CD,'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                               AND     CNMV_EVNT_DT = (  SELECT  MAX(CNMV_EVNT_DT) " ).append("\n"); 
		query.append("                                                         FROM    CTM_MOVEMENT " ).append("\n"); 
		query.append("                                                         WHERE   CNTR_NO = B.CNTR_NO " ).append("\n"); 
		query.append("                                                         AND     BKG_NO =BK.BKG_NO " ).append("\n"); 
		query.append("                                                         AND     MVMT_STS_CD = 'OC'" ).append("\n"); 
		query.append("                                                      )" ).append("\n"); 
		query.append("                               AND     MVMT_STS_CD ='OC'                      " ).append("\n"); 
		query.append("                               AND     ROWNUM = 1  " ).append("\n"); 
		query.append("                            ) CRN_VVD_CNT" ).append("\n"); 
		query.append("                          , (  SELECT  TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD||SUBSTR(DECODE(SUBSTR(CTM.ORG_YD_CD, 1, 5), 'CNHKG', 'HKGCN', SUBSTR(CTM.ORG_YD_CD, 1, 5)), 1, 2)" ).append("\n"); 
		query.append("                               FROM    CTM_MOVEMENT CTM" ).append("\n"); 
		query.append("                                     , BKG_BOOKING BB" ).append("\n"); 
		query.append("                                     , BKG_CONTAINER BC" ).append("\n"); 
		query.append("                               WHERE   CTM.BKG_NO = BB.BKG_NO" ).append("\n"); 
		query.append("                               AND     CTM.BKG_NO = BC.BKG_NO" ).append("\n"); 
		query.append("                               AND     CTM.CNTR_NO = BC.CNTR_NO" ).append("\n"); 
		query.append("                               AND     CTM.BKG_NO <> BK.BKG_NO" ).append("\n"); 
		query.append("                               AND     CTM.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                               AND     CTM.BKG_CGO_TP_CD ='F'" ).append("\n"); 
		query.append("                               AND     NVL(CTM.TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                               AND     CTM.CNMV_CYC_NO = (  SELECT  MAX(CNMV_CYC_NO) - 1" ).append("\n"); 
		query.append("                                                            FROM    CTM_MOVEMENT" ).append("\n"); 
		query.append("                                                            WHERE   CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                                                            AND     BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                                                            AND     MVMT_STS_CD = 'OC'" ).append("\n"); 
		query.append("                                                            AND     NVL(TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                                                         )" ).append("\n"); 
		query.append("                               AND     CTM.CNMV_EVNT_DT < (  SELECT MAX(CNMV_EVNT_DT)" ).append("\n"); 
		query.append("                                                             FROM   CTM_MOVEMENT" ).append("\n"); 
		query.append("                                                             WHERE  CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                                                             AND    BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                                                             AND    MVMT_STS_CD ='OC'" ).append("\n"); 
		query.append("                                                             AND    NVL(TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                                                          )" ).append("\n"); 
		query.append("                               AND     CTM.CNMV_EVNT_DT >= ( SELECT MAX(CNMV_EVNT_DT) - 30" ).append("\n"); 
		query.append("                                                             FROM   CTM_MOVEMENT" ).append("\n"); 
		query.append("                                                             WHERE  CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                                                             AND    BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                                                             AND    MVMT_STS_CD ='OC'" ).append("\n"); 
		query.append("                                                             AND    NVL(TRNK_VSL_CD, 'COXX') NOT IN('COXX','COZZ')" ).append("\n"); 
		query.append("                                                          )" ).append("\n"); 
		query.append("                               AND     CTM.MVMT_STS_CD IN ('OC','OP')" ).append("\n"); 
		query.append("                               AND     BB.BKG_STS_CD <> 'X'" ).append("\n"); 
		query.append("                               AND     ROWNUM = 1" ).append("\n"); 
		query.append("                            ) PRE_VVD_CNT" ).append("\n"); 
		query.append("                   FROM     BKG_WORK_V VB" ).append("\n"); 
		query.append("                          , BKG_QUANTITY A" ).append("\n"); 
		query.append("                          , VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                          , BKG_CONTAINER B" ).append("\n"); 
		query.append("                          , BKG_BOOKING BK" ).append("\n"); 
		query.append("                          , CTM_MOVEMENT MOVE" ).append("\n"); 
		query.append("                          , BKG_VVD_DATE BVD" ).append("\n"); 
		query.append("                   WHERE    VB.BKG_NO = A.BKG_NO" ).append("\n"); 
		query.append("                   AND      V.VSL_CD(+) = VB.KEY_VSL_CD" ).append("\n"); 
		query.append("                   AND      V.SKD_VOY_NO(+) = VB.KEY_SKD_VOY_NO" ).append("\n"); 
		query.append("                   AND      V.SKD_DIR_CD(+) = VB.KEY_SKD_DIR_CD" ).append("\n"); 
		query.append("--                   AND      ( DECODE(VB.PRE_1_POL_CD,NULL,VB.TRUNK_POL,VB.PRE_1_POL_CD) = V.VPS_PORT_CD(+) )" ).append("\n"); 
		query.append("                   AND      V.VPS_PORT_CD(+) = VB.KEY_POL_CD" ).append("\n"); 
		query.append("                   AND      NVL(V.CLPT_IND_SEQ,BVD.POL_CLPT_IND_SEQ) = BVD.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   AND      VB.BKG_NO       = BK.BKG_NO" ).append("\n"); 
		query.append("                   AND      B.CNTR_NO = MOVE.CNTR_NO(+)" ).append("\n"); 
		query.append("                   AND      B.CNMV_YR = MOVE.CNMV_YR(+)" ).append("\n"); 
		query.append("                   AND      B.CNMV_ID_NO = MOVE.CNMV_ID_NO(+)" ).append("\n"); 
		query.append("                   AND      A.BKG_NO       = B.BKG_NO(+)" ).append("\n"); 
		query.append("                   AND      A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("                   AND      A.CNTR_TPSZ_CD NOT IN ( SELECT DISTINCT NVL(BQ.CNTR_TPSZ_CD, NVL((SELECT CNTR_TPSZ_CD FROM BKG_QUANTITY WHERE BKG_NO = BC.BKG_NO AND CNTR_TPSZ_CD = SUBSTR(BC.CNTR_TPSZ_CD,1,1)||DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1),'4','5','4')),'  ')) CNTR_TPSZ_CD_BQ" ).append("\n"); 
		query.append("                                                  FROM BKG_QUANTITY BQ, BKG_CONTAINER BC" ).append("\n"); 
		query.append("                                                 WHERE BQ.BKG_NO (+) = BC.BKG_NO" ).append("\n"); 
		query.append("                                                   AND BQ.CNTR_TPSZ_CD (+) = BC.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                                   AND BC.BKG_NO = A.BKG_NO" ).append("\n"); 
		query.append("                                               )" ).append("\n"); 
		query.append("                              AND      BVD.CNTR_QTY_DIF = 'Y'" ).append("\n"); 
		query.append("                   AND      (VB.BKG_STS_CD = 'F' OR VB.BKG_STS_CD = 'W' OR Vb.BKG_STS_CD = 'A')" ).append("\n"); 
		query.append("                   AND      VB.BKG_NO = BVD.BKG_NO(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${vvd_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.KEY_VSL_CD = SUBSTR(@[vvd_cd],1,4)" ).append("\n"); 
		query.append("                   AND      VB.KEY_SKD_VOY_NO = SUBSTR(@[vvd_cd],5,4)" ).append("\n"); 
		query.append("                   AND      VB.KEY_SKD_DIR_CD = SUBSTR(@[vvd_cd],9,1)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${trd_cd} != '')" ).append("\n"); 
		query.append("                   AND     BVD.TRD_CD = @[trd_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${sub_trd_cd} != '') " ).append("\n"); 
		query.append("                   AND     BVD.SUB_TRD_CD = @[sub_trd_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${rlane_cd} != '') " ).append("\n"); 
		query.append("                   AND     BVD.RLANE_CD = @[rlane_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${ofc_inc_sub} == 'Y') " ).append("\n"); 
		query.append("                   AND      VB.BKG_OFC_CD IN (" ).append("\n"); 
		query.append("                                                SELECT  OFC_CD  " ).append("\n"); 
		query.append("                                                FROM    MDM_ORGANIZATION MO" ).append("\n"); 
		query.append("                                                START WITH MO.OFC_CD = NVL(@[bkg_ofc_cd],VB.BKG_OFC_CD)" ).append("\n"); 
		query.append("                                                CONNECT BY PRIOR MO.OFC_CD = MO.PRNT_OFC_CD" ).append("\n"); 
		query.append("                                             )" ).append("\n"); 
		query.append("#else " ).append("\n"); 
		query.append("       #if (${bkg_ofc_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_OFC_CD = @[bkg_ofc_cd] " ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_dt_fr} != '' || ${bkg_dt_fr} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_CRE_DT BETWEEN TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD') AND TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("#elseif (${bkg_dt_fr} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_CRE_DT <= TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("#elseif (${bkg_dt_to} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_CRE_DT >= TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD')" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_no} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_NO = @[bkg_no]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pol_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.KEY_POL_CD  LIKE RTRIM(@[pol_cd]) || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${por_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.POR_CD LIKE RTRIM(@[por_cd]) || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${rcv_term_cd} != '') " ).append("\n"); 
		query.append("                   AND      B.RCV_TERM_CD = @[rcv_term_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${de_term_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.DE_TERM_CD = @[de_term_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${org_yd_cd} != '') " ).append("\n"); 
		query.append("                   AND      B.ORG_YD_CD LIKE  @[org_yd_cd] || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${chk_lt_type} == 'L') " ).append("\n"); 
		query.append("                   AND      VB.KEY_POL_CD = VB.POL_CD      --L/T Local  " ).append("\n"); 
		query.append("#elseif (${chk_lt_type} == 'T') " ).append("\n"); 
		query.append("                   AND      VB.KEY_POL_CD <> VB.POL_CD     --T/S" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${cntr_cfm_flg} != '') " ).append("\n"); 
		query.append("                   AND      B.CNTR_CFM_FLG = @[cntr_cfm_flg]  --Booking Container의 Tab의 Confirm 정보 " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_sts_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.BKG_STS_CD = @[bkg_sts_cd]  --예약 현황 " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${pre_1_vvd} != '') " ).append("\n"); 
		query.append("                   AND      VB.PRE_1_VVD LIKE @[pre_1_vvd] || '%' --pre_vvd" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${pre_1_pol_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.PRE_1_POL_CD = @[pre_1_pol_cd]            --pre_pol       " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${xter_bkg_rqst_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.XTER_BKG_RQST_CD = @[xter_bkg_rqst_cd]    --BKG Kind " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${cnmv_sts_cd} == 'Y') " ).append("\n"); 
		query.append("                   AND      B.CNMV_STS_CD = 'OC'     --O/C Status    Container Status가 OC인 항목 조회" ).append("\n"); 
		query.append("#elseif  (${cnmv_sts_cd} == 'N') " ).append("\n"); 
		query.append("                   AND      B.CNMV_STS_CD != 'OC'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bkg_cgo_tp_cd} != '') " ).append("\n"); 
		query.append("                   AND      BK.BKG_CGO_TP_CD = @[bkg_cgo_tp_cd]   --화물 종류All, Full, Empty로 구분 (Cargo Type 코드 참고)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${dest_trns_svc_mod_cd} != '') " ).append("\n"); 
		query.append("                   AND      VB.DEST_TRNS_SVC_MOD_CD = @[dest_trns_svc_mod_cd]  --Service Mode" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("--------------------------------------------------------------------------" ).append("\n"); 
		query.append("--1.'SHPR'" ).append("\n"); 
		query.append("#if (${cust_tp_cd} == 'S') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd] " ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.SHIPPER LIKE @[cust_cnt_cd] || @[cust_seq] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.SHPR_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("--2.'CNEE'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'C') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.CONSIGNEE,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.CONSIGNEE LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.CONSIGNEE_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("--3.'NTFY'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'N') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.NTFY LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.NTFY_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("--4.'ANFY'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'A') " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.ANTY LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.ANTY_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("--5.'FWDR'" ).append("\n"); 
		query.append("#elseif (${cust_tp_cd} == 'F')" ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      VB.FFDR LIKE @[cust_cnt_cd] || @[cust_seq]" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      VB.FFDR_NAME LIKE   @[cust_nm] || '%'" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("--6.'선택하지 않았을때..'" ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} == '') " ).append("\n"); 
		query.append("                   AND      ( SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd] OR " ).append("\n"); 
		query.append("                              SUBSTR(VB.CONSIGNEE,1,2)= @[cust_cnt_cd] OR" ).append("\n"); 
		query.append("                              SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd] OR" ).append("\n"); 
		query.append("                              SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd] OR " ).append("\n"); 
		query.append("                              SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("       #end " ).append("\n"); 
		query.append("       #if (${cust_cnt_cd} != '' && ${cust_seq} != '') " ).append("\n"); 
		query.append("                   AND      ( VB.SHIPPER = @[cust_cnt_cd] || @[cust_seq] OR    " ).append("\n"); 
		query.append("                              VB.CONSIGNEE = @[cust_cnt_cd] || @[cust_seq] OR" ).append("\n"); 
		query.append("                              VB.NTFY = @[cust_cnt_cd]|| @[cust_seq] OR" ).append("\n"); 
		query.append("                              VB.ANTY = @[cust_cnt_cd]|| @[cust_seq] OR " ).append("\n"); 
		query.append("                              VB.FFDR = @[cust_cnt_cd]|| @[cust_seq]" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("       #if (${cust_nm} != '') " ).append("\n"); 
		query.append("                   AND      ( VB.SHPR_NAME = @[cust_nm] OR " ).append("\n"); 
		query.append("                              VB.CONSIGNEE_NAME = @[cust_nm] OR" ).append("\n"); 
		query.append("                              VB.NTFY_NAME = @[cust_nm] OR" ).append("\n"); 
		query.append("                              VB.ANTY_NAME = @[cust_nm] OR " ).append("\n"); 
		query.append("                              VB.FFDR_NAME = @[cust_nm]" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                           ) A" ).append("\n"); 
		query.append("                           ORDER BY TRUNK_VVD , KEY_POL_CD , BKG_NO , CNTR_TPSZ_CD , CNTR_NO" ).append("\n"); 
		query.append("                ) T " ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("WHERE   1 = 1" ).append("\n"); 
		query.append("#if (${chk_dup_vvd} != '') " ).append("\n"); 
		query.append("AND     CNTR_CHECK = @[chk_dup_vvd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("--------------------------------------------------------------------------" ).append("\n"); 
		query.append("ORDER BY SUBGROUP_TITLE, BKG_NO, CNTR_NO" ).append("\n"); 

	}
}