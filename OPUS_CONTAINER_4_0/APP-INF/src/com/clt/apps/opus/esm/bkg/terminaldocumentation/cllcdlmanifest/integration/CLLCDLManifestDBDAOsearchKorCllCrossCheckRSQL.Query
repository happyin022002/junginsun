<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CLLCDLManifestDBDAOsearchKorCllCrossCheckRSQL">
			<desc><![CDATA[EDI 로 전송된 CLL 상의 Booking 데이터와 B/L Data Input Cross-Check 상의 Booking 데이터를 대조하여 Un-match된  항목을 보여 주는 기능]]></desc>
			<sql><![CDATA[
SELECT
#if (${data_cross_check} == 'm')
 DECODE(A.POD_M || A.CNTRNO_M,'MM',A.BL,'') AS BL
,DECODE(A.POD_M || A.CNTRNO_M,'MM',A.POD_CLL,'') AS POD_CLL
,DECODE(A.POD_M || A.CNTRNO_M,'MM',A.POD_BL,'') AS POD_BL
,DECODE(A.POD_M || A.CNTRNO_M,'MM',A.POD_M,'') AS POD_M
,DECODE(A.POD_M || A.CNTRNO_M,'MM',A.CNTRNO_CLL,'') AS CNTRNO_CLL
,DECODE(A.POD_M || A.CNTRNO_M,'MM',A.CNTRNO_BL,'') AS CNTRNO_BL
,DECODE(A.POD_M || A.CNTRNO_M,'MM',A.CNTRNO_M,'') AS CNTRNO_M
,A.A_POL_CD1 ,
A.A_POL_CD2 ,
A.B_POL_CD1 ,
A.B_POL_CD2 ,
A.TOTAL_CNT ,
A.MATCH_CNT ,
A.UNMATCH_CNT
#elseif(${data_cross_check} == 'u')
 DECODE(A.POD_M || A.CNTRNO_M,'MM','',A.BL) AS BL
,DECODE(A.POD_M || A.CNTRNO_M,'MM','',A.POD_CLL) AS POD_CLL
,DECODE(A.POD_M || A.CNTRNO_M,'MM','',A.POD_BL) AS POD_BL
,DECODE(A.POD_M || A.CNTRNO_M,'MM','',A.POD_M) AS POD_M
,DECODE(A.POD_M || A.CNTRNO_M,'MM','',A.CNTRNO_CLL) AS CNTRNO_CLL
,DECODE(A.POD_M || A.CNTRNO_M,'MM','',A.CNTRNO_BL) AS CNTRNO_BL
,DECODE(A.POD_M || A.CNTRNO_M,'MM','',A.CNTRNO_M) AS CNTRNO_M
,A.A_POL_CD1 ,
A.A_POL_CD2 ,
A.B_POL_CD1 ,
A.B_POL_CD2 ,
A.TOTAL_CNT ,
A.MATCH_CNT ,
A.UNMATCH_CNT
#else
 A.BL
,A.POD_CLL
,A.POD_BL
,A.POD_M
,A.CNTRNO_CLL
,A.CNTRNO_BL
,A.CNTRNO_M
,A.A_POL_CD1
,A.A_POL_CD2
,A.B_POL_CD1
,A.B_POL_CD2
,A.TOTAL_CNT
,A.MATCH_CNT
,A.UNMATCH_CNT
#end
FROM
(
    SELECT
     NVL(A.BKG_NO,B.BKG_NO) AS BL
	,A.POD_CD AS POD_CLL
    ,B.POD_CD AS POD_BL 
    ,DECODE(NVL((SELECT UN_LOC_CD FROM MDM_LOCATION WHERE LOC_CD =  A.POD_CD), A.POD_CD ),NVL((SELECT UN_LOC_CD FROM MDM_LOCATION WHERE LOC_CD =  B.POD_CD), B.POD_CD ),'M','U') AS POD_M
    ,A.CNTR_NO AS CNTRNO_CLL
    ,B.CNTR_NO AS CNTRNO_BL
    ,DECODE(A.CNTR_NO,B.CNTR_NO,'M','U') AS CNTRNO_M
    ,A_POL_CD1 
    ,A_POL_CD2
    ,B_POL_CD1
    ,B_POL_CD2
    ,COUNT(NVL(A.BKG_NO,B.BKG_NO)) OVER() AS TOTAL_CNT
    ,SUM(DECODE(DECODE(A.POD_CD,B.POD_CD,'M','U') || DECODE(A.CNTR_NO,B.CNTR_NO,'M','U'),'MM',1,0)) OVER() MATCH_CNT
    ,SUM(DECODE(DECODE(A.POD_CD,B.POD_CD,'M','U') || DECODE(A.CNTR_NO,B.CNTR_NO,'M','U'),'MM',0,1)) OVER() UNMATCH_CNT
    FROM
    (
    SELECT A.BKG_NO, A.CNTR_NO, 
           NVL((SELECT UN_LOC_CD FROM MDM_LOCATION WHERE  LOC_CD = A.POD_CD), A.POD_CD ) AS POD_CD, 
           A.POL_CD AS A_POL_CD1, NVL(C.POL_CD,'XXXXX') AS A_POL_CD2
    FROM BKG_CSTMS_TML_EDI_SND_lOG A, BKG_BOOKING C
    WHERE 1=1
  #if (${vvd} != '')
  AND A.VSL_CD = DECODE(LENGTH(@[vvd]),9,SUBSTR(@[vvd],1,4),'')
  AND A.SKD_VOY_NO = DECODE(LENGTH(@[vvd]),9,SUBSTR(@[vvd],5,4),'')
  AND A.SKD_DIR_CD = DECODE(LENGTH(@[vvd]),9,SUBSTR(@[vvd],9,1),'')
  #else
  AND A.VSL_CD = '1234'
  AND A.SKD_VOY_NO = '1234' 
  AND A.SKD_DIR_CD = '1'	
  #end	
  #if (${pol} != '')
  AND A.POL_CD = @[pol]
  #end	
  #if (${pod} != '')
  AND A.POD_CD = @[pod]
  #end	
    AND A.POL_CD = C.POL_CD(+)
    AND A.BKG_NO = C.BKG_NO(+)
	#if (${data_type} == 'local') 
	AND    A.POL_CD = C.POL_CD          			 -- local
	#elseif(${data_type} == 'ts') 
	AND    A.POL_CD <> NVL(C.POL_CD,'XXXXX')         -- TS
	#end
    GROUP BY A.BKG_NO, A.CNTR_NO, A.POD_CD, A.POL_CD, C.POL_CD
    ) A  FULL OUTER JOIN
    (
    SELECT A.BKG_NO, B.CNTR_NO, 
           NVL((SELECT UN_LOC_CD FROM MDM_LOCATION WHERE LOC_CD = A.POD_CD), A.POD_CD ) AS POD_CD,
           A.POL_CD AS B_POL_CD1, NVL(C.POL_CD,'XXXXX') AS B_POL_CD2
    FROM BKG_VVD A, BKG_CONTAINER B, BKG_BOOKING C
    WHERE 1=1
    AND A.BKG_NO = B.BKG_NO
  #if (${vvd} != '')
  AND A.VSL_CD = DECODE(LENGTH(@[vvd]),9,SUBSTR(@[vvd],1,4),'')
  AND A.SKD_VOY_NO = DECODE(LENGTH(@[vvd]),9,SUBSTR(@[vvd],5,4),'')
  AND A.SKD_DIR_CD = DECODE(LENGTH(@[vvd]),9,SUBSTR(@[vvd],9,1),'')
  #else
  AND A.VSL_CD = '1234'
  AND A.SKD_VOY_NO = '1234' 
  AND A.SKD_DIR_CD = '1'	
  #end	
  #if (${pol} != '')
  AND A.POL_CD = @[pol]
  #end	
  #if (${pod} != '')
  AND A.POD_CD = @[pod]
  #end	
    AND A.POL_CD = C.POL_CD(+)
    AND A.BKG_NO = C.BKG_NO(+)
	#if (${data_type} == 'local') 
	AND    A.POL_CD = C.POL_CD          			 -- local
	#elseif(${data_type} == 'ts') 
	AND    A.POL_CD <> NVL(C.POL_CD,'XXXXX')         -- TS
	#end
    GROUP BY A.BKG_NO, B.CNTR_NO, A.POD_CD, A.POL_CD, C.POL_CD
    ) B
    ON A.BKG_NO = B.BKG_NO
    AND A.CNTR_NO = B.CNTR_NO
) A			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="pol" type="12" value="" out="N"/>
				<param name="pod" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
