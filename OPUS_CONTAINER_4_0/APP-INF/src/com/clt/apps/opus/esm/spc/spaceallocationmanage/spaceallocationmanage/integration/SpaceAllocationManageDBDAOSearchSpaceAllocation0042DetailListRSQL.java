/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0042DetailListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.07.19
*@LastModifier : 
*@LastVersion : 1.0
* 2016.07.19 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.spc.spaceallocationmanage.spaceallocationmanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpaceAllocationManageDBDAOSearchSpaceAllocation0042DetailListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * SpaceAllocationManage의 데이타 모델에 해당되는 값을 불러온다.
	  * 
	  * 2015.07.22. SKY[CLT-000042051-10] Virtual add call - VT_ADD_CALL_FLG IS  NULL  로직 추가
	  * 2016.03.31 BKG 데이터 가져올때 YD_CD 로 메핑 
	  * 2016.04.08 SQL 튜닝 
	  * 2016.04.12 Double Calling 관련 로직 수정 : POL_IND_SEQ,POD_IND_SEQ 추가 
	  * 2016.05.12 SPC_GET_HC_RT_BSA_FNC : SKD_VOY_NO parm 추가
	  * 2016.06.03 EDIT 로직 수정 
	  * 2016.07.12 Skip 로직 추가
	  * 2016.07.19 #15529 AOC- JPN Issue cannot create BKG for T2 + Refeer
	  * </pre>
	  */
	public SpaceAllocationManageDBDAOSearchSpaceAllocation0042DetailListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("office",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fcast",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.spc.spaceallocationmanage.spaceallocationmanage.integration").append("\n"); 
		query.append("FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0042DetailListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH PARAMS AS (" ).append("\n"); 
		query.append("    SELECT /*+ MATERIALIZE */" ).append("\n"); 
		query.append("           @[year]              AS YEAR      ," ).append("\n"); 
		query.append("           @[week]              AS WEEK      ," ).append("\n"); 
		query.append("           o.ofc_cd             AS OFC_CD    ," ).append("\n"); 
		query.append("           @[lane]              AS RLANE_CD  ," ).append("\n"); 
		query.append("           @[bound]             AS DIR_CD    ," ).append("\n"); 
		query.append("           SUBSTR(@[vvd], 0, 4) AS VSL_CD    ," ).append("\n"); 
		query.append("           SUBSTR(@[vvd], 5, 4) AS SKD_VOY_NO," ).append("\n"); 
		query.append("           SUBSTR(@[vvd], 9)    AS SKD_DIR_CD," ).append("\n"); 
		query.append("           l.conti_cd           AS OFC_CONTI ," ).append("\n"); 
		query.append("           @[fcast]             AS STS" ).append("\n"); 
		query.append("      FROM MDM_LOCATION     L," ).append("\n"); 
		query.append("           MDM_ORGANIZATION O " ).append("\n"); 
		query.append("     WHERE L.LOC_CD = O.LOC_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       AND O.OFC_CD = @[office]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", REP_VVDS AS (" ).append("\n"); 
		query.append("    SELECT V.TRD_CD     AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           V.SUB_TRD_CD AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD," ).append("\n"); 
		query.append("           V.DIR_CD  ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON," ).append("\n"); 
		query.append("           V.COST_WK             ," ).append("\n"); 
		query.append("           V.VSL_CD              ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO          ," ).append("\n"); 
		query.append("           V.DIR_CD SKD_DIR_CD   ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           P.OFC_CD              ," ).append("\n"); 
		query.append("           P.OFC_CONTI           ," ).append("\n"); 
		query.append("           P.STS                 ," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("              SELECT NVL(MAX(CO.CTRL_LVL_CD), 'L')" ).append("\n"); 
		query.append("                FROM SPC_ALOC_CTRL_OPT CO" ).append("\n"); 
		query.append("               WHERE CO.RLANE_CD   = P.RLANE_CD" ).append("\n"); 
		query.append("                 AND CO.DIR_CD     = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND CO.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("                 AND CO.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND CO.SKD_DIR_CD = P.SKD_DIR_CD" ).append("\n"); 
		query.append("           ) AS CTRL_LVL" ).append("\n"); 
		query.append("      FROM COA_MON_VVD V," ).append("\n"); 
		query.append("           PARAMS      P" ).append("\n"); 
		query.append("     WHERE V.TRD_CD     = SAQ_GET_REP_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.SUB_TRD_CD = SAQ_GET_REP_SUB_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.RLANE_CD   = P.RLANE_CD" ).append("\n"); 
		query.append("       AND V.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("       AND V.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND V.DIR_CD     = P.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                                                                 FROM COA_MON_VVD N" ).append("\n"); 
		query.append("                                                                WHERE N.SLAN_CD    = SUBSTR(V.RLANE_CD, 1, 3)" ).append("\n"); 
		query.append("                                                                  AND N.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                                                                  AND N.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                  AND N.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("                                                                  AND N.DELT_FLG   = 'N'))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VSL_PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT V.REP_TRD_CD    ," ).append("\n"); 
		query.append("           V.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD      ," ).append("\n"); 
		query.append("           V.DIR_CD        ," ).append("\n"); 
		query.append("           V.COST_YR       ," ).append("\n"); 
		query.append("           V.COST_MON      ," ).append("\n"); 
		query.append("           V.COST_WK       ," ).append("\n"); 
		query.append("           V.VSL_CD        ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO    ," ).append("\n"); 
		query.append("           V.SKD_DIR_CD    ," ).append("\n"); 
		query.append("           NVL(VPS.YD_CD, VPS.VPS_PORT_CD) AS PORT_CD," ).append("\n"); 
		query.append("           VPS.CLPT_SEQ         AS PORT_SEQ," ).append("\n"); 
		query.append("           VPS.TURN_PORT_IND_CD AS PORT_IND," ).append("\n"); 
		query.append("           L.CONTI_CD           AS CONTI_CD," ).append("\n"); 
		query.append("           DECODE(SIGN(VPS.VPS_ETD_DT - GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS.VPS_PORT_CD)), -1, 'Y', 'N') AS PORT_PAST," ).append("\n"); 
		query.append("           VPS.VPS_ETA_DT AS ETA_DT," ).append("\n"); 
		query.append("           VPS.VPS_ETD_DT AS ETD_DT," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD      ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT  ," ).append("\n"); 
		query.append("           V.OFC_CD                ," ).append("\n"); 
		query.append("           V.OFC_CONTI             ," ).append("\n"); 
		query.append("           V.STS                   ," ).append("\n"); 
		query.append("           DECODE(VPS.SKD_CNG_STS_CD, 'S', 1, 0) AS SKIPPED," ).append("\n"); 
		query.append("           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS MAX_SEQ," ).append("\n"); 
		query.append("           MIN(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS MIN_SEQ," ).append("\n"); 
		query.append("           VPS.CLPT_IND_SEQ  AS CLPT_IND_SEQ," ).append("\n"); 
		query.append("           COUNT(*) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS PORT_CNT" ).append("\n"); 
		query.append("      FROM MDM_LOCATION     L  ," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD VPS," ).append("\n"); 
		query.append("           REP_VVDS         V" ).append("\n"); 
		query.append("     WHERE L.LOC_CD       = VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("       AND VPS.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND VPS.VT_ADD_CALL_FLG IS  NULL" ).append("\n"); 
		query.append("       AND NVL(VPS.SKD_CNG_STS_CD,1) <> 'S'" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_POL_POD AS (" ).append("\n"); 
		query.append("    SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POL_SEQ             ," ).append("\n"); 
		query.append("           PL_CLPT_IND_SEQ     ," ).append("\n"); 
		query.append("           POL_CONTI           ," ).append("\n"); 
		query.append("           POL_PAST            ," ).append("\n"); 
		query.append("           POL_ETA_DT          ," ).append("\n"); 
		query.append("           POL_ETD_DT          ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POD_SEQ             ," ).append("\n"); 
		query.append("           PD_CLPT_IND_SEQ     ," ).append("\n"); 
		query.append("           POD_CONTI           ," ).append("\n"); 
		query.append("           POD_PAST            ," ).append("\n"); 
		query.append("           POD_ETA_DT          ," ).append("\n"); 
		query.append("           POD_ETD_DT          ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           PAST                ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           STS                 ," ).append("\n"); 
		query.append("           POL_SKIP            ," ).append("\n"); 
		query.append("           POD_SKIP            ," ).append("\n"); 
		query.append("           LD_PORT             ," ).append("\n"); 
		query.append("           PL_PORT_CNT         ," ).append("\n"); 
		query.append("           PD_PORT_CNT         ," ).append("\n"); 
		query.append("           PL_PD_PORT_CNT" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("                     REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                     RLANE_CD            ," ).append("\n"); 
		query.append("                     DIR_CD              ," ).append("\n"); 
		query.append("                     TRD_CD              ," ).append("\n"); 
		query.append("                     SUB_TRD_CD          ," ).append("\n"); 
		query.append("                     COST_YR             ," ).append("\n"); 
		query.append("                     COST_MON            ," ).append("\n"); 
		query.append("                     COST_WK             ," ).append("\n"); 
		query.append("                     VSL_CD              ," ).append("\n"); 
		query.append("                     SKD_VOY_NO          ," ).append("\n"); 
		query.append("                     SKD_DIR_CD          ," ).append("\n"); 
		query.append("                     POL_CD              ," ).append("\n"); 
		query.append("                     POL_SEQ             ," ).append("\n"); 
		query.append("                     PL_CLPT_IND_SEQ     ," ).append("\n"); 
		query.append("                     POL_CONTI           ," ).append("\n"); 
		query.append("                     POL_PAST            ," ).append("\n"); 
		query.append("                     POL_ETA_DT          ," ).append("\n"); 
		query.append("                     POL_ETD_DT          ," ).append("\n"); 
		query.append("                     POD_CD              ," ).append("\n"); 
		query.append("                     POD_SEQ             ," ).append("\n"); 
		query.append("                     PD_CLPT_IND_SEQ     ," ).append("\n"); 
		query.append("                     POD_CONTI           ," ).append("\n"); 
		query.append("                     POD_PAST            ," ).append("\n"); 
		query.append("                     POD_ETA_DT          ," ).append("\n"); 
		query.append("                     POD_ETD_DT          ," ).append("\n"); 
		query.append("                     IOC_CD              ," ).append("\n"); 
		query.append("                     PAST                ," ).append("\n"); 
		query.append("                     LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     OFC_CD              ," ).append("\n"); 
		query.append("                     OFC_CONTI           ," ).append("\n"); 
		query.append("                     STS                 ," ).append("\n"); 
		query.append("                     POL_SKIP            ," ).append("\n"); 
		query.append("                     POD_SKIP            ," ).append("\n"); 
		query.append("                     LD_PORT             ," ).append("\n"); 
		query.append("                     PL_PORT_CNT         ," ).append("\n"); 
		query.append("                     PD_PORT_CNT         ," ).append("\n"); 
		query.append("                     PL_PD_PORT_CNT      , " ).append("\n"); 
		query.append("                     MAX(PL_PD_PORT_CNT) OVER (PARTITION BY POL_CD,POD_CD ORDER BY POL_CD,POD_CD) AS PL_PD_PORT_MAX" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                        SELECT PL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                               PL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                               PL.RLANE_CD      ," ).append("\n"); 
		query.append("                               PL.DIR_CD        ," ).append("\n"); 
		query.append("                               DRL.TRD_CD       ," ).append("\n"); 
		query.append("                               DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                               PL.COST_YR       ," ).append("\n"); 
		query.append("                               PL.COST_MON      ," ).append("\n"); 
		query.append("                               PL.COST_WK       ," ).append("\n"); 
		query.append("                               PL.VSL_CD        ," ).append("\n"); 
		query.append("                               PL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                               PL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                               PL.PORT_CD         AS POL_CD    ," ).append("\n"); 
		query.append("                               MAX(PL.PORT_SEQ)   AS POL_SEQ   ," ).append("\n"); 
		query.append("                               PL.CLPT_IND_SEQ    AS PL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                               PL.CONTI_CD        AS POL_CONTI ," ).append("\n"); 
		query.append("                               MIN(PL.PORT_PAST)  AS POL_PAST  ," ).append("\n"); 
		query.append("                               PL.ETA_DT          AS POL_ETA_DT," ).append("\n"); 
		query.append("                               PL.ETD_DT          AS POL_ETD_DT," ).append("\n"); 
		query.append("                               PD.PORT_CD         AS POD_CD    ," ).append("\n"); 
		query.append("                               --MIN(PD.PORT_SEQ) AS POD_SEQ   ," ).append("\n"); 
		query.append("                               (CASE" ).append("\n"); 
		query.append("                                     WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ)" ).append("\n"); 
		query.append("                                     ELSE CASE" ).append("\n"); 
		query.append("                                     	  	WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) THEN MAX(PD.MAX_SEQ)" ).append("\n"); 
		query.append("                                          END" ).append("\n"); 
		query.append("                                 END) AS POD_SEQ ," ).append("\n"); 
		query.append("                               PD.CLPT_IND_SEQ     AS PD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                               --MAX(PL.MAX_SEQ) ," ).append("\n"); 
		query.append("                               --MAX(PL.PORT_CNT)," ).append("\n"); 
		query.append("                               PD.CONTI_CD       AS POD_CONTI ," ).append("\n"); 
		query.append("                               MIN(PD.PORT_PAST) AS POD_PAST  ," ).append("\n"); 
		query.append("                               PD.ETA_DT         AS POD_ETA_DT," ).append("\n"); 
		query.append("                               PD.ETD_DT         AS POD_ETD_DT," ).append("\n"); 
		query.append("                               DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')            AS IOC_CD," ).append("\n"); 
		query.append("                               DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y') AS PAST  ," ).append("\n"); 
		query.append("                               PL.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                               PL.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                               PL.OFC_CD              ," ).append("\n"); 
		query.append("                               PL.OFC_CONTI           ," ).append("\n"); 
		query.append("                               PL.STS                 ," ).append("\n"); 
		query.append("                               PL.SKIPPED  AS POL_SKIP," ).append("\n"); 
		query.append("                               PD.SKIPPED  AS POD_SKIP," ).append("\n"); 
		query.append("                               SUBSTR(( SELECT MAX(LTRIM(TO_CHAR(S1.PORT_SEQ,'FM000'))|| S1.PORT_CD)" ).append("\n"); 
		query.append("                                          FROM VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                                         WHERE S1.SKIPPED <> 1), 4) AS LD_PORT," ).append("\n"); 
		query.append("                               PL.PORT_CNT AS PL_PORT_CNT," ).append("\n"); 
		query.append("                               PD.PORT_CNT AS PD_PORT_CNT," ).append("\n"); 
		query.append("                               ROW_NUMBER()OVER (PARTITION BY PL.PORT_CD,PD.PORT_CD ORDER BY PL.PORT_CD,PD.PORT_CD) AS PL_PD_PORT_CNT" ).append("\n"); 
		query.append("                          FROM MDM_DTL_REV_LANE DRL," ).append("\n"); 
		query.append("                               VSL_PORT_SKD     PD ," ).append("\n"); 
		query.append("                               VSL_PORT_SKD     PL" ).append("\n"); 
		query.append("                         WHERE DRL.RLANE_CD        = PL.RLANE_CD" ).append("\n"); 
		query.append("                           AND DRL.VSL_SLAN_DIR_CD = PL.DIR_CD" ).append("\n"); 
		query.append("                           AND DRL.FM_CONTI_CD     = PL.CONTI_CD" ).append("\n"); 
		query.append("                           AND DRL.TO_CONTI_CD     = PD.CONTI_CD" ).append("\n"); 
		query.append("                           AND PD.REP_TRD_CD       = PL.REP_TRD_CD" ).append("\n"); 
		query.append("                           AND PD.REP_SUB_TRD_CD   = PL.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                           AND PD.RLANE_CD         = PL.RLANE_CD" ).append("\n"); 
		query.append("                           AND PD.VSL_CD           = PL.VSL_CD " ).append("\n"); 
		query.append("                           AND PD.SKD_VOY_NO       = PL.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND PD.SKD_DIR_CD       = PL.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND PD.PORT_CD         <> PL.PORT_CD" ).append("\n"); 
		query.append("                           AND PD.PORT_SEQ         > PL.PORT_SEQ" ).append("\n"); 
		query.append("                           AND (    PL.PORT_SEQ = PL.MAX_SEQ  --  단독 CALLING 또는 DOUBLE CALLING 인데 마지막 PORT 경우는 모두" ).append("\n"); 
		query.append("                                 OR PD.PORT_SEQ < PL.MAX_SEQ ) -- DOUBLE CALLING PORT중 POD 가 LAST DOUBLE CALLING PORT 보다 앞인 경우만 FILTERING" ).append("\n"); 
		query.append("                      GROUP BY " ).append("\n"); 
		query.append("                               PL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                               PL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                               PL.RLANE_CD      ," ).append("\n"); 
		query.append("                               PL.DIR_CD        ," ).append("\n"); 
		query.append("                               DRL.TRD_CD       ," ).append("\n"); 
		query.append("                               DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                               PL.COST_YR       ," ).append("\n"); 
		query.append("                               PL.COST_MON      ," ).append("\n"); 
		query.append("                               PL.COST_WK       ," ).append("\n"); 
		query.append("                               PL.VSL_CD        ," ).append("\n"); 
		query.append("                               PL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                               PL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                               PL.PORT_CD       ," ).append("\n"); 
		query.append("                               PL.CONTI_CD      ," ).append("\n"); 
		query.append("                               PD.PORT_CD       ," ).append("\n"); 
		query.append("                               PD.CONTI_CD      ," ).append("\n"); 
		query.append("                               PL.SKIPPED       ," ).append("\n"); 
		query.append("                               PD.SKIPPED       ," ).append("\n"); 
		query.append("                               PL.ETA_DT        ," ).append("\n"); 
		query.append("                               PL.ETD_DT        ," ).append("\n"); 
		query.append("                               PD.ETA_DT        ," ).append("\n"); 
		query.append("                               PD.ETD_DT        ," ).append("\n"); 
		query.append("                               DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')           ," ).append("\n"); 
		query.append("                               DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y')," ).append("\n"); 
		query.append("                               PL.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                               PL.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                               PL.OFC_CD              ," ).append("\n"); 
		query.append("                               PL.OFC_CONTI           ," ).append("\n"); 
		query.append("                               PL.STS                 ," ).append("\n"); 
		query.append("                               PL.CLPT_IND_SEQ        ," ).append("\n"); 
		query.append("                               PD.CLPT_IND_SEQ        ," ).append("\n"); 
		query.append("                               PL.PORT_CNT            ," ).append("\n"); 
		query.append("                               PD.PORT_CNT" ).append("\n"); 
		query.append("                     )" ).append("\n"); 
		query.append("           ) A" ).append("\n"); 
		query.append("    -- WHERE A.PL_PD_PORT_CNT = PL_PD_PORT_MAX" ).append("\n"); 
		query.append("     --WHERE A.PD_PORT_CNT = '1'" ).append("\n"); 
		query.append("        --OR ( A.PD_PORT_CNT  = '2' AND PL_PD_PORT_CNT = '2' )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVDS AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT" ).append("\n"); 
		query.append("           REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           STS" ).append("\n"); 
		query.append("      FROM VVD_POL_POD VPP" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA AS (" ).append("\n"); 
		query.append("    --BOOKING" ).append("\n"); 
		query.append("    SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           BASE_RHQ_CD         ," ).append("\n"); 
		query.append("           SLS_OFC_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POL_SEQ             ," ).append("\n"); 
		query.append("           POD_SEQ             ," ).append("\n"); 
		query.append("           POL_CONTI           ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           POL_SKIP            ," ).append("\n"); 
		query.append("           POD_SKIP            ," ).append("\n"); 
		query.append("           PAST                ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           BKG_STS_CD          ," ).append("\n"); 
		query.append("           (BKG_TTL_QTY)       AS BKG_TTL_QTY    ," ).append("\n"); 
		query.append("           (BKG_20FT_QTY)      AS BKG_20FT_QTY   ," ).append("\n"); 
		query.append("           (BKG_40FT_QTY)      AS BKG_40FT_QTY   ," ).append("\n"); 
		query.append("           (BKG_40FT_HC_QTY)   AS BKG_40FT_HC_QTY," ).append("\n"); 
		query.append("           (BKG_45FT_HC_QTY)   AS BKG_45FT_HC_QTY," ).append("\n"); 
		query.append("           (BKG_53FT_QTY)      AS BKG_53FT_QTY   ," ).append("\n"); 
		query.append("           (BKG_RF_QTY)        AS BKG_RF_QTY     ," ).append("\n"); 
		query.append("           (BKG_TTL_WGT)       AS BKG_TTL_WGT" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("                     REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                     TRD_CD              ," ).append("\n"); 
		query.append("                     SUB_TRD_CD          ," ).append("\n"); 
		query.append("                     RLANE_CD      		 ," ).append("\n"); 
		query.append("                     SKD_DIR_CD    		 ," ).append("\n"); 
		query.append("                     VSL_CD        		 ," ).append("\n"); 
		query.append("                     BASE_RHQ_CD         ," ).append("\n"); 
		query.append("                     SLS_OFC_CD          ," ).append("\n"); 
		query.append("                     COST_YR             ," ).append("\n"); 
		query.append("                     COST_WK             ," ).append("\n"); 
		query.append("                     IOC_CD              ," ).append("\n"); 
		query.append("                     POL_CD              ," ).append("\n"); 
		query.append("                     POD_CD              ," ).append("\n"); 
		query.append("                     POL_SEQ             ," ).append("\n"); 
		query.append("                     POD_SEQ             ," ).append("\n"); 
		query.append("                     POL_CONTI           ," ).append("\n"); 
		query.append("                     OFC_CONTI           ," ).append("\n"); 
		query.append("                     POL_SKIP            ," ).append("\n"); 
		query.append("                     POD_SKIP            ," ).append("\n"); 
		query.append("                     PAST                ," ).append("\n"); 
		query.append("                     LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     BKG_STS_CD          ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY    ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_20FT_QTY   ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)) AS BKG_40FT_QTY   ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)) AS BKG_40FT_HC_QTY," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)) AS BKG_45FT_HC_QTY," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)) AS BKG_53FT_QTY   ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)) AS BKG_RF_QTY     ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0)) AS BKG_TTL_WGT" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                        SELECT /*+ ORDERED USE_NL(VPP BV B D) USE_HASH(O) */" ).append("\n"); 
		query.append("                               VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                               VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                               VPP.TRD_CD        ," ).append("\n"); 
		query.append("                               VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                               VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                               VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                               VPP.VSL_CD        ," ).append("\n"); 
		query.append("                               VPP.OFC_CD      AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                               B.OB_SLS_OFC_CD AS SLS_OFC_CD ," ).append("\n"); 
		query.append("                               VPP.COST_YR       ," ).append("\n"); 
		query.append("                               VPP.COST_WK       ," ).append("\n"); 
		query.append("                               DECODE(BV.VSL_PRE_PST_CD, 'T', VPP.IOC_CD, 'T') AS IOC_CD     ," ).append("\n"); 
		query.append("                               VPP.POL_CD              ," ).append("\n"); 
		query.append("                               VPP.POD_CD              ," ).append("\n"); 
		query.append("                               VPP.POL_SEQ             ," ).append("\n"); 
		query.append("                               VPP.POD_SEQ             ," ).append("\n"); 
		query.append("                               VPP.POL_CONTI           ," ).append("\n"); 
		query.append("                               VPP.OFC_CONTI           ," ).append("\n"); 
		query.append("                               VPP.POL_SKIP            ," ).append("\n"); 
		query.append("                               VPP.POD_SKIP            ," ).append("\n"); 
		query.append("                               VPP.PAST                ," ).append("\n"); 
		query.append("                               VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                               VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                               B.BKG_STS_CD            ," ).append("\n"); 
		query.append("                               (" ).append("\n"); 
		query.append("                                  SELECT" ).append("\n"); 
		query.append("                                            TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, '5', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D5'), '7', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D7'), 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0) + DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'T', Q.RC_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR((D.ACT_WGT * DECODE(D.WGT_UT_CD, 'LBS', 0.00045, 0.001))" ).append("\n"); 
		query.append("                                                                 + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                           FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                          WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                                    FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                   WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("                                     AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                               ) AS VAL" ).append("\n"); 
		query.append("                         FROM  VVD_POL_POD VPP," ).append("\n"); 
		query.append("                               BKG_VVD     BV ," ).append("\n"); 
		query.append("                               BKG_BOOKING B  ," ).append("\n"); 
		query.append("                               SPC_OFC_LVL O  ," ).append("\n"); 
		query.append("                               BKG_BL_DOC  D" ).append("\n"); 
		query.append("                         WHERE O.OFC_TP_CD     IN ('BB', 'BA', 'BS')" ).append("\n"); 
		query.append("                           AND O.OFC_CD         = B.OB_SLS_OFC_CD" ).append("\n"); 
		query.append("                           AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                           AND B.BKG_STS_CD    IN ('W', 'F')" ).append("\n"); 
		query.append("                           AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("                           AND B.BKG_NO         = BV.BKG_NO" ).append("\n"); 
		query.append("                           AND BV.VSL_CD        = VPP.VSL_CD" ).append("\n"); 
		query.append("                           AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND BV.POL_YD_CD     = VPP.POL_CD --2016.03.31 수정" ).append("\n"); 
		query.append("                           AND BV.POD_YD_CD     = VPP.POD_CD --2016.03.31 수정" ).append("\n"); 
		query.append("                           --AND BV.POL_CD        = SUBSTR(VPP.POL_CD, 1, 5)" ).append("\n"); 
		query.append("                           --AND BV.POD_CD        = SUBSTR(VPP.POD_CD, 1, 5)" ).append("\n"); 
		query.append("                           AND B.BKG_NO         = D.BKG_NO" ).append("\n"); 
		query.append("                           AND NVL(VPP.PL_CLPT_IND_SEQ,'1') = NVL(BV.POL_CLPT_IND_SEQ,'1')" ).append("\n"); 
		query.append("                           AND NVL(VPP.PD_CLPT_IND_SEQ,'1') = NVL(BV.POD_CLPT_IND_SEQ,'1')" ).append("\n"); 
		query.append("                     )" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", ALL_DATA AS (" ).append("\n"); 
		query.append("    SELECT IOC_CD     ," ).append("\n"); 
		query.append("           BASE_RHQ_CD," ).append("\n"); 
		query.append("           RHQ_CD     ," ).append("\n"); 
		query.append("           AREA_CD    ," ).append("\n"); 
		query.append("           OFC_CD     ," ).append("\n"); 
		query.append("           POL_CD     ," ).append("\n"); 
		query.append("           POD_CD     ," ).append("\n"); 
		query.append("           POL_SEQ    ," ).append("\n"); 
		query.append("           POD_SEQ    ," ).append("\n"); 
		query.append("           POL_SKIP   ," ).append("\n"); 
		query.append("           POD_SKIP   ," ).append("\n"); 
		query.append("           MAX(REP_TRD_CD)     AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           MAX(REP_SUB_TRD_CD) AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           MAX(TRD_CD)         AS TRD_CD        ," ).append("\n"); 
		query.append("           MAX(SUB_TRD_CD)     AS SUB_TRD_CD    ," ).append("\n"); 
		query.append("           MAX(RLANE_CD)       AS RLANE_CD      ," ).append("\n"); 
		query.append("           MAX(SKD_DIR_CD)     AS SKD_DIR_CD    ," ).append("\n"); 
		query.append("           MAX(VSL_CD)         AS VSL_CD        ,    " ).append("\n"); 
		query.append("           SUM(BKG_QUOTA)      AS BKG_QUOTA     ," ).append("\n"); 
		query.append("           SUM(FC_TEU)         AS FC_TEU        ," ).append("\n"); 
		query.append("           SUM(FC_HC)          AS FC_HC         ," ).append("\n"); 
		query.append("           SUM(FC_45)          AS FC_45         ," ).append("\n"); 
		query.append("           SUM(FC_53)          AS FC_53         ," ).append("\n"); 
		query.append("           SUM(FC_RF)          AS FC_RF         ," ).append("\n"); 
		query.append("           SUM(FC_WGT)         AS FC_WGT        ," ).append("\n"); 
		query.append("           SUM(UG_TEU)         AS UG_TEU        ," ).append("\n"); 
		query.append("           SUM(UG_HC)          AS UG_HC         ," ).append("\n"); 
		query.append("           SUM(UG_45)          AS UG_45         ," ).append("\n"); 
		query.append("           SUM(UG_53)          AS UG_53         ," ).append("\n"); 
		query.append("           SUM(UG_RF)          AS UG_RF         ," ).append("\n"); 
		query.append("           SUM(UG_WGT)         AS UG_WGT        ," ).append("\n"); 
		query.append("           SUM(MR_TEU)         AS MR_TEU        ," ).append("\n"); 
		query.append("           SUM(MR_HC)          AS MR_HC         ," ).append("\n"); 
		query.append("           SUM(MR_45)          AS MR_45         ," ).append("\n"); 
		query.append("           SUM(MR_53)          AS MR_53         ," ).append("\n"); 
		query.append("           SUM(MR_RF)          AS MR_RF         ," ).append("\n"); 
		query.append("           SUM(MR_WGT)         AS MR_WGT        ," ).append("\n"); 
		query.append("           SUM(AP_TEU)         AS AP_TEU        ," ).append("\n"); 
		query.append("           SUM(AP_HC)          AS AP_HC         ," ).append("\n"); 
		query.append("           SUM(AP_45)          AS AP_45         ," ).append("\n"); 
		query.append("           SUM(AP_53)          AS AP_53         ," ).append("\n"); 
		query.append("           SUM(AP_RF)          AS AP_RF         ," ).append("\n"); 
		query.append("           SUM(AP_WGT)         AS AP_WGT        ," ).append("\n"); 
		query.append("           SUM(BK_TEU)         AS BK_TEU        ," ).append("\n"); 
		query.append("           SUM(BK_20)          AS BK_20         ," ).append("\n"); 
		query.append("           SUM(BK_40)          AS BK_40         ," ).append("\n"); 
		query.append("           SUM(BK_HC)          AS BK_HC         ," ).append("\n"); 
		query.append("           SUM(BK_45)          AS BK_45         ," ).append("\n"); 
		query.append("           SUM(BK_53)          AS BK_53         ," ).append("\n"); 
		query.append("           SUM(BK_RF)          AS BK_RF         ," ).append("\n"); 
		query.append("           SUM(BK_WGT)         AS BK_WGT        ," ).append("\n"); 
		query.append("           SUM(BT_TEU)         AS BT_TEU        ," ).append("\n"); 
		query.append("           SUM(BT_20)          AS BT_20         ," ).append("\n"); 
		query.append("           SUM(BT_40)          AS BT_40         ," ).append("\n"); 
		query.append("           SUM(BT_HC)          AS BT_HC         ," ).append("\n"); 
		query.append("           SUM(BT_45)          AS BT_45         ," ).append("\n"); 
		query.append("           SUM(BT_53)          AS BT_53         ," ).append("\n"); 
		query.append("           SUM(BT_RF)          AS BT_RF         ," ).append("\n"); 
		query.append("           SUM(BT_WGT)         AS BT_WGT        ," ).append("\n"); 
		query.append("           SUM(GT_TEU)         AS GT_TEU        ," ).append("\n"); 
		query.append("           SUM(GT_HC)          AS GT_HC         ," ).append("\n"); 
		query.append("           SUM(GT_45)          AS GT_45         ," ).append("\n"); 
		query.append("           SUM(GT_53)          AS GT_53         ," ).append("\n"); 
		query.append("           SUM(GT_RF)          AS GT_RF         ," ).append("\n"); 
		query.append("           SUM(GT_WGT)         AS GT_WGT        ," ).append("\n"); 
		query.append("           DECODE(POD_CD, '0000000', DECODE(SUM(UG_WGT), 0, MAX(CFM_FLG), MIN(CFM_FLG))) AS CFM_FLG," ).append("\n"); 
		query.append("           MAX(PAST)           AS PAST          ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT                 ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD                     ," ).append("\n"); 
		query.append("           SUM(DECODE(FLG, 'A', 1, 0))                  AS AP_MD                ," ).append("\n"); 
		query.append("           SUM(DECODE(FLG, 'A', 0, 1))                  AS OTH_MD               ," ).append("\n"); 
		query.append("           SUM(DECODE(FLG, 'Q', 0, 1))                  AS NQTA_MD              ," ).append("\n"); 
		query.append("           SUM(DECODE(FLG, 'V', 0, 1))                  AS NCFM_MD              ," ).append("\n"); 
		query.append("           MAX(DECODE(FLG, 'A', SPC_CTRL_ALOC_RMK))     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("           MAX(DECODE(FLG, 'A', SPC_CTRL_ALOC_POL_RMK)) AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("           MAX(DECODE(FLG, 'A', SPC_CTRL_ALOC_POD_RMK)) AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              --Load Quota (Port)" ).append("\n"); 
		query.append("              SELECT 1   AS DIV," ).append("\n"); 
		query.append("                     'Q' AS FLG," ).append("\n"); 
		query.append("                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     VPP.TRD_CD        ," ).append("\n"); 
		query.append("                     VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.IOC_CD        ," ).append("\n"); 
		query.append("                     VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                     VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                     VPP.VSL_CD        ," ).append("\n"); 
		query.append("                     VPP.OFC_CD AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                     MQ.RHQ_CD         ," ).append("\n"); 
		query.append("                     MQ.AQ_CD   AS AREA_CD    ," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                        SELECT NVL(MAX(ROC.CONV_RGN_OFC_CD), MQ.RGN_OFC_CD)" ).append("\n"); 
		query.append("                          FROM SPC_RGN_OFC_CONV ROC" ).append("\n"); 
		query.append("                         WHERE ROC.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD" ).append("\n"); 
		query.append("                     ) AS OFC_CD  ," ).append("\n"); 
		query.append("                     VPP.POL_CD   ," ).append("\n"); 
		query.append("                     VPP.POD_CD   ," ).append("\n"); 
		query.append("                     VPP.POL_SEQ  ," ).append("\n"); 
		query.append("                     VPP.POD_SEQ  ," ).append("\n"); 
		query.append("                     VPP.POL_SKIP ," ).append("\n"); 
		query.append("                     VPP.POD_SKIP ," ).append("\n"); 
		query.append("                     MQ.LOD_QTY AS BKG_QUOTA," ).append("\n"); 
		query.append("                     0 AS FC_TEU  ," ).append("\n"); 
		query.append("                     0 AS FC_HC   ," ).append("\n"); 
		query.append("                     0 AS FC_45   ," ).append("\n"); 
		query.append("                     0 AS FC_53   ," ).append("\n"); 
		query.append("                     0 AS FC_RF   ," ).append("\n"); 
		query.append("                     0 AS FC_WGT  ," ).append("\n"); 
		query.append("                     0 AS UG_TEU  ," ).append("\n"); 
		query.append("                     0 AS UG_HC   ," ).append("\n"); 
		query.append("                     0 AS UG_45   ," ).append("\n"); 
		query.append("                     0 AS UG_53   ," ).append("\n"); 
		query.append("                     0 AS UG_RF   ," ).append("\n"); 
		query.append("                     0 AS UG_WGT  ," ).append("\n"); 
		query.append("                     0 AS MR_TEU  ," ).append("\n"); 
		query.append("                     0 AS MR_HC   ," ).append("\n"); 
		query.append("                     0 AS MR_45   ," ).append("\n"); 
		query.append("                     0 AS MR_53   ," ).append("\n"); 
		query.append("                     0 AS MR_RF   ," ).append("\n"); 
		query.append("                     0 AS MR_WGT  ," ).append("\n"); 
		query.append("                     0 AS AP_TEU  ," ).append("\n"); 
		query.append("                     0 AS AP_HC   ," ).append("\n"); 
		query.append("                     0 AS AP_45   ," ).append("\n"); 
		query.append("                     0 AS AP_53   ," ).append("\n"); 
		query.append("                     0 AS AP_RF   ," ).append("\n"); 
		query.append("                     0 AS AP_WGT  ," ).append("\n"); 
		query.append("                     0 AS BK_TEU  ," ).append("\n"); 
		query.append("                     0 AS BK_20   ," ).append("\n"); 
		query.append("                     0 AS BK_40   ," ).append("\n"); 
		query.append("                     0 AS BK_HC   ," ).append("\n"); 
		query.append("                     0 AS BK_45   ," ).append("\n"); 
		query.append("                     0 AS BK_53   ," ).append("\n"); 
		query.append("                     0 AS BK_RF   ," ).append("\n"); 
		query.append("                     0 AS BK_WGT  ," ).append("\n"); 
		query.append("                     0 AS BT_TEU  ," ).append("\n"); 
		query.append("                     0 AS BT_20   ," ).append("\n"); 
		query.append("                     0 AS BT_40   ," ).append("\n"); 
		query.append("                     0 AS BT_HC   ," ).append("\n"); 
		query.append("                     0 AS BT_45   ," ).append("\n"); 
		query.append("                     0 AS BT_53   ," ).append("\n"); 
		query.append("                     0 AS BT_RF   ," ).append("\n"); 
		query.append("                     0 AS BT_WGT  ," ).append("\n"); 
		query.append("                     0 AS GT_TEU  ," ).append("\n"); 
		query.append("                     0 AS GT_HC   ," ).append("\n"); 
		query.append("                     0 AS GT_45   ," ).append("\n"); 
		query.append("                     0 AS GT_53   ," ).append("\n"); 
		query.append("                     0 AS GT_RF   ," ).append("\n"); 
		query.append("                     0 AS GT_WGT  ," ).append("\n"); 
		query.append("                     VPP.PAST PAST," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_ETD_DT     ," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_CD         ," ).append("\n"); 
		query.append("                     NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM SAQ_MON_CFM_QTA  MQ ," ).append("\n"); 
		query.append("                     SAQ_MON_QTA_RLSE MQR," ).append("\n"); 
		query.append("                     VVD_POL_POD      VPP" ).append("\n"); 
		query.append("               WHERE ( SELECT MQV.POL_CD" ).append("\n"); 
		query.append("                         FROM SAQ_MON_CFM_QTA MQV" ).append("\n"); 
		query.append("                        WHERE MQV.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                          AND MQV.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                          AND MQV.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                          AND MQV.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                          AND MQV.TRD_CD           = VPP.TRD_CD" ).append("\n"); 
		query.append("                          AND MQV.DIR_CD           = VPP.DIR_CD" ).append("\n"); 
		query.append("                          AND ROWNUM = 1 ) <> '00000'" ).append("\n"); 
		query.append("                 AND MQR.BSE_YR          = VPP.COST_YR" ).append("\n"); 
		query.append("                 AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(VPP.COST_MON)/3)||'Q'" ).append("\n"); 
		query.append("                 AND MQR.QTA_RLSE_STS_CD = 'R'" ).append("\n"); 
		query.append("                 AND MQ.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                 AND MQ.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                 AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                 AND MQ.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                 AND MQ.TRD_CD           = VPP.TRD_CD" ).append("\n"); 
		query.append("                 AND MQ.RLANE_CD         = VPP.RLANE_CD" ).append("\n"); 
		query.append("                 AND MQ.DIR_CD           = VPP.DIR_CD" ).append("\n"); 
		query.append("                 AND MQ.VSL_CD           = VPP.VSL_CD" ).append("\n"); 
		query.append("                 AND MQ.SKD_VOY_NO       = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND MQ.SKD_DIR_CD       = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND MQ.POL_CD           = SUBSTR(VPP.POL_CD, 1, 5)" ).append("\n"); 
		query.append("                 AND MQ.POD_CD           = SUBSTR(VPP.POD_CD, 1, 5)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                 AND (VPP.POL_CONTI = VPP.OFC_CONTI OR MQ.RHQ_CD = VPP.OFC_CD)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              --Load Quota (Office)" ).append("\n"); 
		query.append("              SELECT 2   AS DIV," ).append("\n"); 
		query.append("                     'Q' AS FLG," ).append("\n"); 
		query.append("                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     VPP.TRD_CD        ," ).append("\n"); 
		query.append("                     VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.IOC_CD        ," ).append("\n"); 
		query.append("                     VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                     VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                     VPP.VSL_CD        ," ).append("\n"); 
		query.append("                     VPP.OFC_CD AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                     MQ.RHQ_CD         ," ).append("\n"); 
		query.append("                     MQ.AQ_CD   AS AREA_CD    ," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                        SELECT NVL(MAX(ROC.CONV_RGN_OFC_CD), MQ.RGN_OFC_CD)" ).append("\n"); 
		query.append("                          FROM SPC_RGN_OFC_CONV ROC" ).append("\n"); 
		query.append("                         WHERE ROC.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD" ).append("\n"); 
		query.append("                     ) AS OFC_CD," ).append("\n"); 
		query.append("                     '0000000'  AS POL_CD   ," ).append("\n"); 
		query.append("                     '0000000'  AS POD_CD   ," ).append("\n"); 
		query.append("                     0          AS POL_SEQ  ," ).append("\n"); 
		query.append("                     0          AS POD_SEQ  ," ).append("\n"); 
		query.append("                     NULL       AS POL_SKIP ," ).append("\n"); 
		query.append("                     NULL       AS POD_SKIP ," ).append("\n"); 
		query.append("                     MQ.LOD_QTY AS BKG_QUOTA," ).append("\n"); 
		query.append("                     0 AS FC_TEU ," ).append("\n"); 
		query.append("                     0 AS FC_HC  ," ).append("\n"); 
		query.append("                     0 AS FC_45  ," ).append("\n"); 
		query.append("                     0 AS FC_53  ," ).append("\n"); 
		query.append("                     0 AS FC_RF  ," ).append("\n"); 
		query.append("                     0 AS FC_WGT ," ).append("\n"); 
		query.append("                     0 AS UG_TEU ," ).append("\n"); 
		query.append("                     0 AS UG_HC  ," ).append("\n"); 
		query.append("                     0 AS UG_45  ," ).append("\n"); 
		query.append("                     0 AS UG_53  ," ).append("\n"); 
		query.append("                     0 AS UG_RF  ," ).append("\n"); 
		query.append("                     0 AS UG_WGT ," ).append("\n"); 
		query.append("                     0 AS MR_TEU ," ).append("\n"); 
		query.append("                     0 AS MR_HC  ," ).append("\n"); 
		query.append("                     0 AS MR_45  ," ).append("\n"); 
		query.append("                     0 AS MR_RF  ," ).append("\n"); 
		query.append("                     0 AS MR_53  ," ).append("\n"); 
		query.append("                     0 AS MR_WGT ," ).append("\n"); 
		query.append("                     0 AS AP_TEU ," ).append("\n"); 
		query.append("                     0 AS AP_HC  ," ).append("\n"); 
		query.append("                     0 AS AP_45  ," ).append("\n"); 
		query.append("                     0 AS AP_53  ," ).append("\n"); 
		query.append("                     0 AS AP_RF  ," ).append("\n"); 
		query.append("                     0 AS AP_WGT ," ).append("\n"); 
		query.append("                     0 AS BK_TEU ," ).append("\n"); 
		query.append("                     0 AS BK_20  ," ).append("\n"); 
		query.append("                     0 AS BK_40  ," ).append("\n"); 
		query.append("                     0 AS BK_HC  ," ).append("\n"); 
		query.append("                     0 AS BK_45  ," ).append("\n"); 
		query.append("                     0 AS BK_53  ," ).append("\n"); 
		query.append("                     0 AS BK_RF  ," ).append("\n"); 
		query.append("                     0 AS BK_WGT ," ).append("\n"); 
		query.append("                     0 AS BT_TEU ," ).append("\n"); 
		query.append("                     0 AS BT_20  ," ).append("\n"); 
		query.append("                     0 AS BT_40  ," ).append("\n"); 
		query.append("                     0 AS BT_HC  ," ).append("\n"); 
		query.append("                     0 AS BT_45  ," ).append("\n"); 
		query.append("                     0 AS BT_53  ," ).append("\n"); 
		query.append("                     0 AS BT_RF  ," ).append("\n"); 
		query.append("                     0 AS BT_WGT ," ).append("\n"); 
		query.append("                     0 AS GT_TEU ," ).append("\n"); 
		query.append("                     0 AS GT_HC  ," ).append("\n"); 
		query.append("                     0 AS GT_45  ," ).append("\n"); 
		query.append("                     0 AS GT_53  ," ).append("\n"); 
		query.append("                     0 AS GT_RF  ," ).append("\n"); 
		query.append("                     0 AS GT_WGT ," ).append("\n"); 
		query.append("                     NULL AS PAST," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_ETD_DT     ," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_CD         ," ).append("\n"); 
		query.append("                     NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM SAQ_MON_CFM_QTA  MQ ," ).append("\n"); 
		query.append("                     SAQ_MON_QTA_RLSE MQR," ).append("\n"); 
		query.append("                     VVDS             VPP" ).append("\n"); 
		query.append("               WHERE ( SELECT MQV.POL_CD" ).append("\n"); 
		query.append("                         FROM SAQ_MON_CFM_QTA MQV" ).append("\n"); 
		query.append("                        WHERE MQV.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                          AND MQV.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                          AND MQV.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                          AND MQV.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                          AND MQV.TRD_CD           = VPP.TRD_CD" ).append("\n"); 
		query.append("                          AND MQV.DIR_CD           = VPP.DIR_CD" ).append("\n"); 
		query.append("                          AND ROWNUM = 1) = '00000'" ).append("\n"); 
		query.append("                 AND MQR.BSE_YR           = VPP.COST_YR" ).append("\n"); 
		query.append("                 AND MQR.BSE_QTR_CD       = CEIL(TO_NUMBER(VPP.COST_MON)/3)||'Q'" ).append("\n"); 
		query.append("                 AND MQR.QTA_RLSE_STS_CD  = 'R'" ).append("\n"); 
		query.append("                 AND MQ.MQTA_RLSE_VER_NO  = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                 AND MQ.BSE_YR            = MQR.BSE_YR" ).append("\n"); 
		query.append("                 AND MQ.BSE_QTR_CD        = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                 AND MQ.QTA_TGT_CD        = 'T'" ).append("\n"); 
		query.append("                 AND MQ.TRD_CD            = VPP.TRD_CD" ).append("\n"); 
		query.append("                 AND MQ.RLANE_CD          = VPP.RLANE_CD" ).append("\n"); 
		query.append("                 AND MQ.DIR_CD            = VPP.DIR_CD" ).append("\n"); 
		query.append("                 AND MQ.VSL_CD            = VPP.VSL_CD" ).append("\n"); 
		query.append("                 AND MQ.SKD_VOY_NO        = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND MQ.SKD_DIR_CD        = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND MQ.RHQ_CD            = VPP.OFC_CD" ).append("\n"); 
		query.append("                 AND MQ.LOD_QTY           > 0 -- QTA?곗씠?곌? 0??寃쎌슦???쒖쇅?쒗궓??" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              --Forecast" ).append("\n"); 
		query.append("              SELECT  /*+ ORDERED USE_NL(VPP F) */" ).append("\n"); 
		query.append("                      3   AS DIV," ).append("\n"); 
		query.append("                     'F' AS FLG," ).append("\n"); 
		query.append("                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     VPP.TRD_CD        ," ).append("\n"); 
		query.append("                     VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     F.IOC_TS_CD  AS IOC_CD     ," ).append("\n"); 
		query.append("                     VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                     VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                     VPP.VSL_CD        ," ).append("\n"); 
		query.append("                     VPP.OFC_CD   AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                     F.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                     F.SLS_AQ_CD  AS AREA_CD    ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                     DECODE(IOC_TS_CD, 'T', DECODE(VPP.OFC_CD, F.SLS_RHQ_CD, F.SLS_RGN_OFC_CD, F.SLS_RHQ_CD), F.SLS_RGN_OFC_CD) AS OFC_CD," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                     VPP.POL_CD  ," ).append("\n"); 
		query.append("                     VPP.POD_CD  ," ).append("\n"); 
		query.append("                     VPP.POL_SEQ ," ).append("\n"); 
		query.append("                     VPP.POD_SEQ ," ).append("\n"); 
		query.append("                     VPP.POL_SKIP," ).append("\n"); 
		query.append("                     VPP.POD_SKIP," ).append("\n"); 
		query.append("                     0                 AS BKG_QUOTA," ).append("\n"); 
		query.append("                     F.CFM_TTL_QTY     AS FC_TEU   ," ).append("\n"); 
		query.append("                     F.CFM_40FT_HC_QTY AS FC_HC    ," ).append("\n"); 
		query.append("                     F.CFM_45FT_HC_QTY AS FC_45    ," ).append("\n"); 
		query.append("                     F.CFM_53FT_QTY    AS FC_53    ," ).append("\n"); 
		query.append("                     F.CFM_RF_QTY      AS FC_RF    ," ).append("\n"); 
		query.append("                     F.CFM_TTL_WGT     AS FC_WGT   ," ).append("\n"); 
		query.append("                     0 AS UG_TEU," ).append("\n"); 
		query.append("                     0 AS UG_HC ," ).append("\n"); 
		query.append("                     0 AS UG_45 ," ).append("\n"); 
		query.append("                     0 AS UG_53 ," ).append("\n"); 
		query.append("                     0 AS UG_RF ," ).append("\n"); 
		query.append("                     0 AS UG_WGT," ).append("\n"); 
		query.append("                     0 AS MR_TEU," ).append("\n"); 
		query.append("                     0 AS MR_HC ," ).append("\n"); 
		query.append("                     0 AS MR_45 ," ).append("\n"); 
		query.append("                     0 AS MR_53 ," ).append("\n"); 
		query.append("                     0 AS MR_RF ," ).append("\n"); 
		query.append("                     0 AS MR_WGT," ).append("\n"); 
		query.append("                     0 AS AP_TEU," ).append("\n"); 
		query.append("                     0 AS AP_HC ," ).append("\n"); 
		query.append("                     0 AS AP_45 ," ).append("\n"); 
		query.append("                     0 AS AP_53 ," ).append("\n"); 
		query.append("                     0 AS AP_RF ," ).append("\n"); 
		query.append("                     0 AS AP_WGT," ).append("\n"); 
		query.append("                     0 AS BK_TEU," ).append("\n"); 
		query.append("                     0 AS BK_20 ," ).append("\n"); 
		query.append("                     0 AS BK_40 ," ).append("\n"); 
		query.append("                     0 AS BK_HC ," ).append("\n"); 
		query.append("                     0 AS BK_45 ," ).append("\n"); 
		query.append("                     0 AS BK_53 ," ).append("\n"); 
		query.append("                     0 AS BK_RF ," ).append("\n"); 
		query.append("                     0 AS BK_WGT," ).append("\n"); 
		query.append("                     0 AS BT_TEU," ).append("\n"); 
		query.append("                     0 AS BT_20 ," ).append("\n"); 
		query.append("                     0 AS BT_40 ," ).append("\n"); 
		query.append("                     0 AS BT_HC ," ).append("\n"); 
		query.append("                     0 AS BT_45 ," ).append("\n"); 
		query.append("                     0 AS BT_53 ," ).append("\n"); 
		query.append("                     0 AS BT_RF ," ).append("\n"); 
		query.append("                     0 AS BT_WGT," ).append("\n"); 
		query.append("                     0 AS GT_TEU," ).append("\n"); 
		query.append("                     0 AS GT_HC ," ).append("\n"); 
		query.append("                     0 AS GT_45 ," ).append("\n"); 
		query.append("                     0 AS GT_53 ," ).append("\n"); 
		query.append("                     0 AS GT_RF ," ).append("\n"); 
		query.append("                     0 AS GT_WGT," ).append("\n"); 
		query.append("                     VPP.PAST AS PAST," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_ETD_DT     ," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_CD         ," ).append("\n"); 
		query.append("                     NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM VVD_POL_POD        VPP," ).append("\n"); 
		query.append("                     SPC_DLY_FCAST_CUST F " ).append("\n"); 
		query.append("               WHERE F.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                 AND F.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                 AND F.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                 AND F.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND F.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND DECODE(SUBSTR(F.POL_YD_CD, 6, 2), '00', SUBSTR(F.POL_YD_CD, 1, 5), SUBSTR(F.POL_YD_CD, 1, LENGTH(VPP.POL_CD))) = DECODE(SUBSTR(F.POL_YD_CD, 6, 2), '00', SUBSTR(VPP.POL_CD, 1, 5), VPP.POL_CD)" ).append("\n"); 
		query.append("                 AND DECODE(SUBSTR(F.POD_YD_CD, 6, 2), '00', SUBSTR(F.POD_YD_CD, 1, 5), SUBSTR(F.POD_YD_CD, 1, LENGTH(VPP.POD_CD))) = DECODE(SUBSTR(F.POD_YD_CD, 6, 2), '00', SUBSTR(VPP.POD_CD, 1, 5), VPP.POD_CD)" ).append("\n"); 
		query.append("                 AND NVL(VPP.PL_CLPT_IND_SEQ,'1') = NVL(F.POL_IND_SEQ,'1')" ).append("\n"); 
		query.append("                 AND NVL(VPP.PD_CLPT_IND_SEQ,'1') = NVL(F.POD_IND_SEQ,'1')" ).append("\n"); 
		query.append("                 AND (    VPP.POL_CONTI = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                       OR F.SLS_RHQ_CD  = VPP.OFC_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                 AND VPP.PAST = 'N'" ).append("\n"); 
		query.append("                 -- teu, hc, 45fc, wt" ).append("\n"); 
		query.append("                 AND NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) + NVL(F.CFM_53FT_QTY, 0) + NVL(F.CFM_TTL_WGT, 0) > 0" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              --Allocation" ).append("\n"); 
		query.append("              SELECT /*+ ORDERED USE_NL(VPP A) */" ).append("\n"); 
		query.append("                      6   AS DIV," ).append("\n"); 
		query.append("                     'A' AS FLG," ).append("\n"); 
		query.append("                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     VPP.TRD_CD        ," ).append("\n"); 
		query.append("                     VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     DECODE(A.TS_FLG, 'Y', 'T', A.IOC_CD)||DECODE(A.MNL_FLG, 'Y', 'T', '') AS IOC_CD," ).append("\n"); 
		query.append("                     VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                     VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                     VPP.VSL_CD        ," ).append("\n"); 
		query.append("                     VPP.OFC_CD   AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                     A.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                     DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_AQ_CD     , DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_AQ_CD))      AS AREA_CD," ).append("\n"); 
		query.append("                     DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD)) AS OFC_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                     VPP.POL_CD    ," ).append("\n"); 
		query.append("                     VPP.POD_CD    ," ).append("\n"); 
		query.append("                     VPP.POL_SEQ   ," ).append("\n"); 
		query.append("                     VPP.POD_SEQ   ," ).append("\n"); 
		query.append("                     VPP.POL_SKIP  ," ).append("\n"); 
		query.append("                     VPP.POD_SKIP  ," ).append("\n"); 
		query.append("                     0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                     0 AS FC_TEU   ," ).append("\n"); 
		query.append("                     0 AS FC_HC    ," ).append("\n"); 
		query.append("                     0 AS FC_45    ," ).append("\n"); 
		query.append("                     0 AS FC_53    ," ).append("\n"); 
		query.append("                     0 AS FC_RF    ," ).append("\n"); 
		query.append("                     0 AS FC_WGT   ," ).append("\n"); 
		query.append("                     0 AS UG_TEU   ," ).append("\n"); 
		query.append("                     0 AS UG_HC    ," ).append("\n"); 
		query.append("                     0 AS UG_45    ," ).append("\n"); 
		query.append("                     0 AS UG_53    ," ).append("\n"); 
		query.append("                     0 AS UG_RF    ," ).append("\n"); 
		query.append("                     0 AS UG_WGT   ," ).append("\n"); 
		query.append("                     0 AS MR_TEU   ," ).append("\n"); 
		query.append("                     0 AS MR_HC    ," ).append("\n"); 
		query.append("                     0 AS MR_45    ," ).append("\n"); 
		query.append("                     0 AS MR_53    ," ).append("\n"); 
		query.append("                     0 AS MR_RF    ," ).append("\n"); 
		query.append("                     0 AS MR_WGT   ," ).append("\n"); 
		query.append("                     A.ASGN_TTL_QTY     AS AP_TEU," ).append("\n"); 
		query.append("                     A.ASGN_40FT_HC_QTY AS AP_HC ," ).append("\n"); 
		query.append("                     A.ASGN_45FT_HC_QTY AS AP_45 ," ).append("\n"); 
		query.append("                     A.ASGN_53FT_QTY    AS AP_53 ," ).append("\n"); 
		query.append("                     A.ASGN_RF_QTY      AS AP_RF ," ).append("\n"); 
		query.append("                     A.ASGN_TTL_WGT     AS AP_WGT," ).append("\n"); 
		query.append("                     0 AS BK_TEU," ).append("\n"); 
		query.append("                     0 AS BK_20 ," ).append("\n"); 
		query.append("                     0 AS BK_40 ," ).append("\n"); 
		query.append("                     0 AS BK_HC ," ).append("\n"); 
		query.append("                     0 AS BK_45 ," ).append("\n"); 
		query.append("                     0 AS BK_53 ," ).append("\n"); 
		query.append("                     0 AS BK_RF ," ).append("\n"); 
		query.append("                     0 AS BK_WGT," ).append("\n"); 
		query.append("                     0 AS BT_TEU," ).append("\n"); 
		query.append("                     0 AS BT_20 ," ).append("\n"); 
		query.append("                     0 AS BT_40 ," ).append("\n"); 
		query.append("                     0 AS BT_HC ," ).append("\n"); 
		query.append("                     0 AS BT_45 ," ).append("\n"); 
		query.append("                     0 AS BT_53 ," ).append("\n"); 
		query.append("                     0 AS BT_RF ," ).append("\n"); 
		query.append("                     0 AS BT_WGT," ).append("\n"); 
		query.append("                     0 AS GT_TEU," ).append("\n"); 
		query.append("                     0 AS GT_HC ," ).append("\n"); 
		query.append("                     0 AS GT_45 ," ).append("\n"); 
		query.append("                     0 AS GT_53 ," ).append("\n"); 
		query.append("                     0 AS GT_RF ," ).append("\n"); 
		query.append("                     0 AS GT_WGT," ).append("\n"); 
		query.append("                     VPP.PAST AS PAST," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     NULL                    AS CFM_FLG              ," ).append("\n"); 
		query.append("                     A.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     A.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     A.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("               FROM  VVD_POL_POD      VPP,                     " ).append("\n"); 
		query.append("                     SPC_ALOC_POL_POD A" ).append("\n"); 
		query.append("               WHERE A.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                 AND A.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                 AND A.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                 AND A.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND A.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND DECODE(SUBSTR(A.POL_YD_CD, 6, 2), '00', SUBSTR(A.POL_YD_CD, 1, 5), SUBSTR(A.POL_YD_CD, 1, LENGTH(VPP.POL_CD))) = DECODE(SUBSTR(A.POL_YD_CD, 6, 2), '00', SUBSTR(VPP.POL_CD, 1, 5), VPP.POL_CD)" ).append("\n"); 
		query.append("                 AND DECODE(SUBSTR(A.POD_YD_CD, 6, 2), '00', SUBSTR(A.POD_YD_CD, 1, 5), SUBSTR(A.POD_YD_CD, 1, LENGTH(VPP.POD_CD))) = DECODE(SUBSTR(A.POD_YD_CD, 6, 2), '00', SUBSTR(VPP.POD_CD, 1, 5), VPP.POD_CD)" ).append("\n"); 
		query.append("                 AND NVL(VPP.PL_CLPT_IND_SEQ,'1') = NVL(A.POL_IND_SEQ,'1')" ).append("\n"); 
		query.append("                 AND NVL(VPP.PD_CLPT_IND_SEQ,'1') = NVL(A.POD_IND_SEQ,'1')" ).append("\n"); 
		query.append("                 AND (   (     VPP.POL_CONTI = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                           AND (   (     A.TS_FLG     = 'N'" ).append("\n"); 
		query.append("                                     AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )" ).append("\n"); 
		query.append("                                 OR A.SLS_RGN_OFC_CD IS NULL )" ).append("\n"); 
		query.append("                         ) " ).append("\n"); 
		query.append("                      OR" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                         (     A.SLS_RHQ_CD = VPP.OFC_CD" ).append("\n"); 
		query.append("                           AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )" ).append("\n"); 
		query.append("                     )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              --Booking" ).append("\n"); 
		query.append("              SELECT  /*+ ORDERED USE_HASH(B O) */" ).append("\n"); 
		query.append("                      7   AS DIV," ).append("\n"); 
		query.append("                     'B' AS FLG," ).append("\n"); 
		query.append("                     REP_TRD_CD    ," ).append("\n"); 
		query.append("                     REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     TRD_CD        ," ).append("\n"); 
		query.append("                     SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     B.IOC_CD      ," ).append("\n"); 
		query.append("                     B.RLANE_CD    ," ).append("\n"); 
		query.append("                     B.SKD_DIR_CD  ," ).append("\n"); 
		query.append("                     B.VSL_CD      ," ).append("\n"); 
		query.append("                     B.BASE_RHQ_CD ," ).append("\n"); 
		query.append("                     O.N2ND_PRNT_OFC_CD AS RHQ_CD," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                     DECODE(B.IOC_CD, 'T', DECODE(B.BASE_RHQ_CD, O.N2ND_PRNT_OFC_CD, O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD), O.N3RD_PRNT_OFC_CD) AS AREA_CD," ).append("\n"); 
		query.append("                     DECODE(B.IOC_CD, 'T', DECODE(B.BASE_RHQ_CD, O.N2ND_PRNT_OFC_CD, O.N4TH_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD), O.N4TH_PRNT_OFC_CD) AS OFC_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                     B.POL_CD      ," ).append("\n"); 
		query.append("                     B.POD_CD      ," ).append("\n"); 
		query.append("                     B.POL_SEQ     ," ).append("\n"); 
		query.append("                     B.POD_SEQ     ," ).append("\n"); 
		query.append("                     POL_SKIP      ," ).append("\n"); 
		query.append("                     POD_SKIP      ," ).append("\n"); 
		query.append("                     0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_TTL_QTY))     AS FC_TEU," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_40FT_HC_QTY)) AS FC_HC ," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_45FT_HC_QTY)) AS FC_45 ," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_53FT_QTY))    AS FC_53 ," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_RF_QTY))      AS FC_RF ," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_TTL_WGT))     AS FC_WGT," ).append("\n"); 
		query.append("                     0 AS UG_TEU," ).append("\n"); 
		query.append("                     0 AS UG_HC ," ).append("\n"); 
		query.append("                     0 AS UG_45 ," ).append("\n"); 
		query.append("                     0 AS UG_53 ," ).append("\n"); 
		query.append("                     0 AS UG_RF ," ).append("\n"); 
		query.append("                     0 AS UG_WGT," ).append("\n"); 
		query.append("                     0 AS MR_TEU," ).append("\n"); 
		query.append("                     0 AS MR_HC ," ).append("\n"); 
		query.append("                     0 AS MR_45 ," ).append("\n"); 
		query.append("                     0 AS MR_53 ," ).append("\n"); 
		query.append("                     0 AS MR_RF ," ).append("\n"); 
		query.append("                     0 AS MR_WGT," ).append("\n"); 
		query.append("                     0 AS AP_TEU," ).append("\n"); 
		query.append("                     0 AS AP_HC ," ).append("\n"); 
		query.append("                     0 AS AP_45 ," ).append("\n"); 
		query.append("                     0 AS AP_53 ," ).append("\n"); 
		query.append("                     0 AS AP_RF ," ).append("\n"); 
		query.append("                     0 AS AP_WGT," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_TTL_QTY))     AS BK_TEU," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_20FT_QTY))    AS BK_20 ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_40FT_QTY))    AS BK_40 ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_40FT_HC_QTY)) AS BK_HC ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_45FT_HC_QTY)) AS BK_45 ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_53FT_QTY))    AS BK_53 ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_RF_QTY))      AS BK_RF ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_TTL_WGT))     AS BK_WGT," ).append("\n"); 
		query.append("                     (B.BKG_TTL_QTY)     AS BT_TEU," ).append("\n"); 
		query.append("                     (B.BKG_20FT_QTY)    AS BT_20 ," ).append("\n"); 
		query.append("                     (B.BKG_40FT_QTY)    AS BT_40 ," ).append("\n"); 
		query.append("                     (B.BKG_40FT_HC_QTY) AS BT_HC ," ).append("\n"); 
		query.append("                     (B.BKG_45FT_HC_QTY) AS BT_45 ," ).append("\n"); 
		query.append("                     (B.BKG_53FT_QTY)    AS BT_53 ," ).append("\n"); 
		query.append("                     (B.BKG_RF_QTY)      AS BT_RF ," ).append("\n"); 
		query.append("                     (B.BKG_TTL_WGT)     AS BT_WGT," ).append("\n"); 
		query.append("                     0 AS GT_TEU," ).append("\n"); 
		query.append("                     0 AS GT_HC ," ).append("\n"); 
		query.append("                     0 AS GT_45 ," ).append("\n"); 
		query.append("                     0 AS GT_53 ," ).append("\n"); 
		query.append("                     0 AS GT_RF ," ).append("\n"); 
		query.append("                     0 AS GT_WGT," ).append("\n"); 
		query.append("                     B.PAST," ).append("\n"); 
		query.append("                     B.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     B.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM BKG_DATA    B," ).append("\n"); 
		query.append("                     SPC_OFC_LVL O" ).append("\n"); 
		query.append("               WHERE (B.BKG_TTL_QTY + B.BKG_TTL_WGT > 0)" ).append("\n"); 
		query.append("                 AND O.OFC_CD = B.SLS_OFC_CD" ).append("\n"); 
		query.append("                 AND B.COST_YR || B.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                 AND (    B.POL_CONTI        = B.OFC_CONTI" ).append("\n"); 
		query.append("                       OR O.N2ND_PRNT_OFC_CD = B.BASE_RHQ_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("               UNION ALL" ).append("\n"); 
		query.append("               --EQ Booking" ).append("\n"); 
		query.append("               SELECT 9    AS DIV," ).append("\n"); 
		query.append("                      'EB' AS FLG," ).append("\n"); 
		query.append("                      REP_TRD_CD       ," ).append("\n"); 
		query.append("                      REP_SUB_TRD_CD   ," ).append("\n"); 
		query.append("                      TRD_CD           ," ).append("\n"); 
		query.append("                      SUB_TRD_CD       ," ).append("\n"); 
		query.append("                      IOC_CD           ," ).append("\n"); 
		query.append("                      RLANE_CD         ," ).append("\n"); 
		query.append("                      SKD_DIR_CD       ," ).append("\n"); 
		query.append("                      VSL_CD           ," ).append("\n"); 
		query.append("                      BASE_RHQ_CD      ," ).append("\n"); 
		query.append("                      'NULL' AS RHQ_CD ," ).append("\n"); 
		query.append("                      NULL   AS AREA_CD," ).append("\n"); 
		query.append("                      'NULL' AS OFC_CD ," ).append("\n"); 
		query.append("                      POL_CD           ," ).append("\n"); 
		query.append("                      POD_CD           ," ).append("\n"); 
		query.append("                      POL_SEQ          ," ).append("\n"); 
		query.append("                      POD_SEQ          ," ).append("\n"); 
		query.append("                      POL_SKIP         ," ).append("\n"); 
		query.append("                      POD_SKIP         ," ).append("\n"); 
		query.append("                      0 AS BKG_QUOTA   ," ).append("\n"); 
		query.append("                      0 AS FC_TEU      ," ).append("\n"); 
		query.append("                      0 AS FC_HC       ," ).append("\n"); 
		query.append("                      0 AS FC_45       ," ).append("\n"); 
		query.append("                      0 AS FC_53       ," ).append("\n"); 
		query.append("                      0 AS FC_RF       ," ).append("\n"); 
		query.append("                      0 AS FC_WGT      ," ).append("\n"); 
		query.append("                      0 AS UG_TEU      ," ).append("\n"); 
		query.append("                      0 AS UG_HC       ," ).append("\n"); 
		query.append("                      0 AS UG_45       ," ).append("\n"); 
		query.append("                      0 AS UG_53       ," ).append("\n"); 
		query.append("                      0 AS UG_RF       ," ).append("\n"); 
		query.append("                      0 AS UG_WGT      ," ).append("\n"); 
		query.append("                      0 AS MR_TEU      ," ).append("\n"); 
		query.append("                      0 AS MR_HC       ," ).append("\n"); 
		query.append("                      0 AS MR_45       ," ).append("\n"); 
		query.append("                      0 AS MR_53       ," ).append("\n"); 
		query.append("                      0 AS MR_RF       ," ).append("\n"); 
		query.append("                      0 AS MR_WGT      ," ).append("\n"); 
		query.append("                      0 AS AP_TEU      ," ).append("\n"); 
		query.append("                      0 AS AP_HC       ," ).append("\n"); 
		query.append("                      0 AS AP_45       ," ).append("\n"); 
		query.append("                      0 AS AP_53       ," ).append("\n"); 
		query.append("                      0 AS AP_RF       ," ).append("\n"); 
		query.append("                      0 AS AP_WGT      ," ).append("\n"); 
		query.append("                      (BKG_TTL_QTY)     AS BK_TEU," ).append("\n"); 
		query.append("                      (BKG_20FT_QTY)    AS BK_20 ," ).append("\n"); 
		query.append("                      (BKG_40FT_QTY)    AS BK_40 ," ).append("\n"); 
		query.append("                      (BKG_40FT_HC_QTY) AS BK_HC ," ).append("\n"); 
		query.append("                      (BKG_45FT_HC_QTY) AS BK_45 ," ).append("\n"); 
		query.append("                      (BKG_53FT_QTY)    AS BK_53 ," ).append("\n"); 
		query.append("                      (BKG_RF_QTY)      AS BK_RF ," ).append("\n"); 
		query.append("                      0                 AS BK_WGT," ).append("\n"); 
		query.append("                      (BKG_TTL_QTY)     AS BT_TEU," ).append("\n"); 
		query.append("                      (BKG_20FT_QTY)    AS BT_20 ," ).append("\n"); 
		query.append("                      (BKG_40FT_QTY)    AS BT_40 ," ).append("\n"); 
		query.append("                      (BKG_40FT_HC_QTY) AS BT_HC ," ).append("\n"); 
		query.append("                      (BKG_45FT_HC_QTY) AS BT_45 ," ).append("\n"); 
		query.append("                      (BKG_53FT_QTY)    AS BT_53 ," ).append("\n"); 
		query.append("                      (BKG_RF_QTY)      AS BT_RF ," ).append("\n"); 
		query.append("                      0                 AS BT_WGT," ).append("\n"); 
		query.append("                      0 AS GT_TEU," ).append("\n"); 
		query.append("                      0 AS GT_HC ," ).append("\n"); 
		query.append("                      0 AS GT_45 ," ).append("\n"); 
		query.append("                      0 AS GT_53 ," ).append("\n"); 
		query.append("                      0 AS GT_RF ," ).append("\n"); 
		query.append("                      0 AS GT_WGT," ).append("\n"); 
		query.append("                      PAST       ," ).append("\n"); 
		query.append("                      LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                      LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                      NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                 FROM (" ).append("\n"); 
		query.append("                         SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("                                REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                                TRD_CD              ," ).append("\n"); 
		query.append("                                SUB_TRD_CD          ," ).append("\n"); 
		query.append("                                IOC_CD              ," ).append("\n"); 
		query.append("                                RLANE_CD      		," ).append("\n"); 
		query.append("                                SKD_DIR_CD    		," ).append("\n"); 
		query.append("                                VSL_CD        		,    " ).append("\n"); 
		query.append("                                BASE_RHQ_CD         ," ).append("\n"); 
		query.append("                                POL_CD              ," ).append("\n"); 
		query.append("                                POD_CD              ," ).append("\n"); 
		query.append("                                POL_SEQ             ," ).append("\n"); 
		query.append("                                POD_SEQ             ," ).append("\n"); 
		query.append("                                POL_SKIP            ," ).append("\n"); 
		query.append("                                POD_SKIP            ," ).append("\n"); 
		query.append("                                PAST                ," ).append("\n"); 
		query.append("                                LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY    ," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_20FT_QTY   ," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)) AS BKG_40FT_QTY   ," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)) AS BKG_40FT_HC_QTY," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)) AS BKG_45FT_HC_QTY," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)) AS BKG_53FT_QTY   ," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)) AS BKG_RF_QTY" ).append("\n"); 
		query.append("                           FROM (" ).append("\n"); 
		query.append("                                   SELECT /*+ ORDERED USE_NL(VPP BV B) */" ).append("\n"); 
		query.append("                                          VPP.REP_TRD_CD           ," ).append("\n"); 
		query.append("                                          VPP.REP_SUB_TRD_CD       ," ).append("\n"); 
		query.append("                                          VPP.TRD_CD               ," ).append("\n"); 
		query.append("                                          VPP.SUB_TRD_CD           ," ).append("\n"); 
		query.append("                                          'E'        AS IOC_CD     ," ).append("\n"); 
		query.append("                                          VPP.RLANE_CD      	   ," ).append("\n"); 
		query.append("                                          VPP.SKD_DIR_CD    	   ," ).append("\n"); 
		query.append("                                          VPP.VSL_CD        	   , " ).append("\n"); 
		query.append("                                          VPP.OFC_CD AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                                          VPP.POL_CD               ," ).append("\n"); 
		query.append("                                          VPP.POD_CD               ," ).append("\n"); 
		query.append("                                          VPP.POL_SEQ              ," ).append("\n"); 
		query.append("                                          VPP.POD_SEQ              ," ).append("\n"); 
		query.append("                                          VPP.POL_SKIP             ," ).append("\n"); 
		query.append("                                          VPP.POD_SKIP             ," ).append("\n"); 
		query.append("                                          VPP.PAST                 ," ).append("\n"); 
		query.append("                                          VPP.LST_LODG_PORT_ETD_DT ," ).append("\n"); 
		query.append("                                          VPP.LST_LODG_PORT_CD     ," ).append("\n"); 
		query.append("                                          (" ).append("\n"); 
		query.append("                                             SELECT" ).append("\n"); 
		query.append("                                                       TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, '5', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD , VPP.SKD_VOY_NO,'D5'), '7', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D7'), 2)*Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                               FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                              WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("                                                AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                                          ) AS VAL" ).append("\n"); 
		query.append("                                     FROM VVD_POL_POD VPP," ).append("\n"); 
		query.append("                                          BKG_VVD     BV ," ).append("\n"); 
		query.append("                                          BKG_BOOKING B  " ).append("\n"); 
		query.append("                                    WHERE B.BKG_STS_CD   IN ('W', 'F')" ).append("\n"); 
		query.append("                                      AND B.BKG_CGO_TP_CD = 'P'" ).append("\n"); 
		query.append("                                      AND B.BKG_NO        = BV.BKG_NO" ).append("\n"); 
		query.append("                                      AND BV.VSL_CD       = VPP.VSL_CD" ).append("\n"); 
		query.append("                                      AND BV.SKD_VOY_NO   = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      AND BV.SKD_DIR_CD   = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      AND (BV.POL_YD_CD = VPP.POL_CD OR BV.POL_CD = VPP.POL_CD)" ).append("\n"); 
		query.append("                                      AND DECODE(BV.POD_CD, 'XXXXX', VPP.LD_PORT, BV.POD_CD) = SUBSTR(VPP.POD_CD, 1, 5)" ).append("\n"); 
		query.append("                                )" ).append("\n"); 
		query.append("                      )" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("  GROUP BY " ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           BASE_RHQ_CD         ," ).append("\n"); 
		query.append("           RHQ_CD              ," ).append("\n"); 
		query.append("           AREA_CD             ," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POL_SEQ             ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POD_SEQ             ," ).append("\n"); 
		query.append("           POL_SKIP            ," ).append("\n"); 
		query.append("           POD_SKIP            ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD" ).append("\n"); 
		query.append("    HAVING SUBSTR(IOC_CD, 2, 1)        = 'T'" ).append("\n"); 
		query.append("        OR SUM(DECODE(FLG, 'A', 1, 0)) = 0" ).append("\n"); 
		query.append("        OR SUM(DECODE(FLG, 'A', 0, 1)) > 0" ).append("\n"); 
		query.append("        OR SUM(AP_TEU)                 > 0" ).append("\n"); 
		query.append("        OR SUM(AP_WGT)                 > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", HRCH_DATA AS (" ).append("\n"); 
		query.append("    SELECT IOC_CD     ," ).append("\n"); 
		query.append("           BASE_RHQ_CD," ).append("\n"); 
		query.append("           RHQ_CD     ," ).append("\n"); 
		query.append("           AREA_CD    ," ).append("\n"); 
		query.append("           OFC_CD     ," ).append("\n"); 
		query.append("           POL_CD     ," ).append("\n"); 
		query.append("           POD_CD     ," ).append("\n"); 
		query.append("           POL_SEQ    ," ).append("\n"); 
		query.append("           POD_SEQ    ," ).append("\n"); 
		query.append("           MAX(POL_SKIP)          AS POL_SKIP      ," ).append("\n"); 
		query.append("           MAX(POD_SKIP)          AS POD_SKIP      ," ).append("\n"); 
		query.append("           MAX(REP_TRD_CD)        AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           MAX(REP_SUB_TRD_CD)    AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           MAX(TRD_CD)            AS TRD_CD        ," ).append("\n"); 
		query.append("           MAX(SUB_TRD_CD)        AS SUB_TRD_CD    ," ).append("\n"); 
		query.append("           MAX(RLANE_CD)          AS RLANE_CD      ," ).append("\n"); 
		query.append("           MAX(SKD_DIR_CD)        AS SKD_DIR_CD    ," ).append("\n"); 
		query.append("           MAX(VSL_CD)            AS VSL_CD        ," ).append("\n"); 
		query.append("           SUM(BKG_QUOTA)         AS BKG_QUOTA     ," ).append("\n"); 
		query.append("           SUM(FC_TEU)            AS FC_TEU        ," ).append("\n"); 
		query.append("           SUM(FC_HC)             AS FC_HC         ," ).append("\n"); 
		query.append("           SUM(FC_45)             AS FC_45         ," ).append("\n"); 
		query.append("           SUM(FC_53)             AS FC_53         ," ).append("\n"); 
		query.append("           SUM(FC_RF)             AS FC_RF         ," ).append("\n"); 
		query.append("           SUM(FC_WGT)            AS FC_WGT        ," ).append("\n"); 
		query.append("           SUM(UG_TEU)            AS UG_TEU        ," ).append("\n"); 
		query.append("           SUM(UG_HC)             AS UG_HC         ," ).append("\n"); 
		query.append("           SUM(UG_45)             AS UG_45         ," ).append("\n"); 
		query.append("           SUM(UG_53)             AS UG_53         ," ).append("\n"); 
		query.append("           SUM(UG_RF)             AS UG_RF         ," ).append("\n"); 
		query.append("           SUM(UG_WGT)            AS UG_WGT        ," ).append("\n"); 
		query.append("           SUM(MR_TEU)            AS MR_TEU        ," ).append("\n"); 
		query.append("           SUM(MR_HC)             AS MR_HC         ," ).append("\n"); 
		query.append("           SUM(MR_45)             AS MR_45         ," ).append("\n"); 
		query.append("           SUM(MR_53)             AS MR_53         ," ).append("\n"); 
		query.append("           SUM(MR_RF)             AS MR_RF         ," ).append("\n"); 
		query.append("           SUM(MR_WGT)            AS MR_WGT        ," ).append("\n"); 
		query.append("           SUM(AP_TEU)            AS AP_TEU        ," ).append("\n"); 
		query.append("           SUM(AP_HC)             AS AP_HC         ," ).append("\n"); 
		query.append("           SUM(AP_45)             AS AP_45         ," ).append("\n"); 
		query.append("           SUM(AP_53)             AS AP_53         ," ).append("\n"); 
		query.append("           SUM(AP_RF)             AS AP_RF         ," ).append("\n"); 
		query.append("           SUM(AP_WGT)            AS AP_WGT        ," ).append("\n"); 
		query.append("           SUM(BK_TEU)            AS BK_TEU        ," ).append("\n"); 
		query.append("           SUM(BK_20)             AS BK_20         ," ).append("\n"); 
		query.append("           SUM(BK_40)             AS BK_40         ," ).append("\n"); 
		query.append("           SUM(BK_HC)             AS BK_HC         ," ).append("\n"); 
		query.append("           SUM(BK_45)             AS BK_45         ," ).append("\n"); 
		query.append("           SUM(BK_53)             AS BK_53         ," ).append("\n"); 
		query.append("           SUM(BK_RF)             AS BK_RF         ," ).append("\n"); 
		query.append("           SUM(BK_WGT)            AS BK_WGT        ," ).append("\n"); 
		query.append("           SUM(BT_TEU)            AS BT_TEU        ," ).append("\n"); 
		query.append("           SUM(BT_20)             AS BT_20         ," ).append("\n"); 
		query.append("           SUM(BT_40)             AS BT_40         ," ).append("\n"); 
		query.append("           SUM(BT_HC)             AS BT_HC         ," ).append("\n"); 
		query.append("           SUM(BT_45)             AS BT_45         ," ).append("\n"); 
		query.append("           SUM(BT_53)             AS BT_53         ," ).append("\n"); 
		query.append("           SUM(BT_RF)             AS BT_RF         ," ).append("\n"); 
		query.append("           SUM(BT_WGT)            AS BT_WGT        ," ).append("\n"); 
		query.append("           SUM(GT_TEU)            AS GT_TEU        ," ).append("\n"); 
		query.append("           SUM(GT_HC)             AS GT_HC         ," ).append("\n"); 
		query.append("           SUM(GT_45)             AS GT_45         ," ).append("\n"); 
		query.append("           SUM(GT_53)             AS GT_53         ," ).append("\n"); 
		query.append("           SUM(GT_RF)             AS GT_RF         ," ).append("\n"); 
		query.append("           SUM(GT_WGT)            AS GT_WGT        ," ).append("\n"); 
		query.append("           SUM(AP_MD)             AS AP_MD         ," ).append("\n"); 
		query.append("           NVL(MAX(CFM_FLG), 'N') AS CFM_FLG       ," ).append("\n"); 
		query.append("           COUNT(DISTINCT DECODE(POD_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD||POD_CD))) + DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD))), 0) AS CHILD_CNT," ).append("\n"); 
		query.append("           COUNT(DISTINCT DECODE(POD_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD||POD_CD))) AS LEAF_CNT," ).append("\n"); 
		query.append("           DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD))), 0) AS POD_CNT," ).append("\n"); 
		query.append("           DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1) AS LVL," ).append("\n"); 
		query.append("           MIN(PAST) AS PAST," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           SUM(NQTA_MD) AS NQTA_MD," ).append("\n"); 
		query.append("           SUM(NCFM_MD) AS NCFM_MD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("              SELECT CTRL_LVL" ).append("\n"); 
		query.append("                FROM REP_VVDS" ).append("\n"); 
		query.append("           ) AS CTRL_LVL," ).append("\n"); 
		query.append("           MAX(SPC_CTRL_ALOC_RMK)     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("           MAX(SPC_CTRL_ALOC_POL_RMK) AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("           MAX(SPC_CTRL_ALOC_POD_RMK) AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("      FROM ALL_DATA" ).append("\n"); 
		query.append("      WHERE RHQ_CD LIKE BASE_RHQ_CD||'%' OR AREA_CD LIKE BASE_RHQ_CD||'%'" ).append("\n"); 
		query.append("  GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                           (IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, POL_CD, POL_SEQ, POD_CD, POD_SEQ, LST_LODG_PORT_ETD_DT, LST_LODG_PORT_CD)," ).append("\n"); 
		query.append("                           (IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, POL_CD, POL_SEQ)," ).append("\n"); 
		query.append("                           (IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD)," ).append("\n"); 
		query.append("                           (IOC_CD, BASE_RHQ_CD)" ).append("\n"); 
		query.append("                         )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(" --SELECT DECODE(IOC_CD, 'E', 0, 1) * DECODE(NQTA_MD * NCFM_MD, 0, 0, 1) * DECODE(DECODE(IOC_CD, 'I', 3, 'T', 3, DECODE(REP_TRD_CD, TRD_CD, DECODE(CTRL_LVL, 'O', 1, 'L', 2, 'D', 3), 3)), LVL, 1, 0) AS EDIT ," ).append("\n"); 
		query.append("-- DECODE(IOC_CD, 'E', 0, 1) * DECODE(NQTA_MD * NCFM_MD, 0, 0, 1) * DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE(CTRL_LVL, 'O', 1, 'L', 2, 'D', 3), 3), LVL, 1, 0) AS EDIT," ).append("\n"); 
		query.append("  SELECT DECODE(IOC_CD, 'E', 0, 1) * DECODE(NQTA_MD * NCFM_MD, 0, 0, 1) * DECODE(DECODE(IOC_CD, 'I', 3, 'T', 3, DECODE(CTRL_LVL, 'O', 1, 'L', 2, 'D', 3)), LVL, 1, 0) AS EDIT ," ).append("\n"); 
		query.append("         REP_TRD_CD    ," ).append("\n"); 
		query.append("         REP_SUB_TRD_CD," ).append("\n"); 
		query.append("         TRD_CD        ," ).append("\n"); 
		query.append("         SUB_TRD_CD    ," ).append("\n"); 
		query.append("         DECODE(IOC_CD, 'O', 'OCN', 'I', 'IPC', 'T', 'T/S', 'E', 'EQ', 'OT', 'T-OCN', 'IT', 'T-IPC', 'TT', 'T-T/S') AS IOC_CD," ).append("\n"); 
		query.append("         BASE_RHQ_CD," ).append("\n"); 
		query.append("         DECODE(RHQ_CD, 'NULL', '', RHQ_CD) AS RHQ_CD," ).append("\n"); 
		query.append("         DECODE(SUBSTR(IOC_CD, 1, 1), 'T', RHQ_CD, NVL(AREA_CD, DECODE(RHQ_CD, 'NULL', '', RHQ_CD))) AS AREA_CD," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("         DECODE(RHQ_CD, NULL, '+', BASE_RHQ_CD, OFC_CD, DECODE(IOC_CD, 'T', '', 'TT', '', OFC_CD)) AS OFC_CD," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("         NVL(POL_CD, '+') AS POL_CD ," ).append("\n"); 
		query.append("         NVL(POD_CD, '+') AS POD_CD ," ).append("\n"); 
		query.append("         NVL(POL_SEQ, -1) AS POL_SEQ," ).append("\n"); 
		query.append("         NVL(POD_SEQ, -1) AS POD_SEQ," ).append("\n"); 
		query.append("         DECODE(SIGN(LVL - 1), 1, POL_SKIP, 0) AS POL_SKIP," ).append("\n"); 
		query.append("         DECODE(LVL, 3, POD_SKIP, 0)           AS POD_SKIP," ).append("\n"); 
		query.append("         BKG_QUOTA," ).append("\n"); 
		query.append("         (" ).append("\n"); 
		query.append("            SELECT (SUM(BAR.BKG_REV) - SUM(BAR.ESTM_CM_COST_AMT)) / SUM(BAR.BKG_TTL_QTY)" ).append("\n"); 
		query.append("              FROM SPC_BKG_AVG_REV BAR," ).append("\n"); 
		query.append("                   REP_VVDS        P" ).append("\n"); 
		query.append("             WHERE BAR.OFC_KND_CD IN ('1', '2', '3')" ).append("\n"); 
		query.append("               AND BAR.RLANE_CD    = P.RLANE_CD" ).append("\n"); 
		query.append("               AND BAR.DIR_CD      = P.DIR_CD" ).append("\n"); 
		query.append("               AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("               AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("               AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("               AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("               AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("               AND BAR.TRD_CD NOT IN ('IES', 'IMS')" ).append("\n"); 
		query.append("               AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("         ) AS CMB," ).append("\n"); 
		query.append("         --fc_ttl_teu媛?異붽?(TEU + HC*2 + 45FT*2), fcast = 1(Fcast+BKG), 2(Fcast Only), 3(BKG only)" ).append("\n"); 
		query.append("         (DECODE(@[fcast], '3', NVL(FC_TEU, 0)" ).append("\n"); 
		query.append("                         , '2', NVL(FC_TEU, 0) + NVL(FC_HC, 0) * SPC_GET_HC_RT_BSA_FNC(Z.TRD_CD, Z.RLANE_CD ,Z.SKD_DIR_CD ,Z.VSL_CD ,SUBSTR(@[vvd], 5, 4),'D5') + NVL(FC_45, 0) * SPC_GET_HC_RT_BSA_FNC(Z.TRD_CD, Z.RLANE_CD ,Z.SKD_DIR_CD ,Z.VSL_CD ,SUBSTR(@[vvd], 5, 4),'D7') + NVL(FC_53, 0) * 2" ).append("\n"); 
		query.append("                         , '1', DECODE(PAST, 'Y', NVL(FC_TEU, 0)" ).append("\n"); 
		query.append("                                                , NVL(FC_TEU, 0) + NVL(FC_HC, 0) * SPC_GET_HC_RT_BSA_FNC(Z.TRD_CD, Z.RLANE_CD ,Z.SKD_DIR_CD ,Z.VSL_CD , SUBSTR(@[vvd], 5, 4), 'D5') + NVL(FC_45, 0) * SPC_GET_HC_RT_BSA_FNC(Z.TRD_CD, Z.RLANE_CD ,Z.SKD_DIR_CD ,Z.VSL_CD , SUBSTR(@[vvd], 5, 4), 'D7') + NVL(FC_53, 0) * 2))" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("         ) AS FC_TTL_TEU," ).append("\n"); 
		query.append("         FC_TEU   ," ).append("\n"); 
		query.append("         FC_HC    ," ).append("\n"); 
		query.append("         FC_45    ," ).append("\n"); 
		query.append("         FC_53    ," ).append("\n"); 
		query.append("         FC_RF    ," ).append("\n"); 
		query.append("         FC_WGT   ," ).append("\n"); 
		query.append("         UG_TEU   ," ).append("\n"); 
		query.append("         UG_HC    ," ).append("\n"); 
		query.append("         UG_45    ," ).append("\n"); 
		query.append("         UG_53    ," ).append("\n"); 
		query.append("         UG_RF    ," ).append("\n"); 
		query.append("         UG_WGT   ," ).append("\n"); 
		query.append("         MR_TEU   ," ).append("\n"); 
		query.append("         MR_HC    ," ).append("\n"); 
		query.append("         MR_45    ," ).append("\n"); 
		query.append("         MR_53    ," ).append("\n"); 
		query.append("         MR_RF    ," ).append("\n"); 
		query.append("         MR_WGT   ," ).append("\n"); 
		query.append("         AP_TEU   ," ).append("\n"); 
		query.append("         AP_HC    ," ).append("\n"); 
		query.append("         AP_45    ," ).append("\n"); 
		query.append("         AP_53    ," ).append("\n"); 
		query.append("         AP_RF    ," ).append("\n"); 
		query.append("         AP_WGT   ," ).append("\n"); 
		query.append("         BK_TEU   ," ).append("\n"); 
		query.append("         BK_20    ," ).append("\n"); 
		query.append("         BK_40    ," ).append("\n"); 
		query.append("         BK_HC    ," ).append("\n"); 
		query.append("         BK_45    ," ).append("\n"); 
		query.append("         BK_53    ," ).append("\n"); 
		query.append("         BK_RF    ," ).append("\n"); 
		query.append("         BK_WGT   ," ).append("\n"); 
		query.append("         BT_TEU   ," ).append("\n"); 
		query.append("         BT_20    ," ).append("\n"); 
		query.append("         BT_40    ," ).append("\n"); 
		query.append("         BT_HC    ," ).append("\n"); 
		query.append("         BT_45    ," ).append("\n"); 
		query.append("         BT_53    ," ).append("\n"); 
		query.append("         BT_RF    ," ).append("\n"); 
		query.append("         BT_WGT   ," ).append("\n"); 
		query.append("         GT_TEU   ," ).append("\n"); 
		query.append("         GT_HC    ," ).append("\n"); 
		query.append("         GT_45    ," ).append("\n"); 
		query.append("         GT_53    ," ).append("\n"); 
		query.append("         GT_RF    ," ).append("\n"); 
		query.append("         GT_WGT   ," ).append("\n"); 
		query.append("         AP_MD    ," ).append("\n"); 
		query.append("         CFM_FLG  ," ).append("\n"); 
		query.append("         CHILD_CNT," ).append("\n"); 
		query.append("         LEAF_CNT ," ).append("\n"); 
		query.append("         POD_CNT  ," ).append("\n"); 
		query.append("         LVL      ," ).append("\n"); 
		query.append("         PAST     ," ).append("\n"); 
		query.append("         (" ).append("\n"); 
		query.append("           CASE" ).append("\n"); 
		query.append("                WHEN POL_CD IS NULL AND POD_CD IS NULL  AND LVL <> 0 THEN SPC_CTRL_ALOC_RMK" ).append("\n"); 
		query.append("                                                                     ELSE NULL" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("         ) AS SPC_CTRL_ALOC_RMK," ).append("\n"); 
		query.append("         (" ).append("\n"); 
		query.append("           CASE" ).append("\n"); 
		query.append("                WHEN POL_CD IS NOT NULL AND POD_CD IS NULL THEN SPC_CTRL_ALOC_POL_RMK " ).append("\n"); 
		query.append("                                                           ELSE NULL" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("         ) AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("         (" ).append("\n"); 
		query.append("           CASE" ).append("\n"); 
		query.append("                WHEN POD_CD IS NOT NULL THEN SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                                        ELSE NULL" ).append("\n"); 
		query.append("            END" ).append("\n"); 
		query.append("         ) AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("    FROM HRCH_DATA Z" ).append("\n"); 
		query.append("   WHERE LVL < 2 OR (NQTA_MD > 0 AND NCFM_MD > 0) " ).append("\n"); 
		query.append("ORDER BY DECODE(Z.IOC_CD, 'O', 1, 'I', 2, 'E', 3, 'T', 4, 'OT', 5, 'IT', 6, 'TT', 7)," ).append("\n"); 
		query.append("         DECODE(Z.RHQ_CD, NULL, 9, Z.BASE_RHQ_CD, 1, 2)," ).append("\n"); 
		query.append("         NVL(Z.RHQ_CD , 'A')," ).append("\n"); 
		query.append("         NVL(Z.AREA_CD, 'A')," ).append("\n"); 
		query.append("         NVL(Z.OFC_CD , 'A')," ).append("\n"); 
		query.append("         NVL(Z.POL_SEQ,  -1)," ).append("\n"); 
		query.append("         NVL(Z.POD_SEQ,  -1)" ).append("\n"); 

	}
}