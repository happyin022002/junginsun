<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaAdjustmentRHQDBDAOInsertMonthlyQuotaOfficeAddB0162CSQL">
			<desc><![CDATA[누락 점소 SAQ_MON_QTA_OFC_ADD, SAQ_MON_QTA_OFC_ADD_MIX에 Insert]]></desc>
			<sql><![CDATA[
INSERT INTO SAQ_MON_QTA_OFC_ADD_MIX(
         BSE_YR            , BSE_QTR_CD     , TRD_CD         , DIR_CD          ,
         RLANE_CD          , CTRT_RGN_OFC_CD, SLS_RGN_OFC_CD , POL_CD          ,
         POD_CD            , SUB_TRD_CD     , CTRT_RHQ_CD    , CTRT_AQ_CD      ,
         SLS_RHQ_CD        , SLS_AQ_CD      , LOD_QTY        , CM_UC_AMT       ,
         OPFIT_UC_AMT      , RA_CM_UC_AMT   , RA_OPFIT_UC_AMT, FULL_STVG_UC_AMT,
         FULL_TRSP_UC_AMT  , MTY_STVG_UC_AMT, MTY_TRSP_UC_AMT, CNTR_FX_UC_AMT  ,
         CHSS_FX_UC_AMT    , AGN_COMM_UT_AMT, BIZ_ACT_UC_AMT , SLT_MGMT_UC_AMT ,
         OWN_VOL_ACT_UC_AMT, STP_UC_AMT     , EQ_HLD_UC_AMT  , EQ_REPO_UC_AMT  ,
         EQ_SIM_UC_AMT     , CRE_USR_ID     , CRE_DT         , UPD_USR_ID      ,
         UPD_DT )
 WITH INPUT_PARAMS AS (
                  SELECT @[mqta_step_cd] AS MQTA_STEP_CD,
                         @[bse_yr] AS BSE_YR      ,
                         @[bse_qtr_cd] AS BSE_QTR_CD  ,
                         @[trd_cd] AS TRD_CD      ,
                         @[dir_cd] AS DIR_CD      ,
                         MIN(CONV_DIR_CD) AS CONV_DIR_CD,
                         @[rhq_cd] AS RHQ_CD      ,
                         @[rlane_cd] AS RLANE_CD    ,
                         @[rgn_ofc_cd] AS RGN_OFC_CD  ,
                         @[aq_cd] AS AQ_CD       ,
                         @[sub_trd_cd] AS SUB_TRD_CD
                    FROM SAQ_MON_DIR_CONV
                   WHERE BSE_YR     = @[bse_yr]
                     AND BSE_QTR_CD = @[bse_qtr_cd]
                     AND TRD_CD     = @[trd_cd]
                     AND SUB_TRD_CD = @[sub_trd_cd]
                     AND RLANE_CD   = @[rlane_cd]
                     AND DIR_CD     = @[dir_cd]   ),
      SEL_DATA AS (
                  SELECT CASE WHEN BB.CNT   > 0 THEN 'BB'
                              WHEN LANE.CNT > 0 THEN 'LANE'
                              WHEN SUB.CNT  > 0 THEN 'SUB'
                              WHEN TRD.CNT  > 0 THEN 'TRD'
                          END AS DATA
                    FROM (
                           SELECT COUNT(*) AS CNT
                             FROM SAQ_AVG_COST_OFC OFC,
                                  INPUT_PARAMS     INP,
                                  (
                                    SELECT APPL_YR, APPL_MON
                                      FROM SAQ_COST_APPL_BSE A,
                                           INPUT_PARAMS      B
                                     WHERE A.BSE_YR     = B.BSE_YR
                                       AND A.BSE_QTR_CD = B.BSE_QTR_CD
                                       AND COST_DIV_CD  = '30'          ) APPL
                            WHERE OFC.BSE_YR          = APPL.APPL_YR
                              AND OFC.BSE_MON         = APPL.APPL_MON
                              AND OFC.TRD_CD          = INP.TRD_CD
                              AND OFC.DIR_CD          = DECODE(INP.CONV_DIR_CD, '', INP.DIR_CD, CONV_DIR_CD)
                              AND OFC.RLANE_CD        = INP.RLANE_CD
                              AND OFC.SLS_RGN_OFC_CD  = DECODE(INP.MQTA_STEP_CD, '08', INP.RGN_OFC_CD     , OFC.SLS_RGN_OFC_CD)
                              AND OFC.CTRT_RGN_OFC_CD = DECODE(INP.MQTA_STEP_CD, '08', OFC.CTRT_RGN_OFC_CD, INP.RGN_OFC_CD    )
                         ) BB,
                         (
                           SELECT COUNT(*) AS CNT
                             FROM SAQ_AVG_COST_OFC OFC,
                                  INPUT_PARAMS     INP,
                                  (
                                    SELECT APPL_YR, APPL_MON
                                      FROM SAQ_COST_APPL_BSE A,
                                           INPUT_PARAMS      B
                                     WHERE A.BSE_YR     = B.BSE_YR
                                       AND A.BSE_QTR_CD = B.BSE_QTR_CD
                                       AND COST_DIV_CD  = '30'          ) APPL
                            WHERE OFC.BSE_YR   = APPL.APPL_YR
                              AND OFC.BSE_MON  = APPL.APPL_MON
                              AND OFC.TRD_CD   = INP.TRD_CD
                              AND OFC.DIR_CD   = DECODE(INP.CONV_DIR_CD, '', INP.DIR_CD, CONV_DIR_CD)
                              AND OFC.RLANE_CD = INP.RLANE_CD
                         ) LANE,
                         (
                           SELECT COUNT(*) AS CNT
                             FROM SAQ_AVG_COST_OFC OFC,
                                  INPUT_PARAMS     INP,
                                  (
                                    SELECT APPL_YR, APPL_MON
                                      FROM SAQ_COST_APPL_BSE A,
                                           INPUT_PARAMS      B
                                     WHERE A.BSE_YR     = B.BSE_YR
                                       AND A.BSE_QTR_CD = B.BSE_QTR_CD
                                       AND COST_DIV_CD  = '30'          ) APPL
                            WHERE OFC.BSE_YR     = APPL.APPL_YR
                              AND OFC.BSE_MON    = APPL.APPL_MON
                              AND OFC.TRD_CD     = INP.TRD_CD
                              AND OFC.DIR_CD     = DECODE(INP.CONV_DIR_CD, '', INP.DIR_CD, CONV_DIR_CD)
                              AND OFC.SUB_TRD_CD = INP.SUB_TRD_CD
                         ) SUB,
                         (
                           SELECT COUNT(*) AS CNT
                             FROM SAQ_AVG_COST_OFC OFC,
                                  INPUT_PARAMS     INP,
                                  (
                                    SELECT APPL_YR, APPL_MON
                                      FROM SAQ_COST_APPL_BSE A,
                                           INPUT_PARAMS      B
                                     WHERE A.BSE_YR     = B.BSE_YR
                                       AND A.BSE_QTR_CD = B.BSE_QTR_CD
                                       AND COST_DIV_CD  = '30'          ) APPL
                            WHERE OFC.BSE_YR  = APPL.APPL_YR
                              AND OFC.BSE_MON = APPL.APPL_MON
                              AND OFC.TRD_CD  = INP.TRD_CD
                              AND OFC.DIR_CD  = DECODE(INP.CONV_DIR_CD, '', INP.DIR_CD, CONV_DIR_CD)
                         ) TRD                             )
#if(${unit_cost_flag} == 'Y')
 SELECT BSE_YR            , BSE_QTR_CD      , TRD_CD         ,
        DIR_CD            , RLANE_CD        , CTRT_RGN_OFC_CD,
        SLS_RGN_OFC_CD    , POL_CD          , POD_CD         ,
        SUB_TRD_CD        , CTRT_RHQ_CD     , CTRT_AQ_CD     ,
        SLS_RHQ_CD        , SLS_AQ_CD       , LOD_QTY        ,
        CM_UC_AMT       + TML_VOL_INCNT_AMT - MISC_REV_AMT,
        OPFIT_UC_AMT      ,
        RA_CM_UC_AMT    + TML_VOL_INCNT_AMT - MISC_REV_AMT,
        RA_OPFIT_UC_AMT - UC_AMT + TML_VOL_INCNT_AMT - MISC_REV_AMT,
        FULL_STVG_UC_AMT  , FULL_TRSP_UC_AMT, MTY_STVG_UC_AMT,
        MTY_TRSP_UC_AMT   , CNTR_FX_UC_AMT  , CHSS_FX_UC_AMT ,
        AGN_COMM_UT_AMT   , BIZ_ACT_UC_AMT  , SLT_MGMT_UC_AMT,
        OWN_VOL_ACT_UC_AMT, STP_UC_AMT      , EQ_HLD_UC_AMT  ,
        EQ_REPO_UC_AMT    , EQ_SIM_UC_AMT   , @[cre_usr_id] AS CRE_USR_ID,
        SYSDATE           , @[upd_usr_id] AS UPD_USR_ID , SYSDATE
   FROM (
          SELECT BSE_YR    , BSE_QTR_CD     , TRD_CD    , DIR_CD,
                 RLANE_CD  , CTRT_RGN_OFC_CD, POL_CD    , POD_CD,
                 SUB_TRD_CD, CTRT_RHQ_CD    , CTRT_AQ_CD,
                 DECODE(SLS_CHK.CHK, 0, SLS_RGN_OFC_CD, CTRT_RGN_OFC_CD   ) AS SLS_RGN_OFC_CD,
                 DECODE(SLS_CHK.CHK, 0, INS.SLS_RHQ_CD, SLS_CHK.SLS_RHQ_CD) AS SLS_RHQ_CD    ,
                 DECODE(SLS_CHK.CHK, 0, INS.SLS_AQ_CD , SLS_CHK.SLS_AQ_CD ) AS SLS_AQ_CD     ,
                 SUM(LOD_QTY)                                                                 AS LOD_QTY           ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * CM_UC_AMT)          / SUM(LOD_QTY)) AS CM_UC_AMT         ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * OPFIT_UC_AMT)       / SUM(LOD_QTY)) AS OPFIT_UC_AMT      ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * RA_CM_UC_AMT)       / SUM(LOD_QTY)) AS RA_CM_UC_AMT      ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * RA_OPFIT_UC_AMT)    / SUM(LOD_QTY)) AS RA_OPFIT_UC_AMT   ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * FULL_STVG_UC_AMT)   / SUM(LOD_QTY)) AS FULL_STVG_UC_AMT  ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * FULL_TRSP_UC_AMT)   / SUM(LOD_QTY)) AS FULL_TRSP_UC_AMT  ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * MTY_STVG_UC_AMT)    / SUM(LOD_QTY)) AS MTY_STVG_UC_AMT   ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * MTY_TRSP_UC_AMT)    / SUM(LOD_QTY)) AS MTY_TRSP_UC_AMT   ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * CNTR_FX_UC_AMT)     / SUM(LOD_QTY)) AS CNTR_FX_UC_AMT    ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * CHSS_FX_UC_AMT)     / SUM(LOD_QTY)) AS CHSS_FX_UC_AMT    ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * AGN_COMM_UT_AMT)    / SUM(LOD_QTY)) AS AGN_COMM_UT_AMT   ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * BIZ_ACT_UC_AMT)     / SUM(LOD_QTY)) AS BIZ_ACT_UC_AMT    ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * SLT_MGMT_UC_AMT)    / SUM(LOD_QTY)) AS SLT_MGMT_UC_AMT   ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * OWN_VOL_ACT_UC_AMT) / SUM(LOD_QTY)) AS OWN_VOL_ACT_UC_AMT,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * STP_UC_AMT)         / SUM(LOD_QTY)) AS STP_UC_AMT        ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * EQ_HLD_UC_AMT)      / SUM(LOD_QTY)) AS EQ_HLD_UC_AMT     ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * EQ_REPO_UC_AMT)     / SUM(LOD_QTY)) AS EQ_REPO_UC_AMT    ,
                 DECODE(SUM(LOD_QTY), 0, 0, SUM(LOD_QTY * EQ_SIM_UC_AMT)      / SUM(LOD_QTY)) AS EQ_SIM_UC_AMT     ,
                 DMDT_UT_AMT.AMT       AS UC_AMT           ,
                 TML_VOL_INCNT_AMT.AMT AS TML_VOL_INCNT_AMT,
                 MISC_REV_AMT.AMT      AS MISC_REV_AMT
            FROM (
                   SELECT INP.BSE_YR             , INP.BSE_QTR_CD      ,
                          OFC.TRD_CD             , INP.RLANE_CD        ,
                          INP.DIR_CD AS DIR_CD         ,
                          DECODE(INP.MQTA_STEP_CD, '08', '000000'      , INP.RGN_OFC_CD     ) AS CTRT_RGN_OFC_CD,
                          DECODE(INP.MQTA_STEP_CD, '08', INP.RGN_OFC_CD, OFC.SLS_RGN_OFC_CD ) AS SLS_RGN_OFC_CD ,
                          DECODE(INP.MQTA_STEP_CD, '08', '000000'      , RHQ.RHQ_CD         ) AS CTRT_RHQ_CD    ,
                          DECODE(INP.MQTA_STEP_CD, '08', '000000'      , INP.AQ_CD          ) AS CTRT_AQ_CD     ,
                          DECODE(INP.MQTA_STEP_CD, '08', RHQ.RHQ_CD    , OFC.SLS_RHQ_CD     ) AS SLS_RHQ_CD     ,
                          DECODE(INP.MQTA_STEP_CD, '08', INP.AQ_CD     , OFC.SLS_AQ_CD      ) AS SLS_AQ_CD      ,
                          OFC.POL_CD             , OFC.POD_CD          , INP.SUB_TRD_CD        ,
                          OFC.LOD_QTY            , OFC.CM_UC_AMT       , OFC.OPFIT_UC_AMT      ,
                          OFC.RA_CM_UC_AMT       , OFC.RA_OPFIT_UC_AMT , OFC.FULL_STVG_UC_AMT  ,
                          OFC.FULL_TRSP_UC_AMT   , OFC.MTY_STVG_UC_AMT , OFC.MTY_TRSP_UC_AMT   ,
                          OFC.CNTR_FX_UC_AMT     , OFC.CHSS_FX_UC_AMT  , OFC.AGN_COMM_UT_AMT   ,
                          OFC.BIZ_ACT_UC_AMT     , OFC.SLT_MGMT_UC_AMT , OFC.OWN_VOL_ACT_UC_AMT,
                          OFC.STP_UC_AMT         , OFC.EQ_HLD_UC_AMT   , OFC.EQ_REPO_UC_AMT    ,
                          OFC.EQ_SIM_UC_AMT
                     FROM SAQ_AVG_COST_OFC OFC,
                          INPUT_PARAMS     INP,
                          SEL_DATA         SEL,
                          (
                            SELECT APPL_YR, APPL_MON
                              FROM SAQ_COST_APPL_BSE A,
                                   INPUT_PARAMS      B
                             WHERE A.BSE_YR     = B.BSE_YR
                               AND A.BSE_QTR_CD = B.BSE_QTR_CD
                               AND COST_DIV_CD  = '30'              ) APPL,
                          (
                            SELECT DISTINCT N2ND_PRNT_OFC_CD AS RHQ_CD
                              FROM SAQ_ORGANIZATION_V A,
                                   INPUT_PARAMS       B
                             WHERE N4TH_PRNT_OFC_CD = B.RGN_OFC_CD  ) RHQ
                    WHERE OFC.BSE_YR          = APPL.APPL_YR
                      AND OFC.BSE_MON         = APPL.APPL_MON
                      AND OFC.DIR_CD          = DECODE(INP.CONV_DIR_CD, '', INP.DIR_CD, CONV_DIR_CD)
                      AND OFC.RLANE_CD        = DECODE(SEL.DATA, 'BB' , INP.RLANE_CD  , 'LANE', INP.RLANE_CD , OFC.RLANE_CD)
                      AND OFC.SUB_TRD_CD      = DECODE(SEL.DATA, 'SUB', INP.SUB_TRD_CD, OFC.SUB_TRD_CD)
                      AND OFC.TRD_CD          = DECODE(SEL.DATA, 'SUB', OFC.TRD_CD    , INP.TRD_CD    )
                      AND OFC.SLS_RGN_OFC_CD  = DECODE(SEL.DATA, 'BB' , DECODE(INP.MQTA_STEP_CD, '08', INP.RGN_OFC_CD     , OFC.SLS_RGN_OFC_CD), OFC.SLS_RGN_OFC_CD )
                      AND OFC.CTRT_RGN_OFC_CD = DECODE(SEL.DATA, 'BB' , DECODE(INP.MQTA_STEP_CD, '08', OFC.CTRT_RGN_OFC_CD, INP.RGN_OFC_CD    ), OFC.CTRT_RGN_OFC_CD)   ) INS,
		-- 04 Step에서 입력한 rgn_ofc_cd가 sls_rgn_ofc_cd에 존재 할 경우를 위한 로직
                 (
                   SELECT DECODE(MIN(CTRT_RGN_OFC_CD), '000000', 0, COUNT(*)) AS CHK,
                          MIN(SLS_RHQ_CD) AS SLS_RHQ_CD,
                          MIN(SLS_AQ_CD)  AS SLS_AQ_CD
                     FROM (
                            SELECT DISTINCT DECODE(INP.MQTA_STEP_CD, '08', '000000'      , INP.RGN_OFC_CD    ) AS CTRT_RGN_OFC_CD,
                                            DECODE(INP.MQTA_STEP_CD, '08', INP.RGN_OFC_CD, OFC.SLS_RGN_OFC_CD) AS SLS_RGN_OFC_CD ,
                                            DECODE(INP.MQTA_STEP_CD, '08', RHQ.RHQ_CD    , OFC.SLS_RHQ_CD    ) AS SLS_RHQ_CD     ,
                                            DECODE(INP.MQTA_STEP_CD, '08', INP.AQ_CD     , OFC.SLS_AQ_CD     ) AS SLS_AQ_CD
                              FROM SAQ_AVG_COST_OFC OFC,
                                   INPUT_PARAMS     INP,
                                   SEL_DATA         SEL,
                                   (
                                     SELECT APPL_YR, APPL_MON
                                       FROM SAQ_COST_APPL_BSE A,
                                            INPUT_PARAMS      B
                                      WHERE A.BSE_YR     = B.BSE_YR
                                        AND A.BSE_QTR_CD = B.BSE_QTR_CD
                                        AND COST_DIV_CD  = '30'              ) APPL,
                                   (
                                     SELECT DISTINCT N2ND_PRNT_OFC_CD AS RHQ_CD
                                       FROM SAQ_ORGANIZATION_V A,
                                            INPUT_PARAMS       B
                                      WHERE N4TH_PRNT_OFC_CD = B.RGN_OFC_CD  ) RHQ
                             WHERE OFC.BSE_YR          = APPL.APPL_YR
                               AND OFC.BSE_MON         = APPL.APPL_MON
                               AND OFC.DIR_CD          = INP.DIR_CD
                               AND OFC.RLANE_CD        = DECODE(SEL.DATA, 'BB' , INP.RLANE_CD  , 'LANE', INP.RLANE_CD , OFC.RLANE_CD)
                               AND OFC.SUB_TRD_CD      = DECODE(SEL.DATA, 'SUB', INP.SUB_TRD_CD, OFC.SUB_TRD_CD)
                               AND OFC.TRD_CD          = DECODE(SEL.DATA, 'SUB', OFC.TRD_CD    , INP.TRD_CD    )
                               AND OFC.SLS_RGN_OFC_CD  = DECODE(SEL.DATA, 'BB' , DECODE(INP.MQTA_STEP_CD, '08', INP.RGN_OFC_CD     , OFC.SLS_RGN_OFC_CD), OFC.SLS_RGN_OFC_CD )
                               AND OFC.CTRT_RGN_OFC_CD = DECODE(SEL.DATA, 'BB' , DECODE(INP.MQTA_STEP_CD, '08', OFC.CTRT_RGN_OFC_CD, INP.RGN_OFC_CD    ), OFC.CTRT_RGN_OFC_CD)  )
                    WHERE CTRT_RGN_OFC_CD = DECODE(CTRT_RGN_OFC_CD, '000000', CTRT_RGN_OFC_CD, SLS_RGN_OFC_CD) ) SLS_CHK,
		-- DEM/DET amt 구함
                 (
                   SELECT DECODE(MAX(UC_AMT), '', 0, MAX(UC_AMT)) AS AMT
                     FROM COA_DMDT_N3RD_PTY
                    WHERE STND_COST_CD = '43201011'
                      AND CNTR_TPSZ_CD = 'TEU'
                      AND COST_YRMON   = ( SELECT APPL_YR||APPL_MON
                                             FROM SAQ_COST_APPL_BSE A,
                                                  INPUT_PARAMS      B
                                            WHERE A.BSE_YR     = B.BSE_YR
                                              AND A.BSE_QTR_CD = B.BSE_QTR_CD
                                              AND COST_DIV_CD  = '10' )         ) DMDT_UT_AMT,
		-- Terminal Volume Incentive amt 구함
                 (
                   SELECT DECODE(MIN(UC_AMT), '', 0, MIN(UC_AMT)) AS AMT
                     FROM COA_DMDT_N3RD_PTY
                    WHERE STND_COST_CD = '51601011'
                      AND CNTR_TPSZ_CD = 'TEU'
                      AND COST_YRMON   = ( SELECT APPL_YR||APPL_MON
                                             FROM SAQ_COST_APPL_BSE A,
                                                  INPUT_PARAMS      B
                                            WHERE A.BSE_YR     = B.BSE_YR
                                              AND A.BSE_QTR_CD = B.BSE_QTR_CD
                                              AND COST_DIV_CD  = '10' )         ) TML_VOL_INCNT_AMT,
		-- Misc Rev amt 구함
                 (
                   SELECT DECODE(MAX(OFC.RLANE_CD), 'RBCCO', 0, DECODE(MAX(SAQ_MISC_REV_AMT), '', 0, MAX(SAQ_MISC_REV_AMT))) AS AMT
                     FROM SAQ_AVG_COST_OFC OFC,
                          INPUT_PARAMS     INP,
                          (
                            SELECT APPL_YR, APPL_MON
                              FROM SAQ_COST_APPL_BSE A,
                                   INPUT_PARAMS      B
                             WHERE A.BSE_YR     = B.BSE_YR
                               AND A.BSE_QTR_CD = B.BSE_QTR_CD
                               AND COST_DIV_CD  = '30'              ) APPL
                    WHERE OFC.BSE_YR     = APPL.APPL_YR
                      AND OFC.BSE_MON    = APPL.APPL_MON
                      AND OFC.DIR_CD     = DECODE(INP.CONV_DIR_CD, '', INP.DIR_CD, CONV_DIR_CD)
                      AND OFC.RLANE_CD   = INP.RLANE_CD
                      AND OFC.SUB_TRD_CD = INP.SUB_TRD_CD
                      AND OFC.TRD_CD     = INP.TRD_CD                           ) MISC_REV_AMT
        GROUP BY BSE_YR    , BSE_QTR_CD     , TRD_CD    , DIR_CD           ,
                 RLANE_CD  , CTRT_RGN_OFC_CD, POL_CD    , POD_CD           ,
                 SUB_TRD_CD, CTRT_RHQ_CD    , CTRT_AQ_CD, DMDT_UT_AMT.AMT  ,
                 TML_VOL_INCNT_AMT.AMT, MISC_REV_AMT.AMT,
                 DECODE(SLS_CHK.CHK, 0, SLS_RGN_OFC_CD, CTRT_RGN_OFC_CD   ),
                 DECODE(SLS_CHK.CHK, 0, INS.SLS_RHQ_CD, SLS_CHK.SLS_RHQ_CD),
                 DECODE(SLS_CHK.CHK, 0, INS.SLS_AQ_CD , SLS_CHK.SLS_AQ_CD )
        )
#else
SELECT  BSE_YR
       ,BSE_QTR_CD
       ,TRD_CD
       ,DIR_CD
       ,RLANE_CD
       ,DECODE(MQTA_STEP_CD, '04', RGN_OFC_CD, '000000')
       ,DECODE(MQTA_STEP_CD, '08', RGN_OFC_CD, '000000')
       ,'00000'
       ,'00000'
       ,SUB_TRD_CD
       ,DECODE(MQTA_STEP_CD, '04', RHQ_CD)
       ,DECODE(MQTA_STEP_CD, '04', AQ_CD )
       ,DECODE(MQTA_STEP_CD, '08', RHQ_CD)
       ,DECODE(MQTA_STEP_CD, '08', AQ_CD )
       ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0
       ,0, 0, 0, 0, 0, 0, 0, 0, 0
       ,@[cre_usr_id] AS CRE_USR_ID
       ,SYSDATE
       ,@[upd_usr_id] AS UPD_USR_ID
       ,SYSDATE
  FROM  INPUT_PARAMS INP
       ,SEL_DATA     SEL
#end			]]></sql>
			<params>
				<param name="mqta_step_cd" type="12" value="" out="N"/>
				<param name="bse_yr" type="12" value="" out="N"/>
				<param name="bse_qtr_cd" type="12" value="" out="N"/>
				<param name="trd_cd" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="rhq_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="rgn_ofc_cd" type="12" value="" out="N"/>
				<param name="aq_cd" type="12" value="" out="N"/>
				<param name="sub_trd_cd" type="12" value="" out="N"/>
				<param name="cre_usr_id" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
