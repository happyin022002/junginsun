<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaAdjustmentSlsRHQDBDAOSearchMonthlyQuotaAdjustmentSlsRhqModify0158ListRSQL">
			<desc><![CDATA[MonthlyQuotaAdjustmentSlsRHQ 세부 조정을 위한 조회]]></desc>
			<sql><![CDATA[
WITH TMP_INPUT_PARMAS AS
   (SELECT
	    MQTA_STEP_CD,
	    BSE_YR,
	    BSE_QTR_CD,
	    @[search_rlane_cd] AS RLANE_CD,
	    TRD_CD,
	    DIR_CD,
	    MQTA_VER_NO,
	    SAQ_STS_CD,
	    GLINE_VER_NO,
	    CRE_OFC_CD,
	    INCL_PORT_FLG
    FROM   SAQ_MON_QTA_STEP_VER
    WHERE  MQTA_STEP_CD = @[mqta_step_cd]
    AND    GLINE_VER_NO = @[gline_ver_no]
    AND    MQTA_VER_NO = @[mqta_ver_no]
    AND    BSE_YR = @[bse_yr]
    AND    BSE_QTR_CD = @[bse_qtr_cd]
    AND    TRD_CD = @[trd_cd]
    AND    DIR_CD = @[dir_cd] )
SELECT SUB_TRD_CD, LANE_GRP, POL_CD, POD_CD, OFC_CD,
	MIN(CASE WHEN CODE='cur' THEN GRP_SEQ END) AS GRP_SEQ1,
	MIN(CASE WHEN CODE='cur' THEN TOT_LOD END) AS LOAD1,
	MIN(CASE WHEN CODE='cur' THEN TOT_RPB END) AS G_RPB1,
	MIN(CASE WHEN CODE='next1' THEN GRP_SEQ END) AS GRP_SEQ2,
	MIN(CASE WHEN CODE='next1' THEN TOT_LOD END) AS LOAD2,
	MIN(CASE WHEN CODE='next1' THEN TOT_RPB END) AS G_RPB2,
	MIN(CASE WHEN CODE='next2' THEN GRP_SEQ END) AS GRP_SEQ3,
	MIN(CASE WHEN CODE='next2' THEN TOT_LOD END) AS LOAD3,
	MIN(CASE WHEN CODE='next2' THEN TOT_RPB END) AS G_RPB3,
	MIN(TOT_BSA) TOT_BSA,
	MIN(RLANE_CD) RLANE_CD,
	MIN(SPRT_GRP_CD) SPRT_GRP_CD,
	MIN(BSA_GRP_CD) BSA_GRP_CD,
	MIN(SLS_RGN_OFC_CD) SLS_RGN_OFC_CD,
	MIN(BSE_MON) BSE_MON,
	MIN(TRD_CD) TRD_CD,
	MIN(POL_SEQ) POL_SEQ,
	MIN(POD_SEQ) POD_SEQ
FROM
   (
   SELECT
    RHQ.BSE_YR,
    DECODE(RHQ.BSE_YR||RHQ.BSE_MON, RHQ.BSE_YR||DECODE(RHQ.BSE_QTR_CD, '1Q', '01', '2Q', '04', '3Q', '07', '4Q', '10' ), 'cur',
	TO_CHAR(ADD_MONTHS(TO_DATE(RHQ.BSE_YR||DECODE(RHQ.BSE_QTR_CD, '1Q', '01', '2Q', '04', '3Q', '07', '4Q', '10' ),'yyyymm'),1),'yyyymm'), 'next1',
	TO_CHAR(ADD_MONTHS(TO_DATE(RHQ.BSE_YR||DECODE(RHQ.BSE_QTR_CD, '1Q', '01', '2Q', '04', '3Q', '07', '4Q', '10' ),'yyyymm'),2),'yyyymm'), 'next2') CODE,
    RANK() OVER (PARTITION BY RHQ.BSE_MON, SUBSTR(VVD.LANE_GRP, 0,7), RHQ.SLS_RGN_OFC_CD ORDER BY SUBSTR(VVD.LANE_GRP, 9))  AS GRP_SEQ,
    RHQ.SUB_TRD_CD,
    RHQ.RLANE_CD AS RLANE_CD,  --hidden
    RHQ.POL_CD AS POL_CD,
    RHQ.POD_CD AS POD_CD,
    RHQ.SPRT_GRP_CD AS SPRT_GRP_CD,  --hidden
    RHQ.BSA_GRP_CD AS BSA_GRP_CD,  --hidden
    RHQ.SLS_RGN_OFC_CD AS SLS_RGN_OFC_CD,  --hidden
    RHQ.BSE_MON AS BSE_MON, --hidden
    VVD.LANE_GRP AS LANE_GRP,
    RHQ.SLS_RGN_OFC_CD AS OFC_CD,
    VVD.TOT_BSA AS TOT_BSA ,
    RHQ.LOD_QTY / @[unit_flag] AS TOT_LOD ,
    RHQ.GRS_RPB_REV * @[unit_flag] AS TOT_RPB,
	VVD.TRD_CD,
	DECODE(INP.INCL_PORT_FLG, 'N', '000', NVL(POL.PORT_SEQ, 999)) AS POL_SEQ,
	DECODE(INP.INCL_PORT_FLG, 'N', '000', NVL(POD.PORT_SEQ, 999)) AS POD_SEQ
 FROM   TMP_INPUT_PARMAS INP,
       (
	SELECT -- saq_mon_tgt_vvd_adj BSA
	    VVD.BSE_MON,
	    VVD.SUB_TRD_CD,
	    VVD.RLANE_CD,
	    VVD.SPRT_GRP_CD,
	    VVD.BSA_GRP_CD,
	    VVD.TRD_CD,
	    (VVD.RLANE_CD||'-'||VVD.SPRT_GRP_CD||VVD.BSA_GRP_CD) AS LANE_GRP,
	    MIN(VVD.FNL_BSA_CAPA) AS TOT_BSA
	FROM   SAQ_MON_TGT_VVD_ADJ VVD, TMP_INPUT_PARMAS INP
	WHERE  VVD.BSE_YR = INP.BSE_YR
	AND    VVD.BSE_QTR_CD = INP.BSE_QTR_CD
	AND    VVD.GLINE_VER_NO = INP.GLINE_VER_NO
	AND    VVD.TRD_CD = INP.TRD_CD
	AND    VVD.DIR_CD = INP.DIR_CD
	GROUP BY VVD.BSE_MON, VVD.SUB_TRD_CD,VVD.RLANE_CD,VVD.SPRT_GRP_CD,VVD.BSA_GRP_CD,VVD.TRD_CD
	) VVD,
       SAQ_MON_QTA_LOD_TGT RHQ,
       SAQ_MON_QTA_PORT_SEQ POL,
       SAQ_MON_QTA_PORT_SEQ POD
WHERE  RHQ.MQTA_STEP_CD = INP.MQTA_STEP_CD
AND    RHQ.BSE_YR = INP.BSE_YR
AND    RHQ.BSE_QTR_CD = INP.BSE_QTR_CD
AND    VVD.RLANE_CD LIKE INP.RLANE_CD||'%'
AND    RHQ.TRD_CD = INP.TRD_CD
AND    RHQ.DIR_CD = INP.DIR_CD
AND    RHQ.MQTA_VER_NO = INP.MQTA_VER_NO
AND    RHQ.BSE_MON = VVD.BSE_MON
AND    RHQ.SUB_TRD_CD = VVD.SUB_TRD_CD
AND    RHQ.RLANE_CD = VVD.RLANE_CD
AND    RHQ.SPRT_GRP_CD = VVD.SPRT_GRP_CD
AND    RHQ.BSA_GRP_CD = VVD.BSA_GRP_CD
AND    POL.BSE_YR(+) = RHQ.BSE_YR
AND    POL.BSE_QTR_CD(+) = RHQ.BSE_QTR_CD
AND    POL.GLINE_VER_NO(+) = @[gline_ver_no]
AND    POL.TRD_CD(+) = RHQ.TRD_CD
AND    POL.DIR_CD(+) = RHQ.DIR_CD
AND    POL.RLANE_CD(+) = RHQ.RLANE_CD
AND    POL.SPRT_GRP_CD(+) = RHQ.SPRT_GRP_CD
AND    POL.BSA_GRP_CD(+) = RHQ.BSA_GRP_CD
AND    POL.PORT_CD(+) = RHQ.POL_CD
AND    POD.BSE_YR(+) = RHQ.BSE_YR
AND    POD.BSE_QTR_CD(+) = RHQ.BSE_QTR_CD
AND    POD.GLINE_VER_NO(+) = @[gline_ver_no]
AND    POD.TRD_CD(+) = RHQ.TRD_CD
AND    POD.DIR_CD(+) = RHQ.DIR_CD
AND    POD.RLANE_CD(+) = RHQ.RLANE_CD
AND    POD.SPRT_GRP_CD(+) = RHQ.SPRT_GRP_CD
AND    POD.BSA_GRP_CD(+) = RHQ.BSA_GRP_CD
AND    POD.PORT_CD(+) = RHQ.POD_CD
)
GROUP BY SUB_TRD_CD, LANE_GRP, POL_CD, POD_CD, OFC_CD
ORDER BY SUB_TRD_CD, LANE_GRP, POL_SEQ, POL_CD, POD_SEQ, POD_CD, OFC_CD			]]></sql>
			<params>
				<param name="search_rlane_cd" type="12" value="" out="N"/>
				<param name="mqta_step_cd" type="12" value="" out="N"/>
				<param name="gline_ver_no" type="12" value="" out="N"/>
				<param name="mqta_ver_no" type="12" value="" out="N"/>
				<param name="bse_yr" type="12" value="" out="N"/>
				<param name="bse_qtr_cd" type="12" value="" out="N"/>
				<param name="trd_cd" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="unit_flag" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
