/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : GeneralBookingSearchDBDAOsearchCust301CntrInfoRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.06.07
*@LastModifier : 정인선
*@LastVersion : 1.0
* 2016.06.07 정인선
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.bkg.bookingconduct.generalbookingconduct.generalbookingsearch.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author jung in sun
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class GeneralBookingSearchDBDAOsearchCust301CntrInfoRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * GeneralBookingSearchDBDAOsearchCust301CntrInfoRSQL
	  * </pre>
	  */
	public GeneralBookingSearchDBDAOsearchCust301CntrInfoRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bkg_no",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.bkg.bookingconduct.generalbookingconduct.generalbookingsearch.integration").append("\n"); 
		query.append("FileName : GeneralBookingSearchDBDAOsearchCust301CntrInfoRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT " ).append("\n"); 
		query.append(" '{CNTR_INFO'																                            || CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTN:'					|| RPAD(NVL(CNTR.CNTR_NO, ' '), 11, ' ')		      || CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTT:'					|| NVL(CNTR.CNTR_TPSZ_CD,CNTR.SCE_CNTR_TPSZ_CD) 	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OB_HAUL_TP:'		|| CASE WHEN POL.CONTI_CD <> 'E' THEN DECODE(cntr.RCV_TERM_CD,null,DECODE(CNTR.BK_RCV_TERM_CD,'D','C','M'),'D','C','M') " ).append("\n"); 
		query.append("                                            ELSE NVL((SELECT ETRO.HLG_TP_CD FROM BKG_EUR_TRO ETRO WHERE ETRO.BKG_NO = CNTR.BKG_NO AND ETRO.IO_BND_CD = 'O' AND ETRO.CXL_FLG = 'N' AND ROWNUM = 1),DECODE(cntr.RCV_TERM_CD,null,DECODE(CNTR.BK_RCV_TERM_CD,'D','C','M'),'D','C','M') )" ).append("\n"); 
		query.append("                                            END	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'IB_HAUL_TP:'		|| CASE WHEN POD.CONTI_CD <> 'E' THEN DECODE(cntr.DE_TERM_CD,null,DECODE(CNTR.BK_DE_TERM_CD,'D','C','M'),'D','C','M')" ).append("\n"); 
		query.append("                                            ELSE NVL((SELECT ETRO.HLG_TP_CD FROM BKG_EUR_TRO ETRO WHERE ETRO.BKG_NO = CNTR.BKG_NO AND ETRO.IO_BND_CD = 'I' AND ETRO.CXL_FLG = 'N' AND ROWNUM = 1),DECODE(cntr.DE_TERM_CD,null,DECODE(CNTR.BK_DE_TERM_CD,'D','C','M'),'D','C','M'))" ).append("\n"); 
		query.append("                                            END	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'SEAL:'					|| REPLACE(REPLACE(REPLACE(NVL(seal.CNTR_SEAL_NO,' '),CHR(32),''),CHR(10),''),CHR(13),'')	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'RIND:'          || DECODE(RF.CNTR_TPSZ_CD,NULL,'0','1')			|| CHR(10)" ).append("\n"); 
		query.append("	|| 'DIND:'          || DECODE(DG.CNTR_TPSZ_CD,NULL,'0','1')			|| CHR(10)" ).append("\n"); 
		query.append("	|| 'AIND:'          || DECODE(AK.CNTR_TPSZ_CD,NULL,'0','1')			|| CHR(10) " ).append("\n"); 
		query.append("	|| 'BIND:'          || DECODE(CNTR.BB_CGO_FLG,'Y','1','0')			|| CHR(10)" ).append("\n"); 
		query.append("	|| 'PKG_QTY:'       || CNTR.pck_qty                                 || CHR(10)" ).append("\n"); 
		query.append("	|| 'PKG_TP:'        || CNTR.pck_tp_cd                               || CHR(10)" ).append("\n"); 
		query.append("	|| 'MEA_QTY:'       || CNTR.meas_qty                                || CHR(10)" ).append("\n"); 
		query.append("	|| 'MEA_TP:'        || CNTR.meas_ut_cd                              || CHR(10)" ).append("\n"); 
		query.append("	|| 'WGT_QTY:'       || CASE WHEN NVL(CNTR.CNTR_WGT,0) <> 0 THEN CNTR.CNTR_WGT" ).append("\n"); 
		query.append("                                WHEN  (SELECT (SELECT SUM(NVL(BQ.OP_CNTR_QTY,0)) FROM BKG_QUANTITY BQ WHERE BQ.BKG_NO = BLD.BKG_NO) - NVL((SELECT SUM(NVL(BCC.CNTR_VOL_QTY,0)) FROM BKG_CONTAINER BCC WHERE BCC.BKG_NO = CNTR.BKG_NO AND NVL(BCC.CNTR_WGT,0) <> 0),0)" ).append("\n"); 
		query.append("									   FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO) = 0 THEN CNTR.CNTR_WGT" ).append("\n"); 
		query.append("								ELSE ROUND((SELECT (BLD.ACT_WGT-NVL((SELECT SUM(NVL(BCC.CNTR_WGT,0)) FROM BKG_CONTAINER BCC WHERE BCC.BKG_NO = CNTR.BKG_NO),0))" ).append("\n"); 
		query.append("                                     /((SELECT SUM(NVL(BQ.OP_CNTR_QTY,0)) FROM BKG_QUANTITY BQ WHERE BQ.BKG_NO = BLD.BKG_NO) - NVL((SELECT SUM(NVL(BCC.CNTR_VOL_QTY,0)) FROM BKG_CONTAINER BCC WHERE BCC.BKG_NO = CNTR.BKG_NO AND NVL(BCC.CNTR_WGT,0) <> 0),0))" ).append("\n"); 
		query.append("                                     FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO),3)" ).append("\n"); 
		query.append("                         END 					                || CHR(10)" ).append("\n"); 
		query.append("	|| 'WGT_TP:'        || CASE WHEN Cntr.WGT_UT_CD IS NULL THEN (SELECT BLD.WGT_UT_CD FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO)" ).append("\n"); 
		query.append("                         ELSE Cntr.WGT_UT_CD END			|| CHR(10)" ).append("\n"); 
		query.append("	|| 'NET_WGT_QTY:'   || CASE WHEN NVL(RF.NET_WGT,0) <> 0 THEN RF.NET_WGT" ).append("\n"); 
		query.append("                              WHEN NVL(AK.NET_WGT,0) <> 0 THEN AK.NET_WGT" ).append("\n"); 
		query.append("                              WHEN NVL(DG.NET_WGT,0) <> 0 THEN DG.NET_WGT" ).append("\n"); 
		query.append("                         END								          || CHR(10)" ).append("\n"); 
		query.append("	|| 'NET_WGT_TP:'    || CASE WHEN RF.WGT_UT_CD IS NOT NULL THEN 	RF.WGT_UT_CD" ).append("\n"); 
		query.append("                                WHEN AK.WGT_UT_CD IS NOT NULL THEN 	AK.WGT_UT_CD" ).append("\n"); 
		query.append("                                WHEN DG.WGT_UT_CD IS NOT NULL THEN 	DG.WGT_UT_CD" ).append("\n"); 
		query.append("                                WHEN Cntr.WGT_UT_CD IS NULL THEN (SELECT BLD.WGT_UT_CD FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO)" ).append("\n"); 
		query.append("                                ELSE Cntr.WGT_UT_CD END						|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TEMP:'					|| RF.FDO_TEMP									|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TUN:'					  || 'F'											    || CHR(10)" ).append("\n"); 
		query.append("	|| 'TEMP_C:'				|| RF.CDO_TEMP									|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TUN_C:'					|| 'C'											    || CHR(10)" ).append("\n"); 
		query.append("	|| 'RF_VOLTAGE:'		|| RF.VLTG_NO									  || CHR(10)" ).append("\n"); 
		query.append("	|| 'VENT:'					|| CASE WHEN NVL(RF.VENT_RTO,0) = 0 THEN 'C'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) > 0 AND NVL(RF.VENT_RTO,0) < 35 THEN 'Q'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) >= 35 AND NVL(RF.VENT_RTO,0) < 65 THEN 'H'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) >= 65 AND NVL(RF.VENT_RTO,0) < 100 THEN 'T'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) = 100 THEN 'O' ELSE 'M' END		|| CHR(10)" ).append("\n"); 
		query.append("  || 'VENT_UNIT:'																      || CHR(10)" ).append("\n"); 
		query.append("  || 'O2_PC_LVL_QTY:'															    || CHR(10)" ).append("\n"); 
		query.append("  || 'CO2_PC_LVL_QTY:'														    || CHR(10)" ).append("\n"); 
		query.append("	|| 'HUMID:'					|| RF.HUMID_NO									|| CHR(10)" ).append("\n"); 
		query.append("	|| 'GENSET:'				|| NVL(RF.PWR_SPL_CBL_FLG,'N')  || CHR(10)" ).append("\n"); 
		query.append("	|| 'RF_REMARK:'			|| REPLACE(RF.DIFF_RMK, chr(10), ' ')	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'RFDRY_IND:'			|| DECODE(CNTR.RD_CGO_FLG,'N','0','Y','1','0')|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OVF:'					  || AK.OVR_FWRD_LEN							|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OVR:'					  || AK.OVR_BKWD_LEN							|| CHR(10)" ).append("\n"); 
		query.append("  || 'OVL_UNIT:'			|| 'CM'								  			  || CHR(10)" ).append("\n"); 
		query.append("	|| 'OVH:'					  || AK.OVR_HGT								    || CHR(10)" ).append("\n"); 
		query.append("  || 'OVH_UNIT:'			|| 'CM'								  			  || CHR(10)" ).append("\n"); 
		query.append("	|| 'OVLW:'					|| AK.OVR_LF_LEN								|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OVRW:'					|| AK.OVR_RT_LEN								|| CHR(10)" ).append("\n"); 
		query.append("  || 'OVW_UNIT:'			|| 'CM'									  		  || CHR(10)" ).append("\n"); 
		query.append("	|| 'OVWGT:'					|| ROUND(NVL(AK.GRS_WGT, 0) * DECODE(AK.WGT_UT_CD, 'LBS', 0.4536, 1), 3) || CHR(10)" ).append("\n"); 
		query.append("	|| 'VOID_SLOT:'			|| AK.OVR_VOID_SLT_QTY		  		|| CHR(10)" ).append("\n"); 
		query.append("	|| 'STWG_REQ:'			|| AK.STWG_RQST_DESC				  	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TTL_DIM_LEN:'		|| AK.TTL_DIM_LEN							  || CHR(10)" ).append("\n"); 
		query.append("  || 'TTL_DIM_LEN_UNIT:'|| 'CM'										    || CHR(10)" ).append("\n"); 
		query.append("	|| 'TTL_DIM_WDT:'			|| AK.TTL_DIM_WDT							|| CHR(10)" ).append("\n"); 
		query.append("  || 'TTL_DIM_WDT_UNIT:'|| 'CM'									    	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TTL_DIM_HGT:'			|| AK.TTL_DIM_HGT							|| CHR(10)" ).append("\n"); 
		query.append("  || 'TTL_DIM_HGT_UNIT:'|| 'CM'			    							|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TYPE:'																|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_WEIGHT:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_HAULAGE:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_HMODE:'																|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_PICKUP_CY:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_RETURN_CY:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_INSTRUCTION:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TRAN_DT:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TRAN_OFFICE:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TRAN_NO:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'USR_ID:'																  || CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTR_RCV_TERM:'			||CNTR.RCV_TERM_CD		|| CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTR_DLV_TERM:'			||CNTR.DE_TERM_CD			|| CHR(10)" ).append("\n"); 
		query.append("	|| '{CNTR_TRO_DTL'														|| CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_DIR_IND:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_ADDR:'																|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_DOOR_LOC:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_DOOR_POSTAL:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_DOOR_DT:'															|| CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_DOOR_DT_GTM:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_PERSON:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_TEL:'																  || CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_FAX:'																  || CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_EMAIL:'																|| CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_DEPARTURE:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_ACTSHIP:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_REMARK:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| '}CNTR_TRO_DTL'														|| CHR(10)" ).append("\n"); 
		query.append("	|| '}CNTR_INFO'																|| CHR(10) CNTR_INFO" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("    SELECT SCHC.COP_NO" ).append("\n"); 
		query.append("           ,SCHC.CNTR_NO SCE_CNTR_NO" ).append("\n"); 
		query.append("           ,SCHC.CNTR_TPSZ_CD SCE_CNTR_TPSZ_CD" ).append("\n"); 
		query.append("           ,row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("           ,CASE WHEN CNTR.RC_FLG = 'Y' AND CNTR.CNTR_NO IS NOT NULL THEN CNTR.CNTR_NO" ).append("\n"); 
		query.append("            ELSE SCHC.CNTR_TPSZ_CD||'-'||row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("            END RF_CNTR_NO" ).append("\n"); 
		query.append("           ,CASE WHEN CNTR.DCGO_FLG = 'Y' AND CNTR.CNTR_NO IS NOT NULL THEN CNTR.CNTR_NO" ).append("\n"); 
		query.append("            ELSE SCHC.CNTR_TPSZ_CD||'-'||row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("            END DG_CNTR_NO" ).append("\n"); 
		query.append("           ,CASE WHEN CNTR.AWK_CGO_FLG = 'Y' AND CNTR.CNTR_NO IS NOT NULL THEN CNTR.CNTR_NO" ).append("\n"); 
		query.append("            ELSE SCHC.CNTR_TPSZ_CD||'-'||row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("            END AWK_CNTR_NO" ).append("\n"); 
		query.append("           ,CNTR.CNTR_NO" ).append("\n"); 
		query.append("           ,CNTR.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("           ,CNTR.RC_FLG" ).append("\n"); 
		query.append("           ,CNTR.DCGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.AWK_CGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.BB_CGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.pck_qty" ).append("\n"); 
		query.append("           ,CNTR.pck_tp_cd" ).append("\n"); 
		query.append("           ,CNTR.meas_qty" ).append("\n"); 
		query.append("           ,CNTR.meas_ut_cd" ).append("\n"); 
		query.append("           ,CNTR.CNTR_WGT" ).append("\n"); 
		query.append("           ,CNTR.WGT_UT_CD" ).append("\n"); 
		query.append("           ,CNTR.RD_CGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.RCV_TERM_CD" ).append("\n"); 
		query.append("           ,CNTR.DE_TERM_CD" ).append("\n"); 
		query.append("           ,BK.BKG_NO" ).append("\n"); 
		query.append("           ,BK.POL_CD" ).append("\n"); 
		query.append("           ,BK.POD_CD" ).append("\n"); 
		query.append("           ,BK.RCV_TERM_CD BK_RCV_TERM_CD" ).append("\n"); 
		query.append("           ,BK.DE_TERM_CD BK_DE_TERM_CD " ).append("\n"); 
		query.append("    FROM BKG_BOOKING BK" ).append("\n"); 
		query.append("         , SCE_COP_HDR SCHC" ).append("\n"); 
		query.append("         , BKG_CONTAINER CNTR" ).append("\n"); 
		query.append("    WHERE BK.BKG_NO        = @[bkg_no]" ).append("\n"); 
		query.append("    AND   BK.BKG_NO   	   = SCHC.BKG_NO" ).append("\n"); 
		query.append("    AND   SCHC.COP_STS_CD  <> 'X'" ).append("\n"); 
		query.append("    AND   SCHC.BKG_NO      = CNTR.BKG_NO(+)" ).append("\n"); 
		query.append("    AND   SCHC.CNTR_NO     = CNTR.CNTR_NO(+)" ).append("\n"); 
		query.append("    ORDER BY SCHC.COP_NO" ).append("\n"); 
		query.append("    ) CNTR" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ,(SELECT CASE WHEN RF.CNTR_NO IS NOT NULL THEN RF.CNTR_NO" ).append("\n"); 
		query.append("             ELSE RF.CNTR_TPSZ_CD||'-'||row_number() over (partition by RF.CNTR_TPSZ_CD order by RF.CNTR_TPSZ_CD) " ).append("\n"); 
		query.append("             END RF_CNTR_NO" ).append("\n"); 
		query.append("             ,RF.*" ).append("\n"); 
		query.append("      FROM BKG_RF_CGO RF WHERE RF.BKG_NO = @[bkg_no]" ).append("\n"); 
		query.append("      ORDER BY RF.RC_SEQ) RF" ).append("\n"); 
		query.append("    ,(SELECT CASE WHEN AWK.CNTR_NO IS NOT NULL THEN AWK.CNTR_NO" ).append("\n"); 
		query.append("             ELSE AWK.CNTR_TPSZ_CD||'-'||row_number() over (partition by AWK.CNTR_TPSZ_CD order by AWK.CNTR_TPSZ_CD) " ).append("\n"); 
		query.append("             END AWK_CNTR_NO" ).append("\n"); 
		query.append("             ,AWK.*" ).append("\n"); 
		query.append("      FROM BKG_AWK_CGO AWK WHERE AWK.BKG_NO = @[bkg_no]" ).append("\n"); 
		query.append("      ORDER BY AWK.AWK_CGO_SEQ) AK" ).append("\n"); 
		query.append("    ,(SELECT CASE WHEN DG.CNTR_NO IS NOT NULL THEN DG.CNTR_NO" ).append("\n"); 
		query.append("             ELSE DG.CNTR_TPSZ_CD||'-'||row_number() over (partition by DG.CNTR_TPSZ_CD order by DG.CNTR_TPSZ_CD) " ).append("\n"); 
		query.append("             END DG_CNTR_NO" ).append("\n"); 
		query.append("             ,DG.*" ).append("\n"); 
		query.append("      FROM BKG_DG_CGO DG WHERE DG.BKG_NO = @[bkg_no] AND DG.CNTR_CGO_SEQ = (SELECT MIN(DG1.CNTR_CGO_SEQ) FROM BKG_DG_CGO DG1 WHERE DG1.BKG_NO = DG.BKG_NO AND DG1.DG_CNTR_SEQ = DG.DG_CNTR_SEQ)" ).append("\n"); 
		query.append("      ORDER BY DG.CNTR_CGO_SEQ) DG" ).append("\n"); 
		query.append("    , BKG_CNTR_SEAL_NO seal" ).append("\n"); 
		query.append("    , MDM_LOCATION POL" ).append("\n"); 
		query.append("    , MDM_LOCATION POD" ).append("\n"); 
		query.append("WHERE CNTR.RF_CNTR_NO = RF.RF_CNTR_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO = RF.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.DG_CNTR_NO = DG.DG_CNTR_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO = DG.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.AWK_CNTR_NO = AK.AWK_CNTR_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO = AK.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO      = SEAL.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.CNTR_NO     = seal.CNTR_NO      (+)" ).append("\n"); 
		query.append("AND   1                = seal.CNTR_SEAL_SEQ(+)" ).append("\n"); 
		query.append("AND   CNTR.POL_CD = POL.LOC_CD" ).append("\n"); 
		query.append("AND   CNTR.POD_CD = POD.LOC_CD" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append(" '{CNTR_INFO'																                            || CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTN:'					|| RPAD(NVL(CNTR.CNTR_NO, ' '), 11, ' ')		      || CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTT:'					|| NVL(CNTR.CNTR_TPSZ_CD,CNTR.SCE_CNTR_TPSZ_CD) 	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OB_HAUL_TP:'		|| CASE WHEN POL.CONTI_CD <> 'E' THEN DECODE(cntr.RCV_TERM_CD,null,DECODE(CNTR.BK_RCV_TERM_CD,'D','C','M'),'D','C','M') " ).append("\n"); 
		query.append("                                            ELSE NVL((SELECT ETRO.HLG_TP_CD FROM BKG_EUR_TRO ETRO WHERE ETRO.BKG_NO = CNTR.BKG_NO AND ETRO.IO_BND_CD = 'O' AND ETRO.CXL_FLG = 'N' AND ROWNUM = 1),DECODE(cntr.RCV_TERM_CD,null,DECODE(CNTR.BK_RCV_TERM_CD,'D','C','M'),'D','C','M') ) " ).append("\n"); 
		query.append("                                            END	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'IB_HAUL_TP:'		|| CASE WHEN POD.CONTI_CD <> 'E' THEN DECODE(cntr.DE_TERM_CD,null,DECODE(CNTR.BK_DE_TERM_CD,'D','C','M'),'D','C','M')" ).append("\n"); 
		query.append("                                            ELSE NVL((SELECT ETRO.HLG_TP_CD FROM BKG_EUR_TRO ETRO WHERE ETRO.BKG_NO = CNTR.BKG_NO AND ETRO.IO_BND_CD = 'I' AND ETRO.CXL_FLG = 'N' AND ROWNUM = 1),DECODE(cntr.DE_TERM_CD,null,DECODE(CNTR.BK_DE_TERM_CD,'D','C','M'),'D','C','M'))" ).append("\n"); 
		query.append("                                            END	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'SEAL:'					|| REPLACE(REPLACE(REPLACE(NVL(seal.CNTR_SEAL_NO,' '),CHR(32),''),CHR(10),''),CHR(13),'')	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'RIND:'          || DECODE(RF.CNTR_TPSZ_CD,NULL,'0','1')				|| CHR(10)" ).append("\n"); 
		query.append("	|| 'DIND:'          || DECODE(DG.CNTR_TPSZ_CD,NULL,'0','1')			|| CHR(10)" ).append("\n"); 
		query.append("	|| 'AIND:'          || DECODE(AK.CNTR_TPSZ_CD,NULL,'0','1')			|| CHR(10) " ).append("\n"); 
		query.append("	|| 'BIND:'          || DECODE(CNTR.BB_CGO_FLG,'Y','1','0')			    || CHR(10)" ).append("\n"); 
		query.append("	|| 'PKG_QTY:'       || CNTR.pck_qty                                 || CHR(10)" ).append("\n"); 
		query.append("	|| 'PKG_TP:'        || CNTR.pck_tp_cd                               || CHR(10)" ).append("\n"); 
		query.append("	|| 'MEA_QTY:'       || CNTR.meas_qty                                || CHR(10)" ).append("\n"); 
		query.append("	|| 'MEA_TP:'        || CNTR.meas_ut_cd                              || CHR(10)" ).append("\n"); 
		query.append("	|| 'WGT_QTY:'       || CASE WHEN NVL(CNTR.CNTR_WGT,0) <> 0 THEN CNTR.CNTR_WGT" ).append("\n"); 
		query.append("                                WHEN  (SELECT (SELECT SUM(NVL(BQ.OP_CNTR_QTY,0)) FROM BKG_QUANTITY BQ WHERE BQ.BKG_NO = BLD.BKG_NO) - NVL((SELECT SUM(NVL(BCC.CNTR_VOL_QTY,0)) FROM BKG_CONTAINER BCC WHERE BCC.BKG_NO = CNTR.BKG_NO AND NVL(BCC.CNTR_WGT,0) <> 0),0)" ).append("\n"); 
		query.append("									   FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO) = 0 THEN CNTR.CNTR_WGT                         " ).append("\n"); 
		query.append("								ELSE ROUND((SELECT (BLD.ACT_WGT-NVL((SELECT SUM(NVL(BCC.CNTR_WGT,0)) FROM BKG_CONTAINER BCC WHERE BCC.BKG_NO = CNTR.BKG_NO),0))" ).append("\n"); 
		query.append("                                     /((SELECT SUM(NVL(BQ.OP_CNTR_QTY,0)) FROM BKG_QUANTITY BQ WHERE BQ.BKG_NO = BLD.BKG_NO) - NVL((SELECT SUM(NVL(BCC.CNTR_VOL_QTY,0)) FROM BKG_CONTAINER BCC WHERE BCC.BKG_NO = CNTR.BKG_NO AND NVL(BCC.CNTR_WGT,0) <> 0),0))" ).append("\n"); 
		query.append("                                     FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO),3)" ).append("\n"); 
		query.append("                         END 					                || CHR(10)" ).append("\n"); 
		query.append("	|| 'WGT_TP:'        || CASE WHEN Cntr.WGT_UT_CD IS NULL THEN (SELECT BLD.WGT_UT_CD FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO)" ).append("\n"); 
		query.append("                         ELSE Cntr.WGT_UT_CD END			|| CHR(10)" ).append("\n"); 
		query.append("	|| 'NET_WGT_QTY:'   || CASE WHEN NVL(RF.NET_WGT,0) <> 0 THEN RF.NET_WGT" ).append("\n"); 
		query.append("                              WHEN NVL(AK.NET_WGT,0) <> 0 THEN AK.NET_WGT" ).append("\n"); 
		query.append("                              WHEN NVL(DG.NET_WGT,0) <> 0 THEN DG.NET_WGT" ).append("\n"); 
		query.append("                         END								          || CHR(10)" ).append("\n"); 
		query.append("	|| 'NET_WGT_TP:'    || CASE WHEN RF.WGT_UT_CD IS NOT NULL THEN 	RF.WGT_UT_CD" ).append("\n"); 
		query.append("                                WHEN AK.WGT_UT_CD IS NOT NULL THEN 	AK.WGT_UT_CD" ).append("\n"); 
		query.append("                                WHEN DG.WGT_UT_CD IS NOT NULL THEN 	DG.WGT_UT_CD" ).append("\n"); 
		query.append("                                WHEN Cntr.WGT_UT_CD IS NULL THEN (SELECT BLD.WGT_UT_CD FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO)" ).append("\n"); 
		query.append("                                ELSE Cntr.WGT_UT_CD END						|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TEMP:'					|| RF.FDO_TEMP									|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TUN:'					  || 'F'											    || CHR(10)" ).append("\n"); 
		query.append("	|| 'TEMP_C:'				|| RF.CDO_TEMP									|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TUN_C:'					|| 'C'											    || CHR(10)" ).append("\n"); 
		query.append("	|| 'RF_VOLTAGE:'		|| RF.VLTG_NO									  || CHR(10)" ).append("\n"); 
		query.append("	|| 'VENT:'					|| CASE WHEN NVL(RF.VENT_RTO,0) = 0 THEN 'C'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) > 0 AND NVL(RF.VENT_RTO,0) < 35 THEN 'Q'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) >= 35 AND NVL(RF.VENT_RTO,0) < 65 THEN 'H'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) >= 65 AND NVL(RF.VENT_RTO,0) < 100 THEN 'T'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) = 100 THEN 'O' ELSE 'M' END		|| CHR(10)" ).append("\n"); 
		query.append("  || 'VENT_UNIT:'																      || CHR(10)" ).append("\n"); 
		query.append("  || 'O2_PC_LVL_QTY:'															    || CHR(10)" ).append("\n"); 
		query.append("  || 'CO2_PC_LVL_QTY:'														    || CHR(10)" ).append("\n"); 
		query.append("	|| 'HUMID:'					|| RF.HUMID_NO									|| CHR(10)" ).append("\n"); 
		query.append("	|| 'GENSET:'				|| NVL(RF.PWR_SPL_CBL_FLG,'N')  || CHR(10)" ).append("\n"); 
		query.append("	|| 'RF_REMARK:'			|| REPLACE(RF.DIFF_RMK, chr(10), ' ')	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'RFDRY_IND:'			|| DECODE(CNTR.RD_CGO_FLG,'N','0','Y','1','0')|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OVF:'					  || AK.OVR_FWRD_LEN							|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OVR:'					  || AK.OVR_BKWD_LEN							|| CHR(10)" ).append("\n"); 
		query.append("  || 'OVL_UNIT:'			|| 'CM'								  			  || CHR(10)" ).append("\n"); 
		query.append("	|| 'OVH:'					  || AK.OVR_HGT								    || CHR(10)" ).append("\n"); 
		query.append("  || 'OVH_UNIT:'			|| 'CM'								  			  || CHR(10)" ).append("\n"); 
		query.append("	|| 'OVLW:'					|| AK.OVR_LF_LEN								|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OVRW:'					|| AK.OVR_RT_LEN								|| CHR(10)" ).append("\n"); 
		query.append("  || 'OVW_UNIT:'			|| 'CM'									  		  || CHR(10)" ).append("\n"); 
		query.append("	|| 'OVWGT:'					|| ROUND(NVL(AK.GRS_WGT, 0) * DECODE(AK.WGT_UT_CD, 'LBS', 0.4536, 1), 3) || CHR(10)" ).append("\n"); 
		query.append("	|| 'VOID_SLOT:'			|| AK.OVR_VOID_SLT_QTY		  		|| CHR(10)" ).append("\n"); 
		query.append("	|| 'STWG_REQ:'			|| AK.STWG_RQST_DESC				  	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TTL_DIM_LEN:'		|| AK.TTL_DIM_LEN							  || CHR(10)" ).append("\n"); 
		query.append("  || 'TTL_DIM_LEN_UNIT:'|| 'CM'										    || CHR(10)" ).append("\n"); 
		query.append("	|| 'TTL_DIM_WDT:'			|| AK.TTL_DIM_WDT							|| CHR(10)" ).append("\n"); 
		query.append("  || 'TTL_DIM_WDT_UNIT:'|| 'CM'									    	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TTL_DIM_HGT:'			|| AK.TTL_DIM_HGT							|| CHR(10)" ).append("\n"); 
		query.append("  || 'TTL_DIM_HGT_UNIT:'|| 'CM'			    							|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TYPE:'																|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_WEIGHT:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_HAULAGE:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_HMODE:'																|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_PICKUP_CY:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_RETURN_CY:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_INSTRUCTION:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TRAN_DT:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TRAN_OFFICE:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TRAN_NO:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'USR_ID:'																  || CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTR_RCV_TERM:'			||CNTR.RCV_TERM_CD		|| CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTR_DLV_TERM:'			||CNTR.DE_TERM_CD			|| CHR(10)" ).append("\n"); 
		query.append("	|| '{CNTR_TRO_DTL'														|| CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_DIR_IND:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_ADDR:'																|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_DOOR_LOC:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_DOOR_POSTAL:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_DOOR_DT:'															|| CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_DOOR_DT_GTM:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_PERSON:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_TEL:'																  || CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_FAX:'																  || CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_EMAIL:'																|| CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_DEPARTURE:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_ACTSHIP:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_REMARK:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| '}CNTR_TRO_DTL'														|| CHR(10)" ).append("\n"); 
		query.append("	|| '}CNTR_INFO'																|| CHR(10) CNTR_INFO" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("    SELECT SCHC.COP_NO" ).append("\n"); 
		query.append("           ,SCHC.CNTR_NO SCE_CNTR_NO" ).append("\n"); 
		query.append("           ,SCHC.CNTR_TPSZ_CD SCE_CNTR_TPSZ_CD" ).append("\n"); 
		query.append("           ,row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("           ,CASE WHEN CNTR.RC_FLG = 'Y' AND CNTR.CNTR_NO IS NOT NULL THEN CNTR.CNTR_NO" ).append("\n"); 
		query.append("            ELSE SCHC.CNTR_TPSZ_CD||'-'||row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("            END RF_CNTR_NO" ).append("\n"); 
		query.append("           ,CASE WHEN CNTR.DCGO_FLG = 'Y' AND CNTR.CNTR_NO IS NOT NULL THEN CNTR.CNTR_NO" ).append("\n"); 
		query.append("            ELSE SCHC.CNTR_TPSZ_CD||'-'||row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("            END DG_CNTR_NO" ).append("\n"); 
		query.append("           ,CASE WHEN CNTR.AWK_CGO_FLG = 'Y' AND CNTR.CNTR_NO IS NOT NULL THEN CNTR.CNTR_NO" ).append("\n"); 
		query.append("            ELSE SCHC.CNTR_TPSZ_CD||'-'||row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("            END AWK_CNTR_NO" ).append("\n"); 
		query.append("           ,CNTR.CNTR_NO" ).append("\n"); 
		query.append("           ,CNTR.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("           ,CNTR.RC_FLG" ).append("\n"); 
		query.append("           ,CNTR.DCGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.AWK_CGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.BB_CGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.pck_qty" ).append("\n"); 
		query.append("           ,CNTR.pck_tp_cd" ).append("\n"); 
		query.append("           ,CNTR.meas_qty" ).append("\n"); 
		query.append("           ,CNTR.meas_ut_cd" ).append("\n"); 
		query.append("           ,CNTR.CNTR_WGT" ).append("\n"); 
		query.append("           ,CNTR.WGT_UT_CD" ).append("\n"); 
		query.append("           ,CNTR.RD_CGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.RCV_TERM_CD" ).append("\n"); 
		query.append("           ,CNTR.DE_TERM_CD" ).append("\n"); 
		query.append("           ,BK.BKG_NO" ).append("\n"); 
		query.append("           ,BK.POL_CD" ).append("\n"); 
		query.append("           ,BK.POD_CD" ).append("\n"); 
		query.append("           ,BK.RCV_TERM_CD BK_RCV_TERM_CD" ).append("\n"); 
		query.append("           ,BK.DE_TERM_CD BK_DE_TERM_CD " ).append("\n"); 
		query.append("    FROM BKG_BOOKING BK" ).append("\n"); 
		query.append("         , SCE_COP_HIS SCHC" ).append("\n"); 
		query.append("         , BKG_CONTAINER CNTR" ).append("\n"); 
		query.append("    WHERE BK.BKG_NO        = @[bkg_no]" ).append("\n"); 
		query.append("    AND   BK.BKG_NO   	   = SCHC.BKG_NO" ).append("\n"); 
		query.append("    AND   SCHC.COP_STS_CD = 'X'" ).append("\n"); 
		query.append("    AND   BK.BKG_STS_CD = 'X'" ).append("\n"); 
		query.append("    AND   NOT EXISTS (SELECT 'X' FROM SCE_COP_HDR HDR WHERE HDR.BKG_NO = SCHC.BKG_NO AND HDR.COP_STS_CD <> 'X')" ).append("\n"); 
		query.append("    AND   SCHC.ACCL_SEQ = (SELECT MAX(HIS.ACCL_SEQ) FROM SCE_COP_HIS HIS WHERE HIS.COP_NO = SCHC.COP_NO AND HIS.COP_STS_CD = 'X')" ).append("\n"); 
		query.append("    AND   SCHC.BKG_NO      = CNTR.BKG_NO(+)" ).append("\n"); 
		query.append("    AND   SCHC.CNTR_NO     = CNTR.CNTR_NO(+)" ).append("\n"); 
		query.append("    ORDER BY SCHC.COP_NO" ).append("\n"); 
		query.append("    ) CNTR" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ,(SELECT CASE WHEN RF.CNTR_NO IS NOT NULL THEN RF.CNTR_NO" ).append("\n"); 
		query.append("             ELSE RF.CNTR_TPSZ_CD||'-'||row_number() over (partition by RF.CNTR_TPSZ_CD order by RF.CNTR_TPSZ_CD) " ).append("\n"); 
		query.append("             END RF_CNTR_NO" ).append("\n"); 
		query.append("             ,RF.*" ).append("\n"); 
		query.append("      FROM BKG_RF_CGO RF WHERE RF.BKG_NO = @[bkg_no]" ).append("\n"); 
		query.append("      ORDER BY RF.RC_SEQ) RF" ).append("\n"); 
		query.append("    ,(SELECT CASE WHEN AWK.CNTR_NO IS NOT NULL THEN AWK.CNTR_NO" ).append("\n"); 
		query.append("             ELSE AWK.CNTR_TPSZ_CD||'-'||row_number() over (partition by AWK.CNTR_TPSZ_CD order by AWK.CNTR_TPSZ_CD) " ).append("\n"); 
		query.append("             END AWK_CNTR_NO" ).append("\n"); 
		query.append("             ,AWK.*" ).append("\n"); 
		query.append("      FROM BKG_AWK_CGO AWK WHERE AWK.BKG_NO = @[bkg_no]" ).append("\n"); 
		query.append("      ORDER BY AWK.AWK_CGO_SEQ) AK" ).append("\n"); 
		query.append("    ,(SELECT CASE WHEN DG.CNTR_NO IS NOT NULL THEN DG.CNTR_NO" ).append("\n"); 
		query.append("             ELSE DG.CNTR_TPSZ_CD||'-'||row_number() over (partition by DG.CNTR_TPSZ_CD order by DG.CNTR_TPSZ_CD) " ).append("\n"); 
		query.append("             END DG_CNTR_NO" ).append("\n"); 
		query.append("             ,DG.*" ).append("\n"); 
		query.append("      FROM BKG_DG_CGO DG WHERE DG.BKG_NO = @[bkg_no] AND DG.CNTR_CGO_SEQ = (SELECT MIN(DG1.CNTR_CGO_SEQ) FROM BKG_DG_CGO DG1 WHERE DG1.BKG_NO = DG.BKG_NO AND DG1.DG_CNTR_SEQ = DG.DG_CNTR_SEQ)" ).append("\n"); 
		query.append("      ORDER BY DG.CNTR_CGO_SEQ) DG" ).append("\n"); 
		query.append("    , BKG_CNTR_SEAL_NO seal" ).append("\n"); 
		query.append("    , MDM_LOCATION POL" ).append("\n"); 
		query.append("    , MDM_LOCATION POD" ).append("\n"); 
		query.append("WHERE CNTR.RF_CNTR_NO = RF.RF_CNTR_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO = RF.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.DG_CNTR_NO = DG.DG_CNTR_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO = DG.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.AWK_CNTR_NO = AK.AWK_CNTR_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO = AK.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO      = SEAL.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.CNTR_NO     = seal.CNTR_NO      (+)" ).append("\n"); 
		query.append("AND   1                = seal.CNTR_SEAL_SEQ(+)" ).append("\n"); 
		query.append("AND   CNTR.POL_CD = POL.LOC_CD" ).append("\n"); 
		query.append("AND   CNTR.POD_CD = POD.LOC_CD" ).append("\n"); 
		query.append("--COMBINE" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append(" '{CNTR_INFO'																                            || CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTN:'					|| RPAD(NVL(CNTR.CNTR_NO, ' '), 11, ' ')		      || CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTT:'					|| NVL(CNTR.CNTR_TPSZ_CD,CNTR.SCE_CNTR_TPSZ_CD) 	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OB_HAUL_TP:'		|| CASE WHEN POL.CONTI_CD <> 'E' THEN DECODE(cntr.RCV_TERM_CD,null,DECODE(CNTR.BK_RCV_TERM_CD,'D','C','M'),'D','C','M') " ).append("\n"); 
		query.append("                                            ELSE NVL((SELECT ETRO.HLG_TP_CD FROM BKG_EUR_TRO ETRO WHERE ETRO.BKG_NO = CNTR.BKG_NO AND ETRO.IO_BND_CD = 'O' AND ETRO.CXL_FLG = 'N' AND ROWNUM = 1),DECODE(cntr.RCV_TERM_CD,null,DECODE(CNTR.BK_RCV_TERM_CD,'D','C','M'),'D','C','M') ) " ).append("\n"); 
		query.append("                                            END	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'IB_HAUL_TP:'		|| CASE WHEN POD.CONTI_CD <> 'E' THEN DECODE(cntr.DE_TERM_CD,null,DECODE(CNTR.BK_DE_TERM_CD,'D','C','M'),'D','C','M')" ).append("\n"); 
		query.append("                                            ELSE NVL((SELECT ETRO.HLG_TP_CD FROM BKG_EUR_TRO ETRO WHERE ETRO.BKG_NO = CNTR.BKG_NO AND ETRO.IO_BND_CD = 'I' AND ETRO.CXL_FLG = 'N' AND ROWNUM = 1),DECODE(cntr.DE_TERM_CD,null,DECODE(CNTR.BK_DE_TERM_CD,'D','C','M'),'D','C','M'))" ).append("\n"); 
		query.append("                                            END	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'SEAL:'					|| REPLACE(REPLACE(REPLACE(NVL(seal.CNTR_SEAL_NO,' '),CHR(32),''),CHR(10),''),CHR(13),'')	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'RIND:'          || DECODE(RF.CNTR_TPSZ_CD,NULL,'0','1')				|| CHR(10)" ).append("\n"); 
		query.append("	|| 'DIND:'          || DECODE(DG.CNTR_TPSZ_CD,NULL,'0','1')			|| CHR(10)" ).append("\n"); 
		query.append("	|| 'AIND:'          || DECODE(AK.CNTR_TPSZ_CD,NULL,'0','1')			|| CHR(10) " ).append("\n"); 
		query.append("	|| 'BIND:'          || DECODE(CNTR.BB_CGO_FLG,'Y','1','0')			    || CHR(10)" ).append("\n"); 
		query.append("	|| 'PKG_QTY:'       || CNTR.pck_qty                                 || CHR(10)" ).append("\n"); 
		query.append("	|| 'PKG_TP:'        || CNTR.pck_tp_cd                               || CHR(10)" ).append("\n"); 
		query.append("	|| 'MEA_QTY:'       || CNTR.meas_qty                                || CHR(10)" ).append("\n"); 
		query.append("	|| 'MEA_TP:'        || CNTR.meas_ut_cd                              || CHR(10)" ).append("\n"); 
		query.append("	|| 'WGT_QTY:'       || CASE WHEN NVL(CNTR.CNTR_WGT,0) <> 0 THEN CNTR.CNTR_WGT" ).append("\n"); 
		query.append("                         ELSE ROUND((SELECT (BLD.ACT_WGT-NVL((SELECT SUM(NVL(BCC.CNTR_WGT,0)) FROM BKG_CONTAINER BCC WHERE BCC.BKG_NO = CNTR.BKG_NO),0))" ).append("\n"); 
		query.append("                                     /((SELECT SUM(NVL(BQ.OP_CNTR_QTY,0)) FROM BKG_QUANTITY BQ WHERE BQ.BKG_NO = BLD.BKG_NO) - NVL((SELECT SUM(NVL(BCC.CNTR_VOL_QTY,0)) FROM BKG_CONTAINER BCC WHERE BCC.BKG_NO = CNTR.BKG_NO AND NVL(BCC.CNTR_WGT,0) <> 0),0))" ).append("\n"); 
		query.append("                                     FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO),3)" ).append("\n"); 
		query.append("                         END 					                || CHR(10)" ).append("\n"); 
		query.append("	|| 'WGT_TP:'        || CASE WHEN Cntr.WGT_UT_CD IS NULL THEN (SELECT BLD.WGT_UT_CD FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO)" ).append("\n"); 
		query.append("                         ELSE Cntr.WGT_UT_CD END			|| CHR(10)" ).append("\n"); 
		query.append("	|| 'NET_WGT_QTY:'   || CASE WHEN NVL(RF.NET_WGT,0) <> 0 THEN RF.NET_WGT" ).append("\n"); 
		query.append("                              WHEN NVL(AK.NET_WGT,0) <> 0 THEN AK.NET_WGT" ).append("\n"); 
		query.append("                              WHEN NVL(DG.NET_WGT,0) <> 0 THEN DG.NET_WGT" ).append("\n"); 
		query.append("                         END								          || CHR(10)" ).append("\n"); 
		query.append("	|| 'NET_WGT_TP:'    || CASE WHEN RF.WGT_UT_CD IS NOT NULL THEN 	RF.WGT_UT_CD" ).append("\n"); 
		query.append("                                WHEN AK.WGT_UT_CD IS NOT NULL THEN 	AK.WGT_UT_CD" ).append("\n"); 
		query.append("                                WHEN DG.WGT_UT_CD IS NOT NULL THEN 	DG.WGT_UT_CD" ).append("\n"); 
		query.append("                                WHEN Cntr.WGT_UT_CD IS NULL THEN (SELECT BLD.WGT_UT_CD FROM BKG_BL_DOC BLD WHERE BLD.BKG_NO = CNTR.BKG_NO)" ).append("\n"); 
		query.append("                                ELSE Cntr.WGT_UT_CD END						|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TEMP:'					|| RF.FDO_TEMP									|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TUN:'					  || 'F'											    || CHR(10)" ).append("\n"); 
		query.append("	|| 'TEMP_C:'				|| RF.CDO_TEMP									|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TUN_C:'					|| 'C'											    || CHR(10)" ).append("\n"); 
		query.append("	|| 'RF_VOLTAGE:'		|| RF.VLTG_NO									  || CHR(10)" ).append("\n"); 
		query.append("	|| 'VENT:'					|| CASE WHEN NVL(RF.VENT_RTO,0) = 0 THEN 'C'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) > 0 AND NVL(RF.VENT_RTO,0) < 35 THEN 'Q'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) >= 35 AND NVL(RF.VENT_RTO,0) < 65 THEN 'H'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) >= 65 AND NVL(RF.VENT_RTO,0) < 100 THEN 'T'" ).append("\n"); 
		query.append("										WHEN NVL(RF.VENT_RTO,0) = 100 THEN 'O' ELSE 'M' END		|| CHR(10)" ).append("\n"); 
		query.append("  || 'VENT_UNIT:'																      || CHR(10)" ).append("\n"); 
		query.append("  || 'O2_PC_LVL_QTY:'															    || CHR(10)" ).append("\n"); 
		query.append("  || 'CO2_PC_LVL_QTY:'														    || CHR(10)" ).append("\n"); 
		query.append("	|| 'HUMID:'					|| RF.HUMID_NO									|| CHR(10)" ).append("\n"); 
		query.append("	|| 'GENSET:'				|| NVL(RF.PWR_SPL_CBL_FLG,'N')  || CHR(10)" ).append("\n"); 
		query.append("	|| 'RF_REMARK:'			|| REPLACE(RF.DIFF_RMK, chr(10), ' ')	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'RFDRY_IND:'			|| DECODE(CNTR.RD_CGO_FLG,'N','0','Y','1','0')|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OVF:'					  || AK.OVR_FWRD_LEN							|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OVR:'					  || AK.OVR_BKWD_LEN							|| CHR(10)" ).append("\n"); 
		query.append("  || 'OVL_UNIT:'			|| 'CM'								  			  || CHR(10)" ).append("\n"); 
		query.append("	|| 'OVH:'					  || AK.OVR_HGT								    || CHR(10)" ).append("\n"); 
		query.append("  || 'OVH_UNIT:'			|| 'CM'								  			  || CHR(10)" ).append("\n"); 
		query.append("	|| 'OVLW:'					|| AK.OVR_LF_LEN								|| CHR(10)" ).append("\n"); 
		query.append("	|| 'OVRW:'					|| AK.OVR_RT_LEN								|| CHR(10)" ).append("\n"); 
		query.append("  || 'OVW_UNIT:'			|| 'CM'									  		  || CHR(10)" ).append("\n"); 
		query.append("	|| 'OVWGT:'					|| ROUND(NVL(AK.GRS_WGT, 0) * DECODE(AK.WGT_UT_CD, 'LBS', 0.4536, 1), 3) || CHR(10)" ).append("\n"); 
		query.append("	|| 'VOID_SLOT:'			|| AK.OVR_VOID_SLT_QTY		  		|| CHR(10)" ).append("\n"); 
		query.append("	|| 'STWG_REQ:'			|| AK.STWG_RQST_DESC				  	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TTL_DIM_LEN:'		|| AK.TTL_DIM_LEN							  || CHR(10)" ).append("\n"); 
		query.append("  || 'TTL_DIM_LEN_UNIT:'|| 'CM'										    || CHR(10)" ).append("\n"); 
		query.append("	|| 'TTL_DIM_WDT:'			|| AK.TTL_DIM_WDT							|| CHR(10)" ).append("\n"); 
		query.append("  || 'TTL_DIM_WDT_UNIT:'|| 'CM'									    	|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TTL_DIM_HGT:'			|| AK.TTL_DIM_HGT							|| CHR(10)" ).append("\n"); 
		query.append("  || 'TTL_DIM_HGT_UNIT:'|| 'CM'			    							|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TYPE:'																|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_WEIGHT:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_HAULAGE:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_HMODE:'																|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_PICKUP_CY:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_RETURN_CY:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_INSTRUCTION:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TRAN_DT:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TRAN_OFFICE:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRM_TRAN_NO:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'USR_ID:'																  || CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTR_RCV_TERM:'			||CNTR.RCV_TERM_CD		|| CHR(10)" ).append("\n"); 
		query.append("	|| 'CNTR_DLV_TERM:'			||CNTR.DE_TERM_CD			|| CHR(10)" ).append("\n"); 
		query.append("	|| '{CNTR_TRO_DTL'														|| CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_DIR_IND:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_ADDR:'																|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_DOOR_LOC:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_DOOR_POSTAL:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_DOOR_DT:'															|| CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_DOOR_DT_GTM:'													|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_PERSON:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_TEL:'																  || CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_FAX:'																  || CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_EMAIL:'																|| CHR(10)" ).append("\n"); 
		query.append("  || 'TRD_DEPARTURE:'														|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_ACTSHIP:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| 'TRD_REMARK:'															|| CHR(10)" ).append("\n"); 
		query.append("	|| '}CNTR_TRO_DTL'														|| CHR(10)" ).append("\n"); 
		query.append("	|| '}CNTR_INFO'																|| CHR(10) CNTR_INFO" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("    SELECT SCHC.COP_NO" ).append("\n"); 
		query.append("           ,SCHC.CNTR_NO SCE_CNTR_NO" ).append("\n"); 
		query.append("           ,SCHC.CNTR_TPSZ_CD SCE_CNTR_TPSZ_CD" ).append("\n"); 
		query.append("           ,row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("           ,CASE WHEN CNTR.RC_FLG = 'Y' AND CNTR.CNTR_NO IS NOT NULL THEN CNTR.CNTR_NO" ).append("\n"); 
		query.append("            ELSE SCHC.CNTR_TPSZ_CD||'-'||row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("            END RF_CNTR_NO" ).append("\n"); 
		query.append("           ,CASE WHEN CNTR.DCGO_FLG = 'Y' AND CNTR.CNTR_NO IS NOT NULL THEN CNTR.CNTR_NO" ).append("\n"); 
		query.append("            ELSE SCHC.CNTR_TPSZ_CD||'-'||row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("            END DG_CNTR_NO" ).append("\n"); 
		query.append("           ,CASE WHEN CNTR.AWK_CGO_FLG = 'Y' AND CNTR.CNTR_NO IS NOT NULL THEN CNTR.CNTR_NO" ).append("\n"); 
		query.append("            ELSE SCHC.CNTR_TPSZ_CD||'-'||row_number() over (partition by SCHC.CNTR_TPSZ_CD order by SCHC.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("            END AWK_CNTR_NO" ).append("\n"); 
		query.append("           ,CNTR.CNTR_NO" ).append("\n"); 
		query.append("           ,CNTR.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("           ,CNTR.RC_FLG" ).append("\n"); 
		query.append("           ,CNTR.DCGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.AWK_CGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.BB_CGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.pck_qty" ).append("\n"); 
		query.append("           ,CNTR.pck_tp_cd" ).append("\n"); 
		query.append("           ,CNTR.meas_qty" ).append("\n"); 
		query.append("           ,CNTR.meas_ut_cd" ).append("\n"); 
		query.append("           ,CNTR.CNTR_WGT" ).append("\n"); 
		query.append("           ,CNTR.WGT_UT_CD" ).append("\n"); 
		query.append("           ,CNTR.RD_CGO_FLG" ).append("\n"); 
		query.append("           ,CNTR.RCV_TERM_CD" ).append("\n"); 
		query.append("           ,CNTR.DE_TERM_CD" ).append("\n"); 
		query.append("           ,BK.BKG_NO" ).append("\n"); 
		query.append("           ,BK.POL_CD" ).append("\n"); 
		query.append("           ,BK.POD_CD" ).append("\n"); 
		query.append("           ,BK.RCV_TERM_CD BK_RCV_TERM_CD" ).append("\n"); 
		query.append("           ,BK.DE_TERM_CD BK_DE_TERM_CD " ).append("\n"); 
		query.append("    FROM BKG_BOOKING BK" ).append("\n"); 
		query.append("         , SCE_COP_HIS SCHC" ).append("\n"); 
		query.append("         , BKG_CONTAINER CNTR" ).append("\n"); 
		query.append("    WHERE BK.BKG_NO        = @[bkg_no]" ).append("\n"); 
		query.append("    AND   BK.BKG_NO   	   = SCHC.BKG_NO" ).append("\n"); 
		query.append("    AND   SCHC.COP_STS_CD  <> 'X'" ).append("\n"); 
		query.append("    AND   BK.BKG_STS_CD    = 'X'" ).append("\n"); 
		query.append("    AND   NOT EXISTS (SELECT 'X' FROM SCE_COP_HDR HDR WHERE HDR.BKG_NO = SCHC.BKG_NO )" ).append("\n"); 
		query.append("    AND   SCHC.ACCL_SEQ = (SELECT MAX(HIS.ACCL_SEQ) FROM SCE_COP_HIS HIS WHERE HIS.COP_NO = SCHC.COP_NO AND SCHC.BKG_NO = HIS.BKG_NO)" ).append("\n"); 
		query.append("    AND   SCHC.BKG_NO      = CNTR.BKG_NO(+)" ).append("\n"); 
		query.append("    AND   SCHC.CNTR_NO     = CNTR.CNTR_NO(+)" ).append("\n"); 
		query.append("    ORDER BY SCHC.COP_NO" ).append("\n"); 
		query.append("    ) CNTR" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ,(SELECT CASE WHEN RF.CNTR_NO IS NOT NULL THEN RF.CNTR_NO" ).append("\n"); 
		query.append("             ELSE RF.CNTR_TPSZ_CD||'-'||row_number() over (partition by RF.CNTR_TPSZ_CD order by RF.CNTR_TPSZ_CD) " ).append("\n"); 
		query.append("             END RF_CNTR_NO" ).append("\n"); 
		query.append("             ,RF.*" ).append("\n"); 
		query.append("      FROM BKG_RF_CGO RF WHERE RF.BKG_NO = @[bkg_no]" ).append("\n"); 
		query.append("      ORDER BY RF.RC_SEQ) RF" ).append("\n"); 
		query.append("    ,(SELECT CASE WHEN AWK.CNTR_NO IS NOT NULL THEN AWK.CNTR_NO" ).append("\n"); 
		query.append("             ELSE AWK.CNTR_TPSZ_CD||'-'||row_number() over (partition by AWK.CNTR_TPSZ_CD order by AWK.CNTR_TPSZ_CD) " ).append("\n"); 
		query.append("             END AWK_CNTR_NO" ).append("\n"); 
		query.append("             ,AWK.*" ).append("\n"); 
		query.append("      FROM BKG_AWK_CGO AWK WHERE AWK.BKG_NO = @[bkg_no]" ).append("\n"); 
		query.append("      ORDER BY AWK.AWK_CGO_SEQ) AK" ).append("\n"); 
		query.append("    ,(SELECT CASE WHEN DG.CNTR_NO IS NOT NULL THEN DG.CNTR_NO" ).append("\n"); 
		query.append("             ELSE DG.CNTR_TPSZ_CD||'-'||row_number() over (partition by DG.CNTR_TPSZ_CD order by DG.CNTR_TPSZ_CD) " ).append("\n"); 
		query.append("             END DG_CNTR_NO" ).append("\n"); 
		query.append("             ,DG.*" ).append("\n"); 
		query.append("      FROM BKG_DG_CGO DG WHERE DG.BKG_NO = @[bkg_no] AND DG.CNTR_CGO_SEQ = (SELECT MIN(DG1.CNTR_CGO_SEQ) FROM BKG_DG_CGO DG1 WHERE DG1.BKG_NO = DG.BKG_NO AND DG1.DG_CNTR_SEQ = DG.DG_CNTR_SEQ)" ).append("\n"); 
		query.append("      ORDER BY DG.CNTR_CGO_SEQ) DG" ).append("\n"); 
		query.append("    , BKG_CNTR_SEAL_NO seal" ).append("\n"); 
		query.append("    , MDM_LOCATION POL" ).append("\n"); 
		query.append("    , MDM_LOCATION POD" ).append("\n"); 
		query.append("WHERE CNTR.RF_CNTR_NO = RF.RF_CNTR_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO = RF.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.DG_CNTR_NO = DG.DG_CNTR_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO = DG.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.AWK_CNTR_NO = AK.AWK_CNTR_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO = AK.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.BKG_NO      = SEAL.BKG_NO(+)" ).append("\n"); 
		query.append("AND   CNTR.CNTR_NO     = seal.CNTR_NO      (+)" ).append("\n"); 
		query.append("AND   1                = seal.CNTR_SEAL_SEQ(+)" ).append("\n"); 
		query.append("AND   CNTR.POL_CD = POL.LOC_CD" ).append("\n"); 
		query.append("AND   CNTR.POD_CD = POD.LOC_CD" ).append("\n"); 

	}
}