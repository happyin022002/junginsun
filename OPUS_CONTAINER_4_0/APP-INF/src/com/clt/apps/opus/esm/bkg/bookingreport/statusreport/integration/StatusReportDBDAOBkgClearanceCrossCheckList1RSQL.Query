<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="StatusReportDBDAOBkgClearanceCrossCheckList1RSQL">
			<desc><![CDATA[StatusReportDBDAOBkgClearanceCrossCheckList1RSQL]]></desc>
			<sql><![CDATA[
SELECT * 
FROM ( 
        SELECT DENSE_RANK() OVER( ORDER BY BKG_NO) DENSE_RANK,DENSE_RANK() OVER( ORDER BY BKG_NO) DENSE_RANK2,
          BKG_NO       , BL_NO      , OB_SLS_OFC_CD , BKG_STS_CD , BKG_CGO_TP_CD , QTY_BKG      , QTY_CNTR      , CNTR_CFM_FLG , CNTR_NO         , SZ
        , VOL          , SEAL       ,FIRM       , ST            , CM         , SHIPPER		 ,CONSIGNEE     , FF           , MD            , AES          ,TAX_ID       , DECODE((SELECT  CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = KEY_POL_CD),'M','Y','N') AES_YN, EL_NO, DDE, PEB, CAED, POD_CD , DEL_CD 
        , RCV_TERM_CD  , DE_TERM_CD , CHARGE        , APPRVAL    , PKG           , WEIGHT       , MEASUERE      , SPECIAL_D    , SPECIAL_R       , SPECIAL_A
        , SPECIAL_B    , BDR        , ISSUE         , RECEIVING  , VIA           , TOTAL_BKG    , TOTAL_BL      
        , TRIM(TOTAL_BKG_F) TOTAL_BKG_F  , TRIM(TOTAL_BKG_T) TOTAL_BKG_T    , TRIM(TOTAL_CTRL_F) TOTAL_CTRL_F , TRIM(TOTAL_CTRL_T) TOTAL_CTRL_T 
        , TOTAL_CFM  , TOTAL_VL      , TOTAL_CM   , TOTAL_MD      , TOTAL_CHARGE , TOTAL_APPRVAL , TOTAL_ISSUE  , TOTAL_RECEIVING , ROWNUM RNUM 
        , CTR_RNUM     , '' ROWS_PER_PAGE , '' CURR_PAGE, COUNT(1) OVER() TOTAL_CNT , '' P_NO_GOOD
,COUNT(BKG_NO) OVER(PARTITION BY BKG_NO) ROWS_PER_BKG
,SHIPPER_CODE
,POR
,POL
,POD
,DEL
,POR_NOD_CD
,DEL_NOD_CD
,BROKER
,BKG_OFC_NO
,HITCHMENT_YN
,TVVD
        FROM (
									SELECT 
									BKG_NO,
									BL_NO,
									OB_SLS_OFC_CD,
									BKG_STS_CD,
									BKG_CGO_TP_CD,
									QTY_BKG,
									QTY_CNTR,
									CNTR_CFM_FLG,
									CNTR_NO,
									SZ,
									VOL,
									SEAL,
									FIRM,
									ST,
									CM,
									SHIPPER,
									CONSIGNEE,
									FF,
									MD,
									AES,
								    TAX_ID,
									EL_NO,
									DDE,
									PEB,
									CAED,
									KEY_POL_CD,
									POD_CD,
									DEL_CD,
									RCV_TERM_CD,
									DE_TERM_CD,
									CHARGE,
									APPRVAL,
									PKG,
									WEIGHT,
									MEASUERE,
									SPECIAL_D,
									SPECIAL_R,
									SPECIAL_A,
									SPECIAL_B,
									BDR,
									ISSUE,
									RECEIVING,
									VIA,
									COUNT(DISTINCT BKG_NO) OVER() TOTAL_BKG,
									COUNT(DISTINCT BL_NO) OVER() TOTAL_BL,
                            TO_CHAR(SUM(DECODE(RNUM,1,TOTAL_BKG_F,0)) OVER() ,'99990.99')||' F' TOTAL_BKG_F,
                            TO_CHAR(SUM(DECODE(RNUM,1,TOTAL_BKG_T,0)) OVER() ,'99990.99')||' T' TOTAL_BKG_T,
                            TO_CHAR(SUM(DECODE(CTR_RNUM,1,DECODE(SUBSTR(SZ,-1),'2',0,VOL))) OVER() ,'99990.99')||' F'TOTAL_CTRL_F,
                            TO_CHAR(SUM(DECODE(CTR_RNUM,1,DECODE(SUBSTR(SZ,-1),'2',VOL,0))) OVER() ,'99990.99')||' T' TOTAL_CTRL_T,

                            COUNT(DECODE(CTR_RNUM,1,DECODE(CNTR_CFM_FLG,'N',1,NULL) )) OVER()  TOTAL_CFM,
                            COUNT(DECODE(CTR_RNUM,1,DECODE(ST,'VL',NULL,1) )) OVER()  TOTAL_VL,
                            COUNT(DECODE(CTR_RNUM,1,DECODE(CM,'Y',NULL,'F',NULL,1) )) OVER()  TOTAL_CM,

                            COUNT(DECODE(RNUM,1,DECODE(MD,'N',1,NULL) )) OVER() TOTAL_MD,
                            COUNT(DECODE(RNUM,1,DECODE(CHARGE,'N',1,NULL) )) OVER() TOTAL_CHARGE,
                            COUNT(DECODE(RNUM,1,DECODE(APPRVAL,'N',1,NULL) )) OVER() TOTAL_APPRVAL,
                            COUNT(DECODE(RNUM,1,DECODE(ISSUE,'N',1,NULL) )) OVER() TOTAL_ISSUE,
                            COUNT(DECODE(RNUM,1,DECODE(RECEIVING,'N',1,NULL) )) OVER() TOTAL_RECEIVING,

									RNUM,
									CTR_RNUM
,SHIPPER_CODE
,POR
,POL
,POD
,DEL
,POR_NOD_CD
,DEL_NOD_CD
,BROKER
,BKG_OFC_NO
,HITCHMENT_YN
,TVVD
									FROM (
													SELECT 
																	BKG_NO,
																	BL_NO,
																	OB_SLS_OFC_CD,
																	BKG_STS_CD,
																	BKG_CGO_TP_CD,
																	QTY_BKG,
																	TOTAL_BKG_T,
																	TOTAL_BKG_F,
																	QTY_CNTR,
																	NVL(CNTR_CFM_FLG,'N') AS CNTR_CFM_FLG,
																	CNTR_NO,
																	SZ,
																	VOL,
																	SEAL,
																	FIRM,
																	NVL(ST,'N') AS ST,
																	NVL(CM,'N') AS CM,
																	SHIPPER,
																	CONSIGNEE,
																	FF,
																	NVL(MD,'N') AS MD,
																	AES,
																	TAX_ID,
																	EL_NO,
																	DDE,
																	PEB,
																	CAED,
																	KEY_POL_CD,
																	POD_CD,
																	DEL_CD,
																	RCV_TERM_CD,
																	DE_TERM_CD,
																	NVL(CHARGE,'N') AS CHARGE,
																	APPRVAL,
																	PKG,
																	WEIGHT,
																	MEASUERE,
																	SPECIAL_D,
																	SPECIAL_R,
																	SPECIAL_A,
																	SPECIAL_B,
																	BDR,
																	NVL(ISSUE,'N') AS ISSUE,
																	NVL(RECEIVING,'N') AS RECEIVING,
																	VIA,
																 ROW_NUMBER() OVER (PARTITION BY BKG_NO,CNTR_NO  ORDER BY BKG_NO,CNTR_NO) AS CTR_RNUM,
																 ROW_NUMBER() OVER (PARTITION BY BKG_NO  ORDER BY BKG_NO ) AS RNUM
,SHIPPER_CODE
,POR
,POL
,POD
,DEL
,POR_NOD_CD
,DEL_NOD_CD
,BROKER
,BKG_OFC_NO
,HITCHMENT_YN
,TVVD
													FROM   (
																			SELECT    
																									VB.BKG_NO,
																									VB.BL_NO,
																									VB.OB_SLS_OFC_CD,/*Sales Office*/
																									VB.BKG_STS_CD,/*status1*/ 
																									VB.BKG_CGO_TP_CD,/*Status2*/
																									BKG_JOIN_FNC( CURSOR(SELECT CNTR_TPSZ_CD||'-'||ltrim(TO_CHAR(NVL(OP_CNTR_QTY, 0),'99990.99'))
																																			 FROM BKG_QUANTITY
																																			 WHERE BKG_NO = VB.BKG_NO                                                     
																																			 AND   CNTR_TPSZ_CD IS NOT NULL
																																			 ORDER BY CNTR_TPSZ_CD
																															 )
																											 ) QTY_BKG,/*QTY-BKG*/
																											 
																									(SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'2',NVL(OP_CNTR_QTY, 0)))
																																			 FROM BKG_QUANTITY
																																			 WHERE BKG_NO = VB.BKG_NO
																																			 AND   CNTR_TPSZ_CD IS NOT NULL
																									 ) TOTAL_BKG_T,/*TOTAL_BKG_T*/
																									 (SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'2',NULL,NVL(OP_CNTR_QTY, 0)))
																																			 FROM BKG_QUANTITY
																																			 WHERE BKG_NO = VB.BKG_NO
																																			 AND   CNTR_TPSZ_CD IS NOT NULL
																									 ) TOTAL_BKG_F,/*TOTAL_BKG_F*/
																											 
																									BKG_JOIN_FNC( CURSOR(SELECT  CNTR_TPSZ_CD||'-'||ltrim(TO_CHAR(NVL(sum(CNTR_VOL_QTY), 0),'99990.99'))
																																			 FROM    BKG_CONTAINER
																																			 WHERE BKG_NO = VB.BKG_NO
																																			 AND   CNTR_TPSZ_CD IS NOT NULL
																																			 GROUP BY CNTR_TPSZ_CD
																																			 ORDER BY CNTR_TPSZ_CD
																														 )
																											 ) QTY_CNTR,/*QTY-CNTR*/
																											 
																									(SELECT 'Y' FROM BKG_DOC_PROC_SKD K
																									 WHERE K.BKG_NO = VB.BKG_NO
																									 AND BKG_DOC_PROC_TP_CD ='CNTCFM'
                                                                                                     AND DOC_PERF_DELT_FLG ='N' 
                                                                                                     ) AS CNTR_CFM_FLG, /*Final Confirm*/

																									B.CNTR_NO CNTR_NO,/*NO.*/
																									B.CNTR_TPSZ_CD SZ, /*SZ*/
																									nvl(B.CNTR_VOL_QTY,0) VOL, /*Vol*/
																									B.MF_CFM_FLG FIRM,  /*Firm*/
																					                DECODE(BKG.BKG_STS_CD,'X','',
				                                                                                        DECODE((SELECT COP.COP_STS_CD FROM SCE_COP_HDR COP WHERE COP.BKG_NO = B.BKG_NO AND COP.CNTR_NO = B.CNTR_NO AND COP.COP_STS_CD <> 'X'),'F','MT',
					                                                                                          (SELECT MST.CNMV_STS_CD FROM MST_CONTAINER MST WHERE MST.CNTR_NO = B.CNTR_NO))) ST, /*ST*/
                                                                                                    NVL( (SELECT DECODE(MF_CFM_FLG,'Y','F','Y') 
																												FROM BKG_CNTR_MF_DESC MF
																												WHERE MF.BKG_NO = VB.BKG_NO 
																												  AND MF.CNTR_NO = B.CNTR_NO
																												  AND ROWNUM = 1)
																											,'N') CM, /*CM*/
	
																								    NVL( (SELECT 'Y' 
																												FROM BKG_CNTR_SEAL_NO 
																												WHERE BKG_NO = VB.BKG_NO 
																												  AND CNTR_NO = B.CNTR_NO
																												  AND CNTR_SEAL_NO IS NOT NULL 
																												  AND ROWNUM = 1)
																											,'N') SEAL, /*SEAL*/
																									
																									DECODE(VB.BKG_CUST_TP_CD,'S',REPLACE(VB.CUST_NM,chr(10),' ')) SHIPPER,/*Shipper*/
																									DECODE(VB.C_BKG_CUST_TP_CD,'C',REPLACE(VB.C_CUST_NM,chr(10),' ')) CONSIGNEE,/*CONSIGNEE*/
																									
																									NVL( (SELECT DECODE(CUST_CNT_CD,NULL,'N','Y')
																												FROM BKG_CUSTOMER 
																												WHERE BKG_NO = VB.BKG_NO 
																												AND   BKG_CUST_TP_CD = 'F'
																												AND ROWNUM = 1)
																											,'N') FF,/*FF*/
																									
																									NVL( (SELECT 'Y'
																												FROM BKG_BL_MK_DESC
																												WHERE BKG_NO = VB.BKG_NO 
																												AND ROWNUM = 1)
																											,'N') MD, /*M/D*/
																									NVL( (SELECT 'Y'
																												FROM BKG_XPT_IMP_LIC
																												WHERE BKG_NO = VB.BKG_NO 
																												AND   AES_TP_CD IN ('PU','DN','EX','AE','PA')
																												AND ROWNUM = 1)
																											,'N') AES, /*AES*/

																								   NVL(( SELECT 'Y' 
                                                                                                                FROM BKG_XPT_IMP_LIC
                                                                                                                WHERE 1=1 
																											    AND BKG_NO = VB.BKG_NO
                                                                                                        /* pod, del */
                                                                                                         #if (${mx_flg} =='I') 
                                                                                                                AND IO_BND_CD ='I'
                                                                                                                AND (SHPR_TAX_NO IS NOT NULL OR CNEE_TAX_NO IS NOT NULL OR NTFY_TAX_NO IS NOT NULL OR BRZ_DECL_NO IS NOT NULL)
                                                                                                         #end
                                                                                                        /* por , pol */
                                                                                                         #if (${mx_flg} == 'O' ) 
                                                                                                                AND IO_BND_CD ='O'
                                                                                                                AND (MX_SHPR_TAX_ID IS NOT NULL OR MX_CNEE_TAX_ID IS NOT NULL OR MX_NTFY_TAX_ID IS NOT NULL OR

																													 MX_SHPR_PFX_CTNT IS NOT NULL OR MX_CNEE_PFX_CTNT IS NOT NULL OR MX_NTFY_PFX_CTNT IS NOT NULL	) 

                                                                                                                AND CNT_CD IN ('MX', 'CO', 'EC', 'PE')
                                                                                                         #end
																												AND ROWNUM = 1
                                                                                                               ),'N') TAX_ID, /*MX*/

																									NVL( (SELECT 'Y'
																										 FROM BKG_XPT_IMP_LIC
																										 WHERE BKG_NO = VB.BKG_NO
																										 AND XPT_LIC_NO IS NOT NULL
																										 AND IO_BND_CD= 'O'
																										 AND ROWNUM =1 ),'N') EL_NO /*E/L*/,
																									NVL( (SELECT 'Y'	
																										 FROM BKG_XPT_IMP_LIC
																										 WHERE BKG_NO = VB.BKG_NO
																									     AND BRZ_DECL_NO IS NOT NULL
																										 AND IO_BND_CD ='O'
																										 AND ROWNUM =1 ),'N') DDE ,
																									NVL( (SELECT 'Y' 
																										 FROM BKG_XPT_IMP_LIC
																										 WHERE BKG_NO = VB.BKG_NO
																									     AND ID_DECL_CD IS NOT NULL
																									     AND IO_BND_CD ='O'
																										 AND ROWNUM =1),'N') PEB,
																									NVL( (SELECT 'Y'
																									   	 FROM BKG_XPT_IMP_LIC
																									     WHERE BKG_NO = VB.BKG_NO
               																						     AND CAED_TP_CD  IN ('CE','G7','EX','SM','IT','ND')
																									     AND IO_BND_CD ='O'
																									     AND ROWNUM =1),'N') CAED,  
																									KEY_POL_CD,
																									VB.POD_CD,/*POD*/
																									VB.DEL_CD,/*DEL*/
																									B.RCV_TERM_CD ,/*SCV-R*/
																									B.DE_TERM_CD ,/*SCV-D*/
																									
																									NVL( (SELECT DECODE(BKG_RATE_RESULT_FNC(VB.BKG_NO),'F','Y','N') FROM DUAL)
																											,'N') CHARGE, /*Charge*/
																											
																									NVL( (SELECT DECODE(RT_APLY_DT,NULL,'N','Y')
																												FROM BKG_RATE
																												WHERE BKG_NO = VB.BKG_NO 
																												AND ROWNUM = 1)
																											,'N') APPRVAL, /*Apprval*/
																									
																									(SELECT DECODE(DOC.PCK_QTY,0,'N',DECODE(DOC.PCK_QTY,SUM(CNTR.PCK_QTY),'Y','E'))
																									 FROM BKG_BL_DOC DOC, BKG_CONTAINER CNTR
																									 WHERE 1=1
																									 AND VB.BKG_NO = DOC.BKG_NO
																									 AND DOC.BKG_NO = CNTR.BKG_NO
																									 GROUP BY DOC.PCK_QTY
																									 ) PKG,
																									 (SELECT DECODE(DOC.ACT_WGT,0,'N',DECODE(DOC.ACT_WGT,SUM(CNTR.CNTR_WGT),'Y','E'))
																									  FROM BKG_BL_DOC DOC, BKG_CONTAINER CNTR
																									  WHERE 1=1
																									  AND VB.BKG_NO = DOC.BKG_NO
																									  AND DOC.BKG_NO = CNTR.BKG_NO
																									  GROUP BY DOC.ACT_WGT
																									  ) WEIGHT,
																									  (SELECT DECODE(DOC.MEAS_QTY,0,'N',DECODE(DOC.MEAS_QTY,SUM(CNTR.MEAS_QTY),'Y','E'))
																									   FROM BKG_BL_DOC DOC, BKG_CONTAINER CNTR
																									   WHERE 1=1
																									   AND VB.BKG_NO = DOC.BKG_NO
																									   AND DOC.BKG_NO = CNTR.BKG_NO
																									   GROUP BY DOC.MEAS_QTY
																									   ) MEASUERE,
																									VB.DCGO_FLG SPECIAL_D,/*Special_D*/
																									VB.RC_FLG SPECIAL_R,/*Special_R*/
																									VB.AWK_CGO_FLG SPECIAL_A, /*Special_A*/
																									VB.BB_CGO_FLG SPECIAL_B, /*Special_B*/
																									DOC.BDR_FLG BDR,/*BDR*/
																									
																									NVL((SELECT OBL_ISS_FLG
																									 FROM BKG_BL_ISS
																									 WHERE BKG_NO = VB.BKG_NO
																									 AND ROWNUM = 1),'N') ISSUE, /*BL_ISSUE*/
																									
																									VB.SI_FLG RECEIVING,/*SI_RECEIVING*/
																									VB.XTER_SI_CD VIA/*SI_VIA*/
--combine 관련 추가
,DECODE(VB.BKG_CUST_TP_CD, 'S', VB.CUST_CNT_CD) AS SHIPPER_CODE
,BKG.POR_CD AS POR
,BKG.POL_CD AS POL
,BKG.POD_CD AS POD
,BKG.DEL_CD AS DEL
,BKG.POR_NOD_CD
,BKG.DEL_NOD_CD
,DECODE(VB.BKG_CUST_TP_CD, 'B', VB.CUST_CNT_CD) AS BROKER
,BKG.BKG_OFC_CD AS BKG_OFC_NO
,BKG.HCMT_CMB_FLG AS HITCHMENT_YN
,BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD AS TVVD
																				FROM    BKG_CNTR_MANIFEST_V VB,
																								BKG_CONTAINER B ,
																								BKG_BL_DOC DOC
--combine 관련 추가
,BKG_BOOKING BKG
#if (${p_del_conti} != '') 
, MDM_LOCATION MDM
#end
																				WHERE   NVL(VB.BKG_STS_CD,'Z') <> 'X'
																				AND     VB.BKG_NO       = B.BKG_NO(+)
																				AND     VB.BKG_NO       = DOC.BKG_NO(+)
--combine 관련 추가
AND BKG.BKG_NO = VB.BKG_NO
																	/*VVD*/
																				AND     VB.KEY_VSL_CD     = SUBSTR(@[p_vvd], 1, 4)
																				AND     VB.KEY_SKD_VOY_NO = SUBSTR(@[p_vvd], 5, 4)
																				AND     VB.KEY_SKD_DIR_CD = SUBSTR(@[p_vvd], 9, 1) 
																				
																				/*POL*/
																	#if (${p_pol_cd} != '') 
																				AND     VB.KEY_POL_CD    LIKE '%'||@[p_pol_cd]||'%'
																	#end
														
																				/*POL YARD*/
																	#if (${p_pol_yd_cd} != '') 
																				AND     SUBSTR(VB.POL_YD_CD,-2) = @[p_pol_yd_cd]
																	#end
									 
																				/*POL L/T*/
																		#if (${p_pol_lt} == 'LC') 
																				AND     VB.KEY_POL_CD  = VB.POL_CD /*POL의 L/T의 콤보박스의 LOCAL선택시*/
																		#end
																		#if (${p_pol_lt} == 'TS') 
																				AND     VB.KEY_POL_CD  != VB.POL_CD/*POL의 L/T의 콤보박스의 TS선택시*/
																		#end

																				/*POR*/
																	#if (${p_por_cd} != '') 
																				AND     VB.POR_CD LIKE '%'||@[p_por_cd]||'%'
																				#end

																				/*A/POD*/
																	#if (${p_apod_cd} != '') 
																				AND     VB.KEY_POD_CD LIKE '%'||@[p_apod_cd]||'%'
																	#end

																				/*APOD L/T*/
																	#if (${p_apod_lt} == 'LC') 
																			AND     VB.KEY_POD_CD  = DOC.POD_CD /*A(Actual)/POD의 L/T의 콤보박스의 LOCAL선택시*/
																	#end
																	#if (${p_apod_lt} == 'TS') 
																				AND     VB.KEY_POD_CD  != DOC.POD_CD /*A/POD의 L/T의 콤보박스의 TS선택시*/
																	#end

																				/*DEL*/
																	#if (${p_del_cd} != '') 
																				AND     VB.DEL_CD LIKE '%'||@[p_del_cd]||'%'
																				#end

																				/*E/Q_TYPE*/
																	#if (${p_eq_type} != '') 
																				AND B.CNTR_TPSZ_CD = @[p_eq_type]
																	#end
																						 
																			 /*R/D R*/
																	 #if (${p_rcv_term_cd} != '') 
																			 AND VB.RCV_TERM_CD = @[p_rcv_term_cd]
																	 #end

																			 /*R/D D*/
																	 #if (${p_de_term_cd} != '') 
																			 AND VB.DE_TERM_CD= @[p_de_term_cd]
																	 #end
																			 
																			 /*BKG OFFICE*/
																	 #if (${p_bkg_ofc_cd} != '') 
																				 /*SUB*/
																		 #if (${p_ofc_cd} != '') 
																				 AND VB.BKG_OFC_CD IN (SELECT OFC_CD 
																												FROM   MDM_ORGANIZATION A 
																												START WITH A.OFC_CD LIKE '%'||@[p_bkg_ofc_cd]||'%'
																												CONNECT BY PRIOR A.OFC_CD = A.PRNT_OFC_CD
																										)
																		 #else  
																				 AND VB.BKG_OFC_CD LIKE '%'||@[p_bkg_ofc_cd]||'%'
																		 #end
																	 #end
																									
																			/*BKG STF*/
																	#if (${p_doc_usr_id} != '') 
																			AND UPPER(VB.DOC_USR_ID) LIKE '%'||UPPER(@[p_doc_usr_id])||'%'
																			#end
														
																			/*Sales Office*/
																	#if (${p_ob_sls_ofc_cd} != '') 
																			AND VB.OB_SLS_OFC_CD LIKE '%'||@[p_ob_sls_ofc_cd]||'%'
																	#end          
														
																			/*Sales Rep*/
																	#if (${p_ob_srep_cd} != '') 
																			AND VB.OB_SREP_CD LIKE '%'||@[p_ob_srep_cd]||'%'
																	#end

																			/*BKG Status*/
																	#if (${p_bkg_sts_cd} != '') 
																			AND VB.BKG_STS_CD LIKE '%'||@[p_bkg_sts_cd]||'%'
																			#end
														
																			/*Cargo Status*/
																	#if (${p_cnmv_sts_cd} == 'AP') 
																	  AND VB.BKG_CGO_TP_CD <> 'P'
																	#elseif (${p_cnmv_sts_cd} != 'A') 
																	  AND VB.BKG_CGO_TP_CD = @[p_cnmv_sts_cd]
																	#end
														
																		/*Zone OCN*/
																#if (${p_zone_cd} == 'OCN') 
																		AND (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POL_CD) <> (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POD_CD)			
																		#end

																		/*Zone IPT*/
																#if (${p_zone_cd} == 'IPT') 
																		AND (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POL_CD) = (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POD_CD)			
																		#end

														                /*DEL CONTINENT*/
																	#if (${p_del_conti} != '') 
																		     AND DOC.DEL_CD = MDM.LOC_CD
                                                                             AND MDM.CONTI_CD = @[p_del_conti]
																			#end

																		/*Special Cargo DANGER*/
																#if (${p_dcgo_flg} !='' || ${p_rc_flg} != ''||${p_awk_cgo_flg} != ''||${p_bb_cgo_flg} != '')
																		AND (1 = 2
																	#if (${p_dcgo_flg} != '') 
																		OR VB.DCGO_FLG = 'Y'
																	#end

																		/*Special Cargo REEFER*/
																	#if (${p_rc_flg} != '') 
																		OR VB.RC_FLG = 'Y'				
																	#end

																		/*Special Cargo AWKWARD*/
																	#if (${p_awk_cgo_flg} != '') 
																		OR VB.AWK_CGO_FLG = 'Y'
																	#end

																		/*Special Cargo BREAK BULK*/
																	#if (${p_bb_cgo_flg} != '') 
																		OR VB.BB_CGO_FLG = 'Y'
																	#end
																		)
																#end
														
																		/*BDR Status*/
																#if (${p_bdr_flg} != '') 
																		AND DOC.BDR_FLG = @[p_bdr_flg] --YN
																		#end
														
																		/*SI_FLG*/
																#if (${p_si_flg} != '') 
																		AND VB.SI_FLG = @[p_si_flg] --YN
																		#end
														
																		/*B/L Office*/
																#if (${p_obl_iss_ofc_cd} != '') 
																		AND   EXISTS  ( SELECT 'Y'
																						FROM BKG_BL_ISS
																						WHERE BKG_NO = VB.BKG_NO
																						AND   OBL_ISS_OFC_CD LIKE '%'||@[p_obl_iss_ofc_cd]||'%'
																						)
																		#end
																		/* Customer */
															
																		AND EXISTS (SELECT 'Y' 
																					FROM BKG_CUSTOMER Z
																					WHERE 1=1
																					AND Z.BKG_NO = VB.BKG_NO
																		/*CUSTOMER TP CD*/
																		#if (${p_bkg_cust_tp_cd} !='')			
																					AND Z.BKG_CUST_TP_CD = @[p_bkg_cust_tp_cd]
																		#end
																		/*CUSTOMER CODE COUNTRY --KR*/
																		#if (${p_cust_cnt_cd} !='')
																					AND Z.CUST_CNT_CD =@[p_cust_cnt_cd]
																		#end
																		/*CUSTOMER SEQ --001*/
																		#if (${p_cust_seq} !='')
																					AND Z.CUST_SEQ =@[p_cust_seq]
																		#end
																		/*CUSTOMER Name*/
																		#if (${p_cust_nm} != '') 
																					AND UPPER(Z.CUST_NM) LIKE '%'||UPPER(@[p_cust_nm])||'%'
																		#end
																					)
												 )
															WHERE 1=1
												#if(${BL} !='' || ${CFC} != '' || ${CMC} != '' || ${MD} != '' || ${VLC} != ''|| ${IS} != '' || ${RC} != '')
															AND (1 = 2 
												#if (${BL} != '') 
															OR   NVL(CHARGE,'N') = 'N'       /*UN RATE BL       */
												#end

												#if (${CFC} != '') 
															OR   NVL(CNTR_CFM_FLG,'N') = 'N' /*UN CONFIRM CNTR  */
												#end

												#if (${CMC} != '') 
															OR   NVL(CM,'N') = 'N'            /*NON CM           */
												#end

												#if (${MD} != '') 
															OR   NVL(MD,'N') = 'N'           /*NON MD           */
												#end

												#if (${VLC} != '') 
															OR   NVL(ST,'N') <> 'VL'         /*NON VL           */ 
												#end

												#if (${IS} != '') 
															OR   NVL(ISSUE,'N') = 'N'         /*NON ISSUE           */ 
												#end

												#if (${RC} != '') 
															OR   NVL(RECEIVING,'N')  = 'N'   /*NON SR Received BL */
												#end
                                                             )
												#end
									)
									ORDER BY  BKG_NO,CNTR_NO
        )
)
WHERE RNUM BETWEEN NVL(@[rows_per_page],50) * (NVL(@[curr_page],1) - 1) + 1
           AND     NVL(@[rows_per_page],50) *  NVL(@[curr_page],1)			]]></sql>
			<params>
				<param name="p_vvd" type="12" value="" out="N"/>
				<param name="p_pol_cd" type="12" value="" out="N"/>
				<param name="p_pol_yd_cd" type="12" value="" out="N"/>
				<param name="p_por_cd" type="12" value="" out="N"/>
				<param name="p_apod_cd" type="12" value="" out="N"/>
				<param name="p_del_cd" type="12" value="" out="N"/>
				<param name="p_eq_type" type="12" value="" out="N"/>
				<param name="p_rcv_term_cd" type="12" value="" out="N"/>
				<param name="p_de_term_cd" type="12" value="" out="N"/>
				<param name="p_bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="p_doc_usr_id" type="12" value="" out="N"/>
				<param name="p_ob_sls_ofc_cd" type="12" value="" out="N"/>
				<param name="p_ob_srep_cd" type="12" value="" out="N"/>
				<param name="p_bkg_sts_cd" type="12" value="" out="N"/>
				<param name="p_cnmv_sts_cd" type="12" value="" out="N"/>
				<param name="p_del_conti" type="12" value="" out="N"/>
				<param name="p_bdr_flg" type="12" value="" out="N"/>
				<param name="p_si_flg" type="12" value="" out="N"/>
				<param name="p_obl_iss_ofc_cd" type="12" value="" out="N"/>
				<param name="p_bkg_cust_tp_cd" type="12" value="" out="N"/>
				<param name="p_cust_cnt_cd" type="12" value="" out="N"/>
				<param name="p_cust_seq" type="12" value="" out="N"/>
				<param name="p_cust_nm" type="12" value="" out="N"/>
				<param name="rows_per_page" type="12" value="" out="N"/>
				<param name="curr_page" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
