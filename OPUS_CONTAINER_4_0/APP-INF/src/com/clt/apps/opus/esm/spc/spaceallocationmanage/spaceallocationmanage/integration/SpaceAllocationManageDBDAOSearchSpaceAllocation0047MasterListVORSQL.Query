<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpaceAllocationManageDBDAOSearchSpaceAllocation0047MasterListVORSQL">
			<desc><![CDATA[SpaceAllocationManage의 데이타 모델에 해당되는 값을 불러온다.]]></desc>
			<sql><![CDATA[
WITH PARAMS AS (
    SELECT @[year]                AS COST_YR   ,
           @[week]                AS COST_WK   ,
           TO_NUMBER(@[duration]) AS DURATION  ,
           @[trade]               AS TRD_CD    ,
           @[subtrade]            AS SUB_TRD_CD,
           @[lane]                AS RLANE_CD  ,
           @[bound]               AS DIR_CD    ,
           o.ofc_cd               AS OFC_CD    ,
           l.conti_cd             AS OFC_CONTI ,
           @[vvd]                 AS VVD       ,
           @[fcast]               AS STS
      FROM MDM_LOCATION     L,
           MDM_ORGANIZATION O
     WHERE L.LOC_CD = O.LOC_CD
       AND O.OFC_CD = @[office]
)
, WEEKS AS (
    SELECT /*+ INDEX(D XPKCOA_WK_PRD)*/
           D.COST_YR,
           D.COST_WK,
           P.TRD_CD,
           P.SUB_TRD_CD,
           P.RLANE_CD,
           P.DIR_CD,
           P.OFC_CD,
           P.OFC_CONTI,
           P.VVD,
           P.STS
      FROM COA_WK_PRD D,
           PARAMS     P
     WHERE D.COST_YR||D.COST_WK >= P.COST_YR||P.COST_WK
       AND ROWNUM <= P.DURATION
       AND P.VVD IS NULL
)
, REP_VVDS AS (
    SELECT V.TRD_CD     AS REP_TRD_CD    ,
           V.SUB_TRD_CD AS REP_SUB_TRD_CD,
           V.RLANE_CD,
           V.DIR_CD  ,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ,
           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON,
           V.COST_WK   ,
           V.VSL_CD    ,
           V.SKD_VOY_NO,
           V.DIR_CD AS SKD_DIR_CD,
           V.LST_LODG_PORT_CD    ,
           V.LST_LODG_PORT_ETD_DT,
           P.OFC_CD              ,
           P.OFC_CONTI           ,
           P.STS
      FROM COA_MON_VVD V,
           WEEKS       P
     WHERE V.TRD_CD     = SAQ_GET_REP_TRD_FNC(V.RLANE_CD)
       AND V.SUB_TRD_CD = SAQ_GET_REP_SUB_TRD_FNC(V.RLANE_CD)
       AND SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK = P.COST_YR||P.COST_WK
       AND V.TRD_CD     LIKE P.TRD_CD     ||'%'
       AND V.SUB_TRD_CD LIKE P.SUB_TRD_CD ||'%'
       AND V.RLANE_CD   LIKE P.RLANE_CD   ||'%'
       AND V.DIR_CD     LIKE P.DIR_CD     ||'%'
       AND (    V.DELT_FLG IS NULL
             OR V.DELT_FLG = 'N'
             OR EXISTS ( SELECT 1
                           FROM COA_MON_VVD N
                          WHERE N.SLAN_CD    = SUBSTR(V.RLANE_CD, 1, 3)
                            AND N.VSL_CD     = V.VSL_CD
                            AND N.SKD_VOY_NO = V.SKD_VOY_NO
                            AND N.DIR_CD     = V.DIR_CD
                            AND N.DELT_FLG   = 'N' ))
       AND P.VVD IS NULL
    UNION ALL
    SELECT V.TRD_CD     AS REP_TRD_CD    ,
           V.SUB_TRD_CD AS REP_SUB_TRD_CD,
           V.RLANE_CD,
           V.DIR_CD  ,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ,
           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON,
           V.COST_WK   ,
           V.VSL_CD    ,
           V.SKD_VOY_NO,
           V.DIR_CD AS SKD_DIR_CD,
           V.LST_LODG_PORT_CD    ,
           V.LST_LODG_PORT_ETD_DT,
           P.OFC_CD              ,
           P.OFC_CONTI           ,
           P.STS
      FROM COA_MON_VVD V,
           PARAMS      P
     WHERE V.TRD_CD     = SAQ_GET_REP_TRD_FNC(V.RLANE_CD)
       AND V.SUB_TRD_CD = SAQ_GET_REP_SUB_TRD_FNC(V.RLANE_CD)
       AND V.VSL_CD     = SUBSTR(P.VVD, 1, 4)
       AND V.SKD_VOY_NO = SUBSTR(P.VVD, 5, 4)
       AND V.DIR_CD     = SUBSTR(P.VVD, 9)
       AND (    V.DELT_FLG IS NULL
             OR V.DELT_FLG = 'N'
             OR EXISTS ( SELECT 1
                           FROM COA_MON_VVD N
                          WHERE N.SLAN_CD = SUBSTR(V.RLANE_CD, 1, 3)
                            AND N.VSL_CD = V.VSL_CD
                            AND N.SKD_VOY_NO = V.SKD_VOY_NO
                            AND N.DIR_CD = V.DIR_CD
                            AND N.DELT_FLG = 'N' ))
       AND P.VVD IS NOT NULL
)
, VSL_PORT_SKD AS (
    SELECT V.REP_TRD_CD   ,
           V.REP_SUB_TRD_CD,
           V.RLANE_CD      ,
           V.DIR_CD        ,
           V.COST_YR       ,
           V.COST_MON      ,
           V.COST_WK       ,
           V.VSL_CD        ,
           V.SKD_VOY_NO    ,
           V.SKD_DIR_CD    ,
           NVL(VPS.YD_CD, VPS.VPS_PORT_CD) AS PORT_CD,
           VPS.CLPT_SEQ         AS PORT_SEQ,
           VPS.TURN_PORT_IND_CD AS PORT_IND,
           L.CONTI_CD           AS CONTI_CD, 
           DECODE(SIGN(VPS.VPS_ETD_DT - GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS.VPS_PORT_CD )), -1, 'Y', 'N') AS PORT_PAST,
           VPS.VPS_ETA_DT AS ETA_DT,
           VPS.VPS_ETD_DT AS ETD_DT,
           V.LST_LODG_PORT_CD    ,
           V.LST_LODG_PORT_ETD_DT,
           V.OFC_CD              ,
           V.OFC_CONTI           ,
           V.STS                 ,
           NVL(VPS.SKD_CNG_STS_CD, ' ') AS CNG_STS_CD,
           MIN(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MIN_SEQ,
           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MAX_SEQ,
           COUNT(*) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS PORT_CNT
      FROM MDM_LOCATION     L  ,
           VSK_VSL_PORT_SKD VPS,
           REP_VVDS         V
     WHERE L.LOC_CD       = VPS.VPS_PORT_CD
       AND VPS.VSL_CD     = V.VSL_CD
       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO
       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD
)
, VVD_POL_POD AS (
    SELECT REP_TRD_CD          ,
           REP_SUB_TRD_CD      ,
           RLANE_CD            ,
           DIR_CD              ,
           TRD_CD              ,
           SUB_TRD_CD          ,
           COST_YR             ,
           COST_MON            ,
           COST_WK             ,
           VSL_CD              ,
           SKD_VOY_NO          ,
           SKD_DIR_CD          ,
           POL_CD              ,
           POL_SEQ             ,
           POL_CONTI           ,
           POL_PAST            ,
           POL_ETA_DT          ,
           POL_ETD_DT          ,
           POD_CD              ,
           POD_SEQ             ,
           POD_CONTI           ,
           POD_PAST            ,
           POD_ETA_DT          ,
           POD_ETD_DT          ,
           IOC_CD              ,
           PAST                ,
           LST_LODG_PORT_CD    ,
           LST_LODG_PORT_ETD_DT,
           OFC_CD              ,
           OFC_CONTI           ,
           STS                 ,
           LD_PORT             ,
           PL_PORT_CNT         ,
           PD_PORT_CNT         ,
           PL_PD_PORT_CNT
      FROM (
             SELECT REP_TRD_CD          ,
                    REP_SUB_TRD_CD      ,
                    RLANE_CD            ,
                    DIR_CD              ,
                    TRD_CD              ,
                    SUB_TRD_CD          ,
                    COST_YR             ,
                    COST_MON            ,
                    COST_WK             ,
                    VSL_CD              ,
                    SKD_VOY_NO          ,
                    SKD_DIR_CD          ,
                    POL_CD              ,
                    POL_SEQ             ,
                    POL_CONTI           ,
                    POL_PAST            ,
                    POL_ETA_DT          ,
                    POL_ETD_DT          ,
                    POD_CD              ,
                    POD_SEQ             ,
                    POD_CONTI           ,
                    POD_PAST            ,
                    POD_ETA_DT          ,
                    POD_ETD_DT          ,
                    IOC_CD              ,
                    PAST                ,
                    LST_LODG_PORT_CD    ,
                    LST_LODG_PORT_ETD_DT,
                    OFC_CD              ,
                    OFC_CONTI           ,
                    STS                 ,
                    LD_PORT             ,
                    PL_PORT_CNT         ,
                    PD_PORT_CNT         ,
                    ROW_NUMBER() OVER (PARTITION BY RLANE_CD, TRD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, POD_SEQ, PL_PORT_CNT, PD_PORT_CNT, POL_CD
                                           ORDER BY RLANE_CD, TRD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, PL_PORT_CNT, PD_PORT_CNT, POL_CD) AS PL_PD_PORT_CNT
               FROM (
                       SELECT PL.REP_TRD_CD    ,
                              PL.REP_SUB_TRD_CD,
                              PL.RLANE_CD      ,
                              PL.DIR_CD        ,
                              DRL.TRD_CD       ,
                              DRL.SUB_TRD_CD   ,
                              PL.COST_YR       ,
                              PL.COST_MON      ,
                              PL.COST_WK       ,
                              PL.VSL_CD        ,
                              PL.SKD_VOY_NO    ,
                              PL.SKD_DIR_CD    ,
                              PL.PORT_CD        AS POL_CD    ,
                              MAX(PL.PORT_SEQ)  AS POL_SEQ   ,
                              PL.CONTI_CD       AS POL_CONTI ,
                              MIN(PL.PORT_PAST) AS POL_PAST  ,
                              PL.ETA_DT         AS POL_ETA_DT,
                              PL.ETD_DT         AS POL_ETD_DT,
                              PD.PORT_CD        AS POD_CD    ,
                              (CASE
                                    WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ)
                                                                            ELSE CASE
                                                                                      WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) THEN MAX(PD.MAX_SEQ)
                                                                                  END
                                END
                              ) AS POD_SEQ,
                              PD.CONTI_CD       AS POD_CONTI ,
                              MIN(PD.PORT_PAST) AS POD_PAST  ,
                              PD.ETA_DT         AS POD_ETA_DT,
                              PD.ETD_DT         AS POD_ETD_DT,
                              DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')            AS IOC_CD,
                              DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y') AS PAST  ,
                              PL.LST_LODG_PORT_CD    ,
                              PL.LST_LODG_PORT_ETD_DT,
                              PL.OFC_CD              ,
                              PL.OFC_CONTI           ,
                              PL.STS                 ,
                              (
                                SUBSTR((SELECT MAX(LTRIM(TO_CHAR(S1.PORT_SEQ,'FM000'))|| S1.PORT_CD)
                                          FROM VSL_PORT_SKD S1
                                         WHERE S1.CNG_STS_CD <> 'S'),4)
                              ) AS LD_PORT,
                   PL.PORT_CNT AS PL_PORT_CNT,
                              PD.PORT_CNT AS PD_PORT_CNT
                         FROM MDM_DTL_REV_LANE DRL,
                              VSL_PORT_SKD     PD ,
                              VSL_PORT_SKD     PL
                        WHERE DRL.RLANE_CD        = PL.RLANE_CD
                          AND DRL.VSL_SLAN_DIR_CD = PL.DIR_CD
                          AND DRL.FM_CONTI_CD     = PL.CONTI_CD
                          AND DRL.TO_CONTI_CD     = PD.CONTI_CD
                          AND PD.REP_TRD_CD       = PL.REP_TRD_CD
                          AND PD.REP_SUB_TRD_CD   = PL.REP_SUB_TRD_CD
                          AND PD.RLANE_CD         = PL.RLANE_CD
                          AND PD.VSL_CD           = PL.VSL_CD
                          AND PD.SKD_VOY_NO       = PL.SKD_VOY_NO
                          AND PD.SKD_DIR_CD       = PL.SKD_DIR_CD
                          AND PD.PORT_CD         <> PL.PORT_CD
                          AND PD.PORT_SEQ         > PL.PORT_SEQ
                          AND (    PL.PORT_SEQ = PL.MAX_SEQ   -- 단독 CALLING 또는 DOUBLE CALLING 인데 마지막 PORT 경우는 모두
                                OR PD.PORT_SEQ < PL.MAX_SEQ ) -- DOUBLE CALLING PORT중 POD 가 LAST DOUBLE CALLING PORT 보다 앞인 경우만 FILTERING
                     GROUP BY PL.REP_TRD_CD    ,
                              PL.REP_SUB_TRD_CD,
                              PL.RLANE_CD      ,
                              PL.DIR_CD        ,
                              DRL.TRD_CD       ,
                              DRL.SUB_TRD_CD   ,
                              PL.COST_YR       ,
                              PL.COST_MON      ,
                              PL.COST_WK       ,
                              PL.VSL_CD        ,
                              PL.SKD_VOY_NO    ,
                              PL.SKD_DIR_CD    ,
                              PL.PORT_CD       ,
                              PL.CONTI_CD      ,
                              PD.PORT_CD       ,
                              PD.CONTI_CD      ,
                              PL.ETA_DT        ,
                              PL.ETD_DT        ,
                              PD.ETA_DT        ,
                              PD.ETD_DT        ,
                              DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O'),
                              DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y'),
                              PL.LST_LODG_PORT_CD    ,
                              PL.LST_LODG_PORT_ETD_DT,
                              PL.OFC_CD              ,
                              PL.OFC_CONTI           ,
                              PL.STS                 ,
                              PL.PORT_CNT            ,
                              PD.PORT_CNT
                    )
           ) A
     WHERE A.PL_PD_PORT_CNT = '1'
)
, VVDS AS (
    SELECT DISTINCT
           REP_TRD_CD          ,
           REP_SUB_TRD_CD      ,
           RLANE_CD            ,
           DIR_CD              ,
           TRD_CD              ,
           SUB_TRD_CD          ,
           COST_YR             ,
           COST_MON            ,
           COST_WK             ,
           VSL_CD              ,
           SKD_VOY_NO          ,
           SKD_DIR_CD          ,
           IOC_CD              ,
           LST_LODG_PORT_CD    ,
           LST_LODG_PORT_ETD_DT,
           OFC_CD              ,
           OFC_CONTI           ,
           STS
      FROM VVD_POL_POD VPP
)
, BKG_DATA AS (
    SELECT REP_TRD_CD          ,
           REP_SUB_TRD_CD      ,
           RLANE_CD            ,
           DIR_CD              ,
           COST_YR             ,
           COST_MON            ,
           COST_WK             ,
           VSL_CD              ,
           SKD_VOY_NO          ,
           SKD_DIR_CD          ,
           POL_CD              ,
           POD_CD              ,
           POL_YD_CD           ,
           POD_YD_CD           ,
           IOC_CD              ,
           TS_FLG              ,
           PAST                ,
           LST_LODG_PORT_ETD_DT,
           LST_LODG_PORT_CD    ,
           TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY,
           TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_TTL_WGT,
           OFC_CD
      FROM (
              SELECT VPP.REP_TRD_CD          ,
                     VPP.REP_SUB_TRD_CD      ,
                     VPP.RLANE_CD            ,
                     VPP.DIR_CD              ,
                     VPP.COST_YR             ,
                     VPP.COST_MON            ,
                     VPP.COST_WK             ,
                     VPP.VSL_CD              ,
                     VPP.SKD_VOY_NO          ,
                     VPP.SKD_DIR_CD          ,
                     VPP.IOC_CD              ,
                     DECODE(BV.VSL_PRE_PST_CD, 'T', 'N', 'Y') AS TS_FLG,
                     VPP.PAST                ,
                     VPP.LST_LODG_PORT_ETD_DT,
                     VPP.LST_LODG_PORT_CD    ,
                     (
                        SELECT    TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')
                               || TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY *( SELECT TS.CNTR_TPSZ_TARE_WGT
                                                                                                                                      FROM MDM_CNTR_TP_SZ TS
                                                                                                                                     WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
                          FROM BKG_QUANTITY Q
                         WHERE B.BKG_NO      = Q.BKG_NO
                           AND Q.OP_CNTR_QTY > 0
                     ) AS VAL,
                     BV.BKG_NO   ,
                     BV.POL_CD   ,
                     BV.POD_CD   ,
                     BV.POL_YD_CD,
                     BV.POD_YD_CD,
                     O.OFC_CD
                FROM SPC_OFC_LVL O  ,
                     BKG_BOOKING B  ,
                     BKG_VVD     BV ,
                     VVD_POL_POD VPP,
                     BKG_BL_DOC  D
               WHERE O.OFC_TP_CD     IN ('BB', 'BA', 'BS')
                 AND O.OFC_CD         = B.OB_SLS_OFC_CD
                 AND VPP.COST_YR||VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                 AND B.BKG_STS_CD    IN ('W', 'F')
                 AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
                 AND B.BKG_NO         = BV.BKG_NO
                 AND BV.VSL_CD        = VPP.VSL_CD
                 AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO
                 AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD
                 AND BV.POL_CD        = SUBSTR(VPP.POL_CD, 1, 5)
                 AND BV.POD_CD        = SUBSTR(VPP.POD_CD, 1, 5)
                 AND VPP.POL_CONTI    = VPP.OFC_CONTI
                 AND B.BKG_NO         = D.BKG_NO
               )
)
  SELECT Z.REP_TRD_CD     AS TRD_CD    ,
         Z.REP_SUB_TRD_CD AS SUB_TRD_CD,
         Z.RLANE_CD  ,
         Z.DIR_CD    ,
         Z.COST_YR   ,
         Z.COST_MON  ,
         Z.COST_WK   ,
         Z.VSL_CD    ,
         Z.SKD_VOY_NO,
         Z.SKD_DIR_CD,
         Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD AS VVD,
         SPC_GET_WK_VVD_BSA_FNC('VOL'    , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS BSA_VOL,
         SPC_GET_WK_VVD_BSA_FNC('WGT'    , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS BSA_WGT,
         SPC_GET_WK_VVD_BSA_FNC('VOL_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_VOL,
         SPC_GET_WK_VVD_BSA_FNC('WGT_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_WGT,
         SPC_GET_WK_VVD_BSA_FNC('D5_LOD' , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_HC ,
         SPC_GET_WK_VVD_BSA_FNC('D7_LOD' , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_45 ,
         SPC_GET_WK_VVD_BSA_FNC('RF_LOD' , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_RF ,
         TO_NUMBER(SUBSTR(FD,  1, 12)) AS FD_VOL,
         TO_NUMBER(SUBSTR(FD, 13, 12)) AS FD_WGT,
         QTA_OCN               ,
         QTA_IPC               ,
         FC_OCN_VOL            ,
         FC_OCN_WGT            ,
         FC_IPC_VOL            ,
         FC_IPC_WGT            ,
         EP_VOL                ,
         AL_OCN_VOL            ,
         AL_OCN_WGT            ,
         AL_IPC_VOL            ,
         AL_IPC_WGT            ,
         BKG_OCN_VOL           ,
         BKG_OCN_WGT           ,
         BKG_IPC_VOL           ,
         BKG_IPC_WGT           ,
         Z.LST_LODG_PORT_ETD_DT,
         Z.LST_LODG_PORT_CD    ,
         NVL(C.CTRL_LVL_CD     , 'L') AS CTRL_PORT_FLG   ,
         NVL(C.CTRL_40FT_HC_FLG, 'N') AS CTRL_40FT_HC_FLG,
         NVL(C.CTRL_45FT_HC_FLG, 'N') AS CTRL_45FT_HC_FLG,
         NVL(C.CTRL_53FT_FLG   , 'N') AS CTRL_53FT_FLG   ,
         NVL(C.CTRL_RF_FLG     , 'N') AS CTRL_RF_FLG     ,
         NVL(C.CTRL_WGT_FLG    , 'N') AS CTRL_WGT_FLG    ,
         NVL(C.CTRL_SPC_FLG    , 'N') AS CTRL_SPC_FLG    ,
         DECODE(C.RLANE_CD, NULL, 'I', 'R') AS IBFLAG,
         SG.SPC_GNTE_QTY AS MTY_GNTE
    FROM (
            SELECT REP_TRD_CD    ,
                   REP_SUB_TRD_CD,
                   RLANE_CD      ,
                   DIR_CD        ,
                   COST_YR       ,
                   COST_MON      ,
                   COST_WK       ,
                   VSL_CD        ,
                   SKD_VOY_NO    ,
                   SKD_DIR_CD    ,
                   (
                        TO_CHAR(SPC_GET_WK_VVD_BSA_FNC('VOL', V.REP_TRD_CD, V.RLANE_CD, V.SKD_DIR_CD, V.COST_YR||V.COST_WK, V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD), 'FM00000000.000')
                     || TO_CHAR(SPC_GET_WK_VVD_BSA_FNC('WGT', V.REP_TRD_CD, V.RLANE_CD, V.SKD_DIR_CD, V.COST_YR||V.COST_WK, V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD), 'FM00000000.000')
                   ) AS FD,
                   SUM(QTA_OCN)     AS QTA_OCN    ,
                   SUM(QTA_IPC)     AS QTA_IPC    ,
                   SUM(FC_OCN_VOL)  AS FC_OCN_VOL ,
                   SUM(FC_OCN_WGT)  AS FC_OCN_WGT ,
                   SUM(FC_IPC_VOL)  AS FC_IPC_VOL ,
                   SUM(FC_IPC_WGT)  AS FC_IPC_WGT ,
                   SUM(EP_VOL)      AS EP_VOL     ,
                   SUM(AL_OCN_VOL)  AS AL_OCN_VOL ,
                   SUM(AL_OCN_WGT)  AS AL_OCN_WGT ,
                   SUM(AL_IPC_VOL)  AS AL_IPC_VOL ,
                   SUM(AL_IPC_WGT)  AS AL_IPC_WGT ,
                   SUM(BKG_OCN_VOL) AS BKG_OCN_VOL,
                   SUM(BKG_OCN_WGT) AS BKG_OCN_WGT,
                   SUM(BKG_IPC_VOL) AS BKG_IPC_VOL,
                   SUM(BKG_IPC_WGT) AS BKG_IPC_WGT,
                   LST_LODG_PORT_ETD_DT,
                   LST_LODG_PORT_CD
              FROM (
                      -- LOAD QUOTA (POL)
                      SELECT 2 AS FLG,
                             VPP.REP_TRD_CD    ,
                             VPP.REP_SUB_TRD_CD,
                             VPP.RLANE_CD      ,
                             VPP.DIR_CD        ,
                             VPP.COST_YR       ,
                             VPP.COST_MON      ,
                             VPP.COST_WK       ,
                             VPP.VSL_CD        ,
                             VPP.SKD_VOY_NO    ,
                             VPP.SKD_DIR_CD    ,
                             NULL AS FD_VOL    ,
                             NULL AS FD_WGT    ,
                             DECODE(VPP.IOC_CD, 'O', MQ.LOD_QTY) AS QTA_OCN,
                             DECODE(VPP.IOC_CD, 'I', MQ.LOD_QTY) AS QTA_IPC,
                             NULL AS FC_OCN_VOL ,
                             NULL AS FC_OCN_WGT ,
                             NULL AS FC_IPC_VOL ,
                             NULL AS FC_IPC_WGT ,
                             NULL AS EP_VOL     ,
                             NULL AS AL_OCN_VOL ,
                             NULL AS AL_OCN_WGT ,
                             NULL AS AL_IPC_VOL ,
                             NULL AS AL_IPC_WGT ,
                             NULL AS BKG_OCN_VOL,
                             NULL AS BKG_OCN_WGT,
                             NULL AS BKG_IPC_VOL,
                             NULL AS BKG_IPC_WGT,
                             VPP.LST_LODG_PORT_ETD_DT,
                             VPP.LST_LODG_PORT_CD
                        FROM SAQ_MON_CFM_QTA MQ,
                             SAQ_MON_QTA_RLSE MQR,
                             VVD_POL_POD VPP
                       WHERE ( SELECT MQV.POL_CD
                                 FROM SAQ_MON_CFM_QTA MQV
                                WHERE MQV.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO
                                  AND MQV.BSE_YR           = MQR.BSE_YR
                                  AND MQV.BSE_QTR_CD       = MQR.BSE_QTR_CD
                                  AND MQV.QTA_TGT_CD       = 'T'
                                  AND MQV.TRD_CD           = VPP.TRD_CD
                                  AND MQV.DIR_CD           = VPP.DIR_CD
                                  AND ROWNUM = 1 ) <> '00000'
                         AND MQR.BSE_YR          = VPP.COST_YR
                         AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(VPP.COST_MON) / 3)||'Q'
                         AND MQR.QTA_RLSE_STS_CD = 'R'
                         AND MQ.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO
                         AND MQ.BSE_YR           = MQR.BSE_YR
                         AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD
                         AND MQ.QTA_TGT_CD       = 'T'
                         AND MQ.TRD_CD           = VPP.TRD_CD
                         AND MQ.RLANE_CD         = VPP.RLANE_CD
                         AND MQ.DIR_CD           = VPP.DIR_CD
                         AND MQ.VSL_CD           = VPP.VSL_CD
                         AND MQ.SKD_VOY_NO       = VPP.SKD_VOY_NO
                         AND MQ.SKD_DIR_CD       = VPP.SKD_DIR_CD
                         AND MQ.POL_CD           = SUBSTR(VPP.POL_CD, 1, 5)
                         AND MQ.POD_CD           = SUBSTR(VPP.POD_CD, 1, 5)
                         AND VPP.POL_CONTI       = VPP.OFC_CONTI
                      UNION ALL
                      -- LOAD QUOTA (OFFICE)
                      SELECT 3 AS FLG,
                             VPP.REP_TRD_CD    ,
                             VPP.REP_SUB_TRD_CD,
                             VPP.RLANE_CD      ,
                             VPP.DIR_CD        ,
                             VPP.COST_YR       ,
                             VPP.COST_MON      ,
                             VPP.COST_WK       ,
                             VPP.VSL_CD        ,
                             VPP.SKD_VOY_NO    ,
                             VPP.SKD_DIR_CD    ,
                             NULL AS FD_VOL    ,
                             NULL AS FD_WGT    ,
                             DECODE(VPP.IOC_CD, 'O', MQ.LOD_QTY) AS QTA_OCN,
                             DECODE(VPP.IOC_CD, 'I', MQ.LOD_QTY) AS QTA_IPC,
                             NULL AS FC_OCN_VOL ,
                             NULL AS FC_OCN_WGT ,
                             NULL AS FC_IPC_VOL ,
                             NULL AS FC_IPC_WGT ,
                             NULL AS EP_VOL     ,
                             NULL AS AL_OCN_VOL ,
                             NULL AS AL_OCN_WGT ,
                             NULL AS AL_IPC_VOL ,
                             NULL AS AL_IPC_WGT ,
                             NULL AS BKG_OCN_VOL,
                             NULL AS BKG_OCN_WGT,
                             NULL AS BKG_IPC_VOL,
                             NULL AS BKG_IPC_WGT,
                             VPP.LST_LODG_PORT_ETD_DT,
                             VPP.LST_LODG_PORT_CD
                        FROM SAQ_MON_CFM_QTA  MQ ,
                             SAQ_MON_QTA_RLSE MQR,
                             VVDS             VPP
                       WHERE ( SELECT MQV.POL_CD
                                 FROM SAQ_MON_CFM_QTA MQV
                                WHERE MQV.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO
                                  AND MQV.BSE_YR           = MQR.BSE_YR
                                  AND MQV.BSE_QTR_CD       = MQR.BSE_QTR_CD
                                  AND MQV.QTA_TGT_CD       = 'T'
                                  AND MQV.TRD_CD           = VPP.TRD_CD
                                  AND MQV.DIR_CD           = VPP.DIR_CD
                                  AND ROWNUM = 1 ) = '00000'
                         AND MQR.BSE_YR          = VPP.COST_YR
                         AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(VPP.COST_MON)/3)||'Q'
                         AND MQR.QTA_RLSE_STS_CD = 'R'
                         AND MQ.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO
                         AND MQ.BSE_YR           = MQR.BSE_YR
                         AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD
                         AND MQ.QTA_TGT_CD       = 'T'
                         AND MQ.TRD_CD           = VPP.TRD_CD
                         AND MQ.RLANE_CD         = VPP.RLANE_CD
                         AND MQ.DIR_CD           = VPP.DIR_CD
                         AND MQ.VSL_CD           = VPP.VSL_CD
                         AND MQ.SKD_VOY_NO       = VPP.SKD_VOY_NO
                         AND MQ.SKD_DIR_CD       = VPP.SKD_DIR_CD
                         AND MQ.RHQ_CD           = VPP.OFC_CD
                         AND MQ.LOD_QTY          > 0
                      UNION ALL
                      -- FORECAST
                      SELECT 4 AS FLG,
                             VPP.REP_TRD_CD    ,
                             VPP.REP_SUB_TRD_CD,
                             VPP.RLANE_CD      ,
                             VPP.DIR_CD        ,
                             VPP.COST_YR       ,
                             VPP.COST_MON      ,
                             VPP.COST_WK       ,
                             VPP.VSL_CD        ,
                             VPP.SKD_VOY_NO    ,
                             VPP.SKD_DIR_CD    ,
                             NULL AS FD_VOL    ,
                             NULL AS FD_WGT    ,
                             NULL AS QTA_OCN   ,
                             NULL AS QTA_IPC   ,
                             DECODE(F.IOC_TS_CD, 'O', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_OCN_VOL,
                             DECODE(F.IOC_TS_CD, 'O', F.CFM_TTL_WGT) AS FC_OCN_WGT,
                             DECODE(F.IOC_TS_CD, 'I', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_IPC_VOL,
                             DECODE(F.IOC_TS_CD, 'I', F.CFM_TTL_WGT) AS FC_IPC_WGT,
                             NULL AS EP_VOL     ,
                             NULL AS AL_OCN_VOL ,
                             NULL AS AL_OCN_WGT ,
                             NULL AS AL_IPC_VOL ,
                             NULL AS AL_IPC_WGT ,
                             NULL AS BKG_OCN_VOL,
                             NULL AS BKG_OCN_WGT,
                             NULL AS BKG_IPC_VOL,
                             NULL AS BKG_IPC_WGT,
                             VPP.LST_LODG_PORT_ETD_DT,
                             VPP.LST_LODG_PORT_CD
                        FROM SPC_DLY_FCAST_CUST F  ,
                             VVD_POL_POD        VPP
                       WHERE F.RLANE_CD   = VPP.RLANE_CD
                         AND F.DIR_CD     = VPP.DIR_CD
                         AND F.VSL_CD     = VPP.VSL_CD
                         AND F.SKD_VOY_NO = VPP.SKD_VOY_NO
                         AND F.SKD_DIR_CD = VPP.SKD_DIR_CD
                         AND SUBSTR(F.POL_YD_CD, 1, LENGTH(VPP.POL_CD)) = VPP.POL_CD
                         AND SUBSTR(F.POD_YD_CD, 1, LENGTH(VPP.POD_CD)) = VPP.POD_CD
                         AND VPP.POL_CONTI = VPP.OFC_CONTI
                         AND VPP.PAST      = 'N'
                         AND F.IOC_TS_CD  IN ('O', 'I')
                         AND NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) + NVL(F.CFM_53FT_QTY, 0) + NVL(F.CFM_TTL_WGT, 0) > 0
                      UNION ALL
                      -- EMPTY PLAN
                      SELECT 5 AS FLG, 
                             VPP.REP_TRD_CD    ,
                             VPP.REP_SUB_TRD_CD,
                             VPP.RLANE_CD      ,
                             VPP.DIR_CD        ,
                             VPP.COST_YR       ,
                             VPP.COST_MON      ,
                             VPP.COST_WK       ,
                             VPP.VSL_CD        ,
                             VPP.SKD_VOY_NO    ,
                             VPP.SKD_DIR_CD    ,
                             NULL AS FD_VOL    ,
                             NULL AS FD_WGT    ,
                             NULL AS QTA_OCN   ,
                             NULL AS QTA_IPC   ,
                             NULL AS FC_OCN_VOL,
                             NULL AS FC_OCN_WGT,
                             NULL AS FC_IPC_VOL,
                             NULL AS FC_IPC_WGT,
                             (
                               SELECT SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY)
                                 FROM BKG_QUANTITY Q
                                WHERE B.BKG_NO = Q.BKG_NO
                             ) AS EP_VOL, 
                             NULL AS AL_OCN_VOL ,
                             NULL AS AL_OCN_WGT ,
                             NULL AS AL_IPC_VOL ,
                             NULL AS AL_IPC_WGT ,
                             NULL AS BKG_OCN_VOL,
                             NULL AS BKG_OCN_WGT,
                             NULL AS BKG_IPC_VOL,
                             NULL AS BKG_IPC_WGT,
                             VPP.LST_LODG_PORT_ETD_DT,
                             VPP.LST_LODG_PORT_CD
                        FROM BKG_BOOKING B  ,
                             BKG_VVD     BV ,
                             VVD_POL_POD VPP
                       WHERE B.BKG_STS_CD   IN ('W', 'F')
                         AND B.BKG_CGO_TP_CD = 'P'
                         AND B.BKG_NO        = BV.BKG_NO
                         AND BV.VSL_CD       = VPP.VSL_CD
                         AND BV.SKD_VOY_NO   = VPP.SKD_VOY_NO
                         AND BV.SKD_DIR_CD   = VPP.SKD_DIR_CD
                         AND BV.POL_CD       = VPP.POL_CD
                         AND DECODE(BV.POD_CD, 'XXXXX', VPP.LD_PORT, BV.POD_CD) = VPP.POD_CD
                         AND VPP.POL_CONTI   = VPP.OFC_CONTI
                      UNION ALL
                      -- ALLOCATION
                      SELECT 6 AS FLG,
                             VPP.REP_TRD_CD    ,
                             VPP.REP_SUB_TRD_CD,
                             VPP.RLANE_CD      ,
                             VPP.DIR_CD        ,
                             VPP.COST_YR       ,
                             VPP.COST_MON      ,
                             VPP.COST_WK       ,
                             VPP.VSL_CD        ,
                             VPP.SKD_VOY_NO    ,
                             VPP.SKD_DIR_CD    ,
                             NULL AS FD_VOL    ,
                             NULL AS FD_WGT    ,
                             NULL AS QTA_OCN   ,
                             NULL AS QTA_IPC   ,
                             NULL AS FC_OCN_VOL,
                             NULL AS FC_OCN_WGT,
                             NULL AS FC_IPC_VOL,
                             NULL AS FC_IPC_WGT,
                             NULL AS EP_VOL    ,
                             DECODE(A.IOC_CD, 'O', A.ASGN_TTL_QTY) AS AL_OCN_VOL,
                             DECODE(A.IOC_CD, 'O', A.ASGN_TTL_WGT) AS AL_OCN_WGT,
                             DECODE(A.IOC_CD, 'I', A.ASGN_TTL_QTY) AS AL_IPC_VOL,
                             DECODE(A.IOC_CD, 'I', A.ASGN_TTL_WGT) AS AL_IPC_WGT,
                             NULL AS BKG_OCN_VOL,
                             NULL AS BKG_OCN_WGT,
                             NULL AS BKG_IPC_VOL,
                             NULL AS BKG_IPC_WGT,
                             VPP.LST_LODG_PORT_ETD_DT,
                             VPP.LST_LODG_PORT_CD
                        FROM SPC_ALOC_POL_POD A  ,
                             VVD_POL_POD      VPP
                       WHERE A.RLANE_CD   = VPP.RLANE_CD
                         AND A.DIR_CD     = VPP.DIR_CD
                         AND A.VSL_CD     = VPP.VSL_CD
                         AND A.SKD_VOY_NO = VPP.SKD_VOY_NO
                         AND A.SKD_DIR_CD = VPP.SKD_DIR_CD
                         AND SUBSTR(A.POL_YD_CD, 1, LENGTH(VPP.POL_CD)) = VPP.POL_CD
                         AND SUBSTR(A.POD_YD_CD, 1, LENGTH(VPP.POD_CD)) = VPP.POD_CD
                         AND A.REP_TRD_CD     = VPP.REP_TRD_CD
                         AND A.REP_SUB_TRD_CD = VPP.REP_SUB_TRD_CD
                         AND A.TRD_CD         = VPP.TRD_CD
                         AND A.SUB_TRD_CD     = VPP.SUB_TRD_CD
                         AND A.TS_FLG         = 'N'
                         AND VPP.POL_CONTI    = VPP.OFC_CONTI
                      UNION ALL
                      -- BOOKING
                      SELECT 7 AS FLG,
                             REP_TRD_CD    ,
                             REP_SUB_TRD_CD ,
                             RLANE_CD       ,
                             DIR_CD         ,
                             COST_YR        ,
                             COST_MON       ,
                             COST_WK        ,
                             VSL_CD         ,
                             SKD_VOY_NO     ,
                             SKD_DIR_CD     ,
                             NULL AS FD_VOL ,
                             NULL AS FD_WGT ,
                             NULL AS QTA_OCN,
                             NULL AS QTA_IPC,
                             DECODE(IOC_CD||PAST, 'OY', BKG_TTL_QTY) AS FC_OCN_VOL,
                             DECODE(IOC_CD||PAST, 'OY', BKG_TTL_WGT) AS FC_OCN_WGT,
                             DECODE(IOC_CD||PAST, 'IY', BKG_TTL_QTY) AS FC_IPC_VOL,
                             DECODE(IOC_CD||PAST, 'IY', BKG_TTL_WGT) AS FC_IPC_WGT,
                             NULL AS EP_VOL    ,
                             NULL AS AL_OCN_VOL,
                             NULL AS AL_OCN_WGT,
                             NULL AS AL_IPC_VOL,
                             NULL AS AL_IPC_WGT,
                             DECODE(IOC_CD, 'O', BKG_TTL_QTY) AS BKG_OCN_VOL,
                             DECODE(IOC_CD, 'O', BKG_TTL_WGT) AS BKG_OCN_WGT,
                             DECODE(IOC_CD, 'I', BKG_TTL_QTY) AS BKG_IPC_VOL,
                             DECODE(IOC_CD, 'I', BKG_TTL_WGT) AS BKG_IPC_WGT,
                             LST_LODG_PORT_ETD_DT,
                             LST_LODG_PORT_CD
                        FROM BKG_DATA
                       WHERE TS_FLG = 'N'
                         AND BKG_TTL_QTY + BKG_TTL_WGT > 0
                      UNION ALL
                      -- TS LIST
                      SELECT 99 AS FLG,
                             V.REP_TRD_CD       ,
                             V.REP_SUB_TRD_CD   ,
                             V.RLANE_CD         ,
                             V.DIR_CD           ,
                             V.COST_YR          ,
                             V.COST_MON         ,
                             V.COST_WK          ,
                             V.VSL_CD           ,
                             V.SKD_VOY_NO       ,
                             V.SKD_DIR_CD       ,
                             NULL AS FD_VOL     ,
                             NULL AS FD_WGT     ,
                             NULL AS QTA_OCN    ,
                             NULL AS QTA_IPC    ,
                             NULL AS FC_OCN_VOL ,
                             NULL AS FC_OCN_WGT ,
                             NULL AS FC_IPC_VOL ,
                             NULL AS FC_IPC_WGT ,
                             NULL AS EP_VOL     ,
                             NULL AS AL_OCN_VOL ,
                             NULL AS AL_OCN_WGT ,
                             NULL AS AL_IPC_VOL ,
                             NULL AS AL_IPC_WGT ,
                             NULL AS BKG_OCN_VOL,
                             NULL AS BKG_OCN_WGT,
                             NULL AS BKG_IPC_VOL,
                             NULL AS BKG_IPC_WGT,
                             V.LST_LODG_PORT_ETD_DT,
                             V.LST_LODG_PORT_CD
                        FROM REP_VVDS V
                       WHERE EXISTS ( SELECT 1
                                        FROM SPC_DLY_FCAST_CUST F ,
                                             VSL_PORT_SKD       VP
                                       WHERE NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) +  NVL(F.CFM_53FT_QTY, 0) + NVL(F.CFM_TTL_WGT, 0) > 0
                                         AND F.RLANE_CD    = VP.RLANE_CD
                                         AND F.DIR_CD      = VP.DIR_CD
                                         AND F.VSL_CD      = VP.VSL_CD
                                         AND F.SKD_VOY_NO  = VP.SKD_VOY_NO
                                         AND F.SKD_DIR_CD  = VP.SKD_DIR_CD
                                         AND SUBSTR(F.POL_YD_CD, 1, LENGTH(VP.PORT_CD)) = VP.PORT_CD
                                         AND F.IOC_TS_CD   = 'T'
                                         AND VP.CONTI_CD   = V.OFC_CONTI
                                         AND VP.RLANE_CD   = V.RLANE_CD
                                         AND VP.DIR_CD     = V.DIR_CD
                                         AND VP.VSL_CD     = V.VSL_CD
                                         AND VP.SKD_VOY_NO = V.SKD_VOY_NO
                                         AND VP.SKD_DIR_CD = V.SKD_DIR_CD )
                          OR EXISTS ( SELECT 1
                                        FROM SPC_ALOC_POL_POD A ,
                                             VSL_PORT_SKD     VP
                                       WHERE A.ASGN_TTL_QTY + A.ASGN_TTL_WGT > 0
                                         AND A.RLANE_CD    = VP.RLANE_CD
                                         AND A.DIR_CD      = VP.DIR_CD
                                         AND A.VSL_CD      = VP.VSL_CD
                                         AND A.SKD_VOY_NO  = VP.SKD_VOY_NO
                                         AND A.SKD_DIR_CD  = VP.SKD_DIR_CD
                                         AND SUBSTR(A.POL_YD_CD, 1, LENGTH(VP.PORT_CD)) = VP.PORT_CD
                                         AND A.TS_FLG      = 'Y'
                                         AND VP.CONTI_CD   = V.OFC_CONTI
                                         AND VP.RLANE_CD   = V.RLANE_CD
                                         AND VP.DIR_CD     = V.DIR_CD
                                         AND VP.VSL_CD     = V.VSL_CD
                                         AND VP.SKD_VOY_NO = V.SKD_VOY_NO
                                         AND VP.SKD_DIR_CD = V.SKD_DIR_CD )
                          OR EXISTS ( SELECT 1
                                        FROM BKG_DATA     B ,
                                             VSL_PORT_SKD VP
                                       WHERE B.BKG_TTL_QTY + B.BKG_TTL_WGT > 0
                                         AND B.RLANE_CD    = VP.RLANE_CD
                                         AND B.DIR_CD      = VP.DIR_CD
                                         AND B.VSL_CD      = VP.VSL_CD
                                         AND B.SKD_VOY_NO  = VP.SKD_VOY_NO
                                         AND B.SKD_DIR_CD  = VP.SKD_DIR_CD
                                         AND (B.POL_CD = VP.PORT_CD OR B.POL_YD_CD = VP.PORT_CD)
                                         AND B.TS_FLG      = 'Y'
                                         AND VP.CONTI_CD   = V.OFC_CONTI
                                         AND VP.RLANE_CD   = V.RLANE_CD
                                         AND VP.DIR_CD     = V.DIR_CD
                                         AND VP.VSL_CD     = V.VSL_CD
                                         AND VP.SKD_VOY_NO = V.SKD_VOY_NO
                                         AND VP.SKD_DIR_CD = V.SKD_DIR_CD )
                   ) V
          GROUP BY REP_TRD_CD          ,
                   REP_SUB_TRD_CD      ,
                   RLANE_CD            ,
                   DIR_CD              ,
                   COST_YR             ,
                   COST_MON            ,
                   COST_WK             ,
                   VSL_CD              ,
                   SKD_VOY_NO          ,
                   SKD_DIR_CD          ,
                   LST_LODG_PORT_ETD_DT,
                   LST_LODG_PORT_CD
         ) Z,
         SPC_ALOC_CTRL_OPT C ,
         SAQ_MTY_SPC_GNTE  SG
   WHERE C.RLANE_CD  (+) = Z.RLANE_CD
     AND C.DIR_CD    (+) = Z.DIR_CD
     AND C.VSL_CD    (+) = Z.VSL_CD
     AND C.SKD_VOY_NO(+) = Z.SKD_VOY_NO
     AND C.SKD_DIR_CD(+) = Z.SKD_DIR_CD
     AND SG.BSE_YR   (+) = Z.COST_YR
     AND SG.BSE_WK   (+) = Z.COST_WK
     AND SG.RLANE_CD (+) = Z.RLANE_CD
     AND SG.DIR_CD   (+) = Z.DIR_CD
     AND SG.PORT_CD  (+) = Z.LST_LODG_PORT_CD
ORDER BY Z.REP_TRD_CD          ,
         Z.REP_SUB_TRD_CD      ,
         Z.RLANE_CD            ,
         Z.LST_LODG_PORT_ETD_DT,
         Z.DIR_CD              ,
         Z.COST_YR             ,
         Z.COST_MON            ,
         Z.COST_WK             ,
         Z.VSL_CD              ,
         Z.SKD_VOY_NO          ,
         Z.SKD_DIR_CD			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="duration" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="subtrade" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="fcast" type="12" value="" out="N"/>
				<param name="office" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
