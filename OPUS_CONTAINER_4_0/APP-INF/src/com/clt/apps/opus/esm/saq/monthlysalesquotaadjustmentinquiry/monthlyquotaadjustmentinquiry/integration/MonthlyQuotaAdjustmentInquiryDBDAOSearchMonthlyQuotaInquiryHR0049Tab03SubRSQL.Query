<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MonthlyQuotaAdjustmentInquiryDBDAOSearchMonthlyQuotaInquiryHR0049Tab03SubRSQL">
			<desc><![CDATA[RHQ/Area Director/Lane Child]]></desc>
			<sql><![CDATA[
WITH TMP_INPUT_PARAMS AS 
		    (SELECT DISTINCT 
		        @[datCreStepCd] AS DAT_CRE_STEP_CD,  
		        @[tgtOrzCd] AS TGT_ORZ_CD,  
		        '3' AS DAT_CRE_LVL_CD,  
		        @[year] AS BSE_YR,
		        @[bse_quarter] AS BSE_QTR_CD,
		        @[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10') AS YRMON_01,
		        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10'), 'YYYYMM'), 1), 'YYYYMM') AS YRMON_02,
                        TO_CHAR(ADD_MONTHS(TO_DATE(@[year]||DECODE(@[bse_quarter],'1Q','01','2Q','04','3Q','07','4Q','10'), 'YYYYMM'), 2), 'YYYYMM') AS YRMON_03,
		        @[targetGrp] AS SAQ_TGT_GRP_CD,
		        @[mstVersion] AS QTA_MST_VER_NO,	
		        @[version] AS GLINE_VER_NO,		
		        @[trade] AS TRD_CD,
		        @[dirCd] AS DIR_CD,
		        @[rhqCd] AS RHQ_CD, 	
		        @[ctrtOfcCd] AS OFC_CD,
		        @[ctrtAqCd] AS AQ_CD, 
		        @[subTrade] AS SUB_TRD_CD 
		     FROM   DUAL) 

		    ,SAQ_MON_QTA_ADJ_SMRY_HDR_VIEW AS 
		    ( 
		       SELECT DISTINCT HDR.SAQ_TGT_GRP_CD,HDR.DAT_CRE_STEP_CD,HDR.TGT_ORZ_CD,HDR.BSE_YR,HDR.BSE_QTR_CD,HDR.GLINE_VER_NO,HDR.TRD_CD,HDR.DIR_CD  
		        FROM SAQ_MON_QTA_ADJ_SMRY_HDR HDR  
		           , TMP_INPUT_PARAMS INP   
		        WHERE HDR.DAT_CRE_STEP_CD = INP.DAT_CRE_STEP_CD     
		              AND HDR.TGT_ORZ_CD = INP.TGT_ORZ_CD   
		              AND HDR.BSE_YR = INP.BSE_YR   
		              AND HDR.BSE_QTR_CD = INP.BSE_QTR_CD   
		              AND HDR.GLINE_VER_NO = INP.GLINE_VER_NO   
		              AND HDR.SAQ_TGT_GRP_CD = INP.SAQ_TGT_GRP_CD   
		              AND HDR.TRD_CD LIKE INP.TRD_CD||'%'   
		              AND HDR.DIR_CD LIKE INP.DIR_CD||'%'     
		    ) 				
		    ,VVD AS 
		    (SELECT 
		            VVD.TRD_CD,
		            VVD.DIR_CD,
		            VVD.SUB_TRD_CD,
		            VVD.RLANE_CD,
		            VVD.BSE_YR||VVD.BSE_MON AS YRMON, 
		            SUM(VVD.FNL_BSA_CAPA) AS BSA, 
		            COUNT(*) AS VOYAGE 
		     FROM   SAQ_MON_TGT_VVD_ADJ VVD, 
		            TMP_INPUT_PARAMS INP 
		     WHERE  VVD.BSE_YR = INP.BSE_YR 
		     AND    VVD.BSE_QTR_CD = INP.BSE_QTR_CD 
		     AND    VVD.GLINE_VER_NO = INP.GLINE_VER_NO 
		     AND    VVD.TRD_CD = INP.TRD_CD 
		     AND    VVD.DIR_CD = INP.DIR_CD 
		     AND    VVD.SUB_TRD_CD = INP.SUB_TRD_CD 
		     GROUP BY VVD.TRD_CD, VVD.DIR_CD, VVD.SUB_TRD_CD, VVD.RLANE_CD, VVD.BSE_YR||VVD.BSE_MON) 
		SELECT 
		    7 AS SLEVEL, 
		    SMR.DIR_CD, 
		    RHQ_CD, 
		    AQ_CD, 
		    OFC_CD, 
		    SUB_TRD_CD,
		    DECODE(DIR.CONV_DIR_CD,'',SMR.RLANE_CD,SMR.RLANE_CD||' - '||DIR.DIR_CD) RLANE_CD, 
		    DIR.DIR_CD CONV_DIR_CD, 
		    ROW_SEQ, 
		    TEXT AS ITEM_TEXT, 
		    ITEM, 
		    VAL_01+VAL_02+VAL_03 AS VAL_00, 
		    VAL_01, 
		    VAL_02, 
		    VAL_03 
		FROM  ( 
		    SELECT 
		          MIN(SMR.DIR_CD) AS DIR_CD, 
		          MIN(SMR.RHQ_CD) RHQ_CD, 
		          MIN(SMR.AQ_CD) AQ_CD,
		          MIN(SMR.OFC_CD) OFC_CD,
		          MIN(SMR.SUB_TRD_CD) SUB_TRD_CD,
		          SMR.RLANE_CD, 
		          ITM.ROW_SEQ, 
		          ITM.TEXT, 
		          CASE 
		             WHEN ITM.CODE IN('05', '07', '08', '11', '12') THEN ITM.TEXT || '*' 
		             ELSE ITM.TEXT 
		          END ITEM 

	#foreach( $key in ${term}) 
			    ,NVL(SUM(DECODE(SMR.YRMON,    INP.YRMON_$key,              		
			        DECODE( ITM.CODE,  '01', (BSA),                     			
			                 '02', (VOYAGE),                           			
			                 '03', (SMR.LOD),                               		
			                 '04', DECODE(BSA, 0, 0, (SMR.LOD)/(BSA)*100),       
			                 '05', (SMR.REV),                                 		
			                 '06', DECODE(LOD,0,0,(REV)/(LOD)*1000),                       
			                 '07', (SMR.CM),                                  		
			                 '08', (SMR.RA_CM),                               		
			                 '09', DECODE(LOD,0,0,(CM)*1000/(LOD)),                        
			                 '10', DECODE(LOD,0,0,(RA_CM)*1000/(LOD)),                     
			                 '11', (SMR.OP),                                  		
			                 '12', (SMR.RA_OP),                               		
			                 '13', DECODE(LOD,0,0,(OP)*1000/(LOD)),                        
			                 '14', DECODE(LOD,0,0,(RA_OP)*1000/(LOD)) ))), 0) AS VAL_$key

       #end		
		
		    FROM  ( 
		            SELECT 
		                 MIN(SMR.TRD_CD) AS TRD_CD, 
		                 MIN(SMR.DIR_CD) AS DIR_CD, 
		                 MIN(SMR.RHQ_CD) AS RHQ_CD,
		                 MIN(NVL(SMR.AQ_CD, '  ')) AS AQ_CD,
		                 MIN(SMR.RGN_OFC_CD) AS OFC_CD,
		                 MIN(SMR.SUB_TRD_CD) AS SUB_TRD_CD,
		                 SMR.RLANE_CD,
		                 SMR.BSE_YR||SMR.BSE_MON AS YRMON, 

				SUM(SMR.LOD_QTY) AS LOD, 
				SUM(SMR.GRS_RPB_REV*SMR.LOD_QTY)/1000 AS REV,  
				SUM((SMR.GRS_RPB_REV-SMR.CM_UC_AMT)*SMR.LOD_QTY)/1000 AS CM, 
				SUM((SMR.GRS_RPB_REV-SMR.RA_CM_UC_AMT)*SMR.LOD_QTY)/1000 AS RA_CM,  
				SUM((SMR.GRS_RPB_REV-SMR.OPFIT_UC_AMT)*SMR.LOD_QTY)/1000 AS OP, 
				SUM((SMR.GRS_RPB_REV-SMR.RA_OPFIT_UC_AMT)*SMR.LOD_QTY )/1000 AS RA_OP 			

		             FROM SAQ_MON_QTA_ADJ_SMRY_HDR_VIEW HDR 
		                  , SAQ_MON_QTA_ADJ_SMRY SMR  
		                  , TMP_INPUT_PARAMS INP  
		             WHERE 
		                    HDR.DAT_CRE_STEP_CD = INP.DAT_CRE_STEP_CD    
		                    AND SMR.DAT_CRE_LVL_CD >= INP.DAT_CRE_LVL_CD     
		                    AND HDR.TGT_ORZ_CD = INP.TGT_ORZ_CD  
		                    AND HDR.BSE_YR = INP.BSE_YR  
		                    AND HDR.BSE_QTR_CD = INP.BSE_QTR_CD  
		                    AND HDR.GLINE_VER_NO = INP.GLINE_VER_NO  
		                    AND HDR.TRD_CD = INP.TRD_CD   
		                    AND HDR.DIR_CD = INP.DIR_CD   
		                    AND SMR.RHQ_CD = INP.RHQ_CD  
		                    AND SMR.RGN_OFC_CD = INP.OFC_CD  
		                    AND NVL(SMR.AQ_CD, '  ') = INP.AQ_CD  
		                    AND SMR.SUB_TRD_CD = INP.SUB_TRD_CD 
		                    AND SMR.BSE_YR = HDR.BSE_YR 
		                    AND SMR.BSE_QTR_CD = HDR.BSE_QTR_CD 
		                    AND SMR.SAQ_TGT_GRP_CD = HDR.SAQ_TGT_GRP_CD 
		                    AND SMR.GLINE_VER_NO = HDR.GLINE_VER_NO 
		                    AND SMR.TRD_CD = HDR.TRD_CD 
		                    AND SMR.DIR_CD = HDR.DIR_CD 
		                    AND SMR.DAT_CRE_STEP_CD = HDR.DAT_CRE_STEP_CD 
		            GROUP BY SMR.RLANE_CD, SMR.BSE_YR||SMR.BSE_MON 
		          ) SMR 
		          JOIN 
		          ( 
		            SELECT  INTG_CD_VAL_CTNT AS CODE, 
		                    INTG_CD_VAL_DP_DESC AS TEXT, 
		                    INTG_CD_VAL_DP_SEQ AS ROW_SEQ 
		            FROM  COM_INTG_CD_DTL 
		            WHERE INTG_CD_ID = 'CD01390' 
		            
			    AND ('ALL' = @[item]  OR (INTG_CD_VAL_DP_DESC IN (
					  #foreach( $key in ${itemAr}) 
					      '$key',
					  #end
					  'X'
			     )) ) ) ITM 

		          ON 1 = 1 
		          LEFT JOIN 
		          VVD 
		          ON 
		          ( 
		            SMR.TRD_CD = VVD.TRD_CD AND 
		            SMR.DIR_CD = VVD.DIR_CD AND
		            SMR.SUB_TRD_CD = VVD.SUB_TRD_CD AND
		            SMR.RLANE_CD = VVD.RLANE_CD AND 
		            SMR.YRMON = VVD.YRMON 
		          ) 
		          JOIN 
		          TMP_INPUT_PARAMS INP 
		          ON 1 = 1 
		    GROUP BY SMR.RLANE_CD, ITM.ROW_SEQ, ITM.TEXT, ITM.CODE 
		      ) SMR 
		    ,     (                                                                                          
		          SELECT                                                                                    
		              DIR.RLANE_CD,                                                                                
		              DIR.DIR_CD,							
		              DIR.CONV_DIR_CD                                                                                
		          FROM                                                                                    
		              SAQ_MON_DIR_CONV DIR,                                                                                
		              TMP_INPUT_PARAMS INP                                                                                
		          WHERE                                                                                    
		                   DIR.BSE_YR = INP.BSE_YR                                                                           
		             AND DIR.BSE_QTR_CD = INP.BSE_QTR_CD                                                                                 
		             AND DIR.TRD_CD = INP.TRD_CD                                                                                 
		          ) DIR                                                                                 
		     WHERE                                                                                 
		             DIR.RLANE_CD(+) = SMR.RLANE_CD 					
		         AND    DIR.CONV_DIR_CD(+) = SMR.DIR_CD									
		ORDER BY DECODE(SMR.RLANE_CD,'RBCCO','ZZ',SUBSTR(SMR.RLANE_CD,-2)),SMR.RLANE_CD, ROW_SEQ						]]></sql>
			<params>
				<param name="datCreStepCd" type="12" value="" out="N"/>
				<param name="tgtOrzCd" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="bse_quarter" type="12" value="" out="N"/>
				<param name="targetGrp" type="12" value="" out="N"/>
				<param name="mstVersion" type="12" value="" out="N"/>
				<param name="version" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="dirCd" type="12" value="" out="N"/>
				<param name="rhqCd" type="12" value="" out="N"/>
				<param name="ctrtOfcCd" type="12" value="" out="N"/>
				<param name="ctrtAqCd" type="12" value="" out="N"/>
				<param name="subTrade" type="12" value="" out="N"/>
				<param name="item" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
