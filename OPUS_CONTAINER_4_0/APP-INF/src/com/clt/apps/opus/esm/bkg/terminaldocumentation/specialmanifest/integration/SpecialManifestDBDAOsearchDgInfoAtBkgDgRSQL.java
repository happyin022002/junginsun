/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : SpecialManifestDBDAOsearchDgInfoAtBkgDgRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.07.15
*@LastModifier : 이종길
*@LastVersion : 1.0
* 2016.07.15 이종길
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.bkg.terminaldocumentation.specialmanifest.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author Jong-Kil LEE
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpecialManifestDBDAOsearchDgInfoAtBkgDgRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * BKG의 위험물 테이블에서 데이타를 조회해온다.
	  * </pre>
	  */
	public SpecialManifestDBDAOsearchDgInfoAtBkgDgRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("d_type",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bay_pln_id",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pod_code",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pol_code",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bl_number",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cargo_oper_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("port_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.bkg.terminaldocumentation.specialmanifest.integration").append("\n"); 
		query.append("FileName : SpecialManifestDBDAOsearchDgInfoAtBkgDgRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT DENSE_RANK() OVER (ORDER BY POL_CD, POD_CD, BL_NO, CGO_OPR_CD) AS SEQ" ).append("\n"); 
		query.append("      ,COUNT(DISTINCT CNTR_NO) OVER() AS CNTR_CNT" ).append("\n"); 
		query.append("      ,CGO_OPR_CD" ).append("\n"); 
		query.append("      ,MERGE_BL_NO" ).append("\n"); 
		query.append("      ,BL_NO " ).append("\n"); 
		query.append("      ,POL_CD" ).append("\n"); 
		query.append("      ,POD_CD" ).append("\n"); 
		query.append("      ,CNTR_NO" ).append("\n"); 
		query.append("      ,CNTR_CGO_SEQ" ).append("\n"); 
		query.append("      ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("      ,CELL_PSN_NO" ).append("\n"); 
		query.append("      ,IMDG_COMP_GRP_CD" ).append("\n"); 
		query.append("      ,IMDG_UN_NO" ).append("\n"); 
		query.append("      ,IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("      ,IMDG_CLSS_CD" ).append("\n"); 
		query.append("      ,FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("      ,AGENT         --AGENT" ).append("\n"); 
		query.append("      ,FWRD_ID       --FOWDER CODE" ).append("\n"); 
		query.append("      ,C_TYPE        --CARRIAGE TYPE" ).append("\n"); 
		query.append("      ,SVC_RQST_NO   --SSR(FEEDER)" ).append("\n"); 
		query.append("      ,IMDG_PCK_GRP_CD" ).append("\n"); 
		query.append("      ,IN_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("      ,IN_IMDG_PCK_CD1" ).append("\n"); 
		query.append("      ,EUR_INR_PCK_DESC" ).append("\n"); 
		query.append("      ,OUT_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("      ,OUT_IMDG_PCK_CD1" ).append("\n"); 
		query.append("      ,EUR_OUTR_PCK_DESC" ).append("\n"); 
		query.append("      ,EMS_NO" ).append("\n"); 
		query.append("      ,NET_WGT" ).append("\n"); 
		query.append("      ,GRS_WGT" ).append("\n"); 
		query.append("      ,PRP_SHP_NM" ).append("\n"); 
		query.append("      ,HZD_DESC" ).append("\n"); 
		query.append("      ,MRN_POLUT_FLG AS EUR_DCGO_MRN_POLUT_CD" ).append("\n"); 
		query.append("      ,IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("      ,NET_EXPLO_WGT" ).append("\n"); 
		query.append("      ,CNTR_NO_OLD" ).append("\n"); 
		query.append("      ,DCGO_REF_NO" ).append("\n"); 
		query.append("      ,CNTR_REF_NO" ).append("\n"); 
		query.append("      ,IMDG_SUBS_RSK_LBL_CD1" ).append("\n"); 
		query.append("      ,IMDG_SUBS_RSK_LBL_CD2" ).append("\n"); 
		query.append("      ,IMDG_SUBS_RSK_LBL_CD3" ).append("\n"); 
		query.append("      ,IMDG_SUBS_RSK_LBL_CD4" ).append("\n"); 
		query.append("      ,EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("      ,EMER_CNTC_PHN_NO" ).append("\n"); 
		query.append("      ,EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("      ,SPCL_CGO_SEQ" ).append("\n"); 
		query.append("      ,SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("   FROM ((" ).append("\n"); 
		query.append("-- Booking Data" ).append("\n"); 
		query.append("                SELECT CASE WHEN HIS.CGO_OPR_CD IS NOT NULL THEN HIS.CGO_OPR_CD -- CGO_OPR_CD of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.CGO_OPR_CD" ).append("\n"); 
		query.append("                END AS CGO_OPR_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.BL_NO IS NOT NULL THEN HIS.BL_NO -- BL_NO of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.BL_NO" ).append("\n"); 
		query.append("                END AS BL_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.BL_NO IS NOT NULL THEN HIS.BL_NO -- MERGE_BL_NO of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.BL_NO" ).append("\n"); 
		query.append("                END AS MERGE_BL_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.POL_CD IS NOT NULL THEN HIS.POL_CD -- POL_CD of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.POL_CD" ).append("\n"); 
		query.append("                END AS POL_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.POD_CD IS NOT NULL THEN HIS.POD_CD -- POD_CD of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.POD_CD" ).append("\n"); 
		query.append("                END AS POD_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CNTR_NO IS NOT NULL THEN HIS.CNTR_NO -- CNTR_NO of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.CNTR_NO" ).append("\n"); 
		query.append("                END AS CNTR_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CNTR_CGO_SEQ IS NOT NULL THEN HIS.CNTR_CGO_SEQ -- CNTR_CGO_SEQ of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.CNTR_CGO_SEQ" ).append("\n"); 
		query.append("                END AS CNTR_CGO_SEQ" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CNTR_TPSZ_CD IS NOT NULL THEN HIS.CNTR_TPSZ_CD -- CNTR_TPSZ_CD of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                END AS CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CELL_PSN_NO IS NOT NULL THEN HIS.CELL_PSN_NO -- CELL_PSN_NO of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE DECODE(NVL(null, ''), '', BVD.CELL_PSN_NO, BAY.CELL_PSN_NO )" ).append("\n"); 
		query.append("                END AS CELL_PSN_NO" ).append("\n"); 
		query.append("              ,BVD.IMDG_COMP_GRP_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_UN_NO IS NOT NULL THEN HIS.IMDG_UN_NO -- IMDG_UN_NO of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.IMDG_UN_NO" ).append("\n"); 
		query.append("               END AS IMDG_UN_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_UN_NO_SEQ IS NOT NULL THEN HIS.IMDG_UN_NO_SEQ -- IMDG_UN_NO_SEQ of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("               END AS IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_CLSS_CD IS NOT NULL THEN HIS.IMDG_CLSS_CD -- IMDG_CLSS_CD of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.IMDG_CLSS_CD" ).append("\n"); 
		query.append("                END AS IMDG_CLSS_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.FLSH_PNT_CDO_TEMP IS NOT NULL THEN HIS.FLSH_PNT_CDO_TEMP -- FLSH_PNT_CDO_TEMP of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("               END AS FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("              ,'' AS AGENT         --AGENT" ).append("\n"); 
		query.append("              ,'' AS FWRD_ID       --FOWDER CODE" ).append("\n"); 
		query.append("              ,'' AS C_TYPE        --CARRIAGE TYPE" ).append("\n"); 
		query.append("              ,'' AS SVC_RQST_NO   --SSR(FEEDER)" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_PCK_GRP_CD IS NOT NULL THEN HIS.IMDG_PCK_GRP_CD -- IMDG_PCK_GRP_CD of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE NVL(BVD.IMDG_PCK_GRP_CD,'N')" ).append("\n"); 
		query.append("               END AS IMDG_PCK_GRP_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IN_IMDG_PCK_QTY1 IS NOT NULL THEN HIS.IN_IMDG_PCK_QTY1 -- IN_IMDG_PCK_QTY1 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IN_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("               END AS IN_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("               ,CASE WHEN HIS.IN_IMDG_PCK_CD1 IS NOT NULL THEN HIS.IN_IMDG_PCK_CD1 -- IN_IMDG_PCK_CD1 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IN_IMDG_PCK_CD1" ).append("\n"); 
		query.append("               END AS IN_IMDG_PCK_CD1" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EUR_INR_PCK_DESC IS NOT NULL THEN HIS.EUR_INR_PCK_DESC -- EUR_INR_PCK_DESC of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IN_N1ST_IMDG_PCK_DESC" ).append("\n"); 
		query.append("               END AS EUR_INR_PCK_DESC" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.OUT_IMDG_PCK_QTY1 IS NOT NULL THEN HIS.OUT_IMDG_PCK_QTY1 -- OUT_IMDG_PCK_QTY1 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.OUT_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("               END AS OUT_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.OUT_IMDG_PCK_CD1 IS NOT NULL THEN HIS.OUT_IMDG_PCK_CD1 -- OUT_IMDG_PCK_QTY1 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.OUT_IMDG_PCK_CD1" ).append("\n"); 
		query.append("               END AS OUT_IMDG_PCK_CD1" ).append("\n"); 
		query.append("              ,CASE WHEN BVD.CGO_OPR_CD = 'NYK' THEN NVL2(HIS.OUT_IMDG_PCK_QTY1, HIS.OUT_IMDG_PCK_QTY1 || ' ', BVD.OUT_IMDG_PCK_QTY1 || ' ')" ).append("\n"); 
		query.append("               || (SELECT IMDG_PCK_DESC " ).append("\n"); 
		query.append("                     FROM SCG_IMDG_PCK_CD" ).append("\n"); 
		query.append("                    WHERE IMDG_PCK_CD = NVL(HIS.OUT_IMDG_PCK_CD1,BVD.OUT_IMDG_PCK_CD1)" ).append("\n"); 
		query.append("                  )" ).append("\n"); 
		query.append("               ELSE " ).append("\n"); 
		query.append("               NVL2(BVD.OUT_N1ST_IMDG_PCK_DESC, BVD.OUT_IMDG_PCK_QTY1||' '||BVD.OUT_N1ST_IMDG_PCK_DESC ,'')" ).append("\n"); 
		query.append("               END AS EUR_OUTR_PCK_DESC" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EMS_NO IS NOT NULL THEN HIS.EMS_NO -- EMS_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.EMS_NO" ).append("\n"); 
		query.append("               END AS EMS_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.NET_WGT IS NOT NULL THEN HIS.NET_WGT -- NET_WGT of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.NET_WGT" ).append("\n"); 
		query.append("               END AS NET_WGT" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.GRS_WGT IS NOT NULL THEN HIS.GRS_WGT -- GRS_WGT of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.GRS_WGT" ).append("\n"); 
		query.append("               END AS GRS_WGT" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.PRP_SHP_NM IS NOT NULL THEN HIS.PRP_SHP_NM -- PRP_SHP_NM of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.PRP_SHP_NM" ).append("\n"); 
		query.append("               END AS PRP_SHP_NM" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.HZD_DESC IS NOT NULL THEN HIS.HZD_DESC -- HZD_DESC of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.HZD_DESC" ).append("\n"); 
		query.append("               END AS HZD_DESC" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EUR_DCGO_MRN_POLUT_CD IS NOT NULL THEN HIS.EUR_DCGO_MRN_POLUT_CD -- MRN_POLUT_FLG of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.MRN_POLUT_FLG" ).append("\n"); 
		query.append("               END AS MRN_POLUT_FLG" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_LMT_QTY_FLG IS NOT NULL THEN HIS.IMDG_LMT_QTY_FLG -- IMDG_LMT_QTY_FLG of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("               END AS IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.NET_EXPLO_WGT IS NOT NULL THEN HIS.NET_EXPLO_WGT -- NET_EXPLO_WGT of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.NET_EXPLO_WGT" ).append("\n"); 
		query.append("               END AS NET_EXPLO_WGT" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CNTR_REF_NO IS NOT NULL THEN HIS.CNTR_REF_NO -- CNTR_REF_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.CNTR_REF_NO" ).append("\n"); 
		query.append("               END AS CNTR_NO_OLD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.DCGO_REF_NO IS NOT NULL THEN HIS.DCGO_REF_NO -- DCGO_REF_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.DCGO_REF_NO" ).append("\n"); 
		query.append("               END AS DCGO_REF_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EMER_CNTC_PHN_NO IS NOT NULL THEN HIS.EMER_CNTC_PHN_NO -- EMER_CNTC_PHN_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.EMER_CNTC_PHN_NO_CTNT" ).append("\n"); 
		query.append("               END AS EMER_CNTC_PHN_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EMER_CNTC_PSON_NM IS NOT NULL THEN HIS.EMER_CNTC_PSON_NM -- EMER_CNTC_PSON_NM of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("               END AS EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD1 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD1 -- IMDG_SUBS_RSK_LBL_CD1 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IMDG_SUBS_RSK_LBL_CD1" ).append("\n"); 
		query.append("               END AS IMDG_SUBS_RSK_LBL_CD1" ).append("\n"); 
		query.append("               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD2 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD2 -- IMDG_SUBS_RSK_LBL_CD2 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IMDG_SUBS_RSK_LBL_CD2" ).append("\n"); 
		query.append("               END AS IMDG_SUBS_RSK_LBL_CD2" ).append("\n"); 
		query.append("               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD3 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD3 -- IMDG_SUBS_RSK_LBL_CD3 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IMDG_SUBS_RSK_LBL_CD3" ).append("\n"); 
		query.append("               END AS IMDG_SUBS_RSK_LBL_CD3" ).append("\n"); 
		query.append("               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD4 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD4 -- IMDG_SUBS_RSK_LBL_CD4 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IMDG_SUBS_RSK_LBL_CD4" ).append("\n"); 
		query.append("               END AS IMDG_SUBS_RSK_LBL_CD4" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CNTR_REF_NO IS NOT NULL THEN HIS.CNTR_REF_NO -- CNTR_REF_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.CNTR_REF_NO" ).append("\n"); 
		query.append("               END AS CNTR_REF_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EMER_RSPN_GID_NO IS NOT NULL THEN HIS.EMER_RSPN_GID_NO -- EMER_RSPN_GID_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("               END AS EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.SPCL_CNTR_SEQ IS NOT NULL THEN HIS.SPCL_CNTR_SEQ -- CNTR_REF_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("               END AS SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.SPCL_CGO_SEQ IS NOT NULL THEN HIS.SPCL_CGO_SEQ -- EMER_RSPN_GID_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.SPCL_CGO_SEQ" ).append("\n"); 
		query.append("               END AS SPCL_CGO_SEQ" ).append("\n"); 
		query.append("          FROM (SELECT 'NYK'      AS CGO_OPR_CD" ).append("\n"); 
		query.append("                      ,BV.BKG_NO     BKG_NO" ).append("\n"); 
		query.append("                      ,BK.BL_NO      BL_NO" ).append("\n"); 
		query.append("                      ,BV.POL_CD     POL_CD" ).append("\n"); 
		query.append("                      ,BV.POD_CD     POD_CD" ).append("\n"); 
		query.append("                      ,BV.VSL_CD     VSL_CD" ).append("\n"); 
		query.append("                      ,BV.SKD_VOY_NO SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,BV.SKD_DIR_CD SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,BDC.CNTR_NO           CNTR_NO" ).append("\n"); 
		query.append("                      ,BDC.CNTR_CGO_SEQ      CNTR_CGO_SEQ" ).append("\n"); 
		query.append("                      ,BDC.CNTR_TPSZ_CD      CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,SIUN.IMDG_COMP_GRP_CD" ).append("\n"); 
		query.append("                      ,BDC.IMDG_UN_NO        IMDG_UN_NO" ).append("\n"); 
		query.append("                      ,BDC.IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("                      ,BDC.IMDG_CLSS_CD" ).append("\n"); 
		query.append("                      ,BDC.FLSH_PNT_CDO_TEMP FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("                      ,BDC.IMDG_PCK_GRP_CD   IMDG_PCK_GRP_CD" ).append("\n"); 
		query.append("                      ,BDC.IN_IMDG_PCK_QTY1  IN_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("                      ,BDC.IN_IMDG_PCK_CD1   IN_IMDG_PCK_CD1" ).append("\n"); 
		query.append("                      ,BDC.OUT_IMDG_PCK_QTY1 OUT_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("                      ,BDC.OUT_IMDG_PCK_CD1  OUT_IMDG_PCK_CD1" ).append("\n"); 
		query.append("                      ,BDC.EMS_NO            EMS_NO" ).append("\n"); 
		query.append("                      ,BDC.NET_WGT           NET_WGT" ).append("\n"); 
		query.append("                      ,BDC.GRS_WGT           GRS_WGT" ).append("\n"); 
		query.append("                      ,BDC.PRP_SHP_NM        PRP_SHP_NM" ).append("\n"); 
		query.append("                      ,BDC.HZD_DESC          HZD_DESC" ).append("\n"); 
		query.append("                      ,BDC.MRN_POLUT_FLG      MRN_POLUT_FLG" ).append("\n"); 
		query.append("                      ,BDC.IMDG_LMT_QTY_FLG  IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("                      ,(SELECT LPAD(OPF.VSL_BAY_NO || OPF.VSL_ROW_NO || OPF.VSL_TR_NO, 7,0 ) CELL_PSN_NO" ).append("\n"); 
		query.append("                          FROM OPF_BAY_PLN_LDIS OPF" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND OPF.VSL_CD = BV.VSL_CD" ).append("\n"); 
		query.append("                           AND OPF.SKD_VOY_NO = BV.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND OPF.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                           AND OPF.POD_CD = BV.POD_CD" ).append("\n"); 
		query.append("                           AND OPF.POL_CD = BV.POL_CD" ).append("\n"); 
		query.append("                           AND OPF.CNTR_REF_NO = BDC.CNTR_NO" ).append("\n"); 
		query.append("                           AND ROWNUM = 1" ).append("\n"); 
		query.append("                       ) CELL_PSN_NO" ).append("\n"); 
		query.append("                      ,BDC.NET_EXPLO_WGT" ).append("\n"); 
		query.append("                      ,BDC.DCGO_REF_NO" ).append("\n"); 
		query.append("                      ,BDC.EMER_CNTC_PHN_NO_CTNT" ).append("\n"); 
		query.append("                      ,BDC.EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("                      ,BDC.CNTR_NO AS CNTR_REF_NO" ).append("\n"); 
		query.append("                      ,BDC.IMDG_SUBS_RSK_LBL_CD1" ).append("\n"); 
		query.append("                      ,BDC.IMDG_SUBS_RSK_LBL_CD2" ).append("\n"); 
		query.append("                      ,BDC.IMDG_SUBS_RSK_LBL_CD3" ).append("\n"); 
		query.append("                      ,BDC.IMDG_SUBS_RSK_LBL_CD4" ).append("\n"); 
		query.append("                      ,BDC.EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("                      ,'' AS IN_N1ST_IMDG_PCK_DESC" ).append("\n"); 
		query.append("                      ,BDC.DG_CNTR_SEQ AS SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("                      ,BDC.CNTR_CGO_SEQ AS SPCL_CGO_SEQ" ).append("\n"); 
		query.append("                      ,'' AS OUT_N1ST_IMDG_PCK_DESC" ).append("\n"); 
		query.append("                  FROM (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${d_type} != 'T')" ).append("\n"); 
		query.append("    #if(${barge_flag} == 'Y')" ).append("\n"); 
		query.append("        #if (${d_type} == 'P' || ${d_type} == 'O')" ).append("\n"); 
		query.append("            #if (${d_type} == 'P') -- Pre-Carriage" ).append("\n"); 
		query.append("                        SELECT SUBSTR(@[vvd_cd], 1, 4) VSL_CD" ).append("\n"); 
		query.append("                              ,SUBSTR(@[vvd_cd], 5, 4) SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,SUBSTR(@[vvd_cd], 9, 1) SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,BKG_NO" ).append("\n"); 
		query.append("                              ,POL_CD" ).append("\n"); 
		query.append("                              ,POD_CD" ).append("\n"); 
		query.append("                          FROM BKG_VVD" ).append("\n"); 
		query.append("                         WHERE BKG_NO IN (SELECT BKG_NO" ).append("\n"); 
		query.append("                                            FROM BKG_VVD" ).append("\n"); 
		query.append("                                           WHERE VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                             AND SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                             AND SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                             AND (POL_CD IN ('NLRTM', @[port_cd]) OR POD_CD IN ('NLRTM', @[port_cd]))" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("                        AND POL_CD = 'NLRTM'" ).append("\n"); 
		query.append("                        AND POD_CD = @[port_cd]" ).append("\n"); 
		query.append("            #else  -- On-Carriage" ).append("\n"); 
		query.append("                        SELECT SUBSTR(@[vvd_cd], 1, 4) VSL_CD" ).append("\n"); 
		query.append("                              ,SUBSTR(@[vvd_cd], 5, 4) SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,SUBSTR(@[vvd_cd], 9, 1) SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,BKG_NO" ).append("\n"); 
		query.append("                              ,POL_CD" ).append("\n"); 
		query.append("                              ,POD_CD" ).append("\n"); 
		query.append("                          FROM BKG_VVD" ).append("\n"); 
		query.append("                         WHERE BKG_NO IN (SELECT BKG_NO" ).append("\n"); 
		query.append("                                            FROM BKG_VVD" ).append("\n"); 
		query.append("                                           WHERE VSL_CD    = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                             AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                             AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                             AND (POL_CD IN ('NLRTM', @[port_cd]) OR POD_CD IN ('NLRTM', @[port_cd]))" ).append("\n"); 
		query.append("                                )" ).append("\n"); 
		query.append("                            AND POL_CD = @[port_cd]" ).append("\n"); 
		query.append("                            AND POD_CD = 'NLRTM'" ).append("\n"); 
		query.append("            #end" ).append("\n"); 
		query.append("        #else -- Discharging or Discharging + On-Carriage or Loading or Loading + Pre-Carriage" ).append("\n"); 
		query.append("                        SELECT *" ).append("\n"); 
		query.append("                          FROM BKG_VVD BV" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND BV.VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("            #if (${d_type} == 'D' || ${d_type} == 'DO') -- Discharging or Discharging + On-Carriage" ).append("\n"); 
		query.append("                           AND BV.POD_CD      = @[port_cd]" ).append("\n"); 
		query.append("            #elseif (${d_type} == 'L' || ${d_type} == 'PL') -- Loading or Loading + Pre-Carriage" ).append("\n"); 
		query.append("                           AND BV.POL_CD      = @[port_cd]" ).append("\n"); 
		query.append("            #else" ).append("\n"); 
		query.append("                           AND BV.POL_CD      = @[port_cd]" ).append("\n"); 
		query.append("            #end" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #else -- exclude barge" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                        SELECT *" ).append("\n"); 
		query.append("                          FROM BKG_VVD BV" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND BV.VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        #if (${d_type} == 'D' || ${d_type} == 'DO' || ${d_type} == 'O') -- Discharging or Discharging + On-Carriage" ).append("\n"); 
		query.append("                           AND BV.POD_CD      = @[port_cd]" ).append("\n"); 
		query.append("        #elseif (${d_type} == 'L' || ${d_type} == 'PL' || ${d_type} == 'P') -- Loading or Loading + Pre-Carriage" ).append("\n"); 
		query.append("                           AND BV.POL_CD      = @[port_cd]" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("                           AND BV.POL_CD      = @[port_cd]" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        #if(${ui_type} == 'ESM_BKG_0965')" ).append("\n"); 
		query.append("                           AND (BV.POL_CD = @[port_cd] OR BV.POD_CD = @[port_cd])" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("#else -- d_type = 'T' 의 경우" ).append("\n"); 
		query.append("                        SELECT *" ).append("\n"); 
		query.append("                          FROM BKG_VVD BV" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND BV.VSL_CD        =  SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_VOY_NO    =  SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_DIR_CD    =  SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                           AND BV.POL_CD        IN  (SELECT VPS_PORT_CD" ).append("\n"); 
		query.append("                                                       FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                      WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                        AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                        AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                        AND CLPT_SEQ < (SELECT MAX(CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                          FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                                         WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                           AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                           AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                           AND VPS_PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                                       )" ).append("\n"); 
		query.append("                                                        AND NVL(SKD_CNG_STS_CD,'X') <> 'S'" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                           AND BV.POD_CD        IN  (SELECT VPS_PORT_CD" ).append("\n"); 
		query.append("                                                       FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                      WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                        AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                        AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                        AND CLPT_SEQ  > (SELECT MIN(CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                           FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                            AND VPS_PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                                        )" ).append("\n"); 
		query.append("                                                        AND  CLPT_SEQ < (SELECT NVL(MIN(V2.CLPT_SEQ),50)" ).append("\n"); 
		query.append("                                                                           FROM VSK_VSL_PORT_SKD V1, VSK_VSL_PORT_SKD V2" ).append("\n"); 
		query.append("                                                                          WHERE 1=1" ).append("\n"); 
		query.append("                                                                            AND V1.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                            AND V1.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                            AND V1.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                            AND V1.VSL_CD = V2.VSL_CD" ).append("\n"); 
		query.append("                                                                            AND V1.SKD_VOY_NO = V2.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                            AND V1.SKD_DIR_CD = V2.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                            AND NVL(V1.SKD_CNG_STS_CD,'X') = 'O'" ).append("\n"); 
		query.append("                                                                            AND NVL(V2.SKD_CNG_STS_CD,'X') = 'A'" ).append("\n"); 
		query.append("                                                                            AND V1.CLPT_SEQ < V2.CLPT_SEQ" ).append("\n"); 
		query.append("                                                                        )" ).append("\n"); 
		query.append("                                                        AND NVL(SKD_CNG_STS_CD,'X') <> 'S'" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                       ) BV" ).append("\n"); 
		query.append("                      ,BKG_DG_CGO BDC" ).append("\n"); 
		query.append("                      ,BKG_BOOKING BK" ).append("\n"); 
		query.append("                      ,SCG_IMDG_UN_NO SIUN" ).append("\n"); 
		query.append("                 WHERE 1=1" ).append("\n"); 
		query.append("                   AND BV.BKG_NO        =   BK.BKG_NO" ).append("\n"); 
		query.append("                   AND BV.BKG_NO        =   BDC.BKG_NO" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   AND BDC.IMDG_UN_NO    =     SIUN.IMDG_UN_NO(+)" ).append("\n"); 
		query.append("                   AND BDC.IMDG_UN_NO_SEQ = SIUN.IMDG_UN_NO_SEQ(+)" ).append("\n"); 
		query.append("                   AND 'Y' = NVL2(BDC.CSTMS_EXPT_FLG , DECODE(BDC.N1ST_PRE_VVD_CD,@[vvd_cd],'N','','N','Y'),'Y') -- row delete를 해서 데이터를 삭제 한 경우에 flg에 'Y'가 입력되는데" ).append("\n"); 
		query.append("                                                                                                        -- 그 경우에도 VVD가 change되는 경우에는 바뀐 VVD로 조회가 가능하도록 만든 로직" ).append("\n"); 
		query.append("                   AND BK.DCGO_FLG      =   'Y'" ).append("\n"); 
		query.append("                   AND BK.BKG_STS_CD    <>  'X'" ).append("\n"); 
		query.append("				   AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')" ).append("\n"); 
		query.append("                          	  FROM BKG_CSTMS_EUR_DG_VSL_SKD" ).append("\n"); 
		query.append("                              WHERE EUR_DG_DECL_TP_CD = @[d_type]" ).append("\n"); 
		query.append("	                          AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("    	                      AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("        	                  AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("            	              AND PORT_CD      = @[port_cd])" ).append("\n"); 
		query.append("                   AND NOT EXISTS (SELECT *" ).append("\n"); 
		query.append("                                     FROM BKG_CSTMS_EUR_DG EUDG" ).append("\n"); 
		query.append("                                    WHERE EUDG.EUR_DG_DECL_TP_CD IN ('L','D')" ).append("\n"); 
		query.append("                                      #if(${d_type}=='L')" ).append("\n"); 
		query.append("                                      AND EUDG.POL_CD = @[port_cd] " ).append("\n"); 
		query.append("								      #elseif(${d_type}=='D')" ).append("\n"); 
		query.append("                                      AND EUDG.POD_CD = @[port_cd] " ).append("\n"); 
		query.append("                                      #end" ).append("\n"); 
		query.append("                                      AND EUDG.VSL_CD            = BV.VSL_CD" ).append("\n"); 
		query.append("                                      AND EUDG.SKD_VOY_NO        = BV.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      AND EUDG.SKD_DIR_CD        = BV.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      AND EUDG.BL_NO             = BK.BL_NO" ).append("\n"); 
		query.append("                                      AND EUDG.CNTR_NO           = BDC.CNTR_NO" ).append("\n"); 
		query.append("                                      AND EUDG.SPCL_CNTR_SEQ      = BDC.DG_CNTR_SEQ" ).append("\n"); 
		query.append("                                      AND EUDG.SPCL_CGO_SEQ      = BDC.CNTR_CGO_SEQ" ).append("\n"); 
		query.append("                                  )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                SELECT CGO.CGO_OPR_CD" ).append("\n"); 
		query.append("                      ,RQST.BKG_REF_NO BKG_NO" ).append("\n"); 
		query.append("                      ,RQST.BKG_REF_NO BL_NO" ).append("\n"); 
		query.append("                      ,RQST.POL_CD POL_CD" ).append("\n"); 
		query.append("                      ,RQST.POD_CD POD_CD" ).append("\n"); 
		query.append("                      ,RQST.VSL_CD" ).append("\n"); 
		query.append("                      ,RQST.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,RQST.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,CGO.CNTR_REF_NO AS CNTR_NO" ).append("\n"); 
		query.append("                      ,CGO.SPCL_CGO_SEQ " ).append("\n"); 
		query.append("                      ,CGO.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,SIUN.IMDG_COMP_GRP_CD" ).append("\n"); 
		query.append("                      ,CGO.IMDG_UN_NO" ).append("\n"); 
		query.append("                      ,CGO.IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("                      ,CGO.IMDG_CLSS_CD" ).append("\n"); 
		query.append("                      ,CGO.FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("                      ,CGO.IMDG_PCK_GRP_CD" ).append("\n"); 
		query.append("                      ,CGO.IN_N1ST_IMDG_PCK_QTY" ).append("\n"); 
		query.append("                      ,CGO.IN_N1ST_IMDG_PCK_CD" ).append("\n"); 
		query.append("                      ,CGO.OUT_N1ST_IMDG_PCK_QTY" ).append("\n"); 
		query.append("                      ,CGO.OUT_N1ST_IMDG_PCK_CD" ).append("\n"); 
		query.append("                      ,CGO.EMS_NO" ).append("\n"); 
		query.append("                      ,CGO.NET_WGT" ).append("\n"); 
		query.append("                      ,CGO.GRS_WGT" ).append("\n"); 
		query.append("                      ,CGO.PRP_SHP_NM" ).append("\n"); 
		query.append("                      ,HZD_DESC" ).append("\n"); 
		query.append("                      ,MRN_POLUT_FLG" ).append("\n"); 
		query.append("                      ,IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("                      ,(SELECT LPAD(OPF.VSL_BAY_NO || OPF.VSL_ROW_NO || OPF.VSL_TR_NO, 7,0 ) AS CELL_PSN_NO" ).append("\n"); 
		query.append("                          FROM OPF_BAY_PLN_LDIS OPF" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND OPF.VSL_CD = RQST.VSL_CD" ).append("\n"); 
		query.append("                           AND OPF.SKD_VOY_NO = RQST.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND OPF.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                           AND OPF.POD_CD = RQST.POD_CD" ).append("\n"); 
		query.append("                           AND OPF.POL_CD = RQST.POL_CD" ).append("\n"); 
		query.append("                           AND OPF.CNTR_REF_NO = CGO.CNTR_REF_NO" ).append("\n"); 
		query.append("                           AND ROWNUM = 1" ).append("\n"); 
		query.append("                       ) CELL_PSN_NO " ).append("\n"); 
		query.append("                      ,NULL AS NET_EXPLO_WGT" ).append("\n"); 
		query.append("                      ,CGO.DCGO_REF_NO" ).append("\n"); 
		query.append("                      ,CGO.EMER_CNTC_PHN_NO" ).append("\n"); 
		query.append("                      ,CGO.EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("                      ,CGO.CNTR_REF_NO" ).append("\n"); 
		query.append("                      ,CGO.N1ST_IMDG_SUBS_RSK_LBL_CD" ).append("\n"); 
		query.append("                      ,CGO.N2ND_IMDG_SUBS_RSK_LBL_CD" ).append("\n"); 
		query.append("                      ,CGO.N3RD_IMDG_SUBS_RSK_LBL_CD" ).append("\n"); 
		query.append("                      ,CGO.N4TH_IMDG_SUBS_RSK_LBL_CD" ).append("\n"); 
		query.append("                      ,CGO.EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("                      ,CGO.IN_N1ST_IMDG_PCK_DESC" ).append("\n"); 
		query.append("                      ,CGO.SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("                      ,CGO.SPCL_CGO_SEQ" ).append("\n"); 
		query.append("                      ,CGO.OUT_N1ST_IMDG_PCK_DESC" ).append("\n"); 
		query.append("                  FROM SCG_PRNR_APRO_RQST RQST" ).append("\n"); 
		query.append("                      ,SCG_PRNR_APRO_RQST_CGO CGO" ).append("\n"); 
		query.append("                      ,SCG_IMDG_UN_NO SIUN" ).append("\n"); 
		query.append("                 WHERE 1=1" ).append("\n"); 
		query.append("                   AND RQST.VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                   AND RQST.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                   AND RQST.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("#if ( ${d_type} == 'T' )" ).append("\n"); 
		query.append("                   AND RQST.POL_CD  IN  (SELECT VPS_PORT_CD" ).append("\n"); 
		query.append("                                           FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                            AND CLPT_SEQ < (     SELECT MAX(CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                   FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                                  WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                    AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                    AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                    AND VPS_PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                                )" ).append("\n"); 
		query.append("                                            AND NVL(SKD_CNG_STS_CD,'X') <> 'S'" ).append("\n"); 
		query.append("                                        )" ).append("\n"); 
		query.append("                   AND RQST.POD_CD  IN  (SELECT VPS_PORT_CD" ).append("\n"); 
		query.append("                                           FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                            AND CLPT_SEQ  > (    SELECT MIN(CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                   FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                                  WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                    AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                    AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                    AND VPS_PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                            AND  CLPT_SEQ  < (    SELECT NVL(MIN(V2.CLPT_SEQ),50)" ).append("\n"); 
		query.append("                                                                    FROM VSK_VSL_PORT_SKD V1, VSK_VSL_PORT_SKD V2" ).append("\n"); 
		query.append("                                                                   WHERE 1=1" ).append("\n"); 
		query.append("                                                                     AND  V1.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                     AND V1.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                     AND V1.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                     AND V1.VSL_CD = V2.VSL_CD" ).append("\n"); 
		query.append("                                                                     AND V1.SKD_VOY_NO = V2.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                     AND V1.SKD_DIR_CD = V2.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                     AND NVL(V1.SKD_CNG_STS_CD,'X') = 'O'" ).append("\n"); 
		query.append("                                                                     AND NVL(V2.SKD_CNG_STS_CD,'X') = 'A'" ).append("\n"); 
		query.append("                                                                     AND V1.CLPT_SEQ < V2.CLPT_SEQ" ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                            AND NVL(SKD_CNG_STS_CD,'X') <> 'S'" ).append("\n"); 
		query.append("                                         )" ).append("\n"); 
		query.append("#elseif ( ${d_type} == 'D' )" ).append("\n"); 
		query.append("                   AND RQST.POD_CD = @[port_cd]" ).append("\n"); 
		query.append("#elseif ( ${d_type} == 'L' )" ).append("\n"); 
		query.append("                   AND RQST.POL_CD = @[port_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                   AND RQST.CRR_CD = CGO.CRR_CD" ).append("\n"); 
		query.append("                   AND RQST.BKG_REF_NO = CGO.BKG_REF_NO" ).append("\n"); 
		query.append("                   AND RQST.SPCL_CGO_RQST_SEQ = CGO.SPCL_CGO_RQST_SEQ" ).append("\n"); 
		query.append("				   AND RQST.LST_RQST_DAT_FLG = 'Y'" ).append("\n"); 
		query.append("                   AND CGO.IMDG_UN_NO    =     SIUN.IMDG_UN_NO(+)" ).append("\n"); 
		query.append("                   AND CGO.IMDG_UN_NO_SEQ = SIUN.IMDG_UN_NO_SEQ(+)" ).append("\n"); 
		query.append("                   AND CGO.CSTMS_EXPT_FLG IS NULL" ).append("\n"); 
		query.append("				   AND RQST.DG_FLG = 'Y'" ).append("\n"); 
		query.append("                   AND CGO.AUTH_STS_CD ='Y'" ).append("\n"); 
		query.append("                   AND RQST.PRNR_CGO_RQST_SEQ = CGO.PRNR_CGO_RQST_SEQ" ).append("\n"); 
		query.append("                   AND NVL(CGO.IMDG_UN_NO,'0') <> '0'" ).append("\n"); 
		query.append("                   AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')" ).append("\n"); 
		query.append("                                FROM BKG_CSTMS_EUR_DG_VSL_SKD" ).append("\n"); 
		query.append("                               WHERE EUR_DG_DECL_TP_CD = @[d_type]" ).append("\n"); 
		query.append("                                 AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                 AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                 AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                 AND PORT_CD      = @[port_cd]" ).append("\n"); 
		query.append("                              )" ).append("\n"); 
		query.append("                   AND NOT EXISTS (SELECT *" ).append("\n"); 
		query.append("                                     FROM BKG_CSTMS_EUR_DG EUDG" ).append("\n"); 
		query.append("                                    WHERE EUDG.EUR_DG_DECL_TP_CD IN ( 'L','D')" ).append("\n"); 
		query.append("                                      #if(${d_type}=='L')" ).append("\n"); 
		query.append("                                      AND EUDG.POL_CD = @[port_cd] " ).append("\n"); 
		query.append("								      #elseif(${d_type}=='D')" ).append("\n"); 
		query.append("                                      AND EUDG.POD_CD = @[port_cd] " ).append("\n"); 
		query.append("                                      #end" ).append("\n"); 
		query.append("                                      AND EUDG.VSL_CD            = RQST.VSL_CD" ).append("\n"); 
		query.append("                                      AND EUDG.SKD_VOY_NO        = RQST.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      AND EUDG.SKD_DIR_CD        = RQST.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      AND EUDG.BL_NO             = CGO.BKG_REF_NO" ).append("\n"); 
		query.append("                                      AND EUDG.SPCL_CGO_SEQ      = CGO.SPCL_CGO_SEQ" ).append("\n"); 
		query.append("                                      AND EUDG.SPCL_CNTR_SEQ     = CGO.SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("                                      AND EUDG.DCGO_REF_NO       = CGO.DCGO_REF_NO" ).append("\n"); 
		query.append("                                      AND RQST.LST_RQST_DAT_FLG   = 'Y'" ).append("\n"); 
		query.append("                                  )" ).append("\n"); 
		query.append("               ) BVD" ).append("\n"); 
		query.append("              ,(SELECT A.BAY_PLN_ID" ).append("\n"); 
		query.append("                      ,A.VSL_CD" ).append("\n"); 
		query.append("                      ,A.ETA_DT" ).append("\n"); 
		query.append("                      ,A.ETD_DT" ).append("\n"); 
		query.append("                      ,B.EUR_DG_CNTR_ID CNTR_NO" ).append("\n"); 
		query.append("                      ,LPAD(B.CELL_PSN_NO, 7,0 ) CELL_PSN_NO" ).append("\n"); 
		query.append("                      ,B.POL_CD" ).append("\n"); 
		query.append("                      ,B.POD_CD" ).append("\n"); 
		query.append("                  FROM BKG_CSTMS_EUR_DG_BAY_PLN A" ).append("\n"); 
		query.append("                      ,BKG_CSTMS_EUR_DG_BAY_DTL B" ).append("\n"); 
		query.append("                 WHERE A.BAY_PLN_ID = B.BAY_PLN_ID" ).append("\n"); 
		query.append("                   AND A.BAY_PLN_ID  = NVL(@[bay_pln_id], ' ')" ).append("\n"); 
		query.append("               ) BAY" ).append("\n"); 
		query.append("             ,(SELECT HIS.VSL_CD" ).append("\n"); 
		query.append("                     ,HIS.SKD_VOY_NO" ).append("\n"); 
		query.append("                     ,HIS.SKD_DIR_CD" ).append("\n"); 
		query.append("                     ,HIS.BL_NO" ).append("\n"); 
		query.append("                     ,HIS.CNTR_NO" ).append("\n"); 
		query.append("                     ,HIS.CELL_PSN_NO" ).append("\n"); 
		query.append("                     ,HIS.CNTR_REF_NO" ).append("\n"); 
		query.append("                     ,HIS.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                     ,HIS.IMDG_PCK_GRP_CD" ).append("\n"); 
		query.append("                     ,HIS.IMDG_CLSS_CD" ).append("\n"); 
		query.append("                     ,HIS.IMDG_UN_NO" ).append("\n"); 
		query.append("                     ,HIS.FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("                     ,HIS.NET_WGT" ).append("\n"); 
		query.append("                     ,HIS.GRS_WGT" ).append("\n"); 
		query.append("                     ,HIS.EMS_NO" ).append("\n"); 
		query.append("                     ,HIS.DCGO_PCK_GRP_CD1" ).append("\n"); 
		query.append("                     ,HIS.EUR_DCGO_MRN_POLUT_CD" ).append("\n"); 
		query.append("                     ,HIS.IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("                     ,HIS.NET_EXPLO_WGT" ).append("\n"); 
		query.append("                     ,HIS.OUT_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("                     ,HIS.OUT_IMDG_PCK_CD1" ).append("\n"); 
		query.append("                     ,HIS.PRP_SHP_NM" ).append("\n"); 
		query.append("                     ,HIS.HZD_DESC" ).append("\n"); 
		query.append("                     ,HIS.EMER_CNTC_PHN_NO" ).append("\n"); 
		query.append("                     ,HIS.EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("                     ,HIS.POL_CD" ).append("\n"); 
		query.append("                     ,HIS.POD_CD" ).append("\n"); 
		query.append("                     ,HIS.IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("                     ,HIS.CGO_OPR_CD" ).append("\n"); 
		query.append("                     ,HIS.IN_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("                     ,HIS.EUR_INR_PCK_DESC" ).append("\n"); 
		query.append("                     ,HIS.IN_IMDG_PCK_CD1" ).append("\n"); 
		query.append("                     ,HIS.IMDG_SUBS_RSK_LBL_CD1" ).append("\n"); 
		query.append("                     ,HIS.IMDG_SUBS_RSK_LBL_CD2" ).append("\n"); 
		query.append("                     ,HIS.IMDG_SUBS_RSK_LBL_CD3" ).append("\n"); 
		query.append("                     ,HIS.IMDG_SUBS_RSK_LBL_CD4" ).append("\n"); 
		query.append("                     ,HIS.DCGO_REF_NO" ).append("\n"); 
		query.append("                     ,HIS.CNTR_CGO_SEQ" ).append("\n"); 
		query.append("                     ,HIS.EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("                     ,HIS.EUR_OUTR_PCK_DESC" ).append("\n"); 
		query.append("                     ,HIS.SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("                     ,HIS.SPCL_CGO_SEQ" ).append("\n"); 
		query.append("					 ,HIS.IMDG_COMP_GRP_CD" ).append("\n"); 
		query.append("                         FROM BKG_CSTMS_EUR_DG_HIS HIS" ).append("\n"); 
		query.append("                              ,(SELECT A.VSL_CD" ).append("\n"); 
		query.append("                              ,A.SKD_VOY_NO " ).append("\n"); 
		query.append("                              ,A.SKD_DIR_CD " ).append("\n"); 
		query.append("                              ,A.BL_NO " ).append("\n"); 
		query.append("                              ,A.CNTR_NO AS CNTR_NO " ).append("\n"); 
		query.append("                              ,MAX(A.CRE_DT) AS CRE_DT " ).append("\n"); 
		query.append("                              ,A.DCGO_REF_NO AS DCGO_REF_NO" ).append("\n"); 
		query.append("                          FROM BKG_CSTMS_EUR_DG_HIS A" ).append("\n"); 
		query.append("                              ,BKG_CSTMS_EUR_DG B" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND A.BL_NO = B.BL_NO" ).append("\n"); 
		query.append("                           AND A.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                           AND A.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                           AND A.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                           AND A.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                           AND A.CNTR_CGO_SEQ = B.CNTR_CGO_SEQ" ).append("\n"); 
		query.append("                           AND A.DCGO_REF_NO = B.DCGO_REF_NO" ).append("\n"); 
		query.append("						   #if (${d_type} == 'D' )" ).append("\n"); 
		query.append("                           AND A.POD_CD = @[port_cd]" ).append("\n"); 
		query.append("                           #elseif (${d_type} == 'L')" ).append("\n"); 
		query.append("                           AND A.POL_CD = @[port_cd]" ).append("\n"); 
		query.append("                           #end" ).append("\n"); 
		query.append("                         GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                               ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                               ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                               ,A.BL_NO" ).append("\n"); 
		query.append("                               ,A.CNTR_NO" ).append("\n"); 
		query.append("                               ,A.DCGO_REF_NO) HIS_SEQ" ).append("\n"); 
		query.append("                        WHERE 1=1" ).append("\n"); 
		query.append("                          AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')" ).append("\n"); 
		query.append("                                     FROM BKG_CSTMS_EUR_DG_VSL_SKD" ).append("\n"); 
		query.append("                                     WHERE EUR_DG_DECL_TP_CD = @[d_type]" ).append("\n"); 
		query.append("                                     AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                     AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                     AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                     AND PORT_CD      = @[port_cd])" ).append("\n"); 
		query.append("                          AND HIS.DCGO_REF_NO = HIS_SEQ.DCGO_REF_NO" ).append("\n"); 
		query.append("                          AND HIS.CRE_DT = HIS_SEQ.CRE_DT" ).append("\n"); 
		query.append("                          AND HIS.BL_NO = HIS_SEQ.BL_NO" ).append("\n"); 
		query.append("                          AND HIS.VSL_CD = HIS_SEQ.VSL_CD" ).append("\n"); 
		query.append("                          AND HIS.SKD_VOY_NO = HIS_SEQ.SKD_VOY_NO" ).append("\n"); 
		query.append("                          AND HIS.SKD_DIR_CD = HIS_SEQ.SKD_DIR_CD" ).append("\n"); 
		query.append("                          AND HIS.CNTR_NO = HIS_SEQ.CNTR_NO" ).append("\n"); 
		query.append("						  #if (${d_type} == 'D' )" ).append("\n"); 
		query.append("                          AND HIS.POD_CD = @[port_cd]" ).append("\n"); 
		query.append("                          #elseif (${d_type} == 'L')" ).append("\n"); 
		query.append("                          AND HIS.POL_CD = @[port_cd]" ).append("\n"); 
		query.append("                          AND NOT EXISTS (SELECT *" ).append("\n"); 
		query.append("                                         FROM BKG_CSTMS_EUR_DG EUDG" ).append("\n"); 
		query.append("                                         WHERE EUDG.EUR_DG_DECL_TP_CD = @[d_type]" ).append("\n"); 
		query.append("                                          AND EUDG.PORT_CD           = @[port_cd]" ).append("\n"); 
		query.append("                                          AND EUDG.VSL_CD            = HIS.VSL_CD" ).append("\n"); 
		query.append("                                          AND EUDG.SKD_VOY_NO        = HIS.SKD_VOY_NO" ).append("\n"); 
		query.append("                                          AND EUDG.SKD_DIR_CD        = HIS.SKD_DIR_CD" ).append("\n"); 
		query.append("                                          AND EUDG.BL_NO             = HIS.BL_NO" ).append("\n"); 
		query.append("                                          AND EUDG.CNTR_NO           = HIS.CNTR_NO" ).append("\n"); 
		query.append("                                          AND EUDG.CNTR_CGO_SEQ      = HIS.CNTR_CGO_SEQ)" ).append("\n"); 
		query.append("                          #end" ).append("\n"); 
		query.append("               ) HIS" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("           AND BVD.VSL_CD      = BAY.VSL_CD(+)" ).append("\n"); 
		query.append("           AND BVD.POL_CD      = BAY.POL_CD(+)" ).append("\n"); 
		query.append("           AND BVD.POD_CD      = BAY.POD_CD(+)" ).append("\n"); 
		query.append("           AND BVD.CNTR_NO     = BAY.CNTR_NO(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("           AND BVD.VSL_CD      = HIS.VSL_CD(+)" ).append("\n"); 
		query.append("           AND BVD.SKD_VOY_NO  = HIS.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("           AND BVD.SKD_DIR_CD  = HIS.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("           AND BVD.BL_NO       = HIS.BL_NO(+)" ).append("\n"); 
		query.append("           AND BVD.CNTR_REF_NO = HIS.CNTR_REF_NO(+)" ).append("\n"); 
		query.append("           AND BVD.DCGO_REF_NO = HIS.DCGO_REF_NO(+)) " ).append("\n"); 
		query.append("	 	   " ).append("\n"); 
		query.append(" 			UNION" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			(" ).append("\n"); 
		query.append("-- Booking Data" ).append("\n"); 
		query.append("                SELECT CASE WHEN HIS.CGO_OPR_CD IS NOT NULL THEN HIS.CGO_OPR_CD -- CGO_OPR_CD of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.CGO_OPR_CD" ).append("\n"); 
		query.append("                END AS CGO_OPR_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.BL_NO IS NOT NULL THEN HIS.BL_NO -- BL_NO of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.BL_NO" ).append("\n"); 
		query.append("                END AS BL_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.BL_NO IS NOT NULL THEN HIS.BL_NO -- MERGE_BL_NO of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.BL_NO" ).append("\n"); 
		query.append("                END AS MERGE_BL_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.POL_CD IS NOT NULL THEN HIS.POL_CD -- POL_CD of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.POL_CD" ).append("\n"); 
		query.append("                END AS POL_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.POD_CD IS NOT NULL THEN HIS.POD_CD -- POD_CD of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.POD_CD" ).append("\n"); 
		query.append("                END AS POD_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CNTR_NO IS NOT NULL THEN HIS.CNTR_NO -- CNTR_NO of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.CNTR_NO" ).append("\n"); 
		query.append("                END AS CNTR_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CNTR_CGO_SEQ IS NOT NULL THEN HIS.CNTR_CGO_SEQ -- CNTR_CGO_SEQ of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.CNTR_CGO_SEQ" ).append("\n"); 
		query.append("                END AS CNTR_CGO_SEQ" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CNTR_TPSZ_CD IS NOT NULL THEN HIS.CNTR_TPSZ_CD -- CNTR_TPSZ_CD of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                END AS CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CELL_PSN_NO IS NOT NULL THEN HIS.CELL_PSN_NO -- CELL_PSN_NO of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE DECODE(NVL(null, ''), '', BVD.CELL_PSN_NO, BAY.CELL_PSN_NO )" ).append("\n"); 
		query.append("                END AS CELL_PSN_NO" ).append("\n"); 
		query.append("              ,BVD.IMDG_COMP_GRP_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_UN_NO IS NOT NULL THEN HIS.IMDG_UN_NO -- IMDG_UN_NO of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.IMDG_UN_NO" ).append("\n"); 
		query.append("               END AS IMDG_UN_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_UN_NO_SEQ IS NOT NULL THEN HIS.IMDG_UN_NO_SEQ -- IMDG_UN_NO_SEQ of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("               END AS IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_CLSS_CD IS NOT NULL THEN HIS.IMDG_CLSS_CD -- IMDG_CLSS_CD of the latest Transit port history" ).append("\n"); 
		query.append("                    ELSE BVD.IMDG_CLSS_CD" ).append("\n"); 
		query.append("                END AS IMDG_CLSS_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.FLSH_PNT_CDO_TEMP IS NOT NULL THEN HIS.FLSH_PNT_CDO_TEMP -- FLSH_PNT_CDO_TEMP of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("               END AS FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("              ,'' AS AGENT         --AGENT" ).append("\n"); 
		query.append("              ,'' AS FWRD_ID       --FOWDER CODE" ).append("\n"); 
		query.append("              ,'' AS C_TYPE        --CARRIAGE TYPE" ).append("\n"); 
		query.append("              ,'' AS SVC_RQST_NO   --SSR(FEEDER)" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_PCK_GRP_CD IS NOT NULL THEN HIS.IMDG_PCK_GRP_CD -- IMDG_PCK_GRP_CD of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE NVL(BVD.IMDG_PCK_GRP_CD,'N')" ).append("\n"); 
		query.append("               END AS IMDG_PCK_GRP_CD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IN_IMDG_PCK_QTY1 IS NOT NULL THEN HIS.IN_IMDG_PCK_QTY1 -- IN_IMDG_PCK_QTY1 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IN_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("               END AS IN_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("               ,CASE WHEN HIS.IN_IMDG_PCK_CD1 IS NOT NULL THEN HIS.IN_IMDG_PCK_CD1 -- IN_IMDG_PCK_CD1 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IN_IMDG_PCK_CD1" ).append("\n"); 
		query.append("               END AS IN_IMDG_PCK_CD1" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EUR_INR_PCK_DESC IS NOT NULL THEN HIS.EUR_INR_PCK_DESC -- EUR_INR_PCK_DESC of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IN_N1ST_IMDG_PCK_DESC" ).append("\n"); 
		query.append("               END AS EUR_INR_PCK_DESC" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.OUT_IMDG_PCK_QTY1 IS NOT NULL THEN HIS.OUT_IMDG_PCK_QTY1 -- OUT_IMDG_PCK_QTY1 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.OUT_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("               END AS OUT_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.OUT_IMDG_PCK_CD1 IS NOT NULL THEN HIS.OUT_IMDG_PCK_CD1 -- OUT_IMDG_PCK_QTY1 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.OUT_IMDG_PCK_CD1" ).append("\n"); 
		query.append("               END AS OUT_IMDG_PCK_CD1" ).append("\n"); 
		query.append("              ,CASE WHEN BVD.CGO_OPR_CD = 'NYK' THEN NVL2(HIS.OUT_IMDG_PCK_QTY1, HIS.OUT_IMDG_PCK_QTY1 || ' ', BVD.OUT_IMDG_PCK_QTY1 || ' ')" ).append("\n"); 
		query.append("               || (SELECT IMDG_PCK_DESC " ).append("\n"); 
		query.append("                     FROM SCG_IMDG_PCK_CD" ).append("\n"); 
		query.append("                    WHERE IMDG_PCK_CD = NVL(HIS.OUT_IMDG_PCK_CD1,BVD.OUT_IMDG_PCK_CD1)" ).append("\n"); 
		query.append("                  )" ).append("\n"); 
		query.append("               ELSE " ).append("\n"); 
		query.append("               NVL2(BVD.OUT_N1ST_IMDG_PCK_DESC, BVD.OUT_IMDG_PCK_QTY1||' '||BVD.OUT_N1ST_IMDG_PCK_DESC ,'')" ).append("\n"); 
		query.append("               END AS EUR_OUTR_PCK_DESC" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EMS_NO IS NOT NULL THEN HIS.EMS_NO -- EMS_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.EMS_NO" ).append("\n"); 
		query.append("               END AS EMS_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.NET_WGT IS NOT NULL THEN HIS.NET_WGT -- NET_WGT of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.NET_WGT" ).append("\n"); 
		query.append("               END AS NET_WGT" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.GRS_WGT IS NOT NULL THEN HIS.GRS_WGT -- GRS_WGT of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.GRS_WGT" ).append("\n"); 
		query.append("               END AS GRS_WGT" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.PRP_SHP_NM IS NOT NULL THEN HIS.PRP_SHP_NM -- PRP_SHP_NM of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.PRP_SHP_NM" ).append("\n"); 
		query.append("               END AS PRP_SHP_NM" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.HZD_DESC IS NOT NULL THEN HIS.HZD_DESC -- HZD_DESC of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.HZD_DESC" ).append("\n"); 
		query.append("               END AS HZD_DESC" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EUR_DCGO_MRN_POLUT_CD IS NOT NULL THEN HIS.EUR_DCGO_MRN_POLUT_CD -- MRN_POLUT_FLG of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.MRN_POLUT_FLG" ).append("\n"); 
		query.append("               END AS MRN_POLUT_FLG" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_LMT_QTY_FLG IS NOT NULL THEN HIS.IMDG_LMT_QTY_FLG -- IMDG_LMT_QTY_FLG of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("               END AS IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.NET_EXPLO_WGT IS NOT NULL THEN HIS.NET_EXPLO_WGT -- NET_EXPLO_WGT of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.NET_EXPLO_WGT" ).append("\n"); 
		query.append("               END AS NET_EXPLO_WGT" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CNTR_REF_NO IS NOT NULL THEN HIS.CNTR_REF_NO -- CNTR_REF_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.CNTR_REF_NO" ).append("\n"); 
		query.append("               END AS CNTR_NO_OLD" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.DCGO_REF_NO IS NOT NULL THEN HIS.DCGO_REF_NO -- DCGO_REF_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.DCGO_REF_NO" ).append("\n"); 
		query.append("               END AS DCGO_REF_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EMER_CNTC_PHN_NO IS NOT NULL THEN HIS.EMER_CNTC_PHN_NO -- EMER_CNTC_PHN_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.EMER_CNTC_PHN_NO_CTNT" ).append("\n"); 
		query.append("               END AS EMER_CNTC_PHN_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EMER_CNTC_PSON_NM IS NOT NULL THEN HIS.EMER_CNTC_PSON_NM -- EMER_CNTC_PSON_NM of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("               END AS EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD1 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD1 -- IMDG_SUBS_RSK_LBL_CD1 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IMDG_SUBS_RSK_LBL_CD1" ).append("\n"); 
		query.append("               END AS IMDG_SUBS_RSK_LBL_CD1" ).append("\n"); 
		query.append("               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD2 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD2 -- IMDG_SUBS_RSK_LBL_CD2 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IMDG_SUBS_RSK_LBL_CD2" ).append("\n"); 
		query.append("               END AS IMDG_SUBS_RSK_LBL_CD2" ).append("\n"); 
		query.append("               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD3 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD3 -- IMDG_SUBS_RSK_LBL_CD3 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IMDG_SUBS_RSK_LBL_CD3" ).append("\n"); 
		query.append("               END AS IMDG_SUBS_RSK_LBL_CD3" ).append("\n"); 
		query.append("               ,CASE WHEN HIS.IMDG_SUBS_RSK_LBL_CD4 IS NOT NULL THEN HIS.IMDG_SUBS_RSK_LBL_CD4 -- IMDG_SUBS_RSK_LBL_CD4 of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.IMDG_SUBS_RSK_LBL_CD4" ).append("\n"); 
		query.append("               END AS IMDG_SUBS_RSK_LBL_CD4" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.CNTR_REF_NO IS NOT NULL THEN HIS.CNTR_REF_NO -- CNTR_REF_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.CNTR_REF_NO" ).append("\n"); 
		query.append("               END AS CNTR_REF_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.EMER_RSPN_GID_NO IS NOT NULL THEN HIS.EMER_RSPN_GID_NO -- EMER_RSPN_GID_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("               END AS EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.SPCL_CNTR_SEQ IS NOT NULL THEN HIS.SPCL_CNTR_SEQ -- CNTR_REF_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("               END AS SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("              ,CASE WHEN HIS.SPCL_CGO_SEQ IS NOT NULL THEN HIS.SPCL_CGO_SEQ -- EMER_RSPN_GID_NO of the latest Transit port history" ).append("\n"); 
		query.append("               ELSE BVD.SPCL_CGO_SEQ" ).append("\n"); 
		query.append("               END AS SPCL_CGO_SEQ" ).append("\n"); 
		query.append("          FROM (SELECT 'NYK'      AS CGO_OPR_CD" ).append("\n"); 
		query.append("                      ,BV.BKG_NO     BKG_NO" ).append("\n"); 
		query.append("                      ,BK.BL_NO      BL_NO" ).append("\n"); 
		query.append("                      ,BV.POL_CD     POL_CD" ).append("\n"); 
		query.append("                      ,BV.POD_CD     POD_CD" ).append("\n"); 
		query.append("                      ,BV.VSL_CD     VSL_CD" ).append("\n"); 
		query.append("                      ,BV.SKD_VOY_NO SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,BV.SKD_DIR_CD SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,BDC.CNTR_NO           CNTR_NO" ).append("\n"); 
		query.append("                      ,BDC.CNTR_CGO_SEQ      CNTR_CGO_SEQ" ).append("\n"); 
		query.append("                      ,BDC.CNTR_TPSZ_CD      CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,SIUN.IMDG_COMP_GRP_CD" ).append("\n"); 
		query.append("                      ,BDC.IMDG_UN_NO        IMDG_UN_NO" ).append("\n"); 
		query.append("                      ,BDC.IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("                      ,BDC.IMDG_CLSS_CD" ).append("\n"); 
		query.append("                      ,BDC.FLSH_PNT_CDO_TEMP FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("                      ,BDC.IMDG_PCK_GRP_CD   IMDG_PCK_GRP_CD" ).append("\n"); 
		query.append("                      ,BDC.IN_IMDG_PCK_QTY1  IN_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("                      ,BDC.IN_IMDG_PCK_CD1   IN_IMDG_PCK_CD1" ).append("\n"); 
		query.append("                      ,BDC.OUT_IMDG_PCK_QTY1 OUT_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("                      ,BDC.OUT_IMDG_PCK_CD1  OUT_IMDG_PCK_CD1" ).append("\n"); 
		query.append("                      ,BDC.EMS_NO            EMS_NO" ).append("\n"); 
		query.append("                      ,BDC.NET_WGT           NET_WGT" ).append("\n"); 
		query.append("                      ,BDC.GRS_WGT           GRS_WGT" ).append("\n"); 
		query.append("                      ,BDC.PRP_SHP_NM        PRP_SHP_NM" ).append("\n"); 
		query.append("                      ,BDC.HZD_DESC          HZD_DESC" ).append("\n"); 
		query.append("                      ,BDC.MRN_POLUT_FLG      MRN_POLUT_FLG" ).append("\n"); 
		query.append("                      ,BDC.IMDG_LMT_QTY_FLG  IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("                      ,(SELECT LPAD(OPF.VSL_BAY_NO || OPF.VSL_ROW_NO || OPF.VSL_TR_NO, 7,0 ) CELL_PSN_NO" ).append("\n"); 
		query.append("                          FROM OPF_BAY_PLN_LDIS OPF" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND OPF.VSL_CD = BV.VSL_CD" ).append("\n"); 
		query.append("                           AND OPF.SKD_VOY_NO = BV.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND OPF.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                           AND OPF.POD_CD = BV.POD_CD" ).append("\n"); 
		query.append("                           AND OPF.POL_CD = BV.POL_CD" ).append("\n"); 
		query.append("                           AND OPF.CNTR_REF_NO = BDC.CNTR_NO" ).append("\n"); 
		query.append("                           AND ROWNUM = 1" ).append("\n"); 
		query.append("                       ) CELL_PSN_NO" ).append("\n"); 
		query.append("                      ,BDC.NET_EXPLO_WGT" ).append("\n"); 
		query.append("                      ,BDC.DCGO_REF_NO" ).append("\n"); 
		query.append("                      ,BDC.EMER_CNTC_PHN_NO_CTNT" ).append("\n"); 
		query.append("                      ,BDC.EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("                      ,BDC.CNTR_NO AS CNTR_REF_NO" ).append("\n"); 
		query.append("                      ,BDC.IMDG_SUBS_RSK_LBL_CD1" ).append("\n"); 
		query.append("                      ,BDC.IMDG_SUBS_RSK_LBL_CD2" ).append("\n"); 
		query.append("                      ,BDC.IMDG_SUBS_RSK_LBL_CD3" ).append("\n"); 
		query.append("                      ,BDC.IMDG_SUBS_RSK_LBL_CD4" ).append("\n"); 
		query.append("                      ,BDC.EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("                      ,'' AS IN_N1ST_IMDG_PCK_DESC" ).append("\n"); 
		query.append("                      ,BDC.DG_CNTR_SEQ AS SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("                      ,BDC.CNTR_CGO_SEQ AS SPCL_CGO_SEQ" ).append("\n"); 
		query.append("                      ,'' AS OUT_N1ST_IMDG_PCK_DESC" ).append("\n"); 
		query.append("                  FROM (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${d_type} != 'T')" ).append("\n"); 
		query.append("    #if(${barge_flag} == 'Y')" ).append("\n"); 
		query.append("        #if (${d_type} == 'P' || ${d_type} == 'O')" ).append("\n"); 
		query.append("            #if (${d_type} == 'P') -- Pre-Carriage" ).append("\n"); 
		query.append("                        SELECT SUBSTR(@[vvd_cd], 1, 4) VSL_CD" ).append("\n"); 
		query.append("                              ,SUBSTR(@[vvd_cd], 5, 4) SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,SUBSTR(@[vvd_cd], 9, 1) SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,BKG_NO" ).append("\n"); 
		query.append("                              ,POL_CD" ).append("\n"); 
		query.append("                              ,POD_CD" ).append("\n"); 
		query.append("                          FROM BKG_VVD" ).append("\n"); 
		query.append("                         WHERE BKG_NO IN (SELECT BKG_NO" ).append("\n"); 
		query.append("                                            FROM BKG_VVD" ).append("\n"); 
		query.append("                                           WHERE VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                             AND SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                             AND SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                             AND (POL_CD IN ('NLRTM', @[port_cd]) OR POD_CD IN ('NLRTM', @[port_cd]))" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("                        AND POL_CD = 'NLRTM'" ).append("\n"); 
		query.append("                        AND POD_CD = @[port_cd]" ).append("\n"); 
		query.append("            #else  -- On-Carriage" ).append("\n"); 
		query.append("                        SELECT SUBSTR(@[vvd_cd], 1, 4) VSL_CD" ).append("\n"); 
		query.append("                              ,SUBSTR(@[vvd_cd], 5, 4) SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,SUBSTR(@[vvd_cd], 9, 1) SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,BKG_NO" ).append("\n"); 
		query.append("                              ,POL_CD" ).append("\n"); 
		query.append("                              ,POD_CD" ).append("\n"); 
		query.append("                          FROM BKG_VVD" ).append("\n"); 
		query.append("                         WHERE BKG_NO IN (SELECT BKG_NO" ).append("\n"); 
		query.append("                                            FROM BKG_VVD" ).append("\n"); 
		query.append("                                           WHERE VSL_CD    = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                             AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                             AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                             AND (POL_CD IN ('NLRTM', @[port_cd]) OR POD_CD IN ('NLRTM', @[port_cd]))" ).append("\n"); 
		query.append("                                )" ).append("\n"); 
		query.append("                            AND POL_CD = @[port_cd]" ).append("\n"); 
		query.append("                            AND POD_CD = 'NLRTM'" ).append("\n"); 
		query.append("            #end" ).append("\n"); 
		query.append("        #else -- Discharging or Discharging + On-Carriage or Loading or Loading + Pre-Carriage" ).append("\n"); 
		query.append("                        SELECT *" ).append("\n"); 
		query.append("                          FROM BKG_VVD BV" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND BV.VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("            #if (${d_type} == 'D' || ${d_type} == 'DO') -- Discharging or Discharging + On-Carriage" ).append("\n"); 
		query.append("                           AND BV.POD_CD      = @[port_cd]" ).append("\n"); 
		query.append("            #elseif (${d_type} == 'L' || ${d_type} == 'PL') -- Loading or Loading + Pre-Carriage" ).append("\n"); 
		query.append("                           AND BV.POL_CD      = @[port_cd]" ).append("\n"); 
		query.append("            #else" ).append("\n"); 
		query.append("                           AND BV.POL_CD      = @[port_cd]" ).append("\n"); 
		query.append("            #end" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #else -- exclude barge" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                        SELECT *" ).append("\n"); 
		query.append("                          FROM BKG_VVD BV" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND BV.VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        #if (${d_type} == 'D' || ${d_type} == 'DO' || ${d_type} == 'O') -- Discharging or Discharging + On-Carriage" ).append("\n"); 
		query.append("                           AND BV.POD_CD      = @[port_cd]" ).append("\n"); 
		query.append("        #elseif (${d_type} == 'L' || ${d_type} == 'PL' || ${d_type} == 'P') -- Loading or Loading + Pre-Carriage" ).append("\n"); 
		query.append("                           AND BV.POL_CD      = @[port_cd]" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("                           AND BV.POL_CD      = @[port_cd]" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        #if(${ui_type} == 'ESM_BKG_0965')" ).append("\n"); 
		query.append("                           AND (BV.POL_CD = @[port_cd] OR BV.POD_CD = @[port_cd])" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("#else -- d_type = 'T' 의 경우" ).append("\n"); 
		query.append("                        SELECT *" ).append("\n"); 
		query.append("                          FROM BKG_VVD BV" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND BV.VSL_CD        =  SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_VOY_NO    =  SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                           AND BV.SKD_DIR_CD    =  SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                           AND BV.POL_CD        IN  (SELECT VPS_PORT_CD" ).append("\n"); 
		query.append("                                                       FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                      WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                        AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                        AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                        AND CLPT_SEQ < (SELECT MAX(CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                          FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                                         WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                           AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                           AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                           AND VPS_PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                                       )" ).append("\n"); 
		query.append("                                                        AND NVL(SKD_CNG_STS_CD,'X') <> 'S'" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                           AND BV.POD_CD        IN  (SELECT VPS_PORT_CD" ).append("\n"); 
		query.append("                                                       FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                      WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                        AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                        AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                        AND CLPT_SEQ  > (SELECT MIN(CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                           FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                            AND VPS_PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                                        )" ).append("\n"); 
		query.append("                                                        AND  CLPT_SEQ < (SELECT NVL(MIN(V2.CLPT_SEQ),50)" ).append("\n"); 
		query.append("                                                                           FROM VSK_VSL_PORT_SKD V1, VSK_VSL_PORT_SKD V2" ).append("\n"); 
		query.append("                                                                          WHERE 1=1" ).append("\n"); 
		query.append("                                                                            AND V1.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                            AND V1.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                            AND V1.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                            AND V1.VSL_CD = V2.VSL_CD" ).append("\n"); 
		query.append("                                                                            AND V1.SKD_VOY_NO = V2.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                            AND V1.SKD_DIR_CD = V2.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                            AND NVL(V1.SKD_CNG_STS_CD,'X') = 'O'" ).append("\n"); 
		query.append("                                                                            AND NVL(V2.SKD_CNG_STS_CD,'X') = 'A'" ).append("\n"); 
		query.append("                                                                            AND V1.CLPT_SEQ < V2.CLPT_SEQ" ).append("\n"); 
		query.append("                                                                        )" ).append("\n"); 
		query.append("                                                        AND NVL(SKD_CNG_STS_CD,'X') <> 'S'" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                       ) BV" ).append("\n"); 
		query.append("                      ,BKG_DG_CGO BDC" ).append("\n"); 
		query.append("                      ,BKG_BOOKING BK" ).append("\n"); 
		query.append("                      ,SCG_IMDG_UN_NO SIUN" ).append("\n"); 
		query.append("                 WHERE 1=1" ).append("\n"); 
		query.append("                   AND BV.BKG_NO        =   BK.BKG_NO" ).append("\n"); 
		query.append("                   AND BV.BKG_NO        =   BDC.BKG_NO" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   AND BDC.IMDG_UN_NO    =     SIUN.IMDG_UN_NO(+)" ).append("\n"); 
		query.append("                   AND BDC.IMDG_UN_NO_SEQ = SIUN.IMDG_UN_NO_SEQ(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   AND BK.DCGO_FLG      =   'Y'" ).append("\n"); 
		query.append("                   AND BK.BKG_STS_CD    <>  'X'" ).append("\n"); 
		query.append("				   AND BDC.CSTMS_EXPT_FLG IS NULL" ).append("\n"); 
		query.append("				   AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')" ).append("\n"); 
		query.append("                          	  FROM BKG_CSTMS_EUR_DG_VSL_SKD" ).append("\n"); 
		query.append("                              WHERE EUR_DG_DECL_TP_CD = @[d_type]" ).append("\n"); 
		query.append("	                          AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("    	                      AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("        	                  AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("            	              AND PORT_CD      = @[port_cd])" ).append("\n"); 
		query.append("                   AND NOT EXISTS (SELECT *" ).append("\n"); 
		query.append("                                     FROM BKG_CSTMS_EUR_DG EUDG" ).append("\n"); 
		query.append("                                    WHERE EUDG.EUR_DG_DECL_TP_CD = @[d_type]" ).append("\n"); 
		query.append("                                      AND EUDG.PORT_CD           = @[port_cd]" ).append("\n"); 
		query.append("                                      AND EUDG.VSL_CD            = BV.VSL_CD" ).append("\n"); 
		query.append("                                      AND EUDG.SKD_VOY_NO        = BV.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      AND EUDG.SKD_DIR_CD        = BV.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      AND EUDG.BL_NO             = BK.BL_NO" ).append("\n"); 
		query.append("                                      AND EUDG.CNTR_NO           = BDC.CNTR_NO" ).append("\n"); 
		query.append("                                      AND EUDG.SPCL_CNTR_SEQ      = BDC.DG_CNTR_SEQ" ).append("\n"); 
		query.append("                                      AND EUDG.SPCL_CGO_SEQ      = BDC.CNTR_CGO_SEQ" ).append("\n"); 
		query.append("                                  )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                SELECT CGO.CGO_OPR_CD" ).append("\n"); 
		query.append("                      ,RQST.BKG_REF_NO BKG_NO" ).append("\n"); 
		query.append("                      ,RQST.BKG_REF_NO BL_NO" ).append("\n"); 
		query.append("                      ,RQST.POL_CD POL_CD" ).append("\n"); 
		query.append("                      ,RQST.POD_CD POD_CD" ).append("\n"); 
		query.append("                      ,RQST.VSL_CD" ).append("\n"); 
		query.append("                      ,RQST.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,RQST.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,CGO.CNTR_REF_NO AS CNTR_NO" ).append("\n"); 
		query.append("                      ,CGO.SPCL_CGO_SEQ " ).append("\n"); 
		query.append("                      ,CGO.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,SIUN.IMDG_COMP_GRP_CD" ).append("\n"); 
		query.append("                      ,CGO.IMDG_UN_NO" ).append("\n"); 
		query.append("                      ,CGO.IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("                      ,CGO.IMDG_CLSS_CD" ).append("\n"); 
		query.append("                      ,CGO.FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("                      ,CGO.IMDG_PCK_GRP_CD" ).append("\n"); 
		query.append("                      ,CGO.IN_N1ST_IMDG_PCK_QTY" ).append("\n"); 
		query.append("                      ,CGO.IN_N1ST_IMDG_PCK_CD" ).append("\n"); 
		query.append("                      ,CGO.OUT_N1ST_IMDG_PCK_QTY" ).append("\n"); 
		query.append("                      ,CGO.OUT_N1ST_IMDG_PCK_CD" ).append("\n"); 
		query.append("                      ,CGO.EMS_NO" ).append("\n"); 
		query.append("                      ,CGO.NET_WGT" ).append("\n"); 
		query.append("                      ,CGO.GRS_WGT" ).append("\n"); 
		query.append("                      ,CGO.PRP_SHP_NM" ).append("\n"); 
		query.append("                      ,HZD_DESC" ).append("\n"); 
		query.append("                      ,MRN_POLUT_FLG" ).append("\n"); 
		query.append("                      ,IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("                      ,(SELECT LPAD(OPF.VSL_BAY_NO || OPF.VSL_ROW_NO || OPF.VSL_TR_NO, 7,0 ) AS CELL_PSN_NO" ).append("\n"); 
		query.append("                          FROM OPF_BAY_PLN_LDIS OPF" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND OPF.VSL_CD = RQST.VSL_CD" ).append("\n"); 
		query.append("                           AND OPF.SKD_VOY_NO = RQST.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND OPF.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                           AND OPF.POD_CD = RQST.POD_CD" ).append("\n"); 
		query.append("                           AND OPF.POL_CD = RQST.POL_CD" ).append("\n"); 
		query.append("                           AND OPF.CNTR_REF_NO = CGO.CNTR_REF_NO" ).append("\n"); 
		query.append("                           AND ROWNUM = 1" ).append("\n"); 
		query.append("                       ) CELL_PSN_NO " ).append("\n"); 
		query.append("                      ,NULL AS NET_EXPLO_WGT" ).append("\n"); 
		query.append("                      ,CGO.DCGO_REF_NO" ).append("\n"); 
		query.append("                      ,CGO.EMER_CNTC_PHN_NO" ).append("\n"); 
		query.append("                      ,CGO.EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("                      ,CGO.CNTR_REF_NO" ).append("\n"); 
		query.append("                      ,CGO.N1ST_IMDG_SUBS_RSK_LBL_CD" ).append("\n"); 
		query.append("                      ,CGO.N2ND_IMDG_SUBS_RSK_LBL_CD" ).append("\n"); 
		query.append("                      ,CGO.N3RD_IMDG_SUBS_RSK_LBL_CD" ).append("\n"); 
		query.append("                      ,CGO.N4TH_IMDG_SUBS_RSK_LBL_CD" ).append("\n"); 
		query.append("                      ,CGO.EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("                      ,CGO.IN_N1ST_IMDG_PCK_DESC" ).append("\n"); 
		query.append("                      ,CGO.SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("                      ,CGO.SPCL_CGO_SEQ" ).append("\n"); 
		query.append("                      ,CGO.OUT_N1ST_IMDG_PCK_DESC" ).append("\n"); 
		query.append("                  FROM SCG_PRNR_APRO_RQST RQST" ).append("\n"); 
		query.append("                      ,SCG_PRNR_APRO_RQST_CGO CGO" ).append("\n"); 
		query.append("                      ,SCG_IMDG_UN_NO SIUN" ).append("\n"); 
		query.append("                 WHERE 1=1" ).append("\n"); 
		query.append("                   AND RQST.VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                   AND RQST.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                   AND RQST.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("#if ( ${d_type} == 'T' )" ).append("\n"); 
		query.append("                   AND RQST.POL_CD  IN  (SELECT VPS_PORT_CD" ).append("\n"); 
		query.append("                                           FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                            AND CLPT_SEQ < (     SELECT MAX(CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                   FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                                  WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                    AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                    AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                    AND VPS_PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                                )" ).append("\n"); 
		query.append("                                            AND NVL(SKD_CNG_STS_CD,'X') <> 'S'" ).append("\n"); 
		query.append("                                        )" ).append("\n"); 
		query.append("                   AND RQST.POD_CD  IN  (SELECT VPS_PORT_CD" ).append("\n"); 
		query.append("                                           FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                          WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                            AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                            AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                            AND CLPT_SEQ  > (    SELECT MIN(CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                   FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                                  WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                    AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                    AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                    AND VPS_PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                            AND  CLPT_SEQ  < (    SELECT NVL(MIN(V2.CLPT_SEQ),50)" ).append("\n"); 
		query.append("                                                                    FROM VSK_VSL_PORT_SKD V1, VSK_VSL_PORT_SKD V2" ).append("\n"); 
		query.append("                                                                   WHERE 1=1" ).append("\n"); 
		query.append("                                                                     AND  V1.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                     AND V1.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                     AND V1.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                                     AND V1.VSL_CD = V2.VSL_CD" ).append("\n"); 
		query.append("                                                                     AND V1.SKD_VOY_NO = V2.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                     AND V1.SKD_DIR_CD = V2.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                     AND NVL(V1.SKD_CNG_STS_CD,'X') = 'O'" ).append("\n"); 
		query.append("                                                                     AND NVL(V2.SKD_CNG_STS_CD,'X') = 'A'" ).append("\n"); 
		query.append("                                                                     AND V1.CLPT_SEQ < V2.CLPT_SEQ" ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                            AND NVL(SKD_CNG_STS_CD,'X') <> 'S'" ).append("\n"); 
		query.append("                                         )" ).append("\n"); 
		query.append("#elseif ( ${d_type} == 'D' )" ).append("\n"); 
		query.append("                   AND RQST.POD_CD = @[port_cd]" ).append("\n"); 
		query.append("#elseif ( ${d_type} == 'L' )" ).append("\n"); 
		query.append("                   AND RQST.POL_CD = @[port_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                   AND RQST.CRR_CD = CGO.CRR_CD" ).append("\n"); 
		query.append("                   AND RQST.BKG_REF_NO = CGO.BKG_REF_NO" ).append("\n"); 
		query.append("                   AND RQST.SPCL_CGO_RQST_SEQ = CGO.SPCL_CGO_RQST_SEQ" ).append("\n"); 
		query.append("				   AND RQST.LST_RQST_DAT_FLG = 'Y'" ).append("\n"); 
		query.append("                   AND CGO.IMDG_UN_NO    =     SIUN.IMDG_UN_NO(+)" ).append("\n"); 
		query.append("                   AND CGO.IMDG_UN_NO_SEQ = SIUN.IMDG_UN_NO_SEQ(+)" ).append("\n"); 
		query.append("                   AND CGO.CSTMS_EXPT_FLG IS NULL" ).append("\n"); 
		query.append("				   AND RQST.DG_FLG = 'Y'" ).append("\n"); 
		query.append("                   AND CGO.AUTH_STS_CD ='Y'" ).append("\n"); 
		query.append("                   AND RQST.PRNR_CGO_RQST_SEQ = CGO.PRNR_CGO_RQST_SEQ" ).append("\n"); 
		query.append("                   AND NVL(CGO.IMDG_UN_NO,'0') <> '0'" ).append("\n"); 
		query.append("                   AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')" ).append("\n"); 
		query.append("                                FROM BKG_CSTMS_EUR_DG_VSL_SKD" ).append("\n"); 
		query.append("                               WHERE EUR_DG_DECL_TP_CD = @[d_type]" ).append("\n"); 
		query.append("                                 AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                 AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                 AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                 AND PORT_CD      = @[port_cd]" ).append("\n"); 
		query.append("                              )" ).append("\n"); 
		query.append("                   AND NOT EXISTS (SELECT *" ).append("\n"); 
		query.append("                                     FROM BKG_CSTMS_EUR_DG EUDG" ).append("\n"); 
		query.append("                                    WHERE EUDG.EUR_DG_DECL_TP_CD = @[d_type]" ).append("\n"); 
		query.append("                                      AND EUDG.PORT_CD           = @[port_cd]" ).append("\n"); 
		query.append("                                      AND EUDG.VSL_CD            = RQST.VSL_CD" ).append("\n"); 
		query.append("                                      AND EUDG.SKD_VOY_NO        = RQST.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      AND EUDG.SKD_DIR_CD        = RQST.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      AND EUDG.BL_NO             = CGO.BKG_REF_NO" ).append("\n"); 
		query.append("                                      AND EUDG.SPCL_CGO_SEQ      = CGO.SPCL_CGO_SEQ" ).append("\n"); 
		query.append("                                      AND EUDG.SPCL_CNTR_SEQ     = CGO.SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("                                      AND EUDG.DCGO_REF_NO       = CGO.DCGO_REF_NO" ).append("\n"); 
		query.append("                                      AND RQST.LST_RQST_DAT_FLG   = 'Y'" ).append("\n"); 
		query.append("                                  )" ).append("\n"); 
		query.append("               ) BVD" ).append("\n"); 
		query.append("              ,(SELECT A.BAY_PLN_ID" ).append("\n"); 
		query.append("                      ,A.VSL_CD" ).append("\n"); 
		query.append("                      ,A.ETA_DT" ).append("\n"); 
		query.append("                      ,A.ETD_DT" ).append("\n"); 
		query.append("                      ,B.EUR_DG_CNTR_ID CNTR_NO" ).append("\n"); 
		query.append("                      ,LPAD(B.CELL_PSN_NO, 7,0 ) CELL_PSN_NO" ).append("\n"); 
		query.append("                      ,B.POL_CD" ).append("\n"); 
		query.append("                      ,B.POD_CD" ).append("\n"); 
		query.append("                  FROM BKG_CSTMS_EUR_DG_BAY_PLN A" ).append("\n"); 
		query.append("                      ,BKG_CSTMS_EUR_DG_BAY_DTL B" ).append("\n"); 
		query.append("                 WHERE A.BAY_PLN_ID = B.BAY_PLN_ID" ).append("\n"); 
		query.append("                   AND A.BAY_PLN_ID  = NVL(@[bay_pln_id], ' ')" ).append("\n"); 
		query.append("               ) BAY" ).append("\n"); 
		query.append("             ,(SELECT HIS.VSL_CD" ).append("\n"); 
		query.append("                     ,HIS.SKD_VOY_NO" ).append("\n"); 
		query.append("                     ,HIS.SKD_DIR_CD" ).append("\n"); 
		query.append("                     ,HIS.BL_NO" ).append("\n"); 
		query.append("                     ,HIS.CNTR_NO" ).append("\n"); 
		query.append("                     ,HIS.CELL_PSN_NO" ).append("\n"); 
		query.append("                     ,HIS.CNTR_REF_NO" ).append("\n"); 
		query.append("                     ,HIS.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                     ,HIS.IMDG_PCK_GRP_CD" ).append("\n"); 
		query.append("                     ,HIS.IMDG_CLSS_CD" ).append("\n"); 
		query.append("                     ,HIS.IMDG_UN_NO" ).append("\n"); 
		query.append("                     ,HIS.FLSH_PNT_CDO_TEMP" ).append("\n"); 
		query.append("                     ,HIS.NET_WGT" ).append("\n"); 
		query.append("                     ,HIS.GRS_WGT" ).append("\n"); 
		query.append("                     ,HIS.EMS_NO" ).append("\n"); 
		query.append("                     ,HIS.DCGO_PCK_GRP_CD1" ).append("\n"); 
		query.append("                     ,HIS.EUR_DCGO_MRN_POLUT_CD" ).append("\n"); 
		query.append("                     ,HIS.IMDG_LMT_QTY_FLG" ).append("\n"); 
		query.append("                     ,HIS.NET_EXPLO_WGT" ).append("\n"); 
		query.append("                     ,HIS.OUT_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("                     ,HIS.OUT_IMDG_PCK_CD1" ).append("\n"); 
		query.append("                     ,HIS.PRP_SHP_NM" ).append("\n"); 
		query.append("                     ,HIS.HZD_DESC" ).append("\n"); 
		query.append("                     ,HIS.EMER_CNTC_PHN_NO" ).append("\n"); 
		query.append("                     ,HIS.EMER_CNTC_PSON_NM" ).append("\n"); 
		query.append("                     ,HIS.POL_CD" ).append("\n"); 
		query.append("                     ,HIS.POD_CD" ).append("\n"); 
		query.append("                     ,HIS.IMDG_UN_NO_SEQ" ).append("\n"); 
		query.append("                     ,HIS.CGO_OPR_CD" ).append("\n"); 
		query.append("                     ,HIS.IN_IMDG_PCK_QTY1" ).append("\n"); 
		query.append("                     ,HIS.EUR_INR_PCK_DESC" ).append("\n"); 
		query.append("                     ,HIS.IN_IMDG_PCK_CD1" ).append("\n"); 
		query.append("                     ,HIS.IMDG_SUBS_RSK_LBL_CD1" ).append("\n"); 
		query.append("                     ,HIS.IMDG_SUBS_RSK_LBL_CD2" ).append("\n"); 
		query.append("                     ,HIS.IMDG_SUBS_RSK_LBL_CD3" ).append("\n"); 
		query.append("                     ,HIS.IMDG_SUBS_RSK_LBL_CD4" ).append("\n"); 
		query.append("                     ,HIS.DCGO_REF_NO" ).append("\n"); 
		query.append("                     ,HIS.CNTR_CGO_SEQ" ).append("\n"); 
		query.append("                     ,HIS.EMER_RSPN_GID_NO" ).append("\n"); 
		query.append("                     ,HIS.EUR_OUTR_PCK_DESC" ).append("\n"); 
		query.append("                     ,HIS.SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("                     ,HIS.SPCL_CGO_SEQ" ).append("\n"); 
		query.append("					 ,HIS.IMDG_COMP_GRP_CD" ).append("\n"); 
		query.append("                         FROM BKG_CSTMS_EUR_DG_HIS HIS" ).append("\n"); 
		query.append("                              ,(SELECT A.VSL_CD" ).append("\n"); 
		query.append("                              ,A.SKD_VOY_NO " ).append("\n"); 
		query.append("                              ,A.SKD_DIR_CD " ).append("\n"); 
		query.append("                              ,A.BL_NO " ).append("\n"); 
		query.append("                              ,A.CNTR_NO AS CNTR_NO " ).append("\n"); 
		query.append("                              ,MAX(A.CRE_DT) AS CRE_DT " ).append("\n"); 
		query.append("                              ,A.DCGO_REF_NO AS DCGO_REF_NO" ).append("\n"); 
		query.append("                          FROM BKG_CSTMS_EUR_DG_HIS A" ).append("\n"); 
		query.append("                              ,BKG_CSTMS_EUR_DG B" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND A.BL_NO = B.BL_NO" ).append("\n"); 
		query.append("                           AND A.CNTR_NO = B.CNTR_NO" ).append("\n"); 
		query.append("                           AND A.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                           AND A.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                           AND A.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                           AND A.CNTR_CGO_SEQ = B.CNTR_CGO_SEQ" ).append("\n"); 
		query.append("                           AND A.DCGO_REF_NO = B.DCGO_REF_NO" ).append("\n"); 
		query.append("						   #if (${d_type} == 'D' )" ).append("\n"); 
		query.append("                           AND A.POD_CD = @[port_cd]" ).append("\n"); 
		query.append("                           #elseif (${d_type} == 'L')" ).append("\n"); 
		query.append("                           AND A.POL_CD = @[port_cd]" ).append("\n"); 
		query.append("                           #end" ).append("\n"); 
		query.append("                         GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                               ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                               ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                               ,A.BL_NO" ).append("\n"); 
		query.append("                               ,A.CNTR_NO" ).append("\n"); 
		query.append("                               ,A.DCGO_REF_NO) HIS_SEQ" ).append("\n"); 
		query.append("                        WHERE 1=1" ).append("\n"); 
		query.append("                          AND 'N' = (SELECT NVL(MAX(NVL(SPCL_CGO_PRNR_CLZ_FLG, 'N')),'N')" ).append("\n"); 
		query.append("                                     FROM BKG_CSTMS_EUR_DG_VSL_SKD" ).append("\n"); 
		query.append("                                     WHERE EUR_DG_DECL_TP_CD = @[d_type]" ).append("\n"); 
		query.append("                                     AND VSL_CD        =   SUBSTR(@[vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                     AND SKD_VOY_NO    =   SUBSTR(@[vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                     AND SKD_DIR_CD    =   SUBSTR(@[vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                     AND PORT_CD      = @[port_cd])" ).append("\n"); 
		query.append("                          AND HIS.DCGO_REF_NO = HIS_SEQ.DCGO_REF_NO" ).append("\n"); 
		query.append("                          AND HIS.CRE_DT = HIS_SEQ.CRE_DT" ).append("\n"); 
		query.append("                          AND HIS.BL_NO = HIS_SEQ.BL_NO" ).append("\n"); 
		query.append("                          AND HIS.VSL_CD = HIS_SEQ.VSL_CD" ).append("\n"); 
		query.append("                          AND HIS.SKD_VOY_NO = HIS_SEQ.SKD_VOY_NO" ).append("\n"); 
		query.append("                          AND HIS.SKD_DIR_CD = HIS_SEQ.SKD_DIR_CD" ).append("\n"); 
		query.append("                          AND HIS.CNTR_NO = HIS_SEQ.CNTR_NO" ).append("\n"); 
		query.append("						  #if (${d_type} == 'D' )" ).append("\n"); 
		query.append("                          AND HIS.POD_CD = @[port_cd]" ).append("\n"); 
		query.append("                          #elseif (${d_type} == 'L')" ).append("\n"); 
		query.append("                          AND HIS.POL_CD = @[port_cd]" ).append("\n"); 
		query.append("                          #end" ).append("\n"); 
		query.append("                          AND NOT EXISTS (SELECT *" ).append("\n"); 
		query.append("                                         FROM BKG_CSTMS_EUR_DG EUDG" ).append("\n"); 
		query.append("                                         WHERE EUDG.EUR_DG_DECL_TP_CD = @[d_type]" ).append("\n"); 
		query.append("                                          AND EUDG.PORT_CD           = @[port_cd]" ).append("\n"); 
		query.append("                                          AND EUDG.VSL_CD            = HIS.VSL_CD" ).append("\n"); 
		query.append("                                          AND EUDG.SKD_VOY_NO        = HIS.SKD_VOY_NO" ).append("\n"); 
		query.append("                                          AND EUDG.SKD_DIR_CD        = HIS.SKD_DIR_CD" ).append("\n"); 
		query.append("                                          AND EUDG.BL_NO             = HIS.BL_NO" ).append("\n"); 
		query.append("                                     	  AND EUDG.CNTR_NO           = HIS.CNTR_NO" ).append("\n"); 
		query.append("                                     	  AND EUDG.SPCL_CNTR_SEQ     = HIS.SPCL_CNTR_SEQ" ).append("\n"); 
		query.append("                                          AND EUDG.SPCL_CGO_SEQ      = HIS.SPCL_CGO_SEQ)" ).append("\n"); 
		query.append("               ) HIS" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("           AND BVD.VSL_CD      = BAY.VSL_CD(+)" ).append("\n"); 
		query.append("           AND BVD.POL_CD      = BAY.POL_CD(+)" ).append("\n"); 
		query.append("           AND BVD.POD_CD      = BAY.POD_CD(+)" ).append("\n"); 
		query.append("           AND BVD.CNTR_NO     = BAY.CNTR_NO(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("           AND BVD.VSL_CD(+)      = HIS.VSL_CD" ).append("\n"); 
		query.append("           AND BVD.SKD_VOY_NO(+)  = HIS.SKD_VOY_NO" ).append("\n"); 
		query.append("           AND BVD.SKD_DIR_CD(+)  = HIS.SKD_DIR_CD" ).append("\n"); 
		query.append("           AND BVD.BL_NO(+)       = HIS.BL_NO" ).append("\n"); 
		query.append("           AND BVD.CNTR_REF_NO(+) = HIS.CNTR_REF_NO" ).append("\n"); 
		query.append("           AND BVD.DCGO_REF_NO(+) = HIS.DCGO_REF_NO" ).append("\n"); 
		query.append(")) " ).append("\n"); 
		query.append("WHERE 1=1 " ).append("\n"); 
		query.append("#if(${cargo_oper_cd} != '')" ).append("\n"); 
		query.append("AND CGO_OPR_CD = @[cargo_oper_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${pol_code} != '')" ).append("\n"); 
		query.append("AND POL_CD = @[pol_code]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${pod_code} != '')" ).append("\n"); 
		query.append("AND POD_CD = @[pod_code]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${bl_number} != '')" ).append("\n"); 
		query.append("AND BL_NO = @[bl_number]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("ORDER BY  SEQ, POL_CD, POD_CD, BL_NO, DCGO_REF_NO, CGO_OPR_CD" ).append("\n"); 

	}
}