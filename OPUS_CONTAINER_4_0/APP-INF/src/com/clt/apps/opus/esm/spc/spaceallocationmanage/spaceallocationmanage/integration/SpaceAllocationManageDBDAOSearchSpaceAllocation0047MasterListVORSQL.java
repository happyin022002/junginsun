/*=========================================================
*Copyright(c) 2011 CyberLogitec
*@FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0047MasterListVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2011.03.18
*@LastModifier : 최윤성
*@LastVersion : 1.0
* 2011.03.18 최윤성
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.esm.spc.spaceallocationmanage.spaceallocationmanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author CHOI Yun Sung
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpaceAllocationManageDBDAOSearchSpaceAllocation0047MasterListVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * SpaceAllocationManage의 데이타 모델에 해당되는 값을 불러온다.
	  * </pre>
	  */
	public SpaceAllocationManageDBDAOSearchSpaceAllocation0047MasterListVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("office",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("duration",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("subtrade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fcast",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.esm.spc.spaceallocationmanage.spaceallocationmanage.integration").append("\n"); 
		query.append("FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0047MasterListVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH PARAMS AS (" ).append("\n"); 
		query.append("    SELECT @[year]                AS COST_YR   ," ).append("\n"); 
		query.append("           @[week]                AS COST_WK   ," ).append("\n"); 
		query.append("           TO_NUMBER(@[duration]) AS DURATION  ," ).append("\n"); 
		query.append("           @[trade]               AS TRD_CD    ," ).append("\n"); 
		query.append("           @[subtrade]            AS SUB_TRD_CD," ).append("\n"); 
		query.append("           @[lane]                AS RLANE_CD  ," ).append("\n"); 
		query.append("           @[bound]               AS DIR_CD    ," ).append("\n"); 
		query.append("           o.ofc_cd               AS OFC_CD    ," ).append("\n"); 
		query.append("           l.conti_cd             AS OFC_CONTI ," ).append("\n"); 
		query.append("           @[vvd]                 AS VVD       ," ).append("\n"); 
		query.append("           @[fcast]               AS STS" ).append("\n"); 
		query.append("      FROM MDM_LOCATION     L," ).append("\n"); 
		query.append("           MDM_ORGANIZATION O" ).append("\n"); 
		query.append("     WHERE L.LOC_CD = O.LOC_CD" ).append("\n"); 
		query.append("       AND O.OFC_CD = @[office]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", WEEKS AS (" ).append("\n"); 
		query.append("    SELECT /*+ INDEX(D XPKCOA_WK_PRD)*/" ).append("\n"); 
		query.append("           D.COST_YR," ).append("\n"); 
		query.append("           D.COST_WK," ).append("\n"); 
		query.append("           P.TRD_CD," ).append("\n"); 
		query.append("           P.SUB_TRD_CD," ).append("\n"); 
		query.append("           P.RLANE_CD," ).append("\n"); 
		query.append("           P.DIR_CD," ).append("\n"); 
		query.append("           P.OFC_CD," ).append("\n"); 
		query.append("           P.OFC_CONTI," ).append("\n"); 
		query.append("           P.VVD," ).append("\n"); 
		query.append("           P.STS" ).append("\n"); 
		query.append("      FROM COA_WK_PRD D," ).append("\n"); 
		query.append("           PARAMS     P" ).append("\n"); 
		query.append("     WHERE D.COST_YR||D.COST_WK >= P.COST_YR||P.COST_WK" ).append("\n"); 
		query.append("       AND ROWNUM <= P.DURATION" ).append("\n"); 
		query.append("       AND P.VVD IS NULL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", REP_VVDS AS (" ).append("\n"); 
		query.append("    SELECT V.TRD_CD     AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           V.SUB_TRD_CD AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD," ).append("\n"); 
		query.append("           V.DIR_CD  ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON," ).append("\n"); 
		query.append("           V.COST_WK   ," ).append("\n"); 
		query.append("           V.VSL_CD    ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO," ).append("\n"); 
		query.append("           V.DIR_CD AS SKD_DIR_CD," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           P.OFC_CD              ," ).append("\n"); 
		query.append("           P.OFC_CONTI           ," ).append("\n"); 
		query.append("           P.STS" ).append("\n"); 
		query.append("      FROM COA_MON_VVD V," ).append("\n"); 
		query.append("           WEEKS       P" ).append("\n"); 
		query.append("     WHERE V.TRD_CD     = SAQ_GET_REP_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.SUB_TRD_CD = SAQ_GET_REP_SUB_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK = P.COST_YR||P.COST_WK" ).append("\n"); 
		query.append("       AND V.TRD_CD     LIKE P.TRD_CD     ||'%'" ).append("\n"); 
		query.append("       AND V.SUB_TRD_CD LIKE P.SUB_TRD_CD ||'%'" ).append("\n"); 
		query.append("       AND V.RLANE_CD   LIKE P.RLANE_CD   ||'%'" ).append("\n"); 
		query.append("       AND V.DIR_CD     LIKE P.DIR_CD     ||'%'" ).append("\n"); 
		query.append("       AND (    V.DELT_FLG IS NULL" ).append("\n"); 
		query.append("             OR V.DELT_FLG = 'N'" ).append("\n"); 
		query.append("             OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                           FROM COA_MON_VVD N" ).append("\n"); 
		query.append("                          WHERE N.SLAN_CD    = SUBSTR(V.RLANE_CD, 1, 3)" ).append("\n"); 
		query.append("                            AND N.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                            AND N.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND N.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("                            AND N.DELT_FLG   = 'N' ))" ).append("\n"); 
		query.append("       AND P.VVD IS NULL" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT V.TRD_CD     AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           V.SUB_TRD_CD AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD," ).append("\n"); 
		query.append("           V.DIR_CD  ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON," ).append("\n"); 
		query.append("           V.COST_WK   ," ).append("\n"); 
		query.append("           V.VSL_CD    ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO," ).append("\n"); 
		query.append("           V.DIR_CD AS SKD_DIR_CD," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           P.OFC_CD              ," ).append("\n"); 
		query.append("           P.OFC_CONTI           ," ).append("\n"); 
		query.append("           P.STS" ).append("\n"); 
		query.append("      FROM COA_MON_VVD V," ).append("\n"); 
		query.append("           PARAMS      P" ).append("\n"); 
		query.append("     WHERE V.TRD_CD     = SAQ_GET_REP_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.SUB_TRD_CD = SAQ_GET_REP_SUB_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.VSL_CD     = SUBSTR(P.VVD, 1, 4)" ).append("\n"); 
		query.append("       AND V.SKD_VOY_NO = SUBSTR(P.VVD, 5, 4)" ).append("\n"); 
		query.append("       AND V.DIR_CD     = SUBSTR(P.VVD, 9)" ).append("\n"); 
		query.append("       AND (    V.DELT_FLG IS NULL" ).append("\n"); 
		query.append("             OR V.DELT_FLG = 'N'" ).append("\n"); 
		query.append("             OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                           FROM COA_MON_VVD N" ).append("\n"); 
		query.append("                          WHERE N.SLAN_CD = SUBSTR(V.RLANE_CD, 1, 3)" ).append("\n"); 
		query.append("                            AND N.VSL_CD = V.VSL_CD" ).append("\n"); 
		query.append("                            AND N.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND N.DIR_CD = V.DIR_CD" ).append("\n"); 
		query.append("                            AND N.DELT_FLG = 'N' ))" ).append("\n"); 
		query.append("       AND P.VVD IS NOT NULL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VSL_PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT V.REP_TRD_CD   ," ).append("\n"); 
		query.append("           V.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD      ," ).append("\n"); 
		query.append("           V.DIR_CD        ," ).append("\n"); 
		query.append("           V.COST_YR       ," ).append("\n"); 
		query.append("           V.COST_MON      ," ).append("\n"); 
		query.append("           V.COST_WK       ," ).append("\n"); 
		query.append("           V.VSL_CD        ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO    ," ).append("\n"); 
		query.append("           V.SKD_DIR_CD    ," ).append("\n"); 
		query.append("           NVL(VPS.YD_CD, VPS.VPS_PORT_CD) AS PORT_CD," ).append("\n"); 
		query.append("           VPS.CLPT_SEQ         AS PORT_SEQ," ).append("\n"); 
		query.append("           VPS.TURN_PORT_IND_CD AS PORT_IND," ).append("\n"); 
		query.append("           L.CONTI_CD           AS CONTI_CD, " ).append("\n"); 
		query.append("           DECODE(SIGN(VPS.VPS_ETD_DT - GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS.VPS_PORT_CD )), -1, 'Y', 'N') AS PORT_PAST," ).append("\n"); 
		query.append("           VPS.VPS_ETA_DT AS ETA_DT," ).append("\n"); 
		query.append("           VPS.VPS_ETD_DT AS ETD_DT," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           V.OFC_CD              ," ).append("\n"); 
		query.append("           V.OFC_CONTI           ," ).append("\n"); 
		query.append("           V.STS                 ," ).append("\n"); 
		query.append("           NVL(VPS.SKD_CNG_STS_CD, ' ') AS CNG_STS_CD," ).append("\n"); 
		query.append("           MIN(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MIN_SEQ," ).append("\n"); 
		query.append("           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MAX_SEQ," ).append("\n"); 
		query.append("           COUNT(*) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS PORT_CNT" ).append("\n"); 
		query.append("      FROM MDM_LOCATION     L  ," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD VPS," ).append("\n"); 
		query.append("           REP_VVDS         V" ).append("\n"); 
		query.append("     WHERE L.LOC_CD       = VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("       AND VPS.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_POL_POD AS (" ).append("\n"); 
		query.append("    SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POL_SEQ             ," ).append("\n"); 
		query.append("           POL_CONTI           ," ).append("\n"); 
		query.append("           POL_PAST            ," ).append("\n"); 
		query.append("           POL_ETA_DT          ," ).append("\n"); 
		query.append("           POL_ETD_DT          ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POD_SEQ             ," ).append("\n"); 
		query.append("           POD_CONTI           ," ).append("\n"); 
		query.append("           POD_PAST            ," ).append("\n"); 
		query.append("           POD_ETA_DT          ," ).append("\n"); 
		query.append("           POD_ETD_DT          ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           PAST                ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           STS                 ," ).append("\n"); 
		query.append("           LD_PORT             ," ).append("\n"); 
		query.append("           PL_PORT_CNT         ," ).append("\n"); 
		query.append("           PD_PORT_CNT         ," ).append("\n"); 
		query.append("           PL_PD_PORT_CNT" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("             SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("                    REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                    RLANE_CD            ," ).append("\n"); 
		query.append("                    DIR_CD              ," ).append("\n"); 
		query.append("                    TRD_CD              ," ).append("\n"); 
		query.append("                    SUB_TRD_CD          ," ).append("\n"); 
		query.append("                    COST_YR             ," ).append("\n"); 
		query.append("                    COST_MON            ," ).append("\n"); 
		query.append("                    COST_WK             ," ).append("\n"); 
		query.append("                    VSL_CD              ," ).append("\n"); 
		query.append("                    SKD_VOY_NO          ," ).append("\n"); 
		query.append("                    SKD_DIR_CD          ," ).append("\n"); 
		query.append("                    POL_CD              ," ).append("\n"); 
		query.append("                    POL_SEQ             ," ).append("\n"); 
		query.append("                    POL_CONTI           ," ).append("\n"); 
		query.append("                    POL_PAST            ," ).append("\n"); 
		query.append("                    POL_ETA_DT          ," ).append("\n"); 
		query.append("                    POL_ETD_DT          ," ).append("\n"); 
		query.append("                    POD_CD              ," ).append("\n"); 
		query.append("                    POD_SEQ             ," ).append("\n"); 
		query.append("                    POD_CONTI           ," ).append("\n"); 
		query.append("                    POD_PAST            ," ).append("\n"); 
		query.append("                    POD_ETA_DT          ," ).append("\n"); 
		query.append("                    POD_ETD_DT          ," ).append("\n"); 
		query.append("                    IOC_CD              ," ).append("\n"); 
		query.append("                    PAST                ," ).append("\n"); 
		query.append("                    LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                    LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                    OFC_CD              ," ).append("\n"); 
		query.append("                    OFC_CONTI           ," ).append("\n"); 
		query.append("                    STS                 ," ).append("\n"); 
		query.append("                    LD_PORT             ," ).append("\n"); 
		query.append("                    PL_PORT_CNT         ," ).append("\n"); 
		query.append("                    PD_PORT_CNT         ," ).append("\n"); 
		query.append("                    ROW_NUMBER() OVER (PARTITION BY RLANE_CD, TRD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, POD_SEQ, PL_PORT_CNT, PD_PORT_CNT, POL_CD" ).append("\n"); 
		query.append("                                           ORDER BY RLANE_CD, TRD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, PL_PORT_CNT, PD_PORT_CNT, POL_CD) AS PL_PD_PORT_CNT" ).append("\n"); 
		query.append("               FROM (" ).append("\n"); 
		query.append("                       SELECT PL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                              PL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                              PL.RLANE_CD      ," ).append("\n"); 
		query.append("                              PL.DIR_CD        ," ).append("\n"); 
		query.append("                              DRL.TRD_CD       ," ).append("\n"); 
		query.append("                              DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                              PL.COST_YR       ," ).append("\n"); 
		query.append("                              PL.COST_MON      ," ).append("\n"); 
		query.append("                              PL.COST_WK       ," ).append("\n"); 
		query.append("                              PL.VSL_CD        ," ).append("\n"); 
		query.append("                              PL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                              PL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                              PL.PORT_CD        AS POL_CD    ," ).append("\n"); 
		query.append("                              MAX(PL.PORT_SEQ)  AS POL_SEQ   ," ).append("\n"); 
		query.append("                              PL.CONTI_CD       AS POL_CONTI ," ).append("\n"); 
		query.append("                              MIN(PL.PORT_PAST) AS POL_PAST  ," ).append("\n"); 
		query.append("                              PL.ETA_DT         AS POL_ETA_DT," ).append("\n"); 
		query.append("                              PL.ETD_DT         AS POL_ETD_DT," ).append("\n"); 
		query.append("                              PD.PORT_CD        AS POD_CD    ," ).append("\n"); 
		query.append("                              (CASE" ).append("\n"); 
		query.append("                                    WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ)" ).append("\n"); 
		query.append("                                                                            ELSE CASE" ).append("\n"); 
		query.append("                                                                                      WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) THEN MAX(PD.MAX_SEQ)" ).append("\n"); 
		query.append("                                                                                  END" ).append("\n"); 
		query.append("                                END" ).append("\n"); 
		query.append("                              ) AS POD_SEQ," ).append("\n"); 
		query.append("                              PD.CONTI_CD       AS POD_CONTI ," ).append("\n"); 
		query.append("                              MIN(PD.PORT_PAST) AS POD_PAST  ," ).append("\n"); 
		query.append("                              PD.ETA_DT         AS POD_ETA_DT," ).append("\n"); 
		query.append("                              PD.ETD_DT         AS POD_ETD_DT," ).append("\n"); 
		query.append("                              DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')            AS IOC_CD," ).append("\n"); 
		query.append("                              DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y') AS PAST  ," ).append("\n"); 
		query.append("                              PL.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                              PL.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                              PL.OFC_CD              ," ).append("\n"); 
		query.append("                              PL.OFC_CONTI           ," ).append("\n"); 
		query.append("                              PL.STS                 ," ).append("\n"); 
		query.append("                              (" ).append("\n"); 
		query.append("                                SUBSTR((SELECT MAX(LTRIM(TO_CHAR(S1.PORT_SEQ,'FM000'))|| S1.PORT_CD)" ).append("\n"); 
		query.append("                                          FROM VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                                         WHERE S1.CNG_STS_CD <> 'S'),4)" ).append("\n"); 
		query.append("                              ) AS LD_PORT," ).append("\n"); 
		query.append("                   PL.PORT_CNT AS PL_PORT_CNT," ).append("\n"); 
		query.append("                              PD.PORT_CNT AS PD_PORT_CNT" ).append("\n"); 
		query.append("                         FROM MDM_DTL_REV_LANE DRL," ).append("\n"); 
		query.append("                              VSL_PORT_SKD     PD ," ).append("\n"); 
		query.append("                              VSL_PORT_SKD     PL" ).append("\n"); 
		query.append("                        WHERE DRL.RLANE_CD        = PL.RLANE_CD" ).append("\n"); 
		query.append("                          AND DRL.VSL_SLAN_DIR_CD = PL.DIR_CD" ).append("\n"); 
		query.append("                          AND DRL.FM_CONTI_CD     = PL.CONTI_CD" ).append("\n"); 
		query.append("                          AND DRL.TO_CONTI_CD     = PD.CONTI_CD" ).append("\n"); 
		query.append("                          AND PD.REP_TRD_CD       = PL.REP_TRD_CD" ).append("\n"); 
		query.append("                          AND PD.REP_SUB_TRD_CD   = PL.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                          AND PD.RLANE_CD         = PL.RLANE_CD" ).append("\n"); 
		query.append("                          AND PD.VSL_CD           = PL.VSL_CD" ).append("\n"); 
		query.append("                          AND PD.SKD_VOY_NO       = PL.SKD_VOY_NO" ).append("\n"); 
		query.append("                          AND PD.SKD_DIR_CD       = PL.SKD_DIR_CD" ).append("\n"); 
		query.append("                          AND PD.PORT_CD         <> PL.PORT_CD" ).append("\n"); 
		query.append("                          AND PD.PORT_SEQ         > PL.PORT_SEQ" ).append("\n"); 
		query.append("                          AND (    PL.PORT_SEQ = PL.MAX_SEQ   -- 단독 CALLING 또는 DOUBLE CALLING 인데 마지막 PORT 경우는 모두" ).append("\n"); 
		query.append("                                OR PD.PORT_SEQ < PL.MAX_SEQ ) -- DOUBLE CALLING PORT중 POD 가 LAST DOUBLE CALLING PORT 보다 앞인 경우만 FILTERING" ).append("\n"); 
		query.append("                     GROUP BY PL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                              PL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                              PL.RLANE_CD      ," ).append("\n"); 
		query.append("                              PL.DIR_CD        ," ).append("\n"); 
		query.append("                              DRL.TRD_CD       ," ).append("\n"); 
		query.append("                              DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                              PL.COST_YR       ," ).append("\n"); 
		query.append("                              PL.COST_MON      ," ).append("\n"); 
		query.append("                              PL.COST_WK       ," ).append("\n"); 
		query.append("                              PL.VSL_CD        ," ).append("\n"); 
		query.append("                              PL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                              PL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                              PL.PORT_CD       ," ).append("\n"); 
		query.append("                              PL.CONTI_CD      ," ).append("\n"); 
		query.append("                              PD.PORT_CD       ," ).append("\n"); 
		query.append("                              PD.CONTI_CD      ," ).append("\n"); 
		query.append("                              PL.ETA_DT        ," ).append("\n"); 
		query.append("                              PL.ETD_DT        ," ).append("\n"); 
		query.append("                              PD.ETA_DT        ," ).append("\n"); 
		query.append("                              PD.ETD_DT        ," ).append("\n"); 
		query.append("                              DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')," ).append("\n"); 
		query.append("                              DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y')," ).append("\n"); 
		query.append("                              PL.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                              PL.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                              PL.OFC_CD              ," ).append("\n"); 
		query.append("                              PL.OFC_CONTI           ," ).append("\n"); 
		query.append("                              PL.STS                 ," ).append("\n"); 
		query.append("                              PL.PORT_CNT            ," ).append("\n"); 
		query.append("                              PD.PORT_CNT" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("           ) A" ).append("\n"); 
		query.append("     WHERE A.PL_PD_PORT_CNT = '1'" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVDS AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT" ).append("\n"); 
		query.append("           REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           STS" ).append("\n"); 
		query.append("      FROM VVD_POL_POD VPP" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA AS (" ).append("\n"); 
		query.append("    SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POL_YD_CD           ," ).append("\n"); 
		query.append("           POD_YD_CD           ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           TS_FLG              ," ).append("\n"); 
		query.append("           PAST                ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY," ).append("\n"); 
		query.append("           TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_TTL_WGT," ).append("\n"); 
		query.append("           OFC_CD" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT VPP.REP_TRD_CD          ," ).append("\n"); 
		query.append("                     VPP.REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                     VPP.RLANE_CD            ," ).append("\n"); 
		query.append("                     VPP.DIR_CD              ," ).append("\n"); 
		query.append("                     VPP.COST_YR             ," ).append("\n"); 
		query.append("                     VPP.COST_MON            ," ).append("\n"); 
		query.append("                     VPP.COST_WK             ," ).append("\n"); 
		query.append("                     VPP.VSL_CD              ," ).append("\n"); 
		query.append("                     VPP.SKD_VOY_NO          ," ).append("\n"); 
		query.append("                     VPP.SKD_DIR_CD          ," ).append("\n"); 
		query.append("                     VPP.IOC_CD              ," ).append("\n"); 
		query.append("                     DECODE(BV.VSL_PRE_PST_CD, 'T', 'N', 'Y') AS TS_FLG," ).append("\n"); 
		query.append("                     VPP.PAST                ," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                        SELECT    TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                               || TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY *( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                                                      FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                                                     WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                          FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                         WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("                           AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                     ) AS VAL," ).append("\n"); 
		query.append("                     BV.BKG_NO   ," ).append("\n"); 
		query.append("                     BV.POL_CD   ," ).append("\n"); 
		query.append("                     BV.POD_CD   ," ).append("\n"); 
		query.append("                     BV.POL_YD_CD," ).append("\n"); 
		query.append("                     BV.POD_YD_CD," ).append("\n"); 
		query.append("                     O.OFC_CD" ).append("\n"); 
		query.append("                FROM SPC_OFC_LVL O  ," ).append("\n"); 
		query.append("                     BKG_BOOKING B  ," ).append("\n"); 
		query.append("                     BKG_VVD     BV ," ).append("\n"); 
		query.append("                     VVD_POL_POD VPP," ).append("\n"); 
		query.append("                     BKG_BL_DOC  D" ).append("\n"); 
		query.append("               WHERE O.OFC_TP_CD     IN ('BB', 'BA', 'BS')" ).append("\n"); 
		query.append("                 AND O.OFC_CD         = B.OB_SLS_OFC_CD" ).append("\n"); 
		query.append("                 AND VPP.COST_YR||VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                 AND B.BKG_STS_CD    IN ('W', 'F')" ).append("\n"); 
		query.append("                 AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("                 AND B.BKG_NO         = BV.BKG_NO" ).append("\n"); 
		query.append("                 AND BV.VSL_CD        = VPP.VSL_CD" ).append("\n"); 
		query.append("                 AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND BV.POL_CD        = SUBSTR(VPP.POL_CD, 1, 5)" ).append("\n"); 
		query.append("                 AND BV.POD_CD        = SUBSTR(VPP.POD_CD, 1, 5)" ).append("\n"); 
		query.append("                 AND VPP.POL_CONTI    = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                 AND B.BKG_NO         = D.BKG_NO" ).append("\n"); 
		query.append("               )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("  SELECT Z.REP_TRD_CD     AS TRD_CD    ," ).append("\n"); 
		query.append("         Z.REP_SUB_TRD_CD AS SUB_TRD_CD," ).append("\n"); 
		query.append("         Z.RLANE_CD  ," ).append("\n"); 
		query.append("         Z.DIR_CD    ," ).append("\n"); 
		query.append("         Z.COST_YR   ," ).append("\n"); 
		query.append("         Z.COST_MON  ," ).append("\n"); 
		query.append("         Z.COST_WK   ," ).append("\n"); 
		query.append("         Z.VSL_CD    ," ).append("\n"); 
		query.append("         Z.SKD_VOY_NO," ).append("\n"); 
		query.append("         Z.SKD_DIR_CD," ).append("\n"); 
		query.append("         Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('VOL'    , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS BSA_VOL," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('WGT'    , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS BSA_WGT," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('VOL_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_VOL," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('WGT_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_WGT," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('D5_LOD' , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_HC ," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('D7_LOD' , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_45 ," ).append("\n"); 
		query.append("         SPC_GET_WK_VVD_BSA_FNC('RF_LOD' , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_RF ," ).append("\n"); 
		query.append("         TO_NUMBER(SUBSTR(FD,  1, 12)) AS FD_VOL," ).append("\n"); 
		query.append("         TO_NUMBER(SUBSTR(FD, 13, 12)) AS FD_WGT," ).append("\n"); 
		query.append("         QTA_OCN               ," ).append("\n"); 
		query.append("         QTA_IPC               ," ).append("\n"); 
		query.append("         FC_OCN_VOL            ," ).append("\n"); 
		query.append("         FC_OCN_WGT            ," ).append("\n"); 
		query.append("         FC_IPC_VOL            ," ).append("\n"); 
		query.append("         FC_IPC_WGT            ," ).append("\n"); 
		query.append("         EP_VOL                ," ).append("\n"); 
		query.append("         AL_OCN_VOL            ," ).append("\n"); 
		query.append("         AL_OCN_WGT            ," ).append("\n"); 
		query.append("         AL_IPC_VOL            ," ).append("\n"); 
		query.append("         AL_IPC_WGT            ," ).append("\n"); 
		query.append("         BKG_OCN_VOL           ," ).append("\n"); 
		query.append("         BKG_OCN_WGT           ," ).append("\n"); 
		query.append("         BKG_IPC_VOL           ," ).append("\n"); 
		query.append("         BKG_IPC_WGT           ," ).append("\n"); 
		query.append("         Z.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("         Z.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("         NVL(C.CTRL_LVL_CD     , 'L') AS CTRL_PORT_FLG   ," ).append("\n"); 
		query.append("         NVL(C.CTRL_40FT_HC_FLG, 'N') AS CTRL_40FT_HC_FLG," ).append("\n"); 
		query.append("         NVL(C.CTRL_45FT_HC_FLG, 'N') AS CTRL_45FT_HC_FLG," ).append("\n"); 
		query.append("         NVL(C.CTRL_53FT_FLG   , 'N') AS CTRL_53FT_FLG   ," ).append("\n"); 
		query.append("         NVL(C.CTRL_RF_FLG     , 'N') AS CTRL_RF_FLG     ," ).append("\n"); 
		query.append("         NVL(C.CTRL_WGT_FLG    , 'N') AS CTRL_WGT_FLG    ," ).append("\n"); 
		query.append("         NVL(C.CTRL_SPC_FLG    , 'N') AS CTRL_SPC_FLG    ," ).append("\n"); 
		query.append("         DECODE(C.RLANE_CD, NULL, 'I', 'R') AS IBFLAG," ).append("\n"); 
		query.append("         SG.SPC_GNTE_QTY AS MTY_GNTE" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("            SELECT REP_TRD_CD    ," ).append("\n"); 
		query.append("                   REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                   RLANE_CD      ," ).append("\n"); 
		query.append("                   DIR_CD        ," ).append("\n"); 
		query.append("                   COST_YR       ," ).append("\n"); 
		query.append("                   COST_MON      ," ).append("\n"); 
		query.append("                   COST_WK       ," ).append("\n"); 
		query.append("                   VSL_CD        ," ).append("\n"); 
		query.append("                   SKD_VOY_NO    ," ).append("\n"); 
		query.append("                   SKD_DIR_CD    ," ).append("\n"); 
		query.append("                   (" ).append("\n"); 
		query.append("                        TO_CHAR(SPC_GET_WK_VVD_BSA_FNC('VOL', V.REP_TRD_CD, V.RLANE_CD, V.SKD_DIR_CD, V.COST_YR||V.COST_WK, V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD), 'FM00000000.000')" ).append("\n"); 
		query.append("                     || TO_CHAR(SPC_GET_WK_VVD_BSA_FNC('WGT', V.REP_TRD_CD, V.RLANE_CD, V.SKD_DIR_CD, V.COST_YR||V.COST_WK, V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD), 'FM00000000.000')" ).append("\n"); 
		query.append("                   ) AS FD," ).append("\n"); 
		query.append("                   SUM(QTA_OCN)     AS QTA_OCN    ," ).append("\n"); 
		query.append("                   SUM(QTA_IPC)     AS QTA_IPC    ," ).append("\n"); 
		query.append("                   SUM(FC_OCN_VOL)  AS FC_OCN_VOL ," ).append("\n"); 
		query.append("                   SUM(FC_OCN_WGT)  AS FC_OCN_WGT ," ).append("\n"); 
		query.append("                   SUM(FC_IPC_VOL)  AS FC_IPC_VOL ," ).append("\n"); 
		query.append("                   SUM(FC_IPC_WGT)  AS FC_IPC_WGT ," ).append("\n"); 
		query.append("                   SUM(EP_VOL)      AS EP_VOL     ," ).append("\n"); 
		query.append("                   SUM(AL_OCN_VOL)  AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                   SUM(AL_OCN_WGT)  AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                   SUM(AL_IPC_VOL)  AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                   SUM(AL_IPC_WGT)  AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                   SUM(BKG_OCN_VOL) AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                   SUM(BKG_OCN_WGT) AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                   SUM(BKG_IPC_VOL) AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                   SUM(BKG_IPC_WGT) AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                   LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                   LST_LODG_PORT_CD" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      -- LOAD QUOTA (POL)" ).append("\n"); 
		query.append("                      SELECT 2 AS FLG," ).append("\n"); 
		query.append("                             VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                             VPP.DIR_CD        ," ).append("\n"); 
		query.append("                             VPP.COST_YR       ," ).append("\n"); 
		query.append("                             VPP.COST_MON      ," ).append("\n"); 
		query.append("                             VPP.COST_WK       ," ).append("\n"); 
		query.append("                             VPP.VSL_CD        ," ).append("\n"); 
		query.append("                             VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                             VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                             NULL AS FD_VOL    ," ).append("\n"); 
		query.append("                             NULL AS FD_WGT    ," ).append("\n"); 
		query.append("                             DECODE(VPP.IOC_CD, 'O', MQ.LOD_QTY) AS QTA_OCN," ).append("\n"); 
		query.append("                             DECODE(VPP.IOC_CD, 'I', MQ.LOD_QTY) AS QTA_IPC," ).append("\n"); 
		query.append("                             NULL AS FC_OCN_VOL ," ).append("\n"); 
		query.append("                             NULL AS FC_OCN_WGT ," ).append("\n"); 
		query.append("                             NULL AS FC_IPC_VOL ," ).append("\n"); 
		query.append("                             NULL AS FC_IPC_WGT ," ).append("\n"); 
		query.append("                             NULL AS EP_VOL     ," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                             VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                             VPP.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                        FROM SAQ_MON_CFM_QTA MQ," ).append("\n"); 
		query.append("                             SAQ_MON_QTA_RLSE MQR," ).append("\n"); 
		query.append("                             VVD_POL_POD VPP" ).append("\n"); 
		query.append("                       WHERE ( SELECT MQV.POL_CD" ).append("\n"); 
		query.append("                                 FROM SAQ_MON_CFM_QTA MQV" ).append("\n"); 
		query.append("                                WHERE MQV.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                                  AND MQV.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                                  AND MQV.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                                  AND MQV.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                                  AND MQV.TRD_CD           = VPP.TRD_CD" ).append("\n"); 
		query.append("                                  AND MQV.DIR_CD           = VPP.DIR_CD" ).append("\n"); 
		query.append("                                  AND ROWNUM = 1 ) <> '00000'" ).append("\n"); 
		query.append("                         AND MQR.BSE_YR          = VPP.COST_YR" ).append("\n"); 
		query.append("                         AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(VPP.COST_MON) / 3)||'Q'" ).append("\n"); 
		query.append("                         AND MQR.QTA_RLSE_STS_CD = 'R'" ).append("\n"); 
		query.append("                         AND MQ.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                         AND MQ.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                         AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                         AND MQ.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                         AND MQ.TRD_CD           = VPP.TRD_CD" ).append("\n"); 
		query.append("                         AND MQ.RLANE_CD         = VPP.RLANE_CD" ).append("\n"); 
		query.append("                         AND MQ.DIR_CD           = VPP.DIR_CD" ).append("\n"); 
		query.append("                         AND MQ.VSL_CD           = VPP.VSL_CD" ).append("\n"); 
		query.append("                         AND MQ.SKD_VOY_NO       = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND MQ.SKD_DIR_CD       = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND MQ.POL_CD           = SUBSTR(VPP.POL_CD, 1, 5)" ).append("\n"); 
		query.append("                         AND MQ.POD_CD           = SUBSTR(VPP.POD_CD, 1, 5)" ).append("\n"); 
		query.append("                         AND VPP.POL_CONTI       = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- LOAD QUOTA (OFFICE)" ).append("\n"); 
		query.append("                      SELECT 3 AS FLG," ).append("\n"); 
		query.append("                             VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                             VPP.DIR_CD        ," ).append("\n"); 
		query.append("                             VPP.COST_YR       ," ).append("\n"); 
		query.append("                             VPP.COST_MON      ," ).append("\n"); 
		query.append("                             VPP.COST_WK       ," ).append("\n"); 
		query.append("                             VPP.VSL_CD        ," ).append("\n"); 
		query.append("                             VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                             VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                             NULL AS FD_VOL    ," ).append("\n"); 
		query.append("                             NULL AS FD_WGT    ," ).append("\n"); 
		query.append("                             DECODE(VPP.IOC_CD, 'O', MQ.LOD_QTY) AS QTA_OCN," ).append("\n"); 
		query.append("                             DECODE(VPP.IOC_CD, 'I', MQ.LOD_QTY) AS QTA_IPC," ).append("\n"); 
		query.append("                             NULL AS FC_OCN_VOL ," ).append("\n"); 
		query.append("                             NULL AS FC_OCN_WGT ," ).append("\n"); 
		query.append("                             NULL AS FC_IPC_VOL ," ).append("\n"); 
		query.append("                             NULL AS FC_IPC_WGT ," ).append("\n"); 
		query.append("                             NULL AS EP_VOL     ," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                             VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                             VPP.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                        FROM SAQ_MON_CFM_QTA  MQ ," ).append("\n"); 
		query.append("                             SAQ_MON_QTA_RLSE MQR," ).append("\n"); 
		query.append("                             VVDS             VPP" ).append("\n"); 
		query.append("                       WHERE ( SELECT MQV.POL_CD" ).append("\n"); 
		query.append("                                 FROM SAQ_MON_CFM_QTA MQV" ).append("\n"); 
		query.append("                                WHERE MQV.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                                  AND MQV.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                                  AND MQV.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                                  AND MQV.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                                  AND MQV.TRD_CD           = VPP.TRD_CD" ).append("\n"); 
		query.append("                                  AND MQV.DIR_CD           = VPP.DIR_CD" ).append("\n"); 
		query.append("                                  AND ROWNUM = 1 ) = '00000'" ).append("\n"); 
		query.append("                         AND MQR.BSE_YR          = VPP.COST_YR" ).append("\n"); 
		query.append("                         AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(VPP.COST_MON)/3)||'Q'" ).append("\n"); 
		query.append("                         AND MQR.QTA_RLSE_STS_CD = 'R'" ).append("\n"); 
		query.append("                         AND MQ.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                         AND MQ.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                         AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                         AND MQ.QTA_TGT_CD       = 'T'" ).append("\n"); 
		query.append("                         AND MQ.TRD_CD           = VPP.TRD_CD" ).append("\n"); 
		query.append("                         AND MQ.RLANE_CD         = VPP.RLANE_CD" ).append("\n"); 
		query.append("                         AND MQ.DIR_CD           = VPP.DIR_CD" ).append("\n"); 
		query.append("                         AND MQ.VSL_CD           = VPP.VSL_CD" ).append("\n"); 
		query.append("                         AND MQ.SKD_VOY_NO       = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND MQ.SKD_DIR_CD       = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND MQ.RHQ_CD           = VPP.OFC_CD" ).append("\n"); 
		query.append("                         AND MQ.LOD_QTY          > 0" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- FORECAST" ).append("\n"); 
		query.append("                      SELECT 4 AS FLG," ).append("\n"); 
		query.append("                             VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                             VPP.DIR_CD        ," ).append("\n"); 
		query.append("                             VPP.COST_YR       ," ).append("\n"); 
		query.append("                             VPP.COST_MON      ," ).append("\n"); 
		query.append("                             VPP.COST_WK       ," ).append("\n"); 
		query.append("                             VPP.VSL_CD        ," ).append("\n"); 
		query.append("                             VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                             VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                             NULL AS FD_VOL    ," ).append("\n"); 
		query.append("                             NULL AS FD_WGT    ," ).append("\n"); 
		query.append("                             NULL AS QTA_OCN   ," ).append("\n"); 
		query.append("                             NULL AS QTA_IPC   ," ).append("\n"); 
		query.append("                             DECODE(F.IOC_TS_CD, 'O', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_OCN_VOL," ).append("\n"); 
		query.append("                             DECODE(F.IOC_TS_CD, 'O', F.CFM_TTL_WGT) AS FC_OCN_WGT," ).append("\n"); 
		query.append("                             DECODE(F.IOC_TS_CD, 'I', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_IPC_VOL," ).append("\n"); 
		query.append("                             DECODE(F.IOC_TS_CD, 'I', F.CFM_TTL_WGT) AS FC_IPC_WGT," ).append("\n"); 
		query.append("                             NULL AS EP_VOL     ," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                             VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                             VPP.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                        FROM SPC_DLY_FCAST_CUST F  ," ).append("\n"); 
		query.append("                             VVD_POL_POD        VPP" ).append("\n"); 
		query.append("                       WHERE F.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                         AND F.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                         AND F.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                         AND F.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND F.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(F.POL_YD_CD, 1, LENGTH(VPP.POL_CD)) = VPP.POL_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(F.POD_YD_CD, 1, LENGTH(VPP.POD_CD)) = VPP.POD_CD" ).append("\n"); 
		query.append("                         AND VPP.POL_CONTI = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                         AND VPP.PAST      = 'N'" ).append("\n"); 
		query.append("                         AND F.IOC_TS_CD  IN ('O', 'I')" ).append("\n"); 
		query.append("                         AND NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) + NVL(F.CFM_53FT_QTY, 0) + NVL(F.CFM_TTL_WGT, 0) > 0" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- EMPTY PLAN" ).append("\n"); 
		query.append("                      SELECT 5 AS FLG, " ).append("\n"); 
		query.append("                             VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                             VPP.DIR_CD        ," ).append("\n"); 
		query.append("                             VPP.COST_YR       ," ).append("\n"); 
		query.append("                             VPP.COST_MON      ," ).append("\n"); 
		query.append("                             VPP.COST_WK       ," ).append("\n"); 
		query.append("                             VPP.VSL_CD        ," ).append("\n"); 
		query.append("                             VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                             VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                             NULL AS FD_VOL    ," ).append("\n"); 
		query.append("                             NULL AS FD_WGT    ," ).append("\n"); 
		query.append("                             NULL AS QTA_OCN   ," ).append("\n"); 
		query.append("                             NULL AS QTA_IPC   ," ).append("\n"); 
		query.append("                             NULL AS FC_OCN_VOL," ).append("\n"); 
		query.append("                             NULL AS FC_OCN_WGT," ).append("\n"); 
		query.append("                             NULL AS FC_IPC_VOL," ).append("\n"); 
		query.append("                             NULL AS FC_IPC_WGT," ).append("\n"); 
		query.append("                             (" ).append("\n"); 
		query.append("                               SELECT SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY)" ).append("\n"); 
		query.append("                                 FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                WHERE B.BKG_NO = Q.BKG_NO" ).append("\n"); 
		query.append("                             ) AS EP_VOL, " ).append("\n"); 
		query.append("                             NULL AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                             VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                             VPP.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                        FROM BKG_BOOKING B  ," ).append("\n"); 
		query.append("                             BKG_VVD     BV ," ).append("\n"); 
		query.append("                             VVD_POL_POD VPP" ).append("\n"); 
		query.append("                       WHERE B.BKG_STS_CD   IN ('W', 'F')" ).append("\n"); 
		query.append("                         AND B.BKG_CGO_TP_CD = 'P'" ).append("\n"); 
		query.append("                         AND B.BKG_NO        = BV.BKG_NO" ).append("\n"); 
		query.append("                         AND BV.VSL_CD       = VPP.VSL_CD" ).append("\n"); 
		query.append("                         AND BV.SKD_VOY_NO   = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND BV.SKD_DIR_CD   = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND BV.POL_CD       = VPP.POL_CD" ).append("\n"); 
		query.append("                         AND DECODE(BV.POD_CD, 'XXXXX', VPP.LD_PORT, BV.POD_CD) = VPP.POD_CD" ).append("\n"); 
		query.append("                         AND VPP.POL_CONTI   = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- ALLOCATION" ).append("\n"); 
		query.append("                      SELECT 6 AS FLG," ).append("\n"); 
		query.append("                             VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                             VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                             VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                             VPP.DIR_CD        ," ).append("\n"); 
		query.append("                             VPP.COST_YR       ," ).append("\n"); 
		query.append("                             VPP.COST_MON      ," ).append("\n"); 
		query.append("                             VPP.COST_WK       ," ).append("\n"); 
		query.append("                             VPP.VSL_CD        ," ).append("\n"); 
		query.append("                             VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                             VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                             NULL AS FD_VOL    ," ).append("\n"); 
		query.append("                             NULL AS FD_WGT    ," ).append("\n"); 
		query.append("                             NULL AS QTA_OCN   ," ).append("\n"); 
		query.append("                             NULL AS QTA_IPC   ," ).append("\n"); 
		query.append("                             NULL AS FC_OCN_VOL," ).append("\n"); 
		query.append("                             NULL AS FC_OCN_WGT," ).append("\n"); 
		query.append("                             NULL AS FC_IPC_VOL," ).append("\n"); 
		query.append("                             NULL AS FC_IPC_WGT," ).append("\n"); 
		query.append("                             NULL AS EP_VOL    ," ).append("\n"); 
		query.append("                             DECODE(A.IOC_CD, 'O', A.ASGN_TTL_QTY) AS AL_OCN_VOL," ).append("\n"); 
		query.append("                             DECODE(A.IOC_CD, 'O', A.ASGN_TTL_WGT) AS AL_OCN_WGT," ).append("\n"); 
		query.append("                             DECODE(A.IOC_CD, 'I', A.ASGN_TTL_QTY) AS AL_IPC_VOL," ).append("\n"); 
		query.append("                             DECODE(A.IOC_CD, 'I', A.ASGN_TTL_WGT) AS AL_IPC_WGT," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                             VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                             VPP.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                        FROM SPC_ALOC_POL_POD A  ," ).append("\n"); 
		query.append("                             VVD_POL_POD      VPP" ).append("\n"); 
		query.append("                       WHERE A.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                         AND A.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                         AND A.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                         AND A.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND A.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(A.POL_YD_CD, 1, LENGTH(VPP.POL_CD)) = VPP.POL_CD" ).append("\n"); 
		query.append("                         AND SUBSTR(A.POD_YD_CD, 1, LENGTH(VPP.POD_CD)) = VPP.POD_CD" ).append("\n"); 
		query.append("                         AND A.REP_TRD_CD     = VPP.REP_TRD_CD" ).append("\n"); 
		query.append("                         AND A.REP_SUB_TRD_CD = VPP.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                         AND A.TRD_CD         = VPP.TRD_CD" ).append("\n"); 
		query.append("                         AND A.SUB_TRD_CD     = VPP.SUB_TRD_CD" ).append("\n"); 
		query.append("                         AND A.TS_FLG         = 'N'" ).append("\n"); 
		query.append("                         AND VPP.POL_CONTI    = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- BOOKING" ).append("\n"); 
		query.append("                      SELECT 7 AS FLG," ).append("\n"); 
		query.append("                             REP_TRD_CD    ," ).append("\n"); 
		query.append("                             REP_SUB_TRD_CD ," ).append("\n"); 
		query.append("                             RLANE_CD       ," ).append("\n"); 
		query.append("                             DIR_CD         ," ).append("\n"); 
		query.append("                             COST_YR        ," ).append("\n"); 
		query.append("                             COST_MON       ," ).append("\n"); 
		query.append("                             COST_WK        ," ).append("\n"); 
		query.append("                             VSL_CD         ," ).append("\n"); 
		query.append("                             SKD_VOY_NO     ," ).append("\n"); 
		query.append("                             SKD_DIR_CD     ," ).append("\n"); 
		query.append("                             NULL AS FD_VOL ," ).append("\n"); 
		query.append("                             NULL AS FD_WGT ," ).append("\n"); 
		query.append("                             NULL AS QTA_OCN," ).append("\n"); 
		query.append("                             NULL AS QTA_IPC," ).append("\n"); 
		query.append("                             DECODE(IOC_CD||PAST, 'OY', BKG_TTL_QTY) AS FC_OCN_VOL," ).append("\n"); 
		query.append("                             DECODE(IOC_CD||PAST, 'OY', BKG_TTL_WGT) AS FC_OCN_WGT," ).append("\n"); 
		query.append("                             DECODE(IOC_CD||PAST, 'IY', BKG_TTL_QTY) AS FC_IPC_VOL," ).append("\n"); 
		query.append("                             DECODE(IOC_CD||PAST, 'IY', BKG_TTL_WGT) AS FC_IPC_WGT," ).append("\n"); 
		query.append("                             NULL AS EP_VOL    ," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_VOL," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_WGT," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_VOL," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_WGT," ).append("\n"); 
		query.append("                             DECODE(IOC_CD, 'O', BKG_TTL_QTY) AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                             DECODE(IOC_CD, 'O', BKG_TTL_WGT) AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                             DECODE(IOC_CD, 'I', BKG_TTL_QTY) AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                             DECODE(IOC_CD, 'I', BKG_TTL_WGT) AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                             LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                             LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                        FROM BKG_DATA" ).append("\n"); 
		query.append("                       WHERE TS_FLG = 'N'" ).append("\n"); 
		query.append("                         AND BKG_TTL_QTY + BKG_TTL_WGT > 0" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      -- TS LIST" ).append("\n"); 
		query.append("                      SELECT 99 AS FLG," ).append("\n"); 
		query.append("                             V.REP_TRD_CD       ," ).append("\n"); 
		query.append("                             V.REP_SUB_TRD_CD   ," ).append("\n"); 
		query.append("                             V.RLANE_CD         ," ).append("\n"); 
		query.append("                             V.DIR_CD           ," ).append("\n"); 
		query.append("                             V.COST_YR          ," ).append("\n"); 
		query.append("                             V.COST_MON         ," ).append("\n"); 
		query.append("                             V.COST_WK          ," ).append("\n"); 
		query.append("                             V.VSL_CD           ," ).append("\n"); 
		query.append("                             V.SKD_VOY_NO       ," ).append("\n"); 
		query.append("                             V.SKD_DIR_CD       ," ).append("\n"); 
		query.append("                             NULL AS FD_VOL     ," ).append("\n"); 
		query.append("                             NULL AS FD_WGT     ," ).append("\n"); 
		query.append("                             NULL AS QTA_OCN    ," ).append("\n"); 
		query.append("                             NULL AS QTA_IPC    ," ).append("\n"); 
		query.append("                             NULL AS FC_OCN_VOL ," ).append("\n"); 
		query.append("                             NULL AS FC_OCN_WGT ," ).append("\n"); 
		query.append("                             NULL AS FC_IPC_VOL ," ).append("\n"); 
		query.append("                             NULL AS FC_IPC_WGT ," ).append("\n"); 
		query.append("                             NULL AS EP_VOL     ," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                             NULL AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                             NULL AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                             NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                             V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                             V.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                        FROM REP_VVDS V" ).append("\n"); 
		query.append("                       WHERE EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                                        FROM SPC_DLY_FCAST_CUST F ," ).append("\n"); 
		query.append("                                             VSL_PORT_SKD       VP" ).append("\n"); 
		query.append("                                       WHERE NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) +  NVL(F.CFM_53FT_QTY, 0) + NVL(F.CFM_TTL_WGT, 0) > 0" ).append("\n"); 
		query.append("                                         AND F.RLANE_CD    = VP.RLANE_CD" ).append("\n"); 
		query.append("                                         AND F.DIR_CD      = VP.DIR_CD" ).append("\n"); 
		query.append("                                         AND F.VSL_CD      = VP.VSL_CD" ).append("\n"); 
		query.append("                                         AND F.SKD_VOY_NO  = VP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                         AND F.SKD_DIR_CD  = VP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                         AND SUBSTR(F.POL_YD_CD, 1, LENGTH(VP.PORT_CD)) = VP.PORT_CD" ).append("\n"); 
		query.append("                                         AND F.IOC_TS_CD   = 'T'" ).append("\n"); 
		query.append("                                         AND VP.CONTI_CD   = V.OFC_CONTI" ).append("\n"); 
		query.append("                                         AND VP.RLANE_CD   = V.RLANE_CD" ).append("\n"); 
		query.append("                                         AND VP.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("                                         AND VP.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                                         AND VP.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                         AND VP.SKD_DIR_CD = V.SKD_DIR_CD )" ).append("\n"); 
		query.append("                          OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                                        FROM SPC_ALOC_POL_POD A ," ).append("\n"); 
		query.append("                                             VSL_PORT_SKD     VP" ).append("\n"); 
		query.append("                                       WHERE A.ASGN_TTL_QTY + A.ASGN_TTL_WGT > 0" ).append("\n"); 
		query.append("                                         AND A.RLANE_CD    = VP.RLANE_CD" ).append("\n"); 
		query.append("                                         AND A.DIR_CD      = VP.DIR_CD" ).append("\n"); 
		query.append("                                         AND A.VSL_CD      = VP.VSL_CD" ).append("\n"); 
		query.append("                                         AND A.SKD_VOY_NO  = VP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                         AND A.SKD_DIR_CD  = VP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                         AND SUBSTR(A.POL_YD_CD, 1, LENGTH(VP.PORT_CD)) = VP.PORT_CD" ).append("\n"); 
		query.append("                                         AND A.TS_FLG      = 'Y'" ).append("\n"); 
		query.append("                                         AND VP.CONTI_CD   = V.OFC_CONTI" ).append("\n"); 
		query.append("                                         AND VP.RLANE_CD   = V.RLANE_CD" ).append("\n"); 
		query.append("                                         AND VP.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("                                         AND VP.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                                         AND VP.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                         AND VP.SKD_DIR_CD = V.SKD_DIR_CD )" ).append("\n"); 
		query.append("                          OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                                        FROM BKG_DATA     B ," ).append("\n"); 
		query.append("                                             VSL_PORT_SKD VP" ).append("\n"); 
		query.append("                                       WHERE B.BKG_TTL_QTY + B.BKG_TTL_WGT > 0" ).append("\n"); 
		query.append("                                         AND B.RLANE_CD    = VP.RLANE_CD" ).append("\n"); 
		query.append("                                         AND B.DIR_CD      = VP.DIR_CD" ).append("\n"); 
		query.append("                                         AND B.VSL_CD      = VP.VSL_CD" ).append("\n"); 
		query.append("                                         AND B.SKD_VOY_NO  = VP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                         AND B.SKD_DIR_CD  = VP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                         AND (B.POL_CD = VP.PORT_CD OR B.POL_YD_CD = VP.PORT_CD)" ).append("\n"); 
		query.append("                                         AND B.TS_FLG      = 'Y'" ).append("\n"); 
		query.append("                                         AND VP.CONTI_CD   = V.OFC_CONTI" ).append("\n"); 
		query.append("                                         AND VP.RLANE_CD   = V.RLANE_CD" ).append("\n"); 
		query.append("                                         AND VP.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("                                         AND VP.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                                         AND VP.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                         AND VP.SKD_DIR_CD = V.SKD_DIR_CD )" ).append("\n"); 
		query.append("                   ) V" ).append("\n"); 
		query.append("          GROUP BY REP_TRD_CD          ," ).append("\n"); 
		query.append("                   REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                   RLANE_CD            ," ).append("\n"); 
		query.append("                   DIR_CD              ," ).append("\n"); 
		query.append("                   COST_YR             ," ).append("\n"); 
		query.append("                   COST_MON            ," ).append("\n"); 
		query.append("                   COST_WK             ," ).append("\n"); 
		query.append("                   VSL_CD              ," ).append("\n"); 
		query.append("                   SKD_VOY_NO          ," ).append("\n"); 
		query.append("                   SKD_DIR_CD          ," ).append("\n"); 
		query.append("                   LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                   LST_LODG_PORT_CD" ).append("\n"); 
		query.append("         ) Z," ).append("\n"); 
		query.append("         SPC_ALOC_CTRL_OPT C ," ).append("\n"); 
		query.append("         SAQ_MTY_SPC_GNTE  SG" ).append("\n"); 
		query.append("   WHERE C.RLANE_CD  (+) = Z.RLANE_CD" ).append("\n"); 
		query.append("     AND C.DIR_CD    (+) = Z.DIR_CD" ).append("\n"); 
		query.append("     AND C.VSL_CD    (+) = Z.VSL_CD" ).append("\n"); 
		query.append("     AND C.SKD_VOY_NO(+) = Z.SKD_VOY_NO" ).append("\n"); 
		query.append("     AND C.SKD_DIR_CD(+) = Z.SKD_DIR_CD" ).append("\n"); 
		query.append("     AND SG.BSE_YR   (+) = Z.COST_YR" ).append("\n"); 
		query.append("     AND SG.BSE_WK   (+) = Z.COST_WK" ).append("\n"); 
		query.append("     AND SG.RLANE_CD (+) = Z.RLANE_CD" ).append("\n"); 
		query.append("     AND SG.DIR_CD   (+) = Z.DIR_CD" ).append("\n"); 
		query.append("     AND SG.PORT_CD  (+) = Z.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("ORDER BY Z.REP_TRD_CD          ," ).append("\n"); 
		query.append("         Z.REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("         Z.RLANE_CD            ," ).append("\n"); 
		query.append("         Z.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("         Z.DIR_CD              ," ).append("\n"); 
		query.append("         Z.COST_YR             ," ).append("\n"); 
		query.append("         Z.COST_MON            ," ).append("\n"); 
		query.append("         Z.COST_WK             ," ).append("\n"); 
		query.append("         Z.VSL_CD              ," ).append("\n"); 
		query.append("         Z.SKD_VOY_NO          ," ).append("\n"); 
		query.append("         Z.SKD_DIR_CD" ).append("\n"); 

	}
}