<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="FACCommCalculationDBDAOModifyFFDetailEMSGUSQL">
			<desc><![CDATA[FACCommCalculationDBDAOModifyFFDetailEMSGUSQL]]></desc>
			<sql><![CDATA[
MERGE INTO ACM_FAC_COMM_DTL A 
   USING (SELECT   B.BKG_NO BKG_NO 
                 , B.SLS_OFC_CD SLS_OFC_CD 
                 , B.FAC_SEQ FAC_SEQ 
                 , D.CNTR_TPSZ_CD CNTR_TPSZ_CD 
                 , SUM (E.OP_CNTR_QTY) BKG_VOL_QTY 
                 , SUM (E.OP_CNTR_QTY * D.COMM_UT_AMT) IF_DTRB_AMT 
                 , 'USD' CURR_CD 
                 , SUM (E.OP_CNTR_QTY * D.COMM_UT_AMT) PAY_IF_DTRB_AMT 
                 , 'COMMISSION' UPD_USR_ID 
                 , SYSDATE UPD_DT 
                 , 'COMMISSION' CRE_USR_ID 
                 , SYSDATE CRE_DT 
              FROM ACM_FAC_COMM B, ACM_COMM_UT_COST D, 
                 ( 
                       SELECT 
                              BKG.BKG_NO, 
                              QTY.CNTR_TPSZ_CD, 
                              SUM (QTY.OP_CNTR_QTY) AS OP_CNTR_QTY 
                         FROM BKG_QUANTITY QTY, 
                              BKG_BL_DOC   DOC, 
                              BKG_BOOKING  BKG, 
                              BKG_BOOKING  BK2 
                        WHERE QTY.BKG_NO                  = DOC.BKG_NO 
                          AND QTY.CNTR_TPSZ_CD NOT LIKE 'Q%' 
                          AND 
                            ( 
                              BKG.BKG_NO                  = DOC.BKG_NO 
                           OR 
                              BKG.BL_NO                   = DOC.MST_CVRD_BL_NO 
                            ) 
                          AND BK2.BKG_NO                  = DOC.BKG_NO 
                          AND BK2.BL_NO_TP              <>  '9' 
                          AND BK2.BKG_STS_CD            <>  'X' 
                          AND BKG.BKG_NO                  = @[bkg_no]
                     GROUP BY BKG.BKG_NO, 
                              QTY.CNTR_TPSZ_CD 
                 ) E 
             WHERE B.BKG_NO = E.BKG_NO 
               AND B.FAC_SEQ = @[fac_seq]
               AND D.COMM_YRMON = (SELECT MAX (COMM_YRMON) 
                                     FROM ACM_COMM_UT_COST 
                                    WHERE ROWNUM < 2) 
               AND B.AR_OFC_CD = D.OFC_CD 
               AND D.IO_BND_CD = 'O' 
               AND D.AC_TP_CD = 'F' 
               AND B.BKG_NO = E.BKG_NO 
               AND D.CNTR_TPSZ_CD = E.CNTR_TPSZ_CD 
          GROUP BY B.BKG_NO 
                 , B.SLS_OFC_CD
                 , B.FAC_SEQ 
                 , D.CNTR_TPSZ_CD) B 
   ON (    A.BKG_NO = B.BKG_NO 
       AND A.FAC_SEQ = B.FAC_SEQ 
       AND A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD) 
   WHEN MATCHED THEN 
      UPDATE 
         SET A.BKG_VOL_QTY = B.BKG_VOL_QTY 
           , A.CURR_CD = B.CURR_CD 
           , A.IF_DTRB_AMT = B.IF_DTRB_AMT 
           , A.PAY_IF_DTRB_AMT = B.PAY_IF_DTRB_AMT 
   WHEN NOT MATCHED THEN 
      INSERT (A.BKG_NO, A.SLS_OFC_CD , A.FAC_SEQ 
            , A.CNTR_TPSZ_CD, A.BKG_VOL_QTY, A.IF_DTRB_AMT, A.CURR_CD 
            , A.PAY_IF_DTRB_AMT, A.UPD_USR_ID, A.UPD_DT, A.CRE_USR_ID, A.CRE_DT) 
      VALUES (B.BKG_NO, B.SLS_OFC_CD, B.FAC_SEQ 
            , B.CNTR_TPSZ_CD, B.BKG_VOL_QTY, B.IF_DTRB_AMT, B.CURR_CD 
            , B.PAY_IF_DTRB_AMT, B.UPD_USR_ID, B.UPD_DT, B.CRE_USR_ID, B.CRE_DT)			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="fac_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
