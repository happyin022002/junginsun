<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpaceAllocationManageDBDAOSearchSpaceAllocation0044MasterListVORSQL">
			<desc><![CDATA[CHOI.Y.S - [프로젝트] Ticket ID : CHM-201004171 - 53FT 관련 필드 추가
2016.05.12 SPC_GET_HC_RT_BSA_FNC : SKD_VOY_NO parm 추가
2016.07.12 로직수정
2016.07.19 #15529 AOC- JPN Issue cannot create BKG for T2 + Refeer]]></desc>
			<sql><![CDATA[
WITH COA_MON_VVD_LV AS(
    SELECT DISTINCT
           M.TRD_CD    ,
           M.SUB_TRD_CD,
           M.RLANE_CD  ,
           M.DIR_CD    ,
           SUBSTR(M.SLS_YRMON, 1, 4) AS COST_YR ,
           SUBSTR(M.SLS_YRMON, 5)    AS COST_MON,
           M.COST_WK   ,
           M.VSL_CD    ,
           M.SKD_VOY_NO,
           M.DIR_CD                  AS SKD_DIR_CD,
           (SELECT N2ND_PRNT_OFC_CD FROM SPC_OFC_LVL
            WHERE 1=1
            AND OFC_CD =@[office])   AS RHQ_CD,
           @[office]                 AS SLS_OFC_CD,
           S1.YD_CD                  AS POL_CD    ,
           S2.YD_CD                  AS POD_CD    ,
           S1.CLPT_IND_SEQ           AS PL_CLPT_IND_SEQ ,
           S2.CLPT_IND_SEQ           AS PD_CLPT_IND_SEQ   
      FROM COA_MON_VVD M ,
           VSK_VSL_PORT_SKD S1,
           VSK_VSL_PORT_SKD S2
      
     WHERE (M.DELT_FLG IS NULL OR M.DELT_FLG = 'N')

#if (${vvd} == '')
       AND (SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK) IN ( SELECT COST_YR||COST_WK
                                                         FROM (  SELECT P.COST_YR,
                                                                        P.COST_WK
                                                                   FROM COA_WK_PRD P
                                                                  WHERE P.COST_YR||P.COST_WK >= @[year]||@[week]
                                                               ORDER BY P.COST_YR||P.COST_WK ) Z
                                                        WHERE ROWNUM <= @[duration] )
#else
       AND M.VSL_CD     = @[vsl_cd]
       AND M.SKD_VOY_NO = @[skd_voy_no]
       AND M.DIR_CD     = @[dir_cd]
      
#end

#if (${vvd} == '' && ${trade} != '')
       AND M.TRD_CD = @[trade]
#end

#if (${vvd} == '' && ${subtrade} != '')
       AND M.SUB_TRD_CD = @[subtrade]
#end

#if (${vvd} == '' && ${lane} != '')
       AND M.RLANE_CD = @[lane]
#end

#if (${vvd} == '' && ${bound} != '')
       AND M.DIR_CD = @[bound]
#end
 AND S1.VSL_CD     = M.VSL_CD
 AND S1.SKD_VOY_NO = M.SKD_VOY_NO
 AND S1.SKD_DIR_CD = M.DIR_CD
 AND S1.VSL_CD     = S2.VSL_CD
 AND S1.SKD_VOY_NO = S2.SKD_VOY_NO
 AND S1.SKD_DIR_CD = S2.SKD_DIR_CD
 AND S1.CLPT_SEQ   < S2.CLPT_SEQ
 AND S1.VT_ADD_CALL_FLG IS NULL
 AND S2.VT_ADD_CALL_FLG IS NULL

)

, VSL_PORT_SKD AS (
    SELECT 
           V.COST_YR   ,
           V.COST_WK   ,
           V.COST_MON  ,
           V.TRD_CD    ,
           V.SUB_TRD_CD,
           V.RLANE_CD  ,
           V.DIR_CD    ,
           V.VSL_CD    ,
           V.SKD_VOY_NO,
           V.SKD_DIR_CD,
           V.RHQ_CD    ,
           V.SLS_OFC_CD,
           NVL(VPS.YD_CD, VPS.VPS_PORT_CD) AS PORT_CD,
           VPS.CLPT_SEQ         AS PORT_SEQ,
           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MAX_SEQ,
           MIN(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MIN_SEQ,
           VPS.CLPT_IND_SEQ  AS CLPT_IND_SEQ
 
      FROM            
           VSK_VSL_PORT_SKD VPS,
           COA_MON_VVD_LV   V
     WHERE 1=1
       AND VPS.VSL_CD     = V.VSL_CD
       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO
       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD
       AND NVL(VPS.SKD_CNG_STS_CD,'1') <> 'S'
       AND VPS.VT_ADD_CALL_FLG IS  NULL
)

, VVD_POL_POD AS (

          SELECT 
                 PL.COST_YR       ,
                 PL.COST_WK       ,
                 PL.COST_MON      ,
                 PL.TRD_CD        ,
                 PL.SUB_TRD_CD    ,
                 PL.RLANE_CD      ,
                 PL.DIR_CD        ,
                 PL.VSL_CD        ,
                 PL.SKD_VOY_NO    ,
                 PL.SKD_DIR_CD    ,
                 PL.RHQ_CD        ,
                 PL.SLS_OFC_CD    ,
                 PL.PORT_CD         AS POL_CD    ,
                 MAX(PL.PORT_SEQ)   AS POL_SEQ   ,
                 PL.CLPT_IND_SEQ    AS PL_CLPT_IND_SEQ,
                 PD.PORT_CD         AS POD_CD    ,
                 (CASE
                       WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ)
                                                               ELSE CASE
                                                                         WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) THEN MAX(PD.MAX_SEQ)
                                                                     END
                   END
                 ) AS POD_SEQ,
                 PD.CLPT_IND_SEQ   AS PD_CLPT_IND_SEQ
                         

            FROM    
                 VSL_PORT_SKD     PD ,
                 VSL_PORT_SKD     PL
           WHERE 1=1
             AND PD.TRD_CD       = PL.TRD_CD
             AND PD.SUB_TRD_CD   = PL.SUB_TRD_CD
             AND PD.RLANE_CD     = PL.RLANE_CD
             AND PD.VSL_CD       = PL.VSL_CD
             AND PD.SKD_VOY_NO   = PL.SKD_VOY_NO
             AND PD.SKD_DIR_CD   = PL.SKD_DIR_CD
             AND PD.PORT_CD      <> PL.PORT_CD
             AND PD.PORT_SEQ      > PL.PORT_SEQ
             AND (PL.PORT_SEQ = PL.MAX_SEQ  OR PD.PORT_SEQ < PL.MAX_SEQ )                     
             
             GROUP BY 
                 PL.COST_YR       ,
                 PL.COST_WK       ,
                 PL.COST_MON      ,
                 PL.TRD_CD        ,
                 PL.SUB_TRD_CD    ,
                 PL.RLANE_CD      ,
                 PL.DIR_CD        ,
                 PL.VSL_CD        ,
                 PL.SKD_VOY_NO    ,
                 PL.SKD_DIR_CD    ,
                 PL.PORT_CD       ,
                 PD.PORT_CD       ,
                 PL.RHQ_CD        ,
                 PL.SLS_OFC_CD    ,
                 PL.CLPT_IND_SEQ  ,
                 PD.CLPT_IND_SEQ        
 )  
 
  SELECT L.TRD_CD    ,
         L.SUB_TRD_CD,
         L.RLANE_CD  ,
         L.DIR_CD    ,
         L.COST_WK   ,
         L.COST_MON  ,
         L.VSL_CD    ,
         L.SKD_VOY_NO,
         L.SKD_DIR_CD,
         L.VVD       ,
         NVL(L.AD_VOL ,0) AD_VOL    ,
         ROUND(L.AD_WGT) AD_WGT   ,
         NVL(L.TS_VOL ,0) TS_VOL   ,
         ROUND(L.TS_WGT) TS_WGT   ,
         ROUND(L.QTA_VOL) QTA_VOL  ,
         ROUND(L.QTA_CMB) QTA_CMB ,
         NVL(L.FC_VOL ,0) FC_VOL  ,
         ROUND(L.FC_WGT)  FC_WGT  ,
         NVL(L.FC_TS_VOL ,0) FC_TS_VOL,
         ROUND(L.FC_TS_WGT) FC_TS_WGT,
         NVL(L.AP_VOL ,0)   AP_VOL,
         ROUND(L.AP_WGT)    AP_WGT,
         NVL(L.AP_TS_VOL ,0) AP_TS_VOL,
         ROUND(L.AP_TS_WGT) AP_TS_WGT,
         NVL(L.BKG_VOL ,0)  BKG_VOL,
         ROUND(L.BKG_WGT)   BKG_WGT,
         NVL(L.BKG_TS_VOL ,0) BKG_TS_VOL,
         ROUND(L.BKG_TS_WGT) BKG_TS_WGT, 
         NVL(C.CTRL_LVL_CD     , 'L') AS CTRL_PORT_FLG   ,
         NVL(C.CTRL_40FT_HC_FLG, 'N') AS CTRL_40FT_HC_FLG,
         NVL(C.CTRL_45FT_HC_FLG, 'N') AS CTRL_45FT_HC_FLG,
         NVL(C.CTRL_53FT_FLG   , 'N') AS CTRL_53FT_FLG   ,
         NVL(C.CTRL_RF_FLG     , 'N') AS CTRL_RF_FLG     ,
         NVL(C.CTRL_WGT_FLG    , 'N') AS CTRL_WGT_FLG    ,
         NVL(C.CTRL_SPC_FLG    , 'N') AS CTRL_SPC_FLG    ,
         DECODE(C.RLANE_CD, NULL, 'I', 'R') AS IBFLAG
    FROM (
            SELECT TRD_CD    ,
                   SUB_TRD_CD,
                   RLANE_CD  ,
                   DIR_CD    ,
                   COST_YR||COST_WK AS COST_WK,
                   COST_MON  ,
                   VSL_CD    ,
                   SKD_VOY_NO,
                   SKD_DIR_CD,
                   VSL_CD||SKD_VOY_NO||SKD_DIR_CD AS VVD,
                   SUM(AD_VOL)  AS AD_VOL ,
                   SUM(AD_WGT)  AS AD_WGT ,
                   SUM(TS_VOL)  AS TS_VOL ,
                   SUM(TS_WGT)  AS TS_WGT ,
                   SUM(QTA_VOL) AS QTA_VOL,
                   SUM(QTA_CMB) AS QTA_CMB,
                   SUM(FC_VOL)  AS FC_VOL ,
                   SUM(FC_WGT)  AS FC_WGT ,
                   SUM(FC_TS_VOL)  AS FC_TS_VOL ,
                   SUM(FC_TS_WGT)  AS FC_TS_WGT ,                    
                   SUM(AP_VOL)  AS AP_VOL ,
                   SUM(AP_WGT)  AS AP_WGT ,
                   SUM(AP_TS_VOL)  AS AP_TS_VOL ,
                   SUM(AP_TS_WGT)  AS AP_TS_WGT ,                   
                   SUM(BKG_VOL) AS BKG_VOL,
                   SUM(BKG_WGT) AS BKG_WGT,
                   SUM(BKG_TS_VOL) AS BKG_TS_VOL,
                   SUM(BKG_TS_WGT) AS BKG_TS_WGT 
              FROM (
                      -- Forecast
                      SELECT B.TRD_CD    ,
                             B.SUB_TRD_CD,
                             B.RLANE_CD  ,
                             B.DIR_CD    ,
                             B.COST_YR   ,
                             B.COST_MON  ,
                             B.COST_WK   ,
                             B.VSL_CD    ,
                             B.SKD_VOY_NO,
                             B.SKD_DIR_CD,
                             NULL AS AD_VOL ,
                             NULL AS AD_WGT ,
                             NULL AS TS_VOL ,
                             NULL AS TS_WGT ,
                             NULL AS QTA_VOL,
                             NULL AS QTA_CMB,
                             DECODE(DA.IOC_TS_CD, 'T', 0, NVL(DA.CFM_TTL_QTY, 0) + NVL(DA.CFM_40FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(B.TRD_CD ,B.RLANE_CD ,B.SKD_DIR_CD ,B.VSL_CD , B.SKD_VOY_NO, 'D5') + NVL(DA.CFM_45FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(B.TRD_CD ,B.RLANE_CD ,B.SKD_DIR_CD ,B.VSL_CD ,B.SKD_VOY_NO,'D7') + NVL(DA.CFM_53FT_QTY, 0) * 2) AS FC_VOL,
                             DECODE(DA.IOC_TS_CD, 'T', 0, NVL(DA.CFM_TTL_WGT, 0)) AS FC_WGT,
                             DECODE(DA.IOC_TS_CD, 'T', NVL(DA.CFM_TTL_QTY, 0) + NVL(DA.CFM_40FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(B.TRD_CD ,B.RLANE_CD ,B.SKD_DIR_CD ,B.VSL_CD , B.SKD_VOY_NO,'D5') + NVL(DA.CFM_45FT_HC_QTY, 0) * SPC_GET_HC_RT_BSA_FNC(B.TRD_CD ,B.RLANE_CD ,B.SKD_DIR_CD ,B.VSL_CD , B.SKD_VOY_NO,'D7') + NVL(DA.CFM_53FT_QTY, 0) * 2) AS FC_TS_VOL,
                             DECODE(DA.IOC_TS_CD, 'T', DA.CFM_TTL_WGT) AS FC_TS_WGT,                                 
                             NULL AS AP_VOL ,
                             NULL AS AP_WGT ,
                             NULL AS AP_TS_VOL ,
                             NULL AS AP_TS_WGT ,                                 
                             NULL AS BKG_VOL,
                             NULL AS BKG_WGT,
                             NULL AS BKG_TS_VOL,
                             NULL AS BKG_TS_WGT                             
                        FROM VVD_POL_POD        B ,
                             SPC_DLY_FCAST_CUST DA
                       WHERE 1=1
                         AND B.TRD_CD = DA.TRD_CD
                         AND ((B.SUB_TRD_CD IS NULL AND DA.SUB_TRD_CD IS NULL) OR B.SUB_TRD_CD = DA.SUB_TRD_CD)
                         AND B.RLANE_CD   = DA.RLANE_CD
                         AND B.DIR_CD     = DA.DIR_CD
                         AND B.VSL_CD     = DA.VSL_CD
                         AND B.SKD_VOY_NO = DA.SKD_VOY_NO
                         AND B.DIR_CD     = DA.SKD_DIR_CD
                         AND B.SLS_OFC_CD = DA.SLS_RGN_OFC_CD
                         AND B.POL_CD     = DA.POL_YD_CD
                         AND B.POD_CD     = DA.POD_YD_CD
                         AND NVL(B.PL_CLPT_IND_SEQ,'1') = NVL(DA.POL_IND_SEQ,'1')
                         AND NVL(B.PD_CLPT_IND_SEQ,'1') = NVL(DA.POD_IND_SEQ,'1')
                         AND NVL(DA.CFM_TTL_QTY, 0) + NVL(DA.CFM_40FT_HC_QTY, 0) + NVL(DA.CFM_45FT_HC_QTY, 0) + NVL(DA.CFM_53FT_QTY, 0) + NVL(DA.CFM_TTL_WGT, 0) > 0 
                      UNION ALL
                      --Allocated/Allocation
                      SELECT B.TRD_CD    ,
                             B.SUB_TRD_CD,
                             B.RLANE_CD  ,
                             B.DIR_CD    ,
                             B.COST_YR   ,
                             B.COST_MON  ,
                             B.COST_WK   ,
                             B.VSL_CD    ,
                             B.SKD_VOY_NO,
                             B.SKD_DIR_CD,
                             DECODE(D.TS_FLG, 'N', DECODE(B.SLS_OFC_CD, D.SLS_OFC_CD, D.ASGN_TTL_QTY)) AS AD_VOL,
                             DECODE(D.TS_FLG, 'N', DECODE(B.SLS_OFC_CD, D.SLS_OFC_CD, D.ASGN_TTL_WGT)) AS AD_WGT,
                             DECODE(D.TS_FLG, 'Y', DECODE(B.SLS_OFC_CD, D.SLS_OFC_CD, D.ASGN_TTL_QTY)) AS TS_VOL,
                             DECODE(D.TS_FLG, 'Y', DECODE(B.SLS_OFC_CD, D.SLS_OFC_CD, D.ASGN_TTL_WGT)) AS TS_WGT,                             
                             NULL AS QTA_VOL,
                             NULL AS QTA_CMB,
                             NULL AS FC_VOL ,
                             NULL AS FC_WGT ,
                             NULL AS FC_TS_VOL ,
                             NULL AS FC_TS_WGT ,                             
                             DECODE(D.TS_FLG, 'N', DECODE(B.SLS_OFC_CD, D.SLS_RGN_OFC_CD, D.BKG_AVAL_TTL_QTY)) AS AP_VOL,
                             DECODE(D.TS_FLG, 'N', DECODE(B.SLS_OFC_CD, D.SLS_RGN_OFC_CD, D.BKG_AVAL_TTL_WGT)) AS AP_WGT,
                             DECODE(D.TS_FLG, 'Y', DECODE(B.SLS_OFC_CD, D.SLS_RGN_OFC_CD, D.BKG_AVAL_TTL_QTY)) AS AP_TS_VOL,
                             DECODE(D.TS_FLG, 'Y', DECODE(B.SLS_OFC_CD, D.SLS_RGN_OFC_CD, D.BKG_AVAL_TTL_WGT)) AS AP_TS_WGT,  
                             NULL AS BKG_VOL,
                             NULL AS BKG_WGT,
                             NULL AS BKG_TS_VOL,
                             NULL AS BKG_TS_WGT  
                        FROM VVD_POL_POD      B,
                             SPC_ALOC_POL_POD D
                       WHERE 1=1
                         AND B.TRD_CD = D.TRD_CD
                         AND ((B.SUB_TRD_CD IS NULL AND D.SUB_TRD_CD IS NULL) OR B.SUB_TRD_CD = D.SUB_TRD_CD)
                         AND B.RLANE_CD               = D.RLANE_CD
                         AND B.DIR_CD                 = D.DIR_CD
                         AND B.VSL_CD                 = D.VSL_CD
                         AND B.SKD_VOY_NO             = D.SKD_VOY_NO
                         AND B.DIR_CD                 = D.SKD_DIR_CD
                         AND (B.SLS_OFC_CD            = D.SLS_OFC_CD OR B.SLS_OFC_CD = D.SLS_RGN_OFC_CD)
                         AND B.POL_CD                 = D.POL_YD_CD
                         AND B.POD_CD                 = D.POD_YD_CD
                         AND NVL(B.PL_CLPT_IND_SEQ,'1') = NVL(D.POL_IND_SEQ,'1')
                         AND NVL(B.PD_CLPT_IND_SEQ,'1') = NVL(D.POD_IND_SEQ,'1')
                      
                      UNION ALL
                      --Booking
                      SELECT 
                    
                       TRD_CD        ,
                       SUB_TRD_CD    ,
                       RLANE_CD      ,
                       DIR_CD        ,
                       COST_YR       ,
                       COST_MON      ,
                       COST_WK       ,
                       VSL_CD        ,
                       SKD_VOY_NO    ,
                       SKD_DIR_CD    ,
                       NULL AS AD_VOL ,
                       NULL AS AD_WGT ,
                       NULL AS TS_VOL ,
                       NULL AS TS_WGT ,
                       NULL AS QTA_VOL,
                       NULL AS QTA_CMB,
                       NULL AS FC_VOL ,
                       NULL AS FC_WGT ,
                       NULL AS FC_TS_VOL ,
                       NULL AS FC_TS_WGT ,                             
                       NULL AS AP_VOL ,
                       NULL AS AP_WGT ,
                       NULL AS AP_TS_VOL ,
                       NULL AS AP_TS_WGT ,
                       DECODE(VSL_PRE_PST_CD, 'T', TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0))) AS BKG_VOL,
                       DECODE(VSL_PRE_PST_CD, 'T', TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0))) AS BKG_WGT,
                       DECODE(VSL_PRE_PST_CD, 'T', 0, TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0))) AS BKG_TS_VOL,
                       DECODE(VSL_PRE_PST_CD, 'T', 0, TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0))) AS BKG_TS_WGT   
 
                   FROM (
                        SELECT /*+ ORDERED USE_NL(VPP BV B D) USE_HASH(O) */
                 
                               VPP.TRD_CD        ,
                               VPP.SUB_TRD_CD    ,
                               VPP.RLANE_CD      ,
                               VPP.DIR_CD        ,
                               VPP.COST_YR       ,
                               VPP.COST_MON      ,
                               VPP.COST_WK       ,
                               VPP.VSL_CD        ,
                               VPP.SKD_VOY_NO    ,
                               VPP.SKD_DIR_CD    ,
                               BV.VSL_PRE_PST_CD ,
                               (                        
                                SELECT B.TRD_CD||B.SUB_TRD_CD||B.RLANE_CD 
                                FROM MDM_REV_LANE A,
                                  MDM_DTL_REV_LANE B
                                WHERE B.RLANE_CD = A.RLANE_CD
                                  AND B.RLANE_CD LIKE BV.SLAN_CD||'%'
                                  AND B.FM_CONTI_CD = (
                                                        SELECT MLOC.CONTI_CD
                                                        FROM MDM_LOCATION MLOC
                                                        WHERE MLOC.LOC_CD = BV.POL_CD )
                                  AND B.TO_CONTI_CD = (
                                                        SELECT MLOC.CONTI_CD
                                                        FROM MDM_LOCATION MLOC
                                                        WHERE MLOC.LOC_CD = BV.POD_CD )
                                  AND B.VSL_SLAN_DIR_CD = BV.SKD_DIR_CD
                                  AND B.DELT_FLG = 'N'
                                  AND ROWNUM = 1  ) AS BKG_RLANE ,

                               (
                                  SELECT
                                            TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, '5', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D5'), '7', SPC_GET_HC_RT_BSA_FNC(VPP.TRD_CD ,VPP.RLANE_CD ,VPP.SKD_DIR_CD ,VPP.VSL_CD ,VPP.SKD_VOY_NO,'D7'), 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0) + DECODE(SAQ_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'T', Q.RC_QTY, 0)), 'FM0000000000.000')
                                         || TO_CHAR((D.ACT_WGT * DECODE(D.WGT_UT_CD, 'LBS', 0.00045, 0.001))
                                                                 + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT
                                                                                           FROM MDM_CNTR_TP_SZ TS
                                                                                          WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
                                    FROM BKG_QUANTITY Q
                                   WHERE B.BKG_NO      = Q.BKG_NO
                                     AND Q.OP_CNTR_QTY > 0
                               ) AS VAL
                         FROM  VVD_POL_POD VPP,
                               BKG_VVD     BV ,
                               BKG_BOOKING B  ,
                               SPC_OFC_LVL O  ,
                               BKG_BL_DOC  D
                         WHERE 1=1
                           AND O.OFC_TP_CD     IN ('BB', 'BA', 'BS')
                           AND VPP.SLS_OFC_CD   = O.N4TH_PRNT_OFC_CD
                           AND O.OFC_CD         = B.OB_SLS_OFC_CD
                          
                           AND B.BKG_STS_CD    IN ('W', 'F')
                           AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
                           AND B.BKG_NO         = BV.BKG_NO
                           AND B.BKG_NO         = D.BKG_NO
                           AND BV.VSL_CD        = VPP.VSL_CD
                           AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO
                           AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD
                           AND BV.POL_YD_CD     = VPP.POL_CD --2016.03.31 수정
                           AND BV.POD_YD_CD     = VPP.POD_CD --2016.03.31 수정
                          
                           AND NVL(VPP.PL_CLPT_IND_SEQ,'1') = NVL(BV.POL_CLPT_IND_SEQ,'1')
                           AND NVL(VPP.PD_CLPT_IND_SEQ,'1') = NVL(BV.POD_CLPT_IND_SEQ,'1')
                           AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                     )
                     WHERE 1=1
                     AND TRD_CD     = SUBSTR(BKG_RLANE,1,3)
                     AND SUB_TRD_CD = SUBSTR(BKG_RLANE,4,2)
                     AND RLANE_CD   = SUBSTR(BKG_RLANE,6,5)
                      
                     UNION ALL                       
                      -- Booking Quota / CMB
                      SELECT B.TRD_CD    ,
                             B.SUB_TRD_CD,
                             B.RLANE_CD  ,
                             B.DIR_CD    ,
                             B.COST_YR   ,
                             B.COST_MON  ,
                             B.COST_WK   ,
                             B.VSL_CD    ,
                             B.SKD_VOY_NO,
                             B.SKD_DIR_CD,
                             NULL AS AD_VOL,
                             NULL AS AD_WGT,
                             NULL AS TS_VOL,
                             NULL AS TS_WGT,
                             ROUND(SUM(MQ.LOD_QTY)) AS QTA_VOL,
                             DECODE(ROUND(SUM(MQ.LOD_QTY)), 0, 0, (SUM(MQ.GRS_RPB_REV * MQ.LOD_QTY) - SUM(MQ.CM_UC_AMT * MQ.LOD_QTY)) / ROUND(SUM(MQ.LOD_QTY))) AS QTA_CMB,
                             NULL AS FC_VOL ,
                             NULL AS FC_WGT ,
                             NULL AS FC_TS_VOL ,
                             NULL AS FC_TS_WGT ,
                             NULL AS AP_VOL ,
                             NULL AS AP_WGT ,
                             NULL AS AP_TS_VOL ,
                             NULL AS AP_TS_WGT ,
                             NULL AS BKG_VOL,
                             NULL AS BKG_WGT,
                             NULL AS BKG_TS_VOL,
                             NULL AS BKG_TS_WGT  
                        FROM COA_MON_VVD_LV   B  ,
                             SAQ_MON_CFM_QTA  MQ ,
                             SAQ_MON_QTA_RLSE MQR
                       WHERE MQR.BSE_YR          = B.COST_YR
                         AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(B.COST_MON) / 3)||'Q'
                         AND MQR.QTA_RLSE_STS_CD = 'R'
                         AND MQ.MQTA_RLSE_VER_NO = MQR.MQTA_RLSE_VER_NO
                         AND MQ.BSE_YR           = MQR.BSE_YR
                         AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD
                         AND MQ.QTA_TGT_CD       = 'T'
                         AND MQ.BSE_MON          = B.COST_MON
                         AND MQ.TRD_CD           = B.TRD_CD
                         AND MQ.RLANE_CD         = B.RLANE_CD
                         AND MQ.DIR_CD           = B.DIR_CD
                         AND MQ.VSL_CD           = B.VSL_CD
                         AND MQ.SKD_VOY_NO       = B.SKD_VOY_NO
                         AND MQ.SKD_DIR_CD       = B.SKD_DIR_CD
                         AND MQ.RGN_OFC_CD       = B.SLS_OFC_CD
                         AND MQ.LOD_QTY          > 0
                    GROUP BY B.TRD_CD    ,
                             B.SUB_TRD_CD,
                             B.RLANE_CD  ,
                             B.DIR_CD    ,
                             B.COST_YR   ,
                             B.COST_MON  ,
                             B.COST_WK   ,
                             B.VSL_CD    ,
                             B.SKD_VOY_NO,
                             B.SKD_DIR_CD                   
                   ) Z
          GROUP BY TRD_CD    ,
                   SUB_TRD_CD,
                   RLANE_CD  ,
                   DIR_CD    ,
                   COST_YR   ,
                   COST_MON  ,
                   COST_WK   ,
                   VSL_CD    ,
                   SKD_VOY_NO,
                   SKD_DIR_CD
         ) L,
         SPC_ALOC_CTRL_OPT C
   WHERE L.RLANE_CD   = C.RLANE_CD  (+)
     AND L.DIR_CD     = C.DIR_CD    (+)
     AND L.VSL_CD     = C.VSL_CD    (+)
     AND L.SKD_VOY_NO = C.SKD_VOY_NO(+)
     AND L.SKD_DIR_CD = C.SKD_DIR_CD(+)
ORDER BY 1,
         2,
         3,
         4,
         5,
         6			]]></sql>
			<params>
				<param name="office" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="duration" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="subtrade" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
