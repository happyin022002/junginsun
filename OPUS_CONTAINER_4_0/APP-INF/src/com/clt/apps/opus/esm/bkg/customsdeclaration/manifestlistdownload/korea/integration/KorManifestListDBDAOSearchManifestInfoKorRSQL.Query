<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="KorManifestListDBDAOSearchManifestInfoKorRSQL">
			<desc><![CDATA[]]></desc>
			<sql><![CDATA[
#if(${bl_dl} != 'mc')
--bl, dl
SELECT  CSTMS_BL_NO BL_NO
, BKG_NO BKG_NO
, BKG_NO A_BKG_NO 
, DECODE(@[in_bound],'I',DECODE(DECODE(TRIM(NVL(MST_BL_SEQ_NO,' ')),'',0,LENGTH(TRIM(NVL(MST_BL_SEQ_NO,' ')))),0,'N','Y'),' ') HIDDEN2 
, NVL(KR_BL_AMDT_STS_CD,' ') CORRECTION 
, CSTMS_DECL_TP_CD TP 
, NVL(BKG_CGO_TP_CD,' ') FE 
, DECODE(MF_SND_DT,NULL,'N','Y')  TR 
, NVL(MST_BL_SEQ_NO,' ')   MSN 
, NVL(POL_CD,' ') POL 
, NVL(POD_CD,' ') POD 
, NVL(PCK_QTY,0 ) PCK_QTY 
, NVL(PCK_TP_CD,' ') PCK_TP_CD 
, ROUND(NVL(CNTR_TTL_WGT,0),3) ACT_WGT 
, NVL(WGT_UT_CD,' ') WGT_UT_CD 
, ROUND(NVL(MEAS_QTY,0),3) MEAS_QTY 
, NVL(BL_MEAS_UT_CD,' ') MEAS_UT_CD
, CRS_CHK_RSLT_FLG
, CRS_CHK_RMK
, MF_DL_DIFF_FLG
, MF_SND_FLG
, DMST_PORT_CD
, '' PKG_VALUE 
, '' PKG_CODE 
, '' WGT_VALUE 
, '' WGT_CODE 
, '' MATCH 
, '' PRE_VVD 
, '' SHPR_N 
, '' SHPR_A 
, '' CNEE_N 
, '' CNEE_A 
, '' NTFY_N 
, '' NTFY_A 
, '' CNTR 
, DECODE(@[in_bound],'I',DECODE(DECODE(TRIM(NVL(BD_AREA_CD,' ')),'',0,LENGTH(TRIM(NVL(BD_AREA_CD,' ')))),0,'N','Y'),' ') BAC 
, DECODE(@[in_bound],'I',DECODE(DECODE(TRIM(NVL(KR_CSTMS_WH_TP_CD,' ')),'',0,LENGTH(TRIM(NVL(KR_CSTMS_WH_TP_CD,' ')))),0,'N',DECODE(DECODE(TRIM(NVL(KR_WH_CD,' ')),'',0,LENGTH(TRIM(NVL(KR_WH_CD,' ')))),0,'N','Y')),' ') WH 
, DECODE(DECODE(TRIM(NVL(CGO_DESC1,' ')),'',0,LENGTH(TRIM(NVL(CGO_DESC1,' ')))),0,'N','Y') DESC_CODE 
, DECODE(NVL(CMDT_CD,' '), ' ', 'N', 'Y') CM 
, DECODE(NVL(BIZ_RGST_NO,' '), ' ', 'N', 'Y') BZ 
, '' ELNO_A 
, '' ELNO_B 
, NVL(KR_CSTMS_BL_TP_CD,' ') SC 
, '' CUST_NAME 
, TRNS_SEQ HIDDEN3 
, TO_CHAR(TRUNC(NVL(CNTR_TTL_WGT,0),0),'FM00000000') HIDDEN4
, NVL(KR_CSTMS_BND_CD,'N')  HIDDEN5 
, TO_CHAR(NVL(TRUNC(NVL(PCK_QTY,0),0),0),'FM000000') HIDDEN6
, NVL(A.CSTMS_BL_NO,' ') C_BL_NO        /* 추가 */
, NVL(A.IB_MTY_BKG_NO,' ') IB_MTY_BKG_NO    /* 추가 */
, NVL(A.IB_MTY_BL_NO,' ') IB_MTY_BL_NO   /* 추가 */
, NVL(A.IB_TRNS_SEQ,0) IB_TRNS_SEQ        /* 추가 */
, NVL(A.IB_CSTMS_DECL_TP_CD,' ') IB_CSTMS_DECL_TP_CD     /* 추가 */
, NVL(A.IB_DMST_PORT_CD,' ') IB_DMST_PORT_CD    /* 추가 */
, NVL(A.IB_VSL_CD || A.IB_SKD_VOY_NO || A.IB_SKD_DIR_CD,' ') IB_VVD         /* 추가 */
, NVL(TRUNC(A.CRE_DT - A.IB_ETA_DT,0),0) DWELL_DT    /* 추가 */
, NVL(TO_CHAR(A.IB_ETA_DT,'YYYY-MM-DD'),' ') IB_ETA_DT    /* 추가 */

, NVL(A.BD_AREA_CD, ' ') BAC_NM                    /* 추가 */

FROM BKG_CSTMS_KR_BL A 
WHERE VSL_CD = SUBSTR(@[in_vvd],1,4) 
AND SKD_VOY_NO = SUBSTR(@[in_vvd],5,4) 
AND SKD_DIR_CD = SUBSTR(@[in_vvd],9,1) 
AND ((@[in_bound] = 'O' AND TS_POL_CD = @[in_pol]) OR (@[in_bound] = 'I' AND TS_POD_CD = @[in_pod])) 

AND ((
                LENGTH( DECODE(@[in_bound],'O', NVL(@[in_pol_tmnl],'aa'), NVL(@[in_pod_tmnl],'aa')) ) = 7 
                AND 
                DECODE(@[in_bound],'O', EVNT_YD_CD, PORT_TML_CD) = DECODE(@[in_bound],'O', @[in_pol_tmnl], @[in_pod_tmnl])
            )				
			 OR
			(
				LENGTH( DECODE(@[in_bound],'O', NVL(@[in_pol_tmnl],'aa'), NVL(@[in_pod_tmnl],'aa')) ) <> 7 
                and 
                LENGTH( NVL(DECODE(@[in_bound],'O', EVNT_YD_CD, PORT_TML_CD), 'aa') ) <> 7
            )

)
AND KR_CSTMS_BND_CD = @[sel_type]
AND DMST_PORT_CD = @[kt_port] 
AND CSTMS_BL_NO = NVL(@[in_blno], CSTMS_BL_NO)
AND BKG_NO = NVL(@[in_bkg_no], A.BKG_NO)
AND TRNS_SEQ = (SELECT MAX(TRNS_SEQ) 
FROM BKG_CSTMS_KR_BL 
WHERE BKG_NO = A.BKG_NO 
AND DMST_PORT_CD = A.DMST_PORT_CD 
AND VSL_CD = A.VSL_CD 
AND SKD_VOY_NO = A.SKD_VOY_NO 
AND SKD_DIR_CD = A.SKD_DIR_CD) 
AND NVL(DELT_FLG,' ') <> 'Y' 

#if (${bl_dl}== 'cr')
AND MF_DL_DIFF_FLG ='Y' 
--AND MF_SND_FLG ='N' 2012.08.09
#end


ORDER BY BL_NO, NVL(POL_CD,' '), NVL(POD_CD,' ')

#else
--mc
SELECT 
	A.BL_NO,
	A.BKG_NO BKG_NO,
	A.BKG_NO A_BKG_NO,
	B.BKG_NO B_BKG_NO,------빼기
	B.HIDDEN2,
	B.CORRECTION,
    NVL(B.TP,A.TP) TP, 
    NVL(B.FE,A.FE) FE, 
    B.TR, 
    B.MSN, 
    B.POL, 
    B.POD, 
    B.PCK_QTY, 
    B.PCK_TP_CD, 
    B.ACT_WGT, 
    B.WGT_UT_CD, 
    B.MEAS_QTY ,
    B.MEAS_UT_CD,
    B.CRS_CHK_RSLT_FLG,
B.CRS_CHK_RMK,
B.MF_DL_DIFF_FLG,
B.MF_SND_FLG,
B.DMST_PORT_CD,
B.PKG_VALUE ,
B.PKG_CODE ,
B.WGT_VALUE ,
B.WGT_CODE ,
B.MATCH ,
B.PRE_VVD ,
B.SHPR_N ,
B.SHPR_A ,
B.CNEE_N ,
B.CNEE_A ,
B.NTFY_N ,
B.NTFY_A ,
B.CNTR ,
B.BAC ,
B.WH ,
B.DESC_CODE , 
B.CM ,
B.BZ ,
B.ELNO_A ,
B.ELNO_B ,
B.SC ,
B.CUST_NAME ,
B.HIDDEN3 ,
B.HIDDEN4,
NVL(B.HIDDEN5,A.CREATEDTYPE)  HIDDEN5,
B.HIDDEN6,
B.C_BL_NO       ,
B.IB_MTY_BKG_NO   ,
B.IB_MTY_BL_NO   ,
B.IB_TRNS_SEQ     ,
B.IB_CSTMS_DECL_TP_CD   ,  
B.IB_DMST_PORT_CD   , 
B.IB_VVD       ,
B.DWELL_DT   ,
B.IB_ETA_DT    ,
B.BAC_NM          ,          

NVL(B.PCK_QTY_CHK,'Y') PCK_QTY_CHK,
NVL(B.PCK_TP_CD_CHK,'Y') PCK_TP_CD_CHK,
NVL(B.CNTR_TTL_WGT_CHK,'Y') CNTR_TTL_WGT_CHK,
NVL(B.WGT_UT_CD_CHK,'Y') WGT_UT_CD_CHK,
NVL(B.MEAS_QTY_CHK,'Y') MEAS_QTY_CHK,
NVL(B.MEAS_UT_CD_CHK,'Y') MEAS_UT_CD_CHK
FROM
     (
		SELECT NVL(B.BL_NO,' ') BL_NO
			 , NVL(B.BKG_NO,' ') BKG_NO
			 , NVL(B.BKG_NO,' ') A_BKG_NO
			 , NVL(C.MF_SEQ_NO,' ') MSN
			 , '' CORRECTION
			  --, DECODE(A.POL_CD,B.POL_CD,'E','R') TP
			 , CASE WHEN @[in_bound] = 'O'
       				THEN CASE WHEN A.POL_CD = B.POL_CD THEN 'E'
       				ELSE 'R' END
      			    WHEN @[in_bound] = 'I' THEN 
							CASE WHEN @[in_pod] = B.POD_CD AND B.BKG_CGO_TP_CD = 'P' THEN 'M'
								 WHEN A.POD_CD = B.POD_CD THEN 'I'
                                 ELSE 'T' END 
       			ELSE ' ' END TP
       
			, NVL(B.BKG_CGO_TP_CD,' ') FE
			, NVL(A.POL_CD,' ') HIDDEN1
			, NVL(A.POD_CD,' ') HIDDEN2
			, NVL(B.POL_CD,' ') POL_CD

       #if( ${in_bound} == 'I')
	        , NVL(B.POD_CD,' ') POD_CD 
       #else
          #if (${sel_type} !='A')
            , NVL(A.POD_CD,' ') POD_CD
          #else
		    , NVL(B.POD_CD,' ') POD_CD 
          #end  
       #end

			, TO_CHAR(NVL(D.PCK_QTY ,0),'FM000000') PCK_QTY
			, D.PCK_TP_CD PCK_TP_CD
			, TO_CHAR(TRUNC(NVL(D.ACT_WGT,0),0),'FM00000000') ACT_WGT
			, D.WGT_UT_CD WGT_UT_CD
			, TO_CHAR(NVL(D.MEAS_QTY,0),'FM00000000.000') MEAS_QTY
			, D.MEAS_UT_CD MEAS_UT_CD
		 	, A.VSL_CD
			,A.SKD_VOY_NO
			,A.SKD_DIR_CD

			, CASE WHEN @[in_bound] = 'O'
       			   THEN CASE WHEN A.POL_CD <> B.POL_CD THEN 'C'
                 			 WHEN SUBSTR(B.POD_CD,1,2) IN ('US','CA','MX','GT') AND B.BKG_CGO_TP_CD <> 'P' THEN 'A'
                 			 WHEN B.BKG_CGO_TP_CD = 'P' THEN 'M'
                 			ELSE 'B' END 
       			   WHEN @[in_bound] = 'I'
       				THEN CASE WHEN @[in_pod] = B.POD_CD AND B.BKG_CGO_TP_CD = 'P' THEN 'M'
                 			ELSE 'A' END
       		       END CREATEDTYPE

      FROM BKG_VVD A, BKG_BOOKING B, BKG_CSTMS_KR_MF_SEQ_NO C, BKG_BL_DOC D, BKG_CSTMS_CD_CONV_CTNT F
	  WHERE A.VSL_CD = SUBSTR(@[in_vvd],1,4)
		AND A.SKD_VOY_NO = SUBSTR(@[in_vvd],5,4)
		AND A.SKD_DIR_CD    = SUBSTR(@[in_vvd],9,1)

	#if (${in_bound} == 'O') 
		AND A.POL_CD LIKE @[in_pol]||'%'
	#else 
		AND A.POD_CD LIKE @[in_pod]||'%'
	#end


		AND DECODE(@[in_bound],'I',DECODE(LENGTH(NULL),7,A.POD_YD_CD,' '),' ')
		= DECODE(@[in_bound],'I',DECODE(LENGTH(NULL),7,NULL,' '),' ')
		AND A.BKG_NO = B.BKG_NO
		AND B.BKG_NO = D.BKG_NO
		AND B.BL_NO  > ' '
		AND B.BKG_STS_CD != 'X'
		AND B.BKG_STS_CD != 'S'
		AND B.BL_NO = NVL(@[in_blno],B.BL_NO)
		AND B.BKG_NO = C.BKG_NO(+)

	#if(${mrn_no}!='')
		AND C.MF_REF_NO(+) = @[mrn_no] 		
	#end
		AND F.CNT_CD(+) = 'KR'
		AND F.CSTMS_DIV_ID(+) = 'KOR_CSTM_CMDT'
		AND B.REP_CMDT_CD = F.ATTR_CTNT1(+)

	#if( ${sel_type} == 'A'||${sel_type} == 'B'||${sel_type} == 'C')
		AND B.BKG_CGO_TP_CD !='P'
	#end

	#if( ${sel_type} == 'M')
	   	AND B.BKG_CGO_TP_CD ='P'    
	#end

		ORDER BY NVL(B.BL_NO,' '), NVL(A.POL_CD,' '), NVL(A.POD_CD,' ') 

	) A, --A BKG_BOOKING TABLE 에서 구하는 부분 

    (
      
SELECT  CSTMS_BL_NO BL_NO
, BKG_NO BKG_NO
, BKG_NO A_BKG_NO 
, DECODE(@[in_bound],'I',DECODE(DECODE(TRIM(NVL(MST_BL_SEQ_NO,' ')),'',0,LENGTH(TRIM(NVL(MST_BL_SEQ_NO,' ')))),0,'N','Y'),' ') HIDDEN2 
, NVL(KR_BL_AMDT_STS_CD,' ') CORRECTION 
, CSTMS_DECL_TP_CD TP 
, NVL(BKG_CGO_TP_CD,' ') FE 
, DECODE(MF_SND_DT,NULL,'N','Y')  TR 
, NVL(MST_BL_SEQ_NO,' ')   MSN 
, NVL(POL_CD,' ') POL 
, NVL(POD_CD,' ') POD 
, NVL(PCK_QTY,0 ) PCK_QTY 
, NVL(PCK_TP_CD,' ') PCK_TP_CD 
, ROUND(NVL(CNTR_TTL_WGT,0),3) ACT_WGT 
, NVL(WGT_UT_CD,' ') WGT_UT_CD 
, ROUND(NVL(MEAS_QTY,0),3) MEAS_QTY 
, NVL(BL_MEAS_UT_CD,' ') MEAS_UT_CD
, CRS_CHK_RSLT_FLG
, CRS_CHK_RMK
, MF_DL_DIFF_FLG
, MF_SND_FLG
, DMST_PORT_CD
, '' PKG_VALUE 
, '' PKG_CODE 
, '' WGT_VALUE 
, '' WGT_CODE 
, '' MATCH 
, '' PRE_VVD 
, '' SHPR_N 
, '' SHPR_A 
, '' CNEE_N 
, '' CNEE_A 
, '' NTFY_N 
, '' NTFY_A 
, '' CNTR 
, DECODE(@[in_bound],'I',DECODE(DECODE(TRIM(NVL(BD_AREA_CD,' ')),'',0,LENGTH(TRIM(NVL(BD_AREA_CD,' ')))),0,'N','Y'),' ') BAC 
, DECODE(@[in_bound],'I',DECODE(DECODE(TRIM(NVL(KR_CSTMS_WH_TP_CD,' ')),'',0,LENGTH(TRIM(NVL(KR_CSTMS_WH_TP_CD,' ')))),0,'N',DECODE(DECODE(TRIM(NVL(KR_WH_CD,' ')),'',0,LENGTH(TRIM(NVL(KR_WH_CD,' ')))),0,'N','Y')),' ') WH 
, DECODE(DECODE(TRIM(NVL(CGO_DESC1,' ')),'',0,LENGTH(TRIM(NVL(CGO_DESC1,' ')))),0,'N','Y') DESC_CODE 
, DECODE(NVL(CMDT_CD,' '), ' ', 'N', 'Y') CM 
, DECODE(NVL(BIZ_RGST_NO,' '), ' ', 'N', 'Y') BZ 
, '' ELNO_A 
, '' ELNO_B 
, NVL(KR_CSTMS_BL_TP_CD,' ') SC 
, '' CUST_NAME 
, TRNS_SEQ HIDDEN3 
, TO_CHAR(TRUNC(NVL(CNTR_TTL_WGT,0),0),'FM00000000') HIDDEN4
, NVL(KR_CSTMS_BND_CD,'N')  HIDDEN5 
, TO_CHAR(NVL(TRUNC(NVL(PCK_QTY,0),0),0),'FM000000') HIDDEN6
, NVL(A.CSTMS_BL_NO,' ') C_BL_NO        /* 추가 */
, NVL(A.IB_MTY_BKG_NO,' ') IB_MTY_BKG_NO    /* 추가 */
, NVL(A.IB_MTY_BL_NO,' ') IB_MTY_BL_NO   /* 추가 */
, NVL(A.IB_TRNS_SEQ,0) IB_TRNS_SEQ        /* 추가 */
, NVL(A.IB_CSTMS_DECL_TP_CD,' ') IB_CSTMS_DECL_TP_CD     /* 추가 */
, NVL(A.IB_DMST_PORT_CD,' ') IB_DMST_PORT_CD    /* 추가 */
, NVL(A.IB_VSL_CD || A.IB_SKD_VOY_NO || A.IB_SKD_DIR_CD,' ') IB_VVD         /* 추가 */
, NVL(TRUNC(A.CRE_DT - A.IB_ETA_DT,0),0) DWELL_DT    /* 추가 */
, NVL(TO_CHAR(A.IB_ETA_DT,'YYYY-MM-DD'),' ') IB_ETA_DT    /* 추가 */

, NVL(A.BD_AREA_CD, ' ') BAC_NM                    /* 추가 */
, DECODE(NVL(TO_CHAR(A.mf_snd_dt,'YYYYMMDD'),'N'),'N','N',DECODE((SELECT SIGN(A.PCK_QTY - BL.PCK_QTY) FROM BKG_BL_DOC BL WHERE BL.BKG_NO = A.BKG_NO ),0,'N','Y')) PCK_QTY_CHK
, DECODE(NVL(TO_CHAR(A.mf_snd_dt,'YYYYMMDD'),'N'),'N','N',DECODE(NVL((SELECT 'N' FROM BKG_BL_DOC BL WHERE BL.BKG_NO = A.BKG_NO AND BL.PCK_TP_CD = A.PCK_TP_CD ),'Y'),'N','N','Y')) PCK_TP_CD_CHK
, DECODE(NVL(TO_CHAR(A.mf_snd_dt,'YYYYMMDD'),'N'),'N','N',DECODE((SELECT SIGN(TRUNC(A.CNTR_TTL_WGT,1) - TRUNC(BL.ACT_WGT,1)) FROM BKG_BL_DOC BL WHERE BL.BKG_NO = A.BKG_NO ),0,'N','Y')) CNTR_TTL_WGT_CHK
, DECODE(NVL(TO_CHAR(A.mf_snd_dt,'YYYYMMDD'),'N'),'N','N',DECODE(NVL((SELECT 'N' FROM BKG_BL_DOC BL WHERE BL.BKG_NO = A.BKG_NO AND BL.WGT_UT_CD = A.WGT_UT_CD ),'Y'),'N','N','Y')) WGT_UT_CD_CHK
, DECODE(NVL(TO_CHAR(A.mf_snd_dt,'YYYYMMDD'),'N'),'N','N',DECODE((SELECT SIGN(A.MEAS_QTY - BL.MEAS_QTY) FROM BKG_BL_DOC BL WHERE BL.BKG_NO = A.BKG_NO ),0,'N','Y')) MEAS_QTY_CHK
, DECODE(NVL(TO_CHAR(A.mf_snd_dt,'YYYYMMDD'),'N'),'N','N',DECODE(NVL((SELECT 'N' FROM BKG_BL_DOC BL WHERE BL.BKG_NO = A.BKG_NO AND BL.MEAS_UT_CD = A.BL_MEAS_UT_CD ),'Y'),'N','N','Y')) MEAS_UT_CD_CHK

        FROM BKG_CSTMS_KR_BL A
        WHERE VSL_CD = SUBSTR(@[in_vvd], 1, 4)
  		  AND SKD_VOY_NO = SUBSTR(@[in_vvd], 5, 4)
  		  AND SKD_DIR_CD = SUBSTR(@[in_vvd], 9, 1)
  		  AND ((@[in_bound] = 'O'  AND TS_POL_CD = @[in_pol])
           OR  (@[in_bound] = 'I'  AND TS_POD_CD = @[in_pod]))
          AND ((@[in_bound] = 'O'  AND NVL(PORT_TML_CD, ' ') LIKE '%')
           OR DECODE(LENGTH(@[in_pod_tmnl]), 7, PORT_TML_CD, ' ') = DECODE(LENGTH(@[in_pod_tmnl]), 7, @[in_pod_tmnl], ' '))
          AND ((@[in_bound] = 'O'  AND CSTMS_DECL_TP_CD IN ('E','R'))
           OR (@[in_bound] = 'I'  AND 
                #if (${sel_type} == 'A')
                    CSTMS_DECL_TP_CD = 'I'))
				#else
					CSTMS_DECL_TP_CD IN ('I','T'))) 
				#end
        #if (${sel_type} == 'M')
          AND KR_CSTMS_BND_CD='M'
         #end

          AND DMST_PORT_CD = @[kt_port] 
 		  AND CSTMS_BL_NO = NVL(@[in_blno], CSTMS_BL_NO)
  		  AND BKG_NO = NVL(@[in_bkg_no], A.BKG_NO)
  		  AND TRNS_SEQ = (
                          SELECT MAX(TRNS_SEQ)
    						FROM BKG_CSTMS_KR_BL
   						   WHERE BKG_NO = A.BKG_NO
     						 AND DMST_PORT_CD = A.DMST_PORT_CD
     						 AND VSL_CD = A.VSL_CD
     						 AND SKD_VOY_NO = A.SKD_VOY_NO
     						 AND SKD_DIR_CD = A.SKD_DIR_CD)
  		 AND NVL(DELT_FLG, ' ') <> 'Y'  
#if (${bl_dl}== 'mc')
AND NVL(KR_CSTMS_BL_TP_CD,' ') LIKE DECODE(@[sc],'C','C','S','S','%')
#end
      ) B

WHERE A.BKG_NO = B.BKG_NO(+)
AND A.TP = B.TP(+)
AND A.CREATEDTYPE LIKE DECODE( @[sel_type],'D','%','N','%',@[sel_type] )
#end			]]></sql>
			<params>
				<param name="in_bound" type="12" value="" out="N"/>
				<param name="in_vvd" type="12" value="" out="N"/>
				<param name="in_pol" type="12" value="" out="N"/>
				<param name="in_pod" type="12" value="" out="N"/>
				<param name="in_pol_tmnl" type="12" value="" out="N"/>
				<param name="in_pod_tmnl" type="12" value="" out="N"/>
				<param name="sel_type" type="12" value="" out="N"/>
				<param name="kt_port" type="12" value="" out="N"/>
				<param name="in_blno" type="12" value="" out="N"/>
				<param name="in_bkg_no" type="12" value="" out="N"/>
				<param name="mrn_no" type="12" value="" out="N"/>
				<param name="sc" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
