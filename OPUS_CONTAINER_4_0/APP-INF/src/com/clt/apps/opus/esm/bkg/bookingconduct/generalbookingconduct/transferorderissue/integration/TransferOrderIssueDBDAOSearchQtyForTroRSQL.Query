<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TransferOrderIssueDBDAOSearchQtyForTroRSQL">
			<desc><![CDATA[ESM_BKG_0079_02A sum_qty]]></desc>
			<sql><![CDATA[
SELECT CNTR_TPSZ_CD 
     , MAX(TOTAL_QTY) TOTAL_QTY
     , SUM(TRO_QTY) TRO_QTY
     , SUM(TRO_QTY_CH) TRO_QTY_CH
     , SUM(TRO_QTY_MH) TRO_QTY_MH
  FROM (
		SELECT QTY.CNTR_TPSZ_CD
			, NVL(CEIL(QTY.OP_CNTR_QTY), 0) TOTAL_QTY
			, NVL(SUM(GE_TRO.TRO_QTY), 0) TRO_QTY
			, 0 TRO_QTY_CH
			, 0 TRO_QTY_MH
		FROM BKG_QUANTITY QTY
		   , BKG_TRO_DTL GE_TRO
		WHERE QTY.BKG_NO       = GE_TRO.BKG_NO(+)
		  AND QTY.CNTR_TPSZ_CD = GE_TRO.CNTR_TPSZ_CD(+)
		  AND 'N'              = GE_TRO.RTN_TRO_FLG(+)
		  AND 'N'              = GE_TRO.CXL_FLG(+)
		  AND GE_TRO.IO_BND_CD(+) = @[io_bnd_cd]
		  AND QTY.BKG_NO          = @[bkg_no] 
	      AND NOT EXISTS (SELECT 'Y' FROM TRS_TRSP_SVC_ORD SO
                		  WHERE 1=1
		                  AND GE_TRO.BKG_NO      = SO.BKG_NO
         		          AND GE_TRO.TRO_SEQ     = SO.TRO_SEQ
                		  AND GE_TRO.TRO_SUB_SEQ = SO.TRO_SUB_SEQ
	                      AND 'O'                = SO.TRSP_BND_CD
						  AND 'N'                = SO.DELT_FLG
						  AND 'Y'                = SO.TRSP_FRST_FLG
						  AND 'DR'               = SO.TRSP_COST_DTL_MOD_CD
						  AND ROWNUM =1 
						 )
		GROUP BY QTY.CNTR_TPSZ_CD, QTY.OP_CNTR_QTY
		UNION ALL
		SELECT QTY.CNTR_TPSZ_CD ,
       		   NVL(QTY.OP_CNTR_QTY, 0) TOTAL_QTY ,
		       0 TRO_QTY ,
		       SUM(DECODE(EU_TRO.HLG_TP_CD, 'C', 1, 0)) TRO_QTY_CH ,
		       SUM(DECODE(EU_TRO.HLG_TP_CD, 'M', 1, 0)) TRO_QTY_MH
			   FROM BKG_QUANTITY QTY ,
		       (SELECT EUR.BKG_NO,
		               EUR.HLG_TP_CD,
		               DECODE(FLX.CNT, 1, DECODE(SUBSTR(EUR.CNTR_TPSZ_CD,1,1), 'D', FLX.TPSZ, EUR.CNTR_TPSZ_CD), EUR.CNTR_TPSZ_CD) CNTR_TPSZ_CD
			           FROM BKG_EUR_TRO EUR,
		               (SELECT BB.BKG_NO,
		                       BQ.CNTR_TPSZ_CD TPSZ,
		                       COUNT(1) OVER(PARTITION BY BB.BKG_NO) CNT
	  	                  FROM BKG_BOOKING BB,
		                       BKG_QUANTITY BQ
		                 WHERE BB.BKG_NO = @[bkg_no]
		                   AND BB.BKG_NO = BQ.BKG_NO
		                   AND BB.FLEX_HGT_FLG = 'Y'
		                   AND BQ.CNTR_TPSZ_CD IN ('D4', 'D5')) FLX
		         WHERE EUR.BKG_NO = @[bkg_no]
        		   AND EUR.BKG_NO = FLX.BKG_NO(+)
           		   AND FLX.CNT(+) = 1 
		           AND EUR.CXL_FLG = 'N'
		           AND EUR.EUR_TRNS_TP_CD IS NULL
		           AND EUR.IO_BND_CD = @[io_bnd_cd]
	           ) EU_TRO
		 WHERE QTY.BKG_NO = EU_TRO.BKG_NO(+)
		   AND QTY.CNTR_TPSZ_CD = EU_TRO.CNTR_TPSZ_CD(+)
		   AND QTY.BKG_NO = @[bkg_no]
		 GROUP BY QTY.CNTR_TPSZ_CD, QTY.OP_CNTR_QTY
       )
 GROUP BY CNTR_TPSZ_CD
 -- ORDER BY CNTR_TPSZ_CD
 -- KOR추가 요건에 따른 조회 로직 추가 
UNION ALL
SELECT GE_TRO.CNTR_TPSZ_CD CNTR_TPSZ_CD
	, 0 TOTAL_QTY
	, NVL(SUM(GE_TRO.TRO_QTY), 0) TRO_QTY
	, 0 TRO_QTY_CH
	, 0 TRO_QTY_MH
  FROM BKG_QUANTITY QTY
		, BKG_TRO_DTL GE_TRO
  WHERE GE_TRO.BKG_NO  = QTY.BKG_NO(+)
   	AND GE_TRO.CNTR_TPSZ_CD NOT IN (SELECT CNTR_TPSZ_CD FROM BKG_QUANTITY WHERE BKG_NO = @[bkg_no] )
	AND 'N'              = GE_TRO.RTN_TRO_FLG
	AND 'N'              = GE_TRO.CXL_FLG
	AND GE_TRO.IO_BND_CD = @[io_bnd_cd]
	AND GE_TRO.BKG_NO    = @[bkg_no] 
	GROUP BY  GE_TRO.CNTR_TPSZ_CD, QTY.OP_CNTR_QTY
	ORDER BY CNTR_TPSZ_CD			]]></sql>
			<params>
				<param name="io_bnd_cd" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
