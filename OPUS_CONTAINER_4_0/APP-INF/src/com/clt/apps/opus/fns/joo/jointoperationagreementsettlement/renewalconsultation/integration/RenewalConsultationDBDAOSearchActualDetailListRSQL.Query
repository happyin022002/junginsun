<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RenewalConsultationDBDAOSearchActualDetailListRSQL">
			<desc><![CDATA[Actual Detail Search.]]></desc>
			<sql><![CDATA[
WITH V_DATA AS (
    SELECT '1' AS DATA_TP_CD
         , INV.INV_NO
         , INV.CSR_NO
         , INV.APRO_FLG
         , INV.RE_DIVR_CD
         , INV.JO_STL_ITM_CD
         , INV.LOCL_CURR_CD
         , INV.JO_CRR_CD
         , INV.ACCTG_CRR_CD
         , INV.REV_VVD
         , INV.RLANE_CD
         , SUM(INV.INV_ACT_AMT) AS INV_ACT_AMT
         , SUM(INV.SLP_ACT_AMT) AS SLP_ACT_AMT
         , INV.STL_RMK
         , INV.UPD_USR_ID
         , INV.UPD_DT
         , COUNT(INV.INV_NO) AS EXIST_CNT 
      FROM (
            SELECT INV.*
                 , NVL(CSR.APRO_FLG,'N') AS APRO_FLG
                 , CSR.SLP_TP_CD||CSR.SLP_FUNC_CD||CSR.SLP_OFC_CD||CSR.SLP_ISS_DT||CSR.SLP_SER_NO AS CSR_NO
                 , SLP.CSR_LOCL_AMT AS SLP_ACT_AMT
              FROM (SELECT INV.INV_NO
                         , INV.RE_DIVR_CD
                         , INV.LOCL_CURR_CD
                         , INV.JO_CRR_CD
                         , INV.ACCTG_CRR_CD
                         , DTL.VSL_CD||DTL.SKD_VOY_NO||DTL.SKD_DIR_CD||DTL.REV_DIR_CD AS REV_VVD
                         , DTL.ACT_AMT AS INV_ACT_AMT
                         , DTL.STL_RMK
                         , STL.JO_STL_ITM_CD
                         , STL.RLANE_CD
                         , DTL.VSL_CD
                         , DTL.SKD_VOY_NO
                         , DTL.SKD_DIR_CD
                         , DTL.REV_DIR_CD
                         , DTL.REV_YRMON
                         , DTL.STL_VVD_SEQ
                         , DTL.UPD_USR_ID
                         , DTL.UPD_DT
                         , INV.SLP_TP_CD
                         , INV.SLP_FUNC_CD
                         , INV.SLP_OFC_CD
                         , INV.SLP_ISS_DT
                         , INV.SLP_SER_NO
                      FROM JOO_INVOICE INV
                         , JOO_INV_DTL DTL
                         , JOO_STL_TGT STL
                     WHERE 1=1
                       AND INV.ACCT_YRMON   BETWEEN REPLACE(@[fr_acct_yrmon],'-') AND REPLACE(@[to_acct_yrmon],'-')
#if (${acctg_crr_cd} != '') 
                       AND INV.ACCTG_CRR_CD = @[acctg_crr_cd]
#end
#if (${inv_no} != '') 
                       AND INV.INV_NO       = @[inv_no]
#end
#if (${jo_stl_itm_cds} != '' && ${jo_stl_itm_cds} != 'ALL')
                       AND STL.JO_STL_ITM_CD IN ( #foreach($key IN ${jo_stl_itm_cds})#if($velocityCount < $jo_stl_itm_cds.size()) '$key', #else '$key' #end #end)
#end
#if (${stl_vvd_seq} != '') 
                       AND EXISTS (SELECT 'Y'
                                     FROM JOO_INV_DTL D
                                    WHERE 1=1
                                      AND D.VSL_CD||D.SKD_VOY_NO||D.SKD_DIR_CD||D.REV_DIR_CD = @[rev_vvd]
                                      AND D.REV_YRMON   = @[rev_yrmon]
                                      AND D.STL_VVD_SEQ = @[stl_vvd_seq]
                                      AND D.INV_NO      = DTL.INV_NO
                                      )
#end
                       AND INV.ACCT_YRMON   = DTL.ACCT_YRMON
                       AND INV.JO_CRR_CD    = DTL.JO_CRR_CD
                       AND INV.INV_NO       = DTL.INV_NO
                       AND INV.RE_DIVR_CD   = DTL.RE_DIVR_CD
                       AND DTL.VSL_CD       = STL.VSL_CD
                       AND DTL.SKD_VOY_NO   = STL.SKD_VOY_NO
                       AND DTL.SKD_DIR_CD   = STL.SKD_DIR_CD
                       AND DTL.REV_DIR_CD   = STL.REV_DIR_CD
                       AND DTL.REV_YRMON    = STL.REV_YRMON
                       AND DTL.STL_VVD_SEQ  = STL.STL_VVD_SEQ ) INV
                 , JOO_CSR CSR
                 , JOO_SLIP SLP
             WHERE 1=1
               AND INV.SLP_TP_CD        = CSR.SLP_TP_CD (+)
               AND INV.SLP_FUNC_CD      = CSR.SLP_FUNC_CD(+)
               AND INV.SLP_OFC_CD       = CSR.SLP_OFC_CD(+)
               AND INV.SLP_ISS_DT       = CSR.SLP_ISS_DT(+)
               AND INV.SLP_SER_NO       = CSR.SLP_SER_NO(+)
               AND INV.SLP_TP_CD        = SLP.SLP_TP_CD(+)
               AND INV.SLP_FUNC_CD      = SLP.SLP_FUNC_CD(+)
               AND INV.SLP_OFC_CD       = SLP.SLP_OFC_CD(+)
               AND INV.SLP_ISS_DT       = SLP.SLP_ISS_DT(+)
               AND INV.SLP_SER_NO       = SLP.SLP_SER_NO(+)
               AND INV.VSL_CD           = SLP.VSL_CD(+)
               AND INV.SKD_VOY_NO       = SLP.SKD_VOY_NO(+)
               AND INV.SKD_DIR_CD       = SLP.SKD_DIR_CD(+)
               AND INV.REV_DIR_CD       = SLP.REV_DIR_CD(+)
               AND INV.REV_YRMON        = SLP.REV_YRMON(+)
               AND INV.STL_VVD_SEQ      = SLP.STL_VVD_SEQ(+)
               AND SLP.DR_CR_CD         (+)= 'DR'
           ) INV
     WHERE 1=1
     GROUP BY INV.INV_NO
         , INV.CSR_NO
         , INV.APRO_FLG
         , INV.RE_DIVR_CD
         , INV.JO_STL_ITM_CD
         , INV.LOCL_CURR_CD
         , INV.JO_CRR_CD
         , INV.ACCTG_CRR_CD
         , INV.REV_VVD
         , INV.RLANE_CD
         , INV.STL_RMK
         , INV.UPD_USR_ID
         , INV.UPD_DT
    )
SELECT DECODE(INV.DATA_TP_CD, '2', 'Subtotal', '3', 'Total', INV.INV_NO) AS INV_NO
     , INV.CSR_NO
     , INV.APRO_FLG
     , DECODE(INV.DATA_TP_CD, '1', INV.RE_DIVR_CD, NULL) AS RE_DIVR_CD
     , INV.JO_STL_ITM_CD
     , INV.LOCL_CURR_CD
     , INV.JO_CRR_CD
     , INV.ACCTG_CRR_CD
     , INV.REV_VVD
     , INV.RLANE_CD
     , INV.INV_ACT_AMT
     , INV.SLP_ACT_AMT
     , INV.STL_RMK
     , INV.UPD_USR_ID
     , INV.UPD_DT
  FROM (
        SELECT '1' AS DATA_TP_CD
         , INV.INV_NO
         , INV.CSR_NO
         , INV.APRO_FLG
         , INV.RE_DIVR_CD
         , INV.JO_STL_ITM_CD
         , INV.LOCL_CURR_CD
         , INV.JO_CRR_CD
         , INV.ACCTG_CRR_CD
         , INV.REV_VVD
         , INV.RLANE_CD
         , INV.INV_ACT_AMT
         , INV.SLP_ACT_AMT
         , INV.STL_RMK
         , INV.UPD_USR_ID
         , INV.UPD_DT
         FROM V_DATA INV
        UNION ALL
        SELECT '2'  AS DATA_TP_CD
             , INV_NO
             , NULL AS CSR_NO
             , NULL AS APRO_FLG
             , RE_DIVR_CD
             , NULL AS JO_STL_ITM_CD
             , NULL AS LOCL_CURR_CD
             , NULL AS JO_CRR_CD
             , NULL AS ACCTG_CRR_CD
             , NULL AS REV_VVD
             , NULL AS RLANE_CD
             , SUM(INV_ACT_AMT) AS INV_ACT_AMT
             , SUM(SLP_ACT_AMT) AS SLP_ACT_AMT
             , NULL AS STL_RMK
             , NULL AS UPD_USR_ID
             , NULL AS UPD_DT
          FROM V_DATA
        GROUP BY INV_NO, RE_DIVR_CD 
        UNION ALL
        SELECT '3' AS DATA_TP_CD
             , INV.INV_NO
             , INV.CSR_NO
             , INV.APRO_FLG
             , INV.RE_DIVR_CD
             , INV.JO_STL_ITM_CD
             , INV.LOCL_CURR_CD
             , INV.JO_CRR_CD
             , INV.ACCTG_CRR_CD
             , INV.REV_VVD
             , INV.RLANE_CD
             , INV.INV_ACT_AMT
             , INV.SLP_ACT_AMT
             , INV.STL_RMK
             , INV.UPD_USR_ID
             , INV.UPD_DT
          FROM (
                SELECT '3'  AS DATA_TP_CD
                     , NULL AS INV_NO
                     , NULL AS CSR_NO
                     , NULL AS APRO_FLG
                     , NULL AS RE_DIVR_CD
                     , NULL AS JO_STL_ITM_CD
                     , NULL AS LOCL_CURR_CD
                     , NULL AS JO_CRR_CD
                     , NULL AS ACCTG_CRR_CD
                     , NULL AS REV_VVD
                     , NULL AS RLANE_CD
                     , SUM(INV_ACT_AMT) AS INV_ACT_AMT
                     , SUM(SLP_ACT_AMT) AS SLP_ACT_AMT
                     , NULL AS STL_RMK
                     , NULL AS UPD_USR_ID
                     , NULL AS UPD_DT
                     , MAX (EXIST_CNT) AS EXIST_CNT
                  FROM V_DATA 
                ) INV
         WHERE EXIST_CNT > 0
        ) INV
 WHERE 1=1
  ORDER BY 
       INV.INV_NO
     , INV.RE_DIVR_CD DESC
     , INV.DATA_TP_CD
     , INV.CSR_NO
     , INV.APRO_FLG
     , INV.JO_STL_ITM_CD
     , INV.LOCL_CURR_CD
     , INV.JO_CRR_CD
     , INV.ACCTG_CRR_CD
     , INV.REV_VVD
     , INV.RLANE_CD			]]></sql>
			<params>
				<param name="fr_acct_yrmon" type="12" value="" out="N"/>
				<param name="to_acct_yrmon" type="12" value="" out="N"/>
				<param name="acctg_crr_cd" type="12" value="" out="N"/>
				<param name="inv_no" type="12" value="" out="N"/>
				<param name="rev_vvd" type="12" value="" out="N"/>
				<param name="rev_yrmon" type="12" value="" out="N"/>
				<param name="stl_vvd_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
