<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOCreSlotHireByG6gaRSQL">
			<desc><![CDATA[G6GA Create
[2015.07.21]Virtual Add Calling 처리. VSK_VSL_PORT_SKD.NVL(VT_ADD_CALL_FLG, 'N') = 'N']]></desc>
			<sql><![CDATA[
WITH V_BSA AS (
        SELECT C.VSL_CD
             , C.SKD_VOY_NO
             , C.SKD_DIR_CD
             , C.RLANE_CD
             , C.BSA_OP_JB_CD
             , C.CRR_BSA_CAPA AS BSA_QTY
#if (${jo_stl_itm_cd} != '' && ${jo_stl_itm_cd} == 'OPR' && ${sch_tp_cd} != 'P')
             , C.OP_SLT_PRC_CAPA AS BSA_SLT_PRC
             , C.OP_CRR_PERF_AMT AS STL_LOCL_AMT
#else
		 	 , C.SLT_PRC_CAPA AS BSA_SLT_PRC
 		 	 , C.CRR_PERF_AMT AS STL_LOCL_AMT
#end
          FROM BSA_VVD_CRR_PERF C
         WHERE 1 = 1
#if(${re_divr_cd} =='R')
           AND C.BSA_OP_JB_CD IN ('001','002','004')
#elseif(${re_divr_cd} =='E')
           AND C.BSA_OP_JB_CD IN ('000','003','005')
#end
#if (${jo_stl_itm_cd} != '' && ${jo_stl_itm_cd} == 'OPR' && ${sch_tp_cd} != 'P') 
		   AND (C.CRR_BSA_CAPA <> 0 OR C.OP_SLT_PRC_CAPA <> 0) /*OPR*/
#else
           AND (C.CRR_BSA_CAPA <> 0OR C.SLT_PRC_CAPA <> 0) /*S/H*/
#end
           AND C.CRR_CD 	= @[jo_crr_cd]
           AND C.TRD_CD 	= @[trd_cd]
           AND C.RLANE_CD 	= @[rlane_cd] 
    )
--SELECT * FROM V_BSA;
     , V_VVD_ETA AS (
        SELECT J.ACCT_YRMON
             , J.STL_VVD_SEQ
             , 0 AS STL_SEQ
             , J.TRD_CD
             , J.JO_CRR_CD
             , J.RLANE_CD
             , J.RE_DIVR_CD
             , J.JO_STL_ITM_CD
             , J.JO_MNU_NM
             , J.VSL_CD
             , J.SKD_VOY_NO
             , J.SKD_DIR_CD
             , J.REV_DIR_CD
             , J.STL_BZC_PORT_CD
             , TO_CHAR(J.BZC_PORT_ETA_DT,'YYYYMMDDHH24MISS') ETA_DT
#if (${jo_stl_itm_cd} != '' && ${jo_stl_itm_cd} == 'OPR' && ${sch_tp_cd} != 'P')
			 , DECODE(C.BSA_OP_JB_CD,'000','104','001','104','002','105','003','105','004','106','005','106') JO_STL_JB_CD /*OPR*/
#else
             , DECODE(C.BSA_OP_JB_CD,'000','101','001','101','002','102','003','102','004','103','005','103') JO_STL_JB_CD /*S/H*/
#end
             , C.BSA_QTY
             , C.BSA_SLT_PRC
             , C.STL_LOCL_AMT
             , F.LOCL_CURR_CD
             , 'N' AS STL_ADJ_FLG
             , 'Y' AS STL_LST_FLG
             , J.UC_BSS_PORT_CD
             , TO_CHAR(J.UC_BSS_PORT_ETD_DT,'YYYYMMDDHH24MISS') AS UC_BSS_PORT_ETD_DT
             , 'N' AS RVS_CMB_FLG
             , (SELECT TO_CHAR(MIN(X.VPS_ETA_DT),'YYYYMMDDHH24MISS')
                  FROM VSK_VSL_PORT_SKD X
                 WHERE 1=1
                   AND X.VSL_CD = J.VSL_CD
                   AND X.SKD_VOY_NO = J.SKD_VOY_NO
                   AND X.SKD_DIR_CD = J.SKD_DIR_CD
                   AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
                   AND NVL(X.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 Add*/) AS ST_DT
             , NVL((SELECT TO_CHAR(MIN(VPS_ETA_DT) ,'YYYYMMDDHH24MISS')
                      FROM VSK_VSL_PORT_SKD VSK
                     WHERE 1=1
                       AND VSK.VSL_CD = J.VSL_CD
                       AND VSK.SKD_VOY_NO = J.SKD_VOY_NO
                       AND VSK.SKD_DIR_CD = J.SKD_DIR_CD
                       AND NVL(VSK.SKD_CNG_STS_CD,'X') <> 'S'
                       AND VSK.TURN_PORT_IND_CD IN ('D','V','F')
                       AND NVL(VSK.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 Add*/) 
                  ,(SELECT TO_CHAR(MAX(VPS_ETA_DT) ,'YYYYMMDDHH24MISS')
                      FROM VSK_VSL_PORT_SKD VSK
                     WHERE 1=1
                       AND VSK.VSL_CD = J.VSL_CD
                       AND VSK.SKD_VOY_NO = J.SKD_VOY_NO
                       AND VSK.SKD_DIR_CD = J.SKD_DIR_CD
                       AND NVL(VSK.SKD_CNG_STS_CD,'X') <> 'S'
                       AND VSK.TURN_PORT_IND_CD NOT IN ('D','V','F')
                       AND NVL(VSK.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 Add*/)
               ) AS END_DT
             , NULL AS SAIL_DYS
          FROM JOO_STL_VVD J
             , V_BSA C
             , JOO_FINC_MTX F
         WHERE 1=1
           AND J.ACCT_YRMON    	= REPLACE(@[acct_yrmon],'-','')
           AND J.JO_CRR_CD      = @[jo_crr_cd]
           AND J.RE_DIVR_CD     = @[re_divr_cd]
           AND J.TRD_CD         = @[trd_cd]
           AND J.RLANE_CD       = @[rlane_cd]
           AND J.JO_STL_CFM_CD  = 'Y'
           AND J.JO_STL_ITM_CD  = @[jo_stl_itm_cd]
           AND J.JO_MNU_NM      = @[jo_mnu_nm]
           AND J.VSL_CD         = C.VSL_CD (+)
           AND J.SKD_VOY_NO     = C.SKD_VOY_NO (+)
           AND J.SKD_DIR_CD     = C.SKD_DIR_CD (+)
           AND J.RLANE_CD       = C.RLANE_CD (+)
           AND J.JO_CRR_CD      = F.JO_CRR_CD (+)
           AND J.RLANE_CD       = F.RLANE_CD (+)
           AND J.RE_DIVR_CD     = F.RE_DIVR_CD (+)
           AND J.JO_MNU_NM      = F.JO_STL_ITM_CD (+) 
    )
--SELECT * FROM V_VVD_ETA;
 
/* VVD 별 From - To 기간을 월별로 나누어 주는 쿼리입니다. VVD 별 전체에서 최소월 ~ 최대월을 구한뒤에 조인하는 부분입닏.*/
     , V_VVD_DATES AS (
        SELECT A.ACCT_YRMON
             , A.STL_VVD_SEQ
             , A.STL_SEQ
             , A.TRD_CD
             , A.JO_CRR_CD
             , A.RLANE_CD
             , A.RE_DIVR_CD
             , A.JO_STL_ITM_CD
             , A.JO_MNU_NM
             , A.VSL_CD
             , A.SKD_VOY_NO
             , A.SKD_DIR_CD
             , A.REV_DIR_CD
             , A.STL_BZC_PORT_CD
             , A.ETA_DT
             , A.JO_STL_JB_CD
             , A.BSA_QTY
             , A.BSA_SLT_PRC
             , A.STL_LOCL_AMT
             , A.LOCL_CURR_CD
             , A.STL_ADJ_FLG
             , A.STL_LST_FLG
             , A.UC_BSS_PORT_CD
             , A.UC_BSS_PORT_ETD_DT
             , A.RVS_CMB_FLG
             , A.ST_DT
             , A.END_DT
             , ROUND((TO_DATE(A.END_DT,'YYYYMMDDHH24MISS') + 0.00001 - TO_DATE(A.ST_DT,'YYYYMMDDHH24MISS')),3) AS SAIL_DYS
             , A.ESTM_YRMON
             , A.ORG_ST_DT
             , A.ORG_END_DT
             , ROUND((TO_DATE(A.ORG_END_DT,'YYYYMMDDHH24MISS') + 0.00001 - TO_DATE(A.ORG_ST_DT,'YYYYMMDDHH24MISS')),3) AS ORG_SAIL_DYS
          FROM (SELECT A.ACCT_YRMON
                     , A.STL_VVD_SEQ
                     , 0 AS STL_SEQ
                     , A.TRD_CD
                     , A.JO_CRR_CD
                     , A.RLANE_CD
                     , A.RE_DIVR_CD
                     , A.JO_STL_ITM_CD
                     , A.JO_MNU_NM
                     , A.VSL_CD
                     , A.SKD_VOY_NO
                     , A.SKD_DIR_CD
                     , A.REV_DIR_CD
                     , A.STL_BZC_PORT_CD
                     , A.ETA_DT
                     , A.JO_STL_JB_CD /*S/H*/
                     , A.BSA_QTY
                     , A.BSA_SLT_PRC
                     , A.STL_LOCL_AMT
                     , A.LOCL_CURR_CD
                     , A.STL_ADJ_FLG
                     , A.STL_LST_FLG
                     , A.UC_BSS_PORT_CD
                     , A.UC_BSS_PORT_ETD_DT
                     , A.RVS_CMB_FLG
                     , A.ST_DT AS ORG_ST_DT
                     , A.END_DT AS ORG_END_DT
                     , B.DATES AS ESTM_YRMON
                     , CASE WHEN SUBSTR(A.ST_DT, 1,6) = B.DATES THEN B.DATES||SUBSTR(A.ST_DT,7)
                            ELSE B.DATES||'01000000'
                       END AS ST_DT
                     , CASE WHEN SUBSTR(A.END_DT, 1,6) = B.DATES THEN B.DATES||SUBSTR(A.END_DT,7)
                            ELSE TO_CHAR(LAST_DAY(TO_DATE(B.DATES,'YYYYMM')),'YYYYMMDD') ||'235959'
                       END AS END_DT
                  FROM V_VVD_ETA A
                     , (SELECT TO_CHAR(ADD_MONTHS(TO_DATE(A.MIN_YM,'YYYYMM'),LEVEL-1),'YYYYMM') AS DATES
                          FROM (SELECT MIN(SUBSTR(A.ST_DT,1,6)) MIN_YM
                                     , MAX(SUBSTR(A.END_DT,1,6)) MAX_YM
                                  FROM V_VVD_ETA A 
                                ) A 
                        CONNECT BY LEVEL <= MONTHS_BETWEEN(ADD_MONTHS(TO_DATE(A.MAX_YM,'YYYYMM'), 1), TO_DATE(A.MIN_YM, 'YYYYMM')) 
                       ) B
                 WHERE B.DATES BETWEEN SUBSTR(A.ST_DT,1,6) AND SUBSTR(A.END_DT,1,6) 
            ) A 
    )
--SELECT * FROM V_VVD_DATES;
SELECT A.*
  FROM (
        SELECT 'R' AS IBFLAG
             , A.ACCT_YRMON
             , A.STL_VVD_SEQ
             , A.STL_SEQ
             , A.TRD_CD
             , A.JO_CRR_CD
             , A.RLANE_CD
             , A.RE_DIVR_CD
             , A.JO_STL_ITM_CD
             , A.JO_MNU_NM
             , A.VSL_CD
             , A.SKD_VOY_NO
             , A.SKD_DIR_CD
             , A.REV_DIR_CD
             , A.STL_BZC_PORT_CD
             , TO_CHAR(A.ETA_DT,'YYYYMMDDHH24MISS') ETA_DT
             , A.JO_STL_JB_CD
             , A.BSA_QTY
             , A.BSA_SLT_PRC
             , A.STL_LOCL_AMT
             , A.LOCL_CURR_CD
             , A.ADJ_BSA_QTY_LOCL_AMT
             , A.ADJ_BSA_SLT_PRC_LOCL_AMT
             , A.STL_USD_AMT
             , A.IOC_CD
             , A.SCONTI_CD
             , A.FNL_OWN_BSA_QTY
             , A.FNL_BSA_WGT
             , A.USD_SLT_BSA_QTY
             , A.USD_SLT_WGT
             , A.BSA_PER_WGT
             , A.FM_PORT_CD
             , A.TO_PORT_CD
             , A.RF_SCG_STL_TP_CD
             , A.RF_SCG_PRC
             , A.STL_RMK
             , A.CMB_CFM_FLG
             , B.STL_CMB_SEQ
             , A.STL_TJ_NO
             , A.STL_ADJ_FLG
             , A.PRE_ACCT_YRMON
             , A.PRE_STL_VVD_SEQ
             , A.PRE_STL_SEQ
             , A.STL_LST_FLG
             , A.UC_BSS_PORT_CD
             , TO_CHAR(A.UC_BSS_PORT_ETD_DT,'YYYYMMDDHH24MISS') AS UC_BSS_PORT_ETD_DT
             , B.SLIP_NO AS CRE_DT
             , NVL(B.RVS_CMB_FLG,'N') AS RVS_CMB_FLG
             , TO_CHAR(A.ST_DT , 'YYYYMMDDHH24MI') AS ST_DT
             , TO_CHAR(A.END_DT, 'YYYYMMDDHH24MI') AS END_DT
             , A.SAIL_DYS
          FROM JOO_SETTLEMENT A
             , (SELECT B.ACCT_YRMON
                     , B.STL_VVD_SEQ
                     , B.STL_SEQ
                     , B.STL_CMB_SEQ
                     , '' AS SLIP_NO
                     , A.RVS_CMB_FLG
                     , A.RJCT_CMB_FLG
                  FROM JOO_STL_CMB A
                     , JOO_STL_CMB_DTL B
                 WHERE A.ACCT_YRMON     = B.ACCT_YRMON
                   AND A.JO_CRR_CD      = B.JO_CRR_CD
                   AND A.STL_CMB_SEQ    = B.STL_CMB_SEQ
                   AND A.RE_DIVR_CD     = B.RE_DIVR_CD
                   AND A.ACCT_YRMON     = REPLACE(@[acct_yrmon],'-','')
                   AND A.JO_CRR_CD      = @[jo_crr_cd]
                   AND A.RE_DIVR_CD     = @[re_divr_cd] 
               ) B
         WHERE A.ACCT_YRMON             = B.ACCT_YRMON (+)
           AND A.STL_VVD_SEQ            = B.STL_VVD_SEQ(+)
           AND A.STL_SEQ                = B.STL_SEQ (+)
           AND A.ACCT_YRMON             = REPLACE(@[acct_yrmon],'-','')
           AND A.JO_CRR_CD              = @[jo_crr_cd]
           AND A.RE_DIVR_CD             = @[re_divr_cd]
           AND A.TRD_CD                 = @[trd_cd]
           AND A.RLANE_CD               = @[rlane_cd]
           AND A.JO_STL_ITM_CD          = @[jo_stl_itm_cd]
           AND A.JO_MNU_NM              = @[jo_mnu_nm]
           AND NVL(A.STL_ADJ_FLG,'N')   = 'N'
           AND A.ST_DT IS NOT NULL
           AND A.END_DT IS NOT NULL
           AND A.SAIL_DYS IS NOT NULL
         UNION ALL
        SELECT 'I' AS IBFLAG
             , A.ACCT_YRMON
             , A.STL_VVD_SEQ
             , A.STL_SEQ
             , A.TRD_CD
             , A.JO_CRR_CD
             , A.RLANE_CD
             , A.RE_DIVR_CD
             , A.JO_STL_ITM_CD
             , A.JO_MNU_NM
             , A.VSL_CD
             , A.SKD_VOY_NO
             , A.SKD_DIR_CD
             , A.REV_DIR_CD
             , A.STL_BZC_PORT_CD
             , A.ETA_DT
             , A.JO_STL_JB_CD
             , A.BSA_QTY
             , A.BSA_SLT_PRC
             , CASE WHEN SUBSTR(A.END_DT,1,6) = SUBSTR(A.ORG_END_DT,1,6) AND A.ORG_STL_LOCL_AMT != A.NOW_STL_LOCL_AMT THEN ROUND(A.STL_LOCL_AMT + (A.ORG_STL_LOCL_AMT - A.NOW_STL_LOCL_AMT), 3)
                    ELSE A.STL_LOCL_AMT
               END STL_LOCL_AMT
             , A.LOCL_CURR_CD
             , A.ADJ_BSA_QTY_LOCL_AMT
             , A.ADJ_BSA_SLT_PRC_LOCL_AMT
             , A.STL_USD_AMT
             , A.IOC_CD
             , A.SCONTI_CD
             , A.FNL_OWN_BSA_QTY
             , A.FNL_BSA_WGT
             , A.USD_SLT_BSA_QTY
             , A.USD_SLT_WGT
             , A.BSA_PER_WGT
             , A.FM_PORT_CD
             , A.TO_PORT_CD
             , A.RF_SCG_STL_TP_CD
             , A.RF_SCG_PRC
             , A.STL_RMK
             , A.CMB_CFM_FLG
             , A.STL_CMB_SEQ
             , A.STL_TJ_NO
             , A.STL_ADJ_FLG
             , A.PRE_ACCT_YRMON
             , A.PRE_STL_VVD_SEQ
             , A.PRE_STL_SEQ
             , A.STL_LST_FLG
             , A.UC_BSS_PORT_CD
             , A.UC_BSS_PORT_ETD_DT
             , A.CRE_DT
             , A.RVS_CMB_FLG
             , TO_CHAR(TO_DATE(A.ST_DT,'YYYYMMDDHH24MISS') , 'YYYYMMDDHH24MI') AS ST_DT
             , TO_CHAR(TO_DATE(A.END_DT,'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MI') AS END_DT
             , A.SAIL_DYS
            --, A.ORG_ST_DT
            --, A.ORG_END_DT
            --, A.ORG_SAIL_DYS
            --, A.ORG_STL_LOCL_AMT
          FROM (SELECT ACCT_YRMON
                     , STL_VVD_SEQ
                     , STL_SEQ
                     , TRD_CD
                     , JO_CRR_CD
                     , RLANE_CD
                     , RE_DIVR_CD
                     , JO_STL_ITM_CD
                     , JO_MNU_NM
                     , VSL_CD
                     , SKD_VOY_NO
                     , SKD_DIR_CD
                     , REV_DIR_CD
                     , STL_BZC_PORT_CD
                     , ETA_DT
                     , JO_STL_JB_CD
                     , BSA_QTY
                     , BSA_SLT_PRC
                     , ST_DT
                     , END_DT
                     , SAIL_DYS
                     , ORG_ST_DT
                     , ORG_END_DT
                     , ORG_SAIL_DYS
                     , ORG_STL_LOCL_AMT
                     , STL_LOCL_AMT
                     , SUM(STL_LOCL_AMT) OVER (PARTITION BY ACCT_YRMON, STL_VVD_SEQ, TRD_CD, JO_CRR_CD, RLANE_CD, RE_DIVR_CD, JO_STL_ITM_CD, JO_MNU_NM, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, REV_DIR_CD, STL_BZC_PORT_CD, JO_STL_JB_CD
                                                   ORDER BY ACCT_YRMON, STL_VVD_SEQ, TRD_CD, JO_CRR_CD, RLANE_CD, RE_DIVR_CD, JO_STL_ITM_CD, JO_MNU_NM, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, REV_DIR_CD, STL_BZC_PORT_CD, JO_STL_JB_CD) AS NOW_STL_LOCL_AMT
                     , LOCL_CURR_CD
                     , ADJ_BSA_QTY_LOCL_AMT
                     , ADJ_BSA_SLT_PRC_LOCL_AMT
                     , STL_USD_AMT
                     , IOC_CD
                     , SCONTI_CD
                     , FNL_OWN_BSA_QTY
                     , FNL_BSA_WGT
                     , USD_SLT_BSA_QTY
                     , USD_SLT_WGT
                     , BSA_PER_WGT
                     , FM_PORT_CD
                     , TO_PORT_CD
                     , RF_SCG_STL_TP_CD
                     , RF_SCG_PRC
                     , STL_RMK
                     , CMB_CFM_FLG
                     , STL_CMB_SEQ
                     , STL_TJ_NO
                     , STL_ADJ_FLG
                     , PRE_ACCT_YRMON
                     , PRE_STL_VVD_SEQ
                     , PRE_STL_SEQ
                     , STL_LST_FLG
                     , UC_BSS_PORT_CD
                     , UC_BSS_PORT_ETD_DT
                     , CRE_DT
                     , RVS_CMB_FLG
                  FROM (SELECT J.ACCT_YRMON
                             , J.STL_VVD_SEQ
                             , J.STL_SEQ
                             , J.TRD_CD
                             , J.JO_CRR_CD
                             , J.RLANE_CD
                             , J.RE_DIVR_CD
                             , J.JO_STL_ITM_CD
                             , J.JO_MNU_NM
                             , J.VSL_CD
                             , J.SKD_VOY_NO
                             , J.SKD_DIR_CD
                             , J.REV_DIR_CD
                             , J.STL_BZC_PORT_CD
                             , J.ETA_DT
                             , J.JO_STL_JB_CD 
                             , J.BSA_QTY
                             , J.BSA_SLT_PRC
                             , J.STL_LOCL_AMT AS ORG_STL_LOCL_AMT
                             , ROUND(NVL(J.STL_LOCL_AMT,0) * ( J.SAIL_DYS / J.ORG_SAIL_DYS ), 3) AS STL_LOCL_AMT
                             , J.LOCL_CURR_CD
                             , J.STL_ADJ_FLG
                             , J.STL_LST_FLG
                             , J.UC_BSS_PORT_CD
                             , J.UC_BSS_PORT_ETD_DT
                             , '' AS CRE_DT
                             , J.RVS_CMB_FLG
                             , J.ST_DT
                             , J.END_DT
                             , J.SAIL_DYS
                             , J.ORG_ST_DT
                             , J.ORG_END_DT
                             , J.ORG_SAIL_DYS
                             , NULL AS ADJ_BSA_QTY_LOCL_AMT
                             , NULL AS ADJ_BSA_SLT_PRC_LOCL_AMT
                             , NULL AS STL_USD_AMT
                             , NULL AS IOC_CD
                             , NULL AS SCONTI_CD
                             , NULL AS FNL_OWN_BSA_QTY
                             , NULL AS FNL_BSA_WGT
                             , NULL AS USD_SLT_BSA_QTY
                             , NULL AS USD_SLT_WGT
                             , NULL AS BSA_PER_WGT
                             , NULL AS FM_PORT_CD
                             , NULL AS TO_PORT_CD
                             , NULL AS RF_SCG_STL_TP_CD
                             , NULL AS RF_SCG_PRC
                             , NULL AS STL_RMK
                             , NULL AS CMB_CFM_FLG
                             , NULL AS STL_CMB_SEQ
                             , NULL AS STL_TJ_NO
                             , NULL AS PRE_ACCT_YRMON
                             , NULL AS PRE_STL_VVD_SEQ
                             , NULL AS PRE_STL_SEQ
                          FROM V_VVD_DATES J
                         WHERE 1=1
                           AND NOT EXISTS ( SELECT 1
                                              FROM JOO_SETTLEMENT X
                                                 , (SELECT Y.ACCT_YRMON
                                                         , Y.STL_VVD_SEQ
                                                         , Y.STL_SEQ
                                                         , Z.RVS_CMB_FLG
                                                      FROM JOO_STL_CMB_DTL Y
                                                         , JOO_STL_CMB Z
                                                     WHERE Y.ACCT_YRMON = Z.ACCT_YRMON
                                                       AND Y.JO_CRR_CD = Z.JO_CRR_CD
                                                       AND Y.STL_CMB_SEQ= Z.STL_CMB_SEQ
                                                       AND Y.RE_DIVR_CD = Z.RE_DIVR_CD ) Y
                                             WHERE X.ACCT_YRMON = Y.ACCT_YRMON (+)
                                               AND X.STL_VVD_SEQ = Y.STL_VVD_SEQ (+)
                                               AND X.STL_SEQ = Y.STL_SEQ (+)
                                               AND X.ACCT_YRMON = J.ACCT_YRMON
                                               AND X.TRD_CD = J.TRD_CD
                                               AND X.JO_CRR_CD = J.JO_CRR_CD
                                               AND X.RE_DIVR_CD = J.RE_DIVR_CD
                                               AND X.RLANE_CD = J.RLANE_CD
                                               AND X.JO_STL_ITM_CD = J.JO_STL_ITM_CD
                                               AND X.JO_MNU_NM = J.JO_MNU_NM
                                               AND X.VSL_CD = J.VSL_CD
                                               AND X.SKD_VOY_NO = J.SKD_VOY_NO
                                               AND X.SKD_DIR_CD = J.SKD_DIR_CD
                                               AND X.REV_DIR_CD = J.REV_DIR_CD
                                               AND X.JO_STL_JB_CD = J.JO_STL_JB_CD
                                               AND NVL(Y.RVS_CMB_FLG,'N') = 'N'
                                               AND X.ST_DT IS NOT NULL
                                               AND X.END_DT IS NOT NULL
                                               AND X.SAIL_DYS IS NOT NULL 
                                            )
                         ORDER BY J.ACCT_YRMON
                             , J.STL_VVD_SEQ
                             , J.STL_SEQ
                             , J.TRD_CD
                             , J.JO_CRR_CD
                             , J.RLANE_CD
                             , J.RE_DIVR_CD
                             , J.JO_STL_ITM_CD
                             , J.JO_MNU_NM
                             , J.VSL_CD
                             , J.SKD_VOY_NO
                             , J.SKD_DIR_CD
                             , J.REV_DIR_CD
                             , J.STL_BZC_PORT_CD
                             , J.JO_STL_JB_CD 
                        ) 
                ) A 
        ) A
 ORDER BY A.SKD_DIR_CD
     , A.VSL_CD
     , A.SKD_VOY_NO
     , A.REV_DIR_CD
     , A.JO_STL_JB_CD
     , A.ST_DT			]]></sql>
			<params>
				<param name="jo_crr_cd" type="12" value="" out="N"/>
				<param name="trd_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="acct_yrmon" type="12" value="" out="N"/>
				<param name="re_divr_cd" type="12" value="" out="N"/>
				<param name="jo_stl_itm_cd" type="12" value="" out="N"/>
				<param name="jo_mnu_nm" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
