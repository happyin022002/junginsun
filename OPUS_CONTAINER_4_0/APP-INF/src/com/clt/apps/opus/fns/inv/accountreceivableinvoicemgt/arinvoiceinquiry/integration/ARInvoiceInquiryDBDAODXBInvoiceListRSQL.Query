<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ARInvoiceInquiryDBDAODXBInvoiceListRSQL">
			<desc><![CDATA[(DXBBB) INV B/L List]]></desc>
			<sql><![CDATA[
SELECT ROW_NO
      ,INV_NO
      ,VVD
      ,CUST_CD
      ,BL_SRC_NO
      ,CHG_CD
      ,IO_BND_CD
      ,PORT_CD
      ,SVC_SCP_CD
      --,INV_SPLIT_CD
      ,USD_XCH_RT
      ,INV_ISS_TP_CD 
      --,AR_IF_NO   
      ,CURR_CD
      ,CHG_AMT
	  ,INV_XCH_RT
	  ,LCL_AMT
      ,AR_OFC_CD            
  FROM (SELECT DENSE_RANK() OVER (ORDER BY (A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD)
                                          ,(A.ACT_CUST_CNT_CD||'-'||TO_CHAR(A.ACT_CUST_SEQ,'FM000000'))
                                          ,IO_BND_CD
                                          ,DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD)
                                          ,A.SVC_SCP_CD
                                          --,NVL(DECODE(A.INV_SPLIT_CD, 'C','*', A.INV_SPLIT_CD),'*')
										  --,DECODE(A.INV_SPLIT_CD, 'S', TO_CHAR(ROWNUM), A.INV_SPLIT_CD)
                                          --,A.USD_XCH_RT
											) || '1' ROW_NO
              ,DENSE_RANK() OVER (ORDER BY (A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD)
                                          ,(A.ACT_CUST_CNT_CD||'-'||TO_CHAR(A.ACT_CUST_SEQ,'FM000000'))
                                          ,IO_BND_CD
                                          ,DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD)
                                          ,A.SVC_SCP_CD
                                          --,NVL(DECODE(A.INV_SPLIT_CD, 'C','*', A.INV_SPLIT_CD),'*')
										  --,DECODE(A.INV_SPLIT_CD, 'S', TO_CHAR(ROWNUM), A.INV_SPLIT_CD)
                                          --,A.USD_XCH_RT
											) INV_NO
              ,(A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD) VVD
              ,(A.ACT_CUST_CNT_CD||'-'||TO_CHAR(A.ACT_CUST_SEQ,'FM000000')) CUST_CD
              --,MAX(A.BL_SRC_NO) BL_SRC_NO
			  ,A.BL_SRC_NO BL_SRC_NO
              ,G.CHG_CD
              ,A.IO_BND_CD
              ,DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD) PORT_CD
              ,A.SVC_SCP_CD
              --,NVL(DECODE(A.INV_SPLIT_CD, 'C','*', A.INV_SPLIT_CD),'*') INV_SPLIT_CD
			  --,DECODE(A.INV_SPLIT_CD, 'S', TO_CHAR(ROWNUM), A.INV_SPLIT_CD) INV_SPLIT_CD
              ,A.USD_XCH_RT
              ,I.INV_ISS_TP_CD 
              --,A.AR_IF_NO   
              ,G.CURR_CD
              ,TO_CHAR(SUM(G.CHG_AMT)) CHG_AMT
			  ,TO_CHAR(G.INV_XCH_RT) INV_XCH_RT
			  ,SUM(G.INV_XCH_RT*G.CHG_AMT) LCL_AMT
              ,A.AR_OFC_CD              
          FROM INV_AR_MN A
              ,MDM_CUSTOMER F  
              ,INV_AR_CHG G    
              ,INV_AR_STUP_OFC I
         WHERE A.AR_OFC_CD = @[ar_ofc_cd2]
#if (${bl_nos} != '') 
		   AND A.BL_SRC_NO IN (${bl_nos})
#end
#if (${from_dt} != '' && ${to_dt} != '') 
	#if (${dt_option} == 'G') 
		   AND A.BL_INV_CFM_DT BETWEEN REPLACE(@[from_dt],'-','') AND REPLACE(@[to_dt],'-','')
	#else
	   	   AND A.UPD_DT >= TO_DATE(REPLACE(@[from_dt],'-',''), 'YYYYMMDD') AND A.UPD_DT < TO_DATE(REPLACE(@[to_dt],'-',''), 'YYYYMMDD') + 1
		   AND A.UPD_USR_ID = @[user_id]
	#end  
#end                                                           
#if (${cust_cnt_cd} != '') 
           AND A.ACT_CUST_CNT_CD = @[cust_cnt_cd]
#end
#if (${cust_seq} != '') 
           AND A.ACT_CUST_SEQ = @[cust_seq]
#end
#if (${if_user_id} != '') 
           AND A.UPD_USR_ID = @[if_user_id]
#end
#if (${vvd} != '') 
           AND A.VSL_CD = SUBSTR(@[vvd], 1, 4)
           AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4) 
           AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
#end
#if (${port} != '') 
           AND DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD) = @[port]
#end
#if (${scp} != '') 
           AND A.SVC_SCP_CD = @[scp]
#end
#if (${bnd} != 'A' && ${bnd} != '')     
           AND A.IO_BND_CD = @[bnd]
#end
#if (${rev_type} != '')
	#if (${rev_type} == 'M')     
   	AND A.REV_TP_CD = 'M'
	#elseif (${rev_type} == 'F')     
   	AND A.REV_TP_CD <> 'M'
	#end
#end
           AND A.AR_IF_NO = G.AR_IF_NO
#if (${inv_dup_flg} != 'Y') 
           AND A.INV_ISS_FLG = 'N'   
#end
           AND A.AR_OFC_CD = I.AR_OFC_CD
           AND NVL(A.INV_DELT_DIV_CD, 'N') <> 'Y' 
           AND NOT EXISTS (SELECT 'X'
                             FROM INV_AR_MN
                            WHERE BL_SRC_NO = A.BL_SRC_NO
                              AND AR_OFC_CD = A.AR_OFC_CD
                              AND BL_INV_CFM_DT IS NULL
							  AND NVL(INV_DELT_DIV_CD, 'N') <> 'Y')
           AND NOT EXISTS (SELECT 'X'
                             FROM INV_AR_MN
                            WHERE BL_SRC_NO = A.BL_SRC_NO
                              AND AR_OFC_CD = A.AR_OFC_CD
                              AND USD_XCH_RT = 0
                              AND NVL(INV_DELT_DIV_CD, 'N') <> 'Y'
#if (${inv_dup_flg} != 'Y')
                              AND INV_ISS_FLG = 'N'
#end
                  )
           AND A.ACT_CUST_CNT_CD||A.ACT_CUST_SEQ NOT IN (SELECT DECODE(A.REV_TP_CD||A.REV_SRC_CD,'MTH','XX', S2.REP_CUST_CNT_CD||S2.REP_CUST_SEQ)
                                                           FROM INV_AR_STUP_OFC S1
                                                               ,MDM_ORGANIZATION S2
                                                          WHERE S1.AR_OFC_CD = @[ar_ofc_cd2]
                                                            AND S1.OTS_SMRY_CD <> 'BL'
                                                            AND S1.AR_OFC_CD = S2.AR_OFC_CD
                                                            AND S2.REP_CUST_CNT_CD IS NOT NULL
                                                            AND S2.REP_CUST_SEQ IS NOT NULL
                                                            AND S2.DELT_FLG = 'N')
           AND A.ACT_CUST_CNT_CD = F.CUST_CNT_CD
           AND A.ACT_CUST_SEQ    = F.CUST_SEQ
           AND NVL(F.CNTR_DIV_FLG, 'N') = 'Y'
           AND F.DELT_FLG <> 'Y'
#if (${ots_smry_cd} == 'BL')
           AND EXISTS (SELECT 'X'
                         FROM INV_AR_MN MN, INV_AR_CHG CHG
                        WHERE MN.BL_SRC_NO = A.BL_SRC_NO
                          AND MN.AR_OFC_CD = A.AR_OFC_CD
                          AND MN.ACT_CUST_CNT_CD = A.ACT_CUST_CNT_CD
                          AND MN.ACT_CUST_SEQ    = A.ACT_CUST_SEQ
                          AND MN.VSL_CD          = A.VSL_CD
                          AND MN.SKD_VOY_NO      = A.SKD_VOY_NO
                          AND MN.SKD_DIR_CD      = A.SKD_DIR_CD
                          AND MN.IO_BND_CD       = A.IO_BND_CD
                          AND MN.USD_XCH_RT      = A.USD_XCH_RT
                          AND DECODE(MN.IO_BND_CD, 'I', MN.POD_CD, MN.POL_CD) = DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD)
                          AND MN.SVC_SCP_CD = A.SVC_SCP_CD
                          AND MN.AR_IF_NO   = CHG.AR_IF_NO
                          AND NVL(DECODE(MN.INV_SPLIT_CD, 'C','*', MN.INV_SPLIT_CD),'*') = NVL(DECODE(A.INV_SPLIT_CD, 'C','*', A.INV_SPLIT_CD),'*')						  
                        GROUP BY MN.BL_SRC_NO, MN.ACT_CUST_CNT_CD,MN.ACT_CUST_SEQ,
                                 MN.VSL_CD ,MN.SKD_VOY_NO,  MN.SKD_DIR_CD,
                                 MN.IO_BND_CD,MN.USD_XCH_RT, DECODE(MN.IO_BND_CD, 'I', MN.POD_CD, MN.POL_CD),
                                 MN.SVC_SCP_CD,
                                 CHG.CURR_CD, CHG.CHG_CD,
                                 NVL(DECODE(MN.INV_SPLIT_CD, 'C','*', MN.INV_SPLIT_CD),'*')								 
                       HAVING SUM(CHG.CHG_AMT) <> 0 )
#end
         GROUP BY A.ACT_CUST_CNT_CD
                 ,A.ACT_CUST_SEQ
                 ,A.VSL_CD
                 ,A.SKD_VOY_NO
                 ,A.SKD_DIR_CD
                 ,A.IO_BND_CD
                 ,DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD)
                 ,A.SVC_SCP_CD
                 --,NVL(DECODE(A.INV_SPLIT_CD, 'C','*', A.INV_SPLIT_CD),'*')
				 --,DECODE(A.INV_SPLIT_CD, 'S', TO_CHAR(ROWNUM), A.INV_SPLIT_CD)
                 ,A.USD_XCH_RT
                 ,I.INV_ISS_TP_CD
                 --,A.AR_IF_NO
				 ,A.BL_SRC_NO
                 ,G.CHG_CD
                 ,G.CURR_CD
				 ,G.INV_XCH_RT
                 ,A.AR_OFC_CD
				HAVING SUM(G.INV_XCH_RT*G.CHG_AMT) <> 0
UNION ALL
        SELECT ROW_NO
              ,INV_NO
              ,'INV TOTAL' VVD
              ,' ' CUST_CD
              ,' ' BL_SRC_NO
              ,' ' CHG_CD
              ,'' IO_BND_CD
              ,'' PORT_CD
              ,'' SVC_SCP_CD
              --,'' INV_SPLIT_CD
              ,0 USD_XCH_RT
              ,'' INV_ISS_TP_CD 
              --,'' AR_IF_NO   
              ,'' CURR_CD
              ,'' CHG_AMT
			  ,'' INV_XCH_RT
			  ,SUM(LCL_AMT) LCL_AMT
              ,'' AR_OFC_CD         
          FROM (SELECT DENSE_RANK() OVER (ORDER BY (A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD)
                                                  ,(A.ACT_CUST_CNT_CD||'-'||TO_CHAR(A.ACT_CUST_SEQ,'FM000000'))
                                                  ,IO_BND_CD
                                                  ,DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD)
                                                  ,A.SVC_SCP_CD
                                                  --,NVL(DECODE(A.INV_SPLIT_CD, 'C','*', A.INV_SPLIT_CD),'*')
												  --,DECODE(A.INV_SPLIT_CD, 'S', TO_CHAR(ROWNUM), A.INV_SPLIT_CD)
                                                  --,A.USD_XCH_RT
													) || '2' ROW_NO
                      ,DENSE_RANK() OVER (ORDER BY (A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD)
                                                  ,(A.ACT_CUST_CNT_CD||'-'||TO_CHAR(A.ACT_CUST_SEQ,'FM000000'))
                                                  ,IO_BND_CD
                                                  ,DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD)
                                                  ,A.SVC_SCP_CD
                                                  --,NVL(DECODE(A.INV_SPLIT_CD, 'C','*', A.INV_SPLIT_CD),'*')
												  --,DECODE(A.INV_SPLIT_CD, 'S', TO_CHAR(ROWNUM), A.INV_SPLIT_CD)
                                                  --,A.USD_XCH_RT
													) INV_NO
                      ,(A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD) VVD
                      ,(A.ACT_CUST_CNT_CD||'-'||TO_CHAR(A.ACT_CUST_SEQ,'FM000000')) CUST_CD
                      ,A.IO_BND_CD
                      ,DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD) PORT_CD
                      ,A.SVC_SCP_CD
                      --,NVL(DECODE(A.INV_SPLIT_CD, 'C','*', A.INV_SPLIT_CD),'*') INV_SPLIT_CD
					  --,DECODE(A.INV_SPLIT_CD, 'S', TO_CHAR(ROWNUM), A.INV_SPLIT_CD) INV_SPLIT_CD
                      ,A.USD_XCH_RT
                      ,I.INV_ISS_TP_CD 
                      ,A.AR_IF_NO   
                      ,MAX(A.BL_SRC_NO) BL_SRC_NO
                      ,G.CHG_CD
                      ,G.CURR_CD
                      ,SUM(G.CHG_AMT) CHG_AMT
					  ,G.INV_XCH_RT
			  		  ,SUM(G.INV_XCH_RT*G.CHG_AMT) LCL_AMT
                      ,A.AR_OFC_CD              
                  FROM INV_AR_MN A
                      ,MDM_CUSTOMER F  
                      ,INV_AR_CHG G    
                      ,INV_AR_STUP_OFC I
                 WHERE A.AR_OFC_CD = @[ar_ofc_cd2]
#if (${bl_nos} != '') 
		           AND A.BL_SRC_NO IN (${bl_nos})
#end
#if (${from_dt} != '' && ${to_dt} != '') 
	#if (${dt_option} == 'G') 
		           AND A.BL_INV_CFM_DT BETWEEN REPLACE(@[from_dt],'-','') AND REPLACE(@[to_dt],'-','')
	#else
	               AND A.UPD_DT >= TO_DATE(REPLACE(@[from_dt],'-',''), 'YYYYMMDD') AND A.UPD_DT < TO_DATE(REPLACE(@[to_dt],'-',''), 'YYYYMMDD') + 1
				   AND A.UPD_USR_ID = @[user_id]
	#end  
#end                                                           
#if (${cust_cnt_cd} != '') 
                   AND A.ACT_CUST_CNT_CD = @[cust_cnt_cd]
#end
#if (${cust_seq} != '') 
                   AND A.ACT_CUST_SEQ = @[cust_seq]
#end
#if (${if_user_id} != '') 
                   AND A.UPD_USR_ID = @[if_user_id]
#end
#if (${vvd} != '') 
                   AND A.VSL_CD = SUBSTR(@[vvd], 1, 4)
                   AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4) 
                   AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
#end
#if (${port} != '') 
                   AND DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD) = @[port]
#end
#if (${scp} != '') 
                   AND A.SVC_SCP_CD = @[scp]
#end
#if (${bnd} != 'A' && ${bnd} != '')     
                   AND A.IO_BND_CD = @[bnd]
#end
#if (${rev_type} != '')
	#if (${rev_type} == 'M')     
   	AND A.REV_TP_CD = 'M'
	#elseif (${rev_type} != 'M')     
   	AND A.REV_TP_CD <> 'M'
	#end
#end
                   AND A.AR_IF_NO = G.AR_IF_NO
#if (${inv_dup_flg} != 'Y') 
                   AND A.INV_ISS_FLG = 'N'   
#end
                   AND A.AR_OFC_CD = I.AR_OFC_CD
                   AND NVL(A.INV_DELT_DIV_CD, 'N') <> 'Y' 
                   AND NOT EXISTS (SELECT 'X'
                                     FROM INV_AR_MN
                                    WHERE BL_SRC_NO = A.BL_SRC_NO
                                      AND AR_OFC_CD = A.AR_OFC_CD
                                      AND BL_INV_CFM_DT IS NULL
                                      AND NVL(INV_DELT_DIV_CD, 'N') <> 'Y')
                   AND NOT EXISTS (SELECT 'X'
                                     FROM INV_AR_MN
                                    WHERE BL_SRC_NO = A.BL_SRC_NO
                                      AND AR_OFC_CD = A.AR_OFC_CD
                                      AND USD_XCH_RT = 0
                                      AND NVL(INV_DELT_DIV_CD, 'N') <> 'Y'
#if (${inv_dup_flg} != 'Y')
                                      AND INV_ISS_FLG = 'N'
#end
                  )
                   AND A.ACT_CUST_CNT_CD||A.ACT_CUST_SEQ NOT IN (SELECT DECODE(A.REV_TP_CD||A.REV_SRC_CD,'MTH','XX', S2.REP_CUST_CNT_CD||S2.REP_CUST_SEQ)
                                                                   FROM INV_AR_STUP_OFC S1
                                                                       ,MDM_ORGANIZATION S2
                                                                  WHERE S1.AR_OFC_CD = @[ar_ofc_cd2]
                                                                    AND S1.OTS_SMRY_CD <> 'BL'
                                                                    AND S1.AR_OFC_CD = S2.AR_OFC_CD
                                                                    AND S2.REP_CUST_CNT_CD IS NOT NULL
                                                                    AND S2.REP_CUST_SEQ IS NOT NULL
                                                                    AND S2.DELT_FLG = 'N')
                   AND A.ACT_CUST_CNT_CD = F.CUST_CNT_CD
                   AND A.ACT_CUST_SEQ    = F.CUST_SEQ
                   AND NVL(F.CNTR_DIV_FLG, 'N') = 'Y'
                   AND F.DELT_FLG <> 'Y'
#if (${ots_smry_cd} == 'BL')
                   AND EXISTS (SELECT 'X'
                                 FROM INV_AR_MN MN, INV_AR_CHG CHG
                                WHERE MN.BL_SRC_NO = A.BL_SRC_NO
                                  AND MN.AR_OFC_CD = A.AR_OFC_CD
                                  AND MN.ACT_CUST_CNT_CD = A.ACT_CUST_CNT_CD
                                  AND MN.ACT_CUST_SEQ    = A.ACT_CUST_SEQ
                                  AND MN.VSL_CD          = A.VSL_CD
                                  AND MN.SKD_VOY_NO      = A.SKD_VOY_NO
                                  AND MN.SKD_DIR_CD      = A.SKD_DIR_CD
                                  AND MN.IO_BND_CD       = A.IO_BND_CD
                                  AND MN.USD_XCH_RT      = A.USD_XCH_RT
                                  AND DECODE(MN.IO_BND_CD, 'I', MN.POD_CD, MN.POL_CD) = DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD)
                                  AND MN.SVC_SCP_CD = A.SVC_SCP_CD
                                  AND MN.AR_IF_NO   = CHG.AR_IF_NO
                                  AND NVL(DECODE(MN.INV_SPLIT_CD, 'C','*', MN.INV_SPLIT_CD),'*') = NVL(DECODE(A.INV_SPLIT_CD, 'C','*', A.INV_SPLIT_CD),'*')
                                GROUP BY MN.BL_SRC_NO, MN.ACT_CUST_CNT_CD,MN.ACT_CUST_SEQ,
                                         MN.VSL_CD ,MN.SKD_VOY_NO,  MN.SKD_DIR_CD,
                                         MN.IO_BND_CD,MN.USD_XCH_RT, DECODE(MN.IO_BND_CD, 'I', MN.POD_CD, MN.POL_CD),
                                         MN.SVC_SCP_CD,
                                         CHG.CURR_CD, CHG.CHG_CD,
                                         NVL(DECODE(MN.INV_SPLIT_CD, 'C','*', MN.INV_SPLIT_CD),'*')
                               HAVING SUM(CHG.CHG_AMT) <> 0 )
#end
                 GROUP BY A.ACT_CUST_CNT_CD
                         ,A.ACT_CUST_SEQ
                         ,A.VSL_CD
                         ,A.SKD_VOY_NO
                         ,A.SKD_DIR_CD
                         ,A.IO_BND_CD
                         ,DECODE(A.IO_BND_CD, 'I', A.POD_CD, A.POL_CD)
                         ,A.SVC_SCP_CD
                         --,NVL(DECODE(A.INV_SPLIT_CD, 'C','*', A.INV_SPLIT_CD),'*')
						 --,DECODE(A.INV_SPLIT_CD, 'S', TO_CHAR(ROWNUM), A.INV_SPLIT_CD)
                         ,A.USD_XCH_RT
                         ,I.INV_ISS_TP_CD
                         ,A.AR_IF_NO
                         ,G.CHG_CD
                         ,G.CURR_CD
						 ,G.INV_XCH_RT
                         ,A.AR_OFC_CD)
          GROUP BY ROW_NO, INV_NO
			HAVING SUM(LCL_AMT) <> 0)
 ORDER BY INV_NO, ROW_NO, VVD, CUST_CD, BL_SRC_NO, CHG_CD			]]></sql>
			<params>
				<param name="ar_ofc_cd2" type="12" value="" out="N"/>
				<param name="from_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="user_id" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="if_user_id" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="port" type="12" value="" out="N"/>
				<param name="scp" type="12" value="" out="N"/>
				<param name="bnd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
