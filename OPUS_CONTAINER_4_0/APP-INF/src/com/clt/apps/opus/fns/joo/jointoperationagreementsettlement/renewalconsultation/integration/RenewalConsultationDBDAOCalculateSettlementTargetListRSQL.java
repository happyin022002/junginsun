/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : RenewalConsultationDBDAOCalculateSettlementTargetListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.08.01
*@LastModifier : 
*@LastVersion : 1.0
* 2016.08.01 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.fns.joo.jointoperationagreementsettlement.renewalconsultation.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class RenewalConsultationDBDAOCalculateSettlementTargetListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Settlement Target Create
	  * </pre>
	  */
	public RenewalConsultationDBDAOCalculateSettlementTargetListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("jo_crr_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rlane_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("re_divr_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rev_vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fr_rev_yrmon",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("auth_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("to_rev_yrmon",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.fns.joo.jointoperationagreementsettlement.renewalconsultation.integration").append("\n"); 
		query.append("FileName : RenewalConsultationDBDAOCalculateSettlementTargetListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("/*" ).append("\n"); 
		query.append("1. 레코드 정책" ).append("\n"); 
		query.append(" - Rev VVD/Lane : AR_MST_REV_VVD" ).append("\n"); 
		query.append(" - Carrier/Item/Rev,Exp/Currency : Carrier & Item : JOO_FIC_MTX" ).append("\n"); 
		query.append("   > JOO_STL_ITM.JO_MNL_CRE_FLG = 'N' : S/H, OPR" ).append("\n"); 
		query.append("   > JOO_STL_ITM.JO_MNL_CRE_FLG = 'Y' : S/H, OPR를 제외한 Item" ).append("\n"); 
		query.append("2. Create settlement" ).append("\n"); 
		query.append("    1st : estimate" ).append("\n"); 
		query.append("    2nd : settlement target Data." ).append("\n"); 
		query.append("    3th : VSK schedule" ).append("\n"); 
		query.append("*/" ).append("\n"); 
		query.append("WITH V_JOO_FINC_MTX AS (" ).append("\n"); 
		query.append("    SELECT FM.RE_DIVR_CD" ).append("\n"); 
		query.append("         , FM.JO_STL_ITM_CD" ).append("\n"); 
		query.append("         , CR.JO_CRR_CD" ).append("\n"); 
		query.append("         , CR.RLANE_CD" ).append("\n"); 
		query.append("         , FM.LOCL_CURR_CD" ).append("\n"); 
		query.append("         , ST.JO_STL_ITM_NM" ).append("\n"); 
		query.append("         , ST.JO_MNL_CRE_FLG" ).append("\n"); 
		query.append("         , ST.ORD_SEQ" ).append("\n"); 
		query.append("         , AC.DR_ACCT_CD AS ACCT_CD" ).append("\n"); 
		query.append("      FROM JOO_CARRIER CR" ).append("\n"); 
		query.append("         , JOO_FINC_MTX FM" ).append("\n"); 
		query.append("         , JOO_STL_ITM ST" ).append("\n"); 
		query.append("         , JOO_STL_ITM_ACCT AC" ).append("\n"); 
		query.append("     WHERE 1=1" ).append("\n"); 
		query.append("       AND CR.DELT_FLG      = 'N'" ).append("\n"); 
		query.append("       AND CR.JO_CRR_CD     = FM.JO_CRR_CD" ).append("\n"); 
		query.append("       AND CR.RLANE_CD      = FM.RLANE_CD" ).append("\n"); 
		query.append("       AND FM.RE_DIVR_CD    = AC.RE_DIVR_CD" ).append("\n"); 
		query.append("       AND FM.JO_STL_ITM_CD = AC.JO_STL_ITM_CD" ).append("\n"); 
		query.append("       AND AC.JO_STL_ITM_CD = ST.JO_STL_ITM_CD" ).append("\n"); 
		query.append("#if (${jo_crr_cd}!='')" ).append("\n"); 
		query.append("       AND CR.JO_CRR_CD     = @[jo_crr_cd]     /* Condition Carrier */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${trd_cd}!='')" ).append("\n"); 
		query.append("       AND CR.TRD_CD        = @[trd_cd]        /* Condition Trade */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${rlane_cd}!='')" ).append("\n"); 
		query.append("       AND CR.RLANE_CD      = @[rlane_cd]   /* Condition Lane */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${auth_ofc_cd}!='')" ).append("\n"); 
		query.append("       /* Condition Auth Office Cd */" ).append("\n"); 
		query.append("       AND EXISTS   (   SELECT 'X'" ).append("\n"); 
		query.append("                          FROM JOO_CRR_AUTH CA" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND CA.DELT_FLG         = 'N'" ).append("\n"); 
		query.append("                           AND CA.JO_CRR_CD        = CR.JO_CRR_CD" ).append("\n"); 
		query.append("                           AND CA.RLANE_CD         = CR.RLANE_CD" ).append("\n"); 
		query.append("                           AND CA.AUTH_OFC_CD      = @[auth_ofc_cd]" ).append("\n"); 
		query.append("                         )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${re_divr_cd}!='')" ).append("\n"); 
		query.append("       AND FM.RE_DIVR_CD    = @[re_divr_cd]        /* Condition ALL, Revenue : R , Expense : E */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${jo_stl_itm_cds} != '' && ${jo_stl_itm_cds} != 'ALL')" ).append("\n"); 
		query.append("       /* Condition Items */" ).append("\n"); 
		query.append("       AND FM.JO_STL_ITM_CD IN ( #foreach($key IN ${jo_stl_itm_cds})#if($velocityCount < $jo_stl_itm_cds.size()) '$key', #else '$key' #end #end)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("     ORDER BY CR.JO_CRR_CD" ).append("\n"); 
		query.append("            , CR.RLANE_CD" ).append("\n"); 
		query.append("            , FM.RE_DIVR_CD" ).append("\n"); 
		query.append("            , ST.ORD_SEQ" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM  V_JOO_FINC_MTX;" ).append("\n"); 
		query.append("/* Revenue : NYK 선박, Expense : NYK 외의 선박 , ALL : Revenue + Expense */" ).append("\n"); 
		query.append("    , V_AR_MST_REV_VVD_RDC AS (" ).append("\n"); 
		query.append("        SELECT AR.*" ).append("\n"); 
		query.append("          FROM (" ).append("\n"); 
		query.append("                SELECT 'R' AS RE_DIVR_CD" ).append("\n"); 
		query.append("                     , AR.VSL_CD" ).append("\n"); 
		query.append("                     , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , AR.RLANE_DIR_CD AS REV_DIR_CD" ).append("\n"); 
		query.append("                     , AR.VSL_CD||AR.SKD_VOY_NO||AR.SKD_DIR_CD||AR.RLANE_DIR_CD AS REV_VVD" ).append("\n"); 
		query.append("                     , AR.RLANE_CD" ).append("\n"); 
		query.append("                     , AR.SLAN_CD" ).append("\n"); 
		query.append("                     , AR.REV_YRMON" ).append("\n"); 
		query.append("                     , (SELECT TO_CHAR(MIN(VPS_ETA_DT),'YYYYMMDD')" ).append("\n"); 
		query.append("                          FROM VSK_VSL_PORT_SKD VPS" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND AR.VSL_CD       = VPS.VSL_CD" ).append("\n"); 
		query.append("                           AND AR.SKD_VOY_NO   = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND AR.SKD_DIR_CD   = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND (VPS.TURN_PORT_IND_CD IS NULL    OR VPS.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F'))" ).append("\n"); 
		query.append("                           AND (VPS.SKD_CNG_STS_CD IS NULL      OR VPS.SKD_CNG_STS_CD != 'S')" ).append("\n"); 
		query.append("                           AND NVL(VPS.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 ADD*/" ).append("\n"); 
		query.append("                       ) AS ACT_DT" ).append("\n"); 
		query.append("                  FROM AR_MST_REV_VVD AR" ).append("\n"); 
		query.append("                     , VSK_VSL_SKD  VSL" ).append("\n"); 
		query.append("                 WHERE 1=1" ).append("\n"); 
		query.append("                   AND AR.DELT_FLG  = 'N'" ).append("\n"); 
		query.append("                   AND AR.REV_YRMON BETWEEN REPLACE(@[fr_rev_yrmon],'-','') AND REPLACE(@[to_rev_yrmon],'-','') /* Condition Target Revenue Month*/" ).append("\n"); 
		query.append("#if (${rev_vvd}!='')" ).append("\n"); 
		query.append("                   AND AR.VSL_CD||AR.SKD_VOY_NO||AR.SKD_DIR_CD||AR.RLANE_DIR_CD LIKE @[rev_vvd]||'%' /* condition VVD */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                   AND EXISTS (SELECT 'Y'" ).append("\n"); 
		query.append("                                 FROM MDM_VSL_CNTR MVC" ).append("\n"); 
		query.append("                                WHERE MVC.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                  --AND MVC.CRR_CD = COM_CONSTANTMGR_PKG.COM_GETCOMPANYCODE_FNC /*OWN 의 선박.*/" ).append("\n"); 
		query.append("                                  AND MVC.VSL_CD = AR.VSL_CD" ).append("\n"); 
		query.append("                              )" ).append("\n"); 
		query.append("                   AND AR.VSL_CD        = VSL.VSL_CD" ).append("\n"); 
		query.append("                   AND AR.SKD_VOY_NO    = VSL.SKD_VOY_NO" ).append("\n"); 
		query.append("                   AND AR.SKD_DIR_CD    = VSL.SKD_DIR_CD" ).append("\n"); 
		query.append("                   AND AR.SLAN_CD       = VSL.VSL_SLAN_CD" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                SELECT 'E' AS RE_DIVR_CD" ).append("\n"); 
		query.append("                     , AR.VSL_CD" ).append("\n"); 
		query.append("                     , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , AR.RLANE_DIR_CD AS REV_DIR_CD" ).append("\n"); 
		query.append("                     , AR.VSL_CD||AR.SKD_VOY_NO||AR.SKD_DIR_CD||AR.RLANE_DIR_CD AS REV_VVD" ).append("\n"); 
		query.append("                     , AR.RLANE_CD" ).append("\n"); 
		query.append("                     , AR.SLAN_CD" ).append("\n"); 
		query.append("                     , AR.REV_YRMON" ).append("\n"); 
		query.append("                     , (SELECT TO_CHAR(MIN(VPS_ETA_DT),'YYYYMMDD')" ).append("\n"); 
		query.append("                          FROM VSK_VSL_PORT_SKD VPS" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND AR.VSL_CD       = VPS.VSL_CD" ).append("\n"); 
		query.append("                           AND AR.SKD_VOY_NO   = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND AR.SKD_DIR_CD   = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND (VPS.TURN_PORT_IND_CD IS NULL    OR VPS.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F'))" ).append("\n"); 
		query.append("                           AND (VPS.SKD_CNG_STS_CD IS NULL      OR VPS.SKD_CNG_STS_CD != 'S')" ).append("\n"); 
		query.append("                           AND NVL(VPS.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 ADD*/" ).append("\n"); 
		query.append("                       ) AS ACT_DT" ).append("\n"); 
		query.append("                  FROM AR_MST_REV_VVD AR" ).append("\n"); 
		query.append("                     , VSK_VSL_SKD  VSL" ).append("\n"); 
		query.append("                 WHERE 1=1" ).append("\n"); 
		query.append("                   AND AR.DELT_FLG  = 'N'" ).append("\n"); 
		query.append("                   AND AR.REV_YRMON BETWEEN REPLACE(@[fr_rev_yrmon],'-','') AND REPLACE(@[to_rev_yrmon],'-','') /* Condition Target Revenue Month*/" ).append("\n"); 
		query.append("#if (${rev_vvd}!='')" ).append("\n"); 
		query.append("                   AND AR.VSL_CD||AR.SKD_VOY_NO||AR.SKD_DIR_CD||AR.RLANE_DIR_CD LIKE @[rev_vvd]||'%' /* condition VVD */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                   AND EXISTS (SELECT 'Y'" ).append("\n"); 
		query.append("                                 FROM MDM_VSL_CNTR MVC" ).append("\n"); 
		query.append("                                WHERE MVC.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                  --AND MVC.CRR_CD <> COM_CONSTANTMGR_PKG.COM_GETCOMPANYCODE_FNC /*OWN외의 선박.*/" ).append("\n"); 
		query.append("                                  AND MVC.VSL_CD = AR.VSL_CD" ).append("\n"); 
		query.append("                                )" ).append("\n"); 
		query.append("                   AND AR.VSL_CD        = VSL.VSL_CD" ).append("\n"); 
		query.append("                   AND AR.SKD_VOY_NO    = VSL.SKD_VOY_NO" ).append("\n"); 
		query.append("                   AND AR.SKD_DIR_CD    = VSL.SKD_DIR_CD" ).append("\n"); 
		query.append("                   AND AR.SLAN_CD       = VSL.VSL_SLAN_CD" ).append("\n"); 
		query.append("               ) AR" ).append("\n"); 
		query.append("         WHERE AR.ACT_DT IS NOT NULL" ).append("\n"); 
		query.append("         ORDER BY" ).append("\n"); 
		query.append("               AR.RE_DIVR_CD DESC" ).append("\n"); 
		query.append("             , AR.REV_VVD" ).append("\n"); 
		query.append("             , AR.RLANE_CD" ).append("\n"); 
		query.append("             , AR.REV_YRMON" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM  V_AR_MST_REV_VVD_RDC;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    , V_AR_MST_REV_VVD AS (" ).append("\n"); 
		query.append("        -- Carrier, Item을 AR_MST_REV_VVD 와 조인하여 기초 Data를 만든다." ).append("\n"); 
		query.append("        SELECT AR.VSL_CD" ).append("\n"); 
		query.append("             , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("             , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("             , AR.REV_DIR_CD" ).append("\n"); 
		query.append("             , AR.REV_VVD" ).append("\n"); 
		query.append("             , AR.RLANE_CD" ).append("\n"); 
		query.append("             , AR.SLAN_CD" ).append("\n"); 
		query.append("             , AR.REV_YRMON" ).append("\n"); 
		query.append("             , AR.ACT_DT" ).append("\n"); 
		query.append("             , CR.JO_CRR_CD" ).append("\n"); 
		query.append("             , CR.RE_DIVR_CD" ).append("\n"); 
		query.append("             , CR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , CR.LOCL_CURR_CD" ).append("\n"); 
		query.append("             , CR.JO_MNL_CRE_FLG" ).append("\n"); 
		query.append("             , CR.ORD_SEQ" ).append("\n"); 
		query.append("             , CR.ACCT_CD" ).append("\n"); 
		query.append("          FROM V_AR_MST_REV_VVD_RDC AR" ).append("\n"); 
		query.append("             , V_JOO_FINC_MTX       CR" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("           AND AR.RLANE_CD      = CR.RLANE_CD" ).append("\n"); 
		query.append("           AND AR.RE_DIVR_CD    = CR.RE_DIVR_CD    /* 조건 추가 : Revenue, Expense, ALL 의 대상 추가.*/" ).append("\n"); 
		query.append("         ORDER BY" ).append("\n"); 
		query.append("               CR.JO_CRR_CD" ).append("\n"); 
		query.append("             , AR.RE_DIVR_CD DESC" ).append("\n"); 
		query.append("             , CR.ORD_SEQ" ).append("\n"); 
		query.append("             , AR.REV_VVD" ).append("\n"); 
		query.append("             , AR.RLANE_CD" ).append("\n"); 
		query.append("             , AR.REV_YRMON" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_AR_MST_REV_VVD;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    , V_AR_MST_REV_VVD_BSA AS (" ).append("\n"); 
		query.append("        SELECT AR.*" ).append("\n"); 
		query.append("             , NVL(BSA.JO_STL_JB_CD, '101') AS JO_STL_JB_CD" ).append("\n"); 
		query.append("             , NVL(BSA.BSA_QTY,0) AS DFT_BSA_QTY" ).append("\n"); 
		query.append("             , NVL(DECODE(AR.JO_STL_ITM_CD, 'OPR', 0                    , BSA.BSA_SLT_PRC   ), 0) AS DFT_BSA_SLT_PRC" ).append("\n"); 
		query.append("             , NVL(DECODE(AR.JO_STL_ITM_CD, 'OPR', BSA.OP_ESTM_AMT      , BSA.ESTM_AMT      ), 0) AS DFT_BSA_ESTM_AMT" ).append("\n"); 
		query.append("          FROM V_AR_MST_REV_VVD AR" ).append("\n"); 
		query.append("             , (" ).append("\n"); 
		query.append("                SELECT /*+ ORDERED USE_HASH(A B C) */" ).append("\n"); 
		query.append("                       DISTINCT" ).append("\n"); 
		query.append("                       A.COST_YRMON         AS REV_YRMON" ).append("\n"); 
		query.append("                     , A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.DIR_CD             AS SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , C.CRR_CD             AS JO_CRR_CD" ).append("\n"); 
		query.append("                     , CASE WHEN C.BSA_OP_JB_CD IN ('000','001') THEN '101'" ).append("\n"); 
		query.append("                            WHEN C.BSA_OP_JB_CD IN ('002','003') THEN '102'" ).append("\n"); 
		query.append("                            WHEN C.BSA_OP_JB_CD IN ('004','005') THEN '103'" ).append("\n"); 
		query.append("                       END AS JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , CASE WHEN C.BSA_OP_JB_CD IN ('001','002','004') THEN 'R'" ).append("\n"); 
		query.append("                            WHEN C.BSA_OP_JB_CD IN ('000','003','005') THEN 'E'" ).append("\n"); 
		query.append("                       END AS RE_DIVR_CD" ).append("\n"); 
		query.append("                     , C.SLT_PRC_CAPA       AS BSA_SLT_PRC" ).append("\n"); 
		query.append("                     , C.OP_SLT_PRC_CAPA    AS OP_BSA_SLT_PRC" ).append("\n"); 
		query.append("                     , C.CRR_BSA_CAPA       AS BSA_QTY" ).append("\n"); 
		query.append("                     , C.CRR_PERF_AMT       AS ESTM_AMT" ).append("\n"); 
		query.append("                     , C.OP_CRR_PERF_AMT    AS OP_ESTM_AMT" ).append("\n"); 
		query.append("                FROM COA_MON_VVD A" ).append("\n"); 
		query.append("                   , BSA_VVD_MST B" ).append("\n"); 
		query.append("                   , BSA_VVD_CRR_PERF C" ).append("\n"); 
		query.append("                WHERE A.VSL_CD         = B.VSL_CD" ).append("\n"); 
		query.append("                  AND A.SKD_VOY_NO     = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND A.DIR_CD         = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND A.TRD_CD         = B.TRD_CD" ).append("\n"); 
		query.append("                  AND A.RLANE_CD       = B.RLANE_CD" ).append("\n"); 
		query.append("                  AND A.VSL_CD         = C.VSL_CD" ).append("\n"); 
		query.append("                  AND A.SKD_VOY_NO     = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND A.DIR_CD         = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND A.TRD_CD         = C.TRD_CD" ).append("\n"); 
		query.append("                  AND A.RLANE_CD       = C.RLANE_CD" ).append("\n"); 
		query.append("                  AND A.COST_YRMON     BETWEEN TO_CHAR(TO_DATE(REPLACE(@[fr_rev_yrmon],'-',''),'YYYYMM'),'YYYYMM') AND REPLACE(@[to_rev_yrmon],'-','') /* Condition Target Revenue Month*/" ).append("\n"); 
		query.append("#if (${re_divr_cd} != '' && ${re_divr_cd}  == 'R')" ).append("\n"); 
		query.append("                  AND C.BSA_OP_JB_CD   IN ('001','002','004') /* condition Rev/Exp : Revenue  */" ).append("\n"); 
		query.append("#elseif (${re_divr_cd} != '' && ${re_divr_cd} == 'E')" ).append("\n"); 
		query.append("                  AND C.BSA_OP_JB_CD   IN ('000','003','005') /* condition REV/Exp : Expense */" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                  AND C.BSA_OP_JB_CD   IN ('000','001','002','003','004','005') /* condition Rev/Exp : ALL  */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${jo_crr_cd}!='')" ).append("\n"); 
		query.append("                  AND C.CRR_CD         = @[jo_crr_cd] /* Condition Carrier */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${trd_cd}!='')" ).append("\n"); 
		query.append("                  AND A.TRD_CD         = @[trd_cd]     /* Condition Trade */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${rlane_cd}!='')" ).append("\n"); 
		query.append("                  AND A.RLANE_CD       = @[rlane_cd]   /* Condition Lane */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${auth_ofc_cd}!='')" ).append("\n"); 
		query.append("       /* Condition Auth Office Cd */" ).append("\n"); 
		query.append("       AND EXISTS   (   SELECT 'X'" ).append("\n"); 
		query.append("                          FROM JOO_CRR_AUTH CA" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND CA.DELT_FLG         = 'N'" ).append("\n"); 
		query.append("                           AND CA.JO_CRR_CD        = C.CRR_CD" ).append("\n"); 
		query.append("                           AND CA.RLANE_CD         = A.RLANE_CD" ).append("\n"); 
		query.append("                           AND CA.AUTH_OFC_CD      = @[auth_ofc_cd]" ).append("\n"); 
		query.append("                         )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                  AND C.CRR_CD         <> COM_CONSTANTMGR_PKG.COM_getCompanyCode_FNC" ).append("\n"); 
		query.append("                  AND A.DELT_FLG       = 'N'" ).append("\n"); 
		query.append("                  /*-- 2010.01.20 TEU, PRICE중 하나라도 0이 아니면 나와야 한다.*/" ).append("\n"); 
		query.append("                  AND NOT (NVL(C.CRR_BSA_CAPA,0) = 0 AND NVL(C.SLT_PRC_CAPA,0) = 0)" ).append("\n"); 
		query.append("                ) BSA" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("#if (${proc_jb_flg} != '' || ${proc_jb_flg} == 'Y')" ).append("\n"); 
		query.append("           /*Based On Agreement Checked Condition*/" ).append("\n"); 
		query.append("           AND AR.VSL_CD     = BSA.VSL_CD" ).append("\n"); 
		query.append("           AND AR.SKD_VOY_NO = BSA.SKD_VOY_NO" ).append("\n"); 
		query.append("           AND AR.SKD_DIR_CD = BSA.SKD_DIR_CD" ).append("\n"); 
		query.append("           AND AR.JO_CRR_CD  = BSA.JO_CRR_CD" ).append("\n"); 
		query.append("           AND AR.RLANE_CD   = BSA.RLANE_CD" ).append("\n"); 
		query.append("           AND AR.RE_DIVR_CD = BSA.RE_DIVR_CD" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("           /*Based On Agreement Unchecked Condition*/" ).append("\n"); 
		query.append("           AND AR.VSL_CD     = BSA.VSL_CD       (+)" ).append("\n"); 
		query.append("           AND AR.SKD_VOY_NO = BSA.SKD_VOY_NO   (+)" ).append("\n"); 
		query.append("           AND AR.SKD_DIR_CD = BSA.SKD_DIR_CD   (+)" ).append("\n"); 
		query.append("           AND AR.JO_CRR_CD  = BSA.JO_CRR_CD    (+)" ).append("\n"); 
		query.append("           AND AR.RLANE_CD   = BSA.RLANE_CD     (+)" ).append("\n"); 
		query.append("           AND AR.RE_DIVR_CD = BSA.RE_DIVR_CD   (+)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_AR_MST_REV_VVD_BSA;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("     , V_PORT_SKD_ETA AS (" ).append("\n"); 
		query.append("        /* PORT SKD 의 ETA로 Start, End Date를 조회 한다.: S/H, OPR 화면에서 조건에 맞추어서 진행 한다. */" ).append("\n"); 
		query.append("        SELECT *" ).append("\n"); 
		query.append("          FROM (SELECT A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.SLAN_CD" ).append("\n"); 
		query.append("                     --, TO_CHAR(MIN(VPS_ETA_DT),'YYYYMMDDHH24MISS')      AS ACT_DT" ).append("\n"); 
		query.append("                     , TO_CHAR(MIN(VPS_ETA_DT),'YYYYMMDDHH24MISS')      AS ST_DT" ).append("\n"); 
		query.append("                     , TO_CHAR(MAX(NEXT_PORT_ETA),'YYYYMMDDHH24MISS')   AS END_DT" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                     , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , A.LOCL_CURR_CD" ).append("\n"); 
		query.append("                     , A.ACT_DT" ).append("\n"); 
		query.append("                     , A.ACCT_CD" ).append("\n"); 
		query.append("                     , A.DFT_BSA_QTY" ).append("\n"); 
		query.append("                     , A.DFT_BSA_SLT_PRC" ).append("\n"); 
		query.append("                     , A.DFT_BSA_ESTM_AMT" ).append("\n"); 
		query.append("                     , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , A.ORD_SEQ" ).append("\n"); 
		query.append("                  FROM (SELECT /*+ ORDERED USE_HASH(VSL MVL VPS) */" ).append("\n"); 
		query.append("                               VPS.VSL_CD" ).append("\n"); 
		query.append("                             , VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("                             , VPS.CLPT_SEQ" ).append("\n"); 
		query.append("                             , VPS.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                             , VPS.VPS_ETA_DT" ).append("\n"); 
		query.append("                             , VPS.VPS_ETD_DT" ).append("\n"); 
		query.append("                             , VSL.VSL_SLAN_CD AS SLAN_CD" ).append("\n"); 
		query.append("                             , NVL((SELECT S1.VPS_ETA_DT" ).append("\n"); 
		query.append("                                      FROM VSK_VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                                     WHERE S1.VSL_CD        = VPS.VSL_CD" ).append("\n"); 
		query.append("                                       AND S1.SKD_VOY_NO    = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                                       AND S1.SKD_DIR_CD    = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                                       AND S1.CLPT_SEQ      = ( SELECT MIN(CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                  FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                                 WHERE VSL_CD       = VPS.VSL_CD" ).append("\n"); 
		query.append("                                                                   AND SKD_VOY_NO   = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                   AND SKD_DIR_CD   = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                   AND CLPT_SEQ     > VPS.CLPT_SEQ" ).append("\n"); 
		query.append("                                                                   AND (SKD_CNG_STS_CD IS NULL OR SKD_CNG_STS_CD != 'S') )" ).append("\n"); 
		query.append("                                       AND ROWNUM = 1 ),VPS.VPS_ETD_DT) AS NEXT_PORT_ETA" ).append("\n"); 
		query.append("                             , VAR.REV_YRMON" ).append("\n"); 
		query.append("                             , VAR.REV_DIR_CD" ).append("\n"); 
		query.append("                             , VAR.RLANE_CD" ).append("\n"); 
		query.append("                             , VAR.JO_CRR_CD" ).append("\n"); 
		query.append("                             , VAR.RE_DIVR_CD" ).append("\n"); 
		query.append("                             , VAR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                             , VAR.LOCL_CURR_CD" ).append("\n"); 
		query.append("                             , VAR.ACT_DT" ).append("\n"); 
		query.append("                             , VAR.ACCT_CD" ).append("\n"); 
		query.append("                             , VAR.DFT_BSA_QTY" ).append("\n"); 
		query.append("                             , VAR.DFT_BSA_SLT_PRC" ).append("\n"); 
		query.append("                             , VAR.DFT_BSA_ESTM_AMT" ).append("\n"); 
		query.append("                             , VAR.JO_STL_JB_CD" ).append("\n"); 
		query.append("                             , VAR.ORD_SEQ" ).append("\n"); 
		query.append("                          FROM VSK_VSL_SKD          VSL" ).append("\n"); 
		query.append("                             , MDM_VSL_CNTR         MVL" ).append("\n"); 
		query.append("                             , VSK_VSL_PORT_SKD     VPS" ).append("\n"); 
		query.append("                             , MDM_VSL_SVC_LANE_DIR MVS" ).append("\n"); 
		query.append("                             , V_AR_MST_REV_VVD_BSA VAR" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND VSL.VSL_CD       = VAR.VSL_CD" ).append("\n"); 
		query.append("                           AND VSL.SKD_VOY_NO   = VAR.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND VSL.SKD_DIR_CD   = VAR.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND VSL.VSL_SLAN_CD  = VAR.SLAN_CD" ).append("\n"); 
		query.append("                           AND VAR.JO_MNL_CRE_FLG = 'N' /* S/H, OPR Item 만 날짜 계산을 가져온다. */" ).append("\n"); 
		query.append("                           AND VSL.VSL_CD       = MVL.VSL_CD" ).append("\n"); 
		query.append("                           AND VSL.VSL_CD       = VPS.VSL_CD" ).append("\n"); 
		query.append("                           AND VSL.SKD_VOY_NO   = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND VSL.SKD_DIR_CD   = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND (VPS.TURN_PORT_IND_CD IS NULL    OR VPS.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F'))" ).append("\n"); 
		query.append("                           AND (VPS.SKD_CNG_STS_CD IS NULL      OR VPS.SKD_CNG_STS_CD != 'S')" ).append("\n"); 
		query.append("                           AND NVL(VPS.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 Add*/" ).append("\n"); 
		query.append("                           AND VSL.VSL_SLAN_CD  = MVS.VSL_SLAN_CD" ).append("\n"); 
		query.append("                           AND VSL.SKD_DIR_CD   = MVS.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("                         ORDER BY VPS.VPS_ETA_DT" ).append("\n"); 
		query.append("                             , MVS.VSL_SLAN_DIR_SEQ" ).append("\n"); 
		query.append("                             , VPS.CLPT_SEQ" ).append("\n"); 
		query.append("                       ) A" ).append("\n"); 
		query.append("                 GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.SLAN_CD" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                     , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , A.LOCL_CURR_CD" ).append("\n"); 
		query.append("                     , A.ACT_DT" ).append("\n"); 
		query.append("                     , A.ACCT_CD" ).append("\n"); 
		query.append("                     , A.DFT_BSA_QTY" ).append("\n"); 
		query.append("                     , A.DFT_BSA_SLT_PRC" ).append("\n"); 
		query.append("                     , A.DFT_BSA_ESTM_AMT" ).append("\n"); 
		query.append("                     , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , A.ORD_SEQ" ).append("\n"); 
		query.append("               )" ).append("\n"); 
		query.append("         ORDER BY RE_DIVR_CD DESC" ).append("\n"); 
		query.append("                , ST_DT" ).append("\n"); 
		query.append("                , END_DT" ).append("\n"); 
		query.append("                , ORD_SEQ" ).append("\n"); 
		query.append("                , JO_CRR_CD" ).append("\n"); 
		query.append("                , RLANE_CD" ).append("\n"); 
		query.append("                , REV_YRMON" ).append("\n"); 
		query.append("                , JO_STL_JB_CD" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_PORT_SKD_ETA;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  , V_AR_STANDARD_DATA AS (" ).append("\n"); 
		query.append("        /* V_AR_MST_REV_VVD 별 From - To 기간을 월별로 나누어 주는 쿼리입니다. VVD 별 전체에서 최소월 ~ 최대월을 구한뒤에 조인하는 부분입닏.*/" ).append("\n"); 
		query.append("        SELECT A.VSL_CD" ).append("\n"); 
		query.append("             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("             , A.REV_DIR_CD" ).append("\n"); 
		query.append("             , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS REV_VVD" ).append("\n"); 
		query.append("             , A.SLAN_CD" ).append("\n"); 
		query.append("             , A.ST_DT" ).append("\n"); 
		query.append("             , A.END_DT" ).append("\n"); 
		query.append("             , A.MIN_YMDHMS" ).append("\n"); 
		query.append("             , A.MAX_YMDHMS" ).append("\n"); 
		query.append("             , A.SAIL_DYS" ).append("\n"); 
		query.append("             , A.ESTM_YRMON" ).append("\n"); 
		query.append("             , CASE WHEN A.ESTM_YRMON = A.MAX_ESTM_YRMON THEN (A.SAIL_DYS - A.SUM_ESTM_DYS) + A.ESTM_DYS" ).append("\n"); 
		query.append("                    ELSE A.ESTM_DYS" ).append("\n"); 
		query.append("               END ESTM_DYS" ).append("\n"); 
		query.append("             , A.REV_YRMON" ).append("\n"); 
		query.append("             , A.RLANE_CD" ).append("\n"); 
		query.append("             , A.JO_CRR_CD" ).append("\n"); 
		query.append("             , A.RE_DIVR_CD" ).append("\n"); 
		query.append("             , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("             , A.LOCL_CURR_CD" ).append("\n"); 
		query.append("             , A.ACT_DT" ).append("\n"); 
		query.append("             , A.ACCT_CD" ).append("\n"); 
		query.append("             , A.DFT_BSA_QTY" ).append("\n"); 
		query.append("             , A.DFT_BSA_SLT_PRC" ).append("\n"); 
		query.append("             , A.DFT_BSA_ESTM_AMT" ).append("\n"); 
		query.append("             , A.ORD_SEQ" ).append("\n"); 
		query.append("             , A.MAX_ESTM_YRMON" ).append("\n"); 
		query.append("             , A.SUM_ESTM_DYS" ).append("\n"); 
		query.append("             , (A.SAIL_DYS - A.SUM_ESTM_DYS) AS CHK_DIFF_DYS" ).append("\n"); 
		query.append("             , 'N' AS JO_MNL_CRE_FLG" ).append("\n"); 
		query.append("             , 'THIRD' AS CHK_PRIORITY" ).append("\n"); 
		query.append("          FROM (" ).append("\n"); 
		query.append("                SELECT A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.SLAN_CD" ).append("\n"); 
		query.append("                     , A.ST_DT" ).append("\n"); 
		query.append("                     , A.END_DT" ).append("\n"); 
		query.append("                     , A.MIN_YMDHMS" ).append("\n"); 
		query.append("                     , A.MAX_YMDHMS" ).append("\n"); 
		query.append("                     , ROUND((TO_DATE(A.END_DT,'YYYYMMDDHH24MISS')      - TO_DATE(A.ST_DT,'YYYYMMDDHH24MISS')),5) AS SAIL_DYS" ).append("\n"); 
		query.append("                     , A.ESTM_YRMON" ).append("\n"); 
		query.append("                     , ROUND((TO_DATE(A.MAX_YMDHMS,'YYYYMMDDHH24MISS')  - TO_DATE(A.MIN_YMDHMS,'YYYYMMDDHH24MISS')),5) AS ESTM_DYS" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                     , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , A.LOCL_CURR_CD" ).append("\n"); 
		query.append("                     , A.ACT_DT" ).append("\n"); 
		query.append("                     , A.ACCT_CD" ).append("\n"); 
		query.append("                     , A.DFT_BSA_QTY" ).append("\n"); 
		query.append("                     , A.DFT_BSA_SLT_PRC" ).append("\n"); 
		query.append("                     , A.DFT_BSA_ESTM_AMT" ).append("\n"); 
		query.append("                     , A.ORD_SEQ" ).append("\n"); 
		query.append("                     , MAX(A.ESTM_YRMON) OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, A.RLANE_CD, A.JO_CRR_CD, A.RE_DIVR_CD, A.JO_STL_ITM_CD, A.JO_STL_JB_CD) AS MAX_ESTM_YRMON" ).append("\n"); 
		query.append("                     , SUM(ROUND((TO_DATE(A.MAX_YMDHMS,'YYYYMMDDHH24MISS') - TO_DATE(A.MIN_YMDHMS,'YYYYMMDDHH24MISS')),5))" ).append("\n"); 
		query.append("                           OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, A.RLANE_CD, A.JO_CRR_CD, A.RE_DIVR_CD, A.JO_STL_ITM_CD, A.JO_STL_JB_CD) AS SUM_ESTM_DYS" ).append("\n"); 
		query.append("                  FROM (SELECT A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.SLAN_CD" ).append("\n"); 
		query.append("                             , A.ST_DT" ).append("\n"); 
		query.append("                             , A.END_DT" ).append("\n"); 
		query.append("                             , A.DATES AS ESTM_YRMON" ).append("\n"); 
		query.append("                             , CASE WHEN SUBSTR(A.ST_DT, 1,6) = A.DATES THEN A.DATES||SUBSTR(A.ST_DT, 7)" ).append("\n"); 
		query.append("                                    ELSE A.DATES||'01000000'" ).append("\n"); 
		query.append("                               END AS MIN_YMDHMS" ).append("\n"); 
		query.append("                             , CASE WHEN SUBSTR(A.END_DT, 1,6) = A.DATES THEN A.DATES||SUBSTR(A.END_DT, 7)" ).append("\n"); 
		query.append("                                    ELSE TO_CHAR(LAST_DAY(TO_DATE(A.DATES,'YYYYMM')) + 1,'YYYYMMDD') ||'000000'" ).append("\n"); 
		query.append("                                    --ELSE TO_CHAR(LAST_DAY(TO_DATE(A.DATES,'YYYYMM')),'YYYYMMDD') ||'235959'" ).append("\n"); 
		query.append("                               END AS MAX_YMDHMS" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.RLANE_CD" ).append("\n"); 
		query.append("                             , A.JO_CRR_CD" ).append("\n"); 
		query.append("                             , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                             , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                             , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("                             , A.LOCL_CURR_CD" ).append("\n"); 
		query.append("                             , A.ACT_DT" ).append("\n"); 
		query.append("                             , A.ACCT_CD" ).append("\n"); 
		query.append("                             , A.DFT_BSA_QTY" ).append("\n"); 
		query.append("                             , A.DFT_BSA_SLT_PRC" ).append("\n"); 
		query.append("                             , A.DFT_BSA_ESTM_AMT" ).append("\n"); 
		query.append("                             , A.ORD_SEQ" ).append("\n"); 
		query.append("                          FROM (SELECT A.VSL_CD" ).append("\n"); 
		query.append("                                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     , A.SLAN_CD" ).append("\n"); 
		query.append("                                     , A.ST_DT" ).append("\n"); 
		query.append("                                     , A.END_DT" ).append("\n"); 
		query.append("                                     , B.DATES" ).append("\n"); 
		query.append("                                     , A.REV_YRMON" ).append("\n"); 
		query.append("                                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                     , A.RLANE_CD" ).append("\n"); 
		query.append("                                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                     , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                     , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                     , A.LOCL_CURR_CD" ).append("\n"); 
		query.append("                                     , A.ACT_DT" ).append("\n"); 
		query.append("                                     , A.ACCT_CD" ).append("\n"); 
		query.append("                                     , A.DFT_BSA_QTY" ).append("\n"); 
		query.append("                                     , A.DFT_BSA_SLT_PRC" ).append("\n"); 
		query.append("                                     , A.DFT_BSA_ESTM_AMT" ).append("\n"); 
		query.append("                                     , A.ORD_SEQ" ).append("\n"); 
		query.append("                                  FROM V_PORT_SKD_ETA A" ).append("\n"); 
		query.append("                                     , (SELECT TO_CHAR(ADD_MONTHS(TO_DATE(A.MIN_YM,'YYYYMM'),LEVEL-1),'YYYYMM') AS DATES" ).append("\n"); 
		query.append("                                          FROM (SELECT MIN(SUBSTR(A.ST_DT,1,6)) MIN_YM" ).append("\n"); 
		query.append("                                                     , MAX(SUBSTR(A.END_DT,1,6)) MAX_YM" ).append("\n"); 
		query.append("                                                  FROM V_PORT_SKD_ETA A" ).append("\n"); 
		query.append("                                                ) A" ).append("\n"); 
		query.append("                                         CONNECT BY LEVEL <= MONTHS_BETWEEN(ADD_MONTHS(TO_DATE(A.MAX_YM,'YYYYMM'), 1), TO_DATE(A.MIN_YM, 'YYYYMM'))" ).append("\n"); 
		query.append("                                       ) B" ).append("\n"); 
		query.append("                                 WHERE B.DATES BETWEEN SUBSTR(A.ST_DT,1,6) AND SUBSTR(A.END_DT,1,6)" ).append("\n"); 
		query.append("                                ) A" ).append("\n"); 
		query.append("                          ) A" ).append("\n"); 
		query.append("                  WHERE 1=1" ).append("\n"); 
		query.append("                ) A" ).append("\n"); 
		query.append("        /*S/H, OPR 외의 Item 데이타를 기준 데이타로 만든다.*/" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT DISTINCT A.VSL_CD" ).append("\n"); 
		query.append("             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("             , A.REV_DIR_CD" ).append("\n"); 
		query.append("             , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS REV_VVD" ).append("\n"); 
		query.append("             , A.SLAN_CD" ).append("\n"); 
		query.append("             , NULL AS ST_DT" ).append("\n"); 
		query.append("             , NULL AS END_DT" ).append("\n"); 
		query.append("             , NULL AS MIN_YMDHMS" ).append("\n"); 
		query.append("             , NULL AS MAX_YMDHMS" ).append("\n"); 
		query.append("             , 0 AS SAIL_DYS" ).append("\n"); 
		query.append("             , '999999' AS ESTM_YRMON" ).append("\n"); 
		query.append("             , 0 ESTM_DYS" ).append("\n"); 
		query.append("             , A.REV_YRMON" ).append("\n"); 
		query.append("             , A.RLANE_CD" ).append("\n"); 
		query.append("             , A.JO_CRR_CD" ).append("\n"); 
		query.append("             , A.RE_DIVR_CD" ).append("\n"); 
		query.append("             , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , '101' AS JO_STL_JB_CD /*2016.07.26 Mod BSA 에 여러개의 JB_CD 가 있으므로 디폴트 101로만 데이타를 만든다.*/" ).append("\n"); 
		query.append("             , A.LOCL_CURR_CD" ).append("\n"); 
		query.append("             , A.ACT_DT" ).append("\n"); 
		query.append("             , A.ACCT_CD" ).append("\n"); 
		query.append("             , 0 AS DFT_BSA_QTY" ).append("\n"); 
		query.append("             , 0 AS DFT_BSA_SLT_PRC" ).append("\n"); 
		query.append("             , 0 AS DFT_BSA_ESTM_AMT" ).append("\n"); 
		query.append("             , A.ORD_SEQ" ).append("\n"); 
		query.append("             , NULL AS MAX_ESTM_YRMON" ).append("\n"); 
		query.append("             , 0 AS SUM_ESTM_DYS" ).append("\n"); 
		query.append("             , 0 AS CHK_DIFF_DYS" ).append("\n"); 
		query.append("             , 'Y' AS JO_MNL_CRE_FLG" ).append("\n"); 
		query.append("             , 'THIRD' AS CHK_PRIORITY" ).append("\n"); 
		query.append("          FROM V_AR_MST_REV_VVD_BSA A" ).append("\n"); 
		query.append("         WHeRE A.JO_MNL_CRE_FLG = 'Y' /*S/H, OPR 외의 Item. */" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_AR_STANDARD_DATA;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    , V_FIRST_VVD_BSA AS (" ).append("\n"); 
		query.append("        /*  Estimate 된 Data를 조회 한다. */" ).append("\n"); 
		query.append("        SELECT AR.VSL_CD" ).append("\n"); 
		query.append("             , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("             , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("             , AR.REV_DIR_CD" ).append("\n"); 
		query.append("             , AR.RLANE_CD" ).append("\n"); 
		query.append("             , AR.SLAN_CD" ).append("\n"); 
		query.append("             , AR.REV_YRMON" ).append("\n"); 
		query.append("             , AR.JO_CRR_CD" ).append("\n"); 
		query.append("             , AR.RE_DIVR_CD" ).append("\n"); 
		query.append("             , AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , AR.ORD_SEQ" ).append("\n"); 
		query.append("             , AR.ACT_DT" ).append("\n"); 
		query.append("             , AR.ACCT_CD" ).append("\n"); 
		query.append("             , AR.ST_DT" ).append("\n"); 
		query.append("             , AR.END_DT" ).append("\n"); 
		query.append("             , AR.SAIL_DYS" ).append("\n"); 
		query.append("             , AR.ESTM_YRMON" ).append("\n"); 
		query.append("             , AR.ESTM_DYS" ).append("\n"); 
		query.append("             , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("             , NVL(EA.BSA_QTY, 0) AS BSA_QTY" ).append("\n"); 
		query.append("             , CASE WHEN AR.JO_STL_ITM_CD = 'OPR' THEN NVL((" ).append("\n"); 
		query.append("                                                           SELECT MAX(STL.BSA_SLT_PRC)" ).append("\n"); 
		query.append("                                                             FROM JOO_STL_TGT STL" ).append("\n"); 
		query.append("                                                            WHERE 1=1" ).append("\n"); 
		query.append("                                                              AND STL.VSL_CD        = AR.VSL_CD" ).append("\n"); 
		query.append("                                                              AND STL.SKD_VOY_NO    = AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                              AND STL.SKD_DIR_CD    = AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                              AND STL.REV_DIR_CD    = AR.REV_DIR_CD" ).append("\n"); 
		query.append("                                                              AND STL.RLANE_CD      = AR.RLANE_CD" ).append("\n"); 
		query.append("                                                              AND STL.JO_CRR_CD     = AR.JO_CRR_CD" ).append("\n"); 
		query.append("                                                              AND STL.JO_STL_ITM_CD = AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                                              AND STL.ESTM_YRMON    = AR.ESTM_YRMON" ).append("\n"); 
		query.append("                                                              AND STL.JO_STL_JB_CD  = AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                                           ), 0)" ).append("\n"); 
		query.append("                    ELSE NVL(EA.BSA_SLT_PRC, 0)" ).append("\n"); 
		query.append("               END BSA_SLT_PRC" ).append("\n"); 
		query.append("             --, EA.ESTM_AMT" ).append("\n"); 
		query.append("             /*JOO_STL_TGT에 N건의 데이타가 들어가므로 존재시 STL_VVD_SEQ 를 구한다.*/" ).append("\n"); 
		query.append("             , NULL AS STL_VVD_SEQ" ).append("\n"); 
		query.append("             , NULL AS ACT_AMT" ).append("\n"); 
		query.append("             , NULL AS STL_RMK" ).append("\n"); 
		query.append("             , 'FIRST' AS CHK_PRIORITY" ).append("\n"); 
		query.append("          FROM V_AR_STANDARD_DATA AR" ).append("\n"); 
		query.append("             , (" ).append("\n"); 
		query.append("                SELECT EA.JO_CRR_CD" ).append("\n"); 
		query.append("                     , EA.RLANE_CD" ).append("\n"); 
		query.append("                     , EA.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , EA.VSL_CD" ).append("\n"); 
		query.append("                     , EA.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , EA.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , EA.REV_DIR_CD" ).append("\n"); 
		query.append("                     , EA.ACCT_CD" ).append("\n"); 
		query.append("                     , (SELECT RE_DIVR_CD" ).append("\n"); 
		query.append("                          FROM JOO_STL_ITM_ACCT AC" ).append("\n"); 
		query.append("                         WHERE AC.JO_ESTM_ACCT_CD   = EA.ACCT_CD" ).append("\n"); 
		query.append("                           AND AC.JO_STL_ITM_CD     = EA.JO_STL_ITM_CD ) AS RE_DIVR_CD" ).append("\n"); 
		query.append("                     , TO_CHAR(EA.ST_DT,'YYYYMMDDHH24MISS') AS ST_DT" ).append("\n"); 
		query.append("                     , TO_CHAR(EA.END_DT,'YYYYMMDDHH24MISS') AS END_DT" ).append("\n"); 
		query.append("                     , EA.SAIL_DYS" ).append("\n"); 
		query.append("                     , EA.ESTM_YRMON" ).append("\n"); 
		query.append("                     , EA.ESTM_DYS" ).append("\n"); 
		query.append("                     , EA.JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , EA.BSA_QTY" ).append("\n"); 
		query.append("                     , EA.BSA_SLT_PRC" ).append("\n"); 
		query.append("                     , EA.ESTM_AMT" ).append("\n"); 
		query.append("                     , EA.REV_YRMON" ).append("\n"); 
		query.append("                  FROM JOO_ESTM_ACT_RSLT EA" ).append("\n"); 
		query.append("                 WHERE 1=1" ).append("\n"); 
		query.append("                   AND EA.EXE_YRMON = ( SELECT MAX(A.EXE_YRMON)" ).append("\n"); 
		query.append("                                          FROM JOO_ESTM_ACT_RSLT A" ).append("\n"); 
		query.append("                                         WHERE A.REV_YRMON BETWEEN REPLACE(@[fr_rev_yrmon],'-','') AND REPLACE(@[to_rev_yrmon],'-','') /* Condition Target Revenue Month*/" ).append("\n"); 
		query.append("                                       )" ).append("\n"); 
		query.append("                   AND EA.REV_YRMON BETWEEN REPLACE(@[fr_rev_yrmon],'-','') AND REPLACE(@[to_rev_yrmon],'-','') /* Condition Target Revenue Month*/" ).append("\n"); 
		query.append("               ) EA" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("           AND AR.JO_MNL_CRE_FLG= 'N' /*S/H, OPR Item 만 */" ).append("\n"); 
		query.append("           AND AR.JO_CRR_CD     = EA.JO_CRR_CD" ).append("\n"); 
		query.append("           AND AR.RLANE_CD      = EA.RLANE_CD" ).append("\n"); 
		query.append("           AND AR.JO_STL_ITM_CD = EA.JO_STL_ITM_CD" ).append("\n"); 
		query.append("           AND AR.JO_STL_JB_CD  = EA.JO_STL_JB_CD" ).append("\n"); 
		query.append("           AND AR.RE_DIVR_CD    = EA.RE_DIVR_CD" ).append("\n"); 
		query.append("           AND AR.VSL_CD        = EA.VSL_CD" ).append("\n"); 
		query.append("           AND AR.SKD_VOY_NO    = EA.SKD_VOY_NO" ).append("\n"); 
		query.append("           AND AR.SKD_DIR_CD    = EA.SKD_DIR_CD" ).append("\n"); 
		query.append("           AND AR.REV_DIR_CD    = EA.REV_DIR_CD" ).append("\n"); 
		query.append("           AND AR.REV_YRMON     = EA.REV_YRMON" ).append("\n"); 
		query.append("           AND AR.ESTM_YRMON    = EA.ESTM_YRMON" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_FIRST_VVD_BSA;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    , V_SECOND_VVD_BSA AS (" ).append("\n"); 
		query.append("        /* Settlement Target 된 Data를 조회 한다. */" ).append("\n"); 
		query.append("        /* OPR : FIRST 에서 존재하고 Settlement Target에 존재하면 Settlement Target Data를 기준으로 한다. */" ).append("\n"); 
		query.append("        /* S/H, OPR 외 ITEM : Settlement Target의 Data가 존재 하면 나타나고 그렇지 않으면 기준 데이타(VVD)만 나타나도록한다.. */" ).append("\n"); 
		query.append("        SELECT AR.VSL_CD" ).append("\n"); 
		query.append("             , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("             , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("             , AR.REV_DIR_CD" ).append("\n"); 
		query.append("             , AR.RLANE_CD" ).append("\n"); 
		query.append("             , AR.SLAN_CD" ).append("\n"); 
		query.append("             , AR.REV_YRMON" ).append("\n"); 
		query.append("             , AR.JO_CRR_CD" ).append("\n"); 
		query.append("             , AR.RE_DIVR_CD" ).append("\n"); 
		query.append("             , AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , AR.ORD_SEQ" ).append("\n"); 
		query.append("             , AR.ACT_DT" ).append("\n"); 
		query.append("             , AR.ACCT_CD" ).append("\n"); 
		query.append("             , AR.ST_DT" ).append("\n"); 
		query.append("             , AR.END_DT" ).append("\n"); 
		query.append("             , AR.SAIL_DYS" ).append("\n"); 
		query.append("             , AR.ESTM_YRMON" ).append("\n"); 
		query.append("             , AR.ESTM_DYS" ).append("\n"); 
		query.append("             , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("             , NVL(EA.BSA_QTY, 0) AS BSA_QTY" ).append("\n"); 
		query.append("             , NVL(EA.BSA_SLT_PRC, 0) AS BSA_SLT_PRC" ).append("\n"); 
		query.append("             --, EA.ESTM_AMT" ).append("\n"); 
		query.append("             , EA.STL_VVD_SEQ" ).append("\n"); 
		query.append("             , EA.ACT_AMT" ).append("\n"); 
		query.append("             , EA.STL_RMK" ).append("\n"); 
		query.append("             , 'SECOND' AS CHK_PRIORITY" ).append("\n"); 
		query.append("          FROM V_AR_STANDARD_DATA AR" ).append("\n"); 
		query.append("             , JOO_STL_TGT EA" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("           AND EA.REV_YRMON         BETWEEN REPLACE(@[fr_rev_yrmon],'-','') AND REPLACE(@[to_rev_yrmon],'-','') /* Condition Target Revenue Month*/" ).append("\n"); 
		query.append("           AND AR.JO_CRR_CD         = EA.JO_CRR_CD" ).append("\n"); 
		query.append("           AND AR.RLANE_CD          = EA.RLANE_CD" ).append("\n"); 
		query.append("           AND AR.JO_STL_ITM_CD     = EA.JO_STL_ITM_CD" ).append("\n"); 
		query.append("           AND AR.JO_STL_JB_CD      = EA.JO_STL_JB_CD" ).append("\n"); 
		query.append("           AND AR.RE_DIVR_CD        = EA.RE_DIVR_CD" ).append("\n"); 
		query.append("           AND AR.VSL_CD            = EA.VSL_CD" ).append("\n"); 
		query.append("           AND AR.SKD_VOY_NO        = EA.SKD_VOY_NO" ).append("\n"); 
		query.append("           AND AR.SKD_DIR_CD        = EA.SKD_DIR_CD" ).append("\n"); 
		query.append("           AND AR.REV_DIR_CD        = EA.REV_DIR_CD" ).append("\n"); 
		query.append("           AND AR.REV_YRMON         = EA.REV_YRMON" ).append("\n"); 
		query.append("           AND AR.ESTM_YRMON        = EA.ESTM_YRMON" ).append("\n"); 
		query.append("           AND AR.JO_MNL_CRE_FLG    = 'N' /* S/H, OPR Item 만 날짜 계산을 가져온다. */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT AR.VSL_CD" ).append("\n"); 
		query.append("             , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("             , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("             , AR.REV_DIR_CD" ).append("\n"); 
		query.append("             , AR.RLANE_CD" ).append("\n"); 
		query.append("             , AR.SLAN_CD" ).append("\n"); 
		query.append("             , AR.REV_YRMON" ).append("\n"); 
		query.append("             , AR.JO_CRR_CD" ).append("\n"); 
		query.append("             , AR.RE_DIVR_CD" ).append("\n"); 
		query.append("             , AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , AR.ORD_SEQ" ).append("\n"); 
		query.append("             , AR.ACT_DT" ).append("\n"); 
		query.append("             , AR.ACCT_CD" ).append("\n"); 
		query.append("             , AR.ST_DT" ).append("\n"); 
		query.append("             , AR.END_DT" ).append("\n"); 
		query.append("             , AR.SAIL_DYS" ).append("\n"); 
		query.append("             , NVL(AR.ESTM_YRMON,'999999') AS ESTM_YRMON" ).append("\n"); 
		query.append("             , AR.ESTM_DYS" ).append("\n"); 
		query.append("             , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("             , NVL(EA.BSA_QTY, 0) AS BSA_QTY" ).append("\n"); 
		query.append("             , NVL(EA.BSA_SLT_PRC, 0) AS BSA_SLT_PRC" ).append("\n"); 
		query.append("             --, EA.ESTM_AMT" ).append("\n"); 
		query.append("             , EA.STL_VVD_SEQ" ).append("\n"); 
		query.append("             , EA.ACT_AMT" ).append("\n"); 
		query.append("             , EA.STL_RMK" ).append("\n"); 
		query.append("             , 'SECOND' AS CHK_PRIORITY" ).append("\n"); 
		query.append("          FROM V_AR_STANDARD_DATA AR" ).append("\n"); 
		query.append("             , JOO_STL_TGT EA" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("           AND EA.REV_YRMON         BETWEEN REPLACE(@[fr_rev_yrmon],'-','') AND REPLACE(@[to_rev_yrmon],'-','') /* Condition Target Revenue Month*/" ).append("\n"); 
		query.append("           AND AR.JO_CRR_CD         = EA.JO_CRR_CD" ).append("\n"); 
		query.append("           AND AR.RLANE_CD          = EA.RLANE_CD" ).append("\n"); 
		query.append("           AND AR.JO_STL_ITM_CD     = EA.JO_STL_ITM_CD" ).append("\n"); 
		query.append("           AND AR.JO_STL_JB_CD      = NVL(EA.JO_STL_JB_CD,'101')" ).append("\n"); 
		query.append("           AND AR.RE_DIVR_CD        = EA.RE_DIVR_CD" ).append("\n"); 
		query.append("           AND AR.VSL_CD            = EA.VSL_CD" ).append("\n"); 
		query.append("           AND AR.SKD_VOY_NO        = EA.SKD_VOY_NO" ).append("\n"); 
		query.append("           AND AR.SKD_DIR_CD        = EA.SKD_DIR_CD" ).append("\n"); 
		query.append("           AND AR.REV_DIR_CD        = EA.REV_DIR_CD" ).append("\n"); 
		query.append("           AND AR.REV_YRMON         = EA.REV_YRMON" ).append("\n"); 
		query.append("           AND AR.ESTM_YRMON        = NVL(EA.ESTM_YRMON,'999999')" ).append("\n"); 
		query.append("           AND AR.JO_MNL_CRE_FLG    = 'Y' /* S/H, OPR 외의 Item 만 날짜 계산을 가져온다. */" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_SECOND_VVD_BSA;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT AR.*" ).append("\n"); 
		query.append("     , CASE WHEN (SUM(AR.CHK_EDIT_CNT) OVER (PARTITION BY AR.GRP_NO)) > 0 OR AR.JO_STL_ITM_CD NOT IN ('S/H','OPR') THEN 'N'" ).append("\n"); 
		query.append("            ELSE 'Y'" ).append("\n"); 
		query.append("       END AS CHK_EDIT_FLG" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("        SELECT CASE WHEN AR.STL_VVD_SEQ IS NULL THEN 'I'" ).append("\n"); 
		query.append("                    ELSE ( CASE WHEN AR.CHK_BSA_QTY <> 'SECOND' OR AR.CHK_BSA_SLT_PRC <> 'SECOND' THEN 'U' ELSE 'R' END )" ).append("\n"); 
		query.append("               END AS IBFLAG" ).append("\n"); 
		query.append("             , ROWNUM AS RNUM" ).append("\n"); 
		query.append("             , DENSE_RANK() OVER(ORDER BY AR.RE_DIVR_CD DESC, AR.ORD_SEQ||AR.JO_CRR_CD||AR.REV_VVD||AR.RLANE_CD||AR.REV_YRMON||AR.JO_STL_JB_CD) AS GRP_NO" ).append("\n"); 
		query.append("             , AR.RE_DIVR_CD||AR.JO_STL_ITM_CD||AR.ORD_SEQ||AR.JO_CRR_CD||AR.REV_VVD||AR.RLANE_CD||AR.REV_YRMON||AR.JO_STL_JB_CD AS GRP_KEY" ).append("\n"); 
		query.append("             , AR.RE_DIVR_CD" ).append("\n"); 
		query.append("             , AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , AR.ORD_SEQ" ).append("\n"); 
		query.append("             , AR.LOCL_CURR_CD" ).append("\n"); 
		query.append("             , AR.JO_CRR_CD" ).append("\n"); 
		query.append("             , AR.VSL_CD" ).append("\n"); 
		query.append("             , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("             , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("             , AR.REV_DIR_CD" ).append("\n"); 
		query.append("             , AR.REV_VVD" ).append("\n"); 
		query.append("             , AR.RLANE_CD" ).append("\n"); 
		query.append("             , AR.REV_YRMON" ).append("\n"); 
		query.append("             , AR.ACT_DT" ).append("\n"); 
		query.append("             , AR.ACCT_CD" ).append("\n"); 
		query.append("             , AR.ST_DT" ).append("\n"); 
		query.append("             , AR.END_DT" ).append("\n"); 
		query.append("             , AR.SAIL_DYS" ).append("\n"); 
		query.append("             , AR.ESTM_YRMON" ).append("\n"); 
		query.append("             , AR.MIN_ESTM_YRMON" ).append("\n"); 
		query.append("             , AR.MAX_ESTM_YRMON" ).append("\n"); 
		query.append("             , AR.ESTM_DYS" ).append("\n"); 
		query.append("             , CASE WHEN AR.JO_STL_ITM_CD NOT IN ('S/H','OPR') THEN NULL" ).append("\n"); 
		query.append("                    ELSE AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("               END AS JO_STL_JB_CD" ).append("\n"); 
		query.append("             , AR.BSA_QTY" ).append("\n"); 
		query.append("             , AR.BSA_SLT_PRC" ).append("\n"); 
		query.append("             , AR.ESTM_AMT" ).append("\n"); 
		query.append("             , AR.STL_VVD_SEQ" ).append("\n"); 
		query.append("             , CASE WHEN NVL(AR.ACT_AMT,0) = 0 AND AR.CHK_DEL_FLG = 'Y' THEN AR.ESTM_AMT" ).append("\n"); 
		query.append("                    ELSE AR.ACT_AMT" ).append("\n"); 
		query.append("               END AS ACT_AMT" ).append("\n"); 
		query.append("             , AR.STL_RMK" ).append("\n"); 
		query.append("             , AR.FROM_ESTM_AMT" ).append("\n"); 
		query.append("             , AR.ACT_INV_AMT" ).append("\n"); 
		query.append("             , AR.ACT_SLIP_AMT" ).append("\n"); 
		query.append("             , AR.ACT_APPR_AMT" ).append("\n"); 
		query.append("             , NVL(AR.STL_TGT_FLG, 'Y') AS STL_TGT_FLG" ).append("\n"); 
		query.append("             , AR.CHK_BSA_QTY AS CHK_QTY_PRIORITY" ).append("\n"); 
		query.append("             , AR.CHK_BSA_SLT_PRC  AS CHK_PRC_PRIORITY" ).append("\n"); 
		query.append("             , AR.CHK_DEL_FLG" ).append("\n"); 
		query.append("             , CASE WHEN AR.ACT_INV_AMT = AR.ACT_SLIP_AMT AND AR.ACT_INV_AMT = AR.ACT_APPR_AMT THEN 'Y'" ).append("\n"); 
		query.append("                    ELSE 'N'" ).append("\n"); 
		query.append("               END AS CHK_EQ_ACT_FLG" ).append("\n"); 
		query.append("             , CASE WHEN INSTR(AR.STL_RMK, 'Delete', 1) > 0 THEN 'Y'" ).append("\n"); 
		query.append("                    ELSE 'N'" ).append("\n"); 
		query.append("               END AS CHK_DEL_MRK_FLG" ).append("\n"); 
		query.append("             , CASE WHEN AR.JO_STL_ITM_CD IN ('S/H','OPR') AND (NVL((CASE WHEN NVL(AR.ACT_AMT,0) = 0 AND AR.CHK_DEL_FLG = 'Y' THEN AR.ESTM_AMT ELSE AR.ACT_AMT END),0) <> 0 OR AR.CHK_DEL_FLG = 'N') THEN 1" ).append("\n"); 
		query.append("                    ELSE 0" ).append("\n"); 
		query.append("               END AS CHK_EDIT_CNT" ).append("\n"); 
		query.append("          FROM (" ).append("\n"); 
		query.append("                SELECT AR.RE_DIVR_CD" ).append("\n"); 
		query.append("                     , AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , AR.ORD_SEQ" ).append("\n"); 
		query.append("                     , AR.LOCL_CURR_CD" ).append("\n"); 
		query.append("                     , AR.JO_CRR_CD" ).append("\n"); 
		query.append("                     , AR.VSL_CD" ).append("\n"); 
		query.append("                     , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , AR.REV_DIR_CD" ).append("\n"); 
		query.append("                     , AR.RLANE_CD" ).append("\n"); 
		query.append("                     , AR.REV_VVD" ).append("\n"); 
		query.append("                     , AR.REV_YRMON" ).append("\n"); 
		query.append("                     , AR.ACCT_CD" ).append("\n"); 
		query.append("                     , AR.ACT_DT" ).append("\n"); 
		query.append("                     , TO_CHAR(TO_DATE(AR.ST_DT,'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MI') AS ST_DT" ).append("\n"); 
		query.append("                     , TO_CHAR(TO_DATE(AR.END_DT,'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MI') AS END_DT" ).append("\n"); 
		query.append("                     , AR.SAIL_DYS" ).append("\n"); 
		query.append("                     , AR.ESTM_YRMON" ).append("\n"); 
		query.append("                     , MIN(AR.ESTM_YRMON) OVER (PARTITION BY AR.REV_VVD, AR.RLANE_CD, AR.REV_YRMON, AR.JO_CRR_CD, AR.RE_DIVR_CD, AR.JO_STL_ITM_CD, AR.JO_STL_JB_CD) AS MIN_ESTM_YRMON" ).append("\n"); 
		query.append("                     , MAX(AR.ESTM_YRMON) OVER (PARTITION BY AR.REV_VVD, AR.RLANE_CD, AR.REV_YRMON, AR.JO_CRR_CD, AR.RE_DIVR_CD, AR.JO_STL_ITM_CD, AR.JO_STL_JB_CD) AS MAX_ESTM_YRMON" ).append("\n"); 
		query.append("                     , AR.ESTM_DYS" ).append("\n"); 
		query.append("                     , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , AR.BSA_QTY" ).append("\n"); 
		query.append("                     , AR.BSA_SLT_PRC" ).append("\n"); 
		query.append("                     , AR.ESTM_AMT" ).append("\n"); 
		query.append("                     , AR.STL_VVD_SEQ" ).append("\n"); 
		query.append("                     , AR.ACT_AMT" ).append("\n"); 
		query.append("                     , AR.STL_RMK" ).append("\n"); 
		query.append("                     , NVL((SELECT ROUND(SUM((  SELECT EAR.ESTM_AMT  * R.USD_LOCL_XCH_RT" ).append("\n"); 
		query.append("                                                  FROM GL_MON_XCH_RT R" ).append("\n"); 
		query.append("                                                 WHERE 1=1" ).append("\n"); 
		query.append("                                                   AND R.ACCT_XCH_RT_LVL    = '1'" ).append("\n"); 
		query.append("                                                   AND R.ACCT_XCH_RT_YRMON  = SUBSTR(EAR.ACT_DT , 1, 6)" ).append("\n"); 
		query.append("                                                   AND R.CURR_CD            = AR.LOCL_CURR_CD)), 2) /*USD > Local Currency 로 변환.*/" ).append("\n"); 
		query.append("                              FROM JOO_ESTM_ACT_RSLT    EAR" ).append("\n"); 
		query.append("                                 , JOO_STL_ITM_ACCT     SIA" ).append("\n"); 
		query.append("                             WHERE 1=1" ).append("\n"); 
		query.append("                               AND EAR.EXE_YRMON = ( SELECT MAX(A.EXE_YRMON)" ).append("\n"); 
		query.append("                                                       FROM JOO_ESTM_ACT_RSLT A" ).append("\n"); 
		query.append("                                                      WHERE A.REV_YRMON BETWEEN REPLACE(@[fr_rev_yrmon],'-','') AND REPLACE(@[to_rev_yrmon],'-','') /* Condition Target Revenue Month*/" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                               AND EAR.REV_YRMON     BETWEEN REPLACE(@[fr_rev_yrmon],'-','') AND REPLACE(@[to_rev_yrmon],'-','') /* Condition Target Revenue Month*/" ).append("\n"); 
		query.append("                               AND EAR.ACCT_CD       = SIA.JO_ESTM_ACCT_CD" ).append("\n"); 
		query.append("                               AND EAR.JO_STL_ITM_CD = SIA.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                               AND EAR.JO_CRR_CD     = AR.JO_CRR_CD" ).append("\n"); 
		query.append("                               AND EAR.RLANE_CD      = AR.RLANE_CD" ).append("\n"); 
		query.append("                               AND EAR.JO_STL_ITM_CD = AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                               AND EAR.JO_STL_JB_CD  = AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("                               AND SIA.RE_DIVR_CD    = AR.RE_DIVR_CD" ).append("\n"); 
		query.append("                               AND EAR.VSL_CD        = AR.VSL_CD" ).append("\n"); 
		query.append("                               AND EAR.SKD_VOY_NO    = AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND EAR.SKD_DIR_CD    = AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND EAR.REV_DIR_CD    = AR.REV_DIR_CD" ).append("\n"); 
		query.append("                               AND EAR.ESTM_YRMON    = AR.ESTM_YRMON" ).append("\n"); 
		query.append("                       ), 0) AS FROM_ESTM_AMT /*from estimation*/" ).append("\n"); 
		query.append("                     , NVL(( SELECT SUM(DTL.ACT_AMT)" ).append("\n"); 
		query.append("                               FROM JOO_STL_TGT STL" ).append("\n"); 
		query.append("                                  , JOO_INV_DTL DTL" ).append("\n"); 
		query.append("                                  , JOO_INVOICE INV" ).append("\n"); 
		query.append("                              WHERE 1=1" ).append("\n"); 
		query.append("                               AND STL.VSL_CD        = AR.VSL_CD" ).append("\n"); 
		query.append("                               AND STL.SKD_VOY_NO    = AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND STL.SKD_DIR_CD    = AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_DIR_CD    = AR.REV_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_YRMON     = AR.REV_YRMON" ).append("\n"); 
		query.append("                               AND STL.STL_VVD_SEQ   = AR.STL_VVD_SEQ" ).append("\n"); 
		query.append("                               AND STL.VSL_CD        = DTL.VSL_CD" ).append("\n"); 
		query.append("                               AND STL.SKD_VOY_NO    = DTL.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND STL.SKD_DIR_CD    = DTL.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_DIR_CD    = DTL.REV_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_YRMON     = DTL.REV_YRMON" ).append("\n"); 
		query.append("                               AND STL.STL_VVD_SEQ   = DTL.STL_VVD_SEQ" ).append("\n"); 
		query.append("                               AND DTL.ACCT_YRMON    = INV.ACCT_YRMON" ).append("\n"); 
		query.append("                               AND DTL.JO_CRR_CD     = INV.JO_CRR_CD" ).append("\n"); 
		query.append("                               AND DTL.INV_NO        = INV.INV_NO" ).append("\n"); 
		query.append("                               AND DTL.RE_DIVR_CD    = INV.RE_DIVR_CD" ).append("\n"); 
		query.append("                       ), 0) AS ACT_INV_AMT /*Actual Status : Invoiced*/" ).append("\n"); 
		query.append("                     , NVL(( SELECT SUM(DTL.ACT_AMT)" ).append("\n"); 
		query.append("                               FROM JOO_STL_TGT STL" ).append("\n"); 
		query.append("                                  , JOO_INV_DTL DTL" ).append("\n"); 
		query.append("                                  , JOO_INVOICE INV" ).append("\n"); 
		query.append("                                  , JOO_CSR     CSR" ).append("\n"); 
		query.append("                              WHERE 1=1" ).append("\n"); 
		query.append("                               AND STL.VSL_CD        = AR.VSL_CD" ).append("\n"); 
		query.append("                               AND STL.SKD_VOY_NO    = AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND STL.SKD_DIR_CD    = AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_DIR_CD    = AR.REV_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_YRMON     = AR.REV_YRMON" ).append("\n"); 
		query.append("                               AND STL.STL_VVD_SEQ   = AR.STL_VVD_SEQ" ).append("\n"); 
		query.append("                               AND STL.VSL_CD        = DTL.VSL_CD" ).append("\n"); 
		query.append("                               AND STL.SKD_VOY_NO    = DTL.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND STL.SKD_DIR_CD    = DTL.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_DIR_CD    = DTL.REV_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_YRMON     = DTL.REV_YRMON" ).append("\n"); 
		query.append("                               AND STL.STL_VVD_SEQ   = DTL.STL_VVD_SEQ" ).append("\n"); 
		query.append("                               AND DTL.ACCT_YRMON    = INV.ACCT_YRMON" ).append("\n"); 
		query.append("                               AND DTL.JO_CRR_CD     = INV.JO_CRR_CD" ).append("\n"); 
		query.append("                               AND DTL.INV_NO        = INV.INV_NO" ).append("\n"); 
		query.append("                               AND DTL.RE_DIVR_CD    = INV.RE_DIVR_CD" ).append("\n"); 
		query.append("                               AND INV.RVS_CMB_FLG   = 'N'" ).append("\n"); 
		query.append("                               AND INV.RJCT_CMB_FLG  = 'N'" ).append("\n"); 
		query.append("                               AND INV.SLP_TP_CD     = CSR.SLP_TP_CD" ).append("\n"); 
		query.append("                               AND INV.SLP_FUNC_CD   = CSR.SLP_FUNC_CD" ).append("\n"); 
		query.append("                               AND INV.SLP_OFC_CD    = CSR.SLP_OFC_CD" ).append("\n"); 
		query.append("                               AND INV.SLP_ISS_DT    = CSR.SLP_ISS_DT" ).append("\n"); 
		query.append("                               AND INV.SLP_SER_NO    = CSR.SLP_SER_NO" ).append("\n"); 
		query.append("                       ), 0) AS ACT_SLIP_AMT /* Actual Status : Slip*/" ).append("\n"); 
		query.append("                     , NVL(( SELECT SUM(DTL.ACT_AMT)" ).append("\n"); 
		query.append("                               FROM JOO_STL_TGT STL" ).append("\n"); 
		query.append("                                  , JOO_INV_DTL DTL" ).append("\n"); 
		query.append("                                  , JOO_INVOICE INV" ).append("\n"); 
		query.append("                                  , JOO_CSR     CSR" ).append("\n"); 
		query.append("                              WHERE 1=1" ).append("\n"); 
		query.append("                               AND STL.VSL_CD        = AR.VSL_CD" ).append("\n"); 
		query.append("                               AND STL.SKD_VOY_NO    = AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND STL.SKD_DIR_CD    = AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_DIR_CD    = AR.REV_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_YRMON     = AR.REV_YRMON" ).append("\n"); 
		query.append("                               AND STL.STL_VVD_SEQ   = AR.STL_VVD_SEQ" ).append("\n"); 
		query.append("                               AND STL.VSL_CD        = DTL.VSL_CD" ).append("\n"); 
		query.append("                               AND STL.SKD_VOY_NO    = DTL.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND STL.SKD_DIR_CD    = DTL.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_DIR_CD    = DTL.REV_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_YRMON     = DTL.REV_YRMON" ).append("\n"); 
		query.append("                               AND STL.STL_VVD_SEQ   = DTL.STL_VVD_SEQ" ).append("\n"); 
		query.append("                               AND DTL.ACCT_YRMON    = INV.ACCT_YRMON" ).append("\n"); 
		query.append("                               AND DTL.JO_CRR_CD     = INV.JO_CRR_CD" ).append("\n"); 
		query.append("                               AND DTL.INV_NO        = INV.INV_NO" ).append("\n"); 
		query.append("                               AND DTL.RE_DIVR_CD    = INV.RE_DIVR_CD" ).append("\n"); 
		query.append("                               AND INV.RVS_CMB_FLG   = 'N'" ).append("\n"); 
		query.append("                               AND INV.RJCT_CMB_FLG  = 'N'" ).append("\n"); 
		query.append("                               AND INV.SLP_TP_CD     = CSR.SLP_TP_CD" ).append("\n"); 
		query.append("                               AND INV.SLP_FUNC_CD   = CSR.SLP_FUNC_CD" ).append("\n"); 
		query.append("                               AND INV.SLP_OFC_CD    = CSR.SLP_OFC_CD" ).append("\n"); 
		query.append("                               AND INV.SLP_ISS_DT    = CSR.SLP_ISS_DT" ).append("\n"); 
		query.append("                               AND INV.SLP_SER_NO    = CSR.SLP_SER_NO" ).append("\n"); 
		query.append("                               AND CSR.APRO_FLG      = 'Y'" ).append("\n"); 
		query.append("                       ), 0) AS ACT_APPR_AMT  /* Actual Status : Slip*/" ).append("\n"); 
		query.append("                     , ( SELECT CASE WHEN COUNT(DTL.INV_NO) > 0 THEN 'N' ELSE 'Y' END" ).append("\n"); 
		query.append("                               FROM JOO_STL_TGT STL" ).append("\n"); 
		query.append("                                  , JOO_INV_DTL DTL" ).append("\n"); 
		query.append("                              WHERE 1=1" ).append("\n"); 
		query.append("                               AND STL.VSL_CD        = AR.VSL_CD" ).append("\n"); 
		query.append("                               AND STL.SKD_VOY_NO    = AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND STL.SKD_DIR_CD    = AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_DIR_CD    = AR.REV_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_YRMON     = AR.REV_YRMON" ).append("\n"); 
		query.append("                               AND STL.STL_VVD_SEQ   = AR.STL_VVD_SEQ" ).append("\n"); 
		query.append("                               AND STL.VSL_CD        = DTL.VSL_CD" ).append("\n"); 
		query.append("                               AND STL.SKD_VOY_NO    = DTL.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND STL.SKD_DIR_CD    = DTL.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_DIR_CD    = DTL.REV_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_YRMON     = DTL.REV_YRMON" ).append("\n"); 
		query.append("                               AND STL.STL_VVD_SEQ   = DTL.STL_VVD_SEQ" ).append("\n"); 
		query.append("                       ) AS CHK_DEL_FLG" ).append("\n"); 
		query.append("                     , AR.CHK_BSA_QTY" ).append("\n"); 
		query.append("                     , AR.CHK_BSA_SLT_PRC" ).append("\n"); 
		query.append("                     , NVL(( SELECT STL.STL_TGT_FLG" ).append("\n"); 
		query.append("                               FROM JOO_STL_TGT STL" ).append("\n"); 
		query.append("                              WHERE 1=1" ).append("\n"); 
		query.append("                               AND STL.VSL_CD        = AR.VSL_CD" ).append("\n"); 
		query.append("                               AND STL.SKD_VOY_NO    = AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND STL.SKD_DIR_CD    = AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_DIR_CD    = AR.REV_DIR_CD" ).append("\n"); 
		query.append("                               AND STL.REV_YRMON     = AR.REV_YRMON" ).append("\n"); 
		query.append("                               AND STL.STL_VVD_SEQ   = AR.STL_VVD_SEQ" ).append("\n"); 
		query.append("                       ), 'Y') AS STL_TGT_FLG /*기 등록된 STL_TGT_FLG 조회*/" ).append("\n"); 
		query.append("                  FROM (" ).append("\n"); 
		query.append("                        SELECT AR.VSL_CD" ).append("\n"); 
		query.append("                             , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , AR.REV_DIR_CD" ).append("\n"); 
		query.append("                             , AR.REV_VVD" ).append("\n"); 
		query.append("                             , AR.SLAN_CD" ).append("\n"); 
		query.append("                             , AR.ST_DT" ).append("\n"); 
		query.append("                             , AR.END_DT" ).append("\n"); 
		query.append("                             , AR.MIN_YMDHMS" ).append("\n"); 
		query.append("                             , AR.MAX_YMDHMS" ).append("\n"); 
		query.append("                             , AR.SAIL_DYS" ).append("\n"); 
		query.append("                             , AR.ESTM_YRMON" ).append("\n"); 
		query.append("                             , AR.ESTM_DYS" ).append("\n"); 
		query.append("                             , AR.REV_YRMON" ).append("\n"); 
		query.append("                             , AR.RLANE_CD" ).append("\n"); 
		query.append("                             , AR.JO_CRR_CD" ).append("\n"); 
		query.append("                             , AR.RE_DIVR_CD" ).append("\n"); 
		query.append("                             , AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                             , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("                             , AR.LOCL_CURR_CD" ).append("\n"); 
		query.append("                             , AR.ACT_DT" ).append("\n"); 
		query.append("                             , AR.ACCT_CD" ).append("\n"); 
		query.append("                             , AR.BSA_QTY" ).append("\n"); 
		query.append("                             , AR.BSA_SLT_PRC" ).append("\n"); 
		query.append("                             , AR.ORD_SEQ" ).append("\n"); 
		query.append("                             , AR.MAX_ESTM_YRMON" ).append("\n"); 
		query.append("                             , AR.SUM_ESTM_DYS" ).append("\n"); 
		query.append("                             , AR.CHK_DIFF_DYS" ).append("\n"); 
		query.append("                             , AR.JO_MNL_CRE_FLG" ).append("\n"); 
		query.append("                             , AR.STL_VVD_SEQ" ).append("\n"); 
		query.append("                             , AR.ACT_AMT" ).append("\n"); 
		query.append("                             , AR.STL_RMK" ).append("\n"); 
		query.append("                             , AR.CHK_BSA_QTY" ).append("\n"); 
		query.append("                             , AR.CHK_BSA_SLT_PRC" ).append("\n"); 
		query.append("                             , CASE WHEN AR.ESTM_YRMON = AR.MAX_ESTM_YRMON THEN (AR.ORI_SUM_ESTM_AMT - AR.CHK_SUM_ESTM_AMT) + AR.ESTM_AMT" ).append("\n"); 
		query.append("                                    ELSE AR.ESTM_AMT" ).append("\n"); 
		query.append("                               END AS ESTM_AMT" ).append("\n"); 
		query.append("                             , AR.ORI_SUM_ESTM_AMT" ).append("\n"); 
		query.append("                             , AR.CHK_SUM_ESTM_AMT" ).append("\n"); 
		query.append("                             , (AR.ORI_SUM_ESTM_AMT - AR.CHK_SUM_ESTM_AMT) AS DIFF_ESTM_AMT" ).append("\n"); 
		query.append("                          FROM (" ).append("\n"); 
		query.append("                                SELECT AR.VSL_CD" ).append("\n"); 
		query.append("                                     , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     , AR.REV_DIR_CD" ).append("\n"); 
		query.append("                                     , AR.REV_VVD" ).append("\n"); 
		query.append("                                     , AR.SLAN_CD" ).append("\n"); 
		query.append("                                     , AR.ST_DT" ).append("\n"); 
		query.append("                                     , AR.END_DT" ).append("\n"); 
		query.append("                                     , AR.MIN_YMDHMS" ).append("\n"); 
		query.append("                                     , AR.MAX_YMDHMS" ).append("\n"); 
		query.append("                                     , AR.SAIL_DYS" ).append("\n"); 
		query.append("                                     , AR.ESTM_YRMON" ).append("\n"); 
		query.append("                                     , AR.ESTM_DYS" ).append("\n"); 
		query.append("                                     , AR.REV_YRMON" ).append("\n"); 
		query.append("                                     , AR.RLANE_CD" ).append("\n"); 
		query.append("                                     , AR.JO_CRR_CD" ).append("\n"); 
		query.append("                                     , AR.RE_DIVR_CD" ).append("\n"); 
		query.append("                                     , AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                     , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                     , AR.LOCL_CURR_CD" ).append("\n"); 
		query.append("                                     , AR.ACT_DT" ).append("\n"); 
		query.append("                                     , AR.ACCT_CD" ).append("\n"); 
		query.append("                                     , AR.BSA_QTY" ).append("\n"); 
		query.append("                                     , AR.BSA_SLT_PRC" ).append("\n"); 
		query.append("                                     , AR.ORD_SEQ" ).append("\n"); 
		query.append("                                     , AR.MAX_ESTM_YRMON" ).append("\n"); 
		query.append("                                     , AR.SUM_ESTM_DYS" ).append("\n"); 
		query.append("                                     , AR.CHK_DIFF_DYS" ).append("\n"); 
		query.append("                                     , AR.JO_MNL_CRE_FLG" ).append("\n"); 
		query.append("                                     , AR.STL_VVD_SEQ" ).append("\n"); 
		query.append("                                     , AR.ACT_AMT" ).append("\n"); 
		query.append("                                     , AR.STL_RMK" ).append("\n"); 
		query.append("                                     , AR.CHK_BSA_QTY" ).append("\n"); 
		query.append("                                     , AR.CHK_BSA_SLT_PRC" ).append("\n"); 
		query.append("                                     , AR.ESTM_AMT" ).append("\n"); 
		query.append("                                     , CASE WHEN AR.JO_STL_ITM_CD <> 'S/H' THEN AR.ESTM_AMT" ).append("\n"); 
		query.append("                                            ELSE  SUM(AR.ESTM_AMT) OVER (PARTITION BY AR.REV_VVD, AR.RLANE_CD, AR.SLAN_CD, AR.REV_YRMON, AR.JO_CRR_CD, AR.RE_DIVR_CD, AR.JO_STL_ITM_CD, AR.JO_STL_JB_CD)" ).append("\n"); 
		query.append("                                       END AS ORI_SUM_ESTM_AMT" ).append("\n"); 
		query.append("                                     , AR.CHK_SUM_ESTM_AMT" ).append("\n"); 
		query.append("                                  FROM (" ).append("\n"); 
		query.append("                                        SELECT AR.VSL_CD" ).append("\n"); 
		query.append("                                             , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                                             , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                                             , AR.REV_DIR_CD" ).append("\n"); 
		query.append("                                             , AR.REV_VVD" ).append("\n"); 
		query.append("                                             , AR.SLAN_CD" ).append("\n"); 
		query.append("                                             , AR.ST_DT" ).append("\n"); 
		query.append("                                             , AR.END_DT" ).append("\n"); 
		query.append("                                             , AR.MIN_YMDHMS" ).append("\n"); 
		query.append("                                             , AR.MAX_YMDHMS" ).append("\n"); 
		query.append("                                             , CASE WHEN AR.JO_MNL_CRE_FLG ='Y' THEN NULL ELSE AR.SAIL_DYS END AS SAIL_DYS" ).append("\n"); 
		query.append("                                             , CASE WHEN AR.JO_MNL_CRE_FLG ='Y' THEN NULL ELSE AR.ESTM_YRMON END AS ESTM_YRMON" ).append("\n"); 
		query.append("                                             , CASE WHEN AR.JO_MNL_CRE_FLG ='Y' THEN NULL ELSE AR.ESTM_DYS END AS ESTM_DYS" ).append("\n"); 
		query.append("                                             , AR.REV_YRMON" ).append("\n"); 
		query.append("                                             , AR.RLANE_CD" ).append("\n"); 
		query.append("                                             , AR.JO_CRR_CD" ).append("\n"); 
		query.append("                                             , AR.RE_DIVR_CD" ).append("\n"); 
		query.append("                                             , AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                             , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                             , AR.LOCL_CURR_CD" ).append("\n"); 
		query.append("                                             , AR.ACT_DT" ).append("\n"); 
		query.append("                                             , AR.ACCT_CD" ).append("\n"); 
		query.append("                                             , AR.BSA_QTY" ).append("\n"); 
		query.append("                                             , AR.BSA_SLT_PRC" ).append("\n"); 
		query.append("                                             , AR.ORD_SEQ" ).append("\n"); 
		query.append("                                             , AR.MAX_ESTM_YRMON" ).append("\n"); 
		query.append("                                             , AR.SUM_ESTM_DYS" ).append("\n"); 
		query.append("                                             , AR.CHK_DIFF_DYS" ).append("\n"); 
		query.append("                                             , AR.JO_MNL_CRE_FLG" ).append("\n"); 
		query.append("                                             , AR.STL_VVD_SEQ" ).append("\n"); 
		query.append("                                             , AR.ACT_AMT" ).append("\n"); 
		query.append("                                             , AR.STL_RMK" ).append("\n"); 
		query.append("                                             , AR.CHK_BSA_QTY" ).append("\n"); 
		query.append("                                             , AR.CHK_BSA_SLT_PRC" ).append("\n"); 
		query.append("                                             , CASE WHEN AR.JO_STL_ITM_CD = 'OPR' THEN ROUND((AR.BSA_QTY * AR.BSA_SLT_PRC * AR.ESTM_DYS), 2)" ).append("\n"); 
		query.append("                                                    WHEN AR.JO_STL_ITM_CD = 'S/H' THEN ROUND(DECODE(ROUND((AR.BSA_QTY * AR.BSA_SLT_PRC), 2), 0, NULL, ROUND((AR.BSA_QTY * AR.BSA_SLT_PRC), 2)) * ( DECODE(AR.ESTM_DYS,0,NULL,AR.ESTM_DYS) / DECODE(AR.SAIL_DYS,0,NULL,AR.SAIL_DYS)), 2)" ).append("\n"); 
		query.append("                                                    ELSE 0" ).append("\n"); 
		query.append("                                               END AS ESTM_AMT" ).append("\n"); 
		query.append("                                             , CASE WHEN AR.JO_STL_ITM_CD = 'OPR' THEN ROUND((AR.BSA_QTY * AR.BSA_SLT_PRC * AR.ESTM_DYS), 2)" ).append("\n"); 
		query.append("                                                    WHEN AR.JO_STL_ITM_CD = 'S/H' THEN SUM(ROUND(DECODE(ROUND((AR.BSA_QTY * AR.BSA_SLT_PRC), 2), 0, NULL, ROUND((AR.BSA_QTY * AR.BSA_SLT_PRC), 2)) * ( DECODE(AR.ESTM_DYS,0,NULL,AR.ESTM_DYS) / DECODE(AR.SAIL_DYS,0,NULL,AR.SAIL_DYS)), 2))" ).append("\n"); 
		query.append("                                                                                       OVER(PARTITION BY AR.REV_VVD, AR.RLANE_CD, AR.SLAN_CD, AR.REV_YRMON, AR.JO_CRR_CD, AR.RE_DIVR_CD, AR.JO_STL_ITM_CD, AR.JO_STL_JB_CD)" ).append("\n"); 
		query.append("                                                    ELSE 0" ).append("\n"); 
		query.append("                                               END CHK_SUM_ESTM_AMT" ).append("\n"); 
		query.append("                                          FROM (" ).append("\n"); 
		query.append("                                                SELECT AR.VSL_CD" ).append("\n"); 
		query.append("                                                     , AR.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                     , AR.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                     , AR.REV_DIR_CD" ).append("\n"); 
		query.append("                                                     , AR.REV_VVD" ).append("\n"); 
		query.append("                                                     , AR.SLAN_CD" ).append("\n"); 
		query.append("                                                     , AR.ST_DT" ).append("\n"); 
		query.append("                                                     , AR.END_DT" ).append("\n"); 
		query.append("                                                     , AR.MIN_YMDHMS" ).append("\n"); 
		query.append("                                                     , AR.MAX_YMDHMS" ).append("\n"); 
		query.append("                                                     , AR.SAIL_DYS" ).append("\n"); 
		query.append("                                                     , AR.ESTM_YRMON" ).append("\n"); 
		query.append("                                                     , AR.ESTM_DYS" ).append("\n"); 
		query.append("                                                     , AR.REV_YRMON" ).append("\n"); 
		query.append("                                                     , AR.RLANE_CD" ).append("\n"); 
		query.append("                                                     , AR.JO_CRR_CD" ).append("\n"); 
		query.append("                                                     , AR.RE_DIVR_CD" ).append("\n"); 
		query.append("                                                     , AR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                                     , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                                     , AR.LOCL_CURR_CD" ).append("\n"); 
		query.append("                                                     , AR.ACT_DT" ).append("\n"); 
		query.append("                                                     , AR.ACCT_CD" ).append("\n"); 
		query.append("                                                     , CASE WHEN AR.JO_MNL_CRE_FLG = 'N' THEN DECODE(NVL(SCN.BSA_QTY,0), 0, DECODE(NVL(FRT.BSA_QTY,0), 0, NVL(AR.DFT_BSA_QTY,0), NVL(FRT.BSA_QTY,0)), NVL(SCN.BSA_QTY,0)) /* 1순위 : STL , 2순위 : Estm, 3순위 : BSA*/" ).append("\n"); 
		query.append("                                                            ELSE NVL(SCN.BSA_QTY,0)" ).append("\n"); 
		query.append("                                                       END AS BSA_QTY" ).append("\n"); 
		query.append("                                                     , CASE WHEN AR.JO_STL_ITM_CD = 'S/H' THEN DECODE(NVL(SCN.BSA_SLT_PRC,0), 0, DECODE(NVL(FRT.BSA_SLT_PRC,0), 0, AR.DFT_BSA_SLT_PRC, FRT.BSA_SLT_PRC), SCN.BSA_SLT_PRC) /* S/H - 1순위 : Estm, 2순위 : STL, 3순위 : BSA*/" ).append("\n"); 
		query.append("                                                            WHEN AR.JO_STL_ITM_CD = 'OPR' THEN NVL(SCN.BSA_SLT_PRC,0) /* OPR - 1순위 : STL */" ).append("\n"); 
		query.append("                                                            ELSE NVL(SCN.BSA_SLT_PRC,0)" ).append("\n"); 
		query.append("                                                       END AS BSA_SLT_PRC" ).append("\n"); 
		query.append("                                                     , AR.DFT_BSA_QTY" ).append("\n"); 
		query.append("                                                     , AR.DFT_BSA_SLT_PRC" ).append("\n"); 
		query.append("                                                     , AR.DFT_BSA_ESTM_AMT" ).append("\n"); 
		query.append("                                                     , AR.ORD_SEQ" ).append("\n"); 
		query.append("                                                     , AR.MAX_ESTM_YRMON" ).append("\n"); 
		query.append("                                                     , AR.SUM_ESTM_DYS" ).append("\n"); 
		query.append("                                                     , AR.CHK_DIFF_DYS" ).append("\n"); 
		query.append("                                                     , AR.JO_MNL_CRE_FLG" ).append("\n"); 
		query.append("                                                     , SCN.STL_VVD_SEQ" ).append("\n"); 
		query.append("                                                     , SCN.ACT_AMT" ).append("\n"); 
		query.append("                                                     , SCN.STL_RMK" ).append("\n"); 
		query.append("                                                     , CASE WHEN AR.JO_MNL_CRE_FLG = 'N' THEN DECODE(NVL(SCN.BSA_QTY,0), 0, DECODE(NVL(FRT.BSA_QTY,0), 0, AR.CHK_PRIORITY, FRT.CHK_PRIORITY), SCN.CHK_PRIORITY)" ).append("\n"); 
		query.append("                                                            ELSE DECODE(SCN.STL_VVD_SEQ, NULL, AR.CHK_PRIORITY, SCN.CHK_PRIORITY)" ).append("\n"); 
		query.append("                                                       END AS CHK_BSA_QTY" ).append("\n"); 
		query.append("                                                     , CASE WHEN AR.JO_STL_ITM_CD = 'S/H' THEN DECODE(NVL(SCN.BSA_SLT_PRC,0), 0, DECODE(NVL(FRT.BSA_SLT_PRC,0), 0, AR.CHK_PRIORITY, FRT.CHK_PRIORITY), SCN.CHK_PRIORITY) /* S/H - 1순위 : Estm, 2순위 : STL, 3순위 : BSA*/" ).append("\n"); 
		query.append("                                                            WHEN AR.JO_STL_ITM_CD = 'OPR' THEN SCN.CHK_PRIORITY  /* OPR - 1순위 : STL */" ).append("\n"); 
		query.append("                                                            ELSE DECODE(SCN.STL_VVD_SEQ, NULL, AR.CHK_PRIORITY, SCN.CHK_PRIORITY) /* 기타ITEM - 1순위 : STL, 2순위 : BSA */" ).append("\n"); 
		query.append("                                                       END AS CHK_BSA_SLT_PRC" ).append("\n"); 
		query.append("                                                  FROM V_AR_STANDARD_DATA   AR" ).append("\n"); 
		query.append("                                                     , V_FIRST_VVD_BSA      FRT" ).append("\n"); 
		query.append("                                                     , V_SECOND_VVD_BSA     SCN" ).append("\n"); 
		query.append("                                                 WHERE 1=1" ).append("\n"); 
		query.append("                                                   AND AR.VSL_CD            = FRT.VSL_CD         (+)" ).append("\n"); 
		query.append("                                                   AND AR.SKD_VOY_NO        = FRT.SKD_VOY_NO     (+)" ).append("\n"); 
		query.append("                                                   AND AR.SKD_DIR_CD        = FRT.SKD_DIR_CD     (+)" ).append("\n"); 
		query.append("                                                   AND AR.REV_DIR_CD        = FRT.REV_DIR_CD     (+)" ).append("\n"); 
		query.append("                                                   AND AR.RLANE_CD          = FRT.RLANE_CD       (+)" ).append("\n"); 
		query.append("                                                   AND AR.REV_YRMON         = FRT.REV_YRMON      (+)" ).append("\n"); 
		query.append("                                                   AND AR.ESTM_YRMON        = FRT.ESTM_YRMON     (+)" ).append("\n"); 
		query.append("                                                   AND AR.JO_CRR_CD         = FRT.JO_CRR_CD      (+)" ).append("\n"); 
		query.append("                                                   AND AR.RE_DIVR_CD        = FRT.RE_DIVR_CD     (+)" ).append("\n"); 
		query.append("                                                   AND AR.JO_STL_ITM_CD     = FRT.JO_STL_ITM_CD  (+)" ).append("\n"); 
		query.append("                                                   AND AR.JO_STL_JB_CD      = FRT.JO_STL_JB_CD   (+)" ).append("\n"); 
		query.append("                                                   AND AR.VSL_CD            = SCN.VSL_CD         (+)" ).append("\n"); 
		query.append("                                                   AND AR.SKD_VOY_NO        = SCN.SKD_VOY_NO     (+)" ).append("\n"); 
		query.append("                                                   AND AR.SKD_DIR_CD        = SCN.SKD_DIR_CD     (+)" ).append("\n"); 
		query.append("                                                   AND AR.REV_DIR_CD        = SCN.REV_DIR_CD     (+)" ).append("\n"); 
		query.append("                                                   AND AR.RLANE_CD          = SCN.RLANE_CD       (+)" ).append("\n"); 
		query.append("                                                   AND AR.REV_YRMON         = SCN.REV_YRMON      (+)" ).append("\n"); 
		query.append("                                                   AND AR.ESTM_YRMON        = SCN.ESTM_YRMON     (+)" ).append("\n"); 
		query.append("                                                   AND AR.JO_CRR_CD         = SCN.JO_CRR_CD      (+)" ).append("\n"); 
		query.append("                                                   AND AR.RE_DIVR_CD        = SCN.RE_DIVR_CD     (+)" ).append("\n"); 
		query.append("                                                   AND AR.JO_STL_ITM_CD     = SCN.JO_STL_ITM_CD  (+)" ).append("\n"); 
		query.append("                                                   AND AR.JO_STL_JB_CD      = SCN.JO_STL_JB_CD   (+)" ).append("\n"); 
		query.append("                                                ) AR" ).append("\n"); 
		query.append("                                        ) AR" ).append("\n"); 
		query.append("                                ) AR" ).append("\n"); 
		query.append("                        ) AR" ).append("\n"); 
		query.append("                 ORDER BY AR.RE_DIVR_CD DESC" ).append("\n"); 
		query.append("                     , AR.ORD_SEQ" ).append("\n"); 
		query.append("                     , AR.JO_CRR_CD" ).append("\n"); 
		query.append("                     , AR.REV_VVD" ).append("\n"); 
		query.append("                     , AR.RLANE_CD" ).append("\n"); 
		query.append("                     , AR.REV_YRMON" ).append("\n"); 
		query.append("                     , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , AR.ST_DT" ).append("\n"); 
		query.append("                     , AR.END_DT" ).append("\n"); 
		query.append("                     , AR.ESTM_YRMON" ).append("\n"); 
		query.append("                ) AR" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("         ORDER BY AR.RE_DIVR_CD DESC" ).append("\n"); 
		query.append("             , AR.ORD_SEQ" ).append("\n"); 
		query.append("             , AR.JO_CRR_CD" ).append("\n"); 
		query.append("             , AR.REV_VVD" ).append("\n"); 
		query.append("             , AR.RLANE_CD" ).append("\n"); 
		query.append("             , AR.REV_YRMON" ).append("\n"); 
		query.append("             , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("             , AR.ST_DT" ).append("\n"); 
		query.append("             , AR.END_DT" ).append("\n"); 
		query.append("             , AR.ESTM_YRMON" ).append("\n"); 
		query.append("       ) AR" ).append("\n"); 
		query.append(" WHERE 1=1" ).append("\n"); 
		query.append(" ORDER BY AR.RE_DIVR_CD DESC" ).append("\n"); 
		query.append("     , AR.ORD_SEQ" ).append("\n"); 
		query.append("     , AR.JO_CRR_CD" ).append("\n"); 
		query.append("     , AR.REV_VVD" ).append("\n"); 
		query.append("     , AR.RLANE_CD" ).append("\n"); 
		query.append("     , AR.REV_YRMON" ).append("\n"); 
		query.append("     , AR.JO_STL_JB_CD" ).append("\n"); 
		query.append("     , AR.ST_DT" ).append("\n"); 
		query.append("     , AR.END_DT" ).append("\n"); 
		query.append("     , AR.ESTM_YRMON" ).append("\n"); 

	}
}