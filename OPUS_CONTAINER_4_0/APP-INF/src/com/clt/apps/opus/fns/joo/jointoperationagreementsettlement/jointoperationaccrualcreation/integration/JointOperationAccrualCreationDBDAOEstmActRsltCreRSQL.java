/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : JointOperationAccrualCreationDBDAOEstmActRsltCreRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.08.03
*@LastModifier : 
*@LastVersion : 1.0
* 2016.08.03 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.fns.joo.jointoperationagreementsettlement.jointoperationaccrualcreation.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class JointOperationAccrualCreationDBDAOEstmActRsltCreRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Create용 저장
	  * JOO [2015.07.21]Virtual Add Calling 처리. VSK_VSL_PORT_SKD.NVL(VT_ADD_CALL_FLG, 'N') = 'N'
	  * </pre>
	  */
	public JointOperationAccrualCreationDBDAOEstmActRsltCreRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("jo_crr_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rlane_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("usr_id",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("re_divr_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rev_yrmon_to",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rev_yrmon_fr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("exe_yrmon",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.fns.joo.jointoperationagreementsettlement.jointoperationaccrualcreation.integration").append("\n"); 
		query.append("FileName : JointOperationAccrualCreationDBDAOEstmActRsltCreRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH V_JOO_FINC_MTX AS (" ).append("\n"); 
		query.append("    SELECT FM.RE_DIVR_CD" ).append("\n"); 
		query.append("         , FM.JO_STL_ITM_CD" ).append("\n"); 
		query.append("         , CR.JO_CRR_CD" ).append("\n"); 
		query.append("         , CR.RLANE_CD" ).append("\n"); 
		query.append("         , CR.VNDR_SEQ" ).append("\n"); 
		query.append("         , CR.CUST_CNT_CD" ).append("\n"); 
		query.append("         , CR.CUST_SEQ" ).append("\n"); 
		query.append("         , FM.LOCL_CURR_CD" ).append("\n"); 
		query.append("         , ST.JO_STL_ITM_NM" ).append("\n"); 
		query.append("         , ST.JO_MNL_CRE_FLG" ).append("\n"); 
		query.append("         , ST.ORD_SEQ" ).append("\n"); 
		query.append("         , AC.JO_ESTM_ACCT_CD AS ACCT_CD" ).append("\n"); 
		query.append("      FROM JOO_CARRIER CR" ).append("\n"); 
		query.append("         , JOO_FINC_MTX FM" ).append("\n"); 
		query.append("         , JOO_STL_ITM ST" ).append("\n"); 
		query.append("         , JOO_STL_ITM_ACCT AC" ).append("\n"); 
		query.append("     WHERE 1=1" ).append("\n"); 
		query.append("       AND CR.DELT_FLG      = 'N'" ).append("\n"); 
		query.append("       AND CR.JO_CRR_CD     = FM.JO_CRR_CD" ).append("\n"); 
		query.append("       AND CR.RLANE_CD      = FM.RLANE_CD" ).append("\n"); 
		query.append("       AND FM.RE_DIVR_CD    = AC.RE_DIVR_CD" ).append("\n"); 
		query.append("       AND FM.JO_STL_ITM_CD = AC.JO_STL_ITM_CD" ).append("\n"); 
		query.append("       AND AC.JO_STL_ITM_CD = ST.JO_STL_ITM_CD" ).append("\n"); 
		query.append("#if (${jo_crr_cd}!='')" ).append("\n"); 
		query.append("       AND CR.JO_CRR_CD     = @[jo_crr_cd]     /* Condition Carrier */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${trd_cd}!='')" ).append("\n"); 
		query.append("       AND CR.TRD_CD        = @[trd_cd]        /* Condition Trade */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${rlane_cd}!='')" ).append("\n"); 
		query.append("       AND CR.RLANE_CD      = @[rlane_cd]   /* Condition Lane */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${re_divr_cd}!='')" ).append("\n"); 
		query.append("       AND FM.RE_DIVR_CD    = @[re_divr_cd]        /* Condition ALL, Revenue : R , Expense : E */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${jo_stl_itm_cds} != '' && ${jo_stl_itm_cds} != 'ALL')" ).append("\n"); 
		query.append("       /* Condition Items */" ).append("\n"); 
		query.append("       AND FM.JO_STL_ITM_CD IN ( #foreach($key IN ${jo_stl_itm_cds})#if($velocityCount < $jo_stl_itm_cds.size()) '$key', #else '$key' #end #end)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("     ORDER BY CR.JO_CRR_CD" ).append("\n"); 
		query.append("            , CR.RLANE_CD" ).append("\n"); 
		query.append("            , FM.RE_DIVR_CD" ).append("\n"); 
		query.append("            , ST.ORD_SEQ" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM  V_JOO_FINC_MTX;" ).append("\n"); 
		query.append("    , V_GL_ESTM_REV_VVD_RDC AS (" ).append("\n"); 
		query.append("        /* Revenue : NYK 선박, Expense : NYK 외의 선박 , ALL : Revenue + Expense */" ).append("\n"); 
		query.append("        SELECT GL.*" ).append("\n"); 
		query.append("          FROM (" ).append("\n"); 
		query.append("                SELECT 'R' AS RE_DIVR_CD" ).append("\n"); 
		query.append("                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS REV_VVD" ).append("\n"); 
		query.append("                     , A.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                     , A.VVD_TP" ).append("\n"); 
		query.append("                     , A.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                     , (SELECT TO_CHAR(MIN(VPS.VPS_ETA_DT),'YYYYMMDD')" ).append("\n"); 
		query.append("                          FROM VSK_VSL_PORT_SKD VPS" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND A.VSL_CD       = VPS.VSL_CD" ).append("\n"); 
		query.append("                           AND A.SKD_VOY_NO   = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND A.SKD_DIR_CD   = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND (VPS.TURN_PORT_IND_CD IS NULL    OR VPS.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F'))" ).append("\n"); 
		query.append("                           AND (VPS.SKD_CNG_STS_CD IS NULL      OR VPS.SKD_CNG_STS_CD != 'S')" ).append("\n"); 
		query.append("                           AND NVL(VPS.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 ADD*/" ).append("\n"); 
		query.append("                       ) AS ACT_DT" ).append("\n"); 
		query.append("                  FROM (SELECT EXE_YRMON" ).append("\n"); 
		query.append("                             , REV_YRMON" ).append("\n"); 
		query.append("                             , VSL_CD" ).append("\n"); 
		query.append("                             , SKD_VOY_NO" ).append("\n"); 
		query.append("                             , SKD_DIR_CD" ).append("\n"); 
		query.append("                             , REV_DIR_CD" ).append("\n"); 
		query.append("                             , ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                             , VVD_TP" ).append("\n"); 
		query.append("                             , ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                             , RLANE_CD" ).append("\n"); 
		query.append("                             , ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                             , ROW_NUMBER() OVER (PARTITION BY VSL_CD,SKD_VOY_NO,SKD_DIR_CD,REV_DIR_CD,RLANE_CD ORDER BY VVD_TP) VVD_CNT" ).append("\n"); 
		query.append("                          FROM (SELECT /*+ ORDERED */" ).append("\n"); 
		query.append("                                       REPLACE(@[exe_yrmon],'-','') AS EXE_YRMON --EXE_YRMON" ).append("\n"); 
		query.append("                                     , GL.REV_YRMON" ).append("\n"); 
		query.append("                                     , GL.VSL_CD" ).append("\n"); 
		query.append("                                     , GL.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     , GL.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     , GL.REV_DIR_CD" ).append("\n"); 
		query.append("                                     , GL.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                                     , GL.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                                     , GL.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                                     , GL.RLANE_CD" ).append("\n"); 
		query.append("                                     , DECODE(GL.ESTM_VVD_TP_CD,'RV','1','BV','2','PV','3') VVD_TP" ).append("\n"); 
		query.append("                                     , ROW_NUMBER() OVER (PARTITION BY GL.VSL_CD,GL.SKD_VOY_NO,GL.SKD_DIR_CD,GL.REV_DIR_CD,GL.RLANE_CD ORDER BY GL.EXE_YRMON DESC, GL.REV_YRMON DESC) IO_CNT" ).append("\n"); 
		query.append("                                  FROM GL_ESTM_REV_VVD GL" ).append("\n"); 
		query.append("                                 WHERE 1=1" ).append("\n"); 
		query.append("                                   AND GL.REV_YRMON BETWEEN TO_CHAR(TO_DATE(REPLACE(@[rev_yrmon_fr],'-',''),'YYYYMM'),'YYYYMM') AND REPLACE(@[rev_yrmon_to],'-','')" ).append("\n"); 
		query.append("#if (${vvd}!='')" ).append("\n"); 
		query.append("                                   AND GL.VSL_CD||GL.SKD_VOY_NO||GL.SKD_DIR_CD||GL.REV_DIR_CD LIKE @[vvd]||'%' /* condition VVD */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                   AND EXISTS (SELECT 'Y'" ).append("\n"); 
		query.append("                                                 FROM MDM_VSL_CNTR MVC" ).append("\n"); 
		query.append("                                                WHERE MVC.DELT_FLG  = 'N'" ).append("\n"); 
		query.append("                                                 AND MVC.VSL_CD     = GL.VSL_CD" ).append("\n"); 
		query.append("                                                 --AND MVC.CRR_CD = COM_CONSTANTMGR_PKG.COM_GETCOMPANYCODE_FNC /*OWN 의 선박.*/" ).append("\n"); 
		query.append("                                               )" ).append("\n"); 
		query.append("                               )" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND IO_CNT = 1 ) A" ).append("\n"); 
		query.append("                 WHERE A.VVD_CNT = 1" ).append("\n"); 
		query.append("                 UNION ALL" ).append("\n"); 
		query.append("                SELECT 'E' AS RE_DIVR_CD" ).append("\n"); 
		query.append("                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS REV_VVD" ).append("\n"); 
		query.append("                     , A.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                     , A.VVD_TP" ).append("\n"); 
		query.append("                     , A.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                     , (SELECT TO_CHAR(MIN(VPS.VPS_ETA_DT),'YYYYMMDD')" ).append("\n"); 
		query.append("                          FROM VSK_VSL_PORT_SKD VPS" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND A.VSL_CD       = VPS.VSL_CD" ).append("\n"); 
		query.append("                           AND A.SKD_VOY_NO   = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND A.SKD_DIR_CD   = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND (VPS.TURN_PORT_IND_CD IS NULL    OR VPS.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F'))" ).append("\n"); 
		query.append("                           AND (VPS.SKD_CNG_STS_CD IS NULL      OR VPS.SKD_CNG_STS_CD != 'S')" ).append("\n"); 
		query.append("                           AND NVL(VPS.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 ADD*/" ).append("\n"); 
		query.append("                       ) AS ACT_DT" ).append("\n"); 
		query.append("                  FROM (SELECT EXE_YRMON" ).append("\n"); 
		query.append("                             , REV_YRMON" ).append("\n"); 
		query.append("                             , VSL_CD" ).append("\n"); 
		query.append("                             , SKD_VOY_NO" ).append("\n"); 
		query.append("                             , SKD_DIR_CD" ).append("\n"); 
		query.append("                             , REV_DIR_CD" ).append("\n"); 
		query.append("                             , ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                             , VVD_TP" ).append("\n"); 
		query.append("                             , ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                             , RLANE_CD" ).append("\n"); 
		query.append("                             , ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                             , ROW_NUMBER() OVER (PARTITION BY VSL_CD,SKD_VOY_NO,SKD_DIR_CD,REV_DIR_CD,RLANE_CD ORDER BY VVD_TP) VVD_CNT" ).append("\n"); 
		query.append("                          FROM (SELECT /*+ ORDERED */" ).append("\n"); 
		query.append("                                       REPLACE(@[exe_yrmon],'-','') AS EXE_YRMON --EXE_YRMON" ).append("\n"); 
		query.append("                                     , GL.REV_YRMON" ).append("\n"); 
		query.append("                                     , GL.VSL_CD" ).append("\n"); 
		query.append("                                     , GL.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     , GL.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     , GL.REV_DIR_CD" ).append("\n"); 
		query.append("                                     , GL.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                                     , GL.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                                     , GL.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                                     , GL.RLANE_CD" ).append("\n"); 
		query.append("                                     , DECODE(GL.ESTM_VVD_TP_CD,'RV','1','BV','2','PV','3') VVD_TP" ).append("\n"); 
		query.append("                                     , ROW_NUMBER() OVER (PARTITION BY GL.VSL_CD,GL.SKD_VOY_NO,GL.SKD_DIR_CD,GL.REV_DIR_CD,GL.RLANE_CD ORDER BY GL.EXE_YRMON DESC, GL.REV_YRMON DESC) IO_CNT" ).append("\n"); 
		query.append("                                  FROM GL_ESTM_REV_VVD GL" ).append("\n"); 
		query.append("                                 WHERE 1=1" ).append("\n"); 
		query.append("                                   AND GL.REV_YRMON BETWEEN TO_CHAR(TO_DATE(REPLACE(@[rev_yrmon_fr],'-',''),'YYYYMM'),'YYYYMM') AND REPLACE(@[rev_yrmon_to],'-','')" ).append("\n"); 
		query.append("#if (${vvd}!='')" ).append("\n"); 
		query.append("                                   AND GL.VSL_CD||GL.SKD_VOY_NO||GL.SKD_DIR_CD||GL.REV_DIR_CD LIKE @[vvd]||'%' /* condition VVD */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                   AND EXISTS (SELECT 'Y'" ).append("\n"); 
		query.append("                                                 FROM MDM_VSL_CNTR MVC" ).append("\n"); 
		query.append("                                                WHERE MVC.DELT_FLG  = 'N'" ).append("\n"); 
		query.append("                                                  AND MVC.VSL_CD    = GL.VSL_CD" ).append("\n"); 
		query.append("                                                  --AND MVC.CRR_CD <> COM_CONSTANTMGR_PKG.COM_GETCOMPANYCODE_FNC /*OWN외의 선박.*/" ).append("\n"); 
		query.append("                                               )" ).append("\n"); 
		query.append("                               )" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND IO_CNT = 1 ) A" ).append("\n"); 
		query.append("                 WHERE A.VVD_CNT = 1" ).append("\n"); 
		query.append("               ) GL" ).append("\n"); 
		query.append("         WHERE GL.ACT_DT IS NOT NULL" ).append("\n"); 
		query.append("         ORDER BY" ).append("\n"); 
		query.append("               GL.RE_DIVR_CD DESC" ).append("\n"); 
		query.append("             , GL.REV_VVD" ).append("\n"); 
		query.append("             , GL.RLANE_CD" ).append("\n"); 
		query.append("             , GL.REV_YRMON" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("--SELECT * FROM  V_GL_ESTM_REV_VVD_RDC;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    , V_GL_ESTM_REV_VVD AS (" ).append("\n"); 
		query.append("        -- Carrier, Item을 AR_MST_REV_VVD 와 조인하여 기초 Data를 만든다." ).append("\n"); 
		query.append("        SELECT GL.EXE_YRMON" ).append("\n"); 
		query.append("             , GL.REV_YRMON" ).append("\n"); 
		query.append("             , GL.VSL_CD" ).append("\n"); 
		query.append("             , GL.SKD_VOY_NO" ).append("\n"); 
		query.append("             , GL.SKD_DIR_CD" ).append("\n"); 
		query.append("             , GL.REV_DIR_CD" ).append("\n"); 
		query.append("             , GL.REV_VVD" ).append("\n"); 
		query.append("             , GL.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("             , GL.VVD_TP" ).append("\n"); 
		query.append("             , GL.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("             , GL.RLANE_CD" ).append("\n"); 
		query.append("             , GL.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("             , GL.ACT_DT" ).append("\n"); 
		query.append("             , CR.JO_CRR_CD" ).append("\n"); 
		query.append("             , CR.RE_DIVR_CD" ).append("\n"); 
		query.append("             , CR.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , CR.LOCL_CURR_CD" ).append("\n"); 
		query.append("             , CR.JO_MNL_CRE_FLG" ).append("\n"); 
		query.append("             , CR.ORD_SEQ" ).append("\n"); 
		query.append("             , CR.ACCT_CD" ).append("\n"); 
		query.append("             , CR.VNDR_SEQ" ).append("\n"); 
		query.append("             , CR.CUST_CNT_CD" ).append("\n"); 
		query.append("             , CR.CUST_SEQ" ).append("\n"); 
		query.append("          FROM V_GL_ESTM_REV_VVD_RDC    GL" ).append("\n"); 
		query.append("             , V_JOO_FINC_MTX           CR" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("           AND GL.RLANE_CD      = CR.RLANE_CD" ).append("\n"); 
		query.append("           AND GL.RE_DIVR_CD    = CR.RE_DIVR_CD    /* 조건 추가 : Revenue, Expense, ALL 의 대상 추가.*/" ).append("\n"); 
		query.append("         ORDER BY" ).append("\n"); 
		query.append("               CR.JO_CRR_CD" ).append("\n"); 
		query.append("             , GL.RE_DIVR_CD DESC" ).append("\n"); 
		query.append("             , CR.ORD_SEQ" ).append("\n"); 
		query.append("             , GL.REV_VVD" ).append("\n"); 
		query.append("             , GL.RLANE_CD" ).append("\n"); 
		query.append("             , GL.REV_YRMON" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("--SELECT * FROM V_GL_ESTM_REV_VVD;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("     , V_PORT_SKD_ETA AS (" ).append("\n"); 
		query.append("        /* PORT SKD 의 ETA로 Start, End Date를 조회 한다.: S/H, OPR 화면에서 조건에 맞추어서 진행 한다. */" ).append("\n"); 
		query.append("        SELECT *" ).append("\n"); 
		query.append("          FROM (SELECT A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.SLAN_CD" ).append("\n"); 
		query.append("                     , A.ACT_DT" ).append("\n"); 
		query.append("                     , TO_CHAR(MIN(VPS_ETA_DT),'YYYYMMDDHH24MISS')      AS ST_DT" ).append("\n"); 
		query.append("                     , TO_CHAR(MAX(NEXT_PORT_ETA),'YYYYMMDDHH24MISS')   AS END_DT" ).append("\n"); 
		query.append("                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                     , A.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                     , A.VVD_TP" ).append("\n"); 
		query.append("                     , A.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                     , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , A.ORD_SEQ" ).append("\n"); 
		query.append("                  FROM (SELECT /*+ ORDERED USE_HASH(VSL MVL VPS) */" ).append("\n"); 
		query.append("                               VPS.VSL_CD" ).append("\n"); 
		query.append("                             , VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("                             , VPS.CLPT_SEQ" ).append("\n"); 
		query.append("                             , VPS.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                             , VPS.VPS_ETA_DT" ).append("\n"); 
		query.append("                             , VPS.VPS_ETD_DT" ).append("\n"); 
		query.append("                             , VSL.VSL_SLAN_CD AS SLAN_CD" ).append("\n"); 
		query.append("                             , NVL((SELECT S1.VPS_ETA_DT" ).append("\n"); 
		query.append("                                      FROM VSK_VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                                     WHERE S1.VSL_CD        = VPS.VSL_CD" ).append("\n"); 
		query.append("                                       AND S1.SKD_VOY_NO    = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                                       AND S1.SKD_DIR_CD    = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                                       AND S1.CLPT_SEQ      = ( SELECT MIN(CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                  FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                                 WHERE VSL_CD       = VPS.VSL_CD" ).append("\n"); 
		query.append("                                                                   AND SKD_VOY_NO   = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                   AND SKD_DIR_CD   = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                   AND CLPT_SEQ     > VPS.CLPT_SEQ" ).append("\n"); 
		query.append("                                                                   AND (SKD_CNG_STS_CD IS NULL OR SKD_CNG_STS_CD != 'S') )" ).append("\n"); 
		query.append("                                       AND ROWNUM = 1 ),VPS.VPS_ETD_DT) AS NEXT_PORT_ETA" ).append("\n"); 
		query.append("                             , VGL.EXE_YRMON" ).append("\n"); 
		query.append("                             , VGL.REV_YRMON" ).append("\n"); 
		query.append("                             , VGL.REV_DIR_CD" ).append("\n"); 
		query.append("                             , VGL.RLANE_CD" ).append("\n"); 
		query.append("                             , VGL.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                             , VGL.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                             , VGL.VVD_TP" ).append("\n"); 
		query.append("                             , VGL.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                             , VGL.JO_CRR_CD" ).append("\n"); 
		query.append("                             , VGL.RE_DIVR_CD" ).append("\n"); 
		query.append("                             , VGL.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                             , VGL.ORD_SEQ" ).append("\n"); 
		query.append("                             , VGL.ACT_DT" ).append("\n"); 
		query.append("                          FROM VSK_VSL_SKD          VSL" ).append("\n"); 
		query.append("                             , MDM_VSL_CNTR         MVL" ).append("\n"); 
		query.append("                             , VSK_VSL_PORT_SKD     VPS" ).append("\n"); 
		query.append("                             , MDM_VSL_SVC_LANE_DIR MVS" ).append("\n"); 
		query.append("                             , V_GL_ESTM_REV_VVD    VGL" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                           AND VSL.VSL_CD       = VGL.VSL_CD" ).append("\n"); 
		query.append("                           AND VSL.SKD_VOY_NO   = VGL.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND VSL.SKD_DIR_CD   = VGL.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND VSL.VSL_SLAN_CD  = SUBSTR(VGL.RLANE_CD, 1,3)" ).append("\n"); 
		query.append("                           --AND VGL.JO_MNL_CRE_FLG = 'N' /* 전체 Item 날짜 계산을 가져온다. */" ).append("\n"); 
		query.append("                           AND VSL.VSL_CD       = MVL.VSL_CD" ).append("\n"); 
		query.append("                           AND VSL.VSL_CD       = VPS.VSL_CD" ).append("\n"); 
		query.append("                           AND VSL.SKD_VOY_NO   = VPS.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND VSL.SKD_DIR_CD   = VPS.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND (VPS.TURN_PORT_IND_CD IS NULL    OR VPS.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F'))" ).append("\n"); 
		query.append("                           AND (VPS.SKD_CNG_STS_CD IS NULL      OR VPS.SKD_CNG_STS_CD != 'S')" ).append("\n"); 
		query.append("                           AND NVL(VPS.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 Add*/" ).append("\n"); 
		query.append("                           AND VSL.VSL_SLAN_CD  = MVS.VSL_SLAN_CD" ).append("\n"); 
		query.append("                           AND VSL.SKD_DIR_CD   = MVS.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("                         ORDER BY VPS.VPS_ETA_DT" ).append("\n"); 
		query.append("                             , MVS.VSL_SLAN_DIR_SEQ" ).append("\n"); 
		query.append("                             , VPS.CLPT_SEQ" ).append("\n"); 
		query.append("                       ) A" ).append("\n"); 
		query.append("                 GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.SLAN_CD" ).append("\n"); 
		query.append("                     , A.ACT_DT" ).append("\n"); 
		query.append("                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                     , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , A.ORD_SEQ" ).append("\n"); 
		query.append("                     , A.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                     , A.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                     , A.VVD_TP" ).append("\n"); 
		query.append("                     , A.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("               )" ).append("\n"); 
		query.append("         ORDER BY ST_DT, END_DT" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_PORT_SKD_ETA;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  , V_GL_STANDARD_DATA AS (" ).append("\n"); 
		query.append("        /* V_AR_MST_REV_VVD 별 From - To 기간을 월별로 나누어 주는 쿼리입니다. VVD 별 전체에서 최소월 ~ 최대월을 구한뒤에 조인하는 부분입닏.*/" ).append("\n"); 
		query.append("        SELECT A.VSL_CD" ).append("\n"); 
		query.append("             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("             , A.ACT_DT" ).append("\n"); 
		query.append("             , A.ST_DT" ).append("\n"); 
		query.append("             , A.END_DT" ).append("\n"); 
		query.append("             , A.MIN_YMDHMS" ).append("\n"); 
		query.append("             , A.MAX_YMDHMS" ).append("\n"); 
		query.append("             , A.SAIL_DYS" ).append("\n"); 
		query.append("             , A.ESTM_YRMON" ).append("\n"); 
		query.append("             , CASE WHEN A.ESTM_YRMON = A.MAX_ESTM_YRMON THEN (A.SAIL_DYS - A.SUM_ESTM_DYS) + A.ESTM_DYS" ).append("\n"); 
		query.append("                    ELSE A.ESTM_DYS" ).append("\n"); 
		query.append("               END ESTM_DYS" ).append("\n"); 
		query.append("             , A.EXE_YRMON" ).append("\n"); 
		query.append("             , A.REV_YRMON" ).append("\n"); 
		query.append("             , A.REV_DIR_CD" ).append("\n"); 
		query.append("             , A.RLANE_CD" ).append("\n"); 
		query.append("             , A.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("             , A.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("             , A.VVD_TP" ).append("\n"); 
		query.append("             , A.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("             , A.JO_CRR_CD" ).append("\n"); 
		query.append("             , A.RE_DIVR_CD" ).append("\n"); 
		query.append("             , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , A.ORD_SEQ" ).append("\n"); 
		query.append("             , A.MAX_ESTM_YRMON" ).append("\n"); 
		query.append("             , A.SUM_ESTM_DYS" ).append("\n"); 
		query.append("             , (A.SAIL_DYS - A.SUM_ESTM_DYS) AS CHK_DIFF_DYS" ).append("\n"); 
		query.append("          FROM (" ).append("\n"); 
		query.append("                SELECT A.VSL_CD" ).append("\n"); 
		query.append("                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                     , A.ACT_DT" ).append("\n"); 
		query.append("                     , A.ST_DT" ).append("\n"); 
		query.append("                     , A.END_DT" ).append("\n"); 
		query.append("                     , A.MIN_YMDHMS" ).append("\n"); 
		query.append("                     , A.MAX_YMDHMS" ).append("\n"); 
		query.append("                     , ROUND((TO_DATE(A.END_DT,'YYYYMMDDHH24MISS')    - TO_DATE(A.ST_DT,'YYYYMMDDHH24MISS')),5) AS SAIL_DYS" ).append("\n"); 
		query.append("                     , A.ESTM_YRMON" ).append("\n"); 
		query.append("                     , ROUND((TO_DATE(A.MAX_YMDHMS,'YYYYMMDDHH24MISS') - TO_DATE(A.MIN_YMDHMS,'YYYYMMDDHH24MISS')),5) AS ESTM_DYS" ).append("\n"); 
		query.append("                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                     , A.REV_YRMON" ).append("\n"); 
		query.append("                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                     , A.RLANE_CD" ).append("\n"); 
		query.append("                     , A.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                     , A.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                     , A.VVD_TP" ).append("\n"); 
		query.append("                     , A.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                     , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , A.ORD_SEQ" ).append("\n"); 
		query.append("                     , MAX(A.ESTM_YRMON) OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, A.RLANE_CD, A.EXE_YRMON, A.REV_YRMON, A.JO_CRR_CD, A.RE_DIVR_CD, A.JO_STL_ITM_CD) AS MAX_ESTM_YRMON" ).append("\n"); 
		query.append("                     , SUM(ROUND((TO_DATE(A.MAX_YMDHMS,'YYYYMMDDHH24MISS') - TO_DATE(A.MIN_YMDHMS,'YYYYMMDDHH24MISS')),5))" ).append("\n"); 
		query.append("                           OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, A.RLANE_CD, A.EXE_YRMON, A.REV_YRMON, A.JO_CRR_CD, A.RE_DIVR_CD, A.JO_STL_ITM_CD) AS SUM_ESTM_DYS" ).append("\n"); 
		query.append("                  FROM (SELECT A.VSL_CD" ).append("\n"); 
		query.append("                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , A.ACT_DT" ).append("\n"); 
		query.append("                             , A.ST_DT" ).append("\n"); 
		query.append("                             , A.END_DT" ).append("\n"); 
		query.append("                             , A.DATES AS ESTM_YRMON" ).append("\n"); 
		query.append("                             , CASE WHEN SUBSTR(A.ST_DT, 1,6) = A.DATES THEN A.DATES||SUBSTR(A.ST_DT,7)" ).append("\n"); 
		query.append("                                    ELSE A.DATES||'01000000'" ).append("\n"); 
		query.append("                               END AS MIN_YMDHMS" ).append("\n"); 
		query.append("                             , CASE WHEN SUBSTR(A.END_DT, 1,6) = A.DATES THEN A.DATES||SUBSTR(A.END_DT,7)" ).append("\n"); 
		query.append("                                    ELSE TO_CHAR(LAST_DAY(TO_DATE(A.DATES,'YYYYMM')) + 1,'YYYYMMDD') ||'000000'" ).append("\n"); 
		query.append("                               END AS MAX_YMDHMS" ).append("\n"); 
		query.append("                             , A.EXE_YRMON" ).append("\n"); 
		query.append("                             , A.REV_YRMON" ).append("\n"); 
		query.append("                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                             , A.RLANE_CD" ).append("\n"); 
		query.append("                             , A.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                             , A.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                             , A.VVD_TP" ).append("\n"); 
		query.append("                             , A.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                             , A.JO_CRR_CD" ).append("\n"); 
		query.append("                             , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                             , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                             , A.ORD_SEQ" ).append("\n"); 
		query.append("                          FROM (SELECT A.VSL_CD" ).append("\n"); 
		query.append("                                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     , A.ACT_DT" ).append("\n"); 
		query.append("                                     , A.ST_DT" ).append("\n"); 
		query.append("                                     , A.END_DT" ).append("\n"); 
		query.append("                                     , B.DATES" ).append("\n"); 
		query.append("                                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                                     , A.REV_YRMON" ).append("\n"); 
		query.append("                                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                     , A.RLANE_CD" ).append("\n"); 
		query.append("                                     , A.ESTM_IOC_DIV_CD" ).append("\n"); 
		query.append("                                     , A.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("                                     , A.VVD_TP" ).append("\n"); 
		query.append("                                     , A.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("                                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                     , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                     , A.ORD_SEQ" ).append("\n"); 
		query.append("                                  FROM V_PORT_SKD_ETA A" ).append("\n"); 
		query.append("                                     , (SELECT TO_CHAR(ADD_MONTHS(TO_DATE(A.MIN_YM,'YYYYMM'),LEVEL-1),'YYYYMM') AS DATES" ).append("\n"); 
		query.append("                                          FROM (SELECT MIN(SUBSTR(A.ST_DT,1,6)) MIN_YM" ).append("\n"); 
		query.append("                                                     , MAX(SUBSTR(A.END_DT,1,6)) MAX_YM" ).append("\n"); 
		query.append("                                                  FROM V_PORT_SKD_ETA A" ).append("\n"); 
		query.append("                                                ) A" ).append("\n"); 
		query.append("                                         CONNECT BY LEVEL <= MONTHS_BETWEEN(ADD_MONTHS(TO_DATE(A.MAX_YM,'YYYYMM'), 1), TO_DATE(A.MIN_YM, 'YYYYMM'))" ).append("\n"); 
		query.append("                                       ) B" ).append("\n"); 
		query.append("                                 WHERE B.DATES BETWEEN SUBSTR(A.ST_DT,1,6) AND SUBSTR(A.END_DT,1,6)" ).append("\n"); 
		query.append("                                ) A" ).append("\n"); 
		query.append("                          ) A" ).append("\n"); 
		query.append("                  WHERE 1=1" ).append("\n"); 
		query.append("                    --AND TO_DATE(A.ESTM_YRMON,'YYYYMM') <= TO_DATE(REPLACE([exe_yrmon],'-',''),'YYYYMM') /*Working Month 이후는 구할 필요가 없음. 2016.07.06 주석처리.*/" ).append("\n"); 
		query.append("                    --AND A.VSL_CD|| A.SKD_VOY_NO|| A.SKD_DIR_CD = 'MKFA0001W'" ).append("\n"); 
		query.append("           ) A" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("--SELECT * FROM V_GL_STANDARD_DATA;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  , V_VVD_ESTM_BSA_SH_OPR AS (" ).append("\n"); 
		query.append("        /* S/H, OPR Item.*/" ).append("\n"); 
		query.append("        SELECT GL.EXE_YRMON" ).append("\n"); 
		query.append("             , GL.REV_YRMON" ).append("\n"); 
		query.append("             , GL.JO_CRR_CD" ).append("\n"); 
		query.append("             , GL.RLANE_CD" ).append("\n"); 
		query.append("             , GL.RE_DIVR_CD" ).append("\n"); 
		query.append("             , GL.VSL_CD" ).append("\n"); 
		query.append("             , GL.SKD_VOY_NO" ).append("\n"); 
		query.append("             , GL.SKD_DIR_CD" ).append("\n"); 
		query.append("             , GL.REV_DIR_CD" ).append("\n"); 
		query.append("             , GL.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("             , GL.ACCT_CD" ).append("\n"); 
		query.append("             , GL.ACT_DT" ).append("\n"); 
		query.append("             , GL.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , EA.JO_STL_JB_CD" ).append("\n"); 
		query.append("             , EA.BSA_QTY" ).append("\n"); 
		query.append("             , EA.BSA_SLT_PRC" ).append("\n"); 
		query.append("             , EA.ESTM_AMT" ).append("\n"); 
		query.append("             , EA.ACT_AMT" ).append("\n"); 
		query.append("             , EA.ACCL_AMT" ).append("\n"); 
		query.append("             , EA.ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("             , EA.ST_DT" ).append("\n"); 
		query.append("             , EA.END_DT" ).append("\n"); 
		query.append("             , EA.SAIL_DYS" ).append("\n"); 
		query.append("             , EA.ESTM_YRMON" ).append("\n"); 
		query.append("             , EA.ESTM_DYS" ).append("\n"); 
		query.append("             , EA.NOW_ESTM_AMT" ).append("\n"); 
		query.append("             , EA.ORG_ESTM_AMT" ).append("\n"); 
		query.append("             , EA.NOW_ACT_AMT" ).append("\n"); 
		query.append("             , EA.ORG_ACT_AMT" ).append("\n"); 
		query.append("          FROM V_GL_ESTM_REV_VVD GL" ).append("\n"); 
		query.append("             , (" ).append("\n"); 
		query.append("                SELECT EXE_YRMON" ).append("\n"); 
		query.append("                     , REV_YRMON" ).append("\n"); 
		query.append("                     , JO_CRR_CD" ).append("\n"); 
		query.append("                     , RLANE_CD" ).append("\n"); 
		query.append("                     , VSL_CD" ).append("\n"); 
		query.append("                     , SKD_VOY_NO" ).append("\n"); 
		query.append("                     , SKD_DIR_CD" ).append("\n"); 
		query.append("                     , REV_DIR_CD" ).append("\n"); 
		query.append("                     , RE_DIVR_CD" ).append("\n"); 
		query.append("                     , JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , BSA_QTY" ).append("\n"); 
		query.append("                     , BSA_SLT_PRC" ).append("\n"); 
		query.append("                     , CASE WHEN SUBSTR(END_DT,1,6) = ESTM_YRMON AND ORG_ESTM_AMT != NOW_ESTM_AMT THEN ROUND(ESTM_AMT + (ORG_ESTM_AMT - NOW_ESTM_AMT), 2)" ).append("\n"); 
		query.append("                            ELSE ESTM_AMT" ).append("\n"); 
		query.append("                       END ESTM_AMT" ).append("\n"); 
		query.append("                     , CASE WHEN SUBSTR(END_DT,1,6) = ESTM_YRMON AND ORG_ACT_AMT != NOW_ACT_AMT THEN ROUND(ACT_AMT + (ORG_ACT_AMT - NOW_ACT_AMT), 2)" ).append("\n"); 
		query.append("                            ELSE ACT_AMT" ).append("\n"); 
		query.append("                       END ACT_AMT" ).append("\n"); 
		query.append("                     , ACCL_AMT" ).append("\n"); 
		query.append("                     , ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                     , ST_DT" ).append("\n"); 
		query.append("                     , END_DT" ).append("\n"); 
		query.append("                     , SAIL_DYS" ).append("\n"); 
		query.append("                     , ESTM_YRMON" ).append("\n"); 
		query.append("                     , ESTM_DYS" ).append("\n"); 
		query.append("                     , VVD" ).append("\n"); 
		query.append("                     , CASE WHEN JO_STL_ITM_CD = 'OPR' THEN SUM(ESTM_AMT) OVER (PARTITION BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG, ESTM_YRMON)" ).append("\n"); 
		query.append("                            ELSE SUM(ESTM_AMT) OVER (PARTITION BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG)" ).append("\n"); 
		query.append("                       END AS NOW_ESTM_AMT" ).append("\n"); 
		query.append("                     , ORG_ESTM_AMT" ).append("\n"); 
		query.append("                     , SUM(ACT_AMT) OVER (PARTITION BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG, ESTM_YRMON) AS NOW_ACT_AMT" ).append("\n"); 
		query.append("                     , ORG_ACT_AMT" ).append("\n"); 
		query.append("                  FROM (" ).append("\n"); 
		query.append("                        SELECT /*+ ORDERED */" ).append("\n"); 
		query.append("                               X.EXE_YRMON" ).append("\n"); 
		query.append("                             , X.REV_YRMON" ).append("\n"); 
		query.append("                             , X.JO_CRR_CD" ).append("\n"); 
		query.append("                             , X.VVD" ).append("\n"); 
		query.append("                             , X.VSL_CD" ).append("\n"); 
		query.append("                             , X.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , X.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , X.REV_DIR_CD" ).append("\n"); 
		query.append("                             , X.RLANE_CD" ).append("\n"); 
		query.append("                             , X.RE_DIVR_CD" ).append("\n"); 
		query.append("                             , X.JO_STL_JB_CD" ).append("\n"); 
		query.append("                             , X.BSA_QTY" ).append("\n"); 
		query.append("                             , X.BSA_SLT_PRC" ).append("\n"); 
		query.append("                             , X.ESTM_AMT" ).append("\n"); 
		query.append("                             , X.ACT_AMT" ).append("\n"); 
		query.append("                             , NVL(X.ESTM_AMT,0) - NVL(X.ACT_AMT,0) AS ACCL_AMT" ).append("\n"); 
		query.append("                             , X.ACCL_AMT_CORR_FLG /*Include Port to Port Basic Settle Estmate Flag*/" ).append("\n"); 
		query.append("                             , X.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                             , X.ESTM_YRMON" ).append("\n"); 
		query.append("                             , X.ST_DT" ).append("\n"); 
		query.append("                             , X.END_DT" ).append("\n"); 
		query.append("                             , X.SAIL_DYS" ).append("\n"); 
		query.append("                             , X.ESTM_DYS" ).append("\n"); 
		query.append("                             , X.ORG_ESTM_AMT" ).append("\n"); 
		query.append("                             , X.ORG_ACT_AMT" ).append("\n"); 
		query.append("                             , CASE WHEN X.JO_STL_ITM_CD = 'OPR' THEN" ).append("\n"); 
		query.append("                                         SUM(X.ESTM_AMT) OVER (PARTITION BY X.EXE_YRMON, X.REV_YRMON, X.JO_CRR_CD, X.RLANE_CD, X.VVD, X.JO_STL_ITM_CD, X.JO_STL_JB_CD, X.ACCL_AMT_CORR_FLG, X.ESTM_YRMON)" ).append("\n"); 
		query.append("                                    ELSE SUM(X.ESTM_AMT) OVER (PARTITION BY X.EXE_YRMON, X.REV_YRMON, X.JO_CRR_CD, X.RLANE_CD, X.VVD, X.JO_STL_ITM_CD, X.JO_STL_JB_CD, X.ACCL_AMT_CORR_FLG)" ).append("\n"); 
		query.append("                               END AS NOW_ESTM_AMT" ).append("\n"); 
		query.append("                             , SUM(X.ACT_AMT)  OVER (PARTITION BY X.EXE_YRMON, X.REV_YRMON, X.JO_CRR_CD, X.RLANE_CD, X.VVD, X.JO_STL_ITM_CD, X.JO_STL_JB_CD, X.ACCL_AMT_CORR_FLG, X.ESTM_YRMON) AS NOW_ACT_AMT" ).append("\n"); 
		query.append("                          FROM (" ).append("\n"); 
		query.append("                                /* S/H, OPR BSA에서 데이타를 가져온다.*/" ).append("\n"); 
		query.append("                                SELECT A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                                     , A.REV_YRMON" ).append("\n"); 
		query.append("                                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                                     , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS VVD" ).append("\n"); 
		query.append("                                     , A.VSL_CD" ).append("\n"); 
		query.append("                                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                     , A.RLANE_CD" ).append("\n"); 
		query.append("                                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                     , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                     , A.BSA_QTY" ).append("\n"); 
		query.append("                                     , A.BSA_SLT_PRC" ).append("\n"); 
		query.append("                                     , A.ESTM_YRMON" ).append("\n"); 
		query.append("                                     , A.ST_DT" ).append("\n"); 
		query.append("                                     , A.END_DT" ).append("\n"); 
		query.append("                                     , A.SAIL_DYS" ).append("\n"); 
		query.append("                                     , A.ESTM_DYS" ).append("\n"); 
		query.append("                                     , CASE WHEN A.JO_STL_ITM_CD = 'OPR' THEN ROUND(NVL(SUM(A.ESTM_AMT), 0) * NVL(A.ESTM_DYS, 0), 2)" ).append("\n"); 
		query.append("                                            ELSE ROUND(NVL(SUM(A.ESTM_AMT), 0) * ( A.ESTM_DYS / A.SAIL_DYS ), 2)" ).append("\n"); 
		query.append("                                       END AS ESTM_AMT" ).append("\n"); 
		query.append("                                     , CASE WHEN A.JO_STL_ITM_CD = 'S/H' OR A.JO_STL_ITM_CD = 'OPR' THEN ROUND(NVL(SUM(A.ACT_AMT) , 0), 2)" ).append("\n"); 
		query.append("                                            ELSE ROUND(NVL(SUM(A.ACT_AMT), 0) * ( A.ESTM_DYS / A.SAIL_DYS ), 2)" ).append("\n"); 
		query.append("                                       END AS ACT_AMT" ).append("\n"); 
		query.append("                                     , ROUND(NVL(SUM(A.ESTM_AMT)    , 0), 2) AS ORG_ESTM_AMT" ).append("\n"); 
		query.append("                                     , ROUND(NVL(SUM(A.ACT_AMT)     , 0), 2) AS ORG_ACT_AMT" ).append("\n"); 
		query.append("                                     , 'N' AS ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                                 FROM (" ).append("\n"); 
		query.append("                                        SELECT /*+ ORDERED USE_HASH(A C D B) FULL(D) */" ).append("\n"); 
		query.append("                                               A.EXE_YRMON" ).append("\n"); 
		query.append("                                             , A.REV_YRMON" ).append("\n"); 
		query.append("                                             , A.JO_CRR_CD" ).append("\n"); 
		query.append("                                             , A.VSL_CD" ).append("\n"); 
		query.append("                                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                             , A.RLANE_CD" ).append("\n"); 
		query.append("                                             , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                             , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                             , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                             , A.BSA_QTY" ).append("\n"); 
		query.append("                                             , A.BSA_SLT_PRC" ).append("\n"); 
		query.append("                                             , A.ESTM_YRMON" ).append("\n"); 
		query.append("                                             , A.ST_DT" ).append("\n"); 
		query.append("                                             , A.END_DT" ).append("\n"); 
		query.append("                                             , A.SAIL_DYS" ).append("\n"); 
		query.append("                                             , A.ESTM_DYS" ).append("\n"); 
		query.append("                                             , NVL(A.BSA_QTY,0) * NVL(A.BSA_SLT_PRC, 0) AS ESTM_AMT" ).append("\n"); 
		query.append("                                             , A.ACT_AMT" ).append("\n"); 
		query.append("                                          FROM (" ).append("\n"); 
		query.append("                                                SELECT /*+ ORDERED USE_HASH(A C D B) FULL(D) */" ).append("\n"); 
		query.append("                                                       A.EXE_YRMON" ).append("\n"); 
		query.append("                                                     , A.REV_YRMON" ).append("\n"); 
		query.append("                                                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                                                     , A.VSL_CD" ).append("\n"); 
		query.append("                                                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                                     , A.RLANE_CD" ).append("\n"); 
		query.append("                                                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                                     , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                                     , C.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                                     , NVL(C.BSA_QTY,0) AS BSA_QTY" ).append("\n"); 
		query.append("                                                     , CASE WHEN A.JO_STL_ITM_CD = 'OPR' THEN NVL((" ).append("\n"); 
		query.append("                                                                                               SELECT MAX(STL.BSA_SLT_PRC)" ).append("\n"); 
		query.append("                                                                                                 FROM JOO_STL_TGT STL" ).append("\n"); 
		query.append("                                                                                                WHERE 1=1" ).append("\n"); 
		query.append("                                                                                                  AND STL.VSL_CD        = A.VSL_CD" ).append("\n"); 
		query.append("                                                                                                  AND STL.SKD_VOY_NO    = A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                                                  AND STL.SKD_DIR_CD    = A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                                                  AND STL.REV_DIR_CD    = A.REV_DIR_CD" ).append("\n"); 
		query.append("                                                                                                  AND STL.RLANE_CD      = A.RLANE_CD" ).append("\n"); 
		query.append("                                                                                                  AND STL.JO_CRR_CD     = A.JO_CRR_CD" ).append("\n"); 
		query.append("                                                                                                  AND STL.JO_STL_ITM_CD = A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                                                                                  AND STL.ESTM_YRMON    = A.ESTM_YRMON" ).append("\n"); 
		query.append("                                                                                                  AND STL.RE_DIVR_CD    = A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                                                                                  --AND STL.JO_STL_JB_CD = C.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                                                                              ), 0)" ).append("\n"); 
		query.append("                                                            ELSE NVL(C.BSA_SLT_PRC, 0)" ).append("\n"); 
		query.append("                                                       END BSA_SLT_PRC" ).append("\n"); 
		query.append("                                                     , A.ESTM_YRMON" ).append("\n"); 
		query.append("                                                     , A.ST_DT" ).append("\n"); 
		query.append("                                                     , A.END_DT" ).append("\n"); 
		query.append("                                                     , A.SAIL_DYS" ).append("\n"); 
		query.append("                                                     , A.ESTM_DYS" ).append("\n"); 
		query.append("                                                     , NVL(DECODE(A.JO_STL_ITM_CD, 'OPR', C.OP_ESTM_AMT, C.ESTM_AMT),0) AS ESTM_AMT /*2016.07.13 위에서 새로 ESTM_AMT를 구하므로 의미 없음.*/" ).append("\n"); 
		query.append("                                                     --, ROUND(PSO_CONV_CURR_USD_FNC(C.LOCL_CURR_CD, NVL(C.STL_LOCL_AMT,0), A.REV_YRMON,1),3) AS ACT_AMT" ).append("\n"); 
		query.append("                                                     , NVL((SELECT SUM(ROUND(PSO_CONV_CURR_USD_FNC(INV.LOCL_CURR_CD, NVL(DTL.ACT_AMT,0), SUBSTR(STL.ACT_DT,1,6),1),2))" ).append("\n"); 
		query.append("                                                              FROM JOO_STL_TGT STL" ).append("\n"); 
		query.append("                                                                 , JOO_INV_DTL DTL" ).append("\n"); 
		query.append("                                                                 , JOO_INVOICE INV" ).append("\n"); 
		query.append("                                                                 , JOO_CSR     CSR" ).append("\n"); 
		query.append("                                                             WHERE 1=1" ).append("\n"); 
		query.append("                                                               AND STL.VSL_CD        = A.VSL_CD" ).append("\n"); 
		query.append("                                                               AND STL.SKD_VOY_NO    = A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                               AND STL.SKD_DIR_CD    = A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                               AND STL.REV_DIR_CD    = A.REV_DIR_CD" ).append("\n"); 
		query.append("                                                               AND STL.REV_YRMON     = A.REV_YRMON" ).append("\n"); 
		query.append("                                                               AND STL.JO_CRR_CD     = A.JO_CRR_CD" ).append("\n"); 
		query.append("                                                               AND STL.RLANE_CD      = A.RLANE_CD" ).append("\n"); 
		query.append("                                                               AND STL.JO_STL_ITM_CD = A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                                               AND STL.JO_STL_JB_CD  = C.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                                               AND STL.RE_DIVR_CD    = A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                                               AND STL.ESTM_YRMON    = A.ESTM_YRMON" ).append("\n"); 
		query.append("                                                               AND STL.VSL_CD        = DTL.VSL_CD" ).append("\n"); 
		query.append("                                                               AND STL.SKD_VOY_NO    = DTL.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                               AND STL.SKD_DIR_CD    = DTL.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                               AND STL.REV_DIR_CD    = DTL.REV_DIR_CD" ).append("\n"); 
		query.append("                                                               AND STL.REV_YRMON     = DTL.REV_YRMON" ).append("\n"); 
		query.append("                                                               AND STL.STL_VVD_SEQ   = DTL.STL_VVD_SEQ" ).append("\n"); 
		query.append("                                                               AND DTL.ACCT_YRMON    = INV.ACCT_YRMON" ).append("\n"); 
		query.append("                                                               AND DTL.JO_CRR_CD     = INV.JO_CRR_CD" ).append("\n"); 
		query.append("                                                               AND DTL.INV_NO        = INV.INV_NO" ).append("\n"); 
		query.append("                                                               AND DTL.RE_DIVR_CD    = INV.RE_DIVR_CD" ).append("\n"); 
		query.append("                                                               AND INV.RVS_CMB_FLG   = 'N'" ).append("\n"); 
		query.append("                                                               AND INV.RJCT_CMB_FLG  = 'N'" ).append("\n"); 
		query.append("                                                               AND INV.SLP_TP_CD     = CSR.SLP_TP_CD" ).append("\n"); 
		query.append("                                                               AND INV.SLP_FUNC_CD   = CSR.SLP_FUNC_CD" ).append("\n"); 
		query.append("                                                               AND INV.SLP_OFC_CD    = CSR.SLP_OFC_CD" ).append("\n"); 
		query.append("                                                               AND INV.SLP_ISS_DT    = CSR.SLP_ISS_DT" ).append("\n"); 
		query.append("                                                               AND INV.SLP_SER_NO    = CSR.SLP_SER_NO" ).append("\n"); 
		query.append("                                                               AND CSR.APRO_FLG      = 'Y'" ).append("\n"); 
		query.append("                                                       ), 0) AS ACT_AMT" ).append("\n"); 
		query.append("                                                  FROM V_GL_STANDARD_DATA A" ).append("\n"); 
		query.append("                                                     , (" ).append("\n"); 
		query.append("                                                        SELECT /*+ ORDERED USE_HASH(A B C) */" ).append("\n"); 
		query.append("                                                               DISTINCT" ).append("\n"); 
		query.append("                                                               A.COST_YRMON         AS REV_YRMON" ).append("\n"); 
		query.append("                                                             , A.VSL_CD             AS VSL_CD" ).append("\n"); 
		query.append("                                                             , A.SKD_VOY_NO         AS SKD_VOY_NO" ).append("\n"); 
		query.append("                                                             , A.DIR_CD             AS SKD_DIR_CD" ).append("\n"); 
		query.append("                                                             , A.RLANE_CD           AS RLANE_CD" ).append("\n"); 
		query.append("                                                             , C.CRR_CD             AS JO_CRR_CD" ).append("\n"); 
		query.append("                                                             , CASE WHEN C.BSA_OP_JB_CD IN ('000','001') THEN '101'" ).append("\n"); 
		query.append("                                                                    WHEN C.BSA_OP_JB_CD IN ('002','003') THEN '102'" ).append("\n"); 
		query.append("                                                                    WHEN C.BSA_OP_JB_CD IN ('004','005') THEN '103'" ).append("\n"); 
		query.append("                                                               END                  AS JO_STL_JB_CD" ).append("\n"); 
		query.append("                                                             , CASE WHEN C.BSA_OP_JB_CD IN ('001','002','004') THEN 'R'" ).append("\n"); 
		query.append("                                                                    WHEN C.BSA_OP_JB_CD IN ('000','003','005') THEN 'E'" ).append("\n"); 
		query.append("                                                               END                  AS RE_DIVR_CD" ).append("\n"); 
		query.append("                                                             , C.SLT_PRC_CAPA       AS BSA_SLT_PRC" ).append("\n"); 
		query.append("                                                             , C.OP_SLT_PRC_CAPA    AS OP_BSA_SLT_PRC" ).append("\n"); 
		query.append("                                                             , C.CRR_BSA_CAPA       AS BSA_QTY" ).append("\n"); 
		query.append("                                                             , C.CRR_PERF_AMT       AS ESTM_AMT" ).append("\n"); 
		query.append("                                                             , C.OP_CRR_PERF_AMT    AS OP_ESTM_AMT" ).append("\n"); 
		query.append("                                                          FROM COA_MON_VVD A" ).append("\n"); 
		query.append("                                                             , BSA_VVD_MST B" ).append("\n"); 
		query.append("                                                             , BSA_VVD_CRR_PERF C" ).append("\n"); 
		query.append("                                                         WHERE A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                           AND A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                           AND A.DIR_CD     = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                           AND A.TRD_CD     = B.TRD_CD" ).append("\n"); 
		query.append("                                                           AND A.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("                                                           AND A.VSL_CD     = C.VSL_CD" ).append("\n"); 
		query.append("                                                           AND A.SKD_VOY_NO = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                           AND A.DIR_CD     = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                           AND A.TRD_CD     = C.TRD_CD" ).append("\n"); 
		query.append("                                                           AND A.RLANE_CD   = C.RLANE_CD" ).append("\n"); 
		query.append("                                                           AND A.COST_YRMON BETWEEN TO_CHAR(TO_DATE(REPLACE(@[rev_yrmon_fr],'-',''),'YYYYMM'),'YYYYMM') AND REPLACE(@[rev_yrmon_to],'-','') /*화면에서 넘어온 Actual Rev. Month*/" ).append("\n"); 
		query.append("        #if (${re_divr_cd}=='R')" ).append("\n"); 
		query.append("                                                           AND C.BSA_OP_JB_CD IN ('001','002','004')" ).append("\n"); 
		query.append("        #elseif (${re_divr_cd}=='E')" ).append("\n"); 
		query.append("                                                           AND C.BSA_OP_JB_CD IN ('000','003','005')" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("                                                           AND C.BSA_OP_JB_CD IN ('000','001','002','003','004','005')" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        #if (${jo_crr_cd}!='')" ).append("\n"); 
		query.append("                                                           AND C.CRR_CD     = @[jo_crr_cd]" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        #if (${trd_cd}!='')" ).append("\n"); 
		query.append("                                                           AND A.TRD_CD     = @[trd_cd]" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        #if (${rlane_cd}!='')" ).append("\n"); 
		query.append("                                                           AND A.RLANE_CD   = @[rlane_cd]" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                                                           AND C.CRR_CD     <> COM_CONSTANTMGR_PKG.COM_getCompanyCode_FNC" ).append("\n"); 
		query.append("                                                           AND A.DELT_FLG   = 'N'" ).append("\n"); 
		query.append("                                                            /*-- 2010.01.20 TEU, PRICE중 하나라도 0이 아니면 나와야 한다.*/" ).append("\n"); 
		query.append("                                                           AND NOT (NVL(C.CRR_BSA_CAPA,0) = 0 AND NVL(C.SLT_PRC_CAPA,0) = 0)" ).append("\n"); 
		query.append("                                                        ) C" ).append("\n"); 
		query.append("                                                 WHERE 1=1" ).append("\n"); 
		query.append("        #if (${proc_jb_flg} != '' || ${proc_jb_flg} == 'Y')" ).append("\n"); 
		query.append("                                                   /*Based On Agreement Checked Condition*/" ).append("\n"); 
		query.append("                                                   AND A.VSL_CD     = C.VSL_CD" ).append("\n"); 
		query.append("                                                   AND A.SKD_VOY_NO = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                   AND A.SKD_DIR_CD = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                   AND A.JO_CRR_CD  = C.JO_CRR_CD" ).append("\n"); 
		query.append("                                                   AND A.RLANE_CD   = C.RLANE_CD" ).append("\n"); 
		query.append("                                                   AND A.RE_DIVR_CD = C.RE_DIVR_CD" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("                                                   /*Based On Agreement Unchecked Condition*/" ).append("\n"); 
		query.append("                                                   AND A.VSL_CD     = C.VSL_CD       (+)" ).append("\n"); 
		query.append("                                                   AND A.SKD_VOY_NO = C.SKD_VOY_NO   (+)" ).append("\n"); 
		query.append("                                                   AND A.SKD_DIR_CD = C.SKD_DIR_CD   (+)" ).append("\n"); 
		query.append("                                                   AND A.JO_CRR_CD  = C.JO_CRR_CD    (+)" ).append("\n"); 
		query.append("                                                   AND A.RLANE_CD   = C.RLANE_CD     (+)" ).append("\n"); 
		query.append("                                                   AND A.RE_DIVR_CD = C.RE_DIVR_CD   (+)" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("                                               ) A" ).append("\n"); 
		query.append("                                       ) A" ).append("\n"); 
		query.append("                                 GROUP BY A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                                     , A.REV_YRMON" ).append("\n"); 
		query.append("                                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                                     , A.VSL_CD" ).append("\n"); 
		query.append("                                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                     , A.RLANE_CD" ).append("\n"); 
		query.append("                                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                     , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                     , A.BSA_QTY" ).append("\n"); 
		query.append("                                     , A.BSA_SLT_PRC" ).append("\n"); 
		query.append("                                     , A.ESTM_YRMON" ).append("\n"); 
		query.append("                                     , A.ST_DT" ).append("\n"); 
		query.append("                                     , A.END_DT" ).append("\n"); 
		query.append("                                     , A.SAIL_DYS" ).append("\n"); 
		query.append("                                     , A.ESTM_DYS" ).append("\n"); 
		query.append("                               ) X" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                       )" ).append("\n"); 
		query.append("                 ORDER BY RE_DIVR_CD DESC" ).append("\n"); 
		query.append("                     , REV_YRMON" ).append("\n"); 
		query.append("                     , JO_CRR_CD" ).append("\n"); 
		query.append("                     , RLANE_CD" ).append("\n"); 
		query.append("                     , VVD" ).append("\n"); 
		query.append("                     , JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                     , ESTM_YRMON" ).append("\n"); 
		query.append("              ) EA" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("           AND GL.REV_YRMON         = EA.REV_YRMON" ).append("\n"); 
		query.append("           AND GL.JO_CRR_CD         = EA.JO_CRR_CD" ).append("\n"); 
		query.append("           AND GL.RLANE_CD          = EA.RLANE_CD" ).append("\n"); 
		query.append("           AND GL.JO_STL_ITM_CD     = EA.JO_STL_ITM_CD" ).append("\n"); 
		query.append("           AND GL.RE_DIVR_CD        = EA.RE_DIVR_CD" ).append("\n"); 
		query.append("           AND GL.VSL_CD            = EA.VSL_CD" ).append("\n"); 
		query.append("           AND GL.SKD_VOY_NO        = EA.SKD_VOY_NO" ).append("\n"); 
		query.append("           AND GL.SKD_DIR_CD        = EA.SKD_DIR_CD" ).append("\n"); 
		query.append("           AND GL.REV_DIR_CD        = EA.REV_DIR_CD" ).append("\n"); 
		query.append("           AND GL.JO_MNL_CRE_FLG    = 'N' /* S/H, OPR Item 만 날짜 계산을 가져온다. */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  )" ).append("\n"); 
		query.append("--SELECT * FROM V_VVD_ESTM_BSA_SH_OPR;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  , V_VVD_ESTM_BSA_OTH AS (" ).append("\n"); 
		query.append("        /* S/H, OPR외의 Item.*/" ).append("\n"); 
		query.append("        SELECT GL.EXE_YRMON" ).append("\n"); 
		query.append("             , GL.REV_YRMON" ).append("\n"); 
		query.append("             , GL.JO_CRR_CD" ).append("\n"); 
		query.append("             , GL.RLANE_CD" ).append("\n"); 
		query.append("             , GL.RE_DIVR_CD" ).append("\n"); 
		query.append("             , GL.VSL_CD" ).append("\n"); 
		query.append("             , GL.SKD_VOY_NO" ).append("\n"); 
		query.append("             , GL.SKD_DIR_CD" ).append("\n"); 
		query.append("             , GL.REV_DIR_CD" ).append("\n"); 
		query.append("             , GL.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("             , GL.ACCT_CD" ).append("\n"); 
		query.append("             , GL.ACT_DT" ).append("\n"); 
		query.append("             , GL.JO_STL_ITM_CD" ).append("\n"); 
		query.append("             , EA.JO_STL_JB_CD" ).append("\n"); 
		query.append("             , EA.BSA_QTY" ).append("\n"); 
		query.append("             , EA.BSA_SLT_PRC" ).append("\n"); 
		query.append("             , EA.ESTM_AMT" ).append("\n"); 
		query.append("             , EA.ACT_AMT" ).append("\n"); 
		query.append("             , EA.ACCL_AMT" ).append("\n"); 
		query.append("             , EA.ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("             , EA.ST_DT" ).append("\n"); 
		query.append("             , EA.END_DT" ).append("\n"); 
		query.append("             , EA.SAIL_DYS" ).append("\n"); 
		query.append("             , EA.ESTM_YRMON" ).append("\n"); 
		query.append("             , EA.ESTM_DYS" ).append("\n"); 
		query.append("             , EA.NOW_ESTM_AMT" ).append("\n"); 
		query.append("             , EA.ORG_ESTM_AMT" ).append("\n"); 
		query.append("             , EA.NOW_ACT_AMT" ).append("\n"); 
		query.append("             , EA.ORG_ACT_AMT" ).append("\n"); 
		query.append("          FROM V_GL_ESTM_REV_VVD GL" ).append("\n"); 
		query.append("             , (" ).append("\n"); 
		query.append("                SELECT EXE_YRMON" ).append("\n"); 
		query.append("                     , REV_YRMON" ).append("\n"); 
		query.append("                     , JO_CRR_CD" ).append("\n"); 
		query.append("                     , RLANE_CD" ).append("\n"); 
		query.append("                     , VSL_CD" ).append("\n"); 
		query.append("                     , SKD_VOY_NO" ).append("\n"); 
		query.append("                     , SKD_DIR_CD" ).append("\n"); 
		query.append("                     , REV_DIR_CD" ).append("\n"); 
		query.append("                     , RE_DIVR_CD" ).append("\n"); 
		query.append("                     , JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , BSA_QTY" ).append("\n"); 
		query.append("                     , BSA_SLT_PRC" ).append("\n"); 
		query.append("                     , CASE WHEN SUBSTR(END_DT,1,6) = ESTM_YRMON AND ORG_ESTM_AMT != NOW_ESTM_AMT THEN ROUND(ESTM_AMT + (ORG_ESTM_AMT - NOW_ESTM_AMT), 2)" ).append("\n"); 
		query.append("                            ELSE ESTM_AMT" ).append("\n"); 
		query.append("                       END ESTM_AMT" ).append("\n"); 
		query.append("                     , CASE WHEN SUBSTR(END_DT,1,6) = ESTM_YRMON AND ORG_ACT_AMT != NOW_ACT_AMT THEN ROUND(ACT_AMT + (ORG_ACT_AMT - NOW_ACT_AMT), 2)" ).append("\n"); 
		query.append("                            ELSE ACT_AMT" ).append("\n"); 
		query.append("                       END ACT_AMT" ).append("\n"); 
		query.append("                     , ACCL_AMT" ).append("\n"); 
		query.append("                     , ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                     , ST_DT" ).append("\n"); 
		query.append("                     , END_DT" ).append("\n"); 
		query.append("                     , SAIL_DYS" ).append("\n"); 
		query.append("                     , ESTM_YRMON" ).append("\n"); 
		query.append("                     , ESTM_DYS" ).append("\n"); 
		query.append("                     , VVD" ).append("\n"); 
		query.append("                     , SUM(ESTM_AMT) OVER (PARTITION BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                                               ORDER BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG) AS NOW_ESTM_AMT" ).append("\n"); 
		query.append("                     , ORG_ESTM_AMT" ).append("\n"); 
		query.append("                     , SUM(ACT_AMT) OVER (PARTITION BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                                              ORDER BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG) AS NOW_ACT_AMT" ).append("\n"); 
		query.append("                     , ORG_ACT_AMT" ).append("\n"); 
		query.append("                  FROM (" ).append("\n"); 
		query.append("                        SELECT /*+ ORDERED */" ).append("\n"); 
		query.append("                               X.EXE_YRMON" ).append("\n"); 
		query.append("                             , X.REV_YRMON" ).append("\n"); 
		query.append("                             , X.JO_CRR_CD" ).append("\n"); 
		query.append("                             , X.VVD" ).append("\n"); 
		query.append("                             , X.VSL_CD" ).append("\n"); 
		query.append("                             , X.SKD_VOY_NO" ).append("\n"); 
		query.append("                             , X.SKD_DIR_CD" ).append("\n"); 
		query.append("                             , X.REV_DIR_CD" ).append("\n"); 
		query.append("                             , X.RLANE_CD" ).append("\n"); 
		query.append("                             , X.RE_DIVR_CD" ).append("\n"); 
		query.append("                             , X.JO_STL_JB_CD" ).append("\n"); 
		query.append("                             , X.BSA_QTY" ).append("\n"); 
		query.append("                             , X.BSA_SLT_PRC" ).append("\n"); 
		query.append("                             , X.ESTM_AMT" ).append("\n"); 
		query.append("                             , X.ACT_AMT" ).append("\n"); 
		query.append("                             , NVL(X.ESTM_AMT,0) - NVL(X.ACT_AMT,0) AS ACCL_AMT" ).append("\n"); 
		query.append("                             , X.ACCL_AMT_CORR_FLG /*Include Port to Port Basic Settle Estmate Flag*/" ).append("\n"); 
		query.append("                             , X.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                             , X.ESTM_YRMON" ).append("\n"); 
		query.append("                             , X.ST_DT" ).append("\n"); 
		query.append("                             , X.END_DT" ).append("\n"); 
		query.append("                             , X.SAIL_DYS" ).append("\n"); 
		query.append("                             , X.ESTM_DYS" ).append("\n"); 
		query.append("                             , X.ORG_ESTM_AMT" ).append("\n"); 
		query.append("                             , X.ORG_ACT_AMT" ).append("\n"); 
		query.append("                             , SUM(X.ESTM_AMT) OVER (PARTITION BY X.EXE_YRMON, X.REV_YRMON, X.JO_CRR_CD, X.RLANE_CD, X.VVD, X.JO_STL_ITM_CD, X.JO_STL_JB_CD, X.ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                                                         ORDER BY X.EXE_YRMON, X.REV_YRMON, X.JO_CRR_CD, X.RLANE_CD, X.VVD, X.JO_STL_ITM_CD, X.JO_STL_JB_CD, X.ACCL_AMT_CORR_FLG) AS NOW_ESTM_AMT" ).append("\n"); 
		query.append("                             , SUM(X.ACT_AMT)  OVER (PARTITION BY X.EXE_YRMON, X.REV_YRMON, X.JO_CRR_CD, X.RLANE_CD, X.VVD, X.JO_STL_ITM_CD, X.JO_STL_JB_CD, X.ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                                                         ORDER BY X.EXE_YRMON, X.REV_YRMON, X.JO_CRR_CD, X.RLANE_CD, X.VVD, X.JO_STL_ITM_CD, X.JO_STL_JB_CD, X.ACCL_AMT_CORR_FLG) AS NOW_ACT_AMT" ).append("\n"); 
		query.append("                          FROM (" ).append("\n"); 
		query.append("                                /* S/H, OPR 외의 Item 은 실적에서 데이타를 가져온다.*/" ).append("\n"); 
		query.append("                                SELECT A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                                     , A.REV_YRMON" ).append("\n"); 
		query.append("                                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                                     , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS VVD" ).append("\n"); 
		query.append("                                     , A.VSL_CD" ).append("\n"); 
		query.append("                                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                     , A.RLANE_CD" ).append("\n"); 
		query.append("                                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                     , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                     , A.BSA_QTY" ).append("\n"); 
		query.append("                                     , A.BSA_SLT_PRC" ).append("\n"); 
		query.append("                                     , A.ESTM_YRMON" ).append("\n"); 
		query.append("                                     , A.ST_DT" ).append("\n"); 
		query.append("                                     , A.END_DT" ).append("\n"); 
		query.append("                                     , A.SAIL_DYS" ).append("\n"); 
		query.append("                                     , A.ESTM_DYS" ).append("\n"); 
		query.append("                                     , ROUND(NVL(SUM(A.ESTM_AMT)    , 0) * ( A.ESTM_DYS / A.SAIL_DYS ), 2) AS ESTM_AMT" ).append("\n"); 
		query.append("                                     , ROUND(NVL(SUM(A.ACT_AMT)     , 0) * ( A.ESTM_DYS / A.SAIL_DYS ), 2) AS ACT_AMT" ).append("\n"); 
		query.append("                                     , ROUND(NVL(SUM(A.ESTM_AMT)    , 0), 2) AS ORG_ESTM_AMT" ).append("\n"); 
		query.append("                                     , ROUND(NVL(SUM(A.ACT_AMT)     , 0), 2) AS ORG_ACT_AMT" ).append("\n"); 
		query.append("                                     , 'N' AS ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                                 FROM (" ).append("\n"); 
		query.append("                                        SELECT /*+ ORDERED USE_HASH(A C D B) FULL(D) */" ).append("\n"); 
		query.append("                                               A.EXE_YRMON" ).append("\n"); 
		query.append("                                             , A.REV_YRMON" ).append("\n"); 
		query.append("                                             , A.JO_CRR_CD" ).append("\n"); 
		query.append("                                             , A.VSL_CD" ).append("\n"); 
		query.append("                                             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                             , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                             , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                             , A.RLANE_CD" ).append("\n"); 
		query.append("                                             , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                             , A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                             , C.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                             , C.BSA_QTY" ).append("\n"); 
		query.append("                                             , C.BSA_SLT_PRC" ).append("\n"); 
		query.append("                                             , A.ESTM_YRMON" ).append("\n"); 
		query.append("                                             , A.ST_DT" ).append("\n"); 
		query.append("                                             , A.END_DT" ).append("\n"); 
		query.append("                                             , A.SAIL_DYS" ).append("\n"); 
		query.append("                                             , A.ESTM_DYS" ).append("\n"); 
		query.append("                                             , C.ESTM_AMT" ).append("\n"); 
		query.append("                                             , ROUND(PSO_CONV_CURR_USD_FNC(C.LOCL_CURR_CD, NVL(C.STL_LOCL_AMT,0), SUBSTR(C.ACT_DT,1,6),1),2) AS ACT_AMT" ).append("\n"); 
		query.append("                                          FROM V_GL_STANDARD_DATA A" ).append("\n"); 
		query.append("                                             , (" ).append("\n"); 
		query.append("                                                SELECT /*+ ORDERED USE_HASH(D C B F G) FULL(C) */" ).append("\n"); 
		query.append("                                                       D.JO_CRR_CD" ).append("\n"); 
		query.append("                                                     , D.RLANE_CD" ).append("\n"); 
		query.append("                                                     , D.RE_DIVR_CD" ).append("\n"); 
		query.append("                                                     , D.VSL_CD" ).append("\n"); 
		query.append("                                                     , D.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                     , D.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                     , D.REV_DIR_CD" ).append("\n"); 
		query.append("                                                     , D.LOCL_CURR_CD" ).append("\n"); 
		query.append("                                                     , 0 AS BSA_SLT_PRC" ).append("\n"); 
		query.append("                                                     , 0 AS BSA_QTY" ).append("\n"); 
		query.append("                                                     , 0 AS ESTM_AMT" ).append("\n"); 
		query.append("                                                     , SUM(C.ACT_AMT) AS STL_LOCL_AMT" ).append("\n"); 
		query.append("                                                     , D.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                                     , D.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                                     , D.ACT_DT" ).append("\n"); 
		query.append("                                                  FROM JOO_STL_TGT D" ).append("\n"); 
		query.append("                                                     , JOO_INV_DTL C" ).append("\n"); 
		query.append("                                                     , JOO_INVOICE B" ).append("\n"); 
		query.append("                                                     , JOO_CSR P" ).append("\n"); 
		query.append("                                                     , V_JOO_FINC_MTX V" ).append("\n"); 
		query.append("                                                 WHERE B.RVS_CMB_FLG    = 'N'" ).append("\n"); 
		query.append("                                                   AND B.RJCT_CMB_FLG   = 'N'" ).append("\n"); 
		query.append("                                                   AND B.ACCT_YRMON     = C.ACCT_YRMON" ).append("\n"); 
		query.append("                                                   AND B.JO_CRR_CD      = C.JO_CRR_CD" ).append("\n"); 
		query.append("                                                   AND B.INV_NO         = C.INV_NO" ).append("\n"); 
		query.append("                                                   AND B.RE_DIVR_CD     = C.RE_DIVR_CD" ).append("\n"); 
		query.append("                                                   AND C.VSL_CD         = D.VSL_CD" ).append("\n"); 
		query.append("                                                   AND C.SKD_VOY_NO     = D.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                   AND C.SKD_DIR_CD     = D.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                   AND C.REV_DIR_CD     = D.REV_DIR_CD" ).append("\n"); 
		query.append("                                                   AND C.REV_YRMON      = D.REV_YRMON" ).append("\n"); 
		query.append("                                                   AND C.STL_VVD_SEQ    = D.STL_VVD_SEQ" ).append("\n"); 
		query.append("#if (${re_divr_cd} !='')" ).append("\n"); 
		query.append("                                                   AND D.RE_DIVR_CD     = @[re_divr_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${jo_crr_cd}!='')" ).append("\n"); 
		query.append("                                                   AND D.JO_CRR_CD      = @[jo_crr_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${trd_cd}!='')" ).append("\n"); 
		query.append("                                                   /* Condition Trade */" ).append("\n"); 
		query.append("                                                   AND EXISTS   (   SELECT 'X'" ).append("\n"); 
		query.append("                                                                      FROM JOO_CARRIER CRR" ).append("\n"); 
		query.append("                                                                     WHERE 1=1" ).append("\n"); 
		query.append("                                                                       AND CRR.DELT_FLG         = 'N'" ).append("\n"); 
		query.append("                                                                       AND CRR.JO_CRR_CD        = D.JO_CRR_CD" ).append("\n"); 
		query.append("                                                                       AND CRR.RLANE_CD         = D.RLANE_CD" ).append("\n"); 
		query.append("                                                                       AND CRR.TRD_CD           = @[trd_cd]" ).append("\n"); 
		query.append("                                                                 )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${rlane_cd}!='')" ).append("\n"); 
		query.append("                                                   AND D.RLANE_CD       = @[rlane_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                                   AND D.JO_CRR_CD      = V.JO_CRR_CD" ).append("\n"); 
		query.append("                                                   AND D.RLANE_CD       = V.RLANE_CD" ).append("\n"); 
		query.append("                                                   AND D.RE_DIVR_CD     = V.RE_DIVR_CD" ).append("\n"); 
		query.append("                                                   AND D.JO_STL_ITM_CD  = V.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                                   AND V.JO_MNL_CRE_FLG = 'Y'" ).append("\n"); 
		query.append("                                                   AND B.SLP_TP_CD      = P.SLP_TP_CD" ).append("\n"); 
		query.append("                                                   AND B.SLP_FUNC_CD    = P.SLP_FUNC_CD" ).append("\n"); 
		query.append("                                                   AND B.SLP_OFC_CD     = P.SLP_OFC_CD" ).append("\n"); 
		query.append("                                                   AND B.SLP_ISS_DT     = P.SLP_ISS_DT" ).append("\n"); 
		query.append("                                                   AND B.SLP_SER_NO     = P.SLP_SER_NO" ).append("\n"); 
		query.append("                                                   AND P.APRO_FLG       = 'Y'" ).append("\n"); 
		query.append("                                                 GROUP BY D.JO_CRR_CD" ).append("\n"); 
		query.append("                                                     , D.RLANE_CD" ).append("\n"); 
		query.append("                                                     , D.RE_DIVR_CD" ).append("\n"); 
		query.append("                                                     , D.VSL_CD" ).append("\n"); 
		query.append("                                                     , D.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                     , D.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                     , D.REV_DIR_CD" ).append("\n"); 
		query.append("                                                     , D.LOCL_CURR_CD" ).append("\n"); 
		query.append("                                                     , D.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                                     , D.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                                     , D.ACT_DT" ).append("\n"); 
		query.append("                                                ) C" ).append("\n"); 
		query.append("                                         WHERE A.VSL_CD         = C.VSL_CD" ).append("\n"); 
		query.append("                                           AND A.SKD_VOY_NO     = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                                           AND A.SKD_DIR_CD     = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                           AND A.REV_DIR_CD     = C.REV_DIR_CD" ).append("\n"); 
		query.append("                                           AND A.JO_STL_ITM_CD  = C.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                           AND A.JO_CRR_CD      = C.JO_CRR_CD" ).append("\n"); 
		query.append("                                           AND A.RLANE_CD       = C.RLANE_CD" ).append("\n"); 
		query.append("                                           AND A.RE_DIVR_CD     = C.RE_DIVR_CD" ).append("\n"); 
		query.append("                                        ) A" ).append("\n"); 
		query.append("                                 GROUP BY A.JO_STL_ITM_CD" ).append("\n"); 
		query.append("                                     , A.EXE_YRMON" ).append("\n"); 
		query.append("                                     , A.REV_YRMON" ).append("\n"); 
		query.append("                                     , A.JO_CRR_CD" ).append("\n"); 
		query.append("                                     , A.VSL_CD" ).append("\n"); 
		query.append("                                     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     , A.REV_DIR_CD" ).append("\n"); 
		query.append("                                     , A.RLANE_CD" ).append("\n"); 
		query.append("                                     , A.RE_DIVR_CD" ).append("\n"); 
		query.append("                                     , A.JO_STL_JB_CD" ).append("\n"); 
		query.append("                                     , A.BSA_QTY" ).append("\n"); 
		query.append("                                     , A.BSA_SLT_PRC" ).append("\n"); 
		query.append("                                     , A.ESTM_YRMON" ).append("\n"); 
		query.append("                                     , A.ST_DT" ).append("\n"); 
		query.append("                                     , A.END_DT" ).append("\n"); 
		query.append("                                     , A.SAIL_DYS" ).append("\n"); 
		query.append("                                     , A.ESTM_DYS" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                               ) X" ).append("\n"); 
		query.append("                         WHERE 1=1" ).append("\n"); 
		query.append("                       )" ).append("\n"); 
		query.append("                 ORDER BY RE_DIVR_CD DESC" ).append("\n"); 
		query.append("                     , REV_YRMON" ).append("\n"); 
		query.append("                     , JO_CRR_CD" ).append("\n"); 
		query.append("                     , RLANE_CD" ).append("\n"); 
		query.append("                     , VVD" ).append("\n"); 
		query.append("                     , JO_STL_ITM_CD" ).append("\n"); 
		query.append("                     , JO_STL_JB_CD" ).append("\n"); 
		query.append("                     , ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                     , ESTM_YRMON" ).append("\n"); 
		query.append("              ) EA" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("           AND GL.REV_YRMON         = EA.REV_YRMON" ).append("\n"); 
		query.append("           AND GL.JO_CRR_CD         = EA.JO_CRR_CD" ).append("\n"); 
		query.append("           AND GL.RLANE_CD          = EA.RLANE_CD" ).append("\n"); 
		query.append("           AND GL.JO_STL_ITM_CD     = EA.JO_STL_ITM_CD" ).append("\n"); 
		query.append("           AND GL.RE_DIVR_CD        = EA.RE_DIVR_CD" ).append("\n"); 
		query.append("           AND GL.VSL_CD            = EA.VSL_CD" ).append("\n"); 
		query.append("           AND GL.SKD_VOY_NO        = EA.SKD_VOY_NO" ).append("\n"); 
		query.append("           AND GL.SKD_DIR_CD        = EA.SKD_DIR_CD" ).append("\n"); 
		query.append("           AND GL.REV_DIR_CD        = EA.REV_DIR_CD" ).append("\n"); 
		query.append("           AND GL.JO_MNL_CRE_FLG    = 'Y' /* S/H, OPR외의 Item 만 날짜 계산을 가져온다. */" ).append("\n"); 
		query.append("  )" ).append("\n"); 
		query.append("--SELECT * FROM V_VVD_ESTM_BSA_OTH;" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT EXE_YRMON" ).append("\n"); 
		query.append("     , REV_YRMON" ).append("\n"); 
		query.append("     , JO_CRR_CD" ).append("\n"); 
		query.append("     , RLANE_CD" ).append("\n"); 
		query.append("     , VSL_CD" ).append("\n"); 
		query.append("     , SKD_VOY_NO" ).append("\n"); 
		query.append("     , SKD_DIR_CD" ).append("\n"); 
		query.append("     , REV_DIR_CD" ).append("\n"); 
		query.append("     , ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("     , ACCT_CD" ).append("\n"); 
		query.append("     , ESTM_ACT_SEQ" ).append("\n"); 
		query.append("     , NVL(JO_STL_JB_CD, '101') AS JO_STL_JB_CD" ).append("\n"); 
		query.append("     , BSA_QTY" ).append("\n"); 
		query.append("     , BSA_SLT_PRC" ).append("\n"); 
		query.append("     , ROUND(ESTM_AMT, 2) AS ESTM_AMT" ).append("\n"); 
		query.append("     , ROUND(ACT_AMT, 2) AS ACT_AMT" ).append("\n"); 
		query.append("     , ROUND((ESTM_AMT - ACT_AMT ), 2) AS ACCL_AMT" ).append("\n"); 
		query.append("     , SYS_SRC_ID" ).append("\n"); 
		query.append("     , LOC_CD" ).append("\n"); 
		query.append("     , JO_IOC_DIV_CD" ).append("\n"); 
		query.append("     , ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("     , JO_CNTR_DIV_CTNT" ).append("\n"); 
		query.append("     , CNTR_BLK_DIV_CD" ).append("\n"); 
		query.append("     , ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("     , ACT_DT" ).append("\n"); 
		query.append("     , ST_DT" ).append("\n"); 
		query.append("     , END_DT" ).append("\n"); 
		query.append("     , SAIL_DYS" ).append("\n"); 
		query.append("     , ESTM_YRMON" ).append("\n"); 
		query.append("     , ESTM_DYS" ).append("\n"); 
		query.append("     , JO_STL_ITM_CD" ).append("\n"); 
		query.append("     , CUST_CNT_CD||CUST_SEQ AS VNDR_CUST_SEQ" ).append("\n"); 
		query.append("     , CUST_CNT_CD" ).append("\n"); 
		query.append("     , CUST_SEQ" ).append("\n"); 
		query.append("     , VVD" ).append("\n"); 
		query.append("     , JO_STL_JB_NM" ).append("\n"); 
		query.append("     , CASE WHEN JO_STL_ITM_CD = 'OPR' THEN" ).append("\n"); 
		query.append("                 SUM(ESTM_AMT) OVER (PARTITION BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, ACCT_CD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG, ESTM_YRMON" ).append("\n"); 
		query.append("                                         ORDER BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, ACCT_CD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG, ESTM_YRMON)" ).append("\n"); 
		query.append("            ELSE SUM(ESTM_AMT) OVER (PARTITION BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, ACCT_CD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                                         ORDER BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, ACCT_CD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG)" ).append("\n"); 
		query.append("       END AS NOW_ESTM_AMT" ).append("\n"); 
		query.append("     , ORG_ESTM_AMT" ).append("\n"); 
		query.append("     , SUM(ACT_AMT) OVER (PARTITION BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, ACCT_CD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("                              ORDER BY EXE_YRMON, REV_YRMON, JO_CRR_CD, RLANE_CD, VVD, ACCT_CD, JO_STL_ITM_CD, JO_STL_JB_CD, ACCL_AMT_CORR_FLG) AS NOW_ACT_AMT" ).append("\n"); 
		query.append("     , ORG_ACT_AMT" ).append("\n"); 
		query.append("     , @[usr_id] AS CRE_USR_ID" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("    SELECT GL.EXE_YRMON" ).append("\n"); 
		query.append("         , GL.REV_YRMON" ).append("\n"); 
		query.append("         , GL.JO_CRR_CD" ).append("\n"); 
		query.append("         , GL.RLANE_CD" ).append("\n"); 
		query.append("         , GL.VSL_CD" ).append("\n"); 
		query.append("         , GL.SKD_VOY_NO" ).append("\n"); 
		query.append("         , GL.SKD_DIR_CD" ).append("\n"); 
		query.append("         , GL.REV_DIR_CD" ).append("\n"); 
		query.append("         , GL.ESTM_VVD_TP_CD" ).append("\n"); 
		query.append("         , GL.ACCT_CD" ).append("\n"); 
		query.append("         , VB.JO_STL_JB_CD" ).append("\n"); 
		query.append("         , VB.BSA_QTY" ).append("\n"); 
		query.append("         , VB.BSA_SLT_PRC" ).append("\n"); 
		query.append("         , VB.ESTM_AMT" ).append("\n"); 
		query.append("         , VB.ACT_AMT" ).append("\n"); 
		query.append("         , VB.ACCL_AMT" ).append("\n"); 
		query.append("         , 'JOO' AS SYS_SRC_ID" ).append("\n"); 
		query.append("         , (SELECT LOC_CD FROM   MDM_ORGANIZATION WHERE OFC_CD = @[ofc_cd] AND ROWNUM = 1) AS LOC_CD" ).append("\n"); 
		query.append("         , GL.ESTM_IOC_DIV_CD AS JO_IOC_DIV_CD" ).append("\n"); 
		query.append("         , GL.ESTM_VVD_HDR_ID" ).append("\n"); 
		query.append("         , 'CNTR'   AS JO_CNTR_DIV_CTNT" ).append("\n"); 
		query.append("         , 'C'      AS CNTR_BLK_DIV_CD" ).append("\n"); 
		query.append("         , VB.ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append("         , GL.ACT_DT" ).append("\n"); 
		query.append("         , VB.ST_DT" ).append("\n"); 
		query.append("         , VB.END_DT" ).append("\n"); 
		query.append("         , VB.SAIL_DYS" ).append("\n"); 
		query.append("         , VB.ESTM_YRMON" ).append("\n"); 
		query.append("         , VB.ESTM_DYS" ).append("\n"); 
		query.append("         , GL.JO_STL_ITM_CD" ).append("\n"); 
		query.append("         , DECODE(GL.RE_DIVR_CD,'R', GL.CUST_CNT_CD , '') AS CUST_CNT_CD" ).append("\n"); 
		query.append("         , DECODE(GL.RE_DIVR_CD,'R', GL.CUST_SEQ    , GL.VNDR_SEQ) AS CUST_SEQ" ).append("\n"); 
		query.append("         , GL.REV_VVD AS VVD" ).append("\n"); 
		query.append("         , (SELECT A.INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL A WHERE A.INTG_CD_ID = 'CD01866' AND A.INTG_CD_VAL_CTNT = VB.JO_STL_JB_CD AND ROWNUM = 1) AS JO_STL_JB_NM" ).append("\n"); 
		query.append("         , VB.NOW_ESTM_AMT" ).append("\n"); 
		query.append("         , VB.ORG_ESTM_AMT" ).append("\n"); 
		query.append("         , VB.NOW_ACT_AMT" ).append("\n"); 
		query.append("         , VB.ORG_ACT_AMT" ).append("\n"); 
		query.append("         , ROW_NUMBER() OVER (PARTITION BY GL.EXE_YRMON, GL.REV_YRMON, GL.JO_CRR_CD, GL.RLANE_CD, GL.REV_VVD, GL.ACCT_CD" ).append("\n"); 
		query.append("                                  ORDER BY GL.EXE_YRMON, GL.REV_YRMON, GL.JO_CRR_CD, GL.RLANE_CD, GL.REV_VVD, GL.ACCT_CD, GL.JO_STL_ITM_CD, VB.JO_STL_JB_CD, VB.ACCL_AMT_CORR_FLG, VB.ESTM_YRMON) AS ESTM_ACT_SEQ" ).append("\n"); 
		query.append("      FROM V_GL_ESTM_REV_VVD GL" ).append("\n"); 
		query.append("         , (" ).append("\n"); 
		query.append("            SELECT * FROM V_VVD_ESTM_BSA_SH_OPR" ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("            SELECT * FROM V_VVD_ESTM_BSA_OTH" ).append("\n"); 
		query.append("            ) VB" ).append("\n"); 
		query.append("     WHERE 1=1" ).append("\n"); 
		query.append("       AND GL.VSL_CD            = VB.VSL_CD" ).append("\n"); 
		query.append("       AND GL.SKD_VOY_NO        = VB.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND GL.SKD_DIR_CD        = VB.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND GL.REV_DIR_CD        = VB.REV_DIR_CD" ).append("\n"); 
		query.append("       AND GL.RLANE_CD          = VB.RLANE_CD" ).append("\n"); 
		query.append("       AND GL.REV_YRMON         = VB.REV_YRMON" ).append("\n"); 
		query.append("       AND GL.JO_CRR_CD         = VB.JO_CRR_CD" ).append("\n"); 
		query.append("       AND GL.RE_DIVR_CD        = VB.RE_DIVR_CD" ).append("\n"); 
		query.append("       AND GL.JO_STL_ITM_CD     = VB.JO_STL_ITM_CD" ).append("\n"); 
		query.append("       ) A" ).append("\n"); 
		query.append("ORDER BY ACCT_CD" ).append("\n"); 
		query.append(" , REV_YRMON" ).append("\n"); 
		query.append(" , JO_CRR_CD" ).append("\n"); 
		query.append(" , RLANE_CD" ).append("\n"); 
		query.append(" , VVD" ).append("\n"); 
		query.append(" , JO_STL_ITM_CD" ).append("\n"); 
		query.append(" , NVL(JO_STL_JB_CD, '101')" ).append("\n"); 
		query.append(" , ACCL_AMT_CORR_FLG" ).append("\n"); 
		query.append(" , ESTM_YRMON" ).append("\n"); 
		query.append(" , ESTM_ACT_SEQ" ).append("\n"); 

	}
}