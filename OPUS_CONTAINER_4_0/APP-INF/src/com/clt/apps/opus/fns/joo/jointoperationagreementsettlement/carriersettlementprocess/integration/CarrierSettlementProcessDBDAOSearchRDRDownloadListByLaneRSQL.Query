<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOSearchRDRDownloadListByLaneRSQL">
			<desc><![CDATA[--------------------------------------------------------
History
2011.01.11 김상수 [CHM-201007350-01] JOO - RDR Inquiry by Lane 기능 보완 요청
                  1. 보완 대상
                     가. 조회  Option
                        - Region Multi 선택
                        - Carrier 추가 - Multi 선택
                     나. Remark Pop up 추가 - 일부 Data 저장 및 해당 컬럼에 반영 (계산 Logic 포함)
                     다. Asjusted Allocation 컬럼 추가 (계산Logic 포함)
                     라. Over Used 계산 Logic( Allocation 참조 컬럼을  Adjusted Allocation으로 변경
                     마. 기타 : 컬럼별 계산 Logic 수정]]></desc>
			<sql><![CDATA[
WITH PA AS (SELECT H.VSL_CD,
                   H.VOY_NO,
                   H.DIR_CD,
                   H.REGION,
                   H.PORT_CD,
                   K.VPS_ETD_DT,
                   H.REMARK,
                   @[vvd] VVD
              FROM RDR_HEADER H,
                   VSK_VSL_PORT_SKD K
             WHERE K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
                                    AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999
               AND H.REGION IN (${region})
               AND K.SLAN_CD = @[rlane_cd]
               AND H.VSL_CD = K.VSL_CD
               AND H.VOY_NO = K.SKD_VOY_NO
               AND H.PORT_CD = K.VPS_PORT_CD
               AND H.DIR_CD = K.SKD_DIR_CD
               AND K.CLPT_IND_SEQ = '1' --> 수정 : 조건수정
           )


SELECT Z.VSL_CD,
       Z.VOY_NO,
       Z.DIR_CD,
       Z.VSL_CD || Z.VOY_NO || Z.DIR_CD VVD,
       Z.REGION,
       Z.PORT_CD,
       Z.OPR_CD,
       Z.VPS_ETD_DT,
       SUM (Z.ALC_ALLOC) ALC_ALLOC,
       SUM (Z.ALC_WGT) ALC_WGT,
       SUM (Z.SWAP_SLOT) SWAP_SLOT,                             /* Slot R TEU */
       SUM (Z.SWAP_WGT) SWAP_WGT,                               /* Slot R WT */
       NVL (R.JO_SLT_RLSE_CD, 'P') JO_SLT_RLSE_CD,              /* Slot R R/Option */
       CASE
          WHEN R.JO_SLT_RLSE_CD = 'R' THEN
               SUM (Z.ALC_ALLOC)
          ELSE /* C, P, null (Default = P) */
               SUM (Z.ALC_ALLOC) + SUM (Z.SWAP_SLOT)
       END ADJUST_TEU,                                          /* Adjusted Allocation TEU */
       CASE
          WHEN R.JO_SLT_RLSE_CD = 'R' THEN
               SUM (Z.ALC_WGT)
          ELSE /* C, P, null (Default = P) */
               SUM (Z.ALC_WGT) + SUM (Z.SWAP_WGT)
       END ADJUST_WT,                                           /* Adjusted Allocation WT */
       SUM (Z.ACT_SLOT) + NVL (R.JO_VOID_TEU_QTY, 0) ACT_SLOT,
       SUM (Z.ACT_WGT) ACT_WGT,
       CASE
          WHEN R.JO_SLT_RLSE_CD = 'R' THEN
               (SUM (Z.ACT_SLOT) + NVL (R.JO_VOID_TEU_QTY, 0)) - SUM (Z.ALC_ALLOC)
          ELSE /* C, P, null (Default = P) */
               (SUM (Z.ACT_SLOT) + NVL (R.JO_VOID_TEU_QTY, 0)) - (SUM (Z.ALC_ALLOC) + SUM (Z.SWAP_SLOT))
       END OVER_SLOT,                                           /* Over Used TEU */
       CASE
          WHEN R.JO_SLT_RLSE_CD = 'R' THEN
               SUM (Z.ACT_WGT) - SUM (Z.ALC_WGT)
          ELSE /* C, P, null (Default = P) */
               SUM (Z.ACT_WGT) - (SUM (Z.ALC_WGT) + SUM (Z.SWAP_WGT))
       END OVER_WGT,                                            /* Over Used WT */
       NVL (R.JO_SHRT_LEG_RMK_TEU_QTY, 0) JO_SHRT_LEG_RMK_TEU_QTY,
       NVL (R.JO_SHRT_LEG_RMK_WGT, 0) JO_SHRT_LEG_RMK_WGT,
       NVL (R.JO_SHRT_LEG_RMK_DIFF_QTY, 0) JO_SHRT_LEG_RMK_DIFF_QTY,
       SUM (Z.LOAD_20) LOAD_20,
       SUM (Z.BSA_HC20) BSA_HC20,
       SUM (Z.LOAD_40) LOAD_40,
       SUM (Z.BSA_HC40) BSA_HC40,
       SUM (Z.LOAD_45) LOAD_45,
       SUM (Z.BSA_45) BSA_45,
       SUM (Z.R_O) + NVL (R.JO_RF_OCN_QTY, 0) R_O,
       SUM (Z.R_I) + NVL (R.JO_RF_IPT_QTY, 0) R_I,
       SUM (Z.EMPTY_TEU) EMPTY_TEU,
       SUM (Z.EMPTY_WT) EMPTY_WT,
       NVL2 (MAX (Z.REMARK), 'Yes', 'No') REMARK,
       Z.REMARK REMARK_CONT,
       NVL (R.JO_RF_OCN_QTY, 0) JO_RF_OCN_QTY,
       NVL (R.JO_RF_IPT_QTY, 0) JO_RF_IPT_QTY,
       NVL (R.JO_VOID_TEU_QTY, 0) JO_VOID_TEU_QTY
  FROM (SELECT /* 1.Allocation TEU & Allocation WT*/
               H.VSL_CD,
               H.VOY_NO,
               H.DIR_CD,
               H.REGION,
               H.PORT_CD,
               A.OPR_CD,
               H.VPS_ETD_DT,
               NVL (SUM (A.BSA_SLOT), 0) + NVL (SUM (A.SWAP_SLOT), 0) ALC_ALLOC, /* Allocation TEU */
               NVL (SUM (A.BSA_WGT), 0) + NVL (SUM (A.SWAP_WGT), 0) ALC_WGT,     /* Allocation WT */
               NVL (SUM (A.SWAP_SLOT), 0) SWAP_SLOT,                             /* Slot Release TEU */
               NVL (SUM (A.SWAP_WGT), 0) SWAP_WGT,                               /* Slot Release WT */
               0 ACT_SLOT,
               0 ACT_WGT,
               0 LOAD_20,
               0 BSA_HC20,
               0 LOAD_40,
               0 BSA_HC40,
               0 LOAD_45,
               0 BSA_45,
               0 R_O,
               0 R_I,
               0 EMPTY_TEU,
               0 EMPTY_WT,
               NVL (MAX (H.REMARK), '') REMARK
          FROM PA H,
               RDR_ALLOCATION A
         WHERE H.VSL_CD = A.VSL_CD
           AND H.VOY_NO = A.VOY_NO
           AND H.DIR_CD = A.DIR_CD
           AND H.REGION = A.REGION
#if (${vvd} != '')
           AND H.VSL_CD || H.VOY_NO || H.DIR_CD LIKE H.VVD || '%'
#end
#if (${opr_cd} != '')
           AND A.OPR_CD IN (${opr_cd})
#end
        GROUP BY A.OPR_CD,
                 H.VSL_CD,
                 H.VOY_NO,
                 H.DIR_CD,
                 H.REGION,
                 H.PORT_CD,
                 H.VPS_ETD_DT


        UNION ALL


        SELECT /* 2.ACTUAL USED, TEU, WT - 1)TEU 2) WT */
               H.VSL_CD,
               H.VOY_NO,
               H.DIR_CD,
               H.REGION,
               H.PORT_CD,
               A.OPR_CD,
               H.VPS_ETD_DT,
               0 ALC_ALLOC,
               0 ALC_WGT,
               0 SWAP_SLOT,
               0 SWAP_WGT,
                    SUM (DECODE (A.TYPE, 'F', A.SLOT_QTY, 0)) +
                    SUM (DECODE (A.TYPE, 'E', A.SLOT_QTY, 0)) +
                    SUM (DECODE (A.TYPE, 'A', A.SLOT_QTY, 0)) +
                    SUM (DECODE (A.TYPE, 'H', A.SLOT_QTY, 'L', A.SLOT_QTY, 0)) ACT_SLOT,
               SUM (A.WEIGHT) ACT_WGT,
               0 LOAD_20,
               0 BSA_HC20,
               0 LOAD_40,
               0 BSA_HC40,
               0 LOAD_45,
               0 BSA_45,
               0 R_O,
               0 R_I,
               SUM (DECODE (A.TYPE, 'E', A.SLOT_QTY, 0)) EMPTY_TEU,
               SUM (A.WEIGHT) EMPTY_WT,
               NVL (MAX (H.REMARK), '') REMARK
          FROM PA H,
               RDR_UTILIZE A
         WHERE H.VSL_CD = A.VSL_CD
           AND H.VOY_NO = A.VOY_NO
           AND H.DIR_CD = A.DIR_CD
           AND H.REGION = A.REGION
#if (${vvd} != '')
           AND H.VSL_CD || H.VOY_NO || H.DIR_CD LIKE H.VVD || '%'
#end
#if (${opr_cd} != '')
           AND A.OPR_CD IN (${opr_cd})
#end
        GROUP BY A.OPR_CD,
                 H.VSL_CD,
                 H.VOY_NO,
                 H.DIR_CD,
                 H.REGION,
                 H.PORT_CD,
                 H.VPS_ETD_DT


        UNION ALL


        SELECT /* 3.RF - 1) R-O*/
               H.VSL_CD,
               H.VOY_NO,
               H.DIR_CD,
               H.REGION,
               H.PORT_CD,
               M.OPR_CD,
               H.VPS_ETD_DT,
               0 ALC_ALLOC,
               0 ALC_WGT,
               0 SWAP_SLOT,
               0 SWAP_WGT,
               0 ACT_SLOT,
               0 ACT_WGT,
               0 LOAD_20,
               0 BSA_HC20,
               0 LOAD_40,
               0 BSA_HC40,
               0 LOAD_45,
               0 BSA_45,
               SUM (DECODE (M.CNTR_SIZE, '2', 1, '3', 1, 0)) + SUM (DECODE (M.CNTR_SIZE, '4', 1, 'H', 1, 'L', 1, 0)) R_O,
               0 R_I,
               0 EMPTY_TEU,
               0 EMPTY_WT,
               NVL (MAX (H.REMARK), '') REMARK
          FROM PA H,
               RDR_CNTR_DETAIL M
         WHERE H.VSL_CD = M.VSL_CD
           AND H.VOY_NO = M.VOY_NO
           AND H.DIR_CD = M.DIR_CD
           AND M.TEMP IS NOT NULL
           AND M.CARGO_TYPE != 'IR'
#if (${vvd} != '')
           AND H.VSL_CD || H.VOY_NO || H.DIR_CD LIKE H.VVD || '%'
#end
#if (${opr_cd} != '')
           AND M.OPR_CD IN (${opr_cd})
#end
        GROUP BY M.OPR_CD,
                 H.VSL_CD,
                 H.VOY_NO,
                 H.DIR_CD,
                 H.REGION,
                 H.PORT_CD,
                 H.VPS_ETD_DT


        UNION ALL


        /*** R-O, 2.Internally ****/
        SELECT H.VSL_CD,
               H.VOY_NO,
               H.DIR_CD,
               H.REGION,
               H.PORT_CD,
               S.OPR_CD,
               H.VPS_ETD_DT,
               0 ALC_ALLOC,
               0 ALC_WGT,
               0 SWAP_SLOT,
               0 SWAP_WGT,
               0 ACT_SLOT,
               0 ACT_WGT,
               0 LOAD_20,
               0 BSA_HC20,
               0 LOAD_40,
               0 BSA_HC40,
               0 LOAD_45,
               0 BSA_45,
               SUM (DECODE (S.CNTR_SIZE, '2', QTY, 0)) + SUM (DECODE (S.CNTR_SIZE, '4', QTY, 0)) R_O,
               0 R_I,
               0 EMPTY_TEU,
               0 EMPTY_WT,
               NVL (MAX (H.REMARK), '') REMARK
          FROM PA H,
               RDR_SUMMARY S
         WHERE H.VSL_CD = S.VSL_CD
           AND H.VOY_NO = S.VOY_NO
           AND H.DIR_CD = S.DIR_CD
           AND H.REGION = S.REGION
           AND H.VSL_CD = S.VSL_CD
           AND H.VOY_NO = S.VOY_NO
           AND H.DIR_CD = S.DIR_CD
           AND H.REGION = S.REGION
           AND S.CNTR_TYPE = 'T'
#if (${vvd} != '')
           AND H.VSL_CD || H.VOY_NO || H.DIR_CD LIKE H.VVD || '%'
#end
#if (${opr_cd} != '')
           AND S.OPR_CD IN (${opr_cd})
#end
        GROUP BY S.OPR_CD,
                 H.VSL_CD,
                 H.VOY_NO,
                 H.DIR_CD,
                 H.REGION,
                 H.PORT_CD,
                 H.VPS_ETD_DT


        UNION ALL


        SELECT /* 3.RF - 1) R-I*/
               H.VSL_CD,
               H.VOY_NO,
               H.DIR_CD,
               H.REGION,
               H.PORT_CD,
               M.OPR_CD,
               H.VPS_ETD_DT,
               0 ALC_ALLOC,
               0 ALC_WGT,
               0 SWAP_SLOT,
               0 SWAP_WGT,
               0 ACT_SLOT,
               0 ACT_WGT,
               0 LOAD_20,
               0 BSA_HC20,
               0 LOAD_40,
               0 BSA_HC40,
               0 LOAD_45,
               0 BSA_45,
               0 R_O,
               SUM (DECODE (M.CNTR_SIZE, '2', 1, '3', 1, 0)) + SUM (DECODE (M.CNTR_SIZE, '4', 1, 'H', 1, 'L', 1, 0)) R_I,
               0 EMPTY_TEU,
               0 EMPTY_WT,
               NVL (MAX (H.REMARK), '') REMARK
          FROM PA H,
               RDR_CNTR_DETAIL M
         WHERE H.VSL_CD = M.VSL_CD
           AND H.VOY_NO = M.VOY_NO
           AND H.DIR_CD = M.DIR_CD
           AND M.TEMP IS NOT NULL
           AND M.CARGO_TYPE = 'IR'
#if (${vvd} != '')
           AND H.VSL_CD || H.VOY_NO || H.DIR_CD LIKE H.VVD || '%'
#end
#if (${opr_cd} != '')
           AND M.OPR_CD IN (${opr_cd})
#end
        GROUP BY M.OPR_CD,
                 H.VSL_CD,
                 H.VOY_NO,
                 H.DIR_CD,
                 H.REGION,
                 H.PORT_CD,
                 H.VPS_ETD_DT


        UNION ALL


        SELECT /* 3.RF - 1) R-I INTERNAL*/
               H.VSL_CD,
               H.VOY_NO,
               H.DIR_CD,
               H.REGION,
               H.PORT_CD,
               S.OPR_CD,
               H.VPS_ETD_DT,
               0 ALC_ALLOC,
               0 ALC_WGT,
               0 SWAP_SLOT,
               0 SWAP_WGT,
               0 ACT_SLOT,
               0 ACT_WGT,
               0 LOAD_20,
               0 BSA_HC20,
               0 LOAD_40,
               0 BSA_HC40,
               0 LOAD_45,
               0 BSA_45,
               0 R_O,
               SUM (DECODE (S.CNTR_SIZE, '2', QTY, 0)) + SUM (DECODE (S.CNTR_SIZE, '4', QTY, 0)) R_I,
               0 EMPTY_TEU,
               0 EMPTY_WT,
               NVL (MAX (H.REMARK), '') REMARK
          FROM PA H,
               RDR_SUMMARY S
         WHERE H.VSL_CD = S.VSL_CD
           AND H.VOY_NO = S.VOY_NO
           AND H.DIR_CD = S.DIR_CD
           AND H.VSL_CD = S.VSL_CD
           AND H.VOY_NO = S.VOY_NO
           AND H.DIR_CD = S.DIR_CD
           AND H.REGION = S.REGION
           AND S.CNTR_TYPE = 'I'
#if (${vvd} != '')
           AND H.VSL_CD || H.VOY_NO || H.DIR_CD LIKE H.VVD || '%'
#end
#if (${opr_cd} != '')
           AND S.OPR_CD IN (${opr_cd})
#end
        GROUP BY S.OPR_CD,
                 H.VSL_CD,
                 H.VOY_NO,
                 H.DIR_CD,
                 H.REGION,
                 H.PORT_CD,
                 H.VPS_ETD_DT


        UNION ALL


        /* 4.20HC, 40HC, 45*/
        SELECT --DISTINCT
               H.VSL_CD,
               H.VOY_NO,
               H.DIR_CD,
               H.REGION,
               H.PORT_CD,
               DECODE (M.OPR_CD, NULL, B.OPR_CD, M.OPR_CD) OPR_CD,
               H.VPS_ETD_DT,
               0 ALC_ALLOC,
               0 ALC_WGT,
               0 SWAP_SLOT,
               0 SWAP_WGT,
               0 ACT_SLOT,
               0 ACT_WGT,
               SUM (DECODE (M.TYPE, 'F', M.SLOT_HC20, 'E', M.SLOT_HC20, 0)) LOAD_20,
               TO_NUMBER (NVL (B.HC20_QTY, 0)) BSA_HC20,
               SUM (NVL (M.SLOT_HC, 0)) LOAD_40,
               TO_NUMBER (NVL (B.HC_QTY, 0)) BSA_HC40,
               SUM (NVL (M.SLOT_45, 0)) LOAD_45,
               TO_NUMBER (NVL (B.QTY_45, 0)) BSA_45,
               0 R_O,
               0 R_I,
               0 EMPTY_TEU,
               0 EMPTY_WT,
               NVL (MAX (H.REMARK), '') REMARK
          FROM PA H,
               RDR_BSA B,
               RDR_UTILIZE M
         WHERE H.VSL_CD = B.VSL_CD
           AND H.VOY_NO = B.VOY_NO
           AND H.DIR_CD = B.DIR_CD
           AND H.REGION = B.REGION
           AND H.VSL_CD = M.VSL_CD
           AND H.VOY_NO = M.VOY_NO
           AND H.DIR_CD = M.DIR_CD
           AND H.REGION = M.REGION
           AND DECODE (M.OPR_CD, NULL, 'N', B.OPR_CD) = NVL (M.OPR_CD, 'N')
#if (${vvd} != '')
           AND H.VSL_CD || H.VOY_NO || H.DIR_CD LIKE H.VVD || '%'
#end
#if (${opr_cd} != '')
           AND M.OPR_CD IN (${opr_cd})
#end
        GROUP BY M.OPR_CD,
                 B.OPR_CD,
                 NVL (B.HC20_RAT, 0),
                 NVL (B.HC_RAT, 0),
                 NVL (B.UN_RAT_45, 0),
                 NVL (B.OV_RAT_45, 0),
                 NVL (B.HC20_QTY, 0),
                 NVL (B.HC_QTY, 0),
                 NVL (B.QTY_45, 0),
                 H.VSL_CD,
                 H.VOY_NO,
                 H.DIR_CD,
                 H.REGION,
                 H.PORT_CD,
                 H.VPS_ETD_DT) Z,
       JOO_RDR_VVD_CRR_RMK R
 WHERE Z.VSL_CD = R.VSL_CD(+)
   AND Z.VOY_NO = R.SKD_VOY_NO(+)
   AND Z.DIR_CD = R.SKD_DIR_CD(+)
   AND Z.REGION = R.JO_RGN_CD(+)
   AND Z.PORT_CD = R.PORT_CD(+)
   AND Z.OPR_CD = R.JO_CRR_CD(+)
 GROUP BY Z.VSL_CD,
          Z.VOY_NO,
          Z.DIR_CD,
          Z.REGION,
          Z.PORT_CD,
          Z.OPR_CD,
          Z.VPS_ETD_DT,
          Z.REMARK,
          R.JO_SHRT_LEG_RMK_TEU_QTY,
          R.JO_SHRT_LEG_RMK_WGT,
          R.JO_SLT_RLSE_CD,
          R.JO_SHRT_LEG_RMK_DIFF_QTY,
          R.JO_RF_OCN_QTY,
          R.JO_RF_IPT_QTY,
          R.JO_VOID_TEU_QTY
 ORDER BY Z.VSL_CD,
          Z.VOY_NO,
          Z.DIR_CD,
          Z.REGION,
          Z.PORT_CD,
          Z.OPR_CD,
          Z.VPS_ETD_DT			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="pre_fr" type="12" value="" out="N"/>
				<param name="pre_to" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
