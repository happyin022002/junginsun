<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOAdjustSettlementVORSQL">
			<desc><![CDATA[Adjustment 조회]]></desc>
			<sql><![CDATA[
WITH V_BSA AS(
    SELECT B.VSL_CD
         , B.SKD_VOY_NO
         , B.SKD_DIR_CD
         , B.RLANE_CD
#if (${jo_stl_itm_cd} != '' && ${jo_stl_itm_cd} == 'OPR')
	     , DECODE(B.BSA_OP_JB_CD,'000','104','001','104','002','105','003','105','004','106','005','106') AS JO_STL_JB_CD /*OPR*/
#else
		 , DECODE(B.BSA_OP_JB_CD,'000','101','001','101','002','102','003','102','004','103','005','103') AS JO_STL_JB_CD /*S/H*/
#end
         , CASE
             WHEN B.BSA_OP_JB_CD IN ('001','002','004') THEN 'R'
             WHEN B.BSA_OP_JB_CD IN ('000','003','005') THEN 'E'
           END AS RE_DIVR_CD
         , B.CRR_BSA_CAPA AS BSA_QTY
#if (${jo_stl_itm_cd} != '' && ${jo_stl_itm_cd} == 'OPR')
		 , B.OP_SLT_PRC_CAPA AS BSA_SLT_PRC
		 , B.OP_CRR_PERF_AMT  AS STL_LOCL_AMT
#else
         , B.SLT_PRC_CAPA AS BSA_SLT_PRC
         , B.CRR_PERF_AMT AS STL_LOCL_AMT
#end
      FROM BSA_VVD_CRR_PERF B
     WHERE B.CRR_CD = @[jo_crr_cd]
       AND B.TRD_CD = @[trd_cd]
       AND B.RLANE_CD = @[rlane_cd]
#if(${re_divr_cd} =='R')
       AND B.BSA_OP_JB_CD IN ('001','002','004')
#elseif(${re_divr_cd} =='E')
	   AND B.BSA_OP_JB_CD IN ('000','003','005')
#end
)
--SELECT * FROM V_BSA;

SELECT 'I' AS IBFLAG
     , REPLACE(@[acct_yrmon],'-','') AS ACCT_YRMON
     , @[trd_cd] AS TRD_CD
     , @[jo_crr_cd] AS JO_CRR_CD
     , @[rlane_cd] AS RLANE_CD
     , @[re_divr_cd] AS RE_DIVR_CD
     , @[jo_stl_itm_cd] AS JO_STL_ITM_CD
     , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS VVD
     , A.VSL_CD
     , A.SKD_VOY_NO
     , A.SKD_DIR_CD
     , A.REV_DIR_CD
     , A.JO_STL_JB_CD
     , A.JO_MNU_NM
     , @[locl_curr_cd] AS LOCL_CURR_CD
     , '0' AS STL_ADJ_IRR_FLG
     , A.STL_CMB_SEQ
     , A.COA_JO_MNU_NM
     , A.JOO_JO_MNU_NM
     , A.COA_STL_LOCL_AMT
     , A.JOO_STL_LOCL_AMT
     , A.BSA_QTY
     , A.BSA_SLT_PRC
     , A.BSA_QTY1
     , A.BSA_SLT_PRC1
     , A.BSA_QTY - A.BSA_QTY1 AS DTL_BSA_QTY
     , A.BSA_SLT_PRC - A.BSA_SLT_PRC1 AS DTL_BSA_SLT_PRC
     , (A.BSA_QTY - A.BSA_QTY1) * A.BSA_SLT_PRC AS ADJ_BSA_QTY_LOCL_AMT /*수량변경에 의한 ADJ 금액 = DIFF. QTY * COA PRICE*/
     , A.BSA_QTY1 * (A.BSA_SLT_PRC - A.BSA_SLT_PRC1) AS ADJ_BSA_SLT_PRC_LOCL_AMT /* 단가변경에 의한 ADJ 금액 = JOO QTY * DIFF. PRICE*/
     , (A.BSA_QTY - A.BSA_QTY1) * A.BSA_SLT_PRC + A.BSA_QTY1 * (A.BSA_SLT_PRC - A.BSA_SLT_PRC1) AS STL_LOCL_AMT
     , A.ACCT_YRMON AS PRE_ACCT_YRMON
     , A.STL_VVD_SEQ AS PRE_STL_VVD_SEQ
     , A.STL_SEQ AS PRE_STL_SEQ
  FROM (SELECT NVL(COA.ACCT_YRMON, JOO.ACCT_YRMON) AS ACCT_YRMON
             , NVL(COA.STL_VVD_SEQ,JOO.STL_VVD_SEQ)AS STL_VVD_SEQ
             , JOO.STL_SEQ AS STL_SEQ
             , JOO.STL_CMB_SEQ AS STL_CMB_SEQ
             , NVL(COA.VSL_CD , JOO.VSL_CD ) AS VSL_CD
             , NVL(COA.SKD_VOY_NO, JOO.SKD_VOY_NO) AS SKD_VOY_NO
             , NVL(COA.SKD_DIR_CD, JOO.SKD_DIR_CD) AS SKD_DIR_CD
             , NVL(COA.REV_DIR_CD, JOO.REV_DIR_CD) AS REV_DIR_CD
             , NVL(COA.JO_STL_JB_CD, JOO.JO_STL_JB_CD) AS JO_STL_JB_CD
             , NVL(COA.JO_MNU_NM,@[jo_mnu_nm]) AS COA_JO_MNU_NM
             , NVL(JOO.JO_MNU_NM,@[jo_mnu_nm]) AS JOO_JO_MNU_NM
             , NVL(COA.JO_MNU_NM, JOO.JO_MNU_NM) AS JO_MNU_NM
             , NVL(COA.BSA_QTY,0) AS BSA_QTY
             , NVL(COA.BSA_SLT_PRC,0) AS BSA_SLT_PRC
             , NVL(COA.STL_LOCL_AMT,0) AS COA_STL_LOCL_AMT
               /*MAX(JOO.JO_MNU_NM) = 'M/S'란 뜻은 S/H가 없다는 말이므로 M/S는 -처리하고 S/H는 0으로 만들어서 COA값을 그대로 가져오기 위함이다.*/
             , DECODE(JOO.MAX_JO_MNU_NM, 'M/S', DECODE(COA.JO_MNU_NM, @[jo_mnu_nm], 0, NVL(JOO.BSA_QTY ,0)), NVL(JOO.BSA_QTY ,0)) AS BSA_QTY1
             , DECODE(JOO.MAX_JO_MNU_NM, 'M/S', DECODE(COA.JO_MNU_NM, @[jo_mnu_nm], 0, NVL(JOO.BSA_SLT_PRC,0)), NVL(JOO.BSA_SLT_PRC,0)) AS BSA_SLT_PRC1
             , NVL(JOO.SUM_STL_LOCL_AMT,0) AS JOO_STL_LOCL_AMT
             , JOO.MAX_JO_MNU_NM
          FROM (SELECT A.ACCT_YRMON
                     , A.STL_VVD_SEQ
                     , A.VSL_CD
                     , A.SKD_VOY_NO
                     , A.SKD_DIR_CD
                     , A.REV_DIR_CD
                     , A.JO_STL_JB_CD
                     , B.JO_MNU_NM
                     , DECODE(B.JO_MNU_NM, @[jo_mnu_nm], A.BSA_QTY , 0) AS BSA_QTY
                     , DECODE(B.JO_MNU_NM, @[jo_mnu_nm], A.BSA_SLT_PRC , 0) AS BSA_SLT_PRC
                     , SUM(DECODE(B.JO_MNU_NM, @[jo_mnu_nm], A.STL_LOCL_AMT, 0)) OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, A.JO_STL_JB_CD) STL_LOCL_AMT
                  FROM (SELECT SUBSTR(A.YRMON_VVD_SEQ,1,6) AS ACCT_YRMON
                             , TO_NUMBER(SUBSTR(A.YRMON_VVD_SEQ,7)) AS STL_VVD_SEQ
                             , A.VSL_CD
                             , A.SKD_VOY_NO
                             , A.SKD_DIR_CD
                             , A.REV_DIR_CD
                             , B.JO_STL_JB_CD
                             , B.BSA_QTY
                             , B.BSA_SLT_PRC
                             , B.STL_LOCL_AMT
                          FROM (SELECT MAX(A.ACCT_YRMON||A.STL_VVD_SEQ) YRMON_VVD_SEQ
                                     , A.VSL_CD
                                     , A.SKD_VOY_NO
                                     , A.SKD_DIR_CD
                                     , A.REV_DIR_CD
                                     , A.RLANE_CD
                                  FROM JOO_STL_VVD A
                                 WHERE A.ACCT_YRMON>= REPLACE(@[fm_acct_yrmon],'-','')
                                   AND A.ACCT_YRMON<= REPLACE(@[to_acct_yrmon],'-','')
                                   AND A.RE_DIVR_CD = @[re_divr_cd]
                                   AND A.JO_CRR_CD = @[jo_crr_cd]
                                   AND A.TRD_CD = @[trd_cd]
                                   AND A.RLANE_CD = @[rlane_cd]
                                   AND A.JO_STL_ITM_CD = @[jo_stl_itm_cd]
                                    --2010.04.20 
                                    --AND    A.JO_STL_CFM_CD = 'Y'
                                 GROUP BY A.VSL_CD
                                     , A.SKD_VOY_NO
                                     , A.SKD_DIR_CD
                                     , A.REV_DIR_CD
                                     , A.RLANE_CD ) A
                             , V_BSA B
                         WHERE A.VSL_CD = B.VSL_CD (+)
                           AND A.SKD_VOY_NO = B.SKD_VOY_NO (+)
                           AND A.SKD_DIR_CD = B.SKD_DIR_CD (+)
                           AND A.RLANE_CD = B.RLANE_CD (+) 
                       ) A
                     , (SELECT @[jo_mnu_nm] AS JO_MNU_NM FROM DUAL
                         UNION ALL
                        SELECT 'M/S' AS JO_MNU_NM FROM DUAL 
                        ) B 
               ) COA FULL 
               OUTER JOIN 
               (SELECT J.ACCT_YRMON
                     , J.STL_VVD_SEQ
                     , J.STL_SEQ
                     , J.VSL_CD
                     , J.SKD_VOY_NO
                     , J.SKD_DIR_CD
                     , J.REV_DIR_CD
                     , J.JO_STL_JB_CD
                     , J.JO_MNU_NM
                     , J.STL_CMB_SEQ
                       /*M/S이면서 ADJ한 거면...JOO_STL_DTL에서 TEU, PRICE를 읽어온다.(M/S의 Adj는 BSA_QTY, BSA_SLT_PRC가 0이므로)*/
                     , DECODE(J.JO_MNU_NM||J.STL_ADJ_FLG, 'M/SY',NVL(( SELECT SUM(DECODE(X.STL_DTL_SEQ,1,X.BSA_QTY ,0))
                                                                         FROM JOO_STL_DTL X
                                                                        WHERE X.ACCT_YRMON = J.ACCT_YRMON
                                                                          AND X.STL_VVD_SEQ = J.STL_VVD_SEQ
                                                                          AND X.STL_SEQ = J.STL_SEQ),0)
                                                        , J.BSA_QTY ) AS BSA_QTY 
                     , DECODE(J.JO_MNU_NM||J.STL_ADJ_FLG, 'M/SY',NVL(( SELECT SUM(DECODE(X.STL_DTL_SEQ,2,-1 * X.BSA_SLT_PRC,0))
                                                                         FROM JOO_STL_DTL X
                                                                        WHERE X.ACCT_YRMON = J.ACCT_YRMON
                                                                          AND X.STL_VVD_SEQ = J.STL_VVD_SEQ
                                                                          AND X.STL_SEQ = J.STL_SEQ),0)
                                                        , J.BSA_SLT_PRC) AS BSA_SLT_PRC 
                     , SUM(J.STL_LOCL_AMT) OVER (PARTITION BY J.VSL_CD, J.SKD_VOY_NO, J.SKD_DIR_CD, J.REV_DIR_CD, J.JO_STL_JB_CD) AS SUM_STL_LOCL_AMT 
                     , COUNT(1) OVER (PARTITION BY J.VSL_CD, J.SKD_VOY_NO, J.SKD_DIR_CD, J.REV_DIR_CD, J.JO_STL_JB_CD) AS CNT 
                     , MAX(J.JO_MNU_NM) OVER (PARTITION BY J.VSL_CD, J.SKD_VOY_NO, J.SKD_DIR_CD, J.REV_DIR_CD, J.JO_STL_JB_CD) AS MAX_JO_MNU_NM 
                     , ROW_NUMBER() OVER (PARTITION BY J.VSL_CD, J.SKD_VOY_NO, J.SKD_DIR_CD, J.REV_DIR_CD, J.JO_STL_JB_CD ORDER BY J.JO_MNU_NM DESC) AS RNK
                  FROM (SELECT J.ACCT_YRMON
                             , J.STL_VVD_SEQ
                             , J.STL_SEQ
                             , J.VSL_CD
                             , J.SKD_VOY_NO
                             , J.SKD_DIR_CD
                             , J.REV_DIR_CD
                             , J.JO_STL_JB_CD
                             , J.STL_ADJ_FLG
                             , J.JO_MNU_NM
                             , D.STL_CMB_SEQ
                             , J.BSA_QTY
                             , J.BSA_SLT_PRC
                             , J.STL_LOCL_AMT
                             , D.RVS_CMB_FLG
                          FROM (SELECT A.VSL_CD
                                     , A.SKD_VOY_NO
                                     , A.SKD_DIR_CD
                                     , A.REV_DIR_CD
                                     , A.RLANE_CD
                                  FROM JOO_STL_VVD A
                                 WHERE A.ACCT_YRMON >= REPLACE(@[fm_acct_yrmon],'-','')
                                   AND A.ACCT_YRMON <= REPLACE(@[to_acct_yrmon],'-','')
                                   AND A.RE_DIVR_CD = @[re_divr_cd]
                                   AND A.JO_CRR_CD  = @[jo_crr_cd]
                                   AND A.TRD_CD     = @[trd_cd]
                                   AND A.RLANE_CD   = @[rlane_cd]
                                   AND A.JO_STL_ITM_CD = @[jo_stl_itm_cd]
                                    --2010.04.20 
                                    --AND    A.JO_STL_CFM_CD = 'Y'
                                 GROUP BY A.VSL_CD
                                     , A.SKD_VOY_NO
                                     , A.SKD_DIR_CD
                                     , A.REV_DIR_CD
                                     , A.RLANE_CD ) V
                                 , JOO_SETTLEMENT J
                                 --, JOO_STL_CMB_DTL D
                                 , (
                                    SELECT A.RVS_CMB_FLG
                                         , A.STL_CMB_SEQ
                                         , A.ACCT_YRMON
                                         , A.JO_CRR_CD
                                         , B.STL_VVD_SEQ
                                         , B.STL_SEQ
                                      FROM JOO_STL_CMB A
                                         , JOO_STL_CMB_DTL B
                                     WHERE A.ACCT_YRMON     = B.ACCT_YRMON
                                       AND A.JO_CRR_CD      = B.JO_CRR_CD
                                       AND A.STL_CMB_SEQ    = B.STL_CMB_SEQ
                                       AND A.RE_DIVR_CD     = B.RE_DIVR_CD
									   AND A.ACCT_YRMON >= REPLACE(@[fm_acct_yrmon],'-','')
                                       AND A.ACCT_YRMON <= REPLACE(@[to_acct_yrmon],'-','')
                                       AND A.JO_CRR_CD   = @[jo_crr_cd]
                                       AND A.RE_DIVR_CD  = @[re_divr_cd]
                                   ) D
                             WHERE V.VSL_CD         = J.VSL_CD
                               AND V.SKD_VOY_NO     = J.SKD_VOY_NO
                               AND V.SKD_DIR_CD     = J.SKD_DIR_CD
                               AND V.REV_DIR_CD     = J.REV_DIR_CD
                               AND J.ACCT_YRMON     = D.ACCT_YRMON (+)
                               AND J.STL_VVD_SEQ    = D.STL_VVD_SEQ(+)
                               AND J.STL_SEQ        = D.STL_SEQ (+)
                               AND J.JO_STL_ITM_CD  = @[jo_stl_itm_cd]
                               AND J.JO_CRR_CD      = @[jo_crr_cd]
                               AND J.TRD_CD         = @[trd_cd]
                               AND J.RLANE_CD       = @[rlane_cd]
                               AND J.RE_DIVR_CD     = @[re_divr_cd]
                               AND J.STL_LOCL_AMT   <> 0
                               AND J.SAIL_DYS IS NULL
                               AND J.FM_PORT_CD IS NULL
                               AND J.TO_PORT_CD IS NULL 
                       ) J
                  WHERE NVL(J.RVS_CMB_FLG,'N') = 'N' 
                ) JOO ON (
                           COA.VSL_CD = JOO.VSL_CD
                       AND COA.SKD_VOY_NO = JOO.SKD_VOY_NO
                       AND COA.SKD_DIR_CD = JOO.SKD_DIR_CD
                       AND COA.REV_DIR_CD = JOO.REV_DIR_CD
                       AND COA.JO_STL_JB_CD = JOO.JO_STL_JB_CD
                        /*M/S만 여러개인 경우 하나만 S/H만들어줘야함*/
                       AND COA.JO_MNU_NM = CASE WHEN JOO.MAX_JO_MNU_NM = 'M/S' AND JOO.RNK = 1 THEN COA.JO_MNU_NM ELSE JOO.JO_MNU_NM END 
                        ) 
       ) A
 WHERE A.COA_STL_LOCL_AMT <> A.JOO_STL_LOCL_AMT
   --AND NOT (A.BSA_QTY = 0 AND A.BSA_SLT_PRC = 0 AND A.BSA_QTY1 = 0 AND A.BSA_SLT_PRC1 = 0)
   AND NOT ((A.BSA_QTY = 0 AND A.BSA_SLT_PRC = 0 AND A.BSA_QTY1 = 0 AND A.BSA_SLT_PRC1 = 0) OR ((A.BSA_QTY - A.BSA_QTY1) = 0 AND (A.BSA_SLT_PRC - A.BSA_SLT_PRC1) = 0))
   AND A.STL_SEQ IS NOT NULL /*2015.08.20 SETTLEMENT 가 진행 되지 않은 건의 제외.*/
 ORDER BY VSL_CD
     , SKD_VOY_NO
     , SKD_DIR_CD
     , REV_DIR_CD
     , JO_STL_JB_CD
     , JO_MNU_NM DESC			]]></sql>
			<params>
				<param name="jo_crr_cd" type="12" value="KKL" out="N"/>
				<param name="trd_cd" type="12" value="AES" out="N"/>
				<param name="rlane_cd" type="12" value="FEXAE" out="N"/>
				<param name="acct_yrmon" type="12" value="" out="N"/>
				<param name="re_divr_cd" type="12" value="R" out="N"/>
				<param name="jo_stl_itm_cd" type="12" value="" out="N"/>
				<param name="locl_curr_cd" type="12" value="USD" out="N"/>
				<param name="jo_mnu_nm" type="12" value="" out="N"/>
				<param name="fm_acct_yrmon" type="12" value="200904" out="N"/>
				<param name="to_acct_yrmon" type="12" value="200905" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
