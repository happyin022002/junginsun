<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOSearchDischageForLoadingRSQL">
			<desc><![CDATA[DESC Enter
2010.12.06 남궁진호 [CHM-201007281-01]  FL -->  AK, Accumulative Total 반영, Q(Dead Space) 반영..
2011.06.30 이준범[CHM-201111620-01]
제목 : R9 TP/SZ 코드 도입에 따른 변경 요청
내용 : Booking Data Inquiry 화면의  Type Size R9를 H/C에 포함하여 Count하도록 수정
2012.05.29 김상근[CHM-201218112-01] : [JOO] ALPS-JOO Booking data Inquriy 화면 Reefer수량 산출로직 변경(원복)
2012.06.11 김상근[CHM-201218352] : [ALPS JOO] Booking Data Inquiry : RF Counting을 Booking Container table로 query 수정.
[2015.07.21]Virtual Add Calling 처리. VSK_VSL_PORT_SKD.NVL(VT_ADD_CALL_FLG, 'N') = 'N']]></desc>
			<sql><![CDATA[
SELECT       --FORM.POL_CD POL 
             FORM.SKD_DIR_CD 
            ,FORM.MIN_VPS_ETD_DT
            ,@[ratehc]RATEHC
            ,@[rate45]RATE45
            ,GROUPING(FORM.SKD_DIR_CD )
            ,GROUPING(FORM.TYPE )
            ,GROUPING(FORM.POL_CD )
            ,DECODE( GROUPING(FORM.POL_CD ), 0,  SUBSTR(FORM.POL_CD, 0, INSTR(FORM.POL_CD,'/')-3 )
                                           , 1,  DECODE( GROUPING(FORM.TYPE ) ,1, 'TEU', FORM.SKD_DIR_CD||'TOTAL'   )
             )POL_CD
            ,FORM.TYPE
            ,SUM(  DECODE(S1.CNMV_STS_CD, 'MT', DECODE(SUBSTR(S1.CNTR_TPSZ_CD, 2, 1), '2', 1 )    )  ) MT_20_CNT
            ,SUM(  DECODE(S1.CNMV_STS_CD, 'MT', DECODE(SUBSTR(S1.CNTR_TPSZ_CD, 2, 1), '4', 1 )    )  ) MT_40_CNT
            ,SUM(  DECODE(S1.CNMV_STS_CD, 'MT', DECODE(SUBSTR(S1.CNTR_TPSZ_CD, 2, 1), '5', 1, '9', 1 )    )  ) MT_HC_CNT
            ,SUM(  DECODE(S1.CNMV_STS_CD, 'MT', DECODE(SUBSTR(S1.CNTR_TPSZ_CD, 2, 1), '7', 1 )    )  ) MT_45_CNT 
            ${header_sql} 
FROM 
         (SELECT DECODE( C.RC_FLG, 'Y', 'R/F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 1, 1), 'D', 'D', 'R', 'D', 'AK' ) )AS TYPE ,
               SKD.YD_CD||'/'||SKD.SKD_DIR_CD||'/'||SKD.CLPT_IND_SEQ POL_CD,
               B1.POL_YD_CD,
               SKD.CLPT_SEQ ,
               SKD.SKD_DIR_CD ,
               POD_SKD.YD_CD||'/'||B1.SKD_DIR_CD||'/'||B1.POD_CLPT_IND_SEQ POD_CD,
               C.CNTR_TPSZ_CD ,
               C.CNTR_VOL_QTY,
               C.CNMV_STS_CD,
               K.RC_FLG
        FROM   BKG_VVD B1,
               BKG_CONTAINER C,
               BKG_BOOKING K,
               VSK_VSL_PORT_SKD SKD,
               VSK_VSL_PORT_SKD POD_SKD
        WHERE  B1.BKG_NO = C.BKG_NO
        AND    B1.BKG_NO = K.BKG_NO
        AND    K.BKG_STS_CD = 'F' /* F = CONFIRM인 경우 */
        AND    B1.VSL_CD = SKD.VSL_CD
        AND    B1.SKD_VOY_NO = SKD.SKD_VOY_NO
        AND    B1.SKD_DIR_CD = SKD.SKD_DIR_CD
        AND    SKD.CLPT_IND_SEQ = NVL(B1.POL_CLPT_IND_SEQ, 1)
        
        AND    B1.VSL_CD     = POD_SKD.VSL_CD
        AND    B1.SKD_VOY_NO = POD_SKD.SKD_VOY_NO
        AND    B1.SKD_DIR_CD = POD_SKD.SKD_DIR_CD
        AND    B1.POD_CD     = POD_SKD.VPS_PORT_CD 
        AND    POD_SKD.CLPT_IND_SEQ = NVL(B1.POD_CLPT_IND_SEQ, 1)        
        
        AND    B1.VSL_CD = SUBSTR(@[vvd], 1, 4)
        AND    B1.SKD_VOY_NO = SUBSTR(@[vvd], 5)
        AND    NVL(K.BKG_STS_CD, 'N') NOT IN ('X','A')
        AND    B1.POL_CD = SKD.VPS_PORT_CD 
        union all        
        SELECT substr(C.CNTR_TPSZ_CD,1,1) AS TYPE ,
        SKD.YD_CD||'/'||SKD.SKD_DIR_CD||'/'||SKD.CLPT_IND_SEQ POL_CD,
        B1.POL_YD_CD,
        SKD.CLPT_SEQ ,
        SKD.SKD_DIR_CD ,
        POD_SKD.YD_CD||'/'||B1.SKD_DIR_CD||'/'||B1.POD_CLPT_IND_SEQ POD_CD,
        C.CNTR_TPSZ_CD ,
        C.OP_CNTR_QTY AS CNTR_VOL_QTY,
        'XX',
        K.RC_FLG
        FROM   BKG_VVD B1,
        BKG_QUANTITY C,
        BKG_BOOKING K,
        VSK_VSL_PORT_SKD SKD,
        VSK_VSL_PORT_SKD POD_SKD        
        WHERE  B1.BKG_NO = C.BKG_NO
        AND    B1.BKG_NO = K.BKG_NO
        AND    K.BKG_STS_CD = 'F' /* F = CONFIRM인 경우 */
        AND    B1.VSL_CD = SKD.VSL_CD
        AND    B1.SKD_VOY_NO = SKD.SKD_VOY_NO
        AND    B1.SKD_DIR_CD = SKD.SKD_DIR_CD
        AND    SKD.CLPT_IND_SEQ = NVL(B1.POL_CLPT_IND_SEQ, 1)
        AND    B1.VSL_CD     = POD_SKD.VSL_CD
        AND    B1.SKD_VOY_NO = POD_SKD.SKD_VOY_NO
        AND    B1.SKD_DIR_CD = POD_SKD.SKD_DIR_CD
        AND    B1.POD_CD     = POD_SKD.VPS_PORT_CD
        AND    POD_SKD.CLPT_IND_SEQ = NVL(B1.POD_CLPT_IND_SEQ, 1)
        AND    B1.VSL_CD = SUBSTR(@[vvd], 1, 4)
        AND    B1.SKD_VOY_NO = SUBSTR(@[vvd], 5)
        AND    NVL(K.BKG_STS_CD, 'N') NOT IN ('X','A')
        AND    B1.POL_CD = SKD.VPS_PORT_CD
        AND    substr(C.CNTR_TPSZ_CD,1,1)  = 'Q'
        ) S1,
        (
             SELECT  HED.POL_CD, HED.SKD_DIR_CD, S_FORM.TYPE,HED.CLPT_SEQ, S_FORM.FORM_ORD
                   , HED.MIN_VPS_ETD_DT, HED.POL_CD_CNT
             FROM 
                 (/*POL과 POD 조합으로 X축과 Y축구한다.*/  
                  SELECT SKD.YD_CD||'/'||SKD.SKD_DIR_CD||'/'||SKD.CLPT_IND_SEQ POL_CD
                  ,      SKD.SKD_DIR_CD
                  ,      SKD.CLPT_SEQ   
                  ,      MIN(SKD.VPS_ETD_DT) OVER (PARTITION BY  SKD.SKD_DIR_CD) MIN_VPS_ETD_DT
                  , COUNT(SKD.VPS_PORT_CD) OVER (PARTITION BY SKD.VPS_PORT_CD) POL_CD_CNT
                  FROM   VSK_VSL_PORT_SKD SKD
                  WHERE  SKD.VSL_CD       = SUBSTR(@[vvd], 1, 4)
                  AND    SKD.SKD_VOY_NO   = SUBSTR(@[vvd], 5)
                 -- AND    SKD.TURN_PORT_IND_CD NOT IN ('D','F','V')
                --  AND    SKD.TURN_PORT_IND_CD NOT IN ('D','V')
			     -- AND    NVL(SKD.SKD_CNG_STS_CD, 'A') <> 'S'
                   --AND NVL(SKD.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 Add*/
                   AND  ((    NVL(SKD.SKD_CNG_STS_CD, 'A') =  'S'
                          AND  1 = 1
                         )
                      OR 
                        (      NVL(SKD.SKD_CNG_STS_CD, 'A') <>  'S'
                          AND  SKD.TURN_PORT_IND_CD NOT IN ('F','V')
                        ))
                 )HED, 
                 ( SELECT 'D'    TYPE, 1 FORM_ORD FROM DUAL UNION ALL
                   SELECT 'R/F'  TYPE, 2 FORM_ORD FROM DUAL UNION ALL
				   SELECT 'Q'  	 TYPE, 4 FORM_ORD FROM DUAL UNION ALL	
                   SELECT 'AK'   TYPE, 3 FORM_ORD FROM DUAL
                 ) S_FORM 
            ) FORM   
    WHERE 
            FORM.POL_CD       = S1.POL_CD    (+)
     AND    FORM.TYPE         = S1.TYPE      (+)
     AND    FORM.SKD_DIR_CD   = S1.SKD_DIR_CD(+)	 
 
GROUP BY FORM.MIN_VPS_ETD_DT, ROLLUP(  (FORM.SKD_DIR_CD),(FORM.SKD_DIR_CD,FORM.TYPE), (FORM.CLPT_SEQ,FORM.POL_CD,FORM.FORM_ORD) ) 
HAVING GROUPING(FORM.POL_CD )||GROUPING(FORM.TYPE )||GROUPING(FORM.SKD_DIR_CD ) <> '111'
ORDER BY  FORM.MIN_VPS_ETD_DT,  FORM.CLPT_SEQ, 
        DECODE( GROUPING(FORM.POL_CD), 1,  DECODE( GROUPING(FORM.TYPE), 0, DECODE(FORM.TYPE,'D',1,'R/F',2,'AK',3,'Q',4 )),FORM.FORM_ORD)			]]></sql>
			<params>
				<param name="ratehc" type="12" value="" out="N"/>
				<param name="rate45" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="CMMI0906" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
