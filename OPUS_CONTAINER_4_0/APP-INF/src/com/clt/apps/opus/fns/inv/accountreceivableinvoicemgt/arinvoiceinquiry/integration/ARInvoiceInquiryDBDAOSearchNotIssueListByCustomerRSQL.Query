<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ARInvoiceInquiryDBDAOSearchNotIssueListByCustomerRSQL">
			<desc><![CDATA[Customer의  Invoice 미발행내용을 현재일로부터 조회기간 사이에 해당하는 due date데이터를 조회한다.]]></desc>
			<sql><![CDATA[
SELECT TB.AR_OFC_CD,
  DECODE(TB.IO_BND_CD, 'I', 'I/B', 'O', 'O/B', TB.IO_BND_CD) IO_BND_CD,
  TB.TYPE,
  TB.VVD,
  TB.SAIL_ARR_DT,
  TB.POL_CD,
  TB.POD_CD,
  TB.BL_SRC_NO,
  TB.AR_IF_NO,
  TB.BKG_TEU_QTY,
  TB.BKG_FEU_QTY,
  TB.INV_LCL,
  TB.USD_XCH_RT,
  TB.DUE_DT,
  TB.OVER,
  TRIM(TO_CHAR(ST1.CR_AMT,'99999999990.00')) CR_AMT,
  ST1.IB_CR_TERM_DYS,
  ST1.OB_CR_TERM_DYS,
  ST2.DP_PRCS_KNT
FROM (
    SELECT A.AR_OFC_CD,
      A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD,
      A.AR_IF_NO,
      A.POL_CD,
      A.POD_CD,
      A.SAIL_ARR_DT,
      SUM(SAR_GET_CUR_AMT_FNC(A.LOCL_CURR_CD,B.CHG_AMT * B.INV_XCH_RT)) INV_LCL,
      A.USD_XCH_RT,
      A.DUE_DT,
      A.IO_BND_CD,
      A.BL_SRC_NO,
      A.BKG_TEU_QTY,
      A.BKG_FEU_QTY,
      A.REV_TP_CD||A.REV_SRC_CD TYPE,
      A.ACT_CUST_CNT_CD,
      A.ACT_CUST_SEQ,
      A.LOCL_CURR_CD,
      ROUND(TO_DATE(REPLACE(@[as_of_date], '-', ''),'YYYYMMDD') - TO_DATE(A.DUE_DT, 'YYYYMMDD'), 0) OVER
    FROM INV_AR_MN A,
      INV_AR_CHG B
    WHERE A.AR_IF_NO = B.AR_IF_NO
      AND A.ACT_CUST_CNT_CD = @[act_cust_cnt_cd]
      AND A.ACT_CUST_SEQ = @[act_cust_seq]
#if (${ar_ofc_cd} != '')
      AND A.AR_OFC_CD = @[ar_ofc_cd] -- OFFICE
#else 
      AND A.AR_OFC_CD IN ( SELECT OFC_CD -- OFC ALL 선택시 적용..  
                             FROM MDM_ORGANIZATION
                            WHERE AR_HD_QTR_OFC_CD = ( SELECT AR_HD_QTR_OFC_CD
                                                         FROM MDM_ORGANIZATION
                                                        WHERE OFC_CD = ( SELECT AR_OFC_CD
                                                                           FROM MDM_ORGANIZATION
                                                                          WHERE OFC_CD = @[user_ofc_cd]))
                              AND OFC_CD = AR_OFC_CD )
#end
      AND A.INV_ISS_FLG = 'N'
      AND NVL(A.INV_DELT_DIV_CD, 'N') <> 'Y'
    GROUP BY A.AR_OFC_CD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.AR_IF_NO, A.POL_CD, A.POD_CD, A.SAIL_ARR_DT, A.USD_XCH_RT, A.DUE_DT, A.IO_BND_CD, A.BL_SRC_NO, A.BKG_TEU_QTY, A.BKG_FEU_QTY, A.REV_TP_CD, A.REV_SRC_CD, A.ACT_CUST_CNT_CD, A.ACT_CUST_SEQ, A.LOCL_CURR_CD) TB,
  MDM_CR_CUST ST1,
  MDM_CURRENCY ST2
WHERE TB.ACT_CUST_CNT_CD = ST1.CUST_CNT_CD (+)
  AND TB.ACT_CUST_SEQ = ST1.CUST_SEQ (+)
  AND TB.LOCL_CURR_CD = ST2.CURR_CD
#if (${amount_option} == 'P')
  AND TB.INV_LCL > 0
#elseif (${amount_option} == 'M')
  AND TB.INV_LCL < 0
#end
  AND TB.OVER BETWEEN REPLACE(@[from_over_due], ',', '') AND REPLACE(@[to_over_due], ',', '')
ORDER BY TB.AR_OFC_CD,
  TB.IO_BND_CD DESC,
  TB.BL_SRC_NO,
  TB.AR_IF_NO			]]></sql>
			<params>
				<param name="as_of_date" type="12" value="" out="N"/>
				<param name="act_cust_cnt_cd" type="12" value="" out="N"/>
				<param name="act_cust_seq" type="12" value="" out="N"/>
				<param name="ar_ofc_cd" type="12" value="" out="N"/>
				<param name="user_ofc_cd" type="12" value="" out="N"/>
				<param name="from_over_due" type="12" value="" out="N"/>
				<param name="to_over_due" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
