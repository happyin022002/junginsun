<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TerminalDepartureReportDBDAOCgoRhndPerformInputVORSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
SELECT DECODE(C3, 1, 'G.Total', DECODE(C5, 1, 'G.Total', PORT)) AS PORT,
       LANE AS LANE,
       VVD,
       DECODE(C1, 1, 'S.Total', DECODE(C3, 1, 'Total', OPR)) AS OPR,
#foreach($key IN ${restow_reason_list}) 
    #if($velocityCount < $restow_reason_list.size()) 
       RSN_$velocityCount ||'|'||
    #else 
       RSN_$velocityCount AS RESTOW_REASON_LIST,
    #end 
#end
       FL,
       MT,
       TL,
       OWN_RH_UNIT,
       OTH_RH_UNIT,
       OWN_RH_MOVE,
       OTH_RH_MOVE,
       CC_MOVE,
       CDC_MOVE,
       --RH_UNIT_RATIO,
       --RH_MOVE_RATIO 
       DECODE(TL,0,0, NVL(ROUND((OWN_RH_UNIT+OTH_RH_UNIT)/TL, 4), 0) * 100) RH_UNIT_RATIO,
       DECODE(TL,0,0, NVL(ROUND((OWN_RH_MOVE+OTH_RH_MOVE)/TL, 4), 0) *100) RH_MOVE_RATIO
/*
       RSN_CC,
       RSN_CR,
       RSN_IC,
       RSN_ID,
       RSN_IF,
       RSN_IG,
       RSN_IH,
       RSN_IL,
       RSN_IO,
       RSN_IP,
       RSN_IR,
       RSN_IS,
       RSN_IT,
       RSN_IW,
       RSN_IX,
       RSN_XX
*/
  FROM (SELECT A.PORT PORT,
               A.LANE LANE,
               A.VVD VVD,
               A.OPR OPR,
               GROUPING(A.PORT) P,
               GROUPING(A.LANE) L,
               GROUPING(A.VVD) V,
               GROUPING(A.OPR) O,
               CASE WHEN GROUPING(A.PORT)=0 AND GROUPING(A.LANE)=0 AND GROUPING(A.VVD)=0 AND GROUPING(A.OPR)=1 THEN 1
                    ELSE 0
               END C1,
               CASE WHEN GROUPING(A.PORT)=1 AND GROUPING(A.LANE)=1 AND GROUPING(A.VVD)=1 AND GROUPING(A.OPR)=1 THEN 1
                    ELSE 0
               END C3,
               CASE WHEN GROUPING(A.PORT)=0 AND GROUPING(A.LANE)=0 AND GROUPING(A.VVD)=0 AND GROUPING(A.OPR)=0 THEN 1
                    ELSE 0
               END C4,
               CASE WHEN GROUPING(A.PORT)=1 AND GROUPING(A.LANE)=1 AND GROUPING(A.VVD)=1 AND GROUPING(A.OPR)=0 THEN 1
                    ELSE 0
               END C5,
#foreach($key IN ${restow_reason_list}) 
               SUM(NVL(RSN_$velocityCount,0)) RSN_$velocityCount,
#end
               SUM(NVL(A.FL, 0)) FL,
               SUM(NVL(A.MT, 0)) MT,
               SUM(NVL(A.TL, 0)) TL,
               SUM(NVL(A.HBMVS+A.HQMVS, 0)) OWN_RH_UNIT,
               SUM(NVL(A.OBMVS+A.OQMVS, 0)) OTH_RH_UNIT,
               SUM(NVL(A.HBMVS+(A.HQMVS*2), 0)) OWN_RH_MOVE,
               SUM(NVL(A.OBMVS+(A.OQMVS*2), 0)) OTH_RH_MOVE,
               SUM(NVL(A.HBMVS+A.OBMVS, 0)) CC_MOVE,
               SUM(NVL((A.HQMVS+A.OQMVS*2), 0)) CDC_MOVE--,
               --SUM(NVL(ROUND((A.HBMVS+A.HQMVS+A.OBMVS+A.OQMVS)/DECODE(A.TL, 0, 1), 4), 0)) * 100 RH_UNIT_RATIO,
               --SUM(NVL(ROUND(((A.HBMVS+(A.HQMVS*2))+(A.OBMVS+(A.OQMVS*2)))/DECODE(A.TL, 0, 1), 4), 0)) *100 RH_MOVE_RATIO
          FROM (SELECT S.PORT_CD PORT,
                       V.LANE LANE,
                       S.VSL_CD||S.VOY_NO||S.DIR_CD VVD,
                       S.OPR_CD OPR,
#foreach($key IN ${restow_reason_list}) 
               		   0 RSN_$velocityCount,
#end                  
                       SUM(DECODE(S.CNTR_TYPE, 'E', 0, QTY)) FL,
                       SUM(DECODE(S.CNTR_TYPE, 'E', QTY, 0)) MT,
                       SUM(DECODE(S.CNTR_TYPE, 'E', 0, QTY)) + SUM(DECODE(S.CNTR_TYPE, 'E', QTY, 0)) TL,
                       0 HBMVS,
                       0 OBMVS,
                       0 HQMVS,
                       0 OQMVS
                  FROM TDR_SUMMARY S,
                       (SELECT A.VSL_CD VSL,
                               A.SKD_VOY_NO VOY,
                               A.SKD_DIR_CD DIR,
                               A.VPS_PORT_CD LOC,
                               A.CLPT_IND_SEQ CAL,
                               A.SLAN_CD LANE
                          FROM VSK_VSL_PORT_SKD A,
                               VSK_ACT_PORT_SKD B
                         WHERE A.VSL_CD = B.VSL_CD
                           AND A.SKD_VOY_NO = B.SKD_VOY_NO
                           AND A.SKD_DIR_CD = B.SKD_DIR_CD
                           AND A.VPS_PORT_CD = B.VPS_PORT_CD
                           AND A.CLPT_IND_SEQ = B.CLPT_IND_SEQ
#if (${slan_cd} != '')
                           AND A.SLAN_CD LIKE @[slan_cd]||'%'                                          --:lane_cd
#end                           
                           AND B.PORT_SKD_STS_CD = 'D'
                           AND B.ACT_DEP_DT BETWEEN TO_DATE(REPLACE(@[from_date], '-', ''), 'YYYYMMDD') --:fm_dt
                                                AND TO_DATE(REPLACE(@[to_date], '-', ''), 'YYYYMMDD') + 0.99999 --:to_dt
#if (${yd_cd} == 'All')
                           AND A.YD_CD LIKE @[loc_cd]||'%' 
#else
                           AND A.YD_CD LIKE @[loc_cd]||@[yd_cd]||'%' 
#end
                          ) V
                 WHERE S.VSL_CD = V.VSL
                   AND S.VOY_NO = V.VOY
                   AND S.DIR_CD = V.DIR
                   AND S.PORT_CD = V.LOC
                   AND S.CALL_IND = V.CAL
                 GROUP BY S.PORT_CD,
                       V.LANE,
                       S.VSL_CD||S.VOY_NO||S.DIR_CD,
                       S.OPR_CD
                 UNION
                SELECT C.PORT_CD PORT,
                       V.LANE LANE,
                       C.VSL_CD||C.VOY_NO||C.DIR_CD VVD,
                       C.OPR_CD OPR,
#foreach($key IN ${restow_reason_list}) 
                       0 RSN_$velocityCount,
#end
                       0 FL,
                       0 MT,
                       0 TL,
                       SUM(DECODE(C.ACCOUNT, COM_ConstantMgr_PKG.COM_getCompanyCode_FNC(), DECODE(C.SHIFT_TYPE, 'S', 1, 0), 0)) HBMVS,
                       SUM(DECODE(C.ACCOUNT, COM_ConstantMgr_PKG.COM_getCompanyCode_FNC(), 0 , DECODE(C.SHIFT_TYPE, 'S', 1, 0))) OBMVS,
                       SUM(DECODE(C.ACCOUNT, COM_ConstantMgr_PKG.COM_getCompanyCode_FNC(), DECODE(C.SHIFT_TYPE, 'D', 1, 0), 0)) HQMVS,
                       SUM(DECODE(C.ACCOUNT, COM_ConstantMgr_PKG.COM_getCompanyCode_FNC(), 0 , DECODE(C.SHIFT_TYPE, 'D', 1, 0))) OQMVS
                  FROM TDR_CNTR_DETAIL C,
                       (SELECT A.VSL_CD VSL,
                               A.SKD_VOY_NO VOY,
                               A.SKD_DIR_CD DIR,
                               A.VPS_PORT_CD LOC,
                               A.CLPT_IND_SEQ CAL,
                               A.SLAN_CD LANE
                          FROM VSK_VSL_PORT_SKD A,
                               VSK_ACT_PORT_SKD B
                         WHERE A.VSL_CD = B.VSL_CD
                           AND A.SKD_VOY_NO = B.SKD_VOY_NO
                           AND A.SKD_DIR_CD = B.SKD_DIR_CD
                           AND A.VPS_PORT_CD = B.VPS_PORT_CD
                           AND A.CLPT_IND_SEQ = B.CLPT_IND_SEQ
#if (${slan_cd} != '')
                           AND A.SLAN_CD LIKE @[slan_cd]||'%'                                          --:lane_cd
#end                             
                           AND B.PORT_SKD_STS_CD = 'D'
                           AND B.ACT_DEP_DT BETWEEN TO_DATE(REPLACE(@[from_date], '-', ''), 'YYYYMMDD') --:fm_dt
                                                AND TO_DATE(REPLACE(@[to_date], '-', ''), 'YYYYMMDD') + 0.99999 --:to_dt
#if (${yd_cd} == 'All')
                           AND A.YD_CD LIKE @[loc_cd]||'%' 
#else
                           AND A.YD_CD LIKE @[loc_cd]||@[yd_cd]||'%' 
#end
                           ) V
                 WHERE C.VSL_CD = V.VSL
                   AND C.VOY_NO = V.VOY
                   AND C.DIR_CD = V.DIR
                   AND C.PORT_CD = V.LOC
                   AND C.CALL_IND = V.CAL
                   AND TRIM(C.PRECELL) IS NOT NULL
                 GROUP BY C.PORT_CD,
                       V.LANE,
                       C.VSL_CD||C.VOY_NO||C.DIR_CD,
                       C.OPR_CD
                 UNION
                SELECT C.PORT_CD PORT,
                       V.LANE LANE,
                       C.VSL_CD||C.VOY_NO||C.DIR_CD VVD,
                       C.OPR_CD OPR,
#foreach($key IN ${restow_reason_list}) 
					   SUM(DECODE(C.SHIFT_TYPE||C.SHIFT_RSN||C.PARTY ,'$key',1,0)) RSN_$velocityCount,
#end                       
                       0 FL,
                       0 MT,
                       0 TL,
                       0 HBMVS,
                       0 OBMVS,
                       0 HQMVS,
                       0 OQMVS
                  FROM TDR_CNTR_DETAIL C,
                       (SELECT A.VSL_CD VSL,
                               A.SKD_VOY_NO VOY,
                               A.SKD_DIR_CD DIR,
                               A.VPS_PORT_CD LOC,
                               A.CLPT_IND_SEQ CAL,
                               A.SLAN_CD LANE
                          FROM VSK_VSL_PORT_SKD A,
                               VSK_ACT_PORT_SKD B
                         WHERE A.VSL_CD = B.VSL_CD
                           AND A.SKD_VOY_NO = B.SKD_VOY_NO
                           AND A.SKD_DIR_CD = B.SKD_DIR_CD
                           AND A.VPS_PORT_CD = B.VPS_PORT_CD
                           AND A.CLPT_IND_SEQ = B.CLPT_IND_SEQ
                           AND B.PORT_SKD_STS_CD = 'D'
                           AND B.ACT_DEP_DT BETWEEN TO_DATE(REPLACE(@[from_date], '-', ''), 'YYYYMMDD') --:fm_dt
                                                AND TO_DATE(REPLACE(@[to_date], '-', ''), 'YYYYMMDD') + 0.99999 --:to_dt
#if (${yd_cd} == 'All')
                           AND A.YD_CD LIKE @[loc_cd]||'%' 
#else
                           AND A.YD_CD LIKE @[loc_cd]||@[yd_cd]||'%' 
#end 
                           ) V
                 WHERE C.VSL_CD = V.VSL
                   AND C.VOY_NO = V.VOY
                   AND C.DIR_CD = V.DIR
                   AND C.PORT_CD = V.LOC
                   AND C.CALL_IND = V.CAL
                   AND TRIM(C.PRECELL) IS NOT NULL
                 GROUP BY C.PORT_CD,
                       V.LANE,
                       C.VSL_CD||C.VOY_NO||C.DIR_CD,
                       C.OPR_CD ) A ,
               (SELECT DISTINCT LOC_CD
                  FROM (SELECT ML.LOC_CD,
                               NVL(ML.VSKD_PORT_RHQ_CD, MO.AR_HD_QTR_OFC_CD) AS POR_RHQ
                          FROM MDM_LOCATION ML ,
                               MDM_ORGANIZATION MO
                         WHERE 1=1
                           AND ML.LOC_CD = MO.LOC_CD
                           AND MO.AR_HD_QTR_OFC_CD <> 'SINHO'
                           AND ML.CALL_PORT_FLG = 'Y'
                           AND ML.DELT_FLG = 'N' )
                 WHERE POR_RHQ = DECODE(SUBSTR(@[rhq], 1, 3), 'ALL', POR_RHQ, @[rhq] ) ) R, --:rhq_cd
               MDM_VSL_SVC_LANE T
         WHERE 1=1
           AND A.PORT = R.LOC_CD
           AND A.LANE = T.VSL_SLAN_CD(+)
           AND T.DELT_FLG = 'N'
         GROUP BY CUBE( A.PORT, A.LANE, A.VVD, A.OPR) )
 WHERE (C1 = 1 OR C3 = 1 OR C4 = 1 OR C5 = 1)
 ORDER BY DECODE(C3, 1, 'ZZZZZ', DECODE(C5, 1, 'YYYYY', PORT)),
       LANE,
       VVD,
       DECODE(C1, 1, 'ZZZZ', DECODE(C3, 1, 'YYYY', OPR))			]]></sql>
			<params>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="from_date" type="12" value="" out="N"/>
				<param name="to_date" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="rhq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
