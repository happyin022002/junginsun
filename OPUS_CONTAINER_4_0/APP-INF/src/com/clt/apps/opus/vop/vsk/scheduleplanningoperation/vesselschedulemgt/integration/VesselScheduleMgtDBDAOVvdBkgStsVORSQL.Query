<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VesselScheduleMgtDBDAOVvdBkgStsVORSQL">
			<desc><![CDATA[신규로 생성한 VVD에 대해서 이미 등록되여 있고, Booking 시스템 및 Senator 시스템에 사용 중인지 확인한다.]]></desc>
			<sql><![CDATA[
/*
SimulationVvdCheckVO.java
SELECT 
'' VSL_CD
,'' SKD_VOY_NO
,'' START_DATE
,'' END_DATE
,'' VSL_CNT
,'' VOY_NO_TYPE
,'' SKD_DIR_CD_1
,'' SKD_DIR_CD_2
,'' DURATION
FROM DUAL
*/

SELECT VSL_SLAN_CD,
       VSL_CD,
       SKD_VOY_NO,
       SKD_DIR_CD,
       CASE WHEN BKG_STATUS IS NULL AND ACT_SKD_KNT > 0 THEN 'ACT SKED' ELSE BKG_STATUS END BKG_STATUS,
       VIR_BKG_STATUS,
       TO_CHAR(VPS_ETA_DT, 'YYYYMMDD') START_ETA,
       CASE WHEN ROUND(VPS_ETA_DT - SYSDATE) < 3 AND BKG_STATUS = 'Booking' THEN 
            /* VPS_ETA_DT가 시스템시간 3일 이내이고, booking이 걸려있는 VVD면 삭제불가 */
            'NO' 
            WHEN RUSE_PROHI_FLG = 'Y' THEN
            /* 재무VVD에 등록된 VVD면 삭제불가 */
            'NO'
            ELSE 'YES' 
        END AS UPDATE_FLAG
       ,TURN_SKD_VOY_NO
       ,TURN_SKD_DIR_CD
       ,RUSE_PROHI_FLG
       , CASE WHEN ACT_SKD_KNT = 0 THEN 'N'
              ELSE 'Y'
         END  ACT_SKD_INPUT_FLG
  FROM (
	    SELECT
	           T1.VSL_SLAN_CD,
	T1.VSL_CD,
	T1.SKD_VOY_NO,
	T1.SKD_DIR_CD, 
	(
		SELECT 'Booking'
		FROM BKG_VVD B, BKG_BOOKING A
		WHERE B.VSL_CD = T1.VSL_CD
		AND B.SKD_VOY_NO = T1.SKD_VOY_NO
		AND B.SKD_DIR_CD = T1.SKD_DIR_CD
		AND A.BKG_NO = B.BKG_NO
		--AND A.BKG_NO_SPLIT = B.BKG_NO_SPLIT
		AND A.BKG_STS_CD != 'X'
		AND ROWNUM = 1
	) BKG_STATUS, 
	DECODE(
	    (SELECT
    	--CASE WHEN VPS_ETA_DT > TO_DATE('20090709', 'YYYYMMDD') + 3 THEN '1'
	    CASE WHEN VPS_ETA_DT > SYSDATE + 3 THEN '1'
    	ELSE '2'
	    END
	    FROM VSK_VSL_PORT_SKD A, BKG_VVD B, BKG_BOOKING C
	    WHERE T1.VSL_CD = A.VSL_CD
	    AND T1.SKD_VOY_NO = A.SKD_VOY_NO
	    AND T1.SKD_DIR_CD = A.SKD_DIR_CD
	    AND B.VSL_CD = A.VSL_CD
	    AND B.SKD_VOY_NO = A.TURN_SKD_VOY_NO
	    AND B.SKD_DIR_CD = A.TURN_SKD_DIR_CD
	    AND B.POD_CD = A.VPS_PORT_CD
	    AND A.TURN_PORT_FLG = 'Y'
	    AND C.BKG_NO = B.BKG_NO
	    AND C.BKG_STS_CD != 'X'
	    AND ROWNUM=1), NULL, T1.SKD_STS_CD, '1', 'BKG', '2', 'BKGNOD'
	) VIR_BKG_STATUS,
	VPS_ETA_DT, 
	ROUND(VPS_ETA_DT - SYSDATE)
	,T2.TURN_SKD_VOY_NO
	,T2.TURN_SKD_DIR_CD
	,T1.RUSE_PROHI_FLG
    ,(SELECT COUNT(1)
   		FROM VSK_ACT_PORT_SKD AK
   	   WHERE 1 = 1
   		 AND ( AK.VSL_CD         = T1.VSL_CD
               AND AK.SKD_VOY_NO = T1.SKD_VOY_NO
               AND AK.SKD_DIR_CD = T1.SKD_DIR_CD
             )
           	 OR
           	 ( AK.VSL_CD          = T2.VSL_CD
               AND  AK.SKD_VOY_NO = T2.TURN_SKD_VOY_NO
               AND  AK.SKD_DIR_CD = T2.TURN_SKD_DIR_CD
           	 )
    	 ) ACT_SKD_KNT
    FROM VSK_VSL_SKD T1, VSK_VSL_PORT_SKD T2, MDM_VSL_SVC_LANE_DIR T3
    WHERE 1 = 1
    AND T1.VSL_CD = T2.VSL_CD(+)
    AND T1.SKD_VOY_NO = T2.SKD_VOY_NO(+)
    AND T1.SKD_DIR_CD = T2.SKD_DIR_CD(+)
    AND T1.VSL_SLAN_CD = T3.VSL_SLAN_CD
    AND T1.SKD_DIR_CD = T3.VSL_SLAN_DIR_CD
    AND T2.CLPT_SEQ(+) = 1
	AND (T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD) IN (
#foreach(${param} in ${tgtVvd})
	#if($velocityCount < $tgtVvd.size())
		('${param.vslCd}', '${param.skdVoyNo}', '${param.skdDirCd}'),
	#else
		('${param.vslCd}', '${param.skdVoyNo}', '${param.skdDirCd}')
	#end
#end
	)
    ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, VSL_SLAN_DIR_SEQ
)			]]></sql>
			<params>
			</params>
		</query>
	</querys>
</sqls>
