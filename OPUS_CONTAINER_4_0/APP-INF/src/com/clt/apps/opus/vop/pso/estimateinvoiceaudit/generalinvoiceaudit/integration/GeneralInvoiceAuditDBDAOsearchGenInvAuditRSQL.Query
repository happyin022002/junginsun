<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralInvoiceAuditDBDAOsearchGenInvAuditRSQL">
			<desc><![CDATA[searchGenInvAudit
[2015.07.21]Virtual Add Calling 처리. VSK_VSL_PORT_SKD.NVL(VT_ADD_CALL_FLG, 'N') = 'N']]></desc>
			<sql><![CDATA[
SELECT A.*
     , NVL(A.TMP_CLPT_IND_SEQS, A.CLPT_IND_SEQ) AS CLPT_IND_SEQS
  FROM (
        SELECT A.*
             , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD AS VVD
             , (SELECT LISTAGG(VP.CLPT_IND_SEQ,'|') WITHIN GROUP (ORDER BY ROWNUM) 
                  FROM VSK_VSL_PORT_SKD VP
                 WHERE 1=1
                   AND VP.VSL_CD        = A.VSL_CD
                   AND VP.SKD_VOY_NO    = A.SKD_VOY_NO
                   AND VP.SKD_DIR_CD    = A.SKD_DIR_CD
                   AND VP.YD_CD         = A.YD_CD
                   AND 'S'              <> NVL(VP.SKD_CNG_STS_CD, ' ')
                   AND 'N'              = NVL(VP.VT_ADD_CALL_FLG, 'N')
                   AND VP.TURN_PORT_IND_CD IN ('Y','N')
                ) TMP_CLPT_IND_SEQS /* 2016.04.26 Double Calling Add*/
              , TO_CHAR(A.TMP_CLPT_IND_SEQ) AS CLPT_IND_SEQ /* 2016.06.28 VVD는 버츄얼일때  실제 사용되는 VVD로 변환된 데이타 , 저장된  CLPT_IND_SEQ는 실제 사용되는 VVD의 CLPTIND_SEQ이므로 DB 데이타를 그대로 넘긴다. */
          FROM (
                SELECT A.ISS_CTY_CD
                     , A.SO_SEQ
                     , A.COST_OFC_CD
                     , A.SO_DTL_SEQ
                     , A.PSO_CHG_STS_CD
                     , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD AS CHK_VVD
                     , A.VSL_CD
                     /*Old Data 처리 : Outbound Port VVD [IN] 데이타일때 입력된 데이타 그대로 나오게 처리. Inbound Port VVD [IN] 일때는 Turn_skd_voy_no 처리.*/
                     , DECODE(A.VT_VVD_FLG,'Y',SUBSTR(A.TURN_VVD_CD,5,4), A.SKD_VOY_NO) AS SKD_VOY_NO
                     /*Old Data 처리 : Outbound Port VVD [IN] 데이타일때 입력된 데이타 그대로 나오게 처리. Inbound Port VVD [IN] 일때는 TURN_SKD_DIR_CD 처리.*/
                     , DECODE(A.VT_VVD_FLG,'Y',SUBSTR(A.TURN_VVD_CD,9,1), A.SKD_DIR_CD) AS SKD_DIR_CD
                     , A.COST_CD
                     , A.ACCT_CD
                     , A.IO
                     , A.LGS_COST_FULL_NM
                     , A.TARIFF_COST
                     , A.ADJCOST
                     , A.AMOUNT
                     , A.FOML1
                     , A.FOML2
                     , A.COND1
                     , A.COND2
                     , A.REMARK
                     , A.VNDR_SEQ
                     , A.YD_CD
                     , A.YD_CHG_NO
                     , A.YD_CHG_VER_SEQ
                     , A.ATD
                     , A.DFT_IO_DATA
                     , A.TTL_LOCL_AMT
                     , A.INV_LOCL_AMT
                     , A.LOCL_TAX_AMT
                     , A.LOCL_WHLD_TAX_AMT
                     , A.CURR_CD
                     , A.EFF_DT
                     , A.NIGHT
                     , A.HOLIDAY
                     , A.BOAT
                     , A.TUGROPE
                     , A.BUOY
                     , A.SANITATION
                     , A.BARGE
                     , A.INSPECTION
                     , A.ARRTP
                     , A.DEPTP
                     , A.ARRNT
                     , A.DEPNT
                     , A.ARRTUH
                     , A.DEPTUH
                     , A.ARRLH
                     , A.DEPLH
                     , A.USDHRS
                     , A.NEWSERVICE
                     , A.COPILOT
                     , A.SDR
                     , A.TIER
                     , A.LIMIT_TIME
                     , A.OTHERS
                     , A.OTHER_VALUE
                     , A.PSO_TRNS_SLP_CTNT
                     , A.ISS_DT
                     , A.ACPT_DT
                     , A.VT_VVD_FLG
                     , A.CLPT_IND_SEQ AS TMP_CLPT_IND_SEQ
                  FROM (
                        SELECT T1.ISS_CTY_CD
                             , T1.SO_SEQ
                             , MAX(T1.COST_OFC_CD) COST_OFC_CD
                             , MIN(T2.SO_DTL_SEQ) SO_DTL_SEQ
                             , MAX(T1.PSO_CHG_STS_CD) PSO_CHG_STS_CD
                             , MAX(T2.VSL_CD) VSL_CD
                             , MAX(DECODE(SO_DTL_SEQ, ORG_SO_DTL_SEQ, T2.SKD_VOY_NO,'')) SKD_VOY_NO
                             , MAX(DECODE(SO_DTL_SEQ, ORG_SO_DTL_SEQ, T2.SKD_DIR_CD,'')) SKD_DIR_CD
                             , MAX(T2.VT_VVD_FLG) VT_VVD_FLG
                             , MAX(T2.TURN_VVD_CD) TURN_VVD_CD
                             , MAX(T2.LGS_COST_CD) COST_CD
                             , MAX( (SELECT MAX(X.ACCT_CD)
                                       FROM TES_LGS_COST X
                                      WHERE X.LGS_COST_CD = T2.LGS_COST_CD )) ACCT_CD
                             , MAX(DECODE(DP_IO_BND_CD, 'I', 'IN', 'O', 'OUT', 'INOUT')) IO
                             , MAX( (SELECT MAX(X.LGS_COST_FULL_NM)
                                       FROM TES_LGS_COST X
                                      WHERE X.LGS_COST_CD = T2.LGS_COST_CD )) LGS_COST_FULL_NM
                             , SUM(T2.CALC_AMT) TARIFF_COST
                             , SUM(DECODE(T2.CALC_AMT ,NULL,DECODE(T2.ADJ_AMT,NULL,T2.LOCL_AMT,T2.ADJ_AMT), T2.ADJ_AMT) ) ADJCOST
                             , SUM(T2.LOCL_AMT) AMOUNT
                             , MAX(T2.FOML_DESC) FOML1
                             , MAX(T2.XPR_DESC) FOML2
                             , MAX(T2.XPR_DESC) COND1
                             , MAX(T2.FOML_DESC) COND2
                             , MAX(T2.DIFF_RMK) REMARK
                             , MAX(T1.VNDR_SEQ) VNDR_SEQ
                             , MAX(T1.YD_CD) YD_CD
                             , MAX(T2.YD_CHG_NO) YD_CHG_NO
                             , MAX(T2.YD_CHG_VER_SEQ) YD_CHG_VER_SEQ
                             , MAX( (SELECT TO_CHAR(MIN(X.VPS_ETD_DT), 'YYYY-MM-DD HH24:MI')
                                       FROM VSK_VSL_PORT_SKD X
                                      WHERE X.VSL_CD        = T2.VSL_CD
                                        AND X.SKD_VOY_NO    = T2.SKD_VOY_NO
                                        AND X.SKD_DIR_CD    = T2.SKD_DIR_CD
                                        AND X.YD_CD         = T1.YD_CD
                                        AND X.CLPT_IND_SEQ  = T2.CLPT_IND_SEQ
                                        AND NVL(X.SKD_CNG_STS_CD, ' ') != 'S'
                                        AND NVL(X.VT_ADD_CALL_FLG, 'N') = 'N' /*2015.07.21 Add*/ )) ATD
                             , '' AS DFT_IO_DATA
                             , MAX(T1.TTL_LOCL_AMT) TTL_LOCL_AMT
                             , MAX(T1.INV_LOCL_AMT) INV_LOCL_AMT
                             , --INVOICE LOCAL AMOUNT
                               MAX(T1.LOCL_TAX_AMT) LOCL_TAX_AMT
                             , MAX(T1.LOCL_WHLD_TAX_AMT) LOCL_WHLD_TAX_AMT
                             , MAX(T1.CURR_CD) CURR_CD
                             , MAX(TO_CHAR(T1.EFF_DT, 'YYYY-MM-DD')) EFF_DT
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o86') NIGHT
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o75') HOLIDAY
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o17') BOAT
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o110') TUGROPE
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o57') BUOY
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o97') SANITATION
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o52') BARGE
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o78') INSPECTION
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o8') ARRTP
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o9') DEPTP
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o6') ARRNT
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o7') DEPNT
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o10') ARRTUH
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o11') DEPTUH
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o50') ARRLH
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o60') DEPLH
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o111') USDHRS
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o119') NEWSERVICE
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o125') COPILOT
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o114') SDR
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o115') TIER
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o116') LIMIT_TIME
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o170') OTHERS
                             , EXTRACTVALUE(XMLTYPE(NVL(MAX(T2.INV_COND_DESC),'<o></o>')), '//o171') OTHER_VALUE
                             , MAX(T1.PSO_TRNS_SLP_CTNT) PSO_TRNS_SLP_CTNT
                             , TO_CHAR(MAX(T1.ISS_DT), 'YYYYMMDD') ISS_DT
                             , TO_CHAR(MAX(T1.ACPT_DT), 'YYYYMMDD') ACPT_DT
                             , MAX(T2.VSL_CD) || MAX(DECODE(SO_DTL_SEQ, ORG_SO_DTL_SEQ, T2.SKD_VOY_NO,'')) || MAX(DECODE(SO_DTL_SEQ, ORG_SO_DTL_SEQ, T2.SKD_DIR_CD,'')) VVD
                             --, MAX(T2.CLPT_IND_SEQ) AS CLPT_IND_SEQ /* 2016.04.26 Double Calling Add*/
                             , MIN(DECODE(SO_DTL_SEQ, ORG_SO_DTL_SEQ, T2.CLPT_IND_SEQ, NULL)) AS CLPT_IND_SEQ /*  2016.11.30 MAX to MIN Modify Double Calling Add*/
                          FROM PSO_CHARGE T1
                             , PSO_CHG_DTL T2
                         WHERE T1.ISS_CTY_CD    = T2.ISS_CTY_CD
                           AND T1.SO_SEQ        = T2.SO_SEQ
                           AND T1.VNDR_SEQ      = @[vndr_seq]
                           AND T1.INV_NO        = @[inv_no]
                         GROUP BY T1.ISS_CTY_CD, T1.SO_SEQ, T2.ORG_SO_DTL_SEQ
                    ) A
                ) A
        ) A			]]></sql>
			<params>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="inv_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
