<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TerminalDepartureReportDBDAODischVolSGTdrSummaryVORSQL">
			<desc><![CDATA[DESC Enter..]]></desc>
			<sql><![CDATA[
SELECT	OPR_CD
	,	POD
	,	DECODE(DG_20_QTY,0,NULL,DG_20_QTY)		AS DG_20_QTY 
	,	DECODE(DG_40_QTY,0,NULL,DG_40_QTY)		AS DG_40_QTY 
	,	DECODE(DG_20_WGT,0,NULL,DG_20_WGT)		AS DG_20_WGT 
	,	DECODE(DG_40_WGT,0,NULL,DG_40_WGT)		AS DG_40_WGT           
	,	DECODE(RF_20_QTY,0,NULL,RF_20_QTY)		AS RF_20_QTY 
	,	DECODE(RF_40_QTY,0,NULL,RF_40_QTY)		AS RF_40_QTY 
	,	DECODE(RF_20_WGT,0,NULL,RF_20_WGT)		AS RF_20_WGT 
	,	DECODE(RF_40_WGT,0,NULL,RF_40_WGT)		AS RF_40_WGT 
	,	DECODE(AK_20_QTY,0,NULL,AK_20_QTY)		AS AK_20_QTY	
	,	DECODE(AK_40_QTY,0,NULL,AK_40_QTY)		AS AK_40_QTY	
	,	DECODE(AK_20_WGT,0,NULL,AK_20_WGT)		AS AK_20_WGT	
	,	DECODE(AK_40_WGT,0,NULL,AK_40_WGT)		AS AK_40_WGT	
	  	
FROM	(
		--=================================================================================================================================================
		SELECT	OPR_CD
			,	POD
			
		
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(CNTR_TYPE, 'D', DECODE(CNTR_SIZE, '2', DECODE(QTY, 0, NULL, QTY), NULL), NULL), NULL)) AS DG_20_QTY,
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(CNTR_TYPE, 'D', DECODE(CNTR_SIZE, '4', DECODE(QTY, 0, NULL, QTY), NULL), NULL), NULL)) AS DG_40_QTY,
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(CNTR_TYPE, 'D', DECODE(CNTR_SIZE, '2', DECODE(WEIGHT, 0, NULL, WEIGHT), NULL), NULL), NULL)) AS DG_20_WGT,
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(CNTR_TYPE, 'D', DECODE(CNTR_SIZE, '4', DECODE(WEIGHT, 0, NULL, WEIGHT), NULL), NULL), NULL)) AS DG_40_WGT,
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(CNTR_TYPE, 'R', DECODE(CNTR_SIZE, '2', DECODE(QTY, 0, NULL, QTY), NULL), NULL), NULL)) AS RF_20_QTY,
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(CNTR_TYPE, 'R', DECODE(CNTR_SIZE, '4', DECODE(QTY, 0, NULL, QTY), NULL), NULL), NULL)) AS RF_40_QTY,
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(CNTR_TYPE, 'R', DECODE(CNTR_SIZE, '2', DECODE(WEIGHT, 0, NULL, WEIGHT), NULL), NULL), NULL)) AS RF_20_WGT,
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(CNTR_TYPE, 'R', DECODE(CNTR_SIZE, '4', DECODE(WEIGHT, 0, NULL, WEIGHT), NULL), NULL), NULL)) AS RF_40_WGT,
		
			,	SUM(CASE WHEN S.CNTR_TYPE = 'D' AND S.CNTR_SIZE IN 		('1','2','3') THEN S.QTY 		ELSE 0 END) 	AS DG_20_QTY
			,	SUM(CASE WHEN S.CNTR_TYPE = 'D' AND S.CNTR_SIZE NOT IN 	('1','2','3') THEN S.QTY 		ELSE 0 END) 	AS DG_40_QTY
			,	SUM(CASE WHEN S.CNTR_TYPE = 'D' AND S.CNTR_SIZE IN 		('1','2','3') THEN S.WEIGHT 	ELSE 0 END) 	AS DG_20_WGT
			,	SUM(CASE WHEN S.CNTR_TYPE = 'D' AND S.CNTR_SIZE NOT IN	('1','2','3') THEN S.WEIGHT 	ELSE 0 END) 	AS DG_40_WGT
		
			,	SUM(CASE WHEN S.CNTR_TYPE = 'R' AND S.CNTR_SIZE IN 		('1','2','3') THEN S.QTY 		ELSE 0 END) 	AS RF_20_QTY
			,	SUM(CASE WHEN S.CNTR_TYPE = 'R' AND S.CNTR_SIZE NOT IN 	('1','2','3') THEN S.QTY 		ELSE 0 END) 	AS RF_40_QTY 
			,	SUM(CASE WHEN S.CNTR_TYPE = 'R' AND S.CNTR_SIZE IN 		('1','2','3') THEN S.WEIGHT 	ELSE 0 END) 	AS RF_20_WGT
			,	SUM(CASE WHEN S.CNTR_TYPE = 'R' AND S.CNTR_SIZE NOT IN	('1','2','3') THEN S.WEIGHT 	ELSE 0 END) 	AS RF_40_WGT 
		
		#if (${sc_status2} != 'ST')
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(S.CNTR_TYPE, 'A', DECODE(S.CNTR_SIZE, '2', DECODE(S.QTY, 0, NULL, S.QTY), NULL), NULL), NULL)) AS AK_20_QTY,
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(S.CNTR_TYPE, 'A', DECODE(S.CNTR_SIZE, '4', DECODE(S.QTY, 0, NULL, S.QTY), NULL), NULL), NULL)) AS AK_40_QTY,
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(S.CNTR_TYPE, 'A', DECODE(S.CNTR_SIZE, '2', DECODE(S.WEIGHT, 0, NULL, S.WEIGHT), NULL), NULL), NULL)) AS AK_20_WGT,
		       	--SUM(DECODE(STATUS,[sc_status1], DECODE(S.CNTR_TYPE, 'A', DECODE(S.CNTR_SIZE, '4', DECODE(S.WEIGHT, 0, NULL, S.WEIGHT), NULL), NULL), NULL)) AS AK_40_WGT
		
			,	SUM(CASE WHEN S.CNTR_TYPE = 'A' AND S.CNTR_SIZE IN 		('1','2','3') THEN S.QTY 		ELSE 0 END) 	AS AK_20_QTY
			,	SUM(CASE WHEN S.CNTR_TYPE = 'A' AND S.CNTR_SIZE NOT IN 	('1','2','3') THEN S.QTY 		ELSE 0 END) 	AS AK_40_QTY
			,	SUM(CASE WHEN S.CNTR_TYPE = 'A' AND S.CNTR_SIZE IN 		('1','2','3') THEN S.WEIGHT 	ELSE 0 END) 	AS AK_20_WGT
			,	SUM(CASE WHEN S.CNTR_TYPE = 'A' AND S.CNTR_SIZE NOT IN	('1','2','3') THEN S.WEIGHT 	ELSE 0 END) 	AS AK_40_WGT
		
		#else
		       	--SUM(DECODE(STATUS,[sc_status2], DECODE(S.CNTR_TYPE, 'A', DECODE(S.CNTR_SIZE, '2', DECODE(S.QTY, 0, NULL, S.QTY), NULL), NULL), NULL)) AS AK_20_QTY,
		       	--SUM(DECODE(STATUS,[sc_status2], DECODE(S.CNTR_TYPE, 'A', DECODE(S.CNTR_SIZE, '4', DECODE(S.QTY, 0, NULL, S.QTY), NULL), NULL), NULL)) AS AK_40_QTY,
		       	--SUM(DECODE(STATUS,[sc_status2], DECODE(S.CNTR_TYPE, 'A', DECODE(S.CNTR_SIZE, '2', DECODE(S.WEIGHT, 0, NULL, S.WEIGHT), NULL), NULL), NULL)) AS AK_20_WGT,
		       	--SUM(DECODE(STATUS,[sc_status2], DECODE(S.CNTR_TYPE, 'A', DECODE(S.CNTR_SIZE, '4', DECODE(S.WEIGHT, 0, NULL, S.WEIGHT), NULL), NULL), NULL)) AS AK_40_WGT
		
			,	SUM(CASE WHEN S.CNTR_TYPE = 'A' AND S.CNTR_SIZE IN 		('1','2','3') THEN S.QTY 		ELSE 0 END) 	AS AK_20_QTY
			,	SUM(CASE WHEN S.CNTR_TYPE = 'A' AND S.CNTR_SIZE NOT IN 	('1','2','3') THEN S.QTY 		ELSE 0 END) 	AS AK_40_QTY
			,	SUM(CASE WHEN S.CNTR_TYPE = 'A' AND S.CNTR_SIZE IN 		('1','2','3') THEN S.WEIGHT 	ELSE 0 END) 	AS AK_20_WGT
			,	SUM(CASE WHEN S.CNTR_TYPE = 'A' AND S.CNTR_SIZE NOT IN	('1','2','3') THEN S.WEIGHT 	ELSE 0 END) 	AS AK_40_WGT
		#end
		
		
		FROM	VSK_VSL_PORT_SKD 	V
			, 	TDR_HEADER 			H
			, 	TDR_SUMMARY 		S 
		WHERE  	V.VSL_CD  			= @[vsl_cd] 
		AND    	V.SKD_VOY_NO  		= @[voy_no] 
		AND    	V.SKD_DIR_CD  		= @[dir_cd] 
		AND    	V.YD_CD 			= @[yd_cd]
		AND     V.CLPT_IND_SEQ   	= @[clpt_ind_seq]
		
		--if ({sc_status2} != 'ST')
		--AND     S.STATUS		= [sc_status1] 
		--else
		AND     S.STATUS			IN (@[sc_status1], @[sc_status2])
		--end
		
		AND     S.CNTR_TYPE 		IN ('D', 'R', 'A') 
		AND    	V.VSL_CD       		= H.VSL_CD 
		AND    	V.SKD_VOY_NO   		= H.VOY_NO 
		AND    	V.SKD_DIR_CD   		= H.DIR_CD 
		AND    	V.VPS_PORT_CD  		= H.PORT_CD 
		AND    	V.CLPT_IND_SEQ 		= H.CALL_IND 
		AND    	H.VSL_CD       		= S.VSL_CD 
		AND    	H.VOY_NO       		= S.VOY_NO 
		AND    	H.DIR_CD       		= S.DIR_CD 
		AND    	H.PORT_CD      		= S.PORT_CD 
		AND    	H.CALL_IND     		= S.CALL_IND 
		GROUP BY OPR_CD, POD
		ORDER BY OPR_CD, POD
		--=================================================================================================================================================
		)
					]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="voy_no" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="clpt_ind_seq" type="12" value="" out="N"/>
				<param name="sc_status1" type="12" value="" out="N"/>
				<param name="sc_status2" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
