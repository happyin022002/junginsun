<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BudgetPortChargeMgtBCDBDAOsearchExpenseDetailRSQL">
			<desc><![CDATA[searchExpenseDetail 
[2015.03.13]VNDR_SEQ (+) > VNDR_SEQ 로 변경, PENDULUM_YN 여부로 IN/OUT 추가
[2016.04.18]ACCL_FLG=Y Add]]></desc>
			<sql><![CDATA[
WITH V_PARAM AS (
        SELECT @[vsl_cd]                        AS VSL_CD
             , @[skd_voy_no]                    AS SKD_VOY_NO
             , @[skd_dir_cd]                    AS SKD_DIR_CD
             , @[yd_cd]                         AS YD_CD
             , @[clpt_ind_seq]                  AS CLPT_IND_SEQ
             , REPLACE (@[exe_yrmon], '-', '')  AS EXE_YRMON
             , NVL(@[pso_bztp_cd], '2')         AS PSO_BZTP_CD
          FROM DUAL
        )
     , V_PORT_SKD AS (
#if(${hide_vrtl_port_flg} != '' && ${hide_vrtl_port_flg} =='Y')
         /*hide virtual port checked case.*/
        SELECT A.VSL_CD
             , A.SKD_VOY_NO
             , A.SKD_DIR_CD
             , A.CLPT_IND_SEQ
             , A.TURN_PORT_IND_CD
             , A.TURN_PORT_FLG
             , DECODE(A.TURN_PORT_IND_CD,'N',DECODE(A.TURN_PORT_FLG,'Y','Y','N'),'Y') CHK_TURN_PORT_FLG
             , A.SLAN_CD
             , A.VPS_PORT_CD
             , A.YD_CD
             , TO_CHAR(A.VPS_ETD_DT,'YYYYMMDD') AS VPS_ETD_DT
             , A.SKD_CNG_STS_CD
             , MAX(P.EXE_YRMON) AS EXE_YRMON
             , MAX(P.PSO_BZTP_CD) AS PSO_BZTP_CD
             , COUNT(G.RLANE_CD) AS CHK_GL_CNT
             , SUM((SELECT COUNT(1)
                          FROM PSO_PORT_EXPN_DIV E
                         WHERE 1=1
                           AND E.SLAN_CD = A.SLAN_CD
                           AND E.SKD_DIR_CD = A.SKD_DIR_CD
                           AND E.LOC_CD = A.VPS_PORT_CD
                           AND E.RLANE_CD = G.RLANE_CD )) AS CHK_DIV_CNT
          FROM VSK_VSL_PORT_SKD A
             , V_PARAM P
             , GL_ESTM_REV_VVD G
         WHERE 1=1
           AND A.VSL_CD                     = P.VSL_CD
           AND A.SKD_VOY_NO                 = P.SKD_VOY_NO
           AND A.SKD_DIR_CD                 = P.SKD_DIR_CD
           AND A.YD_CD                      = P.YD_CD
           AND A.CLPT_IND_SEQ               = P.CLPT_IND_SEQ
           AND A.TURN_PORT_IND_CD           IN ('N', 'Y')
           AND NVL(A.SKD_CNG_STS_CD, 'X')   <> 'S'
           AND NVL(A.VT_ADD_CALL_FLG, 'N')  = 'N' /*2015.07.21 Add*/
           AND G.EXE_YRMON                  = P.EXE_YRMON
           AND A.VSL_CD                     = G.VSL_CD
           AND A.SKD_VOY_NO                 = G.SKD_VOY_NO
           AND A.SKD_DIR_CD                 = G.SKD_DIR_CD
         GROUP BY A.VSL_CD
             , A.SKD_VOY_NO
             , A.SKD_DIR_CD
             , A.CLPT_IND_SEQ
             , A.TURN_PORT_IND_CD
             , A.TURN_PORT_FLG
             , DECODE(A.TURN_PORT_IND_CD,'N',DECODE(A.TURN_PORT_FLG,'Y','Y','N'),'Y')
             , A.SLAN_CD
             , A.VPS_PORT_CD
             , A.YD_CD
             , TO_CHAR(A.VPS_ETD_DT,'YYYYMMDD')
             , A.SKD_CNG_STS_CD
         UNION ALL
        SELECT A.VSL_CD
             , A.SKD_VOY_NO
             , A.SKD_DIR_CD
             , A.CLPT_IND_SEQ
             , A.TURN_PORT_IND_CD
             , A.TURN_PORT_FLG
             , DECODE(A.TURN_PORT_IND_CD,'N',DECODE(A.TURN_PORT_FLG,'Y','Y','N'),'Y') CHK_TURN_PORT_FLG
             , A.SLAN_CD
             , A.VPS_PORT_CD
             , A.YD_CD
             , TO_CHAR(A.VPS_ETD_DT,'YYYYMMDD') AS VPS_ETD_DT
             , A.SKD_CNG_STS_CD
             , MAX(P.EXE_YRMON) AS EXE_YRMON
             , MAX(P.PSO_BZTP_CD) AS PSO_BZTP_CD
             , COUNT(G.RLANE_CD) AS CHK_GL_CNT
             , SUM((SELECT COUNT(1)
                          FROM PSO_PORT_EXPN_DIV E
                         WHERE 1=1
                           AND E.SLAN_CD = A.SLAN_CD
                           AND E.SKD_DIR_CD = A.SKD_DIR_CD
                           AND E.LOC_CD = A.VPS_PORT_CD
                           AND E.RLANE_CD = G.RLANE_CD )) AS CHK_DIV_CNT
          FROM VSK_VSL_PORT_SKD A
             , V_PARAM P
             , GL_ESTM_REV_VVD G
         WHERE 1=1
           AND A.VSL_CD                     = P.VSL_CD
           AND A.TURN_SKD_VOY_NO            = P.SKD_VOY_NO
           AND A.TURN_SKD_DIR_CD            = P.SKD_DIR_CD
           AND A.YD_CD                      = P.YD_CD
           AND A.TURN_CLPT_IND_SEQ          = P.CLPT_IND_SEQ
           AND A.TURN_PORT_IND_CD           IN ('D', 'V', 'F')
           AND NVL(A.SKD_CNG_STS_CD, 'X')   <> 'S'
           AND NVL(A.VT_ADD_CALL_FLG, 'N')  = 'N' /*2015.07.21 Add*/
           AND G.EXE_YRMON                  = P.EXE_YRMON
           AND A.VSL_CD                     = G.VSL_CD
           AND A.SKD_VOY_NO                 = G.SKD_VOY_NO
           AND A.SKD_DIR_CD                 = G.SKD_DIR_CD
         GROUP BY A.VSL_CD
             , A.SKD_VOY_NO
             , A.SKD_DIR_CD
             , A.CLPT_IND_SEQ
             , A.TURN_PORT_IND_CD
             , A.TURN_PORT_FLG
             , DECODE(A.TURN_PORT_IND_CD,'N',DECODE(A.TURN_PORT_FLG,'Y','Y','N'),'Y')
             , A.SLAN_CD
             , A.VPS_PORT_CD
             , A.YD_CD
             , TO_CHAR(A.VPS_ETD_DT,'YYYYMMDD')
             , A.SKD_CNG_STS_CD
#else
        /*hide virtual port unchecked case.*/
        SELECT A.VSL_CD
             , A.SKD_VOY_NO
             , A.SKD_DIR_CD
             , A.CLPT_IND_SEQ
             , A.TURN_PORT_IND_CD
             , A.TURN_PORT_FLG
             , DECODE(A.TURN_PORT_IND_CD,'N',DECODE(A.TURN_PORT_FLG,'Y','Y','N'),'Y') CHK_TURN_PORT_FLG
             , A.SLAN_CD
             , A.VPS_PORT_CD
             , A.YD_CD
             , TO_CHAR(A.VPS_ETD_DT,'YYYYMMDD') AS VPS_ETD_DT
             , A.SKD_CNG_STS_CD
             , MAX(P.EXE_YRMON) AS EXE_YRMON
             , MAX(P.PSO_BZTP_CD) AS PSO_BZTP_CD
             , COUNT(G.RLANE_CD) AS CHK_GL_CNT
             , SUM((SELECT COUNT(1)
                          FROM PSO_PORT_EXPN_DIV E
                         WHERE 1=1
                           AND E.SLAN_CD = A.SLAN_CD
                           AND E.SKD_DIR_CD = A.SKD_DIR_CD
                           AND E.LOC_CD = A.VPS_PORT_CD
                           AND E.RLANE_CD = G.RLANE_CD )) AS CHK_DIV_CNT
          FROM VSK_VSL_PORT_SKD A
             , V_PARAM P
             , GL_ESTM_REV_VVD G
         WHERE 1=1
           AND A.VSL_CD                     = P.VSL_CD
           AND A.SKD_VOY_NO                 = P.SKD_VOY_NO
           AND A.SKD_DIR_CD                 = P.SKD_DIR_CD
           AND A.YD_CD                      = P.YD_CD
           AND A.CLPT_IND_SEQ               = P.CLPT_IND_SEQ
           AND NVL(A.SKD_CNG_STS_CD, 'X')   <> 'S'
           AND NVL(A.VT_ADD_CALL_FLG, 'N')  = 'N' /*2015.07.21 Add*/
           AND G.EXE_YRMON                  = P.EXE_YRMON
           AND A.VSL_CD                     = G.VSL_CD
           AND A.SKD_VOY_NO                 = G.SKD_VOY_NO
           AND A.SKD_DIR_CD                 = G.SKD_DIR_CD
         GROUP BY A.VSL_CD
             , A.SKD_VOY_NO
             , A.SKD_DIR_CD
             , A.CLPT_IND_SEQ
             , A.TURN_PORT_IND_CD
             , A.TURN_PORT_FLG
             , DECODE(A.TURN_PORT_IND_CD,'N',DECODE(A.TURN_PORT_FLG,'Y','Y','N'),'Y')
             , A.SLAN_CD
             , A.VPS_PORT_CD
             , A.YD_CD
             , TO_CHAR(A.VPS_ETD_DT,'YYYYMMDD')
             , A.SKD_CNG_STS_CD
#end
        )
--SELECT * FROM V_PORT_SKD;
     , V_PENDULUM AS (
        SELECT V.VSL_CD
             , V.SKD_VOY_NO
             , V.SKD_DIR_CD
             , V.CLPT_IND_SEQ
             , V.VPS_PORT_CD
             , V.YD_CD
             , V.CHK_TURN_PORT_FLG
             , V.SLAN_CD
             , D.REV_DIR_CD RLANE_DIR_CD
             , COUNT(1) OVER (PARTITION BY D.LOC_CD) AS CNT
          FROM PSO_PORT_EXPN_DIV D
             , V_PORT_SKD V
         WHERE 1=1
           AND V.SLAN_CD        = D.SLAN_CD
           AND V.SKD_DIR_CD     = D.SKD_DIR_CD
           AND V.VPS_PORT_CD    = D.LOC_CD
        )
--SELECT * FROM V_PENDULUM;

/*1개의 Vendor : CPLS_FLG 가 N 상관없이 대상, 2개 Vendor 일때는 CPLS_FLG Y 인 대상*/
     , V_PSO_YD_CHG AS (
        SELECT VSL_CD
             , SKD_VOY_NO
             , SKD_DIR_CD
             , CLPT_IND_SEQ
             , YD_CHG_NO
             , YD_CHG_VER_SEQ
             , CURR_CD
             , YD_CD
             , LGS_COST_CD
             , VNDR_SEQ
             , EFF_DT
             , EXP_DT
          FROM (SELECT V.VSL_CD
                     , V.SKD_VOY_NO
                     , V.SKD_DIR_CD
                     , V.CLPT_IND_SEQ
                     , C.YD_CD
                     , C.LGS_COST_CD
                     , C.VNDR_SEQ
                     , C.CPLS_FLG
                     , C.EFF_DT
                     , C.EXP_DT
                     , MAX (C.YD_CHG_NO) YD_CHG_NO
                     , MAX (C.YD_CHG_VER_SEQ) YD_CHG_VER_SEQ
                     , SUBSTR (MAX (C.YD_CHG_VER_SEQ || CURR_CD), -3) AS CURR_CD
                     , COUNT( * ) OVER (PARTITION BY V.VSL_CD , V.SKD_VOY_NO , V.SKD_DIR_CD , V.CLPT_IND_SEQ, C.YD_CD, C.LGS_COST_CD
                                            ORDER BY V.VSL_CD , V.SKD_VOY_NO , V.SKD_DIR_CD , V.CLPT_IND_SEQ, C.YD_CD, C.LGS_COST_CD) AS CNT
                  FROM PSO_YD_CHG C
                     , V_PORT_SKD V
                     , MDM_VENDOR M
                 WHERE 1=1
                   AND C.YD_CD      = V.YD_CD
                   AND TO_DATE(V.VPS_ETD_DT,'YYYYMMDD') BETWEEN C.EFF_DT AND C.EXP_DT
                   AND C.VNDR_SEQ   = M.VNDR_SEQ
                 GROUP BY V.VSL_CD
                     , V.SKD_VOY_NO
                     , V.SKD_DIR_CD
                     , V.CLPT_IND_SEQ
                     , C.YD_CD
                     , C.LGS_COST_CD
                     , C.VNDR_SEQ
                     , C.CPLS_FLG
                     , C.EFF_DT
                     , C.EXP_DT
                )
         WHERE (CASE WHEN CNT >= 2 THEN 'Y' ELSE CPLS_FLG END) = CPLS_FLG
            /*2016.04.18 Add : Accrual 대상 만 진행함.*/
           AND EXISTS ( SELECT 'Y'
                          FROM SCO_AP_COST_ACT_INFO SACAI
                         WHERE 1=1
                           AND SACAI.SRC_MDL_CD = 'PSO'
                           AND NVL(SACAI.ENBL_FLG, 'N') = 'N'
                           AND NVL(SACAI.ACCL_FLG, 'N') = 'Y'
                           AND SACAI.ACT_COST_CD = LGS_COST_CD)
        )
--SELECT *  FROM V_PSO_YD_CHG;

SELECT A.*
  FROM (SELECT T.REV_YRMON AS EXPN_YRMON
             , T.VSL_SLAN_CD
             , T.VSL_CD ||T.SKD_VOY_NO ||T.SKD_DIR_CD||T.REV_DIR_CD VVD
             , T.REV_DIR_CD
             , T.YD_CD
             , T.ACCT_CD
             , (SELECT MC.ACCT_ENG_NM
                  FROM MDM_ACCOUNT MC
                 WHERE MC.ACCT_CD = T.ACCT_CD
                   AND ROWNUM = 1 ) ACCT_ENG_NM
             , T.LGS_COST_CD
             , (SELECT TLC.LGS_COST_FULL_NM
                  FROM TES_LGS_COST TLC
                 WHERE TLC.LGS_COST_CD = T.LGS_COST_CD
                   AND ROWNUM=1) LGS_COST_FULL_NM
             , T.TURN_PORT_IND_CD
             , T.TURN_PORT_FLG
             , T.PENDULUM_YN
             , IO_BND_CD CHK_IO_BND_CD
             , T.CHK_GL_CNT
             , T.CHK_DIV_CNT
             , T.CHK_TURN_PORT_FLG
             , T.CHK_TURN_PORT_IND_CD
             , CASE WHEN T.CHK_GL_CNT > 1 AND T.CHK_DIV_CNT = 0 THEN DECODE(IO_BND_CD, 'I', 'IN', 'O', 'OUT','IN/OUT') /*is Pendulum In GL*/
                    ELSE DECODE(IO_BND_CD, 'I', 'IN', 'O', DECODE(T.TURN_PORT_IND_CD,'N',DECODE(T.TURN_PORT_FLG,'Y','OUT', DECODE(PENDULUM_YN,'Y','OUT','IN/OUT')),'OUT'), 'IN/OUT') /*Not Pendulum*/
               END IO_BND_CD
             , DECODE(IO_BND_CD, 'I', 'IN', 'O', DECODE(T.TURN_PORT_IND_CD,'N',DECODE(T.TURN_PORT_FLG,'Y','OUT', DECODE(PENDULUM_YN,'Y','OUT','IN/OUT')),'OUT'), 'IN/OUT') IO_BND_CD2 /*2009.11.18 MODIFIED*/
             , INV_USD_AMT
             , T.VSL_CD
             , T.SKD_VOY_NO
             , T.SKD_DIR_CD
             , '' SDT
             , '' EDT
             , '' MATCH_FLAG
             , '' REV_YRMON
             , LOCL_CURR_CD
             , INV_LOCL_AMT
             , '' PSO_BZTP_CD
             , (SELECT INTG_CD_VAL_DP_DESC
                  FROM COM_INTG_CD_DTL
                 WHERE INTG_CD_ID = 'CD01393'
                   AND INTG_CD_VAL_CTNT = T.SKD_CNG_STS_CD) SKD_CNG_STS_CD
             , E.XPR_DESC
             , E.FOML_DESC
             , T.VNDR_SEQ
             , V.VNDR_LGL_ENG_NM VNDR_NM
          FROM (SELECT DISTINCT T1.PSO_BZTP_CD
                     , T1.EXPN_YRMON
                     , T1.VSL_CD
                     , T1.SKD_VOY_NO
                     , T1.SKD_DIR_CD
                     , T1.VSL_SLAN_CD
                     , C.YD_CD
                     , A.ACCT_CD
                     , C.LGS_COST_CD --,T1.VSL_CNTR_CLSS_CAPA CLSS : 추가 예정임
                     , C.VNDR_SEQ
                     , G.REV_YRMON
                     , G.REV_DIR_CD
                     , G.RLANE_CD
                     , NVL((SELECT CASE WHEN P.CNT > 0 THEN 'Y'
                                        ELSE 'N'
                                   END
                                  FROM V_PENDULUM P
                            WHERE 1=1
                              AND P.VSL_CD         = V.VSL_CD
                              AND P.SKD_VOY_NO     = V.SKD_VOY_NO
                              AND P.SKD_DIR_CD     = V.SKD_DIR_CD
                              AND P.CLPT_IND_SEQ   = V.CLPT_IND_SEQ
                              AND P.VPS_PORT_CD    = SUBSTR(C.YD_CD,1 , 5)
                              AND ROWNUM = 1 ), 'N') AS PENDULUM_YN
                     , V.CLPT_IND_SEQ
                     , V.CHK_GL_CNT
                     , V.CHK_DIV_CNT
                     , V.TURN_PORT_IND_CD
                     , V.TURN_PORT_FLG
                     , V.CHK_TURN_PORT_FLG
                     , V.TURN_PORT_IND_CD AS CHK_TURN_PORT_IND_CD
                     , V.SKD_CNG_STS_CD
                  FROM PSO_TGT_VVD T1
                     , V_PSO_YD_CHG C
                     , TES_LGS_COST A
                     , GL_ESTM_REV_VVD G
                     , V_PORT_SKD V
                 WHERE 1=1
                   AND T1.PSO_BZTP_CD   = V.PSO_BZTP_CD
                   AND T1.VSL_CD        = V.VSL_CD
                   AND T1.SKD_VOY_NO    = V.SKD_VOY_NO
                   AND T1.SKD_DIR_CD    = V.SKD_DIR_CD
                   AND V.VSL_CD         = C.VSL_CD
                   AND V.SKD_VOY_NO     = C.SKD_VOY_NO
                   AND V.SKD_DIR_CD     = C.SKD_DIR_CD
                   AND V.CLPT_IND_SEQ   = C.CLPT_IND_SEQ
                   AND V.YD_CD          = C.YD_CD
                   AND C.LGS_COST_CD    = A.LGS_COST_CD
                   AND G.EXE_YRMON      = V.EXE_YRMON
                   AND G.VSL_CD         = T1.VSL_CD
                   AND G.SKD_VOY_NO     = T1.SKD_VOY_NO
                   AND G.SKD_DIR_CD     = T1.SKD_DIR_CD
                    /*2015.07.03 Pendulum Yd_cd 일때는 Pendulum Rlane_dir_cd 일치, 그렇지 않을 경우는 GL의 Rev_dir_cd 를 조건으로 한다.*/
                   AND G.REV_DIR_CD IN (SELECT G.REV_DIR_CD
                                          FROM DUAL
                                         WHERE 1 = (SELECT CASE WHEN COUNT(*) > 0 THEN -1
                                                                ELSE 1
                                                           END
                                                      FROM V_PENDULUM P
                                                     WHERE 1=1
                                                       AND P.VSL_CD         = V.VSL_CD
                                                       AND P.SKD_VOY_NO     = V.SKD_VOY_NO
                                                       AND P.SKD_DIR_CD     = V.SKD_DIR_CD
                                                       AND P.CLPT_IND_SEQ   = V.CLPT_IND_SEQ
                                                       AND P.VPS_PORT_CD    = SUBSTR(V.YD_CD,1 , 5))
                                        UNION ALL
                                        SELECT P.RLANE_DIR_CD
                                          FROM V_PENDULUM P
                                         WHERE 1=1
                                           AND P.VSL_CD         = V.VSL_CD
                                           AND P.SKD_VOY_NO     = V.SKD_VOY_NO
                                           AND P.SKD_DIR_CD     = V.SKD_DIR_CD
                                           AND P.CLPT_IND_SEQ   = V.CLPT_IND_SEQ
                                           AND P.VPS_PORT_CD    = SUBSTR(V.YD_CD,1 , 5)
                                        )
               ) T
             , PSO_TGT_YD_EXPN E
             , MDM_VENDOR V
         WHERE T.VSL_CD         = E.VSL_CD(+)
           AND T.SKD_VOY_NO     = E.SKD_VOY_NO(+)
           AND T.SKD_DIR_CD     = E.SKD_DIR_CD(+)
           AND T.RLANE_CD       = E.RLANE_CD(+)
           AND T.PSO_BZTP_CD    = E.PSO_BZTP_CD(+)
           AND T.YD_CD          = E.YD_CD(+)
           AND T.CLPT_IND_SEQ   = E.CLPT_IND_SEQ(+)
           AND T.LGS_COST_CD    = E.LGS_COST_CD(+)
           AND T.REV_YRMON      = E.REV_YRMON(+)
           AND T.VNDR_SEQ       = E.VNDR_SEQ(+) -- 과거 데이타에는 VENDOR 가 0 으로 되어 있어서 해당 데이타 조회를 위해 OUTER 조인함
           AND T.VNDR_SEQ       = V.VNDR_SEQ
       ) A
 WHERE 1=1
   AND A.CHK_IO_BND_CD IS NOT NULL
   /*GL에만 등록된 Pendrum 일때와 기존 로직 분기.*/
   --AND A.IO_BND_CD = (CASE WHEN CHK.CHK_GL_CNT > 1 AND CHK.CHK_DIV_CNT = 0 THEN DECODE(CHK.CHK_TURN_PORT_FLG,'Y',DECODE(CHK.CHK_TURN_PORT_IND_CD,'N','OUT','Y','OUT', 'IN'),'IN/OUT')  ELSE A.IO_BND_CD  END )
#if(${match_flag} == 'unmatch')
   AND NVL(A.INV_USD_AMT,0)  = 0           -- Mismatch
#end
#if(${match_flag} == 'match')
   AND NVL(A.INV_USD_AMT,0)  > 0           -- Match
#end
#if(${hide_vrtl_port_flg} != '' && ${hide_vrtl_port_flg} =='Y')
 /*hide virtual port checked case*/
 ORDER BY A.VSL_SLAN_CD, A.ACCT_CD, A.LGS_COST_CD, A.VNDR_SEQ, A.IO_BND_CD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.YD_CD, A.EXPN_YRMON, A.REV_DIR_CD
#else
 /*hide virtual port unchecked case.*/
 ORDER BY A.VSL_SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.YD_CD, A.ACCT_CD, A.LGS_COST_CD, A.VNDR_SEQ, A.EXPN_YRMON, A.REV_DIR_CD, A.IO_BND_CD DESC
#end
			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="clpt_ind_seq" type="12" value="" out="N"/>
				<param name="exe_yrmon" type="12" value="" out="N"/>
				<param name="pso_bztp_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
