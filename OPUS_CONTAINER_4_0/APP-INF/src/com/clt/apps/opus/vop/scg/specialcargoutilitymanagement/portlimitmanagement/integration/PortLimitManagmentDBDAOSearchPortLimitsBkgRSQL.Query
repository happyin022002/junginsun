<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PortLimitManagmentDBDAOSearchPortLimitsBkgRSQL">
			<desc><![CDATA[관리 Port별 Port Limits BKG 정보를 조회한다.]]></desc>
			<sql><![CDATA[
SELECT		XX.LMT_WGT_TP_CD
		,	XX.CGO_OPR_CD
		,  	XX.BKG_NO
		,  	XX.VSL_CD
		,  	XX.SKD_VOY_NO
		,  	XX.SKD_DIR_CD
                                                
		, 	XX.PLMT_PORT_CD
        ,   XX.PLMT_CLPT_IND_SEQ   

		,  	XX.POL_CD
		,  	XX.POD_CD
		,  	SUBSTR(PS.YD_CD,'6','7') 				AS POL_YD_CD
		,  	XX.POL_CLPT_IND_SEQ
		,  	SUBSTR(PSS.YD_CD, '6','7') 				AS POD_YD_CD
		,  	XX.POD_CLPT_IND_SEQ
		,  	XX.IMDG_CLSS_CD||IMDG_COMP_GRP_CD		AS IMDG_CLSS_CD
		,  	XX.DG_CNTR_SEQ
		,  	XX.CNTR_CGO_SEQ
		,  	XX.IMDG_UN_NO
		,  	XX.IMDG_UN_NO_SEQ
		,  	XX.CNTR_TPSZ_CD
		,  	ROUND(XX.GRS_WGT, 2) 					AS GRS_WGT
		,  	ROUND(XX.NET_WGT, 2) 					AS NET_WGT
		,  	ROUND(XX.NET_EXPLO_WGT, 2) 				AS NET_EXPLO_WGT
		,  	XX.DCGO_REF_NO
		,  	TO_CHAR(XX.AUTH_DT, 'YYYY-MM-DD') 		AS AUTH_DT
		,  	1 										AS CNTR_QTY
		
FROM        (
            --===========================================================================
            SELECT      PLMT.LMT_WGT_TP_CD, DCGO.*
            FROM        (
                        ------------- <<PORT LIMIT REGULATION>> -------------------------------------
                        
                        SELECT      A.PIER_TP_CD
                             ,  A.PORT_CD
                             ,  A.PORT_LMT_SEQ
                             ,  A.FLSH_PNT_TEMP
                             ,  A.LMT_WGT_TP_CD
                             ,  A.IMDG_PCK_GRP_CD
                             ,  E.IMDG_SUBS_RSK_LBL_CD
                             ,  A.CNTR_TP_CD
                             ,  B.IMDG_CLSS_CD
                             ,  C.IMDG_COMP_GRP_CD 
                             ,  D.IMDG_UN_NO
                             ,  DECODE(A.ARR_MAX_QTY  , 0, NULL, A.ARR_MAX_QTY  )  	AS ARR_MAX_QTY
                             ,  DECODE(A.DCHG_MAX_QTY , 0, NULL, A.DCHG_MAX_QTY )   AS DCHG_MAX_QTY
                             ,  DECODE(A.LOD_MAX_QTY  , 0, NULL, A.LOD_MAX_QTY  )   AS LOD_MAX_QTY
                             ,  DECODE(A.DEP_MAX_QTY  , 0, NULL, A.DEP_MAX_QTY  )   AS DEP_MAX_QTY
                             ,  A.PPT_EXPLO_FLG
                             ,  A.PPT_PROHI_FLG
                             ,  A.PORT_LMT_REP_DESC
                             ,  A.ARR_DEP_PROHI_FLG
                             ,  A.LDIS_APLY_TGT_FLG
                        FROM    SCG_IMDG_PORT_LMT_MST          	A
                             ,  SCG_IMDG_PORT_LMT_CLSS_CD      	B
                             ,  SCG_IMDG_PORT_LMT_COMP_GRP     	C
                             ,  SCG_IMDG_PORT_LMT_UN_NO        	D
                             ,  SCG_IMDG_PORT_LMT_SUBS_RSK     	E
                        WHERE   1 = 1
                        AND    	A.PORT_CD             			= @[plmt_port_cd]
                        AND    	A.PORT_LMT_SEQ        			= @[port_lmt_seq]
                        AND    	A.PORT_CD                      = B.PORT_CD    		(+)
                        AND     A.PORT_LMT_SEQ                 = B.PORT_LMT_SEQ  	(+)
                        AND     B.PORT_CD                      = C.PORT_CD    		(+)
                        AND     B.PORT_LMT_SEQ                 = C.PORT_LMT_SEQ  	(+)
                        AND     B.IMDG_CLSS_CD                 = C.IMDG_CLSS_CD   	(+) 	/* 2016-04-21 */
                        AND     A.PORT_CD                      = D.PORT_CD    		(+)
                        AND     A.PORT_LMT_SEQ                 = D.PORT_LMT_SEQ  	(+)
                        AND     A.PORT_CD                      = E.PORT_CD    		(+)
                        AND     A.PORT_LMT_SEQ                 = E.PORT_LMT_SEQ  	(+)             
                        ------------- <<PORT LIMIT REGULATION>> -------------------------------------
                        )		PLMT
                   ,    (
                        ------------- <<DG CARGO INFORMATION>> --------------------------------------
                        -- <<Own Booking SPCL CGO Info>> --------------------------------------------
                        SELECT  COM_ConstantMgr_PKG.COM_getCompanyCode_FNC() 		AS CGO_OPR_CD
                          	,  	BKG_NO
                            ,   VSL_CD
                            ,   SKD_VOY_NO
                            ,   SKD_DIR_CD

                            ,   PLMT_PORT_CD
                            ,   PLMT_CLPT_IND_SEQ   

                            ,   POL_CD
                            ,   POL_CLPT_IND_SEQ
                            ,   POD_CD
                            ,   POD_CLPT_IND_SEQ
                            ,   DG_CNTR_SEQ
                            ,   CNTR_CGO_SEQ
                            ,   IMDG_CLSS_CD
                            ,	IMDG_COMP_GRP_CD
                            ,   IMDG_UN_NO
                            ,   IMDG_UN_NO_SEQ
                            ,   CNTR_TPSZ_CD
                            ,   GRS_WGT
                            ,   NET_WGT
                            ,   NET_EXPLO_WGT
                            ,   DCGO_REF_NO
                            ,   AUTH_DT
                            , 	IMDG_PCK_GRP_CD
                            , 	FLSH_PNT_CDO_TEMP
                            , 	IMDG_SUBS_RSK_LBL_CD1
                            , 	IMDG_SUBS_RSK_LBL_CD2
                            , 	IMDG_SUBS_RSK_LBL_CD3
                            , 	IMDG_SUBS_RSK_LBL_CD4                 
                        FROM  	(
                              	SELECT  A.BKG_NO
                                	,  	A.VSL_CD
                                	,  	A.SKD_VOY_NO
                                	,  	A.SKD_DIR_CD

                                    ,   A.PLMT_PORT_CD
                                    ,   A.PLMT_CLPT_IND_SEQ   

                                	,  	A.POL_CD
                                	,  	A.POL_CLPT_IND_SEQ
                                	,  	A.POD_CD
                                	,  	A.POD_CLPT_IND_SEQ
                                	,  	A.DG_CNTR_SEQ
                                	,  	A.CNTR_CGO_SEQ
                                	,  	A.IMDG_CLSS_CD
                                	,  	A.IMDG_UN_NO
                                	,  	A.IMDG_UN_NO_SEQ
                                	,  	A.CNTR_TPSZ_CD
                                	,  	A.GRS_WGT
                                	,  	A.NET_WGT
                                	,  	A.NET_EXPLO_WGT
                                	,  	A.DCGO_REF_NO
                               		,  	G.AUTH_DT
                              		, 	A.IMDG_PCK_GRP_CD
                              		, 	A.FLSH_PNT_CDO_TEMP
                              		, 	A.IMDG_COMP_GRP_CD
                              		, 	A.IMDG_SUBS_RSK_LBL_CD1
                              		, 	A.IMDG_SUBS_RSK_LBL_CD2
                              		, 	A.IMDG_SUBS_RSK_LBL_CD3
                              		, 	A.IMDG_SUBS_RSK_LBL_CD4                    
                                	,  	ROW_NUMBER() OVER (PARTITION BY NVL(G.BKG_NO,A.BKG_NO), NVL(G.SPCL_CGO_APRO_RQST_SEQ,A.SPCL_CGO_APRO_RQST_SEQ), NVL(G.VSL_PRE_PST_CD,A.VSL_PRE_PST_CD), NVL(G.VSL_SEQ,A.VSL_SEQ), NVL(G.DCGO_SEQ,A.DCGO_SEQ) ORDER BY G.DCGO_SEQ ASC) CORR_AUTH_SEQ
                                FROM	(
										SELECT    	SAR.SPCL_CGO_CATE_CD
			                                   	,  	SDC.BKG_NO
			                                   	,  	SVAR.VSL_CD
			                                   	,  	SVAR.SKD_VOY_NO
			                                   	,  	SVAR.SKD_DIR_CD

                                                ,   @[plmt_port_cd] AS PLMT_PORT_CD
                                                ,   VVPS.CLPT_IND_SEQ AS PLMT_CLPT_IND_SEQ   

			                                   	,  	SVAR.POL_CD
			                                   	,  	SVAR.POL_CLPT_IND_SEQ
			                                   	,  	SVAR.POD_CD
			                                   	,  	SVAR.POD_CLPT_IND_SEQ
			                                   	,  	SDC.DG_CNTR_SEQ           
			                                   	,  	SDC.CNTR_CGO_SEQ          
			                                   	,  	SDC.IMDG_CLSS_CD
			                                   	,  	SDC.IMDG_UN_NO
			                                   	,  	SDC.IMDG_UN_NO_SEQ
			                                   	,  	SDC.CNTR_TPSZ_CD
			                                   	,  	DECODE(SDC.WGT_UT_CD, 'LBS', TRS_COMMON_PKG.GET_CONV_WGT_TO_KG_FNC('LBS',SDC.GRS_WGT), SDC.GRS_WGT) 			AS GRS_WGT
			                                   	,  	DECODE(SDC.WGT_UT_CD, 'LBS', TRS_COMMON_PKG.GET_CONV_WGT_TO_KG_FNC('LBS',SDC.NET_WGT), SDC.NET_WGT) 			AS NET_WGT
			                                   	,  	DECODE(SDC.WGT_UT_CD, 'LBS', TRS_COMMON_PKG.GET_CONV_WGT_TO_KG_FNC('LBS',SDC.NET_EXPLO_WGT), SDC.NET_EXPLO_WGT) AS NET_EXPLO_WGT
			                                   	,  	SDC.DCGO_REF_NO
			                              		,  	SAR.SPCL_CGO_APRO_RQST_SEQ
			                              		,  	SVAR.VSL_PRE_PST_CD
			                              		,  	SVAR.VSL_SEQ
			                              		,  	SDC.DCGO_SEQ
			                              		, 	SDC.IMDG_PCK_GRP_CD
			                              		, 	SDC.FLSH_PNT_CDO_TEMP
			                              		, 	SDC.IMDG_COMP_GRP_CD
			                              		, 	SDC.IMDG_SUBS_RSK_LBL_CD1
			                              		, 	SDC.IMDG_SUBS_RSK_LBL_CD2
			                              		, 	SDC.IMDG_SUBS_RSK_LBL_CD3
			                              		, 	SDC.IMDG_SUBS_RSK_LBL_CD4
			                            FROM   		BKG_DG_CGO        				SDC
			                               		,  	SCG_APRO_RQST     				SAR
			                               		,  	SCG_VVD_APRO_RQST 				SVAR
                                                ,   VSK_VSL_PORT_SKD                VVPS
												,   BKG_VVD							BVD
			                            WHERE   	1 = 1
			                            AND     	SAR.BKG_NO                      = SVAR.BKG_NO
			                            --AND     	SAR.SPCL_CGO_CATE_CD            = 'DG'
			                            AND     	SAR.SPCL_CGO_APRO_RQST_SEQ      = SVAR.SPCL_CGO_APRO_RQST_SEQ
										-- BDR 이후 POST VVD만 Request오는 경우 고려, LST_RQST_DAT_FLG='Y' 조건 대신 적용
                                        AND SVAR.SPCL_CGO_APRO_RQST_SEQ 			= (SELECT MAX(RV.SPCL_CGO_APRO_RQST_SEQ) 
                                                                            			FROM SCG_VVD_APRO_RQST RV,
                                                                                             SCG_APRO_RQST RV2
                                                                                     	WHERE RV.VSL_CD = BVD.VSL_CD
                                                                                     	AND   RV.SKD_VOY_NO = BVD.SKD_VOY_NO
                                                                                     	AND   RV.SKD_DIR_CD = BVD.SKD_DIR_CD
                                                                                     	AND   RV.BKG_NO = BVD.BKG_NO                                                                                                      
                                                                                        AND   RV2.BKG_No = RV.BKG_NO
                                                                                        AND RV.SPCL_CGO_APRO_RQST_SEQ = RV2.SPCL_CGO_APRO_RQST_SEQ
                                                                                        AND   RV2.SPCL_CGO_CATE_CD = 'DG'
                                                                                       )
			                            --AND     	SAR.LST_RQST_DAT_FLG            = 'Y'
			                            AND     	SAR.BKG_NO                      = SDC.BKG_NO
										AND         SAR.BKG_NO						= BVD.BKG_NO
			                            AND     	SDC.SPCL_CGO_APRO_CD            NOT IN ('C','D','N')
			                            AND   		EXISTS               			(
			                                                        				SELECT	''
			                                                          				FROM 	BKG_BOOKING 	C
			                                                         				WHERE 	SDC.BKG_NO 		= C.BKG_NO
			                                                           				AND 	C.BKG_STS_CD 	<> 'X'
			                                                        				)
			                            AND 		SAR.BKG_NO						IN ( #foreach(${key} in ${bkg_nos}) #if($velocityCount != 1) , #end '$key' #end )
			                            AND 		SVAR.VSL_CD     				= @[vsl_cd]                                                                                                                                                                                                                                   
		               				    AND	       	(
													   (SVAR.SKD_VOY_NO = SUBSTR(@[plmt_vvd],1,4) AND SVAR.SKD_DIR_CD = SUBSTR(@[plmt_vvd],5,1))
								 					OR (SVAR.SKD_VOY_NO = SUBSTR(@[plmt_vvd],7,4) AND SVAR.SKD_DIR_CD = SUBSTR(@[plmt_vvd],11,1))
													)				                                                                                                                                                                                                                                 
                                        AND         SVAR.VSL_CD                     = VVPS.VSL_CD
                                        AND         SVAR.SKD_VOY_NO                 = VVPS.SKD_VOY_NO
                                        AND         SVAR.SKD_DIR_CD                 = VVPS.SKD_DIR_CD 
                                        AND         SVAR.VSL_CD                     = BVD.VSL_CD
                                        AND         SVAR.SKD_VOY_NO                 = BVD.SKD_VOY_NO
                                        AND         SVAR.SKD_DIR_CD                 = BVD.SKD_DIR_CD
                                        AND 		SVAR.BKG_NO                		= BVD.BKG_NO
                                        AND 		SVAR.VSL_PRE_PST_CD        		= BVD.VSL_PRE_PST_CD
                                        AND 		SVAR.VSL_SEQ               		= BVD.VSL_SEQ										        
                                        --AND         VVPS.TURN_PORT_IND_CD      IN ('Y','N')
										--2016-08-18
                                        --AND         NVL(SVAR.POL_CLPT_IND_SEQ,1)  = VVPS.CLPT_IND_SEQ
                                        AND         VVPS.VPS_PORT_CD  =  @[plmt_port_cd]
                       					AND 		VVPS.CLPT_IND_SEQ = @[plmt_clpt_ind_seq]
																			--IN( SELECT SUB.CLPT_IND_SEQ 
																			--FROM VSK_VSL_PORT_SKD SUB
                                                    						--WHERE SUB.VSL_CD = SVAR.VSL_CD
                                                    						--AND   SUB.SKD_VOY_NO = SVAR.SKD_VOY_NO
                                                    						--AND   SUB.SKD_DIR_CD = SVAR.SKD_DIR_CD
                                                    						--AND   SUB.VPS_PORT_CD = [plmt_port_cd]  
                                                    						--AND   SUB.TURN_PORT_IND_CD IN ('Y','N')
                                                 							--)  
                                        AND         NVL(VVPS.SKD_CNG_STS_CD,'*') <> 'S'
										#if (${from_eta_dt} != '' && ${to_eta_dt} != '')
										AND         VVPS.VPS_ETA_DT BETWEEN TO_DATE(@[from_eta_dt],'YYYY-MM-DD') AND TO_DATE(@[to_eta_dt],'YYYY-MM-DD')+0.99999
										#end
										--2016-08-18
			                        	) 											A                   
			                      	,	SCG_AUTHORIZATION 							G
			                        
			                    WHERE   A.BKG_NO                             		= G.BKG_NO           		(+)
			                    AND     A.SPCL_CGO_CATE_CD                   		= G.SPCL_CGO_CATE_CD 		(+)
			                    AND   	A.SPCL_CGO_APRO_RQST_SEQ       				= G.SPCL_CGO_APRO_RQST_SEQ	(+)
			                    AND   	A.VSL_PRE_PST_CD                   			= G.VSL_PRE_PST_CD       	(+)
			                    AND   	A.VSL_SEQ                           		= G.VSL_SEQ         		(+)
			                    AND   	A.DCGO_SEQ                     				= G.DCGO_SEQ         		(+)
			                                    
			                    #if (${auth_flg} == 'A')
			                    AND  	NVL(G.SPCL_CGO_AUTH_CD,'R')     			IN ('Y','R','P')
			                    #elseif(${auth_flg} == 'Y')
								AND  	NVL(G.SPCL_CGO_AUTH_CD,'R')     			= 'Y'
			                    #elseif(${auth_flg} == 'R')
								AND  	NVL(G.SPCL_CGO_AUTH_CD,'R')     			= 'R'
			                    #elseif(${auth_flg} == 'P')
								AND  	NVL(G.SPCL_CGO_AUTH_CD,'R')     			= 'P'
								#end
			                                                                      
			                    ) A
			            WHERE 	CORR_AUTH_SEQ                						= 1
                        -- <<Own Booking SPCL CGO Info>> --------------------------------------------
                        
                        UNION ALL
                                    
                        -- <<Partner Lines SPCL CGO Info>> ------------------------------------------
                  		SELECT  SPAC.CGO_OPR_CD
	                    	,  	SPAR.BKG_REF_NO
	                        ,  	SPAR.VSL_CD
	                        ,  	SPAR.SKD_VOY_NO
	                        ,  	SPAR.SKD_DIR_CD

                            ,   @[plmt_port_cd] AS PLMT_PORT_CD
                            ,   VVPS.CLPT_IND_SEQ AS PLMT_CLPT_IND_SEQ  

	                        ,  	SPAR.POL_CD
		                    ,  	NVL(SPAR.POL_CLPT_IND_SEQ,1)    AS POL_CLPT_IND_SEQ
		                    ,  	SPAR.POD_CD
		                    ,  	NVL(SPAR.POD_CLPT_IND_SEQ,1)    AS POD_CLPT_IND_SEQ
		                    ,  	SPAC.SPCL_CNTR_SEQ
		                    ,  	SPAC.SPCL_CGO_SEQ
		                    ,  	SPAC.IMDG_CLSS_CD
		                    , 	SPAC.IMDG_CO_GRP_CD
		                    ,  	SPAC.IMDG_UN_NO
		                    ,  	SPAC.IMDG_UN_NO_SEQ
		                    ,  	SPAC.CNTR_TPSZ_CD
		                    ,  	DECODE(SPAC.WGT_UT_CD, 'LBS', TRS_COMMON_PKG.GET_CONV_WGT_TO_KG_FNC('LBS',SPAC.GRS_WGT), SPAC.GRS_WGT) 				AS GRS_WGT
		                    ,  	DECODE(SPAC.WGT_UT_CD, 'LBS', TRS_COMMON_PKG.GET_CONV_WGT_TO_KG_FNC('LBS',SPAC.NET_WGT), SPAC.NET_WGT) 				AS NET_WGT
		                    ,  	DECODE(SPAC.WGT_UT_CD, 'LBS', TRS_COMMON_PKG.GET_CONV_WGT_TO_KG_FNC('LBS',SPAC.NET_EXPLO_WGT), SPAC.NET_EXPLO_WGT) 	AS NET_EXPLO_WGT
		                    ,  	SPAC.DCGO_REF_NO
		                    ,  	SPAC.AUTH_DT
                            , 	SPAC.IMDG_PCK_GRP_CD
                            , 	SPAC.FLSH_PNT_CDO_TEMP
                            , 	SPAC.N1ST_IMDG_SUBS_RSK_LBL_CD
                            , 	SPAC.N2ND_IMDG_SUBS_RSK_LBL_CD
                            , 	SPAC.N3RD_IMDG_SUBS_RSK_LBL_CD
                            , 	SPAC.N4TH_IMDG_SUBS_RSK_LBL_CD
		                FROM    SCG_PRNR_APRO_RQST      							SPAR
		                     ,  SCG_PRNR_APRO_RQST_CGO  							SPAC
                             ,   VSK_VSL_PORT_SKD                VVPS
		                WHERE   1 = 1
		                AND     SPAR.CRR_CD            								= SPAC.CRR_CD
		                AND     SPAR.BKG_REF_NO        								= SPAC.BKG_REF_NO
		                AND     SPAR.PRNR_CGO_RQST_SEQ 								= SPAC.PRNR_CGO_RQST_SEQ
		                AND     SPAR.SPCL_CGO_RQST_SEQ 								= SPAC.SPCL_CGO_RQST_SEQ
		                AND     SPAR.DG_FLG            								= 'Y'
		                AND     SPAR.LST_RQST_DAT_FLG  								= 'Y'
						AND		SPAR.BKG_REF_NO										IN ( #foreach(${key} in ${bkg_nos}) #if($velocityCount != 1) , #end '$key' #end )
		                AND     SPAR.VSL_CD 										= @[vsl_cd]   
		                AND	   (
									(SPAR.SKD_VOY_NO = SUBSTR(@[plmt_vvd],1,4) AND SPAR.SKD_DIR_CD = SUBSTR(@[plmt_vvd],5,1))
								 OR (SPAR.SKD_VOY_NO = SUBSTR(@[plmt_vvd],7,4) AND SPAR.SKD_DIR_CD = SUBSTR(@[plmt_vvd],11,1))
								)				
			            AND     SPAR.VSL_CD                     = VVPS.VSL_CD
                        AND     SPAR.SKD_VOY_NO                 = VVPS.SKD_VOY_NO
                        AND     SPAR.SKD_DIR_CD                 = VVPS.SKD_DIR_CD
                        --AND     VVPS.TURN_PORT_IND_CD      IN ('Y','N')
                        --AND     NVL(SPAR.POL_CLPT_IND_SEQ,1)  = VVPS.CLPT_IND_SEQ
						--2016-08-18
                        AND     VVPS.VPS_PORT_CD  =  @[plmt_port_cd]
                        AND 	VVPS.CLPT_IND_SEQ  = @[plmt_clpt_ind_seq]
														-- IN( SELECT SUB.CLPT_IND_SEQ 
														--FROM VSK_VSL_PORT_SKD SUB
                                                    	--WHERE SUB.VSL_CD = SPAR.VSL_CD
                                                    	--AND   SUB.SKD_VOY_NO = SPAR.SKD_VOY_NO
                                                    	--AND   SUB.SKD_DIR_CD = SPAR.SKD_DIR_CD
                                                    	--AND   SUB.VPS_PORT_CD = [plmt_port_cd]  
                                                    	--AND   SUB.TURN_PORT_IND_CD IN ('Y','N')
                                                 		--)   
                        AND     NVL(VVPS.SKD_CNG_STS_CD,'*') <> 'S'
						#if (${from_eta_dt} != '' && ${to_eta_dt} != '')
						AND		VVPS.VPS_ETA_DT BETWEEN TO_DATE(@[from_eta_dt],'YYYY-MM-DD') AND TO_DATE(@[to_eta_dt],'YYYY-MM-DD')+0.99999
						#end
						--2016-08-18
                        #if (${auth_flg} == 'A')
                        AND  	NVL(SPAC.AUTH_STS_CD,'N/A')							IN ('Y','R','P')	
                        #elseif(${auth_flg} == 'Y')
						AND  	NVL(SPAC.AUTH_STS_CD,'N/A')							= 'Y'
                        #elseif(${auth_flg} == 'R')
						AND  	NVL(SPAC.AUTH_STS_CD,'N/A')							= 'R'
                        #elseif(${auth_flg} == 'P')
						AND  	NVL(SPAC.AUTH_STS_CD,'N/A')							= 'P'
						#end                       
                        -- <<Partner Lines SPCL CGO Info>> ------------------------------------------
                        ------------- <<DG CARGO INFORMATION>> --------------------------------------
                        ) DCGO
                        
            WHERE       1 = 1

      		AND		CASE	WHEN PLMT.IMDG_COMP_GRP_CD IS NOT NULL THEN PLMT.IMDG_CLSS_CD||PLMT.IMDG_COMP_GRP_CD
                 			ELSE 
                                CASE WHEN PLMT.IMDG_CLSS_CD IS NOT NULL THEN PLMT.IMDG_CLSS_CD
                                     ELSE PLMT.IMDG_UN_NO
                                END
            		END			=	CASE	WHEN PLMT.IMDG_COMP_GRP_CD IS NOT NULL THEN DCGO.IMDG_CLSS_CD||DCGO.IMDG_COMP_GRP_CD
                                			ELSE 
                                            	CASE WHEN PLMT.IMDG_CLSS_CD IS NOT NULL THEN DCGO.IMDG_CLSS_CD
                                                	 ELSE DCGO.IMDG_UN_NO
                                                END
                                    END
            AND    		(PLMT.IMDG_UN_NO       			IS NULL OR PLMT.IMDG_UN_NO         		=  DCGO.IMDG_UN_NO      			)
            AND    		(PLMT.CNTR_TP_CD       			IS NULL OR PLMT.CNTR_TP_CD         		=  SUBSTR(DCGO.CNTR_TPSZ_CD,1,1)    )
            AND    		(PLMT.IMDG_SUBS_RSK_LBL_CD   	IS NULL OR PLMT.IMDG_SUBS_RSK_LBL_CD   IN (DCGO.IMDG_SUBS_RSK_LBL_CD1, DCGO.IMDG_SUBS_RSK_LBL_CD2, DCGO.IMDG_SUBS_RSK_LBL_CD3, DCGO.IMDG_SUBS_RSK_LBL_CD4))
            AND    		(PLMT.FLSH_PNT_TEMP     		IS NULL OR PLMT.FLSH_PNT_TEMP       	>= DCGO.FLSH_PNT_CDO_TEMP  			)
            AND    		(PLMT.IMDG_PCK_GRP_CD     		IS NULL OR PLMT.IMDG_PCK_GRP_CD 		=  DCGO.IMDG_PCK_GRP_CD				)
            --===========================================================================
            ) XX
      ,     VSK_VSL_PORT_SKD    						PS
      ,     VSK_VSL_PORT_SKD    						PSS
WHERE       1 = 1
AND         PS.VSL_CD           						= XX.VSL_CD
AND         PS.SKD_VOY_NO       						= XX.SKD_VOY_NO
AND         PS.SKD_DIR_CD       						= XX.SKD_DIR_CD
AND         PS.VPS_PORT_CD      						= XX.POL_CD
AND         PS.CLPT_IND_SEQ     						= XX.POL_CLPT_IND_SEQ

AND         PSS.VSL_CD           						= XX.VSL_CD
AND         PSS.SKD_VOY_NO       						= XX.SKD_VOY_NO
AND         PSS.SKD_DIR_CD       						= XX.SKD_DIR_CD
AND         PSS.VPS_PORT_CD      						= XX.POD_CD
AND         PSS.CLPT_IND_SEQ     						= XX.POD_CLPT_IND_SEQ

AND			NVL(PS.SKD_CNG_STS_CD	,'*')				<> 'S'
AND			NVL(PSS.SKD_CNG_STS_CD	,'*')				<> 'S'

ORDER BY    PS.CLPT_SEQ         ASC
      	,	XX.CGO_OPR_CD		ASC
		,	PSS.CLPT_SEQ        ASC
		,	XX.BKG_NO			ASC
		,	XX.DG_CNTR_SEQ		ASC
		,	XX.CNTR_CGO_SEQ		ASC 			]]></sql>
			<params>
				<param name="plmt_port_cd" type="12" value="" out="N"/>
				<param name="port_lmt_seq" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="plmt_vvd" type="12" value="" out="N"/>
				<param name="plmt_clpt_ind_seq" type="12" value="" out="N"/>
				<param name="from_eta_dt" type="12" value="" out="N"/>
				<param name="to_eta_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
