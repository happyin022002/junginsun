<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ProformaScheduleMgtDBDAOPfSkdInclFinalVirPortRSQL">
			<desc><![CDATA[PfSkdInclFinalVirPort]]></desc>
			<sql><![CDATA[
SELECT	#if (${pf_svc_tp_cd} != '') 
        ROW_NUMBER() OVER ( ORDER BY DECODE(PF_SVC_TP_CD, 

		#foreach($key IN ${pf_svc_tp_cd}) 
			#if($velocityCount < $pf_svc_tp_cd.size())
				'$key', $velocityCount ,
			#else
				'$key', $velocityCount )
			#end
		#end
			, PORT_ROTN_SEQ ASC ) AS ROW_SEQ
        #else

	        ROW_NUMBER() OVER (ORDER BY PF_SVC_TP_CD, PORT_ROTN_SEQ ASC) AS ROW_SEQ
		#end

		, 	TT.VSL_SLAN_CD
		, 	TT.PF_SVC_TP_CD
 		, 	TT.SLAN_STND_FLG
		, 	TT.MRG_FLG
		, 	TT.TOT_BRTH_ITVAL_DYS
		,	TT.TOT_VSL_CNT
		,	TT.SVC_DUR_DYS
		,	TT.STND_SVC_SPD
		,	TT.BRTH_ITVAL_DYS
		,	TT.MML_USD_FLG
		,	TT.SIM_DT
		,	TT.SIM_NO
		,	TT.N1ST_VSL_CLSS_CD
		,	TT.N1ST_VSL_CLSS_KNT
		,	TT.N2ND_VSL_CLSS_CD
		,	TT.N2ND_VSL_CLSS_KNT
		,	TT.N3RD_VSL_CLSS_CD
		,	TT.N3RD_VSL_CLSS_KNT
		,	TT.CLPT_KNT
		,	TT.TTL_DIST
		,	TT.MAX_SPD
		,	TT.AVG_SPD
		,	TT.DELT_FLG
		,	TT.PF_SKD_RMK
		,	TT.CRE_DT
		,	TT.UPD_DT
		,	TT.CRE_USR_ID
		,	TT.UPD_USR_ID
		,	TT.PORT_CD
		,	TT.SKD_DIR_CD
		,	TT.CLPT_SEQ
		,	TT.CALL_YD_IND_SEQ
		,	TT.PORT_ROTN_SEQ
		,	TT.TURN_PORT_FLG
		,	TT.TURN_PORT_IND_CD
		,	TT.ETB_DY_CD
		,	TT.ETB_DY_NO
		,	TT.ETB_TM_HRMNT
		,	TT.ETD_DY_CD
		,	TT.ETD_DY_NO
		,	TT.ETD_TM_HRMNT
		,	TT.LNK_DIST
		,	TT.LNK_SPD
		,	TT.TZTM_HRS
		,	TT.SEA_BUF_HRS
		,	TT.SEA_BUF_SPD
		,	TT.MNVR_IN_HRS
		,	TT.MNVR_OUT_HRS
		,	TT.IB_IPCGO_QTY
		,	TT.IB_OCN_CGO_QTY
		,	TT.OB_IPCGO_QTY
		,	TT.OB_OCN_CGO_QTY
		,	TT.TML_PROD_QTY
		,	TT.CRN_KNT
		,	TT.ACT_WRK_HRS
		,	TT.PORT_BUF_HRS
		,	TT.YD_CD
		,	TT.VSL_SLAN_NM
		,	TT.VSL_SVC_TP_CD
		,	TT.FDR_DIV_CD
		,	TT.TEMP_YD_CD
		,	TT.ZD
		,	TT.MAX_LNK_SPD AS TOT_MAX_SPD        
		,	NVL(ROUND(TT.AVG_LNK_SPD       ,1), 0) AS TOT_AVG_SPD
		,	NVL(ROUND(TT.AVG_SEA_BUF_SPD   ,1), 0) AS AVG_SEA_BUF_SPD
		,	ROUND(DECODE(TT.TOT_BUF_RAT_2  , 0, TT.TOT_BUF_RAT_1   , (TT.TOT_BUF_RAT_1  / TT.TOT_BUF_RAT_2   ) * 100), 1 ) AS TOT_BUF_RAT
		,	ROUND(DECODE(TT.SEA_BUF_RAT_2  , 0, TT.SEA_BUF_RAT_1   , (TT.SEA_BUF_RAT_1  / TT.SEA_BUF_RAT_2   ) * 100), 1 ) AS SEA_BUF_RAT
		,	ROUND(DECODE(TT.PORT_BUF_RAT_2 , 0, TT.PORT_BUF_RAT_1  , (TT.PORT_BUF_RAT_1 / TT.PORT_BUF_RAT_2  ) * 100), 1 ) AS PORT_BUF_RAT
		,	ROUND(DECODE(TT.PF_SPD_RAT_2   , 0, TT.PF_SPD_RAT_1    , (TT.PF_SPD_RAT_1   / TT.PF_SPD_RAT_2    ) * 100), 1 ) AS PF_SPD_RAT
		,	ROUND(CASE WHEN (TT.BUF_SPD_RAT_1 = 0 OR TT.BUF_SPD_RAT_3 = 0) THEN BUF_SPD_RAT_2
		 	           ELSE ((TT.BUF_SPD_RAT_2 / TT.BUF_SPD_RAT_1) / TT.BUF_SPD_RAT_3) * 100 END, 1) AS BUF_SPD_RAT      		
		,	TT.MIN_MAX_SPD
		,	CHECK_WK_TM
		,	CRANE_WK_TM
		,	CHECK_VSL_SKD
FROM 		(
SELECT
        T.VSL_SLAN_CD
        ,T.PF_SVC_TP_CD
        ,T.SLAN_STND_FLG
        ,'' MRG_FLG
		,(SELECT SUM(BRTH_ITVAL_DYS) FROM VSK_PF_SKD
            WHERE VSL_SLAN_CD = T.VSL_SLAN_CD
            AND NVL('','N') = NVL('','N')
          #if (${pf_svc_tp_cd} != '') 
            AND T.PF_SVC_TP_CD IN  (
		  #foreach($key IN ${pf_svc_tp_cd}) 
			#if($velocityCount < $pf_svc_tp_cd.size())
				'$key',
			#else
				'$key'
			#end
		  #end
			)
          #else
	    	AND PF_SVC_TP_CD = T.PF_SVC_TP_CD 
          #end     
            ) AS TOT_BRTH_ITVAL_DYS
        ,(SELECT SUM(N1ST_VSL_CLSS_KNT+N2ND_VSL_CLSS_KNT+N3RD_VSL_CLSS_KNT) FROM VSK_PF_SKD
            WHERE VSL_SLAN_CD = T.VSL_SLAN_CD
            AND NVL('','N') = NVL('','N')
            ) AS TOT_VSL_CNT
        ,T.SVC_DUR_DYS
        ,T.STND_SVC_SPD
        ,T.BRTH_ITVAL_DYS
        ,T.MML_USD_FLG
        ,T.SIM_DT
        ,T.SIM_NO
        ,T.N1ST_VSL_CLSS_CD
        ,T.N1ST_VSL_CLSS_KNT
        ,T.N2ND_VSL_CLSS_CD
        ,T.N2ND_VSL_CLSS_KNT
        ,T.N3RD_VSL_CLSS_CD
        ,T.N3RD_VSL_CLSS_KNT
        ,T.CLPT_KNT
        ,T.TTL_DIST
        ,T.MAX_SPD
        ,T.AVG_SPD
        ,T.DELT_FLG
        ,T.PF_SKD_RMK
        ,T.CRE_DT
        ,T.UPD_DT
		,T.CRE_USR_ID
		,T.UPD_USR_ID
        ,T.PORT_CD
        ,T.SKD_DIR_CD
        ,T.CLPT_SEQ
        ,T.CALL_YD_IND_SEQ
        ,T.PORT_ROTN_SEQ
        ,T.TURN_PORT_FLG
        ,T.TURN_PORT_IND_CD
        ,T.ETB_DY_CD
        ,T.ETB_DY_NO
        ,T.ETB_TM_HRMNT
        ,T.ETD_DY_CD
        ,T.ETD_DY_NO
        ,T.ETD_TM_HRMNT
        ,T.LNK_DIST
        ,T.LNK_SPD
        ,T.TZTM_HRS
        ,T.SEA_BUF_HRS
        ,T.SEA_BUF_SPD
        ,T.MNVR_IN_HRS
        ,T.MNVR_OUT_HRS
        ,T.IB_IPCGO_QTY
        ,T.IB_OCN_CGO_QTY
        ,T.OB_IPCGO_QTY
        ,T.OB_OCN_CGO_QTY
        ,T.TML_PROD_QTY
        ,T.CRN_KNT
        ,T.ACT_WRK_HRS
        ,T.PORT_BUF_HRS
        ,T.YD_CD
        ,T.VSL_SLAN_NM
        ,T.VSL_SVC_TP_CD
		,T.FDR_DIV_CD
        ,T.TEMP_YD_CD
        ,T.ZD
        ,T.MAX_LNK_SPD        
        ,T.AVG_LNK_SPD
        ,T.AVG_SEA_BUF_SPD        
        ,NVL(T.SUM_SEA_BUFF_HRS , 0) + NVL(T.SUM_PORT_BUF_HRS, 0)   AS TOT_BUF_RAT_1
        ,NVL(T.SUM_TZTH_HRS     , 0) + NVL(T.SUM_SEA_BUFF_HRS, 0) + 
         NVL(T.SUM_MNVR_IN_HRS  , 0) + NVL(T.SUM_MNVR_OUT_HRS, 0) + 
         NVL(T.SUM_ACT_WRK_HRS  , 0) + NVL(T.SUM_PORT_BUF_HRS, 0)   AS TOT_BUF_RAT_2
        ,NVL(T.SUM_SEA_BUFF_HRS , 0)                                AS SEA_BUF_RAT_1
        ,NVL(T.SUM_TZTH_HRS     , 0) + NVL(T.SUM_SEA_BUFF_HRS, 0) +
         NVL(T.SUM_MNVR_IN_HRS  , 0) + NVL(T.SUM_MNVR_OUT_HRS, 0)   AS SEA_BUF_RAT_2        
        ,NVL(T.SUM_PORT_BUF_HRS , 0)                                AS PORT_BUF_RAT_1
        ,NVL(T.SUM_ACT_WRK_HRS  , 0) + NVL(T.SUM_PORT_BUF_HRS, 0)   AS PORT_BUF_RAT_2        
        ,NVL(T.AVG_LNK_SPD      , 0)                                AS PF_SPD_RAT_1
        ,NVL(T.MIN_MAX_SPD      , 0)                                AS PF_SPD_RAT_2        
        ,NVL(T.SUM_TZTH_HRS     , 0) + NVL(T.SUM_SEA_BUFF_HRS, 0)   AS BUF_SPD_RAT_1
        ,NVL(T.SUM_LNK_DIST     , 0)                                AS BUF_SPD_RAT_2
        ,NVL(T.MIN_MAX_SPD      , 0)                                AS BUF_SPD_RAT_3
        ,MIN_MAX_SPD
		,CHECK_WK_TM
		,CRANE_WK_TM
		,CHECK_VSL_SKD
FROM
    (SELECT
            T1.VSL_SLAN_CD
            ,T1.PF_SVC_TP_CD
            ,T1.SLAN_STND_FLG
            ,'' MRG_FLG 
            ,T1.SVC_DUR_DYS
            ,T1.STND_SVC_SPD
            ,T1.BRTH_ITVAL_DYS
            ,T1.MML_USD_FLG
            ,T1.SIM_DT 
            ,T1.SIM_NO
            ,T1.N1ST_VSL_CLSS_CD
            ,T1.N1ST_VSL_CLSS_KNT
            ,T1.N2ND_VSL_CLSS_CD
            ,T1.N2ND_VSL_CLSS_KNT
            ,T1.N3RD_VSL_CLSS_CD
            ,T1.N3RD_VSL_CLSS_KNT
            ,T1.CLPT_KNT
            ,T1.TTL_DIST
            ,T1.MAX_SPD
            ,T1.AVG_SPD
            ,T1.DELT_FLG
            ,T1.PF_SKD_RMK
           	,TO_CHAR(T1.CRE_DT,'YYYY-MM-DD HH24:MI') AS CRE_DT
			,TO_CHAR(T1.UPD_DT,'YYYY-MM-DD HH24:MI') AS UPD_DT
			,T1.CRE_USR_ID
			,T1.UPD_USR_ID
            ,T2.PORT_CD
            ,T2.SKD_DIR_CD
            ,T2.CLPT_SEQ
            ,T2.CALL_YD_IND_SEQ
            ,T2.PORT_ROTN_SEQ
            ,T2.TURN_PORT_FLG
            ,T2.TURN_PORT_IND_CD
            ,T2.ETB_DY_CD
            ,T2.ETB_DY_NO
            ,T2.ETB_TM_HRMNT
            ,T2.ETD_DY_CD
            ,T2.ETD_DY_NO
            ,T2.ETD_TM_HRMNT
            ,T2.LNK_DIST
            ,T2.LNK_SPD
            ,T2.TZTM_HRS
            ,T2.SEA_BUF_HRS
            ,T2.SEA_BUF_SPD
            ,T2.MNVR_IN_HRS
            ,T2.MNVR_OUT_HRS
            ,T2.IB_IPCGO_QTY
            ,T2.IB_OCN_CGO_QTY
            ,T2.OB_IPCGO_QTY
            ,T2.OB_OCN_CGO_QTY
            ,T2.TML_PROD_QTY
            ,T2.CRN_KNT
            ,T2.ACT_WRK_HRS
            ,T2.PORT_BUF_HRS
            ,T2.YD_CD
            ,T3.VSL_SLAN_NM
            ,T3.VSL_SVC_TP_CD
			,T3.FDR_DIV_CD
            ,SUBSTR(T2.YD_CD,6,7) AS TEMP_YD_CD
            ,(
                    SELECT  GMT_HRS / 60
                    FROM    MDM_LOCATION
                    WHERE   LOC_CD = T2.PORT_CD 
                ) AS ZD
            ,MAX(T2.LNK_SPD     ) OVER () AS MAX_LNK_SPD
			,SUM(T2.LNK_SPD     ) OVER () / DECODE( COUNT(*) OVER () - 1, 0, 1, COUNT(*) OVER () - 1) AS AVG_LNK_SPD
            ,AVG(T2.SEA_BUF_SPD ) OVER () AS AVG_SEA_BUF_SPD
            ,SUM(T2.SEA_BUF_SPD ) OVER () AS SUM_SEA_BUF_SPD
            ,SUM(T2.ACT_WRK_HRS ) OVER () AS SUM_ACT_WRK_HRS
            ,SUM(T2.MNVR_IN_HRS ) OVER () AS SUM_MNVR_IN_HRS
            ,SUM(T2.MNVR_OUT_HRS) OVER () AS SUM_MNVR_OUT_HRS
            ,SUM(T2.PORT_BUF_HRS) OVER () AS SUM_PORT_BUF_HRS
            ,SUM(T2.TZTM_HRS    ) OVER () AS SUM_TZTH_HRS
            ,SUM(T2.SEA_BUF_HRS ) OVER () AS SUM_SEA_BUFF_HRS
            ,SUM(T2.LNK_DIST    ) OVER () AS SUM_LNK_DIST
            ,(
                SELECT NVL(MIN(MAX_SPD), 0)
                FROM MDM_VSL_CNTR
                WHERE (CNTR_VSL_CLSS_CAPA = T1.N1ST_VSL_CLSS_CD
                OR CNTR_VSL_CLSS_CAPA = T1.N2ND_VSL_CLSS_CD
                OR CNTR_VSL_CLSS_CAPA = T1.N3RD_VSL_CLSS_CD)
				AND NVL(MAX_SPD, 0)    > 0
            ) AS MIN_MAX_SPD
			,NVL((SELECT	'N'			/* ??? ??: PORT, GANG WORK START TIME?? ??? : 'N', ????? : 'Y' ???. */
				  FROM	DUAL  /* P/F SKD ????? 'N'?? ??츦 d?? ??? ???? ?ð?8?? ??????.		*/
				  WHERE	1 = 1
				  AND	EXISTS (SELECT	'X'
				   				FROM	VSK_PORT_GNG_STRC S
								WHERE	S.LOC_CD		= T2.PORT_CD
								AND	S.GNG_WRK_ST_HRMNT	= T2.ETB_TM_HRMNT
				)),'Y') AS CHECK_WK_TM
	      ,T4.CRANE_WK_TM
		  ,NVL((
				SELECT 'Y'
				FROM VSK_VSL_SKD S
				WHERE S.VSL_SLAN_CD  = T1.VSL_SLAN_CD
				AND  S.PF_SKD_TP_CD  = T1.PF_SVC_TP_CD
				AND  ROWNUM   = 1
		  ), 'N')  AS CHECK_VSL_SKD	  
    FROM VSK_PF_SKD T1, VSK_PF_SKD_DTL T2, MDM_VSL_SVC_LANE T3,
		(
			SELECT LOC_CD, MAX( DECODE(SEQ, 01, TM || ' - ' || TM2))
			|| DECODE(SIGN(CNT + 1 - 02), 1, CHR(10)|| MAX( DECODE(SEQ, 02, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 03), 1, CHR(10)|| MAX( DECODE(SEQ, 03, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 04), 1, CHR(10)|| MAX( DECODE(SEQ, 04, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 05), 1, CHR(10)|| MAX( DECODE(SEQ, 05, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 06), 1, CHR(10)|| MAX( DECODE(SEQ, 06, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 07), 1, CHR(10)|| MAX( DECODE(SEQ, 07, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 08), 1, CHR(10)|| MAX( DECODE(SEQ, 08, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 09), 1, CHR(10)|| MAX( DECODE(SEQ, 09, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 10), 1, CHR(10)|| MAX( DECODE(SEQ, 10, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 11), 1, CHR(10)|| MAX( DECODE(SEQ, 11, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 12), 1, CHR(10)|| MAX( DECODE(SEQ, 12, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 13), 1, CHR(10)|| MAX( DECODE(SEQ, 13, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 14), 1, CHR(10)|| MAX( DECODE(SEQ, 14, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 15), 1, CHR(10)|| MAX( DECODE(SEQ, 15, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 16), 1, CHR(10)|| MAX( DECODE(SEQ, 16, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 17), 1, CHR(10)|| MAX( DECODE(SEQ, 17, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 18), 1, CHR(10)|| MAX( DECODE(SEQ, 18, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 19), 1, CHR(10)|| MAX( DECODE(SEQ, 19, TM || ' - ' || TM2)))
			|| DECODE(SIGN(CNT + 1 - 20), 1, CHR(10)|| MAX( DECODE(SEQ, 20, TM || ' - ' || TM2))) AS CRANE_WK_TM
			FROM ( SELECT LOC_CD
					, ROW_NUMBER() OVER (PARTITION BY LOC_CD ORDER BY CRN_SEQ) AS SEQ
					, SUBSTR(GNG_WRK_ST_HRMNT, 1, 2) || ':' || SUBSTR(GNG_WRK_ST_HRMNT, 3, 2) AS TM
                    , SUBSTR(GNG_WRK_END_HRMNT, 1, 2) || ':' || SUBSTR(GNG_WRK_END_HRMNT, 3, 2) AS TM2
					, COUNT(*) OVER (PARTITION BY LOC_CD) AS CNT
				FROM VSK_PORT_GNG_STRC
				)
			GROUP BY LOC_CD, CNT
		) T4				
    WHERE 1=1
    AND T1.VSL_SLAN_CD=@[vsl_slan_cd]
    
    #if (${pf_svc_tp_cd} != '') 
        AND T1.PF_SVC_TP_CD IN  (
		#foreach($key IN ${pf_svc_tp_cd}) 
			#if($velocityCount < $pf_svc_tp_cd.size())
				'$key',
			#else
				'$key'
			#end
		#end
					)
    #end
	                                   
    #if (${slan_stnd_flg} == 'Y')   
    AND T1.SLAN_STND_FLG='Y'        
    #end                            
    AND T1.VSL_SLAN_CD=T3.VSL_SLAN_CD  
    AND T1.VSL_SLAN_CD=T2.VSL_SLAN_CD  
    AND T1.PF_SVC_TP_CD=T2.PF_SVC_TP_CD
    #if (${skd_dir_cd} != '')
    AND T2.SKD_DIR_CD = @[skd_dir_cd]
    #end
    #if (${vsl_svc_tp_cd} == 'T')       
    AND T3.VSL_SVC_TP_CD<>'O'           
    #end                                
    #if (${vsl_svc_tp_cd} == 'F')       
    AND T3.VSL_SVC_TP_CD='O'            
    #end                                
    AND T3.DELT_FLG='N'
    AND T3.VSL_TP_CD='C' /* 컨테이너선 */
    AND T2.PORT_CD = T4.LOC_CD(+)
    )T

WHERE	1 = 1

ORDER BY PORT_ROTN_SEQ
) TT			]]></sql>
			<params>
				<param name="vsl_slan_cd" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
