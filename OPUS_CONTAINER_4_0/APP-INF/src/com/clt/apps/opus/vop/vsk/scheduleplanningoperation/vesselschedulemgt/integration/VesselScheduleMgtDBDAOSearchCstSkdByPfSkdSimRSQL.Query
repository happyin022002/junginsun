<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VesselScheduleMgtDBDAOSearchCstSkdByPfSkdSimRSQL">
			<desc><![CDATA[DESC Enter..]]></desc>
			<sql><![CDATA[
SELECT	XX.AUTO_SKD_CNG_FLG
	,	XX.VSL_CD
	,	XX.SKD_VOY_NO
	,	XX.SKD_DIR_CD
	,	XX.VVD
	,	XX.VSL_SLAN_CD
	,	XX.SKD_STS_CD
	,	XX.SKD_VOY_TP_CD
	,	XX.SKD_USD_IND_CD
	,	XX.PF_SKD_TP_CD
	,	XX.ST_PORT_CD
	,	XX.N1ST_PORT_BRTH_DT
	,	XX.PSDO_VVD_CD
	,	XX.CO_CD
	,	XX.SKD_RMK
	,	XX.CRE_USR_ID
	,	XX.CRE_DT
	,	XX.UPD_USR_ID
	,	XX.UPD_DT
	,	XX.VPS_PORT_CD
	,	XX.CLPT_IND_SEQ
	,	XX.CLPT_SEQ
	,	XX.SLAN_CD
	,	XX.PORT_SKD_STS_CD
	,	XX.YD_CD
	,	XX.TML_CD
	,	XX.CALL_YD_IND_SEQ
	,	XX.PF_ETA_DT
	,	XX.PF_ETB_DT
	,	XX.PF_ETD_DT
	,	XX.INIT_ETA_DT
	,	XX.INIT_ETB_DT
	,	XX.INIT_ETD_DT
	,	XX.VPS_ETA_DT
	,	XX.VPS_ETB_DT
	,	XX.VPS_ETD_DT
	,	XX.VSL_DLAY_RSN_CD
	,	XX.VSL_DLAY_RSN_DESC
	,	XX.VSL_DLAY_RSN_LOC_CD
	,	XX.SHP_CALL_NO
	,	XX.SHP_CALL_NO_UPD_USR_ID
	,	XX.TURN_PORT_FLG
	,	XX.TURN_PORT_IND_CD	

	-----------------------------------------------------------------------------------------------------	
	,	CASE 	WHEN XX.TURN_PORT_IND_CD = 'Y' AND XX.VSL_CD||XX.SKD_VOY_NO||XX.SKD_DIR_CD = @[vsl_cd]||@[skd_voy_no]||@[skd_dir_cd] THEN NULL
				WHEN XX.TURN_PORT_IND_CD = 'Y' THEN XX.SKD_VOY_NO
				ELSE ''
		END		TURN_SKD_VOY_NO
	,	CASE 	WHEN XX.TURN_PORT_IND_CD = 'Y' AND XX.VSL_CD||XX.SKD_VOY_NO||XX.SKD_DIR_CD = @[vsl_cd]||@[skd_voy_no]||@[skd_dir_cd] THEN NULL
				WHEN XX.TURN_PORT_IND_CD = 'Y' THEN DECODE(XX.SKD_DIR_CD,'E','W','W','E','N','S','S','N')
				ELSE ''
		END		TURN_SKD_DIR_CD
	-----------------------------------------------------------------------------------------------------

	,	XX.LNK_DIST
	,	XX.LNK_SPD
	,	XX.TZTM_HRS
	,	XX.MNVR_IN_HRS
	,	XX.MNVR_OUT_HRS
	,	XX.CRN_KNT
	,	XX.TML_PROD_QTY
	,	XX.ACT_WRK_HRS
	,	XX.PORT_BUF_HRS
	,	XX.SEA_BUF_HRS
	,	XX.PORT_ROTN_SEQ
	,	XX.ETB_DY_CD
	,	XX.ETB_DY_NO
	,	XX.ETB_TM_HRMNT
	,	XX.ETD_DY_CD
	,	XX.ETD_DY_NO
	,	XX.ETD_TM_HRMNT
	,	XX.PF_SPD
	,	XX.SEA_BUF_SPD
	,	XX.IB_IPCGO_QTY
	,	XX.IB_OCN_CGO_QTY
	,	XX.OB_IPCGO_QTY
	,	XX.OB_OCN_CGO_QTY
	,	XX.PF_SVC_TP_CD
	,	XX.BNK_UNIT_QTY
	,	XX.BNK_UNIT_AMT
	,	XX.PE_USD_TTL_AMT
FROM	(
		--=====================================================================
		SELECT   '1'				AS AUTO_SKD_CNG_FLG
			   , @[vsl_cd] 			AS VSL_CD
		       , @[skd_voy_no] 		AS SKD_VOY_NO
		       , SKD_DIR_CD
		       , @[vsl_cd] || @[skd_voy_no] || SKD_DIR_CD AS VVD
		       , T2.VSL_SLAN_CD
		       , 'ACT' 				AS SKD_STS_CD
		       , '' 				AS SKD_VOY_TP_CD
			   , '' 				AS SKD_USD_IND_CD
		       , T2.PF_SVC_TP_CD 	AS PF_SKD_TP_CD
			   , (
			       SELECT  PORT_CD 
			       FROM    VSK_PF_SKD_DTL 
			       WHERE   VSL_SLAN_CD     = @[vsl_slan_cd]
		           AND     PF_SVC_TP_CD    = @[pf_svc_tp_cd]
		           AND     SKD_DIR_CD      = T2.SKD_DIR_CD
		           AND     PORT_ROTN_SEQ   = (
		                                        SELECT  MIN(PORT_ROTN_SEQ)
		                                        FROM    VSK_PF_SKD_DTL 
		                                        WHERE   VSL_SLAN_CD     = @[vsl_slan_cd]
		                                        AND     PF_SVC_TP_CD    = @[pf_svc_tp_cd]
		                                        AND     SKD_DIR_CD      = T2.SKD_DIR_CD
		                                     )
			     ) AS ST_PORT_CD
			   , '' AS N1ST_PORT_BRTH_DT
		       , '' AS PSDO_VVD_CD
		       , '' AS CO_CD
		       , '' AS SKD_RMK
		       , '' AS CRE_USR_ID
		       , '' AS CRE_DT
		       , '' AS UPD_USR_ID
		       , '' AS UPD_DT
		       , T2.PORT_CD AS VPS_PORT_CD
		       , '' AS CLPT_IND_SEQ
		       , '' AS CLPT_SEQ
			   , T2.VSL_SLAN_CD AS SLAN_CD
		       , '' AS PORT_SKD_STS_CD
		       , YD_CD
		       , DECODE(YD_CD, NULL, '', SUBSTR(YD_CD, 6, 2)) AS TML_CD
		       , '' AS CALL_YD_IND_SEQ
		--if ({pf_etb_dt} != '') 
		       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(NVL(@[pf_etb_dt],@[init_etb_dt]), 1, 8), 'YYYYMMDD') + (ETB_DY_NO - PO_PORT_ETB_DY_NO), 'YYYYMMDD') || ETB_TM_HRMNT, 'YYYYMMDD HH24:MI') - NUMTODSINTERVAL(MNVR_IN_HRS,'HOUR'), 'YYYYMMDDHH24MI') AS PF_ETA_DT
		       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(NVL(@[pf_etb_dt],@[init_etb_dt]), 1, 8), 'YYYYMMDD') + (ETB_DY_NO - PO_PORT_ETB_DY_NO), 'YYYYMMDD') || ETB_TM_HRMNT, 'YYYYMMDD HH24:MI'), 'YYYYMMDDHH24MI') AS PF_ETB_DT
		       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(NVL(@[pf_etb_dt],@[init_etb_dt]), 1, 8), 'YYYYMMDD') + (ETD_DY_NO - PO_PORT_ETB_DY_NO), 'YYYYMMDD') || ETD_TM_HRMNT, 'YYYYMMDD HH24:MI'), 'YYYYMMDDHH24MI') AS PF_ETD_DT
		
		       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(NVL(@[pf_etb_dt],@[init_etb_dt]), 1, 8), 'YYYYMMDD') + (ETB_DY_NO - PO_PORT_ETB_DY_NO), 'YYYYMMDD') || ETB_TM_HRMNT, 'YYYYMMDD HH24:MI') - NUMTODSINTERVAL(MNVR_IN_HRS,'HOUR'), 'YYYYMMDDHH24MI') AS INIT_ETA_DT
		       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(NVL(@[pf_etb_dt],@[init_etb_dt]), 1, 8), 'YYYYMMDD') + (ETB_DY_NO - PO_PORT_ETB_DY_NO), 'YYYYMMDD') || ETB_TM_HRMNT, 'YYYYMMDD HH24:MI'), 'YYYYMMDDHH24MI') AS INIT_ETB_DT
		       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(NVL(@[pf_etb_dt],@[init_etb_dt]), 1, 8), 'YYYYMMDD') + (ETD_DY_NO - PO_PORT_ETB_DY_NO), 'YYYYMMDD') || ETD_TM_HRMNT, 'YYYYMMDD HH24:MI'), 'YYYYMMDDHH24MI') AS INIT_ETD_DT
		       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(NVL(@[pf_etb_dt],@[init_etb_dt]), 1, 8), 'YYYYMMDD') + (ETB_DY_NO - PO_PORT_ETB_DY_NO), 'YYYYMMDD') || ETB_TM_HRMNT, 'YYYYMMDD HH24:MI') - NUMTODSINTERVAL(MNVR_IN_HRS,'HOUR'), 'YYYYMMDDHH24MI') AS VPS_ETA_DT
		       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(NVL(@[pf_etb_dt],@[init_etb_dt]), 1, 8), 'YYYYMMDD') + (ETB_DY_NO - PO_PORT_ETB_DY_NO), 'YYYYMMDD') || ETB_TM_HRMNT, 'YYYYMMDD HH24:MI'), 'YYYYMMDDHH24MI') AS VPS_ETB_DT
		       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(NVL(@[pf_etb_dt],@[init_etb_dt]), 1, 8), 'YYYYMMDD') + (ETD_DY_NO - PO_PORT_ETB_DY_NO), 'YYYYMMDD') || ETD_TM_HRMNT, 'YYYYMMDD HH24:MI'), 'YYYYMMDDHH24MI') AS VPS_ETD_DT
		
		--else 
		
		       --, '' AS PF_ETA_DT
		       --, '' AS PF_ETB_DT
		       --, '' AS PF_ETD_DT
		
		       --, TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')) - NUMTODSINTERVAL(MNVR_IN_HRS,'HOUR'), 'YYYYMMDDHH24MI') AS INIT_ETA_DT
		       --, TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')), 'YYYYMMDDHH24MI') AS INIT_ETB_DT
		       --, TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETD_DY_NO, 'YYYYMMDD') || T2.ETD_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')), 'YYYYMMDDHH24MI') AS INIT_ETD_DT
		       --, TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')) - NUMTODSINTERVAL(MNVR_IN_HRS,'HOUR'), 'YYYYMMDDHH24MI') AS VPS_ETA_DT
		       --, TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')), 'YYYYMMDDHH24MI') AS VPS_ETB_DT
		       --, TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETD_DY_NO, 'YYYYMMDD') || T2.ETD_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')), 'YYYYMMDDHH24MI') AS VPS_ETD_DT
		
		--end
		
		       , '' AS VSL_DLAY_RSN_CD
		       , '' AS VSL_DLAY_RSN_DESC
		       , '' AS VSL_DLAY_RSN_LOC_CD
		       , '' AS SHP_CALL_NO
		       , '' AS SHP_CALL_NO_UPD_USR_ID
		       , TURN_PORT_FLG
		       , TURN_PORT_FLG AS TURN_PORT_IND_CD
		       , LNK_DIST
		       , LNK_SPD
		       , TZTM_HRS
		       , MNVR_IN_HRS
		       , MNVR_OUT_HRS
		       , CRN_KNT
		       , TML_PROD_QTY
		       , ACT_WRK_HRS
		       , NVL(PORT_BUF_HRS, 0) AS PORT_BUF_HRS
		       , NVL(SEA_BUF_HRS, 0) AS SEA_BUF_HRS
		       , PORT_ROTN_SEQ
		       , ETB_DY_CD
		       , ETB_DY_NO
		       , ETB_TM_HRMNT
		       , ETD_DY_CD
		       , ETD_DY_NO
		       , ETD_TM_HRMNT
		       , LNK_SPD AS PF_SPD
		       , SEA_BUF_SPD
		       , IB_IPCGO_QTY
		       , IB_OCN_CGO_QTY
		       , OB_IPCGO_QTY
		       , OB_OCN_CGO_QTY
		       , T2.PF_SVC_TP_CD
		       , (
					SELECT  ROUND((FOC_HR / POWER(SPD_P, 3)) * POWER((T2.LNK_SPD / (1 - (SLIP / 100))), 3) * 24, 1)
					FROM    (
								SELECT  T11.*,
										ROUND(((SPD_P - SPD_O)/SPD_P) * 100, 1)   AS SLIP,
										ROUND(BUNK_CONS / (DIST_O / SPD_O), 2)  AS FOC_HR
								FROM    (
											SELECT  /*+INDEX_DESC(T XPKVSK_NOON_RPT) */
													NXT_PORT_CD     AS NXT_PORT_CD,
													NXT_PORT_ETA_DT AS NXT_PORT_ETA_DT,
													NVGT_DIST       AS DIST_O,
													ENG_ML_DIST     AS DIST_P,
													CRNT_ACT_SPD    AS SPD_O,
													ROUND(ENG_ML_DIST / (NVGT_DIST / CRNT_ACT_SPD),1) AS SPD_P,
													ROUND(FOIL_CSM_WGT)    AS BUNK_CONS
											FROM    VSK_NOON_RPT T
											WHERE   VSL_CD      = @[vsl_cd]
											AND     ROWNUM      = 1
										) T11
							)
		        ) AS BNK_UNIT_QTY
		       , (
		            SELECT  ACT_PRC
		            FROM    VSK_BNK_PRC T11,
		                    (
		                        SELECT  MAX(TO_CHAR(ACT_BRTH_DT, 'YYYYMMDD') || VPS_PORT_CD ) CURR_PORT
		                        FROM    VSK_DEP_RPT
		                        WHERE   VSL_CD          = @[vsl_cd]
		                        AND     SPL_FOIL_WGT    > 0
		                    )
		            WHERE   1 = 1
		            AND     PORT_CD             = SUBSTR(CURR_PORT, 9)
		            AND     FOIL_DOIL_DIV_CD    = 'F'
		            AND     EVNT_DT             = TO_DATE(SUBSTR(CURR_PORT, 1, 8), 'YYYYMMDD')
		        ) AS BNK_UNIT_AMT
		       , (
		            SELECT  SUM(TTL_CHG_AMT)
					FROM    PSO_VSL_CLSS_TRF
					WHERE   BSE_YR      = TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')) - NUMTODSINTERVAL(T2.MNVR_IN_HRS,'HOUR'), 'YYYY')
					AND     BSE_QTR_CD  = TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')) - NUMTODSINTERVAL(T2.MNVR_IN_HRS,'HOUR'), 'Q') || 'Q'
					AND     YD_CD       = T2.YD_CD
					AND     CNTR_VSL_CLSS_CAPA = 
					        (
					            SELECT  CNTR_VSL_CLSS_CAPA
					            FROM    MDM_VSL_CNTR
					            WHERE   VSL_CD      = @[vsl_cd]
					            AND     DELT_FLG    = 'N'
					        )
		        ) AS PE_USD_TTL_AMT
		FROM	(	/* FROM - TO 에 의해 START DATE를 생성한다. */
					SELECT	VSL_SLAN_CD, PF_SVC_TP_CD, CUR_PORT_ROTN_SEQ
							, TO_DATE(@[vps_etd_dt], 'YYYYMMDDHH24MI') +
								(TO_DATE(TO_CHAR(SYSDATE + CUR_ETB_DY_NO, 'YYYYMMDD') || CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')
								- TO_DATE(TO_CHAR(SYSDATE + ETD_DY_NO, 'YYYYMMDD') || ETD_TM_HRMNT, 'YYYYMMDDHH24MI')) AS START_DATE
							, CUR_ETB_DY_NO, CUR_ETB_TM_HRMNT
							, ETB_DY_NO	AS PHASEOUT_PORT_ETB_DY_NO
		
							,	(	SELECT 	PD.ETB_DY_NO 
									FROM 	VSK_PF_SKD_DTL 		PD 
									WHERE 	PD.VSL_SLAN_CD 		= @[vsl_slan_cd]
									AND 	PD.PF_SVC_TP_CD 	= @[pf_svc_tp_cd]
									AND 	PD.PORT_ROTN_SEQ 	= TO_NUMBER(@[port_rotn_seq]))	AS PO_PORT_ETB_DY_NO
							,	PF_N1ST_DIR_CD
							,	PF_N2ND_DIR_CD
					FROM	(
								SELECT	/* Phase Out Port에 ETD와 Next Port에 ETB 를 조회한다. */
										ROW_NUMBER() OVER (ORDER BY PORT_ROTN_SEQ) AS NO
										, PORT_ROTN_SEQ, ETB_DY_NO, ETB_TM_HRMNT, ETD_DY_NO, ETD_TM_HRMNT
										, LAST_VALUE(ETB_DY_NO		) OVER ( ) AS CUR_ETB_DY_NO
										, LAST_VALUE(ETB_TM_HRMNT	) OVER ( ) AS CUR_ETB_TM_HRMNT
										, LAST_VALUE(PORT_ROTN_SEQ	) OVER ( ) AS CUR_PORT_ROTN_SEQ
										, VSL_SLAN_CD
										, PF_SVC_TP_CD
                    					-------------------------------------------------------------------------
                    					--:2016-03-15:--, FIRST_VALUE(SKD_DIR_CD) OVER (ORDER BY PORT_ROTN_SEQ) AS PF_N1ST_DIR_CD
                    					--:2016-03-15:--, LAST_VALUE (SKD_DIR_CD) OVER (ORDER BY PORT_ROTN_SEQ) AS PF_N2ND_DIR_CD

                              			, (SELECT PD.VSL_SLAN_DIR_CD FROM VSK_PF_SKD_DIR PD WHERE PD.VSL_SLAN_CD = T1.VSL_SLAN_CD AND PD.VSL_SLAN_DIR_SEQ = 1) AS PF_N1ST_DIR_CD
                              			, (SELECT PD.VSL_SLAN_DIR_CD FROM VSK_PF_SKD_DIR PD WHERE PD.VSL_SLAN_CD = T1.VSL_SLAN_CD AND PD.VSL_SLAN_DIR_SEQ = 2) AS PF_N2ND_DIR_CD
                    					-------------------------------------------------------------------------
								FROM	VSK_PF_SKD_DTL T1
								WHERE	PORT_ROTN_SEQ	>= (	/* Phase Out Cancel된 Port Seq를 조회한다. */
												SELECT	S.PORT_ROTN_SEQ
												FROM	VSK_PF_SKD_DTL S
												WHERE 	S.VSL_SLAN_CD	= T1.VSL_SLAN_CD
												AND		S.PF_SVC_TP_CD	= T1.PF_SVC_TP_CD
												AND		S.SKD_DIR_CD	= @[skd_dir_cd]
												AND		S.PORT_CD		= @[vps_port_cd]
										)
								AND		T1.VSL_SLAN_CD		= @[vsl_slan_cd]
								AND		T1.PF_SVC_TP_CD		= @[pf_svc_tp_cd]
								AND		T1.TURN_PORT_IND_CD	!= 'F'
								AND		ROWNUM				<= 2
							)
					WHERE	NO	= 1
				) T1, VSK_PF_SKD_DTL T2
		WHERE	1					= 1
		AND		T1.VSL_SLAN_CD		= T2.VSL_SLAN_CD
		AND		T1.PF_SVC_TP_CD		= T2.PF_SVC_TP_CD
		
		-----------------------------------------------------------------------------------------------
		-- Filtering Target Ports except existing vvd already ::2015-04-25::---------------------------
		-----------------------------------------------------------------------------------------------
    	AND   	'*'               	= CASE 	WHEN T1.PF_N2ND_DIR_CD = @[skd_dir_cd]	THEN '*'
                                   			WHEN (	SELECT COUNT(1)
                                         			FROM   VSK_VSL_PORT_SKD  		PS
                                         			WHERE  PS.VSL_CD         		=  @[vsl_cd]
                                         			AND    PS.SKD_VOY_NO     		=  @[skd_voy_no]
                                         			AND    PS.SKD_DIR_CD     		<> @[skd_dir_cd]
                                         		 ) = 0 								THEN '*'
											WHEN T2.SKD_DIR_CD	   = @[skd_dir_cd]  THEN '*'
                                   			ELSE 'N/A'
                               			END
		-----------------------------------------------------------------------------------------------

		--::2015-04-23::--AND		T2.PORT_ROTN_SEQ	>= CUR_PORT_ROTN_SEQ
		AND		T2.PORT_ROTN_SEQ	> TO_NUMBER(@[port_rotn_seq])
		
		AND		T2.TURN_PORT_IND_CD != 'F'
		ORDER BY T2.PORT_ROTN_SEQ		
		--=====================================================================
		) 	XX			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="vsl_slan_cd" type="12" value="" out="N"/>
				<param name="pf_svc_tp_cd" type="12" value="" out="N"/>
				<param name="pf_etb_dt" type="12" value="" out="N"/>
				<param name="init_etb_dt" type="12" value="" out="N"/>
				<param name="vps_etd_dt" type="12" value="" out="N"/>
				<param name="port_rotn_seq" type="12" value="" out="N"/>
				<param name="vps_port_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
