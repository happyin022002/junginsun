<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ActualScheduleMgtDBDAOActSkdSumRSQL">
			<desc><![CDATA[ActualScheduleMgtDBDAO의 데이타 모델에 해당되는 값을 불러온다.
사용자가 입력한 조건에 맞는 Port들에 Actual Report 입력 현황을 조회한다.]]></desc>
			<sql><![CDATA[
SELECT  TARGET_LANE_CNT
        , TARGET_VVD_CNT
        , TTL_PORT_CNT
        , INPUTTED_CNT
        , OVER_INPUT_CNT
        , CASE WHEN GROUPING1 = 1 AND GROUPING2 = 1 AND GROUPING3 = 1 THEN ' '
               ELSE DECODE(RHQ, 'ZZZ', NULL, RHQ)
          END                                                                                   AS RHQ
        , CASE WHEN GROUPING1 = 1 AND GROUPING2 = 1 AND GROUPING3 = 1 THEN 'Grand Total' 
               WHEN GROUPING1 = 0 AND GROUPING2 = 1 AND GROUPING3 = 1 THEN ' '
               ELSE DECODE(CTRL_OFC, 'ZZZ', NULL, CTRL_OFC)
          END                                                                                   AS CTRL_OFC
        , CASE WHEN GROUPING1 = 1 AND GROUPING2 = 1 AND GROUPING3 = 1 THEN ' '
               WHEN GROUPING1 = 0 AND GROUPING2 = 1 AND GROUPING3 = 1 THEN 'Sub Total'
               ELSE PORT_CD
          END                                                                                   AS PORT_CD
        , ROUND(( INPUTTED_CNT / TTL_PORT_CNT ) * 100, 1)                                       AS INPUT_RTO
        , ROUND(DECODE(OVER_INPUT_CNT, 0, 0, (OVER_INPUT_CNT / INPUTTED_CNT) ) * 100, 1)        AS OVERDUE_RTO
        , CASE WHEN INPUTTED_CNT = 0 THEN 0
               ELSE 100 - ROUND(DECODE(OVER_INPUT_CNT, 0, 0, (OVER_INPUT_CNT / INPUTTED_CNT) ) * 100, 1)
          END  AS OBSERVANCE_RTO
FROM    (
        SELECT  GROUPING(NVL(T4.VSKD_PORT_RHQ_CD          , 'ZZZ'))                                                               AS GROUPING1
                , GROUPING(NVL(T4.SLS_OFC_CD             , 'ZZZ'))                                                               AS GROUPING2
                , GROUPING(NVL(T2.VPS_PORT_CD            , 'ZZZ'))                                                               AS GROUPING3
                , NVL(T4.VSKD_PORT_RHQ_CD                 , 'ZZZ')                                                                AS RHQ
                , NVL(T4.SLS_OFC_CD                      , 'ZZZ')                                                                AS CTRL_OFC
                , NVL(T2.VPS_PORT_CD                     , 'ZZZ')                                                                AS PORT_CD
                , COUNT(DISTINCT T4.VSKD_PORT_RHQ_CD||T4.SLS_OFC_CD||T2.VPS_PORT_CD||T1.VSL_SLAN_CD)                              AS TARGET_LANE_CNT
                , COUNT(DISTINCT T4.VSKD_PORT_RHQ_CD||T4.SLS_OFC_CD||T2.VPS_PORT_CD||T1.VSL_CD||T1.SKD_VOY_NO||T1.SKD_DIR_CD)     AS TARGET_VVD_CNT
                , SUM(DECODE(T3.PORT_SKD_STS_CD, 'D', 1, 0))                                                                     AS INPUTTED_CNT
                , SUM(1)                                                                                                         AS TTL_PORT_CNT
                , SUM(DECODE(SIGN(T3.ACT_ATD_INP_DT + ((T4.GMT_HRS - T5.GMT_HRS ) / 60 / 24 ) - ( ACT_DEP_DT + 1)), 1, 1, 0))    AS OVER_INPUT_CNT
                , ROW_NUMBER() OVER (ORDER BY NVL(T4.VSKD_PORT_RHQ_CD, 'ZZZ'))                                                    AS SEQ01
                , ROW_NUMBER() OVER (PARTITION BY NVL(T4.VSKD_PORT_RHQ_CD, 'ZZZ') ORDER BY NVL(T4.SLS_OFC_CD, 'ZZZ') )            AS SEQ02
        FROM    VSK_VSL_SKD        T1
                , VSK_VSL_PORT_SKD T2
                , (SELECT * FROM VSK_ACT_PORT_SKD WHERE PORT_SKD_STS_CD = 'D') T3
                ----, MDM_LOCATION     T4
                , (SELECT     X.LOC_CD
                           ,  X.SLS_OFC_CD
                           ,  NVL(X.VSKD_PORT_RHQ_CD,Y.AR_HD_QTR_OFC_CD) AS VSKD_PORT_RHQ_CD
                           ,  X.GMT_HRS
                   FROM       MDM_LOCATION           X
                           ,  MDM_ORGANIZATION       Y
                   WHERE      1 = 1
                   AND        X.LOC_CD               = Y.LOC_CD
                   AND        X.DELT_FLG             = 'N'
                  )                T4
                , MDM_LOCATION     T5
                , MDM_VSL_SVC_LANE T6
        WHERE   1                       = 1
        AND     T1.VSL_CD               = T2.VSL_CD
        AND     T1.SKD_VOY_NO           = T2.SKD_VOY_NO
        AND     T1.SKD_DIR_CD           = T2.SKD_DIR_CD
        AND     T2.VSL_CD               = T3.VSL_CD         (+)
        AND     T2.SKD_VOY_NO           = T3.SKD_VOY_NO     (+)
        AND     T2.SKD_DIR_CD           = T3.SKD_DIR_CD     (+)
        AND     T2.VPS_PORT_CD          = T3.VPS_PORT_CD    (+)
        AND     T2.CLPT_IND_SEQ         = T3.CLPT_IND_SEQ   (+)
        AND     T1.VSL_SLAN_CD          = T6.VSL_SLAN_CD
        AND     T2.VPS_ETD_DT           BETWEEN TO_DATE(@[fm_dt], 'YYYY-MM-DD')
                                        AND     TO_DATE(@[to_dt], 'YYYY-MM-DD') + 0.99999           
        AND     T2.TURN_PORT_IND_CD     NOT IN ('D', 'V', 'F')
        AND     'S'                     !=NVL(T2.SKD_CNG_STS_CD, ' ')
        AND     T2.VPS_PORT_CD          = T4.LOC_CD
        AND     T5.LOC_CD               = (SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL WHERE INTG_CD_ID='CD20070' AND INTG_CD_VAL_CTNT=1) -- Actual SKD Input Basic Location Code
        AND     T1.SKD_STS_CD           IN ('ACT', 'CLO')
        AND     T6.VSL_SLAN_CD         != 'GBA'
        AND     T6.VSL_TP_CD       = 'C'
#if (${vsl_cd} != '')
		AND     T1.VSL_CD          = @[vsl_cd]
#end
#if (${skd_voy_no} != '')
		AND     T1.SKD_VOY_NO      = @[skd_voy_no]
#end
#if (${skd_dir_cd} != '')
		AND     T1.SKD_DIR_CD      = @[skd_dir_cd]
#end
#if (${vps_port_cd} != '')
        AND     T2.VPS_PORT_CD          LIKE @[vps_port_cd] || '%'
#end
#if (${vskd_port_rhq_cd} != '' && ${vskd_port_rhq_cd} != 'ALL')
        AND     T4.VSKD_PORT_RHQ_CD     = @[vskd_port_rhq_cd]
#end
#if (${sls_ofc_cd} != '' && ${sls_ofc_cd} != 'ALL')
        AND     T4.SLS_OFC_CD          = @[sls_ofc_cd]
#end
#if (${vsl_svc_tp_cd} == 'O')
        AND     T6.VSL_SVC_TP_CD            = 'O'
#elseif (${vsl_svc_tp_cd} == 'T') 
        AND     NVL(T6.VSL_SVC_TP_CD, ' ') != 'O'
#end
		AND	(	T6.VSL_SVC_TP_CD != 'O'    /* IF NOT Feeder */
				OR
				(                          /* IF Feeder */
					T6.VSL_SVC_TP_CD = 'O' AND
					EXISTS (
                       SELECT  'X'
                       FROM    BKG_VVD S1, BKG_BOOKING S2
                       WHERE   1   = 1
                       AND     S1.BKG_NO            = S2.BKG_NO
                       AND     S1.VSL_CD            = T2.VSL_CD
                       AND     S1.SKD_VOY_NO        = T2.SKD_VOY_NO
                       AND     S1.SKD_DIR_CD        = T2.SKD_DIR_CD
                       AND   ((S1.POL_CD = T2.VPS_PORT_CD AND S1.POL_CLPT_IND_SEQ = T2.CLPT_IND_SEQ)
                           OR (S1.POD_CD = T2.VPS_PORT_CD AND S1.POD_CLPT_IND_SEQ = T2.CLPT_IND_SEQ))
                       AND     S2.BKG_STS_CD        !='X'              /* Exclude Cancel-Booking */
                       AND     S2.BKG_CGO_TP_CD     = 'F'              /* FULL BOOKING        */
                       AND     ROWNUM               = 1
					)
				)
			)
		AND T2.VPS_PORT_CD NOT IN ('EGSCA', 'PAPCA') -- CANAL TRANSIT PORT CODE
        GROUP BY ROLLUP (NVL(T4.VSKD_PORT_RHQ_CD, 'ZZZ'), NVL(T4.SLS_OFC_CD, 'ZZZ'), NVL(T2.VPS_PORT_CD, 'ZZZ'))
) T1
WHERE   GROUPING1 + GROUPING2 + GROUPING3 != 1

ORDER BY SEQ01, SEQ02			]]></sql>
			<params>
				<param name="fm_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="vps_port_cd" type="12" value="" out="N"/>
				<param name="vskd_port_rhq_cd" type="12" value="" out="N"/>
				<param name="sls_ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
