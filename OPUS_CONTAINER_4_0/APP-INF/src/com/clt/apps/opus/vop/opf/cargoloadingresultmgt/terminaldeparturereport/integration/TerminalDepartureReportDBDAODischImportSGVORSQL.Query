<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TerminalDepartureReportDBDAODischImportSGVORSQL">
			<desc><![CDATA[SC Import]]></desc>
			<sql><![CDATA[
SELECT 		COM_ConstantMgr_PKG.COM_getCompanyCode_FNC()   OPR_CD 
       ,	POD_CD AS POD 
       
       --,	SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 1, 0), 0))                         	DG_20_QTY 
       --,	ROUND( SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, CNTR_WGT, 0), 0))/1000, 1)  	DG_20_WGT 
       --,	SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, 1), 0))                         	DG_40_QTY 
       --,	ROUND( SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, CNTR_WGT), 0))/1000, 1)  	DG_40_WGT 
       --,	SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 1, 0), 0))                           	RF_20_QTY 
       --,	ROUND( SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, CNTR_WGT, 0), 0))/1000, 1)    	RF_20_WGT 
       --,	SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, 1), 0))                           	RF_40_QTY 
       --,	ROUND( SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, CNTR_WGT), 0))/1000, 1)    	RF_40_WGT 
       --,	SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 1, 0), 0))                      	AK_20_QTY 
       --,	ROUND( SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, CNTR_WGT, 0), 0))/1000, 1) AK_20_WGT 
       --,	SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, 1), 0))                      	AK_40_QTY 
       --,	ROUND( SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, CNTR_WGT), 0))/1000, 1) AK_40_WGT
       
       ,	ROUND((SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 1, 0), 0)) 			+ SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'A', 1, 0),0)))					,2)	DG_20_QTY 
       ,	ROUND((SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, CNTR_WGT, 0), 0)) 	+ SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'A', CNTR_WGT, 0), 0)))/1000		,2)	DG_20_WGT 
       ,	ROUND((SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, 1), 0)) 			+ SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'B', 0, 1), 0)))					,2) DG_40_QTY 
       ,	ROUND((SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, CNTR_WGT), 0)) 	+ SUM(DECODE(DCGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'B', 0, CNTR_WGT), 0)))/1000		,2) DG_40_WGT 
       ,	ROUND((SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 1, 0), 0))				+ SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'A', 1, 0), 0)))					,2) RF_20_QTY 
       ,	ROUND((SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, CNTR_WGT, 0), 0))		+ SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'A', CNTR_WGT, 0), 0)))/1000		,2) RF_20_WGT 
       ,	ROUND((SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, 1), 0))				+ SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'B', 0, 1), 0)))					,2) RF_40_QTY 
       ,	ROUND((SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, CNTR_WGT), 0))		+ SUM(DECODE(RC_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'B', 0, CNTR_WGT), 0)))/1000		,2) RF_40_WGT 
       ,	ROUND((SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 1, 0), 0)) 		+ SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'A', 1, 0), 0)))				,2) AK_20_QTY 
       ,	ROUND((SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, CNTR_WGT, 0), 0)) + SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'A', CNTR_WGT, 0), 0)))/1000	,2) AK_20_WGT
       ,	ROUND((SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, 1), 0)) 		+ SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'B', 0, 1), 0)))				,2) AK_40_QTY 
       ,	ROUND((SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 2, 0, CNTR_WGT), 0)) + SUM(DECODE(AWK_CGO_FLG, 'Y', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'B', 0, CNTR_WGT), 0)))/1000	,2) AK_40_WGT
       
       
FROM   ( 	SELECT V.POD_CD,  C.DCGO_FLG,  C.RC_FLG,  C.AWK_CGO_FLG,  C.CNTR_TPSZ_CD,  C.CNTR_NO,  C.CNTR_WGT
         	FROM   VSK_VSL_PORT_SKD S,  BKG_VVD V,  BKG_CONTAINER C,  BKG_BOOKING B
         	WHERE  S.VSL_CD       = @[vsl_cd]
         	AND    S.SKD_VOY_NO   = @[voy_no]
         	AND    S.SKD_DIR_CD   = @[dir_cd]
         	AND    S.YD_CD        = @[yd_cd]
         	AND    S.CLPT_IND_SEQ = @[clpt_ind_seq]
         	AND    S.VSL_CD       = V.VSL_CD
         	AND    S.SKD_VOY_NO   = V.SKD_VOY_NO
         	AND    S.SKD_DIR_CD   = V.SKD_DIR_CD
         	AND    S.VPS_PORT_CD  = V.POD_CD
         	AND    S.CLPT_IND_SEQ = NVL(V.POD_CLPT_IND_SEQ, 1)
         	AND    V.BKG_NO       = C.BKG_NO
         	AND    V.BKG_NO       = B.BKG_NO
         	AND    NVL(B.BKG_STS_CD, 'N') NOT IN ('X', 'A')
         	AND    DECODE(C.DCGO_FLG, 'Y', 'Y', DECODE(C.RC_FLG, 'Y', 'Y', DECODE(C.AWK_CGO_FLG, 'Y', 'Y', 'N'))) = 'Y'

         	UNION ALL

         	SELECT V.POD_CD,  C.DCGO_FLG,  C.RC_FLG,  C.AWK_CGO_FLG,  C.CNTR_TPSZ_CD,  C.CNTR_NO,  C.CNTR_WGT
         	FROM   VSK_VSL_PORT_SKD S,  BKG_VVD V,  BKG_CONTAINER C,  BKG_BOOKING B
         	WHERE  S.VSL_CD            = @[vsl_cd]
         	AND    S.SKD_VOY_NO        = @[voy_no]
         	AND    S.SKD_DIR_CD        = @[dir_cd]
         	AND    S.YD_CD             = @[yd_cd]
         	AND    S.CLPT_IND_SEQ = @[clpt_ind_seq]
         	AND    S.TURN_PORT_FLG     = 'Y'
         	AND    S.VSL_CD            = V.VSL_CD
         	AND    S.TURN_SKD_VOY_NO   = V.SKD_VOY_NO
         	AND    S.TURN_SKD_DIR_CD   = V.SKD_DIR_CD
         	AND    S.VPS_PORT_CD       = V.POD_CD
         	AND    S.TURN_CLPT_IND_SEQ = NVL(V.POD_CLPT_IND_SEQ, 1)
         	AND    V.BKG_NO            = C.BKG_NO
         	AND    V.BKG_NO            = B.BKG_NO
         	AND    NVL(B.BKG_STS_CD, 'N') NOT IN ('X', 'A')
         	AND    DECODE(C.DCGO_FLG, 'Y', 'Y', DECODE(C.RC_FLG, 'Y', 'Y', DECODE(C.AWK_CGO_FLG, 'Y', 'Y', 'N'))) = 'Y' 
)
GROUP BY 	POD_CD
ORDER BY 	OPR_CD
		, 	POD_CD
 
 			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="voy_no" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="clpt_ind_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
