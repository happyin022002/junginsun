<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TerminalDepartureReportDBDAOTerminalDepartureReportVORSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
SELECT PORT,
       DECODE(C2,3,'S.Total',YARD) YARD,
       DECODE(C2,3,'',LANE) LANE,
       DECODE(C2,3,'',VVD) VVD,
       DECODE(C2,3,'',ATA) ATA,
       DECODE(C2,3,'',ATD) ATD,
       DECODE(C2,3,'',MONTH) MONTH,
       DECODE(C2,3,'',TDR_QTY) TDR_QTY,
       TOT_MVS,
       WORK_GROSS,
       GANG_GROSS,
       TMNL_PROD,
       GANG_PROD,
       AVG_CLAN,
       DECODE(C2,3,'',TML_PROD_RPT_RSN_CD) TML_PROD_RPT_RSN_CD
FROM   (
         SELECT DECODE(C2,1,'Total',2,'Average per TDR',PORT) PORT,
                DECODE(C2,1,'',2,'Average per TDR',YARD) YARD,
                DECODE(C2,1,'',2,'',LANE) LANE,
                C2,
                DECODE(VVD,'N',DECODE(C2,1,'',2,'',NULL), NVL(VVD, ''))   VVD,
                DECODE(C2,1,'',2,'', TO_CHAR(ATA,'yyyy-mm-dd'))                ATA,
                DECODE(C2,1,'',2,'', TO_CHAR(ATD,'yyyy-mm-dd'))                ATD,
                DECODE(C2,1,'',2,'','') MONTH,
                DECODE(C2,1,'',2,'','') TDR_QTY,
                TOT_MVS,
                WORK_GROSS,
                GANG_GROSS,
                TMNL_PROD,
                GANG_PROD,
                AVG_CLAN,
                DECODE(C2,1,'',2,'', TML_PROD_RPT_RSN_CD)                TML_PROD_RPT_RSN_CD
         FROM   ( 
                  /* Q1 */
                  SELECT PORT,
                         YARD,
                         LANE,
                         VVD,
                         ATA,
                         ATD,
                         DECODE(C3,1,3,C2) AS C2,
                         TOT_MVS,
                         WORK_GROSS,
                         GANG_GROSS,
                         DECODE(WORK_GROSS,0,0,ROUND(TOT_MVS/WORK_GROSS,2))     TMNL_PROD,
                         DECODE(GANG_GROSS,0,0,ROUND(TOT_MVS/GANG_GROSS,2))     GANG_PROD,
                         DECODE(WORK_GROSS,0,0,ROUND(GANG_GROSS/WORK_GROSS,2))  AVG_CLAN,
                         --ROUND(TOT_MVS/DECODE(WORK_GROSS,0,1,WORK_GROSS),2)    TMNL_PROD,
                         --ROUND(TOT_MVS/DECODE(GANG_GROSS,0,1,GANG_GROSS),2)    GANG_PROD,
                         --ROUND(GANG_GROSS/DECODE(WORK_GROSS,0,1,WORK_GROSS),2) AVG_CLAN,
                         TML_PROD_RPT_RSN_CD
                  FROM   ( SELECT /*+ ORDERED */ PORT,
                        YARD,
                        LANE,
                        VVD,
                        MAX(ATA) ATA,
                        MAX(ATD) ATD,
                        CASE
                        WHEN GROUPING(PORT)=0 AND GROUPING(YARD)=0 AND GROUPING(LANE)=0 AND GROUPING(VVD)=0 THEN 1
                        ELSE 0
                        END C1,
                        CASE
                          WHEN GROUPING(PORT)=0 AND GROUPING(YARD)=0 AND GROUPING(LANE)=1 AND GROUPING(VVD)=1 THEN 1
                          ELSE 0
                        END C3,
                        CASE
                          WHEN GROUPING(PORT)=1 AND GROUPING(YARD)=1 AND GROUPING(LANE)=1 AND GROUPING(VVD)=1 THEN 1
                          ELSE 0
                        END C2,
                        NVL(COUNT(VVD),0) TDR_QTY,
                        NVL(SUM(MVS),0) TOT_MVS,
                        ROUND(SUM(NVL(TO_NUMBER(SUBSTR(GROSS_WORK,1,INSTR(GROSS_WORK,':')-1))+TO_NUMBER(SUBSTR(GROSS_WORK,INSTR(GROSS_WORK,':')+1)/60),0)),2) WORK_GROSS,
                        ROUND(SUM(NVL(TO_NUMBER(SUBSTR(GROSS_GANG,1,INSTR(GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(GROSS_GANG,INSTR(GROSS_GANG,':')+1)/60),0)),2) GANG_GROSS,
                        MAX(TML_PROD_RPT_RSN_CD) TML_PROD_RPT_RSN_CD
                      FROM
                        (SELECT MAX(V.VPS_PORT_CD) PORT,
                          MAX(V.YD_CD) YARD,
                          MAX(V.SLAN_CD) LANE,
                          MAX(T.VSL_CD
                          ||T.VOY_NO
                          ||T.DIR_CD) VVD,
                          MAX(A.ACT_ARR_DT) ATA,
                          MAX(A.ACT_DEP_DT) ATD,
                          MAX(T.MVS) MVS,
                          MAX(T.GROSS_WORK) GROSS_WORK,
                          MAX(T.GROSS_GANG) GROSS_GANG,
                          MAX(D.TML_PROD_RPT_RSN_CD) TML_PROD_RPT_RSN_CD
                           FROM   TDR_HEADER       T, VSK_VSL_PORT_SKD V, VSK_ACT_PORT_SKD    A,
                                  MDM_VSL_SVC_LANE L, OPF_TML_DEP_RPT_DTL D,
--::20150428::CodeValidate Process Delete(FMS_CONTRACT, FMS_ID_VSL)
                                      ( 
                                        SELECT  LOC_CD, POR_RHQ, TP, VOP_PORT_FLG
                                        FROM    
                                        ( 
                          SELECT ML.LOC_CD,  NVL(ML.VSKD_PORT_RHQ_CD,MO.AR_HD_QTR_OFC_CD) AS POR_RHQ
                                ,DECODE(NVL(ML.VSKD_PORT_RHQ_CD,MO.AR_HD_QTR_OFC_CD),NULL,'A','B') TP
                                ,VOP_PORT_FLG
                          FROM   MDM_LOCATION       ML
                                ,MDM_ORGANIZATION   MO
                          WHERE  1=1
                          AND    ML.LOC_CD          = MO.LOC_CD
                          AND    ML.CALL_PORT_FLG   = 'Y'
                          AND    ML.DELT_FLG        = 'N'
                          --::20150406::--AND    VSKD_PORT_RHQ_CD IS NOT NULL
                                        )
                                        WHERE   POR_RHQ = DECODE(SUBSTR(@[rhq], 1, 3), 'ALL', POR_RHQ, @[rhq])
                           ) R
                           WHERE  T.VSL_CD       = V.VSL_CD
                           AND    T.VOY_NO       = V.SKD_VOY_NO
                           AND    T.DIR_CD       = V.SKD_DIR_CD
                           AND    T.PORT_CD      = V.VPS_PORT_CD
                           AND    T.CALL_IND     = V.CLPT_IND_SEQ
                           AND    V.VSL_CD       = A.VSL_CD
                           AND    V.SKD_VOY_NO   = A.SKD_VOY_NO
                           AND    V.SKD_DIR_CD   = A.SKD_DIR_CD
                           AND    V.VPS_PORT_CD  = A.VPS_PORT_CD
                           AND    V.CLPT_IND_SEQ = A.CLPT_IND_SEQ
                           AND    V.SLAN_CD      = L.VSL_SLAN_CD
                           --AND    V.VSL_CD       = C.VSL_CD(+)
                           AND    V.VPS_PORT_CD  = R.LOC_CD 
                           AND    T.VSL_CD       = D.VSL_CD(+)
                           AND    T.VOY_NO       = D.SKD_VOY_NO(+)
                           AND    T.DIR_CD       = D.SKD_DIR_CD(+)
                           AND    T.PORT_CD      = D.CLPT_CD(+)
                           AND    T.CALL_IND     = D.CLPT_IND_SEQ(+)
                           AND    T.COMMENCE     IS NOT NULL
                           AND    T.MVS          > 0
                           AND    ( REPLACE(@[from_date],'-','') BETWEEN TO_CHAR(A.ACT_DEP_DT, 'yyyymm') AND TO_CHAR(A.ACT_DEP_DT, 'yyyymm')  --:fm_dt
                                    OR REPLACE(@[to_date],'-','') BETWEEN TO_CHAR(A.ACT_DEP_DT, 'yyyymm') AND TO_CHAR(A.ACT_DEP_DT, 'yyyymm')  --:to_dt
                                    OR ( TO_CHAR(A.ACT_DEP_DT,'YYYYMM') >= REPLACE(@[from_date],'-','') AND    TO_CHAR(A.ACT_DEP_DT,'YYYYMM') <= REPLACE(@[to_date],'-','') ) ) --:fm_dt, :to_dt
#if (${loc_cd} != '')
                           AND    V.VPS_PORT_CD  LIKE @[loc_cd]||'%'                                                            --:port_cd
#end
#if (${yd_cd} != '')
                           AND    V.YD_CD        LIKE @[yd_cd]||'%'                                                             --:yd_cd
#end
                           AND    R.POR_RHQ      = DECODE(@[rhq], 'ALL', R.POR_RHQ, @[rhq])                                      --:rhq_cd
#if (${slan_cd} != 'ALL')
                           AND    V.SLAN_CD      = @[slan_cd]                                                                    --:Lane_cd
#end
#if (${target_lanes} != 'ALL')
                           AND    L.TML_PROD_RPT_FLG LIKE @[target_lanes]||'%'                                                --Target Lanes Only 일경우 'Y', ALL일 경우 NULL
#end
#if (${target_ports} != 'ALL')
                           AND    R.TP           LIKE @[target_ports]||'%'                                                    --Target Ports Only 일경우 'B', ALL일 경우 NULL
                           AND    R.VOP_PORT_FLG = 'Y'
#end
#if (${tml_prod_rpt_rsn_cd} != '')
                           AND    DECODE(D.TML_PROD_RPT_RSN_CD,NULL,'Y','N') = DECODE(@[tml_prod_rpt_rsn_cd],'N','Y','N')       --Exclude fm TPR이 Check되었을 경우 'Y', Check되지 않았을 경우 'N'
#else
                           AND    DECODE(D.TML_PROD_RPT_RSN_CD,NULL,'Y','N') = DECODE('N','N','Y','N')       --Exclude fm TPR이 Check되었을 경우 'Y', Check되지 않았을 경우 'N'
#end                           
                            --:car_cd                    
                        GROUP BY ( V.VPS_PORT_CD, V.YD_CD, V.SLAN_CD, T.VSL_CD||T.VOY_NO||T.DIR_CD )
                       )
                       GROUP BY ROLLUP( PORT, YARD, LANE, VVD) 
                  )
                  WHERE C1 = 1 OR C2 = 1 OR C3 = 1
                  /* Q1 */
                  UNION ALL
                  /* Q2 */
                  SELECT 'N'     PORT,
                         'N'     YARD,
                         'N'     LANE,
                         'N'     VVD,
                         SYSDATE ATA,
                         SYSDATE ATD,
                         2       C2,
                         ROUND(TOT_MVS/TDR_QTY,2) TOT_MVS,
                         ROUND(WORK_GROSS/TDR_QTY,2) WORK_GROSS,
                         ROUND(GANG_GROSS/TDR_QTY,2) GANG_GROSS,
                         DECODE(WORK_GROSS,0,0,ROUND(TOT_MVS/WORK_GROSS,2))     TMNL_PROD,
                         DECODE(GANG_GROSS,0,0,ROUND(TOT_MVS/GANG_GROSS,2))     GANG_PROD,
                         DECODE(WORK_GROSS,0,0,ROUND(GANG_GROSS/WORK_GROSS,2))  AVG_CLAN,
                         'N'     TML_PROD_RPT_RSN_CD
                  FROM   ( SELECT /*+ ORDERED */ PORT,
                        YARD,
                        LANE,
                        VVD,
                        MAX(ATA) ATA,
                        MAX(ATD) ATD,
                        CASE
                        WHEN GROUPING(PORT)=0 AND GROUPING(YARD)=0 AND GROUPING(LANE)=0 AND GROUPING(VVD)=0 THEN 1
                        ELSE 0
                        END C1,
                        CASE
                          WHEN GROUPING(PORT)=0 AND GROUPING(YARD)=0 AND GROUPING(LANE)=1 AND GROUPING(VVD)=1 THEN 1
                          ELSE 0
                        END C3,
                        CASE
                          WHEN GROUPING(PORT)=1 AND GROUPING(YARD)=1 AND GROUPING(LANE)=1 AND GROUPING(VVD)=1 THEN 1
                          ELSE 0
                        END C2,
                        NVL(COUNT(VVD),0) TDR_QTY,
                        NVL(SUM(MVS),0) TOT_MVS,
                        ROUND(SUM(NVL(TO_NUMBER(SUBSTR(GROSS_WORK,1,INSTR(GROSS_WORK,':')-1))+TO_NUMBER(SUBSTR(GROSS_WORK,INSTR(GROSS_WORK,':')+1)/60),0)),2) WORK_GROSS,
                        ROUND(SUM(NVL(TO_NUMBER(SUBSTR(GROSS_GANG,1,INSTR(GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(GROSS_GANG,INSTR(GROSS_GANG,':')+1)/60),0)),2) GANG_GROSS,
                        MAX(TML_PROD_RPT_RSN_CD) TML_PROD_RPT_RSN_CD
                      FROM
                        (SELECT MAX(V.VPS_PORT_CD) PORT,
                          MAX(V.YD_CD) YARD,
                          MAX(V.SLAN_CD) LANE,
                          MAX(T.VSL_CD
                          ||T.VOY_NO
                          ||T.DIR_CD) VVD,
                          MAX(A.ACT_ARR_DT) ATA,
                          MAX(A.ACT_DEP_DT) ATD,
                          MAX(T.MVS) MVS,
                          MAX(T.GROSS_WORK) GROSS_WORK,
                          MAX(T.GROSS_GANG) GROSS_GANG,
                          MAX(D.TML_PROD_RPT_RSN_CD) TML_PROD_RPT_RSN_CD
                           FROM   TDR_HEADER       T, VSK_VSL_PORT_SKD V, VSK_ACT_PORT_SKD    A,
                                  MDM_VSL_SVC_LANE L, OPF_TML_DEP_RPT_DTL D,
--::20150428::CodeValidate Process Delete(FMS_CONTRACT, FMS_ID_VSL)
                                  ( 
                                    SELECT  LOC_CD, POR_RHQ, TP, VOP_PORT_FLG
                                    FROM    (
                                            SELECT LOC_CD, VOP_PORT_RHQ_CD AS POR_RHQ, DECODE(VOP_PORT_RHQ_CD,NULL,'A','B') TP, VOP_PORT_FLG
                                            FROM   MDM_LOCATION
                                            WHERE  1=1
                                            AND    CALL_PORT_FLG = 'Y'
                                            AND    VSKD_PORT_RHQ_CD IS NOT NULL
                                            )
                                    WHERE   POR_RHQ = DECODE(SUBSTR(@[rhq], 1, 3), 'ALL', POR_RHQ, @[rhq])
                           ) R
                           WHERE  T.VSL_CD       = V.VSL_CD
                           AND    T.VOY_NO       = V.SKD_VOY_NO
                           AND    T.DIR_CD       = V.SKD_DIR_CD
                           AND    T.PORT_CD      = V.VPS_PORT_CD
                           AND    T.CALL_IND     = V.CLPT_IND_SEQ
                           AND    V.VSL_CD       = A.VSL_CD
                           AND    V.SKD_VOY_NO   = A.SKD_VOY_NO
                           AND    V.SKD_DIR_CD   = A.SKD_DIR_CD
                           AND    V.VPS_PORT_CD  = A.VPS_PORT_CD
                           AND    V.CLPT_IND_SEQ = A.CLPT_IND_SEQ
                           AND    V.SLAN_CD      = L.VSL_SLAN_CD
                           --AND    V.VSL_CD       = C.VSL_CD(+)
                           AND    V.VPS_PORT_CD  = R.LOC_CD 
                           AND    T.VSL_CD       = D.VSL_CD(+)
                           AND    T.VOY_NO       = D.SKD_VOY_NO(+)
                           AND    T.DIR_CD       = D.SKD_DIR_CD(+)
                           AND    T.PORT_CD      = D.CLPT_CD(+)
                           AND    T.CALL_IND     = D.CLPT_IND_SEQ(+)
                           AND    T.COMMENCE     IS NOT NULL
                           AND    T.MVS          > 0
                           AND    ( REPLACE(@[from_date],'-','') BETWEEN TO_CHAR(A.ACT_DEP_DT, 'yyyymm') AND TO_CHAR(A.ACT_DEP_DT, 'yyyymm')  --:fm_dt
                                    OR REPLACE(@[to_date],'-','') BETWEEN TO_CHAR(A.ACT_DEP_DT, 'yyyymm') AND TO_CHAR(A.ACT_DEP_DT, 'yyyymm')  --:to_dt
                                    OR ( TO_CHAR(A.ACT_DEP_DT,'YYYYMM') >= REPLACE(@[from_date],'-','') AND    TO_CHAR(A.ACT_DEP_DT,'YYYYMM') <= REPLACE(@[to_date],'-','') ) ) --:fm_dt, :to_dt
#if (${loc_cd} != '')
                           AND    V.VPS_PORT_CD  LIKE @[loc_cd]||'%'                                                            --:port_cd
#end
#if (${yd_cd} != '')
                           AND    V.YD_CD        LIKE @[yd_cd]||'%'                                                             --:yd_cd
#end
                           AND    R.POR_RHQ      = DECODE(@[rhq], 'ALL', R.POR_RHQ, @[rhq])   
                                   --:rhq_cd
#if (${slan_cd} != 'ALL')
                           AND    V.SLAN_CD      = @[slan_cd]                                                                    --:Lane_cd
#end
#if (${target_lanes} != 'ALL')
                           AND    L.TML_PROD_RPT_FLG LIKE @[target_lanes]||'%'                                                --Target Lanes Only 일경우 'Y', ALL일 경우 NULL
#end
#if (${target_ports} != 'ALL')
                           AND    R.TP           LIKE @[target_ports]||'%'                                                     --Target Ports Only 일경우 'B', ALL일 경우 NULL
                           AND    R.VOP_PORT_FLG = 'Y'
#end 
#if (${tml_prod_rpt_rsn_cd} != '')
                           AND    DECODE(D.TML_PROD_RPT_RSN_CD,NULL,'Y','N') = DECODE(@[tml_prod_rpt_rsn_cd],'N','Y','N')       --Exclude fm TPR이 Check되었을 경우 'Y', Check되지 않았을 경우 'N'
#else
                           AND    DECODE(D.TML_PROD_RPT_RSN_CD,NULL,'Y','N') = DECODE('N','N','Y','N')       --Exclude fm TPR이 Check되었을 경우 'Y', Check되지 않았을 경우 'N'
#end                                
                           GROUP BY ( V.VPS_PORT_CD, V.YD_CD, V.SLAN_CD, T.VSL_CD||T.VOY_NO||T.DIR_CD )
                       )
                       GROUP BY ROLLUP( PORT, YARD, LANE, VVD) 
                  )
                  where C2 = 1
                  /* Q2 */
          )
         ORDER BY DECODE(C2,1,'YYYYY',2,'ZZZZZ',PORT), DECODE(C2,3,YARD||'Z',YARD), DECODE(C2,1,'YYY','2','ZZZ',LANE), ATA
)			]]></sql>
			<params>
				<param name="rhq" type="12" value="" out="N"/>
				<param name="from_date" type="12" value="" out="N"/>
				<param name="to_date" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="target_lanes" type="12" value="" out="N"/>
				<param name="target_ports" type="12" value="" out="N"/>
				<param name="tml_prod_rpt_rsn_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
