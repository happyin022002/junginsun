<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TerminalDepartureReportDBDAOLoadImportTotalVORSQL">
			<desc><![CDATA[DESC Enter..]]></desc>
			<sql><![CDATA[
SELECT 		COM_ConstantMgr_PKG.COM_getCompanyCode_FNC() AS OPR_CD
		,	V.POD_CD

		--,	SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 2, 1, NULL), NULL)) FULL_BO_20
		--,	SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 3, 1, NULL), NULL)) FULL_BO_2H
		--,	SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 4, 1, NULL), NULL)) FULL_BO_40
		--,	SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 5, 1, NULL), NULL)) FULL_BO_4H
		--,	SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 7, 1, NULL), NULL)) FULL_BO_45
		--,	SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 2, 1, NULL))) ET_BO_20
		--,	SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 3, 1, NULL))) ET_BO_2H
		--,	SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 4, 1, NULL))) ET_BO_40
		--,	SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 5, 1, NULL))) ET_BO_4H
		--,	SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 7, 1, NULL))) ET_BO_45
		--,	ROUND(SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), '2', C.CNTR_WGT, NULL)) / 1000,  1)   WT_20
		--,	ROUND(SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), '3', C.CNTR_WGT, NULL)) / 1000,  1)   WT_2H
		--,	ROUND(SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), '4', C.CNTR_WGT, NULL)) / 1000,  1)   WT_40
		--,	ROUND(SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), '5', C.CNTR_WGT, NULL)) / 1000,  1)   WT_4H
		--,	ROUND(SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), '7', C.CNTR_WGT, NULL)) / 1000,  1)   WT_45

		,	ROUND((SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 2, 1, NULL), NULL))
			  	+  SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 'A', 1, NULL), NULL))),2) 	FULL_BO_20

		,	ROUND(SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 3, 1, NULL), NULL)),2) 		FULL_BO_2H

		,	ROUND((SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 4, 1, NULL), NULL))
			  	+  SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 'B', 1, NULL), NULL))),2) 	FULL_BO_40

		,	ROUND(SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 5, 1, NULL), NULL)),2) 		FULL_BO_4H
		,	ROUND(SUM(DECODE(B.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 7, 1, NULL), NULL)),2) 		FULL_BO_45

		,	ROUND((SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 2, 1, NULL)))
			  	+  SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 'A', 1, NULL)))),2) 	ET_BO_20

		,	ROUND(SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 3, 1, NULL))),2) 		ET_BO_2H

		,	ROUND((SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 4, 1, NULL)))
			  	+  SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 'B', 1, NULL)))),2) 	ET_BO_40

		,	ROUND(SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 5, 1, NULL))),2) 		ET_BO_4H
		,	ROUND(SUM(DECODE(B.BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 7, 1, NULL))),2) 		ET_BO_45

		,	ROUND((SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), '2', C.CNTR_WGT, NULL))
				+  SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 'A', C.CNTR_WGT, NULL))) / 1000,  2)   					WT_20

		,	ROUND(SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), '3', C.CNTR_WGT, NULL)) / 1000,  2)   					WT_2H

		,	ROUND((SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), '4', C.CNTR_WGT, NULL))
				+  SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), 'B', C.CNTR_WGT, NULL))) / 1000,  2)   					WT_40

		,	ROUND(SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), '5', C.CNTR_WGT, NULL)) / 1000,  2)   					WT_4H
		,	ROUND(SUM(DECODE(SUBSTR(C.CNTR_TPSZ_CD, 2, 1), '7', C.CNTR_WGT, NULL)) / 1000,  2)   					WT_45

FROM   		VSK_VSL_PORT_SKD 				S
		,	BKG_VVD 						V
		,	BKG_CONTAINER 					C
		,	BKG_BOOKING						B
		,	MDM_LOCATION					L
		,	MDM_LOCATION 					D
		,	MDM_CNTR_SZ						SZ
WHERE  		1 = 1
AND			S.VSL_CD       					= @[vsl_cd] 
AND    		S.SKD_VOY_NO   					= @[voy_no] 
AND    		S.SKD_DIR_CD   					= @[dir_cd] 
AND    		S.YD_CD        					= @[yd_cd]
AND    		S.CLPT_IND_SEQ 					= @[clpt_ind_seq]
AND    		S.VSL_CD       					= V.VSL_CD
AND    		S.SKD_VOY_NO   					= V.SKD_VOY_NO
AND    		S.SKD_DIR_CD   					= V.SKD_DIR_CD
AND    		S.VPS_PORT_CD  					= V.POL_CD
AND    		S.CLPT_IND_SEQ 					= NVL(V.POL_CLPT_IND_SEQ,1)
AND    		V.BKG_NO     					= C.BKG_NO
AND    		V.BKG_NO     					= B.BKG_NO
AND    		NVL(B.BKG_STS_CD,'N') 			NOT IN ('X','A')
AND    		V.POL_CD     					= L.LOC_CD
AND    		V.POD_CD     					= D.LOC_CD

AND			SUBSTR(C.CNTR_TPSZ_CD,2,1)		= SZ.CNTR_SZ_CD

#if (${status1} == 'LM') 
AND    		L.CONTI_CD   					<> D.CONTI_CD
#else 
AND    		L.CONTI_CD   					= D.CONTI_CD
#end
GROUP BY 	V.POD_CD			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="voy_no" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="clpt_ind_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
