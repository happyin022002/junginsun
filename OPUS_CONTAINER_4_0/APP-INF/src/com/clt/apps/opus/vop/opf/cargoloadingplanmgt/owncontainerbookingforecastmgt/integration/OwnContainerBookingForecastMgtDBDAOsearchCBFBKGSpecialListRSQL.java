/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : OwnContainerBookingForecastMgtDBDAOsearchCBFBKGSpecialListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.10.13
*@LastModifier : 
*@LastVersion : 1.0
* 2016.10.13 
* 1.0 Creation
=========================================================*/
package com.clt.apps.opus.vop.opf.cargoloadingplanmgt.owncontainerbookingforecastmgt.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.clt.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class OwnContainerBookingForecastMgtDBDAOsearchCBFBKGSpecialListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * searchCBFBKGSpecialList 조회
	  * </pre>
	  */
	public OwnContainerBookingForecastMgtDBDAOsearchCBFBKGSpecialListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("yd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_dir_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_voy_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vsl_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.clt.apps.opus.vop.opf.cargoloadingplanmgt.owncontainerbookingforecastmgt.integration").append("\n"); 
		query.append("FileName : OwnContainerBookingForecastMgtDBDAOsearchCBFBKGSpecialListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH COPY_T AS (" ).append("\n"); 
		query.append(" -- 2016-08-02 Improvment--" ).append("\n"); 
		query.append(" -- SELECT ROWNUM NO" ).append("\n"); 
		query.append(" -- FROM BKG_BOOKING" ).append("\n"); 
		query.append(" -- WHERE ROWNUM<=1000" ).append("\n"); 
		query.append("    SELECT LEVEL NO" ).append("\n"); 
		query.append("    FROM DUAL" ).append("\n"); 
		query.append("    CONNECT BY LEVEL <= 1000 " ).append("\n"); 
		query.append(" -- 2016-08-02 Improvment--" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_BKG AS (" ).append("\n"); 
		query.append("    SELECT VVD.BKG_NO," ).append("\n"); 
		query.append("            VVD.VSL_CD," ).append("\n"); 
		query.append("            VVD.SKD_VOY_NO," ).append("\n"); 
		query.append("            VVD.SKD_DIR_CD," ).append("\n"); 
		query.append("            BKG.SLAN_CD," ).append("\n"); 
		query.append("            VVD.POD_CD," ).append("\n"); 
		query.append("            VVD.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("            VVD.POL_YD_CD," ).append("\n"); 
		query.append("            VVD.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("            BKG.BLCK_STWG_CD," ).append("\n"); 
		query.append("            BKG.BKG_CGO_TP_CD," ).append("\n"); 
		query.append("            BKG.UPD_USR_ID," ).append("\n"); 
		query.append("            BKG.UPD_DT," ).append("\n"); 
		query.append("            BKG.BKG_STS_CD," ).append("\n"); 
		query.append("            BKG.CMDT_CD" ).append("\n"); 
		query.append("    FROM BKG_VVD VVD, BKG_BOOKING BKG" ).append("\n"); 
		query.append("    WHERE VVD.VSL_CD = @[vsl_cd]" ).append("\n"); 
		query.append("    AND VVD.SKD_VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("    AND VVD.SKD_DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("    AND VVD.POL_YD_CD || VVD.POL_CLPT_IND_SEQ = @[yd_cd]" ).append("\n"); 
		query.append("    AND VVD.POL_CD = SUBSTR(@[yd_cd], 1, 5)" ).append("\n"); 
		query.append("    AND VVD.POL_CLPT_IND_SEQ = SUBSTR(@[yd_cd], 8)								" ).append("\n"); 
		query.append("    AND BKG.BKG_STS_CD  <> 'X'" ).append("\n"); 
		query.append("    AND VVD.BKG_NO = BKG.BKG_NO" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT DISTINCT                                                                                                                                             " ).append("\n"); 
		query.append("       L.BKG_NO AS BKG_NO_TMP," ).append("\n"); 
		query.append("	   L.BKG_NO AS BKG_REF_NO_CTNT," ).append("\n"); 
		query.append("	   L.BKG_NO," ).append("\n"); 
		query.append("       L.CNTR_NO,                                                                                                                                           " ).append("\n"); 
		query.append("       L.POD POD_CD, " ).append("\n"); 
		query.append("       L.POD_CLPT_IND_SEQ,                                                                                                                                       " ).append("\n"); 
		query.append("       L.MLB MLB_CD,                                                                                                                                        " ).append("\n"); 
		query.append("       L.OPR CRR_CD,                                                                                                                                        " ).append("\n"); 
		query.append("       L.TP CNTR_TPSZ_CD,                                                                                                                                   " ).append("\n"); 
		query.append("       MAX(DECODE(L.SPCL_CGO,'DG','Y','N')) DCGO_FLG,                                                                                                       " ).append("\n"); 
		query.append("       MAX(DECODE(L.SPCL_CGO,'RF','Y','N')) RC_FLG,                                                                                                         " ).append("\n"); 
		query.append("       MAX(DECODE(L.SPCL_CGO,'AK','Y','N')) AWK_CGO_FLG,                                                                                                    " ).append("\n"); 
		query.append("       MAX(DECODE(L.SPCL_CGO,'BB','Y','N')) BB_CGO_FLG,                                                                                                     " ).append("\n"); 
		query.append("       MAX(DECODE(L.STWG_CD,' ',DECODE(L.SPCL_CGO,'ST','Y','N'),'Y')) STWG_CGO_FLG,                                                                         " ).append("\n"); 
		query.append("       L.CNTR_SEQ,                                                                                                                                          " ).append("\n"); 
		query.append("       L.CGO_SEQ,                                                                                                                                           " ).append("\n"); 
		query.append("       MAX(L.CNTR_GRS_WGT) CNTR_GRS_WGT,                                                                                                                    " ).append("\n"); 
		query.append("       MAX(L.CGO_GRS_WGT) CGO_GRS_WGT,                                                                                                                      " ).append("\n"); 
		query.append("       MAX(L.IMO) IMDG_CLSS_CD,                                                                                                                             " ).append("\n"); 
		query.append("       MAX(L.UN_NO) IMDG_UN_NO,   " ).append("\n"); 
		query.append("       MAX(L.PRP_SHP_NM) PRP_SHP_NM, " ).append("\n"); 
		query.append("       MAX(L.HZD_DESC) HZD_DESC,                                                                                                                           " ).append("\n"); 
		query.append("       MAX(L.SRL) IMDG_SUBS_RSK_LBL_CD,                                                                                                                     " ).append("\n"); 
		query.append("       MAX(L.MP) IMDG_MRN_POLUT_CD,                                                                                                                         " ).append("\n"); 
		query.append("       MAX(DECODE(L.PG, '1', 'I', '2', 'II', '3', 'III', '')) PCK_GRP_CD,                                                                                                                                " ).append("\n"); 
		query.append("       MAX(L.FP) FDO_TEMP,                                                                                                                                  " ).append("\n"); 
		query.append("       MAX(L.RT) CDO_TEMP,                                                                                                                                  " ).append("\n"); 
		query.append("       MAX(L.LQ) LMT_QTY_FLG,                                                                                                                               " ).append("\n"); 
		query.append("       MAX(L.EQ) EXPT_QTY_FLG,                                                                                                                              " ).append("\n"); 
		query.append("       MAX(L.CMDT) CBF_CMDT_NM,                                                                                                                             " ).append("\n"); 
		query.append("       MAX(L.DIM_LEN) DIM_LEN,                                                                                                                              " ).append("\n"); 
		query.append("       MAX(L.DIM_WDT) DIM_WDT,                                                                                                                              " ).append("\n"); 
		query.append("       MAX(L.DIM_HGT) DIM_HGT,                                                                                                                              " ).append("\n"); 
		query.append("       MAX(L.OVR_FWD) OVR_FWD,                                                                                                                              " ).append("\n"); 
		query.append("       MAX(L.OVR_AFT) OVR_AFT,                                                                                                                              " ).append("\n"); 
		query.append("       MAX(L.OVR_LFT) OVR_LFT,                                                                                                                              " ).append("\n"); 
		query.append("       MAX(L.OVR_RGT) OVR_RGT,                                                                                                                              " ).append("\n"); 
		query.append("       MAX(L.OVR_HGT) OVR_HGT,                                                                                                                              " ).append("\n"); 
		query.append("       MAX(L.POST_EXD) CRN_PST_STS_CD,                                                                                                                            " ).append("\n"); 
		query.append("       MAX(L.STWG_CD) STWG_CD,                                                                                                                              " ).append("\n"); 
		query.append("       MAX(L.APVL) SPCL_CGO_AUTH_FLG,                                                                                                                       " ).append("\n"); 
		query.append("       MAX(L.APRO_REF_NO) APRO_REF_NO,                                                                                                                      " ).append("\n"); 
		query.append("       MAX(L.CBF_RMK) CBF_RMK,                                                                                                                              " ).append("\n"); 
		query.append("       @[vsl_cd] VSL_CD,                                                                                                                                    " ).append("\n"); 
		query.append("       @[skd_voy_no] SKD_VOY_NO,                                                                                                                            " ).append("\n"); 
		query.append("       @[skd_dir_cd] SKD_DIR_CD,                                                                                                                            " ).append("\n"); 
		query.append("       MAX(L.POL_YD_CD) YD_CD,     " ).append("\n"); 
		query.append("       MAX(L.POL_CLPT_IND_SEQ) POL_CLPT_IND_SEQ,                                                                                                                                 " ).append("\n"); 
		query.append("       'D' RD_ST,                                                                                                                                           " ).append("\n"); 
		query.append("       'Y' BKG_SHPR_OWNR_FLG,                                                                                                                               " ).append("\n"); 
		query.append("	     MAX(L.LANE) SLAN_CD,                                                                                                                                 " ).append("\n"); 
		query.append("	     'S' CBF_DP_CD " ).append("\n"); 
		query.append("FROM ( SELECT DISTINCT A.BKG_NO," ).append("\n"); 
		query.append("              A.CNTR_NO," ).append("\n"); 
		query.append("              A.POD_CD               					   POD," ).append("\n"); 
		query.append("              A.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("              A.POL_YD_CD," ).append("\n"); 
		query.append("              A.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("              A.MLB," ).append("\n"); 
		query.append("              COM_ConstantMgr_PKG.COM_getCompanyCode_FNC() OPR," ).append("\n"); 
		query.append("              A.CNTR_TPSZ_CD         					   TP," ).append("\n"); 
		query.append("              A.SPCL_CGO," ).append("\n"); 
		query.append("              A.CNTR_SEQ," ).append("\n"); 
		query.append("              A.CGO_SEQ," ).append("\n"); 
		query.append("              NVL2(CNTR_GRS_WGT, DECODE(WGT_UT_CD, 'LBS', VSK_COMMON_PKG.GET_CONV_WGT_FNC('L', 'K', CNTR_GRS_WGT), CNTR_GRS_WGT), 0)" ).append("\n"); 
		query.append("              + DECODE(NVL(TP.CNTR_TPSZ_TARE_WGT,0), 0, DECODE(SUBSTR(A.CNTR_TPSZ_CD,2,1),2,2500,4000), NVL(TP.CNTR_TPSZ_TARE_WGT,0)) AS CNTR_GRS_WGT," ).append("\n"); 
		query.append("              NVL2(CGO_GRS_WGT, DECODE(WGT_UT_CD, 'LBS', VSK_COMMON_PKG.GET_CONV_WGT_FNC('L', 'K', CGO_GRS_WGT), CGO_GRS_WGT), 0) AS CGO_GRS_WGT," ).append("\n"); 
		query.append("              A.IMDG_CLSS_CD         					   IMO," ).append("\n"); 
		query.append("              A.IMDG_UN_NO           				       UN_NO," ).append("\n"); 
		query.append("              A.PRP_SHP_NM           					   PRP_SHP_NM," ).append("\n"); 
		query.append("              A.HZD_DESC             					   HZD_DESC," ).append("\n"); 
		query.append("              A.IMDG_SUBS_RSK_LBL_CD 					   SRL," ).append("\n"); 
		query.append("              A.IMDG_MRN_POLUT_CD    					   MP," ).append("\n"); 
		query.append("              A.PCK_GRP_CD           					   PG," ).append("\n"); 
		query.append("              A.FDO_TEMP            					   FP," ).append("\n"); 
		query.append("              A.CDO_TEMP             					   RT," ).append("\n"); 
		query.append("              A.LQ," ).append("\n"); 
		query.append("              A.EQ," ).append("\n"); 
		query.append("              A.CMDT," ).append("\n"); 
		query.append("              DECODE(A.DIM_LEN, 0, '', A.DIM_LEN) DIM_LEN," ).append("\n"); 
		query.append("			  DECODE(A.DIM_WDT, 0, '', A.DIM_WDT) DIM_WDT," ).append("\n"); 
		query.append("			  DECODE(A.DIM_HGT, 0, '', A.DIM_HGT) DIM_HGT," ).append("\n"); 
		query.append("			  DECODE(A.OVR_FWD, 0, '', A.OVR_FWD) OVR_FWD," ).append("\n"); 
		query.append("			  DECODE(A.OVR_AFT, 0, '', A.OVR_AFT) OVR_AFT," ).append("\n"); 
		query.append("			  DECODE(A.OVR_LFT, 0, '', A.OVR_LFT) OVR_LFT," ).append("\n"); 
		query.append("			  DECODE(A.OVR_RGT, 0, '', A.OVR_RGT) OVR_RGT," ).append("\n"); 
		query.append("			  DECODE(A.OVR_HGT, 0, '', A.OVR_HGT) OVR_HGT," ).append("\n"); 
		query.append("              A.POST_EXD," ).append("\n"); 
		query.append("              A.STWG_CD," ).append("\n"); 
		query.append("              A.SPCL_CGO_AUTH_FLG APVL," ).append("\n"); 
		query.append("              NVL(VS.APRO_REF_NO,' ')  APRO_REF_NO," ).append("\n"); 
		query.append("              A.CBF_RMK,                                                                                                                                    " ).append("\n"); 
		query.append("              LANE     " ).append("\n"); 
		query.append("       FROM   ( " ).append("\n"); 
		query.append("                -- UNION ALL 1 : DG_CGO" ).append("\n"); 
		query.append("                SELECT NVL(VVD_BKG.BKG_NO,' ')       BKG_NO," ).append("\n"); 
		query.append("                       DG.DG_CNTR_SEQ            CNTR_SEQ," ).append("\n"); 
		query.append("                       DG.CNTR_CGO_SEQ           CGO_SEQ," ).append("\n"); 
		query.append("                       DG.DCGO_SEQ               U_CGO_SEQ," ).append("\n"); 
		query.append("                       NVL(DG.CNTR_NO,' ')       CNTR_NO," ).append("\n"); 
		query.append("                       NVL(VVD_BKG.POD_CD,' ')       POD_CD," ).append("\n"); 
		query.append("                       VVD_BKG.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       VVD_BKG.POL_YD_CD," ).append("\n"); 
		query.append("                       VVD_BKG.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       VVD_BKG.BLCK_STWG_CD          MLB," ).append("\n"); 
		query.append("                       NVL(QTY.CNTR_TPSZ_CD,' ') CNTR_TPSZ_CD," ).append("\n"); 
		query.append("                       DECODE(NVL(VVD_BKG.BKG_CGO_TP_CD,' '),'F','F','E') FULL_MTY_CD," ).append("\n"); 
		query.append("                       CASE " ).append("\n"); 
		query.append("                           WHEN DG.CNTR_NO IS NULL THEN" ).append("\n"); 
		query.append("                                SUM(DG.GRS_WGT) OVER (PARTITION BY VVD_BKG.BKG_NO, DG.CNTR_NO, DG.DG_CNTR_SEQ )" ).append("\n"); 
		query.append("                           ELSE" ).append("\n"); 
		query.append("                                SUM(DG.GRS_WGT) OVER (PARTITION BY DG.CNTR_NO)" ).append("\n"); 
		query.append("                       END                                                                        CNTR_GRS_WGT," ).append("\n"); 
		query.append("                       DG.WGT_UT_CD                                                               WGT_UT_CD," ).append("\n"); 
		query.append("                       DG.GRS_WGT                                                                 CGO_GRS_WGT," ).append("\n"); 
		query.append("                       'DG'                                                                       SPCL_CGO," ).append("\n"); 
		query.append("                       NVL(DG.IMDG_CLSS_CD,' ')                                                   IMDG_CLSS_CD," ).append("\n"); 
		query.append("                       NVL(DG.IMDG_UN_NO,' ')                                                     IMDG_UN_NO," ).append("\n"); 
		query.append("                       NVL(DG.PRP_SHP_NM,' ')                                                     PRP_SHP_NM," ).append("\n"); 
		query.append("                       NVL(DG.HZD_DESC,' ')                                                       HZD_DESC," ).append("\n"); 
		query.append("                       (DG.IMDG_SUBS_RSK_LBL_CD1" ).append("\n"); 
		query.append("                 		||DECODE(DG.IMDG_SUBS_RSK_LBL_CD1,'',DG.IMDG_SUBS_RSK_LBL_CD2,DECODE(DG.IMDG_SUBS_RSK_LBL_CD2,'','','/'||DG.IMDG_SUBS_RSK_LBL_CD2))" ).append("\n"); 
		query.append("                 		||DECODE(DG.IMDG_SUBS_RSK_LBL_CD1||DG.IMDG_SUBS_RSK_LBL_CD2,'',DG.IMDG_SUBS_RSK_LBL_CD3,DECODE(DG.IMDG_SUBS_RSK_LBL_CD3,'','','/'||DG.IMDG_SUBS_RSK_LBL_CD3))" ).append("\n"); 
		query.append("                 		||DECODE(DG.IMDG_SUBS_RSK_LBL_CD1||DG.IMDG_SUBS_RSK_LBL_CD2||'','',DG.IMDG_SUBS_RSK_LBL_CD4,DECODE(DG.IMDG_SUBS_RSK_LBL_CD4,'','','/'||DG.IMDG_SUBS_RSK_LBL_CD4))" ).append("\n"); 
		query.append("                	   ) AS IMDG_SUBS_RSK_LBL_CD," ).append("\n"); 
		query.append("                       NVL(DG.MRN_POLUT_FLG,' ')                                                  IMDG_MRN_POLUT_CD," ).append("\n"); 
		query.append("                       NVL(DG.IMDG_PCK_GRP_CD,' ')                                                PCK_GRP_CD," ).append("\n"); 
		query.append("                       NVL(DG.IMDG_LMT_QTY_FLG,' ')                                               LQ," ).append("\n"); 
		query.append("                       NVL(DG.IMDG_EXPT_QTY_FLG,' ')                                              EQ," ).append("\n"); 
		query.append("                       DECODE(TO_CHAR(NVL(DG.FLSH_PNT_CDO_TEMP,0)),'0',NULL,DG.FLSH_PNT_CDO_TEMP) FDO_TEMP," ).append("\n"); 
		query.append("                       NULL                                                                       CDO_TEMP," ).append("\n"); 
		query.append("                       NULL                                                                       DIM_LEN," ).append("\n"); 
		query.append("                       NULL                                                                       DIM_WDT," ).append("\n"); 
		query.append("                       NULL                                                                       DIM_HGT," ).append("\n"); 
		query.append("                       NULL                                                                       OVR_FWD," ).append("\n"); 
		query.append("                       NULL                                                                       OVR_AFT," ).append("\n"); 
		query.append("                       NULL                                                                       OVR_LFT," ).append("\n"); 
		query.append("                       NULL                                                                       OVR_RGT," ).append("\n"); 
		query.append("                       NULL                                                                       OVR_HGT," ).append("\n"); 
		query.append("                       NULL                                                                       POST_EXD," ).append("\n"); 
		query.append("                       NVL(STWG.STWG_CD,' ')                                                       STWG_CD," ).append("\n"); 
		query.append("                       DG.SPCL_CGO_APRO_CD                                                        SPCL_CGO_AUTH_FLG," ).append("\n"); 
		query.append("                       TRIM(DG.DIFF_RMK)                                                          CBF_RMK," ).append("\n"); 
		query.append("                       VVD_BKG.UPD_USR_ID," ).append("\n"); 
		query.append("                       VVD_BKG.UPD_DT," ).append("\n"); 
		query.append("                       VVD_BKG.VSL_CD," ).append("\n"); 
		query.append("                       VVD_BKG.SKD_VOY_NO," ).append("\n"); 
		query.append("                       VVD_BKG.SKD_DIR_CD," ).append("\n"); 
		query.append("                       DG.ORG_YD_CD YD_CD," ).append("\n"); 
		query.append("                       VVD_BKG.BKG_STS_CD CBF_IND_FLG," ).append("\n"); 
		query.append("                       VVD_BKG.SLAN_CD LANE," ).append("\n"); 
		query.append("                       M.CMDT_NM   CMDT" ).append("\n"); 
		query.append("                FROM   VVD_BKG," ).append("\n"); 
		query.append("                       BKG_STWG_CGO STWG, " ).append("\n"); 
		query.append("                       BKG_QUANTITY QTY, " ).append("\n"); 
		query.append("                       (" ).append("\n"); 
		query.append("                        SELECT CDG.*," ).append("\n"); 
		query.append("                               CNTR.ORG_YD_CD" ).append("\n"); 
		query.append("                          FROM BKG_DG_CGO    CDG," ).append("\n"); 
		query.append("                               BKG_CONTAINER CNTR" ).append("\n"); 
		query.append("                         WHERE CDG.BKG_NO       = CNTR.BKG_NO(+)" ).append("\n"); 
		query.append("                           AND CDG.CNTR_TPSZ_CD = CNTR.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("                           AND CDG.CNTR_NO      = CNTR.CNTR_NO(+)" ).append("\n"); 
		query.append("                           AND CNTR.DCGO_FLG(+) = 'Y'" ).append("\n"); 
		query.append("                           AND NVL(CDG.SPCL_CGO_APRO_CD, ' ') NOT IN ('C','N')" ).append("\n"); 
		query.append("                       ) DG," ).append("\n"); 
		query.append("                       MDM_COMMODITY M" ).append("\n"); 
		query.append("         		 WHERE VVD_BKG.BKG_NO          = QTY.BKG_NO(+)" ).append("\n"); 
		query.append("                   AND VVD_BKG.BKG_NO          = STWG.BKG_NO(+)" ).append("\n"); 
		query.append("                   AND SUBSTR(QTY.CNTR_TPSZ_CD,1,1) <> 'Q'" ).append("\n"); 
		query.append("                   AND QTY.BKG_NO          = DG.BKG_NO" ).append("\n"); 
		query.append("                   AND QTY.CNTR_TPSZ_CD    = DG.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                   AND VVD_BKG.CMDT_CD         = M.CMDT_CD(+)" ).append("\n"); 
		query.append("                   AND M.DELT_FLG(+)       = 'N'" ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                -- UNION ALL 2 : RF_CGO" ).append("\n"); 
		query.append("                SELECT NVL(VVD_BKG.BKG_NO,' ')       BKG_NO," ).append("\n"); 
		query.append("                       RF.RC_SEQ                 CNTR_SEQ," ).append("\n"); 
		query.append("                       1                         CGO_SEQ," ).append("\n"); 
		query.append("                       RF.RC_SEQ                 U_CGO_SEQ," ).append("\n"); 
		query.append("                       NVL(RF.CNTR_NO,' ')       CNTR_NO," ).append("\n"); 
		query.append("                       NVL(VVD_BKG.POD_CD,' ')       POD_CD," ).append("\n"); 
		query.append("                       VVD_BKG.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       VVD_BKG.POL_YD_CD," ).append("\n"); 
		query.append("                       VVD_BKG.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       VVD_BKG.BLCK_STWG_CD          MLB," ).append("\n"); 
		query.append("                       NVL(QTY.CNTR_TPSZ_CD,' ') CNTR_TPSZ_CD," ).append("\n"); 
		query.append("                       DECODE(NVL(VVD_BKG.BKG_CGO_TP_CD,' '),'F','F','E') FULL_MTY_CD," ).append("\n"); 
		query.append("                       CASE " ).append("\n"); 
		query.append("                           WHEN RF.CNTR_NO IS NULL THEN" ).append("\n"); 
		query.append("                                SUM(RF.GRS_WGT) OVER (PARTITION BY VVD_BKG.BKG_NO, RF.CNTR_NO, RF.RC_SEQ )" ).append("\n"); 
		query.append("                           ELSE" ).append("\n"); 
		query.append("                                SUM(RF.GRS_WGT) OVER (PARTITION BY RF.CNTR_NO)" ).append("\n"); 
		query.append("                       END                                                      CNTR_GRS_WGT," ).append("\n"); 
		query.append("                       RF.WGT_UT_CD                                             WGT_UT_CD," ).append("\n"); 
		query.append("                       RF.GRS_WGT                                               CGO_GRS_WGT," ).append("\n"); 
		query.append("                       'RF'                                                     SPCL_CGO," ).append("\n"); 
		query.append("                       NULL                                                     IMDG_CLSS_CD," ).append("\n"); 
		query.append("                       NULL                                                     IMDG_UN_NO," ).append("\n"); 
		query.append("                       NULL                                                     PRP_SHP_NM," ).append("\n"); 
		query.append("                       NULL                                                     HZD_DESC," ).append("\n"); 
		query.append("                       NULL                                                     IMDG_SUBS_RSK_LBL_CD," ).append("\n"); 
		query.append("                       NULL                                                     IMDG_MRN_POLUT_CD," ).append("\n"); 
		query.append("                       NULL                                                     PCK_GRP_CD," ).append("\n"); 
		query.append("                       NULL                                                     LQ," ).append("\n"); 
		query.append("                       NULL                                                     EQ," ).append("\n"); 
		query.append("                       NULL                                                     FDO_TEMP," ).append("\n"); 
		query.append("                       DECODE(TO_CHAR(NVL(RF.CDO_TEMP,0)),'0',NULL,RF.CDO_TEMP) CDO_TEMP," ).append("\n"); 
		query.append("                       NULL                                                     DIM_LEN," ).append("\n"); 
		query.append("                       NULL                                                     DIM_WDT," ).append("\n"); 
		query.append("                       NULL                                                     DIM_HGT," ).append("\n"); 
		query.append("                       NULL                                                     OVR_FWD," ).append("\n"); 
		query.append("                       NULL                                                     OVR_AFT," ).append("\n"); 
		query.append("                       NULL                                                     OVR_LFT," ).append("\n"); 
		query.append("                       NULL                                                     OVR_RGT," ).append("\n"); 
		query.append("                       NULL                                                     OVR_HGT," ).append("\n"); 
		query.append("                       NULL                                                     POST_EXD," ).append("\n"); 
		query.append("                       NVL(STWG.STWG_CD,' ')                                     STWG_CD," ).append("\n"); 
		query.append("                       RF.SPCL_CGO_APRO_CD                                      SPCL_CGO_AUTH_FLG," ).append("\n"); 
		query.append("                       TRIM(RF.DIFF_RMK)                                        CBF_RMK," ).append("\n"); 
		query.append("                       VVD_BKG.UPD_USR_ID," ).append("\n"); 
		query.append("                       VVD_BKG.UPD_DT," ).append("\n"); 
		query.append("                       VVD_BKG.VSL_CD," ).append("\n"); 
		query.append("                       VVD_BKG.SKD_VOY_NO," ).append("\n"); 
		query.append("                       VVD_BKG.SKD_DIR_CD," ).append("\n"); 
		query.append("                       RF.ORG_YD_CD YD_CD," ).append("\n"); 
		query.append("                       VVD_BKG.BKG_STS_CD CBF_IND_FLG," ).append("\n"); 
		query.append("                       VVD_BKG.SLAN_CD LANE," ).append("\n"); 
		query.append("                       M.CMDT_NM   CMDT" ).append("\n"); 
		query.append("                  FROM VVD_BKG," ).append("\n"); 
		query.append("                       BKG_STWG_CGO STWG, " ).append("\n"); 
		query.append("                       BKG_QUANTITY QTY, " ).append("\n"); 
		query.append("                       (" ).append("\n"); 
		query.append("                        SELECT CRF.*," ).append("\n"); 
		query.append("                               CNTR.ORG_YD_CD" ).append("\n"); 
		query.append("                          FROM BKG_RF_CGO    CRF," ).append("\n"); 
		query.append("                               BKG_CONTAINER CNTR" ).append("\n"); 
		query.append("                         WHERE CRF.BKG_NO       = CNTR.BKG_NO(+)" ).append("\n"); 
		query.append("                           AND CRF.CNTR_TPSZ_CD = CNTR.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("                           AND CRF.CNTR_NO      = CNTR.CNTR_NO(+)" ).append("\n"); 
		query.append("                           AND CNTR.RC_FLG(+)   = 'Y'" ).append("\n"); 
		query.append("                           AND NVL(CRF.SPCL_CGO_APRO_CD, ' ') NOT IN ('C','N')" ).append("\n"); 
		query.append("                       ) RF," ).append("\n"); 
		query.append("                       MDM_COMMODITY M" ).append("\n"); 
		query.append("         		 WHERE VVD_BKG.BKG_NO          = QTY.BKG_NO(+)" ).append("\n"); 
		query.append("                   AND VVD_BKG.BKG_NO          = STWG.BKG_NO(+)" ).append("\n"); 
		query.append("                   AND SUBSTR(QTY.CNTR_TPSZ_CD,1,1) <> 'Q'" ).append("\n"); 
		query.append("                   AND QTY.BKG_NO          = RF.BKG_NO" ).append("\n"); 
		query.append("                   AND QTY.CNTR_TPSZ_CD    = RF.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                   AND VVD_BKG.CMDT_CD         = M.CMDT_CD(+)" ).append("\n"); 
		query.append("                   AND M.DELT_FLG(+)       = 'N'" ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                -- UNION ALL 3 : BB_CGO" ).append("\n"); 
		query.append("                SELECT BKG_NO," ).append("\n"); 
		query.append("                       CNTR_SEQ," ).append("\n"); 
		query.append("                       CGO_SEQ," ).append("\n"); 
		query.append("                       U_CGO_SEQ," ).append("\n"); 
		query.append("                       CNTR_NO," ).append("\n"); 
		query.append("                       POD_CD," ).append("\n"); 
		query.append("                       POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       POL_YD_CD," ).append("\n"); 
		query.append("                       POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       MLB," ).append("\n"); 
		query.append("                       CNTR_TPSZ_CD," ).append("\n"); 
		query.append("                       FULL_MTY_CD," ).append("\n"); 
		query.append("                       CNTR_GRS_WGT," ).append("\n"); 
		query.append("                       WGT_UT_CD," ).append("\n"); 
		query.append("                       CGO_GRS_WGT," ).append("\n"); 
		query.append("                       'BB' SPCL_CGO," ).append("\n"); 
		query.append("                       NULL IMDG_CLSS_CD," ).append("\n"); 
		query.append("                       NULL IMDG_UN_NO," ).append("\n"); 
		query.append("                       NULL PRP_SHP_NM," ).append("\n"); 
		query.append("                       NULL HZD_DESC," ).append("\n"); 
		query.append("                       NULL IMDG_SUBS_RSK_LBL_CD," ).append("\n"); 
		query.append("                       NULL IMDG_MRN_POLUT_CD," ).append("\n"); 
		query.append("                       NULL PCK_GRP_CD," ).append("\n"); 
		query.append("                       NULL LQ," ).append("\n"); 
		query.append("                       NULL EQ," ).append("\n"); 
		query.append("                       NULL FDO_TEMP," ).append("\n"); 
		query.append("                       NULL CDO_TEMP," ).append("\n"); 
		query.append("                       DIM_LEN," ).append("\n"); 
		query.append("                       DIM_WDT," ).append("\n"); 
		query.append("                       DIM_HGT," ).append("\n"); 
		query.append("                       NULL OVR_FWD," ).append("\n"); 
		query.append("                       NULL OVR_AFT," ).append("\n"); 
		query.append("                       NULL OVR_LFT," ).append("\n"); 
		query.append("                       NULL OVR_RGT," ).append("\n"); 
		query.append("                       NULL OVR_HGT," ).append("\n"); 
		query.append("                       NULL POST_EXD," ).append("\n"); 
		query.append("                       STWG_CD," ).append("\n"); 
		query.append("                       SPCL_CGO_AUTH_FLG," ).append("\n"); 
		query.append("                       CBF_RMK, " ).append("\n"); 
		query.append("                       UPD_USR_ID," ).append("\n"); 
		query.append("                       UPD_DT," ).append("\n"); 
		query.append("                       VSL_CD," ).append("\n"); 
		query.append("                       SKD_VOY_NO," ).append("\n"); 
		query.append("                       SKD_DIR_CD," ).append("\n"); 
		query.append("                       YD_CD," ).append("\n"); 
		query.append("                       CBF_IND_FLG," ).append("\n"); 
		query.append("                       LANE," ).append("\n"); 
		query.append("                       CMDT" ).append("\n"); 
		query.append("                FROM  ( " ).append("\n"); 
		query.append("                        SELECT QTY.BKG_NO," ).append("\n"); 
		query.append("                               CNTR_SEQ," ).append("\n"); 
		query.append("                               CS.BB_CGO_SEQ CGO_SEQ," ).append("\n"); 
		query.append("                               CS.BB_CGO_SEQ U_CGO_SEQ," ).append("\n"); 
		query.append("                               CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CNTR_NO END CNTR_NO," ).append("\n"); 
		query.append("                               POD_CD," ).append("\n"); 
		query.append("                               POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                               POL_YD_CD," ).append("\n"); 
		query.append("                               POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                               MLB," ).append("\n"); 
		query.append("                               CNTR_TPSZ_CD," ).append("\n"); 
		query.append("                               FULL_MTY_CD," ).append("\n"); 
		query.append("                               CNTR_GRS_WGT," ).append("\n"); 
		query.append("                               QTY.WGT_UT_CD," ).append("\n"); 
		query.append("                               CS.GRS_WGT CGO_GRS_WGT," ).append("\n"); 
		query.append("                               CS.DIM_LEN," ).append("\n"); 
		query.append("                               CS.DIM_WDT," ).append("\n"); 
		query.append("                               CS.DIM_HGT," ).append("\n"); 
		query.append("                               STWG_CD," ).append("\n"); 
		query.append("                               SPCL_CGO_AUTH_FLG," ).append("\n"); 
		query.append("                               TRIM(CS.SPCL_RQST_DESC)||DECODE(TRIM(CS.DIFF_RMK),NULL,'','/')||TRIM(CS.DIFF_RMK) CBF_RMK, " ).append("\n"); 
		query.append("                               QTY.UPD_USR_ID," ).append("\n"); 
		query.append("                               QTY.UPD_DT," ).append("\n"); 
		query.append("                               VSL_CD," ).append("\n"); 
		query.append("                               SKD_VOY_NO," ).append("\n"); 
		query.append("                               SKD_DIR_CD," ).append("\n"); 
		query.append("                               YD_CD," ).append("\n"); 
		query.append("                               CBF_IND_FLG," ).append("\n"); 
		query.append("                               LANE," ).append("\n"); 
		query.append("                               CMDT" ).append("\n"); 
		query.append("                        FROM   ( SELECT BKG_NO," ).append("\n"); 
		query.append("                                         ROW_NUMBER( ) OVER ( PARTITION BY BKG_NO, CGO_SEQ ORDER BY BKG_NO ASC ) CNTR_SEQ," ).append("\n"); 
		query.append("                                         CGO_SEQ," ).append("\n"); 
		query.append("                                         CNTR_NO," ).append("\n"); 
		query.append("                                         POD_CD," ).append("\n"); 
		query.append("                                         POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                         POL_YD_CD," ).append("\n"); 
		query.append("                                         POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                         MLB," ).append("\n"); 
		query.append("                                         CNTR_TPSZ_CD," ).append("\n"); 
		query.append("                                         FULL_MTY_CD," ).append("\n"); 
		query.append("                                         CNTR_GRS_WGT," ).append("\n"); 
		query.append("                                         WGT_UT_CD," ).append("\n"); 
		query.append("                                         STWG_CD," ).append("\n"); 
		query.append("                                         SPCL_CGO_AUTH_FLG," ).append("\n"); 
		query.append("                                         UPD_USR_ID," ).append("\n"); 
		query.append("                                         UPD_DT," ).append("\n"); 
		query.append("                                         VSL_CD," ).append("\n"); 
		query.append("                                         SKD_VOY_NO," ).append("\n"); 
		query.append("                                         SKD_DIR_CD," ).append("\n"); 
		query.append("                                         YD_CD," ).append("\n"); 
		query.append("                                         CBF_IND_FLG," ).append("\n"); 
		query.append("                                         LANE," ).append("\n"); 
		query.append("                                         CMDT," ).append("\n"); 
		query.append("                                         QTY," ).append("\n"); 
		query.append("                                         ROW_NUMBER() OVER (PARTITION BY BKG_NO, CNTR_TPSZ_CD, CGO_SEQ ORDER BY CNTR_NO) RN," ).append("\n"); 
		query.append("                                         COUNT(CNTR_NO) OVER (PARTITION BY BKG_NO, CNTR_TPSZ_CD ) CNT" ).append("\n"); 
		query.append("                                 FROM   ( SELECT VVD_BKG.BKG_NO                                     BKG_NO," ).append("\n"); 
		query.append("                                                  MAX(BB.BB_CGO_SEQ)                             CGO_SEQ," ).append("\n"); 
		query.append("                                                  CNTR.CNTR_NO                                   CNTR_NO," ).append("\n"); 
		query.append("                                                  NVL(VVD_BKG.POD_CD,' ')                            POD_CD," ).append("\n"); 
		query.append("                                                  VVD_BKG.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                                  VVD_BKG.POL_YD_CD," ).append("\n"); 
		query.append("                                                  VVD_BKG.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                                  VVD_BKG.BLCK_STWG_CD                               MLB," ).append("\n"); 
		query.append("                                                  QTY.CNTR_TPSZ_CD                               CNTR_TPSZ_CD," ).append("\n"); 
		query.append("                                                  DECODE(NVL(VVD_BKG.BKG_CGO_TP_CD,' '),'F','F','E') FULL_MTY_CD," ).append("\n"); 
		query.append("                                                  SUM(BB.GRS_WGT)                                CNTR_GRS_WGT," ).append("\n"); 
		query.append("                                                  BB.WGT_UT_CD                                  WGT_UT_CD," ).append("\n"); 
		query.append("                                                  NVL(STWG.STWG_CD,' ')                           STWG_CD," ).append("\n"); 
		query.append("                                                  BB.SPCL_CGO_APRO_CD                            SPCL_CGO_AUTH_FLG," ).append("\n"); 
		query.append("                                                  VVD_BKG.UPD_USR_ID," ).append("\n"); 
		query.append("                                                  VVD_BKG.UPD_DT," ).append("\n"); 
		query.append("                                                  VVD_BKG.VSL_CD," ).append("\n"); 
		query.append("                                                  VVD_BKG.SKD_VOY_NO," ).append("\n"); 
		query.append("                                                  VVD_BKG.SKD_DIR_CD," ).append("\n"); 
		query.append("                                                  CNTR.ORG_YD_CD                                 YD_CD," ).append("\n"); 
		query.append("                                                  VVD_BKG.BKG_STS_CD                                 CBF_IND_FLG," ).append("\n"); 
		query.append("                                                  VVD_BKG.SLAN_CD                                    LANE," ).append("\n"); 
		query.append("                                                  M.CMDT_NM                                      CMDT," ).append("\n"); 
		query.append("                                                  DTL.OP_CNTR_QTY QTY" ).append("\n"); 
		query.append("                                             FROM VVD_BKG," ).append("\n"); 
		query.append("                                                  BKG_STWG_CGO STWG," ).append("\n"); 
		query.append("                                                  BKG_CONTAINER CNTR, " ).append("\n"); 
		query.append("                                                  BKG_QUANTITY QTY, " ).append("\n"); 
		query.append("                                                  BKG_QTY_DTL DTL, " ).append("\n"); 
		query.append("                                                  BKG_BB_CGO BB, " ).append("\n"); 
		query.append("                                                  MDM_COMMODITY M" ).append("\n"); 
		query.append("                                            WHERE VVD_BKG.BKG_NO          = QTY.BKG_NO(+)" ).append("\n"); 
		query.append("                                              AND VVD_BKG.BKG_NO          = STWG.BKG_NO(+)" ).append("\n"); 
		query.append("                                              AND QTY.BKG_NO          = CNTR.BKG_NO(+)" ).append("\n"); 
		query.append("                                              AND QTY.CNTR_TPSZ_CD    = CNTR.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("                                              AND QTY.BKG_NO          = DTL.BKG_NO" ).append("\n"); 
		query.append("                                              AND QTY.CNTR_TPSZ_CD    = DTL.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                              AND  DTL.BB_CGO_FLG      = 'Y'" ).append("\n"); 
		query.append("                                              AND SUBSTR(QTY.CNTR_TPSZ_CD,1,1) IN ('F','A','P')" ).append("\n"); 
		query.append("                                              AND QTY.BKG_NO          = BB.BKG_NO(+)" ).append("\n"); 
		query.append("                                              AND VVD_BKG.CMDT_CD         = M.CMDT_CD(+)" ).append("\n"); 
		query.append("                                              AND M.DELT_FLG(+)       = 'N' " ).append("\n"); 
		query.append("                                              AND NVL(BB.SPCL_CGO_APRO_CD(+), ' ') NOT IN ('C','N')" ).append("\n"); 
		query.append("                                         GROUP BY VVD_BKG.BKG_NO, CNTR.CNTR_NO, NVL(VVD_BKG.POD_CD,' '), VVD_BKG.POD_CLPT_IND_SEQ, VVD_BKG.POL_YD_CD, VVD_BKG.POL_CLPT_IND_SEQ, VVD_BKG.BLCK_STWG_CD, QTY.CNTR_TPSZ_CD," ).append("\n"); 
		query.append("                                                  DECODE(NVL(VVD_BKG.BKG_CGO_TP_CD,' '),'F','F','E'), BB.WGT_UT_CD, BB.GRS_WGT, NVL(STWG.STWG_CD,' '), BB.SPCL_CGO_APRO_CD," ).append("\n"); 
		query.append("                                                  VVD_BKG.UPD_USR_ID, VVD_BKG.UPD_DT, VVD_BKG.VSL_CD, VVD_BKG.SKD_VOY_NO, VVD_BKG.SKD_DIR_CD, CNTR.ORG_YD_CD, VVD_BKG.BKG_STS_CD," ).append("\n"); 
		query.append("                                                  VVD_BKG.SLAN_CD, M.CMDT_NM, DTL.OP_CNTR_QTY ) ) QTY, BKG_BB_CGO CS, COPY_T C" ).append("\n"); 
		query.append("                        WHERE  QTY >= RN" ).append("\n"); 
		query.append("                        AND    DECODE(QTY.RN,1,QTY - DECODE(QTY.CNT,0,0,QTY.CNT-1)) >= C.NO(+)" ).append("\n"); 
		query.append("                        AND    QTY.BKG_NO   = CS.BKG_NO(+)" ).append("\n"); 
		query.append("                        AND    QTY.CNTR_SEQ = CS.BB_CGO_SEQ(+) )" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                -- UNION ALL 4 : AWK_CGO" ).append("\n"); 
		query.append("                SELECT NVL(VVD_BKG.BKG_NO,' ')       BKG_NO," ).append("\n"); 
		query.append("                       AK.AWK_CGO_SEQ            CNTR_SEQ," ).append("\n"); 
		query.append("                       1                         CGO_SEQ," ).append("\n"); 
		query.append("                       AK.AWK_CGO_SEQ            U_CGO_SEQ," ).append("\n"); 
		query.append("                       NVL(AK.CNTR_NO,' ')       CNTR_NO," ).append("\n"); 
		query.append("                       NVL(VVD_BKG.POD_CD,' ')       POD_CD," ).append("\n"); 
		query.append("                       VVD_BKG.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       VVD_BKG.POL_YD_CD," ).append("\n"); 
		query.append("                       VVD_BKG.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                       VVD_BKG.BLCK_STWG_CD          MLB," ).append("\n"); 
		query.append("                       NVL(QTY.CNTR_TPSZ_CD,' ') CNTR_TPSZ_CD," ).append("\n"); 
		query.append("                       DECODE(NVL(VVD_BKG.BKG_CGO_TP_CD,' '),'F','F','E') FULL_MTY_CD," ).append("\n"); 
		query.append("                       CASE " ).append("\n"); 
		query.append("                           WHEN AK.CNTR_NO IS NULL THEN" ).append("\n"); 
		query.append("                                SUM(AK.GRS_WGT) OVER (PARTITION BY VVD_BKG.BKG_NO, AK.CNTR_NO, AK.AWK_CGO_SEQ )" ).append("\n"); 
		query.append("                           ELSE" ).append("\n"); 
		query.append("                                SUM(AK.GRS_WGT) OVER (PARTITION BY AK.CNTR_NO)" ).append("\n"); 
		query.append("                       END                  CNTR_GRS_WGT," ).append("\n"); 
		query.append("                       AK.WGT_UT_CD         WGT_UT_CD," ).append("\n"); 
		query.append("                       AK.GRS_WGT           CGO_GRS_WGT," ).append("\n"); 
		query.append("                       'AK'                 SPCL_CGO," ).append("\n"); 
		query.append("                       NULL                 IMDG_CLSS_CD," ).append("\n"); 
		query.append("                       NULL                 IMDG_UN_NO," ).append("\n"); 
		query.append("                       NULL                 PRP_SHP_NM," ).append("\n"); 
		query.append("                       NULL                 HZD_DESC," ).append("\n"); 
		query.append("                       NULL                 IMDG_SUBS_RSK_LBL_CD," ).append("\n"); 
		query.append("                       NULL                 IMDG_MRN_POLUT_CD," ).append("\n"); 
		query.append("                       NULL                 PCK_GRP_CD," ).append("\n"); 
		query.append("                       NULL                 LQ," ).append("\n"); 
		query.append("                       NULL                 EQ," ).append("\n"); 
		query.append("                       NULL                 FDO_TEMP," ).append("\n"); 
		query.append("                       NULL                 CDO_TEMP," ).append("\n"); 
		query.append("                       AK.TTL_DIM_LEN       DIM_LEN," ).append("\n"); 
		query.append("                       AK.TTL_DIM_WDT       DIM_WDT," ).append("\n"); 
		query.append("                       AK.TTL_DIM_HGT       DIM_HGT," ).append("\n"); 
		query.append("                       AK.OVR_FWRD_LEN      OVR_FWD," ).append("\n"); 
		query.append("                       AK.OVR_BKWD_LEN      OVR_AFT," ).append("\n"); 
		query.append("                       AK.OVR_LF_LEN        OVR_LFT," ).append("\n"); 
		query.append("                       AK.OVR_RT_LEN        OVR_RGT," ).append("\n"); 
		query.append("                       AK.OVR_HGT           OVR_HGT," ).append("\n"); 
		query.append("                       AK.CRN_PST_STS_CD    POST_EXD," ).append("\n"); 
		query.append("                       NVL(STWG.STWG_CD,' ') STWG_CD," ).append("\n"); 
		query.append("                       AK.SPCL_CGO_APRO_CD  SPCL_CGO_AUTH_FLG," ).append("\n"); 
		query.append("                       TRIM(AK.STWG_RQST_DESC)||DECODE(TRIM(AK.DIFF_RMK),NULL,'','/')||TRIM(AK.DIFF_RMK) CBF_RMK," ).append("\n"); 
		query.append("                       VVD_BKG.UPD_USR_ID," ).append("\n"); 
		query.append("                       VVD_BKG.UPD_DT," ).append("\n"); 
		query.append("                       VVD_BKG.VSL_CD," ).append("\n"); 
		query.append("                       VVD_BKG.SKD_VOY_NO," ).append("\n"); 
		query.append("                       VVD_BKG.SKD_DIR_CD," ).append("\n"); 
		query.append("                       AK.ORG_YD_CD YD_CD," ).append("\n"); 
		query.append("                       VVD_BKG.BKG_STS_CD CBF_IND_FLG," ).append("\n"); 
		query.append("                       VVD_BKG.SLAN_CD LANE," ).append("\n"); 
		query.append("                       M.CMDT_NM   CMDT" ).append("\n"); 
		query.append("                  FROM VVD_BKG," ).append("\n"); 
		query.append("                       BKG_STWG_CGO STWG," ).append("\n"); 
		query.append("                       BKG_QUANTITY QTY, " ).append("\n"); 
		query.append("                       (" ).append("\n"); 
		query.append("                        SELECT CAK.*," ).append("\n"); 
		query.append("                               CNTR.ORG_YD_CD" ).append("\n"); 
		query.append("                          FROM BKG_AWK_CGO   CAK," ).append("\n"); 
		query.append("                               BKG_CONTAINER CNTR" ).append("\n"); 
		query.append("                         WHERE CAK.BKG_NO          = CNTR.BKG_NO(+)" ).append("\n"); 
		query.append("                           AND CAK.CNTR_TPSZ_CD    = CNTR.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("                           AND CAK.CNTR_NO         = CNTR.CNTR_NO(+)" ).append("\n"); 
		query.append("                           AND CNTR.AWK_CGO_FLG(+) = 'Y'" ).append("\n"); 
		query.append("                           AND NVL(CAK.SPCL_CGO_APRO_CD, ' ') NOT IN ('C','N')" ).append("\n"); 
		query.append("                       ) AK," ).append("\n"); 
		query.append("                       MDM_COMMODITY M" ).append("\n"); 
		query.append("         		 WHERE VVD_BKG.BKG_NO          = QTY.BKG_NO(+)" ).append("\n"); 
		query.append("                   AND VVD_BKG.BKG_NO          = STWG.BKG_NO(+)" ).append("\n"); 
		query.append("                   AND SUBSTR(QTY.CNTR_TPSZ_CD,1,1) <> 'Q'" ).append("\n"); 
		query.append("                   AND QTY.BKG_NO          = AK.BKG_NO" ).append("\n"); 
		query.append("                   AND QTY.CNTR_TPSZ_CD    = AK.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                   AND VVD_BKG.CMDT_CD         = M.CMDT_CD(+)" ).append("\n"); 
		query.append("                   AND M.DELT_FLG(+)       = 'N'" ).append("\n"); 
		query.append("                ) A," ).append("\n"); 
		query.append("		        (" ).append("\n"); 
		query.append("                  SELECT V.BKG_NO" ).append("\n"); 
		query.append("                       , V.VSL_CD" ).append("\n"); 
		query.append("                       , V.SKD_VOY_NO " ).append("\n"); 
		query.append("                       , V.SKD_DIR_CD" ).append("\n"); 
		query.append("                       , S.DCGO_SEQ" ).append("\n"); 
		query.append("                       , S.RC_SEQ" ).append("\n"); 
		query.append("                       , S.BB_CGO_SEQ" ).append("\n"); 
		query.append("                       , S.AWK_CGO_SEQ" ).append("\n"); 
		query.append("                       , S.APRO_REF_NO" ).append("\n"); 
		query.append("                    FROM SCG_AUTHORIZATION S" ).append("\n"); 
		query.append("                       , SCG_VVD_APRO_RQST V " ).append("\n"); 
		query.append("                   WHERE S.BKG_NO                 = V.BKG_NO" ).append("\n"); 
		query.append("                     AND S.SPCL_CGO_APRO_RQST_SEQ = V.SPCL_CGO_APRO_RQST_SEQ" ).append("\n"); 
		query.append("                     AND S.VSL_PRE_PST_CD         = V.VSL_PRE_PST_CD" ).append("\n"); 
		query.append("                     AND S.VSL_SEQ                = V.VSL_SEQ" ).append("\n"); 
		query.append("                     AND V.VSL_CD                 = @[vsl_cd]" ).append("\n"); 
		query.append("                     AND V.SKD_VOY_NO             = @[skd_voy_no]" ).append("\n"); 
		query.append("                     AND V.SKD_DIR_CD             = @[skd_dir_cd]" ).append("\n"); 
		query.append("                     AND V.SPCL_CGO_APRO_RQST_SEQ = (SELECT MAX(T.SPCL_CGO_APRO_RQST_SEQ) " ).append("\n"); 
		query.append("                                                       FROM SCG_VVD_APRO_RQST T " ).append("\n"); 
		query.append("                                                      WHERE T.BKG_NO     = V.BKG_NO" ).append("\n"); 
		query.append("                                                        AND T.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                                                        AND T.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                        AND T.SKD_DIR_CD = V.SKD_DIR_CD) " ).append("\n"); 
		query.append("                ) VS," ).append("\n"); 
		query.append("                MDM_CNTR_TP_SZ TP" ).append("\n"); 
		query.append("               WHERE A.BKG_NO     = VS.BKG_NO(+)" ).append("\n"); 
		query.append("                 AND A.VSL_CD     = VS.VSL_CD(+) " ).append("\n"); 
		query.append("                 AND A.SKD_VOY_NO = VS.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                 AND A.SKD_DIR_CD = VS.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                 AND A.U_CGO_SEQ  = DECODE(A.SPCL_CGO,'DG',VS.DCGO_SEQ(+),'RF',VS.RC_SEQ(+),'BB',VS.BB_CGO_SEQ(+),'AK',VS.AWK_CGO_SEQ(+),'ST',A.CGO_SEQ)" ).append("\n"); 
		query.append("                 AND A.CNTR_TPSZ_CD    = TP.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("     ) L" ).append("\n"); 
		query.append("GROUP BY L.BKG_NO, L.CNTR_NO, L.POD, L.POD_CLPT_IND_SEQ, L.MLB, L.TP, L.CNTR_SEQ, L.CGO_SEQ, L.OPR" ).append("\n"); 
		query.append("ORDER BY L.POD, L.POD_CLPT_IND_SEQ, L.MLB, L.BKG_NO, L.CNTR_SEQ, L.CGO_SEQ, L.CNTR_NO, L.TP" ).append("\n"); 
		query.append(" " ).append("\n"); 

	}
}