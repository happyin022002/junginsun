<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TerminalDepartureReportDBDAODischVolTotalTdrVORSQL">
			<desc><![CDATA[ssss]]></desc>
			<sql><![CDATA[
SELECT S.OPR_CD,
	   @[port_cd] as POD_CD,
             SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,0, NULL, QTY), NULL), NULL))) FULL_BO_20,
       SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, '3', DECODE(QTY,0, NULL, QTY), NULL), NULL))) FULL_BO_2H,
       SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,0, NULL, QTY), NULL), NULL))) FULL_BO_40,
       SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, 'H', DECODE(QTY,0, NULL, QTY), NULL), NULL))) FULL_BO_4H,
       SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, 'L', DECODE(QTY,0, NULL, QTY), NULL), NULL))) FULL_BO_45,
       SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,0, NULL, QTY), NULL), NULL))) FULL_TS_20,
       SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, '3', DECODE(QTY,0, NULL, QTY), NULL), NULL))) FULL_TS_2H,
       SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,0, NULL, QTY), NULL), NULL))) FULL_TS_40,
       SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, 'H', DECODE(QTY,0, NULL, QTY), NULL), NULL))) FULL_TS_4H,
       SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, 'L', DECODE(QTY,0, NULL, QTY), NULL), NULL))) FULL_TS_45,
       SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,0, NULL, QTY), NULL), NULL), NULL)) ET_BO_20,
       SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, '3', DECODE(QTY,0, NULL, QTY), NULL), NULL), NULL)) ET_BO_2H,
       SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,0, NULL, QTY), NULL), NULL), NULL)) ET_BO_40,
       SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, 'H', DECODE(QTY,0, NULL, QTY), NULL), NULL), NULL)) ET_BO_4H,
       SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, 'L', DECODE(QTY,0, NULL, QTY), NULL), NULL), NULL)) ET_BO_45,
       SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,0, NULL, QTY), NULL), NULL), NULL)) ET_TS_20,
       SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, '3', DECODE(QTY,0, NULL, QTY), NULL), NULL), NULL)) ET_TS_2H,
       SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,0, NULL, QTY), NULL), NULL), NULL)) ET_TS_40,
       SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, 'H', DECODE(QTY,0, NULL, QTY), NULL), NULL), NULL)) ET_TS_4H,
       SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, 'L', DECODE(QTY,0, NULL, QTY), NULL), NULL), NULL)) ET_TS_45,
       SUM(DECODE(S.CNTR_SIZE, '2', DECODE(WEIGHT, 0, NULL, WEIGHT), NULL)) WT_20,
       SUM(DECODE(S.CNTR_SIZE, '3', DECODE(WEIGHT, 0, NULL, WEIGHT), NULL)) WT_2H,
       SUM(DECODE(S.CNTR_SIZE, '4', DECODE(WEIGHT, 0, NULL, WEIGHT), NULL)) WT_40,
       SUM(DECODE(S.CNTR_SIZE, 'H', DECODE(WEIGHT, 0, NULL, WEIGHT), NULL)) WT_4H,
       SUM(DECODE(S.CNTR_SIZE, 'L', DECODE(WEIGHT, 0, NULL, WEIGHT), NULL)) WT_45
FROM   VSK_VSL_PORT_SKD V, TDR_HEADER H, TDR_SUMMARY S
WHERE  V.VSL_CD  		= @[vsl_cd]
AND    V.SKD_VOY_NO  	= @[voy_no]
AND    V.SKD_DIR_CD  	= @[dir_cd]
AND    V.YD_CD 			= @[yd_cd]
AND    V.CLPT_IND_SEQ   = @[clpt_ind_seq]
AND    V.VSL_CD       	= H.VSL_CD
AND    V.SKD_VOY_NO   	= H.VOY_NO
AND    V.SKD_DIR_CD   	= H.DIR_CD
AND    V.VPS_PORT_CD  	= H.PORT_CD
AND    V.CLPT_IND_SEQ 	= H.CALL_IND
AND    H.VSL_CD       	= S.VSL_CD
AND    H.VOY_NO       	= S.VOY_NO
AND    H.DIR_CD       	= S.DIR_CD
AND    H.PORT_CD      	= S.PORT_CD
AND    H.CALL_IND     	= S.CALL_IND
AND    S.STATUS   IN ('DS','DT')
#if (${sys_create} != 'Externally Produced')
AND	   S.CNTR_TYPE NOT IN ('D', 'R', 'A')
#end
GROUP BY S.OPR_CD
ORDER BY S.OPR_CD, POD_CD			]]></sql>
			<params>
				<param name="port_cd" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="voy_no" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="clpt_ind_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
