<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BudgetPortChargeMgtDBDAOAddGlEstmIfErpByCreationCSQL">
			<desc><![CDATA[Save data into GL_ESTM_IF_ERP]]></desc>
			<sql><![CDATA[
INSERT INTO GL_ESTM_IF_ERP (
      EXE_YRMON,
      SYS_SRC_ID,
      REV_YRMON,
      ACCT_CD,
      ESTM_SEQ_NO,
      BIZ_UT_ID,
      LOC_CD,
      VSL_CD,
      SKD_VOY_NO,
      SKD_DIR_CD,
      REV_DIR_CD,
      ESTM_VVD_TP_CD, -- 'RV'
      ESTM_IOC_DIV_CD, -- 'OO'
      ESTM_BC_DIV_CD, -- 'C'
      ESTM_VVD_HDR_ID, -- 106405
      TTL_TRF_AMT,
      ESTM_AMT,
      ACT_AMT,
      ACCL_AMT,
      CRE_USR_ID,
      CRE_DT,
      UPD_USR_ID,
      UPD_DT
)
 
SELECT *
FROM  (
  
SELECT EXE_YRMON
      ,'PSO' AS SYS_SRC_ID
      ,REV_YRMON
      ,ACCT_CD
      ,ROWNUM AS ESTM_SEQ_NO
      ,'CNTR' AS BIZ_UT_ID
      ,LOC_CD
      ,VSL_CD
      ,SKD_VOY_NO
      ,SKD_DIR_CD
      ,REV_DIR_CD
      ,ESTM_VVD_TP_CD
      ,ESTM_IOC_DIV_CD
      ,ESTM_BC_DIV_CD
      ,ESTM_VVD_HDR_ID
      ,TTL_TRF_AMT

      /**** OLD ****
      ,ESTM_AMT
      ,DECODE(ESTM_VVD_TP_CD, 'PV', 0, ACT_AMT)
      ,DECODE(ESTM_VVD_TP_CD, 'PV', 0, ACCL_AMT)
       **** OLD ****/

      /**** NEW ****/
      ,ESTM_AMT     ESTM_AMT
      ,DECODE(ESTM_VVD_TP_CD, 'PV', 0, ACT_AMT)  ACT_AMT
      ,DECODE(ESTM_VVD_TP_CD, 'PV', 0, ESTM_AMT - ACT_AMT) ACCL_AMT

      ,@[cre_usr_id] CRE_USR_ID
      ,SYSDATE       CRE_DT
      ,@[cre_usr_id] UPD_USR_ID
      ,SYSDATE       UPD_DT
FROM   (SELECT VVD.EXE_YRMON AS EXE_YRMON
              ,VVD.REV_YRMON AS REV_YRMON
              ,AMT.ACCT_CD AS ACCT_CD
              ,SUBSTR(NVL(AMT.YD_CD, AMT.YD_CD), 1, 5) AS LOC_CD
              ,VVD.VSL_CD
              ,VVD.SKD_VOY_NO
              ,VVD.SKD_DIR_CD
              ,VVD.REV_DIR_CD
              ,VVD.ESTM_VVD_TP_CD
              ,VVD.ESTM_IOC_DIV_CD
              ,VVD.ESTM_BC_DIV_CD
              ,VVD.ESTM_VVD_HDR_ID
              ,SUM(AMT.EST_AMT) AS TTL_TRF_AMT
			  
              /**** OLD ****
              ,SUM(DECODE(NVL(AMT.ACT_AMT, 0),
                          0,
                          NVL(AMT.EST_AMT, 0),
                          NVL(AMT.ACT_AMT, 0))) AS ESTM_AMT
              ,SUM(NVL(AMT.ACT_AMT, 0)) AS ACT_AMT
              ,SUM(DECODE(NVL(AMT.ACT_AMT, 0),
                          0,
                          NVL(AMT.EST_AMT, 0),
                          NVL(AMT.ACT_AMT, 0))) - SUM(NVL(AMT.ACT_AMT, 0)) AS ACCL_AMT
               **** OLD ****/
 
              /**** NEW ****/
              ,(CASE 
		             WHEN MONTHS_BETWEEN(TO_DATE(EXE_YRMON, 'YYYYMM'), TO_DATE(REV_YRMON, 'YYYYMM')) >= 5 THEN
		                  NVL(SUM(AMT.ACT_AMT), 0)        ----------- 수행월(EXE_YRMON) 5개월 이전 Accural에 대해서는 0 처리함.([CHM-201005568-01])
		             WHEN ACCT_CD = '511911' THEN 
		         	      	(CASE
		                		-------- Accrual이 10만불 이하인 경우에는 Estimated Amount는 Actual Amount로 봄  [#Add 2010.09.07 by sj]
		                		WHEN NVL(SUM(AMT.EST_AMT), 0) - NVL(SUM(AMT.ACT_AMT), 0) <= 100000 THEN
		                			DECODE(NVL(SUM(AMT.ACT_AMT), 0), 0
		                             		, NVL(SUM(AMT.EST_AMT), 0)
		                             		, NVL(SUM(AMT.ACT_AMT), 0))
		                		-------- Accrual이 10만불 초과인 경우에는 Estimated Amount 유지  [#Add 2010.09.07 by sj]
		                		ELSE
		                		    NVL(SUM(AMT.EST_AMT), 0)        ----------- 운하통항비(511911)의 경우에는 Estimated Amount를 유지함.([CHM-201005568-01])
		                     END)
		             ELSE 
		                   DECODE(NVL(SUM(AMT.ACT_AMT), 0), 0
		                             , NVL(SUM(AMT.EST_AMT), 0)
		                             , NVL(SUM(AMT.ACT_AMT), 0))
		        END) ESTM_AMT                   
              ,NVL(SUM(AMT.ACT_AMT), 0) ACT_AMT              
             /* ,DECODE(NVL(SUM(AMT.ACT_AMT), 0), 0
                                              , NVL(SUM(AMT.EST_AMT), 0)
                                              , NVL(SUM(AMT.ACT_AMT), 0)) - NVL(SUM(AMT.ACT_AMT), 0) ACCL_AMT */
 
        FROM   ----------------1.Target VVD
               (
                
                SELECT ESTM_IOC_DIV_CD
                       ,EXE_YRMON
                       ,REV_YRMON
                       ,VSL_CD
                       ,SKD_VOY_NO
                       ,SKD_DIR_CD
                       ,REV_DIR_CD
                       ,ESTM_VVD_TP_CD
                       ,ESTM_VVD_HDR_ID
                       ,ESTM_BC_DIV_CD
                       ,RLANE_CD
                FROM   GL_ESTM_REV_VVD G
                WHERE  ESTM_IOC_DIV_CD = 'OO'
                AND    EXE_YRMON = (SELECT MAX(EXPN_YRMON)
                                    FROM   PSO_TGT_VVD
                                    WHERE  PSO_BZTP_CD = '2')
                #if(${rlane_cd} != '')
				AND    RLANE_CD = @[rlane_cd] 
				#end
                AND    ESTM_BC_DIV_CD IN ('C', 'M')
                
                UNION ALL
                SELECT ESTM_IOC_DIV_CD
                      ,EXE_YRMON
                      ,REV_YRMON
                      ,VSL_CD
                      ,SKD_VOY_NO
                      ,SKD_DIR_CD
                      ,REV_DIR_CD
                      ,ESTM_VVD_TP_CD
                      ,ESTM_VVD_HDR_ID
                      ,ESTM_BC_DIV_CD
                      ,RLANE_CD
                FROM   GL_ESTM_REV_VVD G
                WHERE  ESTM_IOC_DIV_CD <> 'OO'
                AND    (VSL_CD, SKD_VOY_NO, SKD_DIR_CD, REV_DIR_CD) NOT IN
                       (SELECT VSL_CD
                               ,SKD_VOY_NO
                               ,SKD_DIR_CD
                               ,REV_DIR_CD
                         FROM   GL_ESTM_REV_VVD
                         WHERE  ESTM_IOC_DIV_CD = 'OO'
                         AND    EXE_YRMON =
                                (SELECT MAX(EXPN_YRMON)
                                  FROM   PSO_TGT_VVD
                                  WHERE  PSO_BZTP_CD = '2')
                         #if(${rlane_cd} != '')
						 AND    RLANE_CD = @[rlane_cd] 
						 #end
                         )
                AND    EXE_YRMON = (SELECT MAX(EXPN_YRMON)
                                    FROM   PSO_TGT_VVD
                                    WHERE  PSO_BZTP_CD = '2')
                AND    ESTM_BC_DIV_CD IN ('C', 'M')
                #if(${rlane_cd} != '')
				AND    RLANE_CD = @[rlane_cd] 
				#end
	            AND     ( ESTM_VVD_TP_CD  <> 'PV'  
		            	 OR
		            	 -- 진행항차의 경우에는 RLANE의 4번째 자리가 'I'인 경우에는 Internal만 있는 경우 포함, 그 외에는 제외 [#Mod 2010.09.07 by sj]
		            	 (ESTM_VVD_TP_CD  = 'PV' AND 'I' = SUBSTR(RLANE_CD, 4, 1) ))
                
                ) VVD
              ,
               ---------------- END ) 1. Target VVD 
               (
                ----------------START) 2 Estimte Amount / Actual Amount
                SELECT VSL_CD
                       ,SKD_VOY_NO
                       ,SKD_DIR_CD
                       ,RLANE_CD
                       ,YD_CD
                       ,ACCT_CD
                       ,SUM(EST_USD_AMT) AS EST_AMT
                       ,SUM(ACT_AMT) AS ACT_AMT
                FROM   (SELECT VSL_CD
                                ,SKD_VOY_NO
                                ,SKD_DIR_CD
                                ,RLANE_CD
                                ,YD_CD
                                ,ACCT_CD
                                -- 운하통항비의 Estimated Amount는 생성된 전도금이 있으면 이를 사용하고,
                                -- 없으면 Tariff에 의해 계산된 Tariff Cost를 사용한다.
                                ,(CASE 
                                    WHEN ACCT_CD = '511911' THEN
                                        NVL((SELECT ROUND(TTL_LOCL_AMT / XHG_RT, 2)
                                               FROM PSO_CHARGE
                                              WHERE INV_NO LIKE '%-'||VSL_CD||SKD_VOY_NO||SKD_DIR_CD||'%-ADV-%'),
                                             EST_USD_AMT)
                                    ELSE EST_USD_AMT
                                 END) EST_USD_AMT
                                ,ACT_AMT
                        FROM (
                            SELECT E.VSL_CD
                                   ,E.SKD_VOY_NO
                                   ,E.SKD_DIR_CD
                                   ,E.RLANE_CD
                                   ,E.YD_CD
                                   ,CT.ACCT_CD
                                   ,SUM(ROUND(E.INV_LOCL_AMT / X1.USD_LOCL_XCH_RT, 2)) AS EST_USD_AMT
                                   ,MAX(X1.USD_LOCL_XCH_RT) XHG_RT
                                   ,0 AS ACT_AMT
                             FROM   PSO_TGT_VVD     T
                                   ,PSO_TGT_YD_EXPN E
                                   ,GL_MON_XCH_RT   X1
                                   ,TES_LGS_COST    CT
                             WHERE  T.PSO_BZTP_CD = '2'
                             AND    T.PSO_BZTP_CD = E.PSO_BZTP_CD
                             AND    T.VSL_CD = E.VSL_CD
                             AND    T.SKD_VOY_NO = E.SKD_VOY_NO
                             AND    T.SKD_DIR_CD = E.SKD_DIR_CD
                             AND    E.LGS_COST_CD = CT.LGS_COST_CD
                             AND    T.EXPN_YRMON =
                                    (SELECT MAX(EXPN_YRMON)
                                      FROM   PSO_TGT_VVD
                                      WHERE  PSO_BZTP_CD = '2')
                             AND    E.LOCL_CURR_CD = X1.CURR_CD
                             AND    X1.ACCT_XCH_RT_LVL = '1'
                             AND    X1.ACCT_XCH_RT_YRMON =
                                    (SELECT MAX(EXPN_YRMON)
                                      FROM   PSO_TGT_VVD
                                      WHERE  PSO_BZTP_CD = '2')
                             #if(${rlane_cd} != '')
    						 AND    RLANE_CD = @[rlane_cd] 
    						 #end
                             GROUP  BY E.VSL_CD
                                      ,E.SKD_VOY_NO
                                      ,E.SKD_DIR_CD
                                      ,E.RLANE_CD
                                      ,E.YD_CD
                                      ,CT.ACCT_CD
                        )
                         UNION ALL
                         
                         SELECT VSL_CD
                               ,SKD_VOY_NO
                               ,SKD_DIR_CD
                               ,RLANE_CD
                               ,YD_CD
                               ,ACCT_CD
                               ,0 AS EST_USD_AMT
                               ,SUM(ACT_AMT) ACT_AMT
                        FROM (
                                SELECT C2.VSL_CD
                                        -- TURN / VIRTUAL 항차 구분 - 사용자가 IO 입력하지 않은 경우에는 시스템에서 자동으로 배분하므로,
                                        -- 사용자가 IO 입력하지 않은 경우에는 INVOICE의 데이터를 이용.
                                        -- 그 외에는 SKD의 TURN_VOY_NO 사용
                                       ,(CASE 
                                            WHEN CNT = 0 OR C2.DP_IO_BND_CD IS NULL THEN
                                                C2.SKD_VOY_NO
                                            ELSE
                                                NVL(V.TURN_SKD_VOY_NO, C2.SKD_VOY_NO)
                                        END) SKD_VOY_NO
                                       ,(CASE 
                                            WHEN CNT = 0 OR C2.DP_IO_BND_CD IS NULL THEN
                                                C2.SKD_DIR_CD
                                            ELSE
                                                NVL(V.TURN_SKD_DIR_CD, C2.SKD_DIR_CD)
                                        END) SKD_DIR_CD
                                        ,(CASE 
                                            WHEN CNT = 0 OR C2.DP_IO_BND_CD IS NULL THEN
                                                C2.RLANE_CD
                                            ELSE
                                                NVL(PSO_GET_REV_LANE_FNC(V.VSL_CD, V.TURN_SKD_VOY_NO, V.TURN_SKD_DIR_CD, SUBSTR (C1.YD_CD, 1, 5)), C2.RLANE_CD)
                                        END) RLANE_CD
                                       ,C1.YD_CD
                                       ,CT.ACCT_CD
                                       ,0 AS EST_USD_AMT
                                       ,ROUND((C2.LOCL_AMT / X1.USD_LOCL_XCH_RT) * 0.5, 2)  ACT_AMT
                                 
                                 FROM   PSO_CHARGE    C1
                                       ,PSO_CHG_DTL   C2
                                       ,GL_MON_XCH_RT X1
                                       ,AP_PAY_INV    A1
                                       ,AP_INV_HDR    A2							
                                       ,TES_LGS_COST  CT
                                       ,VSK_VSL_PORT_SKD V
                                       ,(SELECT CPY_NO CNT FROM COM_CPY_NO WHERE CPY_NO <= 1)
                                 WHERE  C1.ISS_CTY_CD = C2.ISS_CTY_CD
                                 AND    C1.SO_SEQ = C2.SO_SEQ
                                 AND    C1.INV_NO NOT LIKE 'D-%-ADV-%'
                                 AND    C1.INV_NO NOT LIKE 'B-%-ADV-%'
                                 AND    C1.INV_RGST_NO = A1.INV_RGST_NO
                                 AND    A1.INV_STS_CD IN ('P', 'D')
                                 AND    A1.INV_SUB_SYS_CD = 'PSO'
                                 AND    C1.CURR_CD = X1.CURR_CD
                                 AND    X1.ACCT_XCH_RT_LVL = '1'
                                 AND    X1.ACCT_XCH_RT_YRMON =
                                        (SELECT MAX(EXPN_YRMON)
                                          FROM   PSO_TGT_VVD
                                          WHERE  PSO_BZTP_CD = '2')
                                 AND    C2.LGS_COST_CD = CT.LGS_COST_CD
                                 AND    A1.CSR_NO = A2.CSR_NO
                                 AND    NVL(A2.GL_DT, '1') <= (SELECT MAX(EXPN_YRMON)
                                          						 FROM PSO_TGT_VVD
                                          						WHERE PSO_BZTP_CD = '2')||'31'
                                 AND    EXISTS
                                              (SELECT 'X'
                                                     FROM   GL_ESTM_REV_VVD
                                                     WHERE  EXE_YRMON =
                                                            (SELECT MAX(EXPN_YRMON)
                                                             FROM   PSO_TGT_VVD
                                                             WHERE  PSO_BZTP_CD = '2')
                                                     #if(${rlane_cd} != '')
                    								 AND    RLANE_CD = @[rlane_cd] 
                    								 #end
                                                     AND    VSL_CD = C2.VSL_CD
                                                     AND    SKD_VOY_NO = C2.SKD_VOY_NO
                                                     AND    SKD_DIR_CD = C2.SKD_DIR_CD)
                                AND C2.VSL_CD = V.VSL_CD(+) AND C2.SKD_VOY_NO = V.SKD_VOY_NO(+) AND C2.SKD_DIR_CD = V.SKD_DIR_CD(+) AND C1.YD_CD = NVL(V.YD_CD, C1.YD_CD)
                                AND NVL(V.CLPT_SEQ, 1) = NVL((SELECT MIN(CLPT_SEQ) FROM VSK_VSL_PORT_SKD
                                                                WHERE VSL_CD = V.VSL_CD AND SKD_VOY_NO = V.SKD_VOY_NO 
                                                                AND SKD_DIR_CD = V.SKD_DIR_CD AND YD_CD = V.YD_CD
                                                                AND 'S' <> NVL(SKD_CNG_STS_CD, ' ')), 1)
                            )
                         GROUP  BY VSL_CD
                                   ,SKD_VOY_NO
                                   ,SKD_DIR_CD
                                   ,RLANE_CD
                                   ,YD_CD
                                   ,ACCT_CD
                        )
                WHERE 1 = 1
                GROUP  BY VSL_CD
                          ,SKD_VOY_NO
                          ,SKD_DIR_CD
                          ,RLANE_CD
                          ,YD_CD
                          ,ACCT_CD
                ----------------END) 2 Estimte Amount / Actual Amount END   
                ) AMT
        
        WHERE  1 = 1
        AND    VVD.VSL_CD = AMT.VSL_CD
        AND    VVD.SKD_VOY_NO = AMT.SKD_VOY_NO
        AND    VVD.SKD_DIR_CD = AMT.SKD_DIR_CD
        AND    VVD.RLANE_CD = AMT.RLANE_CD
        GROUP  BY VVD.EXE_YRMON
                 ,VVD.REV_YRMON
                 ,AMT.ACCT_CD
                 ,SUBSTR(NVL(AMT.YD_CD, AMT.YD_CD), 1, 5)
                 ,VVD.VSL_CD
                 ,VVD.SKD_VOY_NO
                 ,VVD.SKD_DIR_CD
                 ,VVD.REV_DIR_CD
                 ,VVD.ESTM_VVD_TP_CD
                 ,VVD.ESTM_IOC_DIV_CD
                 ,VVD.ESTM_BC_DIV_CD
                 ,VVD.ESTM_VVD_HDR_ID
        ORDER  BY LOC_CD
                 ,ACCT_CD
                 ,VSL_CD
                 ,SKD_VOY_NO
                 ,SKD_DIR_CD
                 ,REV_DIR_CD)
      )
WHERE  1=1
AND ACCT_CD       NOT IN (962111, 564611)
AND ACCT_CD = DECODE(ACCT_CD, '511791', DECODE(ACT_AMT, 0, '', ACCT_CD),	/**ACCL_AMT가 0이 아니면 511791~5 Account를 제외함**/
							  '511792', DECODE(ACT_AMT, 0, '', ACCT_CD),	
							  '511793', DECODE(ACT_AMT, 0, '', ACCT_CD),	
							  '511794', DECODE(ACT_AMT, 0, '', ACCT_CD),	
							  '511795', DECODE(ACT_AMT, 0, '', ACCT_CD),	
			  				  '511751', DECODE(SUBSTR(LOC_CD,1,2),'CN',DECODE(ACT_AMT, 0, '', ACCT_CD),
                                                                  'IT',DECODE(ACT_AMT, 0, '', ACCT_CD),
                                                                  'TW',DECODE(ACT_AMT, 0, '', ACCT_CD),
                                                                  'JP',DECODE(ACT_AMT, 0, '', ACCT_CD),  
                                                                  ACCT_CD),
                                        ACCT_CD) /**중국 Tonnage 비용인 경우 ACT_AMT가 0이면 511791 Account를 제외함**/			]]></sql>
			<params>
				<param name="cre_usr_id" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
