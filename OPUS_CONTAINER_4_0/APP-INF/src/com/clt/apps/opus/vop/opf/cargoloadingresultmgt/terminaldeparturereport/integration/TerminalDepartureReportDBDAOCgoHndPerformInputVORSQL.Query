<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TerminalDepartureReportDBDAOCgoHndPerformInputVORSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
SELECT DECODE(C3,1,'G.Total',DECODE(C5,1,'G.Total',PORT)) PORT,
       DECODE(C2,1,'Total',LANE)                          LANE,
       VVD,
       DECODE(C1,1,'S.Total',DECODE(C3,1,'Total',OPR))    OPR,
       DS_FL_20,
       DS_FL_2H,
       DS_FL_40,
       DS_FL_4H,
       DS_FL_45,
       DS_ET_20,
       DS_ET_2H,
       DS_ET_40,
       DS_ET_4H,
       DS_ET_45,
       LD_FL_20,
       LD_FL_2H,
       LD_FL_40,
       LD_FL_4H,
       LD_FL_45,
       LD_ET_20,
       LD_ET_2H,
       LD_ET_40,
       LD_ET_4H,
       LD_ET_45,
       TL_FL_20,
       TL_FL_2H,
       TL_FL_40,
       TL_FL_4H,
       TL_FL_45,
       TL_ET_20,
       TL_ET_2H,
       TL_ET_40,
       TL_ET_4H,
       TL_ET_45,
       WT_20,
       WT_2H,
       WT_40,
       WT_4H,
       WT_45
FROM ( SELECT S.PORT_CD                    PORT,
              V.LANE                       LANE,
              S.VSL_CD||S.VOY_NO||S.DIR_CD VVD,
              S.OPR_CD                     OPR,
              GROUPING(S.PORT_CD) P, GROUPING(V.LANE) L, GROUPING(S.VSL_CD||S.VOY_NO||S.DIR_CD) V, GROUPING(S.OPR_CD) O,
              CASE
              WHEN GROUPING(S.PORT_CD)=0 AND GROUPING(V.LANE)=0 AND GROUPING(S.VSL_CD||S.VOY_NO||S.DIR_CD)=0 AND GROUPING(S.OPR_CD)=1 THEN 1
              ELSE 0
              END C1,
              CASE
              WHEN GROUPING(S.PORT_CD)=0 AND GROUPING(V.LANE)=1 AND GROUPING(S.VSL_CD||S.VOY_NO||S.DIR_CD)=1 AND GROUPING(S.OPR_CD)=1 THEN 1
              ELSE 0
              END C2,
              CASE
              WHEN GROUPING(S.PORT_CD)=1 AND GROUPING(V.LANE)=1 AND GROUPING(S.VSL_CD||S.VOY_NO||S.DIR_CD)=1 AND GROUPING(S.OPR_CD)=1 THEN 1
              ELSE 0
              END C3,
              CASE
              WHEN GROUPING(S.PORT_CD)=0 AND GROUPING(V.LANE)=0 AND GROUPING(S.VSL_CD||S.VOY_NO||S.DIR_CD)=0 AND GROUPING(S.OPR_CD)=0 THEN 1
              ELSE 0
              END C4,
              CASE
              WHEN GROUPING(S.PORT_CD)=1 AND GROUPING(V.LANE)=1 AND GROUPING(S.VSL_CD||S.VOY_NO||S.DIR_CD)=1 AND GROUPING(S.OPR_CD)=0 THEN 1
              ELSE 0
              END C5,

              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'2',QTY,0),'DT',DECODE(S.CNTR_SIZE,'2',QTY,0),0)))   DS_FL_20,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'3',QTY,0),'DT',DECODE(S.CNTR_SIZE,'3',QTY,0),0)))   DS_FL_2H,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'4',QTY,0),'DT',DECODE(S.CNTR_SIZE,'4',QTY,0),0)))   DS_FL_40,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'H',QTY,0),'DT',DECODE(S.CNTR_SIZE,'H',QTY,0),0)))   DS_FL_4H,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'L',QTY,0),'DT',DECODE(S.CNTR_SIZE,'L',QTY,0),0)))   DS_FL_45,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'2',QTY,0),'DT',DECODE(S.CNTR_SIZE,'2',QTY,0),0),0))   DS_ET_20,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'3',QTY,0),'DT',DECODE(S.CNTR_SIZE,'3',QTY,0),0),0))   DS_ET_2H,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'4',QTY,0),'DT',DECODE(S.CNTR_SIZE,'4',QTY,0),0),0))   DS_ET_40,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'H',QTY,0),'DT',DECODE(S.CNTR_SIZE,'H',QTY,0),0),0))   DS_ET_4H,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'L',QTY,0),'DT',DECODE(S.CNTR_SIZE,'L',QTY,0),0),0))   DS_ET_45,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'2',QTY,0),'LI',DECODE(S.CNTR_SIZE,'2',QTY,0),0)))   LD_FL_20,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'3',QTY,0),'LI',DECODE(S.CNTR_SIZE,'3',QTY,0),0)))   LD_FL_2H,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'4',QTY,0),'LI',DECODE(S.CNTR_SIZE,'4',QTY,0),0)))   LD_FL_40,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'H',QTY,0),'LI',DECODE(S.CNTR_SIZE,'H',QTY,0),0)))   LD_FL_4H,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'L',QTY,0),'LI',DECODE(S.CNTR_SIZE,'L',QTY,0),0)))   LD_FL_45,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'2',QTY,0),'LI',DECODE(S.CNTR_SIZE,'2',QTY,0),0),0))   LD_ET_20,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'3',QTY,0),'LI',DECODE(S.CNTR_SIZE,'3',QTY,0),0),0))   LD_ET_2H,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'4',QTY,0),'LI',DECODE(S.CNTR_SIZE,'4',QTY,0),0),0))   LD_ET_40,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'H',QTY,0),'LI',DECODE(S.CNTR_SIZE,'H',QTY,0),0),0))   LD_ET_4H,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'L',QTY,0),'LI',DECODE(S.CNTR_SIZE,'L',QTY,0),0),0))   LD_ET_45,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'2',QTY,0),'DT',DECODE(S.CNTR_SIZE,'2',QTY,0),0))) +
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'2',QTY,0),'LI',DECODE(S.CNTR_SIZE,'2',QTY,0),0)))   TL_FL_20,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'3',QTY,0),'DT',DECODE(S.CNTR_SIZE,'3',QTY,0),0))) +
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'3',QTY,0),'LI',DECODE(S.CNTR_SIZE,'3',QTY,0),0)))   TL_FL_2H,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'4',QTY,0),'DT',DECODE(S.CNTR_SIZE,'4',QTY,0),0))) +
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'4',QTY,0),'LI',DECODE(S.CNTR_SIZE,'4',QTY,0),0)))   TL_FL_40,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'H',QTY,0),'DT',DECODE(S.CNTR_SIZE,'H',QTY,0),0))) +
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'H',QTY,0),'LI',DECODE(S.CNTR_SIZE,'H',QTY,0),0)))   TL_FL_4H,
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'L',QTY,0),'DT',DECODE(S.CNTR_SIZE,'L',QTY,0),0))) +
              --SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'L',QTY,0),'LI',DECODE(S.CNTR_SIZE,'L',QTY,0),0)))   TL_FL_45,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'2',QTY,0),'DT',DECODE(S.CNTR_SIZE,'2',QTY,0),0),0)) +
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'2',QTY,0),'LI',DECODE(S.CNTR_SIZE,'2',QTY,0),0),0))   TL_ET_20,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'3',QTY,0),'DT',DECODE(S.CNTR_SIZE,'3',QTY,0),0),0)) +
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'3',QTY,0),'LI',DECODE(S.CNTR_SIZE,'3',QTY,0),0),0))   TL_ET_2H,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'4',QTY,0),'DT',DECODE(S.CNTR_SIZE,'4',QTY,0),0),0)) +
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'4',QTY,0),'LI',DECODE(S.CNTR_SIZE,'4',QTY,0),0),0))   TL_ET_40,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'H',QTY,0),'DT',DECODE(S.CNTR_SIZE,'H',QTY,0),0),0)) +
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'H',QTY,0),'LI',DECODE(S.CNTR_SIZE,'H',QTY,0),0),0))   TL_ET_4H,
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'L',QTY,0),'DT',DECODE(S.CNTR_SIZE,'L',QTY,0),0),0)) +
              --SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'L',QTY,0),'LI',DECODE(S.CNTR_SIZE,'L',QTY,0),0),0))   TL_ET_45,
              --SUM(DECODE(S.CNTR_SIZE,'2',WEIGHT,0)) WT_20,
              --SUM(DECODE(S.CNTR_SIZE,'3',WEIGHT,0)) WT_2H,
              --SUM(DECODE(S.CNTR_SIZE,'4',WEIGHT,0)) WT_40,
              --SUM(DECODE(S.CNTR_SIZE,'H',WEIGHT,0)) WT_4H,
              --SUM(DECODE(S.CNTR_SIZE,'L',WEIGHT,0)) WT_45
              

              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'2',QTY,0),'DT',DECODE(S.CNTR_SIZE,'2',QTY,0),0)))+SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'A',QTY,0),'DT',DECODE(S.CNTR_SIZE,'A',QTY,0),0)))   DS_FL_20,
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'3',QTY,0),'DT',DECODE(S.CNTR_SIZE,'3',QTY,0),0)))   DS_FL_2H,
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'4',QTY,0),'DT',DECODE(S.CNTR_SIZE,'4',QTY,0),0)))+SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'B',QTY,0),'DT',DECODE(S.CNTR_SIZE,'B',QTY,0),0)))   DS_FL_40,
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'H',QTY,0),'DT',DECODE(S.CNTR_SIZE,'H',QTY,0),0)))   DS_FL_4H,
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'L',QTY,0),'DT',DECODE(S.CNTR_SIZE,'L',QTY,0),0)))   DS_FL_45,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'2',QTY,0),'DT',DECODE(S.CNTR_SIZE,'2',QTY,0),0),0))+SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'A',QTY,0),'DT',DECODE(S.CNTR_SIZE,'A',QTY,0),0),0))   DS_ET_20,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'3',QTY,0),'DT',DECODE(S.CNTR_SIZE,'3',QTY,0),0),0))   DS_ET_2H,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'4',QTY,0),'DT',DECODE(S.CNTR_SIZE,'4',QTY,0),0),0))+SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'B',QTY,0),'DT',DECODE(S.CNTR_SIZE,'B',QTY,0),0),0))   DS_ET_40,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'H',QTY,0),'DT',DECODE(S.CNTR_SIZE,'H',QTY,0),0),0))   DS_ET_4H,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'L',QTY,0),'DT',DECODE(S.CNTR_SIZE,'L',QTY,0),0),0))   DS_ET_45,
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'2',QTY,0),'LI',DECODE(S.CNTR_SIZE,'2',QTY,0),0)))+SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'A',QTY,0),'LI',DECODE(S.CNTR_SIZE,'A',QTY,0),0)))   LD_FL_20,
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'3',QTY,0),'LI',DECODE(S.CNTR_SIZE,'3',QTY,0),0)))   LD_FL_2H,
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'4',QTY,0),'LI',DECODE(S.CNTR_SIZE,'4',QTY,0),0)))+SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'B',QTY,0),'LI',DECODE(S.CNTR_SIZE,'B',QTY,0),0)))   LD_FL_40,
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'H',QTY,0),'LI',DECODE(S.CNTR_SIZE,'H',QTY,0),0)))   LD_FL_4H,
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'L',QTY,0),'LI',DECODE(S.CNTR_SIZE,'L',QTY,0),0)))   LD_FL_45,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'2',QTY,0),'LI',DECODE(S.CNTR_SIZE,'2',QTY,0),0),0))+SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'A',QTY,0),'LI',DECODE(S.CNTR_SIZE,'A',QTY,0),0),0))   LD_ET_20,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'3',QTY,0),'LI',DECODE(S.CNTR_SIZE,'3',QTY,0),0),0))   LD_ET_2H,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'4',QTY,0),'LI',DECODE(S.CNTR_SIZE,'4',QTY,0),0),0))+SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'B',QTY,0),'LI',DECODE(S.CNTR_SIZE,'B',QTY,0),0),0))   LD_ET_40,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'H',QTY,0),'LI',DECODE(S.CNTR_SIZE,'H',QTY,0),0),0))   LD_ET_4H,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'L',QTY,0),'LI',DECODE(S.CNTR_SIZE,'L',QTY,0),0),0))   LD_ET_45,

              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'2',QTY,0),'DT',DECODE(S.CNTR_SIZE,'2',QTY,0),0)))+
			  SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'A',QTY,0),'DT',DECODE(S.CNTR_SIZE,'A',QTY,0),0)))+
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'2',QTY,0),'LI',DECODE(S.CNTR_SIZE,'2',QTY,0),0)))+
			  SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'A',QTY,0),'LI',DECODE(S.CNTR_SIZE,'A',QTY,0),0)))   TL_FL_20,

              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'3',QTY,0),'DT',DECODE(S.CNTR_SIZE,'3',QTY,0),0)))+
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'3',QTY,0),'LI',DECODE(S.CNTR_SIZE,'3',QTY,0),0)))   TL_FL_2H,

              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'4',QTY,0),'DT',DECODE(S.CNTR_SIZE,'4',QTY,0),0)))+
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'B',QTY,0),'DT',DECODE(S.CNTR_SIZE,'B',QTY,0),0)))+
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'4',QTY,0),'LI',DECODE(S.CNTR_SIZE,'4',QTY,0),0)))+
			  SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'B',QTY,0),'LI',DECODE(S.CNTR_SIZE,'B',QTY,0),0)))   TL_FL_40,

              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'H',QTY,0),'DT',DECODE(S.CNTR_SIZE,'H',QTY,0),0)))+
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'H',QTY,0),'LI',DECODE(S.CNTR_SIZE,'H',QTY,0),0)))   TL_FL_4H,
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'L',QTY,0),'DT',DECODE(S.CNTR_SIZE,'L',QTY,0),0)))+
              SUM(DECODE(S.CNTR_TYPE,'E',0,DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'L',QTY,0),'LI',DECODE(S.CNTR_SIZE,'L',QTY,0),0)))   TL_FL_45,

              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'2',QTY,0),'DT',DECODE(S.CNTR_SIZE,'2',QTY,0),0),0))+
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'A',QTY,0),'DT',DECODE(S.CNTR_SIZE,'A',QTY,0),0),0))+
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'2',QTY,0),'LI',DECODE(S.CNTR_SIZE,'2',QTY,0),0),0))+
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'A',QTY,0),'LI',DECODE(S.CNTR_SIZE,'A',QTY,0),0),0))   TL_ET_20,

              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'3',QTY,0),'DT',DECODE(S.CNTR_SIZE,'3',QTY,0),0),0))+
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'3',QTY,0),'LI',DECODE(S.CNTR_SIZE,'3',QTY,0),0),0))   TL_ET_2H,

              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'4',QTY,0),'DT',DECODE(S.CNTR_SIZE,'4',QTY,0),0),0))+
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'B',QTY,0),'DT',DECODE(S.CNTR_SIZE,'B',QTY,0),0),0))+
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'4',QTY,0),'LI',DECODE(S.CNTR_SIZE,'4',QTY,0),0),0))+
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'B',QTY,0),'LI',DECODE(S.CNTR_SIZE,'B',QTY,0),0),0))   TL_ET_40,

              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'H',QTY,0),'DT',DECODE(S.CNTR_SIZE,'H',QTY,0),0),0))+
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'H',QTY,0),'LI',DECODE(S.CNTR_SIZE,'H',QTY,0),0),0))   TL_ET_4H,
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'DS',DECODE(S.CNTR_SIZE,'L',QTY,0),'DT',DECODE(S.CNTR_SIZE,'L',QTY,0),0),0))+
              SUM(DECODE(S.CNTR_TYPE,'E',DECODE(S.STATUS,'LM',DECODE(S.CNTR_SIZE,'L',QTY,0),'LI',DECODE(S.CNTR_SIZE,'L',QTY,0),0),0))   TL_ET_45,

              SUM(DECODE(S.CNTR_SIZE,'2',WEIGHT,0))+SUM(DECODE(S.CNTR_SIZE,'A',WEIGHT,0)) WT_20,
              SUM(DECODE(S.CNTR_SIZE,'3',WEIGHT,0)) WT_2H,
              SUM(DECODE(S.CNTR_SIZE,'4',WEIGHT,0))+SUM(DECODE(S.CNTR_SIZE,'B',WEIGHT,0)) WT_40,
              SUM(DECODE(S.CNTR_SIZE,'H',WEIGHT,0)) WT_4H,
              SUM(DECODE(S.CNTR_SIZE,'L',WEIGHT,0)) WT_45              


       FROM   TDR_SUMMARY S,
              ( SELECT   A.VSL_CD          VSL, 
                         A.SKD_VOY_NO      VOY, 
                         A.SKD_DIR_CD      DIR, 
                         A.VPS_PORT_CD     LOC, 
                         A.CLPT_IND_SEQ    CAL, 
                         A.SLAN_CD         LANE 
                FROM     VSK_VSL_PORT_SKD A
                WHERE    A.PORT_SKD_STS_CD = 'D'
#if (${slan_cd} != '')
                AND      A.SLAN_CD         LIKE @[slan_cd]||'%'                                                  --:lane_cd
#end
                AND      A.VPS_ETD_DT      BETWEEN TO_DATE(REPLACE(@[from_date],'-',''),'YYYYMMDD')              --:fm_dt
                                           AND     TO_DATE(REPLACE(@[to_date],'-',''),'YYYYMMDD') + 0.99999      --:to_dt
#if (${yd_cd} == 'All')
                AND      A.YD_CD           LIKE @[loc_cd]||'%' 
#else
                AND      A.YD_CD           LIKE @[loc_cd]||@[yd_cd]||'%' 
#end
              ) V,              --:yd_cd                                           
              MDM_LOCATION L, MDM_COUNTRY C, MDM_VSL_SVC_LANE T
       WHERE  S.VSL_CD   = V.VSL 
       AND    S.VOY_NO   = V.VOY 
       AND    S.DIR_CD   = V.DIR 
       AND    S.PORT_CD  = V.LOC
       AND    S.CALL_IND = V.CAL 
       AND    S.STATUS   IN ('DS','DT','LM','LI')
       AND    S.PORT_CD  = L.LOC_CD(+)
       AND    L.CNT_CD   = C.CNT_CD
       AND    DECODE(C.SCONTI_CD,'EE','E','EN','E','ES','E','EC','E','AO','T',
                'AF','A','AW','A','AE','A','AM','D','MS','S','MC','M','MN','M','1') IN ('A','E','M')
       AND    V.LANE     = T.VSL_SLAN_CD(+)
       AND    T.DELT_FLG = 'N'
#if (${opr_cd} != '')
       AND    S.OPR_CD   LIKE @[opr_cd]||'%'                                                            --:opr_cd (OWN Check시 'OWN', All Check시 Null)
#end       
#if (${option_cd} != '')
       AND    T.VSL_SVC_TP_CD LIKE @[option_cd]||'%'                                                    --:option_cd (Truck Check시 Null, Feeder Check시 'O')
#end       
       GROUP BY CUBE( S.PORT_CD, V.LANE, S.VSL_CD||S.VOY_NO||S.DIR_CD, S.OPR_CD) )
WHERE (C1 = 1 OR C2 = 1 OR C3 = 1 OR C4 = 1 OR C5 = 1)
ORDER BY DECODE(C3,1,'ZZZZZ',DECODE(C5,1,'YYYYY',PORT)), DECODE(C2,1,'ZZZ',LANE), VVD, DECODE(C1,1,'ZZZZ',DECODE(C3,1,'YYYY',OPR))			]]></sql>
			<params>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="from_date" type="12" value="" out="N"/>
				<param name="to_date" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="opr_cd" type="12" value="" out="N"/>
				<param name="option_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
