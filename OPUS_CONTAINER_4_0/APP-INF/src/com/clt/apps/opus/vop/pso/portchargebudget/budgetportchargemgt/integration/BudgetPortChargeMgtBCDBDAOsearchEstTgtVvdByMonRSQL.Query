<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BudgetPortChargeMgtBCDBDAOsearchEstTgtVvdByMonRSQL">
			<desc><![CDATA[Estimate Expense Creation을 하기 위해 이미 생성한 추정 대상 VVD를 Revenue Month 나 노선 별로 조회한다.
NYK Modify 2014.11.12 
Red : YD_Cd 가 존재 하지 않음.
Blue : XPR_DESC is null
Pink : no-rate, null 존재시 ]]></desc>
			<sql><![CDATA[
WITH V_ESTM_MON_VVD AS (
        SELECT TXTSDATE
             , TXTEDATE
             , EXE_YRMON
             , REV_YRMON
             , LANE
             , CHK
             , VVD
             , HVVD
             , VSL_CD
             , SKD_VOY_NO
             , SKD_DIR_CD
             , CLPT_IND_SEQ
             , DECODE(TURN_PORT_IND_CD,'N',DECODE(TURN_PORT_FLG,'Y','Y','N'),'Y') AS TURN_PORT_FLG
             , TURN_PORT_IND_CD
             , CLPT_SEQ
             , TURN_SKD_VOY_NO
             , TURN_SKD_DIR_CD
             , TURN_CLPT_IND_SEQ
             , VIR_TURN_PORT_FLG
             , VIR_TURN_PORT_IND_CD
             , TMNL_CODE
             , ESTM_USD_AMT
             , ACT_DT
             , TXTCOLOR
             , M.VSL_SLAN_DIR_SEQ
             , CASE WHEN TURN_PORT_IND_CD IN ('D','V','F') THEN VSL_CD||TURN_SKD_VOY_NO||TURN_SKD_DIR_CD||TURN_CLPT_IND_SEQ||TMNL_CODE
                    ELSE VSL_CD||SKD_VOY_NO||SKD_DIR_CD||CLPT_IND_SEQ||TMNL_CODE
               END AS KEY_VVD
          FROM (SELECT ''                                           AS TXTSDATE
                     , ''                                           AS TXTEDATE
                     , T1.EXE_YRMON                                 AS EXE_YRMON
                     , T1.REV_YRMON                                 AS REV_YRMON
                     , SUBSTR(T1.LANE,1,3)                          AS LANE
                     , ''                                           AS CHK
                     , T1.VSL_CD || T1.SKD_VOY_NO || T1.SKD_DIR_CD  AS VVD
                     , T1.VSL_CD || T1.SKD_VOY_NO || T1.SKD_DIR_CD  AS HVVD
                     , T1.VSL_CD                                    AS VSL_CD
                     , T1.SKD_VOY_NO                                AS SKD_VOY_NO
                     , T1.SKD_DIR_CD                                AS SKD_DIR_CD
                     , T1.YD_CD                                     AS TMNL_CODE
                     , T1.CLPT_IND_SEQ                              AS CLPT_IND_SEQ
                     , MAX(T1.TURN_PORT_FLG)                        AS TURN_PORT_FLG
                     , MAX(T1.TURN_PORT_IND_CD)                     AS TURN_PORT_IND_CD
                     , MIN(T1.CLPT_SEQ)                             AS CLPT_SEQ
                     , MAX(T1.TURN_SKD_VOY_NO)                      AS TURN_SKD_VOY_NO
                     , MAX(T1.TURN_SKD_DIR_CD)                      AS TURN_SKD_DIR_CD
                     , MAX(T1.TURN_CLPT_IND_SEQ)                    AS TURN_CLPT_IND_SEQ
                     , MAX(T1.VIR_TURN_PORT_FLG)                    AS VIR_TURN_PORT_FLG
                     , MAX(T1.VIR_TURN_PORT_IND_CD)                 AS VIR_TURN_PORT_IND_CD
                     , NVL(SUM(T2.INV_USD_AMT) , 0)                 AS ESTM_USD_AMT
                     , T2.ACT_DT                                    AS ACT_DT
                     , SUBSTR(MAX(CASE WHEN T1.YD_CD IS NULL OR (   SELECT 1
                                                                      FROM PSO_YD_CHG X
                                                                     WHERE X.YD_CD = T1.YD_CD
                                                                       AND TO_DATE(T1.VPS_ETD_DT,'YYYYMMDD') BETWEEN X.EFF_DT AND X.EXP_DT
                                                                       AND X.LST_FLG = 'Y'
                                                                       AND ROWNUM <= 1 ) IS NULL THEN '3Red'
                                       WHEN T2.XPR_DESC IS NULL THEN CASE WHEN T1.YD_CD IS NOT NULL OR (SELECT COUNT(X.YD_CD)
                                                                                                          FROM PSO_YD_CHG X
                                                                                                         WHERE X.YD_CD = T1.YD_CD
                                                                                                           AND TO_DATE(T1.VPS_ETD_DT,'YYYYMMDD') BETWEEN X.EFF_DT AND X.EXP_DT
                                                                                                           AND X.LST_FLG = 'Y' ) > 0 THEN '1Pink'
                                                                          ELSE '2Blue'
                                                                     END
                                       WHEN T2.XPR_DESC LIKE '%null%' OR T2.XPR_DESC LIKE '%no-rate%' OR T2.XPR_DESC LIKE '%no found%' OR T2.XPR_DESC LIKE '%[check]%' THEN '1Pink'
                                  END), 2) AS TXTCOLOR
                  FROM (SELECT /*+ALL_ROWS*/
                               DISTINCT '2' AS PSO_BZTP_CD
                             , GL.EXE_YRMON
                             , AV.VSL_CD
                             , AV.SKD_VOY_NO
                             , VP.SKD_DIR_CD
                             , NVL (VP.YD_CD, VP.VPS_PORT_CD) AS YD_CD
                             , AV.EXPN_YRMON AS REV_YRMON
                             , VP.SLAN_CD AS LANE
                             , VP.CLPT_SEQ
                             , VP.CLPT_IND_SEQ
                             , VP.TURN_PORT_FLG
                             , VP.TURN_PORT_IND_CD
                             , VP.TURN_SKD_VOY_NO
                             , VP.TURN_SKD_DIR_CD
                             , VP.TURN_CLPT_IND_SEQ
                             , (SELECT TURN_PORT_FLG
                                  FROM VSK_VSL_PORT_SKD
                                 WHERE VSL_CD =VP.VSL_CD
                                   AND SKD_VOY_NO =VP.TURN_SKD_VOY_NO
                                   AND SKD_DIR_CD =VP.TURN_SKD_DIR_CD
                                   AND VPS_PORT_CD =VP.VPS_PORT_CD
                                   AND CLPT_IND_SEQ =VP.TURN_CLPT_IND_SEQ ) AS VIR_TURN_PORT_FLG
                             , (SELECT TURN_PORT_IND_CD
                                  FROM VSK_VSL_PORT_SKD
                                 WHERE VSL_CD =VP.VSL_CD
                                   AND SKD_VOY_NO =VP.TURN_SKD_VOY_NO
                                   AND SKD_DIR_CD =VP.TURN_SKD_DIR_CD
                                   AND VPS_PORT_CD =VP.VPS_PORT_CD
                                   AND CLPT_IND_SEQ =VP.TURN_CLPT_IND_SEQ ) AS VIR_TURN_PORT_IND_CD
                             , TO_CHAR(VPS_ETD_DT , 'YYYYMMDD') AS VPS_ETD_DT
                          FROM PSO_TGT_VVD AV
                             , MDM_VSL_CNTR VS
                             , VSK_VSL_SKD VV
                             , VSK_VSL_PORT_SKD VP
                             , GL_ESTM_REV_VVD GL
                             , (SELECT EXE_YRMON
                                  FROM GL_ESTM_IF_ERP GE
                                 WHERE GE.EXE_YRMON     = REPLACE(@[exe_yrmon], '-','')
                                   AND GE.SYS_SRC_ID    = 'PSO'
                                   AND ROWNUM           = 1) GE
                         WHERE 1=1
                           AND GL.EXE_YRMON                     = GE.EXE_YRMON
                           AND GL.REV_YRMON                     BETWEEN REPLACE(@[txtsdate], '-','') AND REPLACE(@[txtedate], '-','')
                           AND GL.VSL_CD                        = AV.VSL_CD
                           AND GL.SKD_VOY_NO                    = AV.SKD_VOY_NO
                           AND GL.SKD_DIR_CD                    = AV.SKD_DIR_CD
                           AND GL.REV_YRMON                     = AV.EXPN_YRMON
                           AND AV.PSO_BZTP_CD                   = '2'
                           AND RTRIM (VS.CNTR_VSL_CLSS_CAPA)    IS NOT NULL
                           AND NVL(VV.ACT_CRR_CD, VS.CRR_CD)    = COM_CONSTANTMGR_PKG.COM_getCompanyCode_FNC()
                           AND AV.VSL_CD                        = VS.VSL_CD
                           AND AV.VSL_CD                        = VV.VSL_CD
                           AND AV.SKD_VOY_NO                    = VV.SKD_VOY_NO
                           AND AV.SKD_DIR_CD                    = VV.SKD_DIR_CD
                           AND AV.VSL_CD                        = VP.VSL_CD
                           AND AV.SKD_VOY_NO                    = VP.SKD_VOY_NO
                           AND AV.SKD_DIR_CD                    = VP.SKD_DIR_CD
                           AND NVL(VP.SKD_CNG_STS_CD, 'X')      <> 'S'
                           AND NVL(VP.VT_ADD_CALL_FLG, 'N')     = 'N'
        #if(${vvd}!='')
                           AND AV.VSL_CD || AV.SKD_VOY_NO || AV.SKD_DIR_CD LIKE @[vvd]||'%'
        #end
                           AND VP.SLAN_CD                       = NVL2(@[lane], @[lane], VP.SLAN_CD)
                       ) T1
                     , PSO_TGT_YD_EXPN T2
                 WHERE T1.PSO_BZTP_CD = T2.PSO_BZTP_CD(+)
                   AND T1.VSL_CD = T2.VSL_CD (+)
                   AND T1.SKD_VOY_NO = T2.SKD_VOY_NO (+)
                   AND T1.SKD_DIR_CD = T2.SKD_DIR_CD (+)
                   AND T1.YD_CD = T2.YD_CD (+)
                   AND T1.CLPT_IND_SEQ = T2.CLPT_IND_SEQ(+)
                 GROUP BY T1.EXE_YRMON
                     , T1.REV_YRMON
                     , T1.LANE
                     , T1.VSL_CD
                     , T1.SKD_VOY_NO
                     , T1.SKD_DIR_CD
                     , T1.YD_CD
                     , T1.CLPT_IND_SEQ
                     , T2.ACT_DT
               ) X
             , MDM_VSL_SVC_LANE_DIR M
         WHERE 1=1
        #if(${mismatched}!='')
           AND X.TXTCOLOR IN ('Blue', 'Red', 'Pink')
        #end
        #if(${port_cd}!='' && ${yard_cd}!='')
           AND X.TMNL_CODE = @[port_cd]||@[yard_cd]
        #elseif(${port_cd}!='' && ${yard_cd}=='')
           AND X.TMNL_CODE LIKE @[port_cd]||'%'
        #end
           AND X.LANE = M.VSL_SLAN_CD
           AND X.SKD_DIR_CD = M.VSL_SLAN_DIR_CD
         ORDER BY X.LANE
             , X.VSL_CD
             , X.SKD_VOY_NO
             , M.VSL_SLAN_DIR_SEQ
             , X.CLPT_SEQ
        )
--SELECT * FROM V_ESTM_MON_VVD;

SELECT X.TXTSDATE
     , X.TXTEDATE
     , X.EXE_YRMON
     , X.REV_YRMON
     , X.LANE
     , X.CHK
     , X.VVD
     , X.HVVD
     , X.VSL_CD
     , X.SKD_VOY_NO
     , X.SKD_DIR_CD
     , X.CLPT_IND_SEQ
     , X.TURN_PORT_FLG
     , X.TURN_PORT_IND_CD
     , X.CLPT_SEQ
     , X.TURN_SKD_VOY_NO
     , X.TURN_SKD_DIR_CD
     , X.TURN_CLPT_IND_SEQ
     , X.VIR_TURN_PORT_FLG
     , X.VIR_TURN_PORT_IND_CD
     , X.TMNL_CODE
#if(${hide_vrtl_port_flg} !='' && ${hide_vrtl_port_flg} == 'Y')
/*Virtual port를 제외하고 기존 Turnning port에 amount Sum*/
     , X.SUM_ESTM_USD_AMT AS ESTM_USD_AMT
#else
/*Turnning , Virtual port 모두 보여준다.*/
     , X.ESTM_USD_AMT AS ESTM_USD_AMT
#end
     , X.ACT_DT
     , X.TXTCOLOR
     , X.ESTM_USD_AMT AS ORI_ESTM_USD_AMT
     , X.SUM_ESTM_USD_AMT AS ORI_SUM_ESTM_USD_AMT
  FROM (SELECT X.*
             , SUM(ESTM_USD_AMT) OVER (PARTITION BY X.KEY_VVD) AS SUM_ESTM_USD_AMT
          FROM (SELECT *
                  FROM V_ESTM_MON_VVD
                ) X
       ) X
 WHERE 1=1
#if(${hide_vrtl_port_flg} !='' && ${hide_vrtl_port_flg} == 'Y')
/*Virtual port를 제외하고 기존 Turnning port에 amount Sum*/
   AND X.TURN_PORT_IND_CD NOT IN ('D','V','F')
#end
 ORDER BY X.LANE
     , X.VSL_CD
     , X.SKD_VOY_NO
     , X.VSL_SLAN_DIR_SEQ
     , X.CLPT_SEQ			]]></sql>
			<params>
				<param name="exe_yrmon" type="12" value="" out="N"/>
				<param name="txtsdate" type="12" value="" out="N"/>
				<param name="txtedate" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="port_cd" type="12" value="" out="N"/>
				<param name="yard_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
