<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GEMPlanningPerformanceDBDAOSearchRqstInfoRSQL">
			<desc><![CDATA[유형별(계획비용,추가배정,예산이관) Request 요청된 정보를 상세조회한다]]></desc>
			<sql><![CDATA[
SELECT A.GEN_EXPN_RQST_NO
,A.GEN_EXPN_RQST_NO GEN_EXPN_RQST_NO1
,A.GEN_EXPN_RQST_NO GEN_EXPN_RQST_NO2
,A.GEN_EXPN_RQST_NO GEN_EXPN_RQST_NO3
,A.GEN_EXPN_RQST_NO GEN_EXPN_RQST_NO4
,MAX(A.GEN_EXPN_CD) GEN_EXPN_CD
,MAX(A.GEN_EXPN_RQST_SEQ) GEN_EXPN_RQST_SEQ
, 'Office' FIELD_ONE
, 'Expense' FIELD_TWO
, 'Office' FIELD_TREE
, 'Expense' FIELD_FOUR
, 'CUR' FIELD_ONE1
, 'UNIT' FIELD_TWO1
, 'CUR' FIELD_TREE1
, 'UNIT' FIELD_FOUR1
, 'RQST AMT' FIELD_ONE2
,NVL(MAX (CASE
WHEN A.GEN_EXPN_TRNS_DIV_CD = 'F'
AND     A.GEN_EXPN_APRO_STEP_CD = 'RQ'
THEN   A.JAN_AMT
+ A.FEB_AMT
+ A.MAR_AMT
+ A.APR_AMT
+ A.MAY_AMT
+ A.JUN_AMT
+ A.JUL_AMT
+ A.AUG_AMT
+ A.SEP_AMT
+ A.OCT_AMT
+ A.NOV_AMT
+ A.DEC_AMT
END
),0) FIELD_TWO2
, 'RQST AMT' FIELD_TREE2
,NVL(MAX (CASE
WHEN A.GEN_EXPN_TRNS_DIV_CD = 'T'
AND     A.GEN_EXPN_APRO_STEP_CD = 'RQ'
THEN   A.JAN_AMT
+ A.FEB_AMT
+ A.MAR_AMT
+ A.APR_AMT
+ A.MAY_AMT
+ A.JUN_AMT
+ A.JUL_AMT
+ A.AUG_AMT
+ A.SEP_AMT
+ A.OCT_AMT
+ A.NOV_AMT
+ A.DEC_AMT
END
),0) FIELD_FOUR2
, 'Item NO' FIELD_ONE3
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'F', B.GEN_EXPN_ITM_NO, '  ')) FIELD_TWO3
, 'Item NO' FIELD_TREE3
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'T', B.GEN_EXPN_ITM_NO, '  ')) FIELD_FOUR3
, 'Item' FIELD_ONE4
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'F', B.GEN_EXPN_ITM_DESC, ' ')) FIELD_TWO4
, 'Item' FIELD_TREE4
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'T', B.GEN_EXPN_ITM_DESC, ' ')) FIELD_FOUR4
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'F', A.GEN_EXPN_CD, '')) FM_GEN_EXPN_CD
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'T', A.GEN_EXPN_CD, '')) TO_GEN_EXPN_CD
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'F', A.OFC_CD, '')) FM_OFC_CD
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'T', A.OFC_CD, '')) TO_OFC_CD
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'F', D.LOCL_CURR_CD, '')) FM_LOCL_CURR_CD
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'T', D.LOCL_CURR_CD, '')) TO_LOCL_CURR_CD
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'F', D.RQST_UT_VAL, '')) FM_RQST_UT_VAL
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'T', D.RQST_UT_VAL, '')) TO_RQST_UT_VAL
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'F', B.GEN_EXPN_ITM_NO, '  ')) FM_GEN_EXPN_ITM_NO
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'F', B.GEN_EXPN_ITM_NO, '  ')) FM_GEN_EXPN_ITM_NO1
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'T', B.GEN_EXPN_ITM_NO, '  ')) TO_GEN_EXPN_ITM_NO
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'T', B.GEN_EXPN_ITM_NO, '  ')) TO_GEN_EXPN_ITM_NO1
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'F', B.GEN_EXPN_ITM_DESC, ' ')) FM_GEN_EXPN_ITM_DESC
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'F', B.GEN_EXPN_ITM_DESC, ' ')) FM_GEN_EXPN_ITM_DESC1
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'T', B.GEN_EXPN_ITM_DESC, ' ')) TO_GEN_EXPN_ITM_DESC
,MAX (DECODE (A.GEN_EXPN_TRNS_DIV_CD, 'T', B.GEN_EXPN_ITM_DESC, ' ')) TO_GEN_EXPN_ITM_DESC1
,MAX (C.PLN_YRMON) PLN_YRMON
,NVL(MAX (CASE
WHEN A.GEN_EXPN_TRNS_DIV_CD = 'F'
AND     A.GEN_EXPN_APRO_STEP_CD = 'RQ'
THEN   A.JAN_AMT
+ A.FEB_AMT
+ A.MAR_AMT
+ A.APR_AMT
+ A.MAY_AMT
+ A.JUN_AMT
+ A.JUL_AMT
+ A.AUG_AMT
+ A.SEP_AMT
+ A.OCT_AMT
+ A.NOV_AMT
+ A.DEC_AMT
END
),0) FM_RQ_AMT
,NVL(MAX (CASE
WHEN A.GEN_EXPN_TRNS_DIV_CD = 'F'
AND     A.GEN_EXPN_APRO_STEP_CD = 'RQ'
THEN   A.JAN_AMT
+ A.FEB_AMT
+ A.MAR_AMT
+ A.APR_AMT
+ A.MAY_AMT
+ A.JUN_AMT
+ A.JUL_AMT
+ A.AUG_AMT
+ A.SEP_AMT
+ A.OCT_AMT
+ A.NOV_AMT
+ A.DEC_AMT
END
),0) FM_RQ_AMT1
,NVL(MAX (CASE
WHEN A.GEN_EXPN_TRNS_DIV_CD = 'T'
AND     A.GEN_EXPN_APRO_STEP_CD = 'RQ'
THEN   A.JAN_AMT
+ A.FEB_AMT
+ A.MAR_AMT
+ A.APR_AMT
+ A.MAY_AMT
+ A.JUN_AMT
+ A.JUL_AMT
+ A.AUG_AMT
+ A.SEP_AMT
+ A.OCT_AMT
+ A.NOV_AMT
+ A.DEC_AMT
END
),0) TO_RQ_AMT
,NVL(MAX (CASE
WHEN A.GEN_EXPN_TRNS_DIV_CD = 'T'
AND     A.GEN_EXPN_APRO_STEP_CD = 'RQ'
THEN   A.JAN_AMT
+ A.FEB_AMT
+ A.MAR_AMT
+ A.APR_AMT
+ A.MAY_AMT
+ A.JUN_AMT
+ A.JUL_AMT
+ A.AUG_AMT
+ A.SEP_AMT
+ A.OCT_AMT
+ A.NOV_AMT
+ A.DEC_AMT
END
),0) TO_RQ_AMT1
FROM GEM_APRO_STEP A, GEM_ITEM B, GEM_REQUEST C, GEM_OFFICE D
WHERE B.GEN_EXPN_RQST_NO = C.GEN_EXPN_RQST_NO
AND B.GEN_EXPN_RQST_NO = A.GEN_EXPN_RQST_NO
AND B.OFC_CD = A.OFC_CD
AND B.GEN_EXPN_CD = A.GEN_EXPN_CD
AND B.GEN_EXPN_ITM_NO = A.GEN_EXPN_ITM_NO
AND B.GEN_EXPN_TRNS_DIV_CD = A.GEN_EXPN_TRNS_DIV_CD
AND B.GEN_EXPN_RQST_SEQ = A.GEN_EXPN_RQST_SEQ
AND A.OFC_CD = D.OFC_CD(+)
AND C.PLN_YRMON LIKE @[pln_yrmon]||'%'
#if (${gen_expn_rqst_tp_cd} == 'EI') 
AND C.GEN_EXPN_RQST_TP_CD = 'EI'
#else 
AND C.GEN_EXPN_RQST_TP_CD IN ('ET','EA')
#end
#if(${gen_expn_rqst_seq} != '')
AND A.GEN_EXPN_RQST_SEQ = @[gen_expn_rqst_seq]
#end
#if(${gen_expn_trns_div_cd} != '')
AND A.GEN_EXPN_TRNS_DIV_CD = @[gen_expn_trns_div_cd]
#end
#if(${gen_expn_rqst_no} != '')
AND A.GEN_EXPN_RQST_NO = @[gen_expn_rqst_no]
#end
GROUP BY A.GEN_EXPN_RQST_NO, A.GEN_EXPN_RQST_SEQ			]]></sql>
			<params>
				<param name="pln_yrmon" type="12" value="" out="N"/>
				<param name="gen_expn_rqst_seq" type="12" value="" out="N"/>
				<param name="gen_expn_trns_div_cd" type="12" value="" out="N"/>
				<param name="gen_expn_rqst_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
