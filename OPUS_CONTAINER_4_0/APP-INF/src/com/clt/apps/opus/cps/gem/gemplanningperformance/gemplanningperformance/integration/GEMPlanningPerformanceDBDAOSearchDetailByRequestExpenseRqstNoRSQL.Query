<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GEMPlanningPerformanceDBDAOSearchDetailByRequestExpenseRqstNoRSQL">
			<desc><![CDATA[CPS_GEM_0019화면의 Request Expense의 Target이 Detail RQST NO인경우 ExcelDown 버튼 클릭시 조회]]></desc>
			<sql><![CDATA[
SELECT X.GEN_EXPN_RQST_NO
      ,X.OFC_STS
      ,X.RHQLBU_STS
      ,X.TIC_STS
      ,X.COM_STS
      ,X.OFC_CD
      ,X.RHQ_OFC_CD
      ,X.LOCL_CURR_CD
      ,X.RQST_UT_VAL
      ,X.GEN_EXPN_CD
      ,X.EXPN_ABBR_NM
      ,X.TIC_CD
      ,X.GEN_EXPN_ITM_NO
      ,X.GEN_EXPN_ITM_DESC
      ,X.JAN_AMT
      ,X.FEB_AMT    
      ,X.MAR_AMT 
      ,X.APR_AMT 
      ,X.MAY_AMT 
      ,X.JUN_AMT 
      ,X.JUL_AMT 
      ,X.AUG_AMT 
      ,X.SEP_AMT 
      ,X.OCT_AMT 
      ,X.NOV_AMT 
      ,X.DEC_AMT 
      ,X.OFC_TOTAL  
      ,X.RHQlBU_TOTAL
      ,X.TIC_TOTAL
      ,X.COM_TOTAL
      ,X.GEN_EXPN_CALC_BSS_DESC
      ,X.RQST_OPIN_RMK
      ,X.CRE_USR_ID
FROM (
SELECT A.GEN_EXPN_RQST_NO
      ,A.OFC_STS
      ,A.RHQLBU_STS
      ,A.TIC_STS
      ,A.COM_STS
      ,A.OFC_CD
      ,A.RHQ_OFC_CD
      ,A.LOCL_CURR_CD
      ,A.RQST_UT_VAL
      ,A.GEN_EXPN_CD
      ,A.EXPN_ABBR_NM
      ,A.TIC_CD
      ,A.GEN_EXPN_ITM_NO
      ,A.GEN_EXPN_ITM_DESC
      ,DECODE(@[sch_cur], 'LCL', A.JAN_AMT
                   , 'USD', (A.JAN_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.JAN_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) JAN_AMT
      ,DECODE(@[sch_cur], 'LCL', A.FEB_AMT
                   , 'USD', (A.FEB_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.FEB_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) FEB_AMT    
      ,DECODE(@[sch_cur], 'LCL', A.MAR_AMT
                   , 'USD', (A.MAR_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.MAR_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) MAR_AMT 
      ,DECODE(@[sch_cur], 'LCL', A.APR_AMT
                   , 'USD', (A.APR_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.APR_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) APR_AMT 
      ,DECODE(@[sch_cur], 'LCL', A.MAY_AMT
                   , 'USD', (A.MAY_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.MAY_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) MAY_AMT 
      ,DECODE(@[sch_cur], 'LCL', A.JUN_AMT
                   , 'USD', (A.JUN_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.JUN_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) JUN_AMT 
      ,DECODE(@[sch_cur], 'LCL', A.JUL_AMT
                   , 'USD', (A.JUL_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.JUL_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) JUL_AMT 
      ,DECODE(@[sch_cur], 'LCL', A.AUG_AMT
                   , 'USD', (A.AUG_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.AUG_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) AUG_AMT 
      ,DECODE(@[sch_cur], 'LCL', A.SEP_AMT
                   , 'USD', (A.SEP_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.SEP_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) SEP_AMT 
      ,DECODE(@[sch_cur], 'LCL', A.OCT_AMT
                   , 'USD', (A.OCT_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.OCT_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) OCT_AMT 
      ,DECODE(@[sch_cur], 'LCL', A.NOV_AMT
                   , 'USD', (A.NOV_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.NOV_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) NOV_AMT 
      ,DECODE(@[sch_cur], 'LCL', A.DEC_AMT
                   , 'USD', (A.DEC_AMT*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.DEC_AMT*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) DEC_AMT 
      ,DECODE(@[sch_cur], 'LCL', A.OFC_TOTAL
                   , 'USD', (A.OFC_TOTAL*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.OFC_TOTAL*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) OFC_TOTAL  
      ,DECODE(@[sch_cur], 'LCL', A.RHQlBU_TOTAL
                   , 'USD', (A.RHQlBU_TOTAL*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.RHQlBU_TOTAL*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) RHQlBU_TOTAL
      ,DECODE(@[sch_cur], 'LCL', A.TIC_TOTAL
                   , 'USD', (A.TIC_TOTAL*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.TIC_TOTAL*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) TIC_TOTAL
      ,DECODE(@[sch_cur], 'LCL', A.COM_TOTAL
                   , 'USD', (A.COM_TOTAL*A.RQST_UT_VAL)/B.USD_LOCL_XCH_RT
                   , 'KRW', ((((A.COM_TOTAL*A.RQST_UT_VAL)/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) COM_TOTAL
      ,A.GEN_EXPN_CALC_BSS_DESC
      ,A.RQST_OPIN_RMK
      ,A.CRE_USR_ID
  FROM (
        SELECT C.GEN_EXPN_RQST_NO
              ,MAX(DECODE(C.GEN_EXPN_APRO_STEP_CD, 'RQ', C.GEN_EXPN_APSTS_CD)) OFC_STS
              ,MAX(DECODE(C.GEN_EXPN_APRO_STEP_CD, 'HQ', C.GEN_EXPN_APSTS_CD)) RHQLBU_STS
              ,MAX(DECODE(C.GEN_EXPN_APRO_STEP_CD, 'TC', C.GEN_EXPN_APSTS_CD)) TIC_STS
              ,MAX(DECODE(C.GEN_EXPN_APRO_STEP_CD, 'CO', C.GEN_EXPN_APSTS_CD)) COM_STS
              ,C.OFC_CD
              ,MAX(CASE WHEN D.GEN_EXPN_OFC_LVL = '4' AND B.OFC_CD <> D.PRNT_OFC_CD THEN D.PRNT_OFC_CD END) RHQ_OFC_CD
              ,MAX(D.LOCL_CURR_CD) LOCL_CURR_CD
              ,MAX(D.RQST_UT_VAL) RQST_UT_VAL
              ,C.GEN_EXPN_CD
              ,MAX(DECODE (@[sch_lang], 'K', E.KRN_ABBR_NM, 'E', E.ENG_ABBR_NM)) EXPN_ABBR_NM
              ,MAX(E.TIC_CD) TIC_CD
              ,C.GEN_EXPN_ITM_NO
              ,MAX(B.GEN_EXPN_ITM_DESC) GEN_EXPN_ITM_DESC
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.JAN_AMT ELSE 0 END) JAN_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.FEB_AMT ELSE 0 END) FEB_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.MAR_AMT ELSE 0 END) MAR_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.APR_AMT ELSE 0 END) APR_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.MAY_AMT ELSE 0 END) MAY_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.JUN_AMT ELSE 0 END) JUN_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.JUL_AMT ELSE 0 END) JUL_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.AUG_AMT ELSE 0 END) AUG_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.SEP_AMT ELSE 0 END) SEP_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.OCT_AMT ELSE 0 END) OCT_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.NOV_AMT ELSE 0 END) NOV_AMT
              ,SUM(CASE WHEN DECODE('ALL', 'RQ', 'RQ', 'HQ', 'HQ', 'TC', 'TC', 'CO', 'CO', 'ALL', B.CRNT_GEN_EXPN_APRO_STEP_CD ) = C.GEN_EXPN_APRO_STEP_CD THEN C.DEC_AMT ELSE 0 END) DEC_AMT
              ,SUM(DECODE(C.GEN_EXPN_APRO_STEP_CD, 'RQ', C.JAN_AMT+C.FEB_AMT+C.MAR_AMT+C.APR_AMT+C.MAY_AMT+C.JUN_AMT+C.JUL_AMT+C.AUG_AMT+C.SEP_AMT+C.OCT_AMT+C.NOV_AMT+C.DEC_AMT, 0)) OFC_TOTAL
              ,SUM(DECODE(C.GEN_EXPN_APRO_STEP_CD, 'HQ', C.JAN_AMT+C.FEB_AMT+C.MAR_AMT+C.APR_AMT+C.MAY_AMT+C.JUN_AMT+C.JUL_AMT+C.AUG_AMT+C.SEP_AMT+C.OCT_AMT+C.NOV_AMT+C.DEC_AMT, 0)) RHQlBU_TOTAL
              ,SUM(DECODE(C.GEN_EXPN_APRO_STEP_CD, 'TC', C.JAN_AMT+C.FEB_AMT+C.MAR_AMT+C.APR_AMT+C.MAY_AMT+C.JUN_AMT+C.JUL_AMT+C.AUG_AMT+C.SEP_AMT+C.OCT_AMT+C.NOV_AMT+C.DEC_AMT, 0)) TIC_TOTAL
              ,SUM(DECODE(C.GEN_EXPN_APRO_STEP_CD, 'CO', C.JAN_AMT+C.FEB_AMT+C.MAR_AMT+C.APR_AMT+C.MAY_AMT+C.JUN_AMT+C.JUL_AMT+C.AUG_AMT+C.SEP_AMT+C.OCT_AMT+C.NOV_AMT+C.DEC_AMT, 0)) COM_TOTAL
              ,MAX(B.GEN_EXPN_CALC_BSS_DESC) GEN_EXPN_CALC_BSS_DESC
              ,MAX(B.RQST_OPIN_RMK) RQST_OPIN_RMK
              ,MAX(A.CRE_USR_ID) CRE_USR_ID
          FROM GEM_REQUEST A
              ,GEM_ITEM B
              ,GEM_APRO_STEP C
              ,GEM_OFFICE D
              ,GEM_EXPENSE E
         WHERE A.PLN_YRMON LIKE @[sch_yrmon]||'%'
		   AND A.GEN_EXPN_RQST_TP_CD = 'EI'
           AND A.GEN_EXPN_RQST_NO = B.GEN_EXPN_RQST_NO
           AND B.GEN_EXPN_RQST_NO = C.GEN_EXPN_RQST_NO
           AND B.OFC_CD = C.OFC_CD
           AND B.GEN_EXPN_CD = C.GEN_EXPN_CD
           AND B.GEN_EXPN_ITM_NO = C.GEN_EXPN_ITM_NO
           AND B.GEN_EXPN_TRNS_DIV_CD = C.GEN_EXPN_TRNS_DIV_CD
           AND B.GEN_EXPN_RQST_SEQ = C.GEN_EXPN_RQST_SEQ
           AND B.OFC_CD = D.OFC_CD
           AND B.GEN_EXPN_CD = E.GEN_EXPN_CD
#if(${sch_app_div_gbn} != '')
           AND C.GEN_EXPN_APRO_STEP_CD = @[sch_app_div_gbn]
#end 
#if(${sch_status} != '')
           AND C.GEN_EXPN_APSTS_CD = @[sch_status]
#end
#if(${sch_com_div} != '')
           AND D.OFC_CO_DIV_CD = @[sch_com_div]
#end
#if(${sch_slay_flg} != '') 
           AND E.SALY_FLG = @[sch_slay_flg]
#end
#if(${sch_tic_cd} != '')
           AND E.TIC_CD = @[sch_tic_cd]
#end 
         GROUP BY C.GEN_EXPN_RQST_NO
                 ,C.OFC_CD
                 ,C.GEN_EXPN_CD
                 ,C.GEN_EXPN_ITM_NO
      ) A
     ,GEM_XCH_RT B
 WHERE B.ACCT_XCH_RT_YRMON = @[sch_yrmon]||'00'
   AND B.GEN_EXPN_XCH_RT_DIV_CD = 'I'
   AND B.CURR_CD = A.LOCL_CURR_CD
#if(${auth_flg} == 'YNYN')
   AND (A.OFC_CD = @[auth_ofc_cd] OR A.TIC_CD = @[auth_ofc_cd])
#end
#if(${auth_flg} == 'YYYN')
   AND (A.OFC_CD IN ( SELECT L_4 FROM GEM_OFC_LEVEL_V WHERE L_3 = @[auth_ofc_cd]) OR A.TIC_CD = @[auth_ofc_cd])
#end
) X      
WHERE 1=1
AND   X.OFC_CD IN (SELECT     OFC_CD
                   FROM       GEM_OFC_HIS
                   START WITH OFC_CD IN (SELECT DISTINCT L_4 CODE
                                         FROM            GEM_OFC_LEVEL_V
                                         WHERE           1 = 1
                                         #if(${sch_hohq_gbn} != '')
                                         AND             RGN_OFC_FLG = @[sch_hohq_gbn]
                                         #end
                                         #if(${sch_lvl3} != '' && ${ofc_expn_cd} != '') AND L_4 = @[sch_lvl3] #end	
                                         #if(${sch_lvl1} != '' && ${sch_lvl2} != '' && ${sch_lvl3} != '' && ${ofc_expn_cd} == '' ) AND L_4 = @[sch_lvl3] #end
                                         #if(${sch_lvl1} != '' && ${sch_lvl2} != '' && ${sch_lvl3} == '') AND L_3 = @[sch_lvl2] #end
                                         #if(${sch_lvl1} != '' && ${sch_lvl2} == '' && ${sch_lvl3} == '') AND L_2 = @[sch_lvl1] #end	
                                         #if(${sch_lvl3} == '' && ${ofc_expn_cd} != '') AND L_4 = @[ofc_expn_cd] #end	  
                                      )
                   CONNECT BY PRIOR OFC_CD = BFR_OFC_CD)
AND   X.GEN_EXPN_CD IN (SELECT L_4
                        FROM   GEM_EXPN_LEVEL_V
                        WHERE  1 = 1
                        AND    L_4 BETWEEN DECODE (@[sch_expense_from], '', '111111', @[sch_expense_from]) AND DECODE (@[sch_expense_to], '', '999999', @[sch_expense_to])
                        #if (${sch_expense_group} != '')
                        AND    L_1 = @[sch_expense_group]
                        #end
                       )			]]></sql>
			<params>
				<param name="sch_cur" type="12" value="" out="N"/>
				<param name="sch_lang" type="12" value="" out="N"/>
				<param name="sch_yrmon" type="12" value="" out="N"/>
				<param name="sch_app_div_gbn" type="12" value="" out="N"/>
				<param name="sch_status" type="12" value="" out="N"/>
				<param name="sch_com_div" type="12" value="" out="N"/>
				<param name="sch_slay_flg" type="12" value="" out="N"/>
				<param name="sch_tic_cd" type="12" value="" out="N"/>
				<param name="auth_ofc_cd" type="12" value="" out="N"/>
				<param name="sch_hohq_gbn" type="12" value="" out="N"/>
				<param name="sch_lvl3" type="12" value="" out="N"/>
				<param name="sch_lvl2" type="12" value="" out="N"/>
				<param name="sch_lvl1" type="12" value="" out="N"/>
				<param name="ofc_expn_cd" type="12" value="" out="N"/>
				<param name="sch_expense_from" type="12" value="" out="N"/>
				<param name="sch_expense_to" type="12" value="" out="N"/>
				<param name="sch_expense_group" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
